{
 "*": {
  "data": {
   "imports": [
    "tqdm"
   ]
  },
  "type": "star-import"
 },
 "mne": {
  "data": {
   "symbols_in_volume": {
    "deprecated_alias": {
     "line number": [
      126,
      128,
      130,
      132,
      134,
      136,
      138,
      140
     ]
    },
    "set_log_file": {
     "line number": [
      144
     ]
    },
    "set_log_level": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.__main__": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      6
     ]
    },
    "main": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "mne._ola": {
  "data": {},
  "type": "module"
 },
 "mne._ola._COLA": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "object": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "class"
 },
 "mne._ola._COLA.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      285
     ]
    },
    "ValueError": {
     "line number": [
      272,
      274,
      276,
      281
     ]
    },
    "_ensure_int": {
     "line number": [
      268,
      269,
      270
     ]
    },
    "callable": {
     "line number": [
      284
     ]
    },
    "float": {
     "line number": [
      303
     ]
    },
    "int": {
     "line number": [
      277,
      278
     ]
    },
    "isinstance": {
     "line number": [
      294
     ]
    },
    "len": {
     "line number": [
      304,
      307
     ]
    },
    "mne._ola._check_cola": {
     "line number": [
      297
     ]
    },
    "mne._ola._check_store": {
     "line number": [
      289
     ]
    },
    "numpy.arange": {
     "line number": [
      299
     ]
    },
    "scipy.signal.get_window": {
     "line number": [
      295
     ]
    },
    "str": {
     "line number": [
      294
     ]
    },
    "type": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._COLA._in_offset": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "property": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._COLA.feed": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      377
     ]
    },
    "TypeError": {
     "line number": [
      331,
      342
     ]
    },
    "ValueError": {
     "line number": [
      327,
      352
     ]
    },
    "all": {
     "line number": [
      375
     ]
    },
    "enumerate": {
     "line number": [
      329,
      383
     ]
    },
    "isinstance": {
     "line number": [
      330
     ]
    },
    "len": {
     "line number": [
      325,
      326,
      326,
      328,
      328,
      357,
      362,
      364,
      365,
      366,
      387,
      392
     ]
    },
    "numpy.concatenate": {
     "line number": [
      349
     ]
    },
    "numpy.empty": {
     "line number": [
      338
     ]
    },
    "numpy.max": {
     "line number": [
      380
     ]
    },
    "numpy.ndarray": {
     "line number": [
      330
     ]
    },
    "numpy.pad": {
     "line number": [
      363
     ]
    },
    "numpy.zeros": {
     "line number": [
      381
     ]
    },
    "range": {
     "line number": [
      365,
      369,
      392
     ]
    },
    "type": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._Interp2": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "object": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "mne._ola._Interp2.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      61
     ]
    },
    "ValueError": {
     "line number": [
      50,
      52,
      54,
      64,
      81
     ]
    },
    "int": {
     "line number": [
      47
     ]
    },
    "isinstance": {
     "line number": [
      56,
      58,
      60
     ]
    },
    "len": {
     "line number": [
      51,
      63,
      67
     ]
    },
    "list": {
     "line number": [
      58
     ]
    },
    "numpy.array": {
     "line number": [
      47
     ]
    },
    "numpy.array_equal": {
     "line number": [
      48
     ]
    },
    "numpy.ndarray": {
     "line number": [
      56,
      60
     ]
    },
    "numpy.unique": {
     "line number": [
      48
     ]
    },
    "tuple": {
     "line number": [
      58
     ]
    },
    "type": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._Interp2.__init__.val": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "numpy.where": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._Interp2.feed": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      193
     ]
    },
    "numpy.empty": {
     "line number": [
      191
     ]
    },
    "numpy.newaxis": {
     "line number": [
      196,
      199,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._Interp2.feed_generator": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "_ensure_int": {
     "line number": [
      88
     ]
    },
    "bool": {
     "line number": [
      92
     ]
    },
    "enumerate": {
     "line number": [
      121
     ]
    },
    "len": {
     "line number": [
      96,
      116,
      117,
      120
     ]
    },
    "max": {
     "line number": [
      120
     ]
    },
    "min": {
     "line number": [
      102,
      147
     ]
    },
    "numpy.arange": {
     "line number": [
      119
     ]
    },
    "numpy.cos": {
     "line number": [
      143
     ]
    },
    "numpy.linspace": {
     "line number": [
      140,
      144
     ]
    },
    "numpy.pi": {
     "line number": [
      144
     ]
    },
    "numpy.where": {
     "line number": [
      115
     ]
    },
    "numpy.zeros": {
     "line number": [
      92
     ]
    },
    "slice": {
     "line number": [
      105,
      159,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._Storer": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "object": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "class"
 },
 "mne._ola._Storer.__call__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      436
     ]
    },
    "ValueError": {
     "line number": [
      435
     ]
    },
    "all": {
     "line number": [
      434
     ]
    },
    "len": {
     "line number": [
      433,
      433
     ]
    },
    "slice": {
     "line number": [
      440
     ]
    },
    "zip": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._Storer.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      426
     ]
    },
    "enumerate": {
     "line number": [
      424
     ]
    },
    "isinstance": {
     "line number": [
      425
     ]
    },
    "numpy.ndarray": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._check_cola": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      412
     ]
    },
    "numpy.abs": {
     "line number": [
      410
     ]
    },
    "numpy.max": {
     "line number": [
      410
     ]
    },
    "numpy.median": {
     "line number": [
      409
     ]
    },
    "numpy.sum": {
     "line number": [
      405
     ]
    },
    "range": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola._check_store": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      216
     ]
    },
    "all": {
     "line number": [
      212
     ]
    },
    "callable": {
     "line number": [
      215
     ]
    },
    "isinstance": {
     "line number": [
      210,
      212,
      212
     ]
    },
    "list": {
     "line number": [
      212
     ]
    },
    "mne._ola._Storer": {
     "line number": [
      214
     ]
    },
    "numpy.ndarray": {
     "line number": [
      210,
      212
     ]
    },
    "tuple": {
     "line number": [
      212
     ]
    },
    "type": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne._ola.get_window": {
  "data": {
   "shadows": "scipy.signal.get_window"
  },
  "type": "import"
 },
 "mne._ola.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne._version": {
  "data": {},
  "type": "module"
 },
 "mne._version.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.baseline": {
  "data": {},
  "type": "module"
 },
 "mne.baseline._log_rescale": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.baseline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.baseline.rescale": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74,
      82,
      86
     ]
    },
    "fun": {
     "line number": [
      118,
      121
     ]
    },
    "int": {
     "line number": [
      76,
      84
     ]
    },
    "len": {
     "line number": [
      73,
      78,
      81
     ]
    },
    "mne.baseline._log_rescale": {
     "line number": [
      63
     ]
    },
    "numpy.mean": {
     "line number": [
      91
     ]
    },
    "numpy.where": {
     "line number": [
      72,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.baseline.rescale.fun": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.log10": {
     "line number": [
      114
     ]
    },
    "numpy.std": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._compute_beamformer": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._compute_beamformer.Beamformer": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.beamformer._compute_beamformer.Beamformer.__repr__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "len": {
     "line number": [
      425,
      426
     ]
    },
    "sum": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer.Beamformer.copy": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer.Beamformer.save": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "check_fname": {
     "line number": [
      458
     ]
    },
    "write_hdf5": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._check_proj_match": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31
     ]
    },
    "float": {
     "line number": [
      30
     ]
    },
    "make_projector": {
     "line number": [
      28
     ]
    },
    "numpy.allclose": {
     "line number": [
      29
     ]
    },
    "numpy.finfo": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._check_src_type": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._compute_beamformer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      363
     ]
    },
    "ValueError": {
     "line number": [
      217,
      221,
      230
     ]
    },
    "_check_option": {
     "line number": [
      181,
      211,
      214
     ]
    },
    "_compute_bf_terms": {
     "line number": [
      252,
      293
     ]
    },
    "_pl": {
     "line number": [
      200
     ]
    },
    "_reg_pinv": {
     "line number": [
      193
     ]
    },
    "_sym_mat_pow": {
     "line number": [
      352
     ]
    },
    "check_version": {
     "line number": [
      208
     ]
    },
    "dict": {
     "line number": [
      207
     ]
    },
    "len": {
     "line number": [
      271,
      359
     ]
    },
    "max": {
     "line number": [
      372
     ]
    },
    "mne.beamformer._compute_beamformer._reduce_leadfield_rank": {
     "line number": [
      240
     ]
    },
    "mne.beamformer._compute_beamformer._sym_inv_sm": {
     "line number": [
      262,
      304
     ]
    },
    "numpy.abs": {
     "line number": [
      269
     ]
    },
    "numpy.arange": {
     "line number": [
      271
     ]
    },
    "numpy.argsort": {
     "line number": [
      269
     ]
    },
    "numpy.eye": {
     "line number": [
      254
     ]
    },
    "numpy.inf": {
     "line number": [
      339
     ]
    },
    "numpy.linalg.eig": {
     "line number": [
      267
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      185
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      227
     ]
    },
    "numpy.matmul": {
     "line number": [
      260,
      261,
      263,
      281,
      306,
      335,
      351,
      352
     ]
    },
    "numpy.newaxis": {
     "line number": [
      254,
      281
     ]
    },
    "numpy.reshape": {
     "line number": [
      203,
      205,
      336
     ]
    },
    "numpy.sign": {
     "line number": [
      275
     ]
    },
    "numpy.sqrt": {
     "line number": [
      338,
      373
     ]
    },
    "numpy.sum": {
     "line number": [
      275
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      370
     ]
    },
    "warn": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._compute_beamformer._compute_bf_terms": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "numpy.matmul": {
     "line number": [
      243,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._compute_power": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "numpy.trace": {
     "line number": [
      401
     ]
    },
    "numpy.zeros": {
     "line number": [
      398
     ]
    },
    "range": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._prepare_beamformer_input": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78,
      82
     ]
    },
    "_check_option": {
     "line number": [
      51
     ]
    },
    "_check_src_normal": {
     "line number": [
      85
     ]
    },
    "_get_vertno": {
     "line number": [
      74
     ]
    },
    "_prepare_forward": {
     "line number": [
      64
     ]
    },
    "_restrict_forward_to_src_sel": {
     "line number": [
      57
     ]
    },
    "is_fixed_orient": {
     "line number": [
      60,
      69
     ]
    },
    "label_src_vertno_sel": {
     "line number": [
      56
     ]
    },
    "make_ad_hoc_cov": {
     "line number": [
      62
     ]
    },
    "make_projector": {
     "line number": [
      97
     ]
    },
    "numpy.ones": {
     "line number": [
      94
     ]
    },
    "numpy.sqrt": {
     "line number": [
      89,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._reduce_leadfield_rank": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.linalg.svd": {
     "line number": [
      106
     ]
    },
    "numpy.matmul": {
     "line number": [
      110
     ]
    },
    "numpy.newaxis": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._sym_inv_sm": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "_sym_mat_pow": {
     "line number": [
      124
     ]
    },
    "numpy.diagonal": {
     "line number": [
      130
     ]
    },
    "numpy.errstate": {
     "line number": [
      118,
      132
     ]
    },
    "numpy.isfinite": {
     "line number": [
      120
     ]
    },
    "numpy.newaxis": {
     "line number": [
      126,
      127
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      135
     ]
    },
    "range": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer._compute_beamformer.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._compute_beamformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._compute_beamformer.read_beamformer": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "Covariance": {
     "line number": [
      497
     ]
    },
    "CrossSpectralDensity": {
     "line number": [
      485
     ]
    },
    "Projection": {
     "line number": [
      494
     ]
    },
    "bool": {
     "line number": [
      490,
      495
     ]
    },
    "enumerate": {
     "line number": [
      493
     ]
    },
    "mne.beamformer._compute_beamformer.Beamformer": {
     "line number": [
      501
     ]
    },
    "read_hdf5": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._dics._apply_dics": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "_check_proj_match": {
     "line number": [
      266
     ]
    },
    "_check_src_type": {
     "line number": [
      258
     ]
    },
    "_make_stc": {
     "line number": [
      280
     ]
    },
    "combine_xyz": {
     "line number": [
      276
     ]
    },
    "enumerate": {
     "line number": [
      260
     ]
    },
    "isinstance": {
     "line number": [
      247
     ]
    },
    "len": {
     "line number": [
      254
     ]
    },
    "numpy.dot": {
     "line number": [
      267,
      272
     ]
    },
    "numpy.ndarray": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics._prepare_noise_csd": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "equalize_channels": {
     "line number": [
      235
     ]
    },
    "len": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics.apply_dics": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "_check_channels_spatial_filter": {
     "line number": [
      335
     ]
    },
    "_check_reference": {
     "line number": [
      329
     ]
    },
    "mne.beamformer._dics._apply_dics": {
     "line number": [
      338
     ]
    },
    "next": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics.apply_dics_csd": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "_check_src_type": {
     "line number": [
      472
     ]
    },
    "_compute_power": {
     "line number": [
      467
     ]
    },
    "_make_stc": {
     "line number": [
      474
     ]
    },
    "enumerate": {
     "line number": [
      455
     ]
    },
    "len": {
     "line number": [
      447,
      449
     ]
    },
    "numpy.dot": {
     "line number": [
      465,
      465
     ]
    },
    "numpy.mean": {
     "line number": [
      446
     ]
    },
    "numpy.zeros": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics.apply_dics_epochs": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      385
     ]
    },
    "_check_channels_spatial_filter": {
     "line number": [
      395
     ]
    },
    "_check_reference": {
     "line number": [
      382
     ]
    },
    "len": {
     "line number": [
      384
     ]
    },
    "list": {
     "line number": [
      401
     ]
    },
    "mne.beamformer._dics._apply_dics": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics.make_dics": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "Beamformer": {
     "line number": [
      223
     ]
    },
    "DeprecationWarning": {
     "line number": [
      163
     ]
    },
    "_check_depth": {
     "line number": [
      178
     ]
    },
    "_check_one_ch_type": {
     "line number": [
      173
     ]
    },
    "_check_option": {
     "line number": [
      166,
      167
     ]
    },
    "_check_rank": {
     "line number": [
      165
     ]
    },
    "_compute_beamformer": {
     "line number": [
      206
     ]
    },
    "_get_src_type": {
     "line number": [
      218
     ]
    },
    "_prepare_beamformer_input": {
     "line number": [
      183
     ]
    },
    "_subject_from_forward": {
     "line number": [
      219
     ]
    },
    "_validate_type": {
     "line number": [
      168
     ]
    },
    "enumerate": {
     "line number": [
      192
     ]
    },
    "equalize_channels": {
     "line number": [
      174
     ]
    },
    "len": {
     "line number": [
      171,
      221
     ]
    },
    "list": {
     "line number": [
      187
     ]
    },
    "mne.beamformer._dics._prepare_noise_csd": {
     "line number": [
      176
     ]
    },
    "numpy.array": {
     "line number": [
      212,
      214
     ]
    },
    "numpy.dot": {
     "line number": [
      202,
      202
     ]
    },
    "numpy.mean": {
     "line number": [
      170
     ]
    },
    "numpy.sum": {
     "line number": [
      221
     ]
    },
    "str": {
     "line number": [
      168
     ]
    },
    "warn": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._dics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._dics.tf_dics": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      636,
      639,
      650,
      652,
      656,
      659,
      662,
      742
     ]
    },
    "_check_rank": {
     "line number": [
      633
     ]
    },
    "_check_reference": {
     "line number": [
      632
     ]
    },
    "_check_src_type": {
     "line number": [
      789
     ]
    },
    "_make_stc": {
     "line number": [
      792
     ]
    },
    "any": {
     "line number": [
      651
     ]
    },
    "csd_fourier": {
     "line number": [
      728
     ]
    },
    "csd_morlet": {
     "line number": [
      737
     ]
    },
    "csd_multitaper": {
     "line number": [
      732
     ]
    },
    "int": {
     "line number": [
      667,
      678
     ]
    },
    "len": {
     "line number": [
      645,
      647,
      649,
      655,
      658,
      661
     ]
    },
    "mne.beamformer._dics.apply_dics_csd": {
     "line number": [
      758,
      762
     ]
    },
    "mne.beamformer._dics.make_dics": {
     "line number": [
      751
     ]
    },
    "numpy.array": {
     "line number": [
      784
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      644
     ]
    },
    "numpy.max": {
     "line number": [
      688
     ]
    },
    "numpy.mean": {
     "line number": [
      772,
      774
     ]
    },
    "numpy.min": {
     "line number": [
      687
     ]
    },
    "range": {
     "line number": [
      676,
      702,
      791
     ]
    },
    "warn": {
     "line number": [
      712
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._lcmv._apply_lcmv": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      229,
      242
     ]
    },
    "_check_src_type": {
     "line number": [
      271
     ]
    },
    "_make_stc": {
     "line number": [
      273
     ]
    },
    "combine_xyz": {
     "line number": [
      257
     ]
    },
    "enumerate": {
     "line number": [
      240
     ]
    },
    "isinstance": {
     "line number": [
      232
     ]
    },
    "len": {
     "line number": [
      241,
      241
     ]
    },
    "mne.beamformer._lcmv._proj_whiten_data": {
     "line number": [
      247
     ]
    },
    "numpy.abs": {
     "line number": [
      266
     ]
    },
    "numpy.dot": {
     "line number": [
      252,
      264
     ]
    },
    "numpy.ndarray": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._lcmv_source_power": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      470
     ]
    },
    "_get_src_type": {
     "line number": [
      527
     ]
    },
    "_make_stc": {
     "line number": [
      528
     ]
    },
    "_prepare_beamformer_input": {
     "line number": [
      479
     ]
    },
    "_reg_pinv": {
     "line number": [
      490
     ]
    },
    "_subject_from_forward": {
     "line number": [
      526
     ]
    },
    "max": {
     "line number": [
      517
     ]
    },
    "numpy.dot": {
     "line number": [
      485,
      485,
      493,
      500,
      504,
      511,
      515,
      515
     ]
    },
    "numpy.zeros": {
     "line number": [
      496
     ]
    },
    "pick_channels_cov": {
     "line number": [
      484
     ]
    },
    "pick_info": {
     "line number": [
      473
     ]
    },
    "range": {
     "line number": [
      497
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._proj_whiten_data": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "_check_proj_match": {
     "line number": [
      217
     ]
    },
    "numpy.dot": {
     "line number": [
      219,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "_check_channels_spatial_filter": {
     "line number": [
      318
     ]
    },
    "_check_reference": {
     "line number": [
      312
     ]
    },
    "mne.beamformer._lcmv._apply_lcmv": {
     "line number": [
      321
     ]
    },
    "next": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_cov": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "_check_channels_spatial_filter": {
     "line number": [
      445
     ]
    },
    "_check_src_type": {
     "line number": [
      457
     ]
    },
    "_compute_power": {
     "line number": [
      454
     ]
    },
    "_make_stc": {
     "line number": [
      459
     ]
    },
    "mne.beamformer._lcmv._proj_whiten_data": {
     "line number": [
      451,
      452
     ]
    },
    "pick_channels_cov": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_epochs": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "_check_channels_spatial_filter": {
     "line number": [
      363
     ]
    },
    "_check_reference": {
     "line number": [
      358
     ]
    },
    "mne.beamformer._lcmv._apply_lcmv": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_raw": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "_check_channels_spatial_filter": {
     "line number": [
      410
     ]
    },
    "_check_reference": {
     "line number": [
      406
     ]
    },
    "mne.beamformer._lcmv._apply_lcmv": {
     "line number": [
      414
     ]
    },
    "next": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.make_lcmv": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "Beamformer": {
     "line number": [
      202
     ]
    },
    "ValueError": {
     "line number": [
      154
     ]
    },
    "_check_depth": {
     "line number": [
      162
     ]
    },
    "_check_info_inv": {
     "line number": [
      147
     ]
    },
    "_check_one_ch_type": {
     "line number": [
      142
     ]
    },
    "_compute_beamformer": {
     "line number": [
      188
     ]
    },
    "_get_src_type": {
     "line number": [
      193
     ]
    },
    "_prepare_beamformer_input": {
     "line number": [
      167
     ]
    },
    "_simplify_info": {
     "line number": [
      141
     ]
    },
    "_subject_from_forward": {
     "line number": [
      196
     ]
    },
    "bool": {
     "line number": [
      200
     ]
    },
    "compute_rank": {
     "line number": [
      149,
      150
     ]
    },
    "list": {
     "line number": [
      170
     ]
    },
    "numpy.abs": {
     "line number": [
      182
     ]
    },
    "numpy.dot": {
     "line number": [
      178,
      178,
      182
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      181
     ]
    },
    "pick_channels_cov": {
     "line number": [
      172
     ]
    },
    "pick_info": {
     "line number": [
      148
     ]
    },
    "sum": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.tf_lcmv": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "Epochs": {
     "line number": [
      675
     ]
    },
    "ValueError": {
     "line number": [
      631,
      634,
      636,
      642
     ]
    },
    "_check_one_ch_type": {
     "line number": [
      651
     ]
    },
    "_check_option": {
     "line number": [
      629
     ]
    },
    "_check_rank": {
     "line number": [
      628
     ]
    },
    "_check_reference": {
     "line number": [
      627
     ]
    },
    "_get_src_type": {
     "line number": [
      742
     ]
    },
    "_make_stc": {
     "line number": [
      744
     ]
    },
    "any": {
     "line number": [
      635
     ]
    },
    "compute_covariance": {
     "line number": [
      712
     ]
    },
    "deprecated": {
     "line number": [
      532
     ]
    },
    "dict": {
     "line number": [
      672
     ]
    },
    "enumerate": {
     "line number": [
      743
     ]
    },
    "int": {
     "line number": [
      663,
      668
     ]
    },
    "len": {
     "line number": [
      630,
      630,
      633,
      633,
      649
     ]
    },
    "mne.beamformer._lcmv._lcmv_source_power": {
     "line number": [
      715
     ]
    },
    "numpy.array": {
     "line number": [
      738
     ]
    },
    "numpy.mean": {
     "line number": [
      726,
      728
     ]
    },
    "range": {
     "line number": [
      685
     ]
    },
    "warn": {
     "line number": [
      694
     ]
    },
    "zip": {
     "line number": [
      650,
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._rap_music": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._rap_music._apply_rap_music": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "_log_exp_var": {
     "line number": [
      139
     ]
    },
    "_make_dipoles_sparse": {
     "line number": [
      141
     ]
    },
    "_prepare_beamformer_input": {
     "line number": [
      56
     ]
    },
    "convert_forward_solution": {
     "line number": [
      55
     ]
    },
    "is_fixed_orient": {
     "line number": [
      54
     ]
    },
    "len": {
     "line number": [
      121,
      140
     ]
    },
    "list": {
     "line number": [
      81
     ]
    },
    "mne.beamformer._rap_music._compute_proj": {
     "line number": [
      113
     ]
    },
    "mne.beamformer._rap_music._compute_subcorr": {
     "line number": [
      87
     ]
    },
    "numpy.array": {
     "line number": [
      128,
      129
     ]
    },
    "numpy.diff": {
     "line number": [
      140
     ]
    },
    "numpy.dot": {
     "line number": [
      62,
      65,
      102,
      115
     ]
    },
    "numpy.einsum": {
     "line number": [
      114
     ]
    },
    "numpy.empty": {
     "line number": [
      73,
      74,
      75,
      76
     ]
    },
    "numpy.median": {
     "line number": [
      140
     ]
    },
    "numpy.newaxis": {
     "line number": [
      120,
      120
     ]
    },
    "numpy.sign": {
     "line number": [
      96,
      145
     ]
    },
    "pick_channels_forward": {
     "line number": [
      58
     ]
    },
    "pick_info": {
     "line number": [
      50
     ]
    },
    "range": {
     "line number": [
      82,
      85
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      65
     ]
    },
    "scipy.linalg.lstsq": {
     "line number": [
      118
     ]
    },
    "tuple": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._compute_proj": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      206
     ]
    },
    "numpy.identity": {
     "line number": [
      206
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._compute_subcorr": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "len": {
     "line number": [
      194
     ]
    },
    "max": {
     "line number": [
      195
     ]
    },
    "numpy.dot": {
     "line number": [
      197,
      199
     ]
    },
    "numpy.sum": {
     "line number": [
      192
     ]
    },
    "numpy.zeros": {
     "line number": [
      194
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      200
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      187,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._make_dipoles": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Dipole": {
     "line number": [
      180
     ]
    },
    "len": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.array": {
     "line number": [
      174
     ]
    },
    "numpy.newaxis.repeat": {
     "line number": [
      178,
      179
     ]
    },
    "range": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer._rap_music.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._rap_music.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._rap_music.rap_music": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "_check_info_inv": {
     "line number": [
      266
     ]
    },
    "mne.beamformer._rap_music._apply_rap_music": {
     "line number": [
      270
     ]
    },
    "pick_channels_evoked": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.resolution_matrix": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer.resolution_matrix._get_matrix_from_lcmv": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      95
     ]
    },
    "apply_lcmv": {
     "line number": [
      98
     ]
    },
    "len": {
     "line number": [
      88
     ]
    },
    "numpy.eye": {
     "line number": [
      92
     ]
    },
    "pick_channels": {
     "line number": [
      87
     ]
    },
    "pick_info": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.resolution_matrix.make_lcmv_resolution_matrix": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "mne.beamformer.resolution_matrix._get_matrix_from_lcmv": {
     "line number": [
      50
     ]
    },
    "pick_channels_forward": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.resolution_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer.tests.test_dics": {
  "data": {
   "symbols_in_volume": {
    "mne.beamformer.tests.test_dics.data_path": {
     "line number": [
      29,
      30,
      32,
      34,
      37
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      110
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      28
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      672
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      30,
      32,
      34,
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_dics.Beamformer": {
  "data": {
   "shadows": "mne.beamformer.Beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.CrossSpectralDensity": {
  "data": {
   "shadows": "mne.time_frequency.CrossSpectralDensity"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._assert_weight_norm": {
  "data": {
   "shadows": "mne.beamformer.tests.test_lcmv._assert_weight_norm"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._compute_nearest": {
  "data": {
   "shadows": "mne.surface._compute_nearest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._fwd_dist": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      307
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._load_forward": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "mne.beamformer.tests.test_dics.fname_fwd": {
     "line number": [
      43
     ]
    },
    "mne.beamformer.tests.test_dics.fname_fwd_vol": {
     "line number": [
      50
     ]
    },
    "mne.beamformer.tests.test_dics.mne": {
     "line number": [
      43,
      44,
      45,
      46,
      48,
      50
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      40
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._nearest_vol_ind": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "mne.surface._compute_nearest": {
     "line number": [
      391
     ]
    },
    "numpy.newaxis": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._prepare_beamformer_input": {
  "data": {
   "shadows": "mne.beamformer._compute_beamformer._prepare_beamformer_input"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._prepare_noise_csd": {
  "data": {
   "shadows": "mne.beamformer._dics._prepare_noise_csd"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._simulate_data": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "len": {
     "line number": [
      61,
      102
     ]
    },
    "mne.beamformer.tests.test_dics.mne": {
     "line number": [
      66,
      75,
      78,
      79,
      83,
      91,
      98
     ]
    },
    "mne.beamformer.tests.test_dics.subjects_dir": {
     "line number": [
      99
     ]
    },
    "mne.time_frequency.csd_morlet": {
     "line number": [
      96
     ]
    },
    "numpy.arange": {
     "line number": [
      59,
      78
     ]
    },
    "numpy.in1d": {
     "line number": [
      101
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      104
     ]
    },
    "numpy.newaxis": {
     "line number": [
      67
     ]
    },
    "numpy.pi": {
     "line number": [
      60
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      86
     ]
    },
    "numpy.sin": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._sym_mat_to_vector": {
  "data": {
   "shadows": "mne.time_frequency.csd._sym_mat_to_vector"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.apply_dics": {
  "data": {
   "shadows": "mne.beamformer.apply_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.apply_dics_csd": {
  "data": {
   "shadows": "mne.beamformer.apply_dics_csd"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.apply_dics_epochs": {
  "data": {
   "shadows": "mne.beamformer.apply_dics_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.compute_proj_evoked": {
  "data": {
   "shadows": "mne.proj.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.csd_morlet": {
  "data": {
   "shadows": "mne.time_frequency.csd_morlet"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.data_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_event": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_fwd": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_fwd_vol": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_raw": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.idx_param": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.make_dics": {
  "data": {
   "shadows": "mne.beamformer.make_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.make_projector": {
  "data": {
   "shadows": "mne.proj.make_projector"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.read_beamformer": {
  "data": {
   "shadows": "mne.beamformer.read_beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.subjects_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.test_apply_dics_csd": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      325
     ]
    },
    "mne.beamformer.apply_dics_csd": {
     "line number": [
      334
     ]
    },
    "mne.beamformer.make_dics": {
     "line number": [
      326,
      332
     ]
    },
    "mne.beamformer.tests.test_dics._fwd_dist": {
     "line number": [
      338
     ]
    },
    "mne.beamformer.tests.test_dics._load_forward": {
     "line number": [
      320
     ]
    },
    "mne.beamformer.tests.test_dics._simulate_data": {
     "line number": [
      322
     ]
    },
    "mne.beamformer.tests.test_dics.idx_param": {
     "line number": [
      313
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      325,
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_apply_dics_ori_inv": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "mne.beamformer.apply_dics_csd": {
     "line number": [
      360,
      371,
      381
     ]
    },
    "mne.beamformer.make_dics": {
     "line number": [
      356,
      377
     ]
    },
    "mne.beamformer.tests.test_dics._fwd_dist": {
     "line number": [
      362,
      383
     ]
    },
    "mne.beamformer.tests.test_dics._load_forward": {
     "line number": [
      350
     ]
    },
    "mne.beamformer.tests.test_dics._simulate_data": {
     "line number": [
      352
     ]
    },
    "mne.beamformer.tests.test_dics.idx_param": {
     "line number": [
      347
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      345,
      346
     ]
    },
    "numpy.eye": {
     "line number": [
      370
     ]
    },
    "numpy.newaxis": {
     "line number": [
      370
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      373
     ]
    },
    "numpy.triu_indices": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_apply_dics_timeseries": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      547
     ]
    },
    "ValueError": {
     "line number": [
      456,
      472,
      507,
      524
     ]
    },
    "copy.deepcopy": {
     "line number": [
      505
     ]
    },
    "isinstance": {
     "line number": [
      465,
      487
     ]
    },
    "len": {
     "line number": [
      466,
      466,
      485,
      488
     ]
    },
    "list": {
     "line number": [
      465,
      487
     ]
    },
    "mne.beamformer.apply_dics": {
     "line number": [
      464,
      499,
      508,
      512,
      519,
      525,
      535
     ]
    },
    "mne.beamformer.apply_dics_epochs": {
     "line number": [
      473,
      484,
      528,
      529,
      548
     ]
    },
    "mne.beamformer.make_dics": {
     "line number": [
      457,
      460,
      477,
      511,
      517,
      533
     ]
    },
    "mne.beamformer.tests.test_dics._fwd_dist": {
     "line number": [
      495,
      501,
      539
     ]
    },
    "mne.beamformer.tests.test_dics._load_forward": {
     "line number": [
      451
     ]
    },
    "mne.beamformer.tests.test_dics._nearest_vol_ind": {
     "line number": [
      538
     ]
    },
    "mne.beamformer.tests.test_dics._simulate_data": {
     "line number": [
      453
     ]
    },
    "mne.beamformer.tests.test_dics.idx_param": {
     "line number": [
      448
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      456,
      472,
      483,
      507,
      524,
      547,
      446
     ]
    },
    "mne.proj.compute_proj_evoked": {
     "line number": [
      514
     ]
    },
    "mne.proj.make_projector": {
     "line number": [
      515
     ]
    },
    "next": {
     "line number": [
      530
     ]
    },
    "numpy.any": {
     "line number": [
      520
     ]
    },
    "numpy.not_equal": {
     "line number": [
      520
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      469,
      491
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      467,
      468,
      489,
      490,
      518,
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_make_dics": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      149
     ]
    },
    "ValueError": {
     "line number": [
      126,
      144,
      147,
      154,
      160,
      166,
      171
     ]
    },
    "getattr": {
     "line number": [
      302
     ]
    },
    "isinstance": {
     "line number": [
      195,
      299,
      300
     ]
    },
    "len": {
     "line number": [
      180,
      182,
      185,
      207
     ]
    },
    "mne.beamformer.Beamformer": {
     "line number": [
      299,
      300
     ]
    },
    "mne.beamformer._compute_beamformer._prepare_beamformer_input": {
     "line number": [
      211
     ]
    },
    "mne.beamformer._dics._prepare_noise_csd": {
     "line number": [
      210
     ]
    },
    "mne.beamformer.make_dics": {
     "line number": [
      127,
      145,
      148,
      150,
      155,
      161,
      167,
      172,
      189,
      219,
      226,
      234,
      242,
      254,
      266,
      274,
      282,
      286
     ]
    },
    "mne.beamformer.read_beamformer": {
     "line number": [
      298
     ]
    },
    "mne.beamformer.tests.test_dics._load_forward": {
     "line number": [
      123
     ]
    },
    "mne.beamformer.tests.test_dics._simulate_data": {
     "line number": [
      125
     ]
    },
    "mne.beamformer.tests.test_dics.idx_param": {
     "line number": [
      116
     ]
    },
    "mne.beamformer.tests.test_dics.mne": {
     "line number": [
      130
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      126,
      144,
      147,
      149,
      154,
      160,
      166,
      171,
      113,
      117
     ]
    },
    "mne.beamformer.tests.test_lcmv._assert_weight_norm": {
     "line number": [
      216,
      222,
      229,
      240,
      248
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      114
     ]
    },
    "mne.time_frequency.CrossSpectralDensity": {
     "line number": [
      138,
      195
     ]
    },
    "mne.time_frequency.csd._sym_mat_to_vector": {
     "line number": [
      139
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      303
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      115
     ]
    },
    "numpy.abs": {
     "line number": [
      290,
      291
     ]
    },
    "numpy.allclose": {
     "line number": [
      277
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      290
     ]
    },
    "numpy.diag": {
     "line number": [
      270,
      277
     ]
    },
    "numpy.eye": {
     "line number": [
      197,
      265
     ]
    },
    "numpy.float64": {
     "line number": [
      302
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      181
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      193,
      257
     ]
    },
    "numpy.newaxis": {
     "line number": [
      136,
      265
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      129
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      270,
      290
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      197,
      198,
      199
     ]
    },
    "numpy.triu_indices": {
     "line number": [
      263
     ]
    },
    "os.path.join": {
     "line number": [
      296
     ]
    },
    "repr": {
     "line number": [
      205,
      206,
      207,
      208,
      209
     ]
    },
    "setattr": {
     "line number": [
      302
     ]
    },
    "str": {
     "line number": [
      207,
      208,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_real": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      441
     ]
    },
    "len": {
     "line number": [
      410
     ]
    },
    "mne.beamformer.apply_dics_csd": {
     "line number": [
      409,
      421,
      430,
      443
     ]
    },
    "mne.beamformer.make_dics": {
     "line number": [
      404,
      418,
      428
     ]
    },
    "mne.beamformer.tests.test_dics._fwd_dist": {
     "line number": [
      413,
      423,
      433
     ]
    },
    "mne.beamformer.tests.test_dics._load_forward": {
     "line number": [
      399
     ]
    },
    "mne.beamformer.tests.test_dics._nearest_vol_ind": {
     "line number": [
      431
     ]
    },
    "mne.beamformer.tests.test_dics._simulate_data": {
     "line number": [
      401
     ]
    },
    "mne.beamformer.tests.test_dics.idx_param": {
     "line number": [
      396
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      408,
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_tf_dics": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      568,
      629,
      632,
      637,
      642,
      647,
      652,
      657
     ]
    },
    "len": {
     "line number": [
      664,
      664
     ]
    },
    "mne.beamformer.apply_dics_csd": {
     "line number": [
      601
     ]
    },
    "mne.beamformer.make_dics": {
     "line number": [
      599
     ]
    },
    "mne.beamformer.tests.test_dics._fwd_dist": {
     "line number": [
      580,
      582
     ]
    },
    "mne.beamformer.tests.test_dics._load_forward": {
     "line number": [
      556
     ]
    },
    "mne.beamformer.tests.test_dics._simulate_data": {
     "line number": [
      558
     ]
    },
    "mne.beamformer.tests.test_dics.idx_param": {
     "line number": [
      553
     ]
    },
    "mne.beamformer.tests.test_dics.pytest": {
     "line number": [
      568,
      629,
      632,
      637,
      642,
      647,
      652,
      657,
      551
     ]
    },
    "mne.beamformer.tf_dics": {
     "line number": [
      569,
      575,
      610,
      620,
      630,
      633,
      638,
      643,
      648,
      653,
      658,
      666
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      552
     ]
    },
    "mne.time_frequency.csd_morlet": {
     "line number": [
      595
     ]
    },
    "numpy.all": {
     "line number": [
      669
     ]
    },
    "numpy.array": {
     "line number": [
      605
     ]
    },
    "numpy.errstate": {
     "line number": [
      665
     ]
    },
    "numpy.eye": {
     "line number": [
      617
     ]
    },
    "numpy.isnan": {
     "line number": [
      669
     ]
    },
    "numpy.newaxis": {
     "line number": [
      617
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      605,
      625,
      626
     ]
    },
    "numpy.triu_indices": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.tf_dics": {
  "data": {
   "shadows": "mne.beamformer.tf_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      32
     ]
    },
    "mne.beamformer.tests.test_external.data_path": {
     "line number": [
      21,
      22,
      23,
      24,
      26,
      28,
      30
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      20
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      111
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      22,
      23,
      24,
      26,
      28,
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_external._get_bf_data": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "mne.beamformer.tests.test_external.ft_data_path": {
     "line number": [
      41,
      45,
      59,
      63
     ]
    },
    "mne.beamformer.tests.test_external.mne": {
     "line number": [
      45,
      53
     ]
    },
    "mne.beamformer.tests.test_external.pytest": {
     "line number": [
      35
     ]
    },
    "mne.beamformer.tests.test_lcmv._get_data": {
     "line number": [
      37
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      35
     ]
    },
    "os.path.join": {
     "line number": [
      41,
      45,
      59,
      63
     ]
    },
    "scipy.io.savemat": {
     "line number": [
      61,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_external._get_data": {
  "data": {
   "shadows": "mne.beamformer.tests.test_lcmv._get_data"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.apply_lcmv": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.apply_lcmv_cov": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_cov"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.data_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_cov": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_event": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_fwd": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_fwd_vol": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_label": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_raw": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.ft_data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.reject": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.test_lcmv_fieldtrip": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "mne.beamformer.apply_lcmv": {
     "line number": [
      90
     ]
    },
    "mne.beamformer.apply_lcmv_cov": {
     "line number": [
      88
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      84
     ]
    },
    "mne.beamformer.tests.test_external._get_bf_data": {
     "line number": [
      81
     ]
    },
    "mne.beamformer.tests.test_external.ft_data_path": {
     "line number": [
      93
     ]
    },
    "mne.beamformer.tests.test_external.pytest": {
     "line number": [
      72
     ]
    },
    "mne.externals.pymatreader.read_mat": {
     "line number": [
      94
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      106,
      107
     ]
    },
    "numpy.sign": {
     "line number": [
      99
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      106,
      108
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      101
     ]
    },
    "os.path.join": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_external.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      40
     ]
    },
    "mne.beamformer.tests.test_lcmv.data_path": {
     "line number": [
      30,
      31,
      32,
      34,
      36,
      38
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      29
     ]
    },
    "os.path.join": {
     "line number": [
      30,
      31,
      32,
      34,
      36,
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_lcmv.Beamformer": {
  "data": {
   "shadows": "mne.beamformer.Beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._assert_weight_norm": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      984
     ]
    },
    "numpy.allclose": {
     "line number": [
      1005
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      1019
     ]
    },
    "numpy.diagflat": {
     "line number": [
      1019
     ]
    },
    "numpy.diagonal": {
     "line number": [
      1018
     ]
    },
    "numpy.eye": {
     "line number": [
      1002
     ]
    },
    "numpy.matmul": {
     "line number": [
      1001
     ]
    },
    "numpy.mean": {
     "line number": [
      1020
     ]
    },
    "numpy.newaxis": {
     "line number": [
      965,
      967,
      969,
      1002
     ]
    },
    "numpy.ones_like": {
     "line number": [
      1007
     ]
    },
    "numpy.repeat": {
     "line number": [
      1002
     ]
    },
    "numpy.sum": {
     "line number": [
      990
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1013,
      1021
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._get_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      97
     ]
    },
    "any": {
     "line number": [
      79
     ]
    },
    "events": {
     "line number": [
      53,
      93
     ]
    },
    "mne.beamformer.tests.test_lcmv._read_forward_solution_meg": {
     "line number": [
      57,
      59,
      61
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_cov": {
     "line number": [
      106
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_event": {
     "line number": [
      53
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd": {
     "line number": [
      55,
      58,
      60
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd_vol": {
     "line number": [
      61
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_label": {
     "line number": [
      52
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_raw": {
     "line number": [
      54
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      52,
      53,
      54,
      55,
      72,
      73,
      92,
      106,
      108,
      111
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      97
     ]
    },
    "mne.beamformer.tests.test_lcmv.reject": {
     "line number": [
      94
     ]
    },
    "numpy.concatenate": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv._lcmv_source_power": {
  "data": {
   "shadows": "mne.beamformer._lcmv._lcmv_source_power"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._prepare_beamformer_input": {
  "data": {
   "shadows": "mne.beamformer._compute_beamformer._prepare_beamformer_input"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._read_forward_solution_meg": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      46
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      45
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv_cov": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_cov"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv_epochs": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv_raw": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_raw"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.compute_rank": {
  "data": {
   "shadows": "mne.compute_rank"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.data_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.fname_cov": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_event": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_fwd": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_fwd_vol": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_label": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_raw": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.make_dics": {
  "data": {
   "shadows": "mne.beamformer.make_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.pick_channels_cov": {
  "data": {
   "shadows": "mne.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.read_beamformer": {
  "data": {
   "shadows": "mne.beamformer.read_beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.reject": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.set_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.set_current_comp"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.test_api": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": {
    "mne.beamformer.make_dics": {
     "line number": [
      1027
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      1026
     ]
    },
    "mne.fixes._get_args": {
     "line number": [
      1026,
      1027
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_depth_does_not_matter": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": {
    "mne.beamformer.apply_lcmv": {
     "line number": [
      889,
      892
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      889,
      892
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      884,
      885
     ]
    },
    "numpy.dot": {
     "line number": [
      898
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      899
     ]
    },
    "numpy.sign": {
     "line number": [
      898
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      900
     ]
    },
    "zip": {
     "line number": [
      896
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_cov": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "mne.EvokedArray": {
     "line number": [
      525,
      528
     ]
    },
    "mne.beamformer.apply_lcmv": {
     "line number": [
      526,
      529
     ]
    },
    "mne.beamformer.apply_lcmv_cov": {
     "line number": [
      522
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      515
     ]
    },
    "mne.beamformer.tests.test_lcmv._get_data": {
     "line number": [
      513
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      508,
      509
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      514
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      507
     ]
    },
    "mne.pick_channels_cov": {
     "line number": [
      518
     ]
    },
    "numpy.diag": {
     "line number": [
      531
     ]
    },
    "numpy.newaxis": {
     "line number": [
      531
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_ctf_comp": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      733
     ]
    },
    "RuntimeWarning": {
     "line number": [
      719
     ]
    },
    "ValueError": {
     "line number": [
      725
     ]
    },
    "events": {
     "line number": [
      715,
      716
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      726,
      727,
      734
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      713,
      715,
      716,
      721,
      722,
      723,
      724
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      719,
      725,
      733,
      707
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      711
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      708
     ]
    },
    "mne.io.compensator.set_current_comp": {
     "line number": [
      732
     ]
    },
    "os.path.join": {
     "line number": [
      711,
      712
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_maxfiltered": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": {
    "events": {
     "line number": [
      908,
      912
     ]
    },
    "len": {
     "line number": [
      911
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      918
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd": {
     "line number": [
      914
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_raw": {
     "line number": [
      906
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      906,
      907,
      908,
      912,
      913,
      914
     ]
    },
    "mne.compute_rank": {
     "line number": [
      915
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      903
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_raw": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "len": {
     "line number": [
      502,
      502,
      504
     ]
    },
    "mne.beamformer.apply_lcmv_raw": {
     "line number": [
      493
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      491
     ]
    },
    "mne.beamformer.tests.test_lcmv._get_data": {
     "line number": [
      484
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      490
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      480
     ]
    },
    "numpy.array": {
     "line number": [
      496,
      497
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      502
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_reg_proj": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      747
     ]
    },
    "ValueError": {
     "line number": [
      757
     ]
    },
    "dict": {
     "line number": [
      761
     ]
    },
    "events": {
     "line number": [
      743,
      746
     ]
    },
    "len": {
     "line number": [
      745
     ]
    },
    "mne.beamformer.apply_lcmv": {
     "line number": [
      770,
      771,
      772
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      751,
      758,
      762,
      764,
      767
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd": {
     "line number": [
      750
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_raw": {
     "line number": [
      742
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      742,
      743,
      746,
      748,
      749,
      750,
      766
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      747,
      757,
      738,
      739
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      737
     ]
    },
    "numpy.dot": {
     "line number": [
      780,
      781
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      792,
      793,
      795,
      796
     ]
    },
    "numpy.mean": {
     "line number": [
      782
     ]
    },
    "numpy.sqrt": {
     "line number": [
      776,
      782
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      779,
      783,
      791,
      794,
      801,
      806,
      810,
      811
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_source_power": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      563,
      568,
      573
     ]
    },
    "mne.beamformer._lcmv._lcmv_source_power": {
     "line number": [
      542,
      553,
      563,
      568,
      573
     ]
    },
    "mne.beamformer.tests.test_lcmv._get_data": {
     "line number": [
      540
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      563,
      568,
      573
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      536
     ]
    },
    "numpy.abs": {
     "line number": [
      559
     ]
    },
    "numpy.argmax": {
     "line number": [
      546
     ]
    },
    "numpy.max": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_vector": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      167
     ]
    },
    "isinstance": {
     "line number": [
      192,
      193
     ]
    },
    "len": {
     "line number": [
      133
     ]
    },
    "list": {
     "line number": [
      170
     ]
    },
    "mne.beamformer.apply_lcmv": {
     "line number": [
      190,
      191
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      168,
      180,
      185
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd": {
     "line number": [
      130
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_raw": {
     "line number": [
      123
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      123,
      127,
      127,
      130,
      131,
      137,
      139,
      141,
      142,
      166,
      192,
      193
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      167
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      120
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      159
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      158
     ]
    },
    "mne.simulation.simulate_evoked": {
     "line number": [
      144
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      179,
      184
     ]
    },
    "numpy.arange": {
     "line number": [
      160
     ]
    },
    "numpy.arccos": {
     "line number": [
      162,
      202
     ]
    },
    "numpy.concatenate": {
     "line number": [
      149
     ]
    },
    "numpy.diag": {
     "line number": [
      143
     ]
    },
    "numpy.eye": {
     "line number": [
      137
     ]
    },
    "numpy.in1d": {
     "line number": [
      149
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      161,
      200
     ]
    },
    "numpy.mean": {
     "line number": [
      163,
      199,
      203
     ]
    },
    "numpy.newaxis": {
     "line number": [
      161
     ]
    },
    "numpy.outer": {
     "line number": [
      174
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      162,
      202
     ]
    },
    "numpy.sum": {
     "line number": [
      162,
      202
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      194
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      152
     ]
    },
    "numpy.where": {
     "line number": [
      151,
      198
     ]
    },
    "range": {
     "line number": [
      171
     ]
    },
    "scipy.linalg.svdvals": {
     "line number": [
      176
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      198
     ]
    },
    "sum": {
     "line number": [
      133
     ]
    },
    "zip": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_localization_bias_fixed": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "len": {
     "line number": [
      832
     ]
    },
    "mne.beamformer.apply_lcmv": {
     "line number": [
      833
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      833
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      814
     ]
    },
    "numpy.abs": {
     "line number": [
      836
     ]
    },
    "numpy.argmax": {
     "line number": [
      838
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_localization_bias_free": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "mne.beamformer.apply_lcmv": {
     "line number": [
      874
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      874
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      842
     ]
    },
    "numpy.abs": {
     "line number": [
      878
     ]
    },
    "numpy.argmax": {
     "line number": [
      880
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      878
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_make_lcmv": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      309,
      379
     ]
    },
    "ValueError": {
     "line number": [
      321,
      323,
      328,
      333,
      338,
      347,
      371
     ]
    },
    "copy.deepcopy": {
     "line number": [
      343,
      369
     ]
    },
    "int": {
     "line number": [
      315,
      316
     ]
    },
    "isinstance": {
     "line number": [
      312,
      313
     ]
    },
    "len": {
     "line number": [
      297,
      298,
      299,
      361,
      393,
      393,
      399,
      428
     ]
    },
    "mne.beamformer.Beamformer": {
     "line number": [
      312,
      313
     ]
    },
    "mne.beamformer.apply_lcmv": {
     "line number": [
      219,
      235,
      256,
      285,
      347,
      360,
      364,
      381,
      404
     ]
    },
    "mne.beamformer.apply_lcmv_epochs": {
     "line number": [
      387,
      388,
      411
     ]
    },
    "mne.beamformer.apply_lcmv_raw": {
     "line number": [
      372
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      217,
      232,
      254,
      282,
      321,
      323,
      328,
      333,
      338,
      345,
      353,
      385,
      402,
      409,
      419,
      429
     ]
    },
    "mne.beamformer.read_beamformer": {
     "line number": [
      311
     ]
    },
    "mne.beamformer.tests.test_lcmv._get_data": {
     "line number": [
      214
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_label": {
     "line number": [
      273
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      273
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      309,
      321,
      323,
      328,
      333,
      338,
      347,
      359,
      371,
      379,
      206,
      209,
      210
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      208
     ]
    },
    "mne.pick_channels_cov": {
     "line number": [
      425
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      317
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      207
     ]
    },
    "next": {
     "line number": [
      390
     ]
    },
    "numpy.abs": {
     "line number": [
      222,
      238,
      251,
      258,
      260,
      267,
      279,
      289
     ]
    },
    "numpy.argmax": {
     "line number": [
      223,
      225,
      239,
      241,
      259,
      261
     ]
    },
    "numpy.concatenate": {
     "line number": [
      289,
      290
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      289
     ]
    },
    "numpy.max": {
     "line number": [
      228,
      228,
      246,
      246,
      265,
      265
     ]
    },
    "numpy.sum": {
     "line number": [
      222,
      238,
      258
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      291
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      365,
      405,
      413
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      390,
      421
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      279
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      396
     ]
    },
    "os.path.join": {
     "line number": [
      308
     ]
    },
    "repr": {
     "line number": [
      301,
      302,
      303,
      304,
      305
     ]
    },
    "str": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_make_lcmv_sphere": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      450
     ]
    },
    "abs": {
     "line number": [
      464
     ]
    },
    "isinstance": {
     "line number": [
      461,
      465
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      465
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      461
     ]
    },
    "mne.beamformer.apply_lcmv": {
     "line number": [
      460
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      451,
      457
     ]
    },
    "mne.beamformer.tests.test_lcmv._get_data": {
     "line number": [
      441
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      444,
      445,
      447
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      450,
      434,
      435,
      436
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      433
     ]
    },
    "numpy.argmax": {
     "line number": [
      469,
      471
     ]
    },
    "numpy.max": {
     "line number": [
      477,
      477
     ]
    },
    "numpy.sum": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_tf_lcmv": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      698
     ]
    },
    "ValueError": {
     "line number": [
      639,
      657,
      663,
      667,
      671,
      676,
      681,
      685,
      693
     ]
    },
    "dict": {
     "line number": [
      616
     ]
    },
    "events": {
     "line number": [
      582,
      601,
      690
     ]
    },
    "len": {
     "line number": [
      644,
      644
     ]
    },
    "mne.beamformer._lcmv._lcmv_source_power": {
     "line number": [
      634
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_event": {
     "line number": [
      582
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd": {
     "line number": [
      584
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_label": {
     "line number": [
      581
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_raw": {
     "line number": [
      583
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      581,
      582,
      583,
      584,
      592,
      593,
      601,
      617,
      620,
      622,
      632,
      690
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      639,
      657,
      663,
      667,
      671,
      676,
      681,
      685,
      693,
      698,
      578
     ]
    },
    "mne.beamformer.tests.test_lcmv.reject": {
     "line number": [
      602
     ]
    },
    "mne.beamformer.tf_lcmv": {
     "line number": [
      639,
      641,
      657,
      663,
      667,
      671,
      676,
      681,
      686,
      693,
      700
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      577
     ]
    },
    "numpy.mean": {
     "line number": [
      648
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      654,
      704
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      704
     ]
    },
    "zip": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_unit_noise_gain_formula": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      944
     ]
    },
    "dict": {
     "line number": [
      936,
      940
     ]
    },
    "events": {
     "line number": [
      930,
      933
     ]
    },
    "len": {
     "line number": [
      932
     ]
    },
    "mne.beamformer._compute_beamformer._prepare_beamformer_input": {
     "line number": [
      948
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      945,
      947
     ]
    },
    "mne.beamformer.tests.test_lcmv._assert_weight_norm": {
     "line number": [
      955
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_fwd": {
     "line number": [
      937
     ]
    },
    "mne.beamformer.tests.test_lcmv.fname_raw": {
     "line number": [
      929
     ]
    },
    "mne.beamformer.tests.test_lcmv.mne": {
     "line number": [
      929,
      930,
      933,
      934,
      936,
      937
     ]
    },
    "mne.beamformer.tests.test_lcmv.pytest": {
     "line number": [
      944,
      922,
      923,
      925,
      926
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      938
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.tf_lcmv": {
  "data": {
   "shadows": "mne.beamformer.tf_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music": {
  "data": {
   "symbols_in_volume": {
    "mne.beamformer.tests.test_rap_music.data_path": {
     "line number": [
      21,
      22,
      23
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      20
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      22,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_rap_music._check_dipoles": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "len": {
     "line number": [
      87,
      97
     ]
    },
    "mne.beamformer.tests.test_rap_music.mne": {
     "line number": [
      107,
      108
     ]
    },
    "numpy.abs": {
     "line number": [
      100,
      103
     ]
    },
    "numpy.array": {
     "line number": [
      90,
      91,
      101,
      104
     ]
    },
    "numpy.dot": {
     "line number": [
      100,
      103
     ]
    },
    "numpy.max": {
     "line number": [
      100,
      103
     ]
    },
    "numpy.where": {
     "line number": [
      83,
      85,
      93,
      95
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music._get_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "mne.beamformer.tests.test_rap_music.fname_ave": {
     "line number": [
      30
     ]
    },
    "mne.beamformer.tests.test_rap_music.fname_cov": {
     "line number": [
      40
     ]
    },
    "mne.beamformer.tests.test_rap_music.mne": {
     "line number": [
      30,
      35,
      40
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.assert_var_exp_log": {
  "data": {
   "shadows": "mne.minimum_norm.tests.test_inverse.assert_var_exp_log"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.data_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_ave": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_cov": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_fwd": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.rap_music": {
  "data": {
   "shadows": "mne.beamformer.rap_music"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.simu_data": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "len": {
     "line number": [
      64,
      67
     ]
    },
    "mne.beamformer.tests.test_rap_music.mne": {
     "line number": [
      72,
      74
     ]
    },
    "numpy.array": {
     "line number": [
      59
     ]
    },
    "numpy.exp": {
     "line number": [
      53,
      57
     ]
    },
    "numpy.pi": {
     "line number": [
      53,
      57
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      62
     ]
    },
    "numpy.sqrt": {
     "line number": [
      53,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_picks": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "len": {
     "line number": [
      199
     ]
    },
    "mne.beamformer.rap_music": {
     "line number": [
      198
     ]
    },
    "mne.beamformer.tests.test_rap_music.fname_ave": {
     "line number": [
      192
     ]
    },
    "mne.beamformer.tests.test_rap_music.fname_cov": {
     "line number": [
      197
     ]
    },
    "mne.beamformer.tests.test_rap_music.fname_fwd": {
     "line number": [
      196
     ]
    },
    "mne.beamformer.tests.test_rap_music.mne": {
     "line number": [
      192,
      196,
      197
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_simulated": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "mne.beamformer.rap_music": {
     "line number": [
      130,
      141,
      146,
      151
     ]
    },
    "mne.beamformer.tests.test_rap_music._check_dipoles": {
     "line number": [
      133,
      143,
      148,
      153
     ]
    },
    "mne.beamformer.tests.test_rap_music._get_data": {
     "line number": [
      118
     ]
    },
    "mne.beamformer.tests.test_rap_music.fname_fwd": {
     "line number": [
      119
     ]
    },
    "mne.beamformer.tests.test_rap_music.mne": {
     "line number": [
      119,
      120,
      121,
      122
     ]
    },
    "mne.beamformer.tests.test_rap_music.simu_data": {
     "line number": [
      126,
      139
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      115
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
     "line number": [
      132
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_sphere": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "mne.beamformer.rap_music": {
     "line number": [
      169
     ]
    },
    "mne.beamformer.tests.test_rap_music._get_data": {
     "line number": [
      159
     ]
    },
    "mne.beamformer.tests.test_rap_music.mne": {
     "line number": [
      160,
      161,
      165,
      180
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      156
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
     "line number": [
      171
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      168
     ]
    },
    "numpy.abs": {
     "line number": [
      181,
      182
     ]
    },
    "numpy.array": {
     "line number": [
      173
     ]
    },
    "numpy.dot": {
     "line number": [
      181,
      182
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      184
     ]
    },
    "numpy.max": {
     "line number": [
      181,
      182
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix": {
  "data": {
   "symbols_in_volume": {
    "mne.beamformer.tests.test_resolution_matrix.data_path": {
     "line number": [
      22,
      23,
      25,
      27,
      28,
      30
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      21
     ]
    },
    "os.path.join": {
     "line number": [
      22,
      23,
      25,
      27,
      28,
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_resolution_matrix.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_cov": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_evoked": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_fwd": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_inv": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_raw": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.make_lcmv_resolution_matrix": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv_resolution_matrix"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.subjects_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.test_resolution_matrix_lcmv": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      75
     ]
    },
    "mne.beamformer.make_lcmv": {
     "line number": [
      60
     ]
    },
    "mne.beamformer.make_lcmv_resolution_matrix": {
     "line number": [
      68,
      79
     ]
    },
    "mne.beamformer.tests.test_resolution_matrix.fname_evoked": {
     "line number": [
      47
     ]
    },
    "mne.beamformer.tests.test_resolution_matrix.fname_fwd": {
     "line number": [
      37
     ]
    },
    "mne.beamformer.tests.test_resolution_matrix.mne": {
     "line number": [
      37,
      40,
      43,
      47,
      48,
      48,
      53,
      74
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      33
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      88
     ]
    },
    "numpy.max": {
     "line number": [
      94
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      91,
      94
     ]
    },
    "zip": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_resolution_matrix.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels": {
  "data": {
   "symbols_in_volume": {
    "deprecated_alias": {
     "line number": [
      21,
      22,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.channels.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.channels._dig_montage_utils": {
  "data": {},
  "type": "module"
 },
 "mne.channels._dig_montage_utils.ElementTree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mne.channels._dig_montage_utils._parse_brainvision_dig_montage": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      87,
      87,
      104
     ]
    },
    "float": {
     "line number": [
      93,
      94,
      95
     ]
    },
    "numpy.array": {
     "line number": [
      93
     ]
    },
    "xml.etree.ElementTree.parse": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels._dig_montage_utils._read_dig_montage_egi": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "Bunch": {
     "line number": [
      72
     ]
    },
    "ValueError": {
     "line number": [
      30
     ]
    },
    "_check_fname": {
     "line number": [
      32
     ]
    },
    "dict": {
     "line number": [
      37,
      38
     ]
    },
    "float": {
     "line number": [
      46,
      46,
      47
     ]
    },
    "int": {
     "line number": [
      45,
      45
     ]
    },
    "len": {
     "line number": [
      57
     ]
    },
    "numpy.array": {
     "line number": [
      46
     ]
    },
    "warn": {
     "line number": [
      69
     ]
    },
    "xml.etree.ElementTree.parse": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels._dig_montage_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.channels": {
  "data": {},
  "type": "module"
 },
 "mne.channels.channels.ContainsMixin": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "object": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.channels.channels.ContainsMixin.__contains__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "_contains_ch_type": {
     "line number": [
      209,
      210,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.ContainsMixin.compensation_grade": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "get_current_comp": {
     "line number": [
      218
     ]
    },
    "property": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.ContainsMixin.get_channel_types": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "_get_channel_types": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.ContainsMixin.get_montage": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "_get_data_as_dict_from_dig": {
     "line number": [
      253
     ]
    },
    "make_dig_montage": {
     "line number": [
      266
     ]
    },
    "pick_types": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.Delaunay": {
  "data": {
   "shadows": "scipy.spatial.Delaunay"
  },
  "type": "import"
 },
 "mne.channels.channels.InterpolationMixin": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1073
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.channels.channels.InterpolationMixin.interpolate_bads": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      1131,
      1132,
      1133,
      1134
     ]
    },
    "_check_origin": {
     "line number": [
      1140
     ]
    },
    "_check_preload": {
     "line number": [
      1128
     ]
    },
    "_handle_default": {
     "line number": [
      1129
     ]
    },
    "_interpolate_bads_eeg": {
     "line number": [
      1142
     ]
    },
    "_interpolate_bads_meeg": {
     "line number": [
      1146
     ]
    },
    "_interpolate_bads_nirs": {
     "line number": [
      1147
     ]
    },
    "len": {
     "line number": [
      1136
     ]
    },
    "warn": {
     "line number": [
      1137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.channels.channels.SetChannelsMixin": {
  "data": {
   "lineno": 333
  },
  "type": "class"
 },
 "mne.channels.channels.SetChannelsMixin._get_channel_positions": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      384
     ]
    },
    "_picks_to_idx": {
     "line number": [
      379
     ]
    },
    "numpy.abs": {
     "line number": [
      382
     ]
    },
    "numpy.array": {
     "line number": [
      381
     ]
    },
    "numpy.sum": {
     "line number": [
      382,
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin._set_channel_positions": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      403,
      409,
      417
     ]
    },
    "len": {
     "line number": [
      402,
      402
     ]
    },
    "numpy.asarray": {
     "line number": [
      405
     ]
    },
    "numpy.float64": {
     "line number": [
      405
     ]
    },
    "zip": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.anonymize": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "anonymize_info": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.plot_sensors": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "plot_sensors": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.rename_channels": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "mne.channels.channels.rename_channels": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_channel_types": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      453,
      458,
      468
     ]
    },
    "dict": {
     "line number": [
      450
     ]
    },
    "list": {
     "line number": [
      474
     ]
    },
    "mne.channels.channels._check_set": {
     "line number": [
      464
     ]
    },
    "mne.channels.channels._human2fiff": {
     "line number": [
      457
     ]
    },
    "mne.channels.channels._human2unit": {
     "line number": [
      462,
      466,
      471,
      476
     ]
    },
    "mne.channels.channels._unit2human": {
     "line number": [
      467,
      472,
      472
     ]
    },
    "sorted": {
     "line number": [
      462,
      492
     ]
    },
    "warn": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_eeg_reference": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "set_eeg_reference": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_meas_date": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "_handle_meas_date": {
     "line number": [
      654
     ]
    },
    "hasattr": {
     "line number": [
      671
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "object": {
     "line number": [
      676
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.channels.channels.UpdateChannelsMixin._pick_drop_channels": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": {
    "_check_preload": {
     "line number": [
      930,
      932
     ]
    },
    "getattr": {
     "line number": [
      934,
      937,
      946
     ]
    },
    "hasattr": {
     "line number": [
      940,
      952
     ]
    },
    "isinstance": {
     "line number": [
      928,
      951,
      955
     ]
    },
    "pick_info": {
     "line number": [
      943
     ]
    },
    "setattr": {
     "line number": [
      948
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin._pick_projs": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      963
     ]
    },
    "hasattr": {
     "line number": [
      970
     ]
    },
    "set": {
     "line number": [
      964,
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.add_channels": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1031
     ]
    },
    "_check_preload": {
     "line number": [
      1012
     ]
    },
    "_merge_info": {
     "line number": [
      1038
     ]
    },
    "_validate_type": {
     "line number": [
      1008,
      1023
     ]
    },
    "all": {
     "line number": [
      1066,
      1069
     ]
    },
    "getattr": {
     "line number": [
      1061
     ]
    },
    "isinstance": {
     "line number": [
      1013,
      1016,
      1041,
      1060
     ]
    },
    "len": {
     "line number": [
      1052,
      1054,
      1066,
      1069
     ]
    },
    "list": {
     "line number": [
      1008
     ]
    },
    "mne.channels.channels.sys": {
     "line number": [
      1042
     ]
    },
    "numpy.array": {
     "line number": [
      1028
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1058,
      1061,
      1068
     ]
    },
    "numpy.memmap": {
     "line number": [
      1041,
      1048
     ]
    },
    "numpy.prod": {
     "line number": [
      1045
     ]
    },
    "range": {
     "line number": [
      1027
     ]
    },
    "sum": {
     "line number": [
      1044,
      1065
     ]
    },
    "tuple": {
     "line number": [
      1008
     ]
    },
    "type": {
     "line number": [
      1021
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.drop_channels": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      904
     ]
    },
    "ValueError": {
     "line number": [
      905,
      909,
      915
     ]
    },
    "all": {
     "line number": [
      903
     ]
    },
    "isinstance": {
     "line number": [
      899,
      903
     ]
    },
    "len": {
     "line number": [
      913,
      919
     ]
    },
    "numpy.arange": {
     "line number": [
      919
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      919
     ]
    },
    "str": {
     "line number": [
      899,
      903
     ]
    },
    "type": {
     "line number": [
      906,
      910
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      837
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick_channels": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "pick_channels": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick_types": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      772,
      779
     ]
    },
    "list": {
     "line number": [
      775,
      780
     ]
    },
    "pick_types": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.reorder_channels": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      872
     ]
    },
    "_check_excludes_includes": {
     "line number": [
      867
     ]
    },
    "list": {
     "line number": [
      868
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._ch_neighbor_adjacency": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1307,
      1312,
      1318
     ]
    },
    "all": {
     "line number": [
      1317
     ]
    },
    "bool": {
     "line number": [
      1320
     ]
    },
    "enumerate": {
     "line number": [
      1321
     ]
    },
    "isinstance": {
     "line number": [
      1316,
      1317
     ]
    },
    "len": {
     "line number": [
      1306,
      1306,
      1311,
      1320
     ]
    },
    "list": {
     "line number": [
      1316
     ]
    },
    "numpy.eye": {
     "line number": [
      1320
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      1323
     ]
    },
    "set": {
     "line number": [
      1310
     ]
    },
    "str": {
     "line number": [
      1317
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._check_set": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      327
     ]
    },
    "mne.channels.channels._human2fiff": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._compute_ch_adjacency": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1444
     ]
    },
    "_find_topomap_coords": {
     "line number": [
      1448,
      1450
     ]
    },
    "_pair_grad_sensors": {
     "line number": [
      1442
     ]
    },
    "_picks_by_type": {
     "line number": [
      1439
     ]
    },
    "bool": {
     "line number": [
      1455
     ]
    },
    "dict": {
     "line number": [
      1439
     ]
    },
    "len": {
     "line number": [
      1443,
      1443,
      1455
     ]
    },
    "numpy.eye": {
     "line number": [
      1455
     ]
    },
    "numpy.repeat": {
     "line number": [
      1464
     ]
    },
    "numpy.unique": {
     "line number": [
      1437
     ]
    },
    "range": {
     "line number": [
      1457,
      1458
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      1461
     ]
    },
    "scipy.sparse.lil_matrix": {
     "line number": [
      1463
     ]
    },
    "scipy.spatial.Delaunay": {
     "line number": [
      1451
     ]
    },
    "spatial_tris_adjacency": {
     "line number": [
      1452
     ]
    },
    "zip": {
     "line number": [
      1456
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._get_T1T2_mag_inds": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": {
    "pick_types": {
     "line number": [
      1512
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._get_ch_info": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": {
    "any": {
     "line number": [
      1536,
      1539,
      1542,
      1553,
      1559
     ]
    },
    "sum": {
     "line number": [
      1556
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._get_ch_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      95
     ]
    },
    "_contains_ch_type": {
     "line number": [
      88
     ]
    },
    "isinstance": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._get_meg_system": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._human2fiff": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "mne.channels.channels._human2unit": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "mne.channels.channels._recursive_flatten": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1220
     ]
    },
    "len": {
     "line number": [
      1219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels._unit2human": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "mne.channels.channels.combine_channels": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": {
    "EpochsArray": {
     "line number": [
      1762
     ]
    },
    "EvokedArray": {
     "line number": [
      1765
     ]
    },
    "KeyError": {
     "line number": [
      1697
     ]
    },
    "RawArray": {
     "line number": [
      1759
     ]
    },
    "TypeError": {
     "line number": [
      1704,
      1719
     ]
    },
    "ValueError": {
     "line number": [
      1698,
      1728,
      1733
     ]
    },
    "all": {
     "line number": [
      1727
     ]
    },
    "bool": {
     "line number": [
      1703,
      1718
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1688
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1688
     ]
    },
    "create_info": {
     "line number": [
      1756
     ]
    },
    "dict": {
     "line number": [
      1746
     ]
    },
    "functools.partial": {
     "line number": [
      1693
     ]
    },
    "getattr": {
     "line number": [
      1693
     ]
    },
    "isinstance": {
     "line number": [
      1683,
      1687,
      1692,
      1703,
      1718,
      1758,
      1761,
      1764
     ]
    },
    "len": {
     "line number": [
      1731,
      1742
     ]
    },
    "list": {
     "line number": [
      1684,
      1707
     ]
    },
    "method": {
     "line number": [
      1754
     ]
    },
    "numpy": {
     "line number": [
      1693
     ]
    },
    "numpy.array": {
     "line number": [
      1730
     ]
    },
    "numpy.swapaxes": {
     "line number": [
      1755
     ]
    },
    "numpy.take": {
     "line number": [
      1711,
      1753
     ]
    },
    "pick_channels": {
     "line number": [
      1722
     ]
    },
    "pick_types": {
     "line number": [
      1707
     ]
    },
    "range": {
     "line number": [
      1684
     ]
    },
    "set": {
     "line number": [
      1731,
      1732,
      1742
     ]
    },
    "str": {
     "line number": [
      1692
     ]
    },
    "type": {
     "line number": [
      1704,
      1719
     ]
    },
    "warn": {
     "line number": [
      1714,
      1743
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.channels.channels.equalize_channels": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      147
     ]
    },
    "len": {
     "line number": [
      170,
      170
     ]
    },
    "list": {
     "line number": [
      155,
      159
     ]
    },
    "numpy.argsort": {
     "line number": [
      158
     ]
    },
    "numpy.array": {
     "line number": [
      159
     ]
    },
    "set": {
     "line number": [
      152,
      153,
      154,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.find_ch_adjacency": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1367
     ]
    },
    "_check_option": {
     "line number": [
      1371
     ]
    },
    "channel_indices_by_type": {
     "line number": [
      1365
     ]
    },
    "channel_type": {
     "line number": [
      1369
     ]
    },
    "len": {
     "line number": [
      1366
     ]
    },
    "mne.channels.channels._compute_ch_adjacency": {
     "line number": [
      1412
     ]
    },
    "mne.channels.channels._get_ch_info": {
     "line number": [
      1375
     ]
    },
    "mne.channels.channels.read_ch_adjacency": {
     "line number": [
      1409
     ]
    },
    "sum": {
     "line number": [
      1366
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.fix_mag_coil_types": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1506,
      1506
     ]
    },
    "mne.channels.channels._get_T1T2_mag_inds": {
     "line number": [
      1501
     ]
    },
    "pick_types": {
     "line number": [
      1506
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.channels.channels.make_1020_channel_selections": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1609
     ]
    },
    "_validate_type": {
     "line number": [
      1602
     ]
    },
    "dict": {
     "line number": [
      1613
     ]
    },
    "enumerate": {
     "line number": [
      1614
     ]
    },
    "find_layout": {
     "line number": [
      1606
     ]
    },
    "int": {
     "line number": [
      1619
     ]
    },
    "numpy.array": {
     "line number": [
      1627
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.channels.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.channels.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.channels.channels.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.channels.channels.read_ch_adjacency": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1271
     ]
    },
    "_picks_to_idx": {
     "line number": [
      1278
     ]
    },
    "len": {
     "line number": [
      1278,
      1281,
      1281
     ]
    },
    "mne.channels.channels._ch_neighbor_adjacency": {
     "line number": [
      1282
     ]
    },
    "mne.channels.channels._recursive_flatten": {
     "line number": [
      1277,
      1279
     ]
    },
    "mne.channels.channels.os": {
     "line number": [
      1263
     ]
    },
    "os.path.dirname": {
     "line number": [
      1261
     ]
    },
    "os.path.isabs": {
     "line number": [
      1260
     ]
    },
    "os.path.join": {
     "line number": [
      1261,
      1274
     ]
    },
    "os.path.realpath": {
     "line number": [
      1261
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      1276
     ]
    },
    "str": {
     "line number": [
      1277,
      1279
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.rename_channels": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1177,
      1185,
      1194,
      1207
     ]
    },
    "_validate_type": {
     "line number": [
      1167,
      1190
     ]
    },
    "any": {
     "line number": [
      1176
     ]
    },
    "callable": {
     "line number": [
      1181
     ]
    },
    "dict": {
     "line number": [
      1173
     ]
    },
    "enumerate": {
     "line number": [
      1183,
      1200
     ]
    },
    "isinstance": {
     "line number": [
      1173
     ]
    },
    "len": {
     "line number": [
      1192,
      1193,
      1206,
      1206
     ]
    },
    "list": {
     "line number": [
      1169,
      1170,
      1174
     ]
    },
    "mapping": {
     "line number": [
      1182,
      1186
     ]
    },
    "numpy.array": {
     "line number": [
      1178,
      1178
     ]
    },
    "numpy.unique": {
     "line number": [
      1206
     ]
    },
    "sorted": {
     "line number": [
      1174
     ]
    },
    "type": {
     "line number": [
      1186
     ]
    },
    "zip": {
     "line number": [
      1211
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.channels.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.channels.channels.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.channels.data.neighbors": {
  "data": {},
  "type": "module"
 },
 "mne.channels.interpolation": {
  "data": {},
  "type": "module"
 },
 "mne.channels.interpolation._calc_g": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      55
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      57
     ]
    },
    "range": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._calc_h": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      31
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      33
     ]
    },
    "range": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._channel_frequencies": {
  "data": {
   "shadows": "mne.preprocessing.nirs._channel_frequencies"
  },
  "type": "import"
 },
 "mne.channels.interpolation._check_channels_ordered": {
  "data": {
   "shadows": "mne.preprocessing.nirs._check_channels_ordered"
  },
  "type": "import"
 },
 "mne.channels.interpolation._do_interp_dots": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      120
     ]
    },
    "numpy.matmul": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_eeg": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      136,
      137
     ]
    },
    "len": {
     "line number": [
      136,
      137,
      143,
      165,
      168
     ]
    },
    "mne.channels.interpolation._do_interp_dots": {
     "line number": [
      169
     ]
    },
    "mne.channels.interpolation._make_interpolation_matrix": {
     "line number": [
      166
     ]
    },
    "numpy.abs": {
     "line number": [
      158
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      156
     ]
    },
    "numpy.mean": {
     "line number": [
      157,
      157
     ]
    },
    "numpy.zeros": {
     "line number": [
      136,
      137
     ]
    },
    "pick_types": {
     "line number": [
      139
     ]
    },
    "warn": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_meeg": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "_map_meg_or_eeg_channels": {
     "line number": [
      227
     ]
    },
    "_simplify_info": {
     "line number": [
      204
     ]
    },
    "dict": {
     "line number": [
      203,
      208
     ]
    },
    "len": {
     "line number": [
      214,
      214
     ]
    },
    "mne.channels.interpolation._do_interp_dots": {
     "line number": [
      230
     ]
    },
    "numpy.in1d": {
     "line number": [
      221
     ]
    },
    "pick_channels": {
     "line number": [
      217
     ]
    },
    "pick_info": {
     "line number": [
      225,
      226
     ]
    },
    "pick_types": {
     "line number": [
      210,
      211
     ]
    },
    "slice": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_meg": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "mne.channels.interpolation._interpolate_bads_meeg": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_nirs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      266
     ]
    },
    "len": {
     "line number": [
      253,
      258
     ]
    },
    "mne.preprocessing.nirs._channel_frequencies": {
     "line number": [
      251
     ]
    },
    "mne.preprocessing.nirs._check_channels_ordered": {
     "line number": [
      252
     ]
    },
    "numpy.argmin": {
     "line number": [
      280
     ]
    },
    "numpy.array": {
     "line number": [
      264
     ]
    },
    "numpy.inf": {
     "line number": [
      276,
      278
     ]
    },
    "numpy.unique": {
     "line number": [
      251
     ]
    },
    "pick_channels": {
     "line number": [
      260
     ]
    },
    "scipy.spatial.distance.pdist": {
     "line number": [
      270
     ]
    },
    "scipy.spatial.distance.squareform": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation._make_interpolation_matrix": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "_normalize_vectors": {
     "line number": [
      92,
      93
     ]
    },
    "len": {
     "line number": [
      104
     ]
    },
    "mne.channels.interpolation._calc_g": {
     "line number": [
      98,
      99
     ]
    },
    "numpy.hstack": {
     "line number": [
      106,
      107,
      110
     ]
    },
    "numpy.ones": {
     "line number": [
      106,
      107,
      110
     ]
    },
    "numpy.vstack": {
     "line number": [
      106
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.interpolation.legval": {
  "data": {
   "shadows": "numpy.polynomial.legendre.legval"
  },
  "type": "import"
 },
 "mne.channels.interpolation.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.channels.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.interpolation.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "mne.channels.interpolation.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "mne.channels.montage": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.channels.montage.DigMontage": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "object": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.channels.montage.DigMontage.__add__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__iadd__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      242,
      255,
      261
     ]
    },
    "_format_dig_points": {
     "line number": [
      266,
      271
     ]
    },
    "_get_fid_coords": {
     "line number": [
      250,
      251
     ]
    },
    "is_fid_defined": {
     "line number": [
      253,
      253
     ]
    },
    "numpy.array_equal": {
     "line number": [
      260
     ]
    },
    "set": {
     "line number": [
      240
     ]
    },
    "sorted": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__iadd__.is_fid_defined": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      172
     ]
    },
    "_validate_type": {
     "line number": [
      168
     ]
    },
    "len": {
     "line number": [
      171,
      174
     ]
    },
    "list": {
     "line number": [
      167,
      168,
      169
     ]
    },
    "sum": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__repr__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "_count_points_by_type": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage._get_ch_pos": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "_get_dig_eeg": {
     "line number": [
      293
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      295
     ]
    },
    "len": {
     "line number": [
      294,
      294
     ]
    },
    "zip": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage._get_dig_names": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      302
     ]
    },
    "len": {
     "line number": [
      300,
      301
     ]
    },
    "numpy.array": {
     "line number": [
      299
     ]
    },
    "numpy.where": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.copy": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.plot": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      187
     ]
    },
    "plot_montage": {
     "line number": [
      190,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.rename_channels": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "create_info": {
     "line number": [
      208
     ]
    },
    "list": {
     "line number": [
      208
     ]
    },
    "rename_channels": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.save": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      221
     ]
    },
    "mne.channels.montage._check_get_coord_frame": {
     "line number": [
      220
     ]
    },
    "write_dig": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.channels.montage.VALID_SCALES": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "mne.channels.montage._BUILT_IN_MONTAGES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.channels.montage._check_get_coord_frame": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "len": {
     "line number": [
      60
     ]
    },
    "set": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._check_unit_and_get_scaling": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      312
     ]
    },
    "mne.channels.montage.VALID_SCALES": {
     "line number": [
      312,
      313
     ]
    },
    "sorted": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._get_montage_in_head": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "len": {
     "line number": [
      649
     ]
    },
    "mne.channels.montage.transform_to_head": {
     "line number": [
      652
     ]
    },
    "set": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._is_polhemus_fastscan": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "open": {
     "line number": [
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._read_eeglab_locations": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "_sph_to_cart": {
     "line number": [
      1000
     ]
    },
    "_topo_to_sph": {
     "line number": [
      999
     ]
    },
    "float": {
     "line number": [
      998
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      997
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      998
     ]
    },
    "str": {
     "line number": [
      997
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_elp_points": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "float": {
     "line number": [
      830
     ]
    },
    "mne.channels.montage.re": {
     "line number": [
      828,
      829
     ]
    },
    "numpy.array": {
     "line number": [
      830
     ]
    },
    "open": {
     "line number": [
      825
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_hsp_points": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": {
    "float": {
     "line number": [
      869
     ]
    },
    "get_hsp_fiducial": {
     "line number": [
      860,
      861,
      862
     ]
    },
    "int": {
     "line number": [
      867
     ]
    },
    "numpy.empty": {
     "line number": [
      873
     ]
    },
    "numpy.fromstring": {
     "line number": [
      867,
      868
     ]
    },
    "open": {
     "line number": [
      855
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_hsp_points.get_hsp_fiducial": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "float": {
     "line number": [
      853
     ]
    },
    "numpy.fromstring": {
     "line number": [
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._set_montage": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      800
     ]
    },
    "ValueError": {
     "line number": [
      740,
      744
     ]
    },
    "_backcompat_value": {
     "line number": [
      769
     ]
    },
    "_check_option": {
     "line number": [
      681
     ]
    },
    "_format_dig_points": {
     "line number": [
      792,
      797
     ]
    },
    "_on_missing": {
     "line number": [
      760
     ]
    },
    "_pick_chs": {
     "line number": [
      703,
      722
     ]
    },
    "_pl": {
     "line number": [
      752
     ]
    },
    "_validate_type": {
     "line number": [
      677
     ]
    },
    "all": {
     "line number": [
      710
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      731
     ]
    },
    "dict": {
     "line number": [
      763
     ]
    },
    "enumerate": {
     "line number": [
      776
     ]
    },
    "functools.partial": {
     "line number": [
      697
     ]
    },
    "isinstance": {
     "line number": [
      680,
      684
     ]
    },
    "len": {
     "line number": [
      718,
      738,
      738,
      742,
      742,
      750,
      752
     ]
    },
    "mne.channels.montage.DigMontage": {
     "line number": [
      677,
      684
     ]
    },
    "mne.channels.montage._BUILT_IN_MONTAGES": {
     "line number": [
      681
     ]
    },
    "mne.channels.montage._get_montage_in_head": {
     "line number": [
      685
     ]
    },
    "mne.channels.montage.make_standard_montage": {
     "line number": [
      682
     ]
    },
    "numpy.equal": {
     "line number": [
      710,
      711
     ]
    },
    "numpy.full": {
     "line number": [
      805
     ]
    },
    "numpy.nan": {
     "line number": [
      764,
      805
     ]
    },
    "numpy.zeros": {
     "line number": [
      719
     ]
    },
    "set": {
     "line number": [
      717,
      742
     ]
    },
    "str": {
     "line number": [
      677,
      680
     ]
    },
    "type": {
     "line number": [
      677
     ]
    },
    "zip": {
     "line number": [
      748,
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage._set_montage._backcompat_value": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "any": {
     "line number": [
      688
     ]
    },
    "numpy.concatenate": {
     "line number": [
      691
     ]
    },
    "numpy.full": {
     "line number": [
      689
     ]
    },
    "numpy.isnan": {
     "line number": [
      688
     ]
    },
    "numpy.nan": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.compute_dev_head_t": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      1145
     ]
    },
    "ValueError": {
     "line number": [
      1125,
      1138
     ]
    },
    "_fit_matched_points": {
     "line number": [
      1144
     ]
    },
    "_get_fid_coords": {
     "line number": [
      1123
     ]
    },
    "_quat_to_affine": {
     "line number": [
      1144
     ]
    },
    "float": {
     "line number": [
      1131,
      1135
     ]
    },
    "len": {
     "line number": [
      1137,
      1137,
      1137,
      1142,
      1142
     ]
    },
    "numpy.array": {
     "line number": [
      1128,
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.compute_native_head_t": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      1182
     ]
    },
    "_get_fid_coords": {
     "line number": [
      1165
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      1180
     ]
    },
    "numpy.eye": {
     "line number": [
      1169,
      1177
     ]
    },
    "warn": {
     "line number": [
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.channels.montage.get_builtin_montages": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "mne.channels.montage._BUILT_IN_MONTAGES": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.make_dig_montage": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "_make_dig_points": {
     "line number": [
      124
     ]
    },
    "_validate_type": {
     "line number": [
      119
     ]
    },
    "dict": {
     "line number": [
      119
     ]
    },
    "list": {
     "line number": [
      123
     ]
    },
    "mne.channels.montage.DigMontage": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.make_standard_montage": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      1264
     ]
    },
    "mne.channels.montage._BUILT_IN_MONTAGES": {
     "line number": [
      1264
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.montage.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.montage.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.channels.montage.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.channels.montage.read_custom_montage": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1067,
      1089
     ]
    },
    "_check_option": {
     "line number": [
      1063
     ]
    },
    "_coord_frame_const": {
     "line number": [
      1101
     ]
    },
    "_read_brainvision": {
     "line number": [
      1098
     ]
    },
    "_read_csd": {
     "line number": [
      1082
     ]
    },
    "_read_elc": {
     "line number": [
      1085
     ]
    },
    "_read_elp_besa": {
     "line number": [
      1095
     ]
    },
    "_read_sfp": {
     "line number": [
      1079
     ]
    },
    "_read_theta_phi_in_degrees": {
     "line number": [
      1091
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1074
     ]
    },
    "list": {
     "line number": [
      1063
     ]
    },
    "mne.channels.montage._read_eeglab_locations": {
     "line number": [
      1069
     ]
    },
    "mne.channels.montage.make_dig_montage": {
     "line number": [
      1073
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1070
     ]
    },
    "numpy.median": {
     "line number": [
      1070
     ]
    },
    "os.path.splitext": {
     "line number": [
      1062
     ]
    },
    "sum": {
     "line number": [
      1063
     ]
    },
    "zip": {
     "line number": [
      1074
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_captrack": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      617
     ]
    },
    "mne.channels.montage.read_dig_captrak": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_captrak": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      611
     ]
    },
    "_parse_brainvision_dig_montage": {
     "line number": [
      612
     ]
    },
    "mne.channels.montage.make_dig_montage": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_dat": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      395
     ]
    },
    "_check_dupes_odict": {
     "line number": [
      411
     ]
    },
    "_check_fname": {
     "line number": [
      383
     ]
    },
    "enumerate": {
     "line number": [
      390
     ]
    },
    "float": {
     "line number": [
      401
     ]
    },
    "len": {
     "line number": [
      394
     ]
    },
    "list": {
     "line number": [
      388,
      388
     ]
    },
    "mne.channels.montage.make_dig_montage": {
     "line number": [
      412
     ]
    },
    "numpy.array": {
     "line number": [
      401
     ]
    },
    "open": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_egi": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      571
     ]
    },
    "_read_dig_montage_egi": {
     "line number": [
      573
     ]
    },
    "mne.channels.montage.make_dig_montage": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_fif": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      442
     ]
    },
    "_read_dig_fif": {
     "line number": [
      446
     ]
    },
    "fiff_open": {
     "line number": [
      444
     ]
    },
    "mne.channels.montage.DigMontage": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_hpts": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "_str_names": {
     "line number": [
      529,
      529
     ]
    },
    "enumerate": {
     "line number": [
      536,
      538,
      539,
      542
     ]
    },
    "mne.channels.montage._check_unit_and_get_scaling": {
     "line number": [
      525
     ]
    },
    "mne.channels.montage.make_dig_montage": {
     "line number": [
      545
     ]
    },
    "numpy.array": {
     "line number": [
      531,
      539,
      542
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      527
     ]
    },
    "range": {
     "line number": [
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_polhemus_isotrak": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      938
     ]
    },
    "_check_option": {
     "line number": [
      916
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      936
     ]
    },
    "len": {
     "line number": [
      935,
      943
     ]
    },
    "mne.channels.montage._check_unit_and_get_scaling": {
     "line number": [
      913
     ]
    },
    "mne.channels.montage._read_isotrak_elp_points": {
     "line number": [
      919
     ]
    },
    "mne.channels.montage._read_isotrak_hsp_points": {
     "line number": [
      922
     ]
    },
    "mne.channels.montage.make_dig_montage": {
     "line number": [
      946
     ]
    },
    "os.path.splitext": {
     "line number": [
      915
     ]
    },
    "zip": {
     "line number": [
      936
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.read_polhemus_fastscan": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      988
     ]
    },
    "_check_option": {
     "line number": [
      985
     ]
    },
    "mne.channels.montage._check_unit_and_get_scaling": {
     "line number": [
      982
     ]
    },
    "mne.channels.montage._is_polhemus_fastscan": {
     "line number": [
      987
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      991
     ]
    },
    "os.path.splitext": {
     "line number": [
      984
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.montage.transform_to_head": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      342
     ]
    },
    "mne.channels.montage.compute_native_head_t": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests": {
  "data": {},
  "type": "module"
 },
 "mne.channels.tests.test_channels": {
  "data": {
   "symbols_in_volume": {
    "mne.channels.tests.test_channels.base_dir": {
     "line number": [
      31,
      32
     ]
    },
    "mne.channels.tests.test_channels.io_dir": {
     "line number": [
      30,
      33
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      452
     ]
    },
    "os.path.dirname": {
     "line number": [
      29
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      30,
      31,
      32,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.channels.tests.test_channels.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._ch_neighbor_adjacency": {
  "data": {
   "shadows": "mne.channels.channels._ch_neighbor_adjacency"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._compute_ch_adjacency": {
  "data": {
   "shadows": "mne.channels.channels._compute_ch_adjacency"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.base_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.combine_channels": {
  "data": {
   "shadows": "mne.channels.combine_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.eve_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.find_ch_adjacency": {
  "data": {
   "shadows": "mne.channels.find_ch_adjacency"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.fname_kit_157": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.io_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.make_1020_channel_selections": {
  "data": {
   "shadows": "mne.channels.make_1020_channel_selections"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.raw_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.read_ch_adjacency": {
  "data": {
   "shadows": "mne.channels.read_ch_adjacency"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_custom_montage": {
  "data": {
   "shadows": "mne.channels.read_custom_montage"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_eeglab": {
  "data": {
   "shadows": "mne.io.read_raw_eeglab"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.rename_channels": {
  "data": {
   "shadows": "mne.channels.rename_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.test_1020_selection": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      272
     ]
    },
    "dict": {
     "line number": [
      268
     ]
    },
    "enumerate": {
     "line number": [
      277,
      279
     ]
    },
    "input": {
     "line number": [
      271,
      272
     ]
    },
    "max": {
     "line number": [
      279
     ]
    },
    "min": {
     "line number": [
      277
     ]
    },
    "mne.channels.make_1020_channel_selections": {
     "line number": [
      272,
      274
     ]
    },
    "mne.channels.read_custom_montage": {
     "line number": [
      267
     ]
    },
    "mne.channels.tests.test_channels.base_dir": {
     "line number": [
      263,
      264,
      265
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      272
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      264,
      266
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      263
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      260
     ]
    },
    "mne.io.read_raw_eeglab": {
     "line number": [
      266
     ]
    },
    "os.path.join": {
     "line number": [
      263,
      264,
      265
     ]
    },
    "zip": {
     "line number": [
      268,
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_combine_channels": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      443,
      445
     ]
    },
    "TypeError": {
     "line number": [
      428,
      430
     ]
    },
    "ValueError": {
     "line number": [
      426,
      432,
      434
     ]
    },
    "dict": {
     "line number": [
      393,
      409,
      424,
      425,
      440,
      441,
      442
     ]
    },
    "len": {
     "line number": [
      405,
      405,
      449
     ]
    },
    "mne.Epochs": {
     "line number": [
      391
     ]
    },
    "mne.channels.combine_channels": {
     "line number": [
      396,
      397,
      399,
      400,
      401,
      404,
      410,
      411,
      412,
      427,
      429,
      431,
      433,
      435,
      444,
      446,
      447,
      448
     ]
    },
    "mne.channels.tests.test_channels.eve_fname": {
     "line number": [
      391
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      426,
      428,
      430,
      432,
      434,
      443,
      445
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      388,
      389,
      438
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      388,
      389,
      438
     ]
    },
    "mne.pick_types": {
     "line number": [
      405
     ]
    },
    "mne.read_events": {
     "line number": [
      391
     ]
    },
    "numpy.expand_dims": {
     "line number": [
      417,
      419,
      421
     ]
    },
    "numpy.mean": {
     "line number": [
      413
     ]
    },
    "numpy.median": {
     "line number": [
      414
     ]
    },
    "numpy.std": {
     "line number": [
      415
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      398,
      416,
      418,
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_drop_channels": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      337,
      338
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      337,
      338
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      333
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_equalize_channels": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      346
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      351
     ]
    },
    "mne.EvokedArray": {
     "line number": [
      356
     ]
    },
    "mne.channels.equalize_channels": {
     "line number": [
      346,
      358,
      381
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      346
     ]
    },
    "mne.create_info": {
     "line number": [
      350,
      352,
      353,
      356
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      349
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      353
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      365,
      367,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_find_ch_adjacency": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      302,
      323
     ]
    },
    "len": {
     "line number": [
      301
     ]
    },
    "mne.channels.channels._compute_ch_adjacency": {
     "line number": [
      305
     ]
    },
    "mne.channels.find_ch_adjacency": {
     "line number": [
      298,
      302,
      310,
      315,
      320,
      323,
      326
     ]
    },
    "mne.channels.tests.test_channels.fname_kit_157": {
     "line number": [
      325
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      302,
      323
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      294
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      292
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      289
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      314
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      319
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      294
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      325
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      300,
      301,
      306
     ]
    },
    "os.path.join": {
     "line number": [
      312,
      313,
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_get_set_sensor_positions": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      252
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      252
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      245,
      253
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      245,
      253
     ]
    },
    "mne.pick_types": {
     "line number": [
      246
     ]
    },
    "numpy.array": {
     "line number": [
      247,
      254
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      249,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_read_ch_adjacency": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      187,
      194,
      196,
      199,
      203,
      240
     ]
    },
    "a": {
     "line number": [
      170,
      171,
      172,
      173,
      174,
      206,
      208,
      209,
      210,
      211,
      212,
      213,
      228,
      230,
      231,
      232,
      233,
      234,
      235
     ]
    },
    "dict": {
     "line number": [
      176,
      215,
      237
     ]
    },
    "functools.partial": {
     "line number": [
      168,
      206,
      228
     ]
    },
    "len": {
     "line number": [
      182,
      190,
      202,
      220
     ]
    },
    "mne.channels.channels._ch_neighbor_adjacency": {
     "line number": [
      194,
      196,
      199
     ]
    },
    "mne.channels.read_ch_adjacency": {
     "line number": [
      180,
      187,
      188,
      200,
      203,
      218,
      240
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      187,
      194,
      196,
      199,
      203,
      240
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      167
     ]
    },
    "numpy.all": {
     "line number": [
      186,
      222
     ]
    },
    "numpy.any": {
     "line number": [
      223,
      224
     ]
    },
    "numpy.array": {
     "line number": [
      168,
      170,
      206,
      207,
      228,
      229
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      182,
      183,
      184,
      185,
      189,
      190,
      201,
      202,
      220,
      221
     ]
    },
    "os.path.join": {
     "line number": [
      177,
      216,
      238
     ]
    },
    "scipy.io.savemat": {
     "line number": [
      178,
      217,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_rename_channels": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      79
     ]
    },
    "ValueError": {
     "line number": [
      76,
      82,
      84,
      85,
      89
     ]
    },
    "copy.deepcopy": {
     "line number": [
      93,
      102,
      105
     ]
    },
    "mne.channels.rename_channels": {
     "line number": [
      76,
      79,
      82,
      84,
      85,
      89,
      96,
      103,
      107
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      76,
      79,
      82,
      84,
      85,
      89
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      72
     ]
    },
    "mne.io.read_info": {
     "line number": [
      72
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      101,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_reorder_channels": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      47
     ]
    },
    "ValueError": {
     "line number": [
      61
     ]
    },
    "len": {
     "line number": [
      42,
      64
     ]
    },
    "list": {
     "line number": [
      64
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      47,
      61,
      36,
      37
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      40
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      40
     ]
    },
    "numpy.argsort": {
     "line number": [
      65
     ]
    },
    "numpy.eye": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      57,
      60,
      67
     ]
    },
    "range": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_set_channel_types": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      125,
      129
     ]
    },
    "RuntimeWarning": {
     "line number": [
      131
     ]
    },
    "ValueError": {
     "line number": [
      117,
      120,
      162
     ]
    },
    "mne.channels.tests.test_channels.pytest": {
     "line number": [
      117,
      120,
      125,
      129,
      131,
      162
     ]
    },
    "mne.channels.tests.test_channels.raw_fname": {
     "line number": [
      113,
      127
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      137,
      149,
      153
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_FNIRS_HBO": {
     "line number": [
      157
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_NONE": {
     "line number": [
      141,
      145
     ]
    },
    "mne.io.constants.FIFF.FIFFV_ECG_CH": {
     "line number": [
      139
     ]
    },
    "mne.io.constants.FIFF.FIFFV_ECOG_CH": {
     "line number": [
      135
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EEG_CH": {
     "line number": [
      151
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EOG_CH": {
     "line number": [
      143
     ]
    },
    "mne.io.constants.FIFF.FIFFV_FNIRS_CH": {
     "line number": [
      155
     ]
    },
    "mne.io.constants.FIFF.FIFFV_SEEG_CH": {
     "line number": [
      147
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_MOL": {
     "line number": [
      156
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_V": {
     "line number": [
      136,
      140,
      144,
      148,
      152
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      113,
      127
     ]
    },
    "mne.pick_channels": {
     "line number": [
      150,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": {
    "mne.channels.tests.test_interpolation.base_dir": {
     "line number": [
      18,
      19,
      20
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      271
     ]
    },
    "os.path.dirname": {
     "line number": [
      17
     ]
    },
    "os.path.join": {
     "line number": [
      17,
      18,
      19,
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.channels.tests.test_interpolation.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._interpolate_bads_meg": {
  "data": {
   "shadows": "mne.channels.interpolation._interpolate_bads_meg"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._load_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      40
     ]
    },
    "dict": {
     "line number": [
      36,
      43
     ]
    },
    "events": {
     "line number": [
      31,
      35,
      41
     ]
    },
    "mne.Epochs": {
     "line number": [
      35,
      41
     ]
    },
    "mne.channels.tests.test_interpolation.event_name": {
     "line number": [
      31
     ]
    },
    "mne.channels.tests.test_interpolation.pytest": {
     "line number": [
      40
     ]
    },
    "mne.channels.tests.test_interpolation.raw_fname": {
     "line number": [
      30
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      30
     ]
    },
    "mne.pick_types": {
     "line number": [
      34,
      38
     ]
    },
    "mne.read_events": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation._make_interpolation_matrix": {
  "data": {
   "shadows": "mne.channels.interpolation._make_interpolation_matrix"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._this_interpol": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "mne.channels.interpolation._interpolate_bads_meg": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.base_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.compress": {
  "data": {
   "shadows": "itertools.compress"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.event_id_2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.event_name": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.raw_fname": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.raw_fname_ctf": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.scalp_coupling_index": {
  "data": {
   "shadows": "mne.preprocessing.nirs.scalp_coupling_index"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.test_interpolate_meg_ctf": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      234
     ]
    },
    "mne.channels.tests.test_interpolation._this_interpol": {
     "line number": [
      230,
      232
     ]
    },
    "mne.channels.tests.test_interpolation.pytest": {
     "line number": [
      213
     ]
    },
    "mne.channels.tests.test_interpolation.raw_fname_ctf": {
     "line number": [
      220
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      220
     ]
    },
    "mne.pick_channels": {
     "line number": [
      226
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      235,
      236
     ]
    },
    "print": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_ctf_comp": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "mne.channels.tests.test_interpolation.raw_fname": {
     "line number": [
      247,
      248
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      246
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      243
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      248
     ]
    },
    "os.path.join": {
     "line number": [
      246,
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_eeg": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      122,
      137
     ]
    },
    "RuntimeWarning": {
     "line number": [
      75
     ]
    },
    "bool": {
     "line number": [
      80
     ]
    },
    "dict": {
     "line number": [
      74,
      54
     ]
    },
    "hasattr": {
     "line number": [
      134
     ]
    },
    "len": {
     "line number": [
      80,
      110,
      143,
      149
     ]
    },
    "mne.channels.interpolation._make_interpolation_matrix": {
     "line number": [
      109
     ]
    },
    "mne.channels.tests.test_interpolation._load_data": {
     "line number": [
      59
     ]
    },
    "mne.channels.tests.test_interpolation.pytest": {
     "line number": [
      75,
      122,
      137,
      147,
      47,
      48,
      52,
      56
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      127
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EEG_CH": {
     "line number": [
      65
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      61
     ]
    },
    "mne.pick_types": {
     "line number": [
      96
     ]
    },
    "numpy.all": {
     "line number": [
      130
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      115,
      118,
      152
     ]
    },
    "numpy.dot": {
     "line number": [
      111
     ]
    },
    "numpy.ones": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      88,
      97,
      104,
      114,
      117
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      112
     ]
    },
    "str": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_meg": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      168
     ]
    },
    "len": {
     "line number": [
      190,
      190,
      198
     ]
    },
    "mne.channels.tests.test_interpolation._load_data": {
     "line number": [
      162
     ]
    },
    "mne.channels.tests.test_interpolation.pytest": {
     "line number": [
      168,
      155
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      181
     ]
    },
    "mne.pick_channels": {
     "line number": [
      178
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      188,
      197,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_nirs": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "itertools.compress": {
     "line number": [
      262
     ]
    },
    "list": {
     "line number": [
      262
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      257
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      254
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      259
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      260
     ]
    },
    "mne.preprocessing.nirs.scalp_coupling_index": {
     "line number": [
      261
     ]
    },
    "numpy.std": {
     "line number": [
      265,
      268
     ]
    },
    "numpy.where": {
     "line number": [
      263
     ]
    },
    "os.path.join": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout": {
  "data": {
   "symbols_in_volume": {
    "mne.channels.tests.test_layout.io_dir": {
     "line number": [
      28,
      29,
      30,
      31,
      32,
      33
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      372
     ]
    },
    "os.path.dirname": {
     "line number": [
      27
     ]
    },
    "os.path.join": {
     "line number": [
      27,
      28,
      29,
      30,
      31,
      32,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.channels.tests.test_layout.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.HEAD_SIZE_DEFAULT": {
  "data": {
   "shadows": "mne.channels.HEAD_SIZE_DEFAULT"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._box_size": {
  "data": {
   "shadows": "mne.channels.layout._box_size"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._empty_info": {
  "data": {
   "shadows": "mne.io._empty_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._find_topomap_coords": {
  "data": {
   "shadows": "mne.channels.layout._find_topomap_coords"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._get_test_info": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "mne.io._empty_info": {
     "line number": [
      38
     ]
    },
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "numpy.float32": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.bti_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fif_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.find_layout": {
  "data": {
   "shadows": "mne.channels.find_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fname_ctf_raw": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.fname_kit_157": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.fname_kit_umd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.generate_2d_layout": {
  "data": {
   "shadows": "mne.channels.layout.generate_2d_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.io_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.lout_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.make_eeg_layout": {
  "data": {
   "shadows": "mne.channels.make_eeg_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.make_grid_layout": {
  "data": {
   "shadows": "mne.channels.make_grid_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.test_box_size": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "mne.channels.layout._box_size": {
     "line number": [
      282,
      286,
      290,
      294,
      299,
      304,
      310,
      315,
      319,
      324,
      329,
      334,
      339
     ]
    },
    "numpy.c_": {
     "line number": [
      299
     ]
    },
    "numpy.linspace": {
     "line number": [
      297,
      297
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      297
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      302
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      282,
      286,
      290,
      294,
      299,
      310,
      315,
      319,
      324,
      339
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      329,
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_find_layout": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      192
     ]
    },
    "all": {
     "line number": [
      212,
      220
     ]
    },
    "enumerate": {
     "line number": [
      203
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      276
     ]
    },
    "mne.channels.find_layout": {
     "line number": [
      192,
      210,
      214,
      218,
      222,
      224,
      226,
      228,
      231,
      233,
      235,
      237,
      240,
      242,
      244,
      248,
      252,
      256,
      261,
      266,
      270
     ]
    },
    "mne.channels.tests.test_layout._get_test_info": {
     "line number": [
      192
     ]
    },
    "mne.channels.tests.test_layout.bti_dir": {
     "line number": [
      251
     ]
    },
    "mne.channels.tests.test_layout.copy": {
     "line number": [
      202
     ]
    },
    "mne.channels.tests.test_layout.fif_fname": {
     "line number": [
      194
     ]
    },
    "mne.channels.tests.test_layout.fname_ctf_raw": {
     "line number": [
      248
     ]
    },
    "mne.channels.tests.test_layout.fname_kit_157": {
     "line number": [
      255
     ]
    },
    "mne.channels.tests.test_layout.fname_kit_umd": {
     "line number": [
      269
     ]
    },
    "mne.channels.tests.test_layout.pytest": {
     "line number": [
      192
     ]
    },
    "mne.io.read_info": {
     "line number": [
      194,
      248,
      252
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      255,
      269
     ]
    },
    "mne.pick_info": {
     "line number": [
      196,
      199,
      208
     ]
    },
    "mne.pick_types": {
     "line number": [
      195,
      198,
      207
     ]
    },
    "numpy.arange": {
     "line number": [
      275
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      215,
      219,
      223,
      225,
      227,
      229,
      232,
      234,
      236,
      238,
      241,
      243,
      245,
      249,
      253,
      257,
      262,
      271
     ]
    },
    "os.path.join": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_find_topomap_coords": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      129,
      134,
      137
     ]
    },
    "ValueError": {
     "line number": [
      109,
      114,
      119,
      124
     ]
    },
    "dict": {
     "line number": [
      89
     ]
    },
    "mne.channels.HEAD_SIZE_DEFAULT": {
     "line number": [
      90,
      101,
      102
     ]
    },
    "mne.channels.layout._find_topomap_coords": {
     "line number": [
      91,
      98,
      104,
      110,
      115,
      120,
      125,
      130,
      135,
      138
     ]
    },
    "mne.channels.tests.test_layout.fif_fname": {
     "line number": [
      81
     ]
    },
    "mne.channels.tests.test_layout.pytest": {
     "line number": [
      109,
      114,
      119,
      124,
      129,
      134,
      137
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_EEG": {
     "line number": [
      113,
      128
     ]
    },
    "mne.io.read_info": {
     "line number": [
      81
     ]
    },
    "mne.pick_types": {
     "line number": [
      82,
      108
     ]
    },
    "numpy.nan": {
     "line number": [
      96
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      99,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_generate_2d_layout": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "float": {
     "line number": [
      359,
      360,
      369
     ]
    },
    "len": {
     "line number": [
      365
     ]
    },
    "mne.channels.layout.generate_2d_layout": {
     "line number": [
      352,
      368
     ]
    },
    "numpy.array": {
     "line number": [
      351
     ]
    },
    "numpy.errstate": {
     "line number": [
      358
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      347
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      359,
      361,
      369
     ]
    },
    "range": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_io_layout_lay": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "mne.channels.read_layout": {
     "line number": [
      71,
      73
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      75
     ]
    },
    "os.path.join": {
     "line number": [
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_io_layout_lout": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "mne.channels.read_layout": {
     "line number": [
      59,
      61
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      58
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      63
     ]
    },
    "os.path.join": {
     "line number": [
      60,
      61
     ]
    },
    "print": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_make_eeg_layout": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      159,
      160,
      161,
      162,
      163,
      164
     ]
    },
    "len": {
     "line number": [
      150,
      150
     ]
    },
    "mne.channels.make_eeg_layout": {
     "line number": [
      149,
      159,
      160,
      161,
      162,
      163,
      164
     ]
    },
    "mne.channels.read_layout": {
     "line number": [
      146,
      153
     ]
    },
    "mne.channels.tests.test_layout.fif_fname": {
     "line number": [
      147
     ]
    },
    "mne.channels.tests.test_layout.lout_path": {
     "line number": [
      146
     ]
    },
    "mne.channels.tests.test_layout.pytest": {
     "line number": [
      159,
      160,
      161,
      162,
      163,
      164
     ]
    },
    "mne.io.read_info": {
     "line number": [
      147
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      143
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      155
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      150,
      154,
      156
     ]
    },
    "os.path.join": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_make_grid_layout": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "mne.channels.make_grid_layout": {
     "line number": [
      173,
      181
     ]
    },
    "mne.channels.read_layout": {
     "line number": [
      172,
      175
     ]
    },
    "mne.channels.tests.test_layout._get_test_info": {
     "line number": [
      173,
      181
     ]
    },
    "mne.channels.tests.test_layout.lout_path": {
     "line number": [
      172
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      169
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      176,
      177,
      178,
      187
     ]
    },
    "os.path.join": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage": {
  "data": {},
  "type": "module"
 },
 "mne.channels.tests.test_standard_montage.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.HEAD_SIZE_DEFAULT": {
  "data": {
   "shadows": "mne.channels.montage.HEAD_SIZE_DEFAULT"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage._get_dig_eeg": {
  "data": {
   "shadows": "mne.io._digitization._get_dig_eeg"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage._get_fid_coords": {
  "data": {
   "shadows": "mne.io._digitization._get_fid_coords"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.get_builtin_montages": {
  "data": {
   "shadows": "mne.channels.montage.get_builtin_montages"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.test_standard_montage_errors": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      33
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      34
     ]
    },
    "mne.channels.tests.test_standard_montage.pytest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage.test_standard_montages_have_fids": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "mne.channels.make_standard_montage": {
     "line number": [
      22
     ]
    },
    "mne.channels.montage.get_builtin_montages": {
     "line number": [
      19
     ]
    },
    "mne.channels.tests.test_standard_montage.pytest": {
     "line number": [
      19
     ]
    },
    "mne.io._digitization._get_fid_coords": {
     "line number": [
      23
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_UNKNOWN": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage.test_standard_montages_on_sphere": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      51
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      54
     ]
    },
    "mne.channels.montage.HEAD_SIZE_DEFAULT": {
     "line number": [
      52,
      37
     ]
    },
    "mne.channels.tests.test_standard_montage.pytest": {
     "line number": [
      37,
      38
     ]
    },
    "mne.io._digitization._get_dig_eeg": {
     "line number": [
      55
     ]
    },
    "numpy.array": {
     "line number": [
      55
     ]
    },
    "numpy.full": {
     "line number": [
      59
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      58
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage.test_standard_superset": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "len": {
     "line number": [
      69
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      67,
      68
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      75
     ]
    },
    "set": {
     "line number": [
      69,
      69,
      71,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi": {
  "data": {},
  "type": "module"
 },
 "mne.chpi._check_chpi_param": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "Projection": {
     "line number": [
      632
     ]
    },
    "ValueError": {
     "line number": [
      600,
      609,
      614,
      621,
      627,
      635
     ]
    },
    "_validate_type": {
     "line number": [
      597,
      606,
      632
     ]
    },
    "dict": {
     "line number": [
      590,
      594,
      597
     ]
    },
    "len": {
     "line number": [
      633
     ]
    },
    "list": {
     "line number": [
      591,
      598
     ]
    },
    "numpy.ndarray": {
     "line number": [
      606
     ]
    },
    "set": {
     "line number": [
      599
     ]
    },
    "sorted": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._chpi_locs_to_times_dig": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1015
     ]
    },
    "list": {
     "line number": [
      1010
     ]
    },
    "zip": {
     "line number": [
      1011,
      1015
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._chpi_objective": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "jit": {
     "line number": [
      391
     ]
    },
    "numpy.dot": {
     "line number": [
      394
     ]
    },
    "quat_to_rot": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._compute_good_distances": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1129
     ]
    },
    "len": {
     "line number": [
      1129
     ]
    },
    "numpy.abs": {
     "line number": [
      1126
     ]
    },
    "numpy.argmax": {
     "line number": [
      1140
     ]
    },
    "numpy.ones": {
     "line number": [
      1129
     ]
    },
    "numpy.where": {
     "line number": [
      1140
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      1125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._fast_fit": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "jit": {
     "line number": [
      569
     ]
    },
    "mne.chpi._reorder_inv_model": {
     "line number": [
      574
     ]
    },
    "numpy.dot": {
     "line number": [
      575,
      576
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      574
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      581
     ]
    },
    "numpy.zeros": {
     "line number": [
      578
     ]
    },
    "range": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_amplitudes": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      561
     ]
    },
    "len": {
     "line number": [
      565
     ]
    },
    "mne.chpi._fast_fit": {
     "line number": [
      565
     ]
    },
    "numpy.int64": {
     "line number": [
      560
     ]
    },
    "numpy.newaxis.astype": {
     "line number": [
      561
     ]
    },
    "numpy.round": {
     "line number": [
      560
     ]
    },
    "use_log_level": {
     "line number": [
      550,
      556
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_quat": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "_fit_matched_points": {
     "line number": [
      408
     ]
    },
    "mne.chpi._chpi_objective": {
     "line number": [
      409
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      403
     ]
    },
    "numpy.mean": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_quat_subset": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "int": {
     "line number": [
      791
     ]
    },
    "len": {
     "line number": [
      784,
      785
     ]
    },
    "list": {
     "line number": [
      786,
      786
     ]
    },
    "mne.chpi._fit_chpi_quat": {
     "line number": [
      782
     ]
    },
    "numpy.array": {
     "line number": [
      791
     ]
    },
    "range": {
     "line number": [
      785
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._fit_coil_order_dev_head_trans": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "_angle_between_quats": {
     "line number": [
      426
     ]
    },
    "_quat_to_affine": {
     "line number": [
      435
     ]
    },
    "len": {
     "line number": [
      419
     ]
    },
    "max": {
     "line number": [
      427
     ]
    },
    "mne.chpi._fit_chpi_quat": {
     "line number": [
      421
     ]
    },
    "mne.chpi.itertools": {
     "line number": [
      419
     ]
    },
    "numpy.arange": {
     "line number": [
      419
     ]
    },
    "numpy.array": {
     "line number": [
      420,
      431
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      422
     ]
    },
    "numpy.pi": {
     "line number": [
      427
     ]
    },
    "numpy.zeros": {
     "line number": [
      415,
      426
     ]
    },
    "quat_to_rot": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._fit_magnetic_dipole": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      374
     ]
    },
    "mne.chpi._magnetic_dipole_delta_multi": {
     "line number": [
      379
     ]
    },
    "mne.chpi._magnetic_dipole_objective": {
     "line number": [
      374
     ]
    },
    "numpy.argmin": {
     "line number": [
      382
     ]
    },
    "numpy.dot": {
     "line number": [
      372,
      373
     ]
    },
    "objective": {
     "line number": [
      378,
      385,
      386
     ]
    },
    "scipy.optimize.fmin_cobyla": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._get_hpi_info": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      224
     ]
    },
    "float": {
     "line number": [
      231
     ]
    },
    "int": {
     "line number": [
      233
     ]
    },
    "len": {
     "line number": [
      220,
      233,
      242,
      252
     ]
    },
    "numpy.array": {
     "line number": [
      231,
      246,
      248
     ]
    },
    "numpy.empty": {
     "line number": [
      223,
      223
     ]
    },
    "numpy.zeros": {
     "line number": [
      252
     ]
    },
    "pick_channels": {
     "line number": [
      240
     ]
    },
    "sorted": {
     "line number": [
      227
     ]
    },
    "str": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._get_hpi_initial_fit": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      261,
      287
     ]
    },
    "all": {
     "line number": [
      269,
      286
     ]
    },
    "apply_trans": {
     "line number": [
      273,
      304
     ]
    },
    "enumerate": {
     "line number": [
      319
     ]
    },
    "float": {
     "line number": [
      337
     ]
    },
    "len": {
     "line number": [
      260,
      267,
      278,
      279,
      282,
      290,
      292,
      294,
      313,
      315,
      315
     ]
    },
    "numpy.arange": {
     "line number": [
      278,
      279
     ]
    },
    "numpy.array": {
     "line number": [
      293,
      299
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      310
     ]
    },
    "numpy.ones": {
     "line number": [
      282
     ]
    },
    "sorted": {
     "line number": [
      264,
      268,
      297
     ]
    },
    "str": {
     "line number": [
      290,
      292
     ]
    },
    "tuple": {
     "line number": [
      309
     ]
    },
    "warn": {
     "line number": [
      316,
      324,
      332
     ]
    },
    "zip": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_delta": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "jit": {
     "line number": [
      352
     ]
    },
    "numpy.dot": {
     "line number": [
      355,
      357,
      358
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_delta_multi": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "numpy.matmul": {
     "line number": [
      364
     ]
    },
    "numpy.sum": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_objective": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "_magnetic_dipole_field_vec": {
     "line number": [
      343
     ]
    },
    "mne.chpi._magnetic_dipole_delta": {
     "line number": [
      344
     ]
    },
    "numpy.dot": {
     "line number": [
      347
     ]
    },
    "numpy.newaxis": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._reorder_inv_model": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "jit": {
     "line number": [
      503
     ]
    },
    "numpy.arange": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._setup_ext_proj": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "Projection": {
     "line number": [
      524
     ]
    },
    "_get_mf_picks_fix_mags": {
     "line number": [
      513
     ]
    },
    "_prep_mf_coils": {
     "line number": [
      516
     ]
    },
    "_regularize_out": {
     "line number": [
      520
     ]
    },
    "_simplify_info": {
     "line number": [
      512
     ]
    },
    "_sss_basis": {
     "line number": [
      517
     ]
    },
    "dict": {
     "line number": [
      518,
      526
     ]
    },
    "len": {
     "line number": [
      521,
      523,
      527,
      531
     ]
    },
    "numpy.arange": {
     "line number": [
      521
     ]
    },
    "numpy.in1d": {
     "line number": [
      521
     ]
    },
    "pick_info": {
     "line number": [
      512
     ]
    },
    "pick_types": {
     "line number": [
      511
     ]
    },
    "scipy.linalg.orth": {
     "line number": [
      522
     ]
    },
    "setup_proj": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._setup_hpi_amplitude_fitting": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      463
     ]
    },
    "ValueError": {
     "line number": [
      477
     ]
    },
    "_check_option": {
     "line number": [
      468
     ]
    },
    "_validate_type": {
     "line number": [
      445
     ]
    },
    "dict": {
     "line number": [
      495
     ]
    },
    "float": {
     "line number": [
      475,
      479,
      482
     ]
    },
    "int": {
     "line number": [
      479
     ]
    },
    "isinstance": {
     "line number": [
      467
     ]
    },
    "len": {
     "line number": [
      469,
      491
     ]
    },
    "max": {
     "line number": [
      472
     ]
    },
    "mne.chpi._get_hpi_info": {
     "line number": [
      444
     ]
    },
    "mne.chpi._reorder_inv_model": {
     "line number": [
      491
     ]
    },
    "mne.chpi._setup_ext_proj": {
     "line number": [
      492
     ]
    },
    "numpy.arange": {
     "line number": [
      447,
      482
     ]
    },
    "numpy.concatenate": {
     "line number": [
      470,
      489
     ]
    },
    "numpy.cos": {
     "line number": [
      486,
      487
     ]
    },
    "numpy.diff": {
     "line number": [
      471
     ]
    },
    "numpy.linspace": {
     "line number": [
      481
     ]
    },
    "numpy.newaxis": {
     "line number": [
      481,
      484,
      485
     ]
    },
    "numpy.newaxis.astype": {
     "line number": [
      482
     ]
    },
    "numpy.ones": {
     "line number": [
      488
     ]
    },
    "numpy.pi": {
     "line number": [
      483
     ]
    },
    "numpy.sin": {
     "line number": [
      486,
      487
     ]
    },
    "numpy.unique": {
     "line number": [
      471
     ]
    },
    "numpy.zeros": {
     "line number": [
      450
     ]
    },
    "round": {
     "line number": [
      479
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      490
     ]
    },
    "str": {
     "line number": [
      445,
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi._time_prefix": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "mne.chpi._unit_quat_constraint": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "jit": {
     "line number": [
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.chpi.compute_chpi_amplitudes": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "ProgressBar": {
     "line number": [
      868
     ]
    },
    "dict": {
     "line number": [
      860
     ]
    },
    "enumerate": {
     "line number": [
      868
     ]
    },
    "len": {
     "line number": [
      858,
      858,
      865,
      866,
      867,
      874
     ]
    },
    "max": {
     "line number": [
      873
     ]
    },
    "min": {
     "line number": [
      874
     ]
    },
    "mne.chpi._fit_chpi_amplitudes": {
     "line number": [
      879
     ]
    },
    "mne.chpi._setup_hpi_amplitude_fitting": {
     "line number": [
      849
     ]
    },
    "numpy.arange": {
     "line number": [
      854
     ]
    },
    "numpy.empty": {
     "line number": [
      864
     ]
    },
    "slice": {
     "line number": [
      873
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.compute_chpi_locs": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": {
    "ProgressBar": {
     "line number": [
      969
     ]
    },
    "_check_option": {
     "line number": [
      931
     ]
    },
    "_concatenate_coils": {
     "line number": [
      941
     ]
    },
    "_create_meg_coils": {
     "line number": [
      941
     ]
    },
    "_magnetic_dipole_field_vec": {
     "line number": [
      953
     ]
    },
    "_make_guesses": {
     "line number": [
      949
     ]
    },
    "apply_trans": {
     "line number": [
      963
     ]
    },
    "compute_whitener": {
     "line number": [
      945
     ]
    },
    "dict": {
     "line number": [
      949,
      957,
      961,
      966
     ]
    },
    "float": {
     "line number": [
      1004
     ]
    },
    "invert_transform": {
     "line number": [
      964
     ]
    },
    "len": {
     "line number": [
      952
     ]
    },
    "list": {
     "line number": [
      960
     ]
    },
    "make_ad_hoc_cov": {
     "line number": [
      944
     ]
    },
    "mne.chpi._check_chpi_param": {
     "line number": [
      932
     ]
    },
    "mne.chpi._fit_magnetic_dipole": {
     "line number": [
      993
     ]
    },
    "mne.chpi._get_hpi_initial_fit": {
     "line number": [
      965
     ]
    },
    "numpy.array": {
     "line number": [
      976,
      1004
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      977
     ]
    },
    "numpy.dot": {
     "line number": [
      954
     ]
    },
    "numpy.isfinite": {
     "line number": [
      971
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      948
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      956
     ]
    },
    "numpy.zeros": {
     "line number": [
      949
     ]
    },
    "pick_channels": {
     "line number": [
      936
     ]
    },
    "pick_info": {
     "line number": [
      938
     ]
    },
    "zip": {
     "line number": [
      960,
      978,
      995,
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.compute_head_pos": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "_angle_between_quats": {
     "line number": [
      762
     ]
    },
    "_quat_to_affine": {
     "line number": [
      715
     ]
    },
    "apply_trans": {
     "line number": [
      678,
      716
     ]
    },
    "dict": {
     "line number": [
      682
     ]
    },
    "invert_transform": {
     "line number": [
      678
     ]
    },
    "len": {
     "line number": [
      677,
      694,
      697,
      749
     ]
    },
    "map": {
     "line number": [
      769
     ]
    },
    "mne.chpi._check_chpi_param": {
     "line number": [
      674
     ]
    },
    "mne.chpi._fit_chpi_quat_subset": {
     "line number": [
      707
     ]
    },
    "mne.chpi._get_hpi_initial_fit": {
     "line number": [
      675
     ]
    },
    "mne.chpi._time_prefix": {
     "line number": [
      695,
      720,
      729
     ]
    },
    "numpy.array": {
     "line number": [
      776
     ]
    },
    "numpy.concatenate": {
     "line number": [
      683,
      746,
      752,
      756,
      771
     ]
    },
    "numpy.float64": {
     "line number": [
      776
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      717,
      727,
      761,
      764
     ]
    },
    "numpy.where": {
     "line number": [
      689
     ]
    },
    "numpy.zeros": {
     "line number": [
      777
     ]
    },
    "range": {
     "line number": [
      736
     ]
    },
    "rot_to_quat": {
     "line number": [
      683
     ]
    },
    "tuple": {
     "line number": [
      727
     ]
    },
    "warn": {
     "line number": [
      699,
      720
     ]
    },
    "zip": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.extract_chpi_locs_ctf": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      182
     ]
    },
    "_make_ctf_coord_trans_set": {
     "line number": [
      198
     ]
    },
    "apply_trans": {
     "line number": [
      208
     ]
    },
    "dict": {
     "line number": [
      212
     ]
    },
    "len": {
     "line number": [
      181,
      194,
      206
     ]
    },
    "numpy.all": {
     "line number": [
      204
     ]
    },
    "numpy.array": {
     "line number": [
      185
     ]
    },
    "numpy.diff": {
     "line number": [
      204
     ]
    },
    "numpy.ones": {
     "line number": [
      209
     ]
    },
    "numpy.where": {
     "line number": [
      204
     ]
    },
    "numpy.zeros": {
     "line number": [
      210
     ]
    },
    "pick_channels_regexp": {
     "line number": [
      178
     ]
    },
    "slice": {
     "line number": [
      194
     ]
    },
    "sorted": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.filter_chpi": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "ProgressBar": {
     "line number": [
      1088
     ]
    },
    "RuntimeError": {
     "line number": [
      1060,
      1066
     ]
    },
    "ValueError": {
     "line number": [
      1063
     ]
    },
    "_validate_type": {
     "line number": [
      1058
     ]
    },
    "enumerate": {
     "line number": [
      1089
     ]
    },
    "float": {
     "line number": [
      1061
     ]
    },
    "int": {
     "line number": [
      1064
     ]
    },
    "len": {
     "line number": [
      1072,
      1073,
      1076,
      1080,
      1081,
      1082,
      1092,
      1111,
      1115
     ]
    },
    "list": {
     "line number": [
      1086
     ]
    },
    "max": {
     "line number": [
      1091
     ]
    },
    "min": {
     "line number": [
      1092,
      1101
     ]
    },
    "mne.chpi._setup_hpi_amplitude_fitting": {
     "line number": [
      1068
     ]
    },
    "numpy.arange": {
     "line number": [
      1072
     ]
    },
    "numpy.ceil": {
     "line number": [
      1064
     ]
    },
    "numpy.dot": {
     "line number": [
      1084,
      1099,
      1106
     ]
    },
    "numpy.inf": {
     "line number": [
      1114
     ]
    },
    "pick_types": {
     "line number": [
      1075
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      1098
     ]
    },
    "slice": {
     "line number": [
      1091,
      1104
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.chpi.head_pos_to_trans_rot_t": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "quat_to_rot": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.chpi.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.chpi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.chpi.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.chpi.read_head_pos": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      84
     ]
    },
    "_check_fname": {
     "line number": [
      80
     ]
    },
    "numpy.isnan": {
     "line number": [
      83
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.chpi.write_head_pos": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      111
     ]
    },
    "_check_fname": {
     "line number": [
      108
     ]
    },
    "numpy.array": {
     "line number": [
      109
     ]
    },
    "numpy.float64": {
     "line number": [
      109
     ]
    },
    "open": {
     "line number": [
      112
     ]
    },
    "tuple": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands": {
  "data": {},
  "type": "module"
 },
 "mne.commands.mne_anonymize": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      97
     ]
    },
    "mne.commands.mne_anonymize.is_main": {
     "line number": [
      98
     ]
    },
    "mne.commands.mne_anonymize.run": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_anonymize.ANONYMIZE_FILE_PREFIX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.commands.mne_anonymize.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_anonymize.is_main": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "mne.commands.mne_anonymize.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_anonymize.mne_anonymize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "mne.commands.mne_anonymize.ANONYMIZE_FILE_PREFIX": {
     "line number": [
      53
     ]
    },
    "mne.commands.mne_anonymize.mne": {
     "line number": [
      45
     ]
    },
    "os.path.basename": {
     "line number": [
      51
     ]
    },
    "os.path.isabs": {
     "line number": [
      54
     ]
    },
    "os.path.join": {
     "line number": [
      52,
      55
     ]
    },
    "os.path.split": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_anonymize.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_anonymize.run": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      92
     ]
    },
    "mne.commands.mne_anonymize.mne_anonymize": {
     "line number": [
      94
     ]
    },
    "mne.commands.mne_anonymize.sys": {
     "line number": [
      84
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_anonymize.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_browse_raw.mne": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_browse_raw._RAW_CLIP_DEF": {
  "data": {
   "shadows": "mne.viz._RAW_CLIP_DEF"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.run": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      120
     ]
    },
    "ValueError": {
     "line number": [
      99
     ]
    },
    "events": {
     "line number": [
      114,
      116,
      127
     ]
    },
    "float": {
     "line number": [
      98
     ]
    },
    "isinstance": {
     "line number": [
      93
     ]
    },
    "len": {
     "line number": [
      76,
      110,
      113
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      130
     ]
    },
    "mne.commands.mne_browse_raw.mne": {
     "line number": [
      108,
      111,
      114,
      122
     ]
    },
    "mne.commands.mne_browse_raw.sys": {
     "line number": [
      106
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      73
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      25
     ]
    },
    "mne.viz._RAW_CLIP_DEF": {
     "line number": [
      69
     ]
    },
    "str": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_browse_raw.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_bti2fiff.mne": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_bti2fiff.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.run": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "mne.commands.mne_bti2fiff.sys": {
     "line number": [
      73
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      42
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_bti2fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_clean_eog_ecg.mne": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_clean_eog_ecg.clean_ecg_eog": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      43
     ]
    },
    "dict": {
     "line number": [
      66,
      66
     ]
    },
    "mne.commands.mne_clean_eog_ecg.mne": {
     "line number": [
      46,
      68,
      71,
      80,
      82,
      84,
      92,
      101
     ]
    },
    "print": {
     "line number": [
      64,
      70,
      72,
      83,
      85,
      96,
      102,
      103,
      104,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_clean_eog_ecg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.run": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "mne.commands.mne_clean_eog_ecg.clean_ecg_eog": {
     "line number": [
      139
     ]
    },
    "mne.commands.mne_clean_eog_ecg.sys": {
     "line number": [
      131
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_clean_eog_ecg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compare_fiff": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_compare_fiff.mne": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_compare_fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compare_fiff.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "len": {
     "line number": [
      23
     ]
    },
    "mne.commands.mne_compare_fiff.mne": {
     "line number": [
      20,
      26
     ]
    },
    "mne.commands.mne_compare_fiff.sys": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_compare_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_compute_proj_ecg.mne": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_compute_proj_ecg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.run": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156,
      157
     ]
    },
    "dict": {
     "line number": [
      141
     ]
    },
    "events": {
     "line number": [
      186,
      209
     ]
    },
    "float": {
     "line number": [
      141,
      142,
      143,
      144,
      155
     ]
    },
    "isinstance": {
     "line number": [
      202
     ]
    },
    "mne.commands.mne_compute_proj_ecg.mne": {
     "line number": [
      178,
      181,
      186,
      200,
      206,
      209
     ]
    },
    "mne.commands.mne_compute_proj_ecg.os": {
     "line number": [
      202,
      203
     ]
    },
    "mne.commands.mne_compute_proj_ecg.sys": {
     "line number": [
      125
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      25
     ]
    },
    "open": {
     "line number": [
      160
     ]
    },
    "print": {
     "line number": [
      162,
      198,
      205,
      208
     ]
    },
    "str": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_compute_proj_ecg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      199
     ]
    },
    "mne.commands.mne_compute_proj_eog.is_main": {
     "line number": [
      200
     ]
    },
    "mne.commands.mne_compute_proj_eog.run": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_compute_proj_eog.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.is_main": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "mne.commands.mne_compute_proj_eog.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.run": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      130
     ]
    },
    "events": {
     "line number": [
      170,
      196
     ]
    },
    "float": {
     "line number": [
      130,
      131,
      132,
      133
     ]
    },
    "isinstance": {
     "line number": [
      189
     ]
    },
    "mne.commands.mne_compute_proj_eog.mne": {
     "line number": [
      162,
      165,
      170,
      187,
      193,
      196
     ]
    },
    "mne.commands.mne_compute_proj_eog.os": {
     "line number": [
      189,
      190
     ]
    },
    "mne.commands.mne_compute_proj_eog.sys": {
     "line number": [
      115
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      35
     ]
    },
    "open": {
     "line number": [
      144
     ]
    },
    "print": {
     "line number": [
      146,
      185,
      192,
      195
     ]
    },
    "str": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_compute_proj_eog.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_coreg.mne": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_coreg.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.faulthandler": {
  "data": {
   "shadows": "faulthandler"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      104
     ]
    },
    "ValueError": {
     "line number": [
      86
     ]
    },
    "float": {
     "line number": [
      41,
      75
     ]
    },
    "mne.commands.mne_coreg.faulthandler": {
     "line number": [
      103
     ]
    },
    "mne.commands.mne_coreg.mne": {
     "line number": [
      107
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      80
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      24
     ]
    },
    "mne.utils.ETSContext": {
     "line number": [
      106
     ]
    },
    "os.path.expanduser": {
     "line number": [
      97,
      100
     ]
    },
    "str": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_flash_bem": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_flash_bem.mne": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_flash_bem.convert_flash_mris": {
  "data": {
   "shadows": "mne.bem.convert_flash_mris"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.make_flash_bem": {
  "data": {
   "shadows": "mne.bem.make_flash_bem"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      98
     ]
    },
    "mne.bem.convert_flash_mris": {
     "line number": [
      100
     ]
    },
    "mne.bem.make_flash_bem": {
     "line number": [
      103
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_freeview_bem_surfaces.mne": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_freeview_bem_surfaces.freeview_bem_surfaces": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      49
     ]
    },
    "ValueError": {
     "line number": [
      36,
      41
     ]
    },
    "mne.commands.mne_freeview_bem_surfaces.os": {
     "line number": [
      44
     ]
    },
    "mne.commands.mne_freeview_bem_surfaces.sys": {
     "line number": [
      75
     ]
    },
    "mne.utils.get_subjects_dir": {
     "line number": [
      33
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      75
     ]
    },
    "os.path.isdir": {
     "line number": [
      40
     ]
    },
    "os.path.join": {
     "line number": [
      38,
      51,
      52,
      53,
      56,
      57,
      58,
      59,
      62,
      63,
      64,
      65
     ]
    },
    "print": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.run": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "mne.commands.mne_freeview_bem_surfaces.freeview_bem_surfaces": {
     "line number": [
      102
     ]
    },
    "mne.commands.mne_freeview_bem_surfaces.os": {
     "line number": [
      85
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      83
     ]
    },
    "mne.utils.get_subjects_dir": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_kit2fiff.mne": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_kit2fiff.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.run": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "int": {
     "line number": [
      76
     ]
    },
    "isinstance": {
     "line number": [
      75
     ]
    },
    "map": {
     "line number": [
      76
     ]
    },
    "mne.commands.mne_kit2fiff.mne": {
     "line number": [
      59,
      64
     ]
    },
    "mne.commands.mne_kit2fiff.sys": {
     "line number": [
      65
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      31
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      78
     ]
    },
    "mne.utils.ETSContext": {
     "line number": [
      63
     ]
    },
    "str": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_kit2fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_make_scalp_surfaces.mne": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_make_scalp_surfaces.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces._check_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      31
     ]
    },
    "os.path.isfile": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces._run": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      73,
      78,
      101
     ]
    },
    "check_seghead": {
     "line number": [
      94,
      99
     ]
    },
    "dict": {
     "line number": [
      131
     ]
    },
    "enumerate": {
     "line number": [
      120
     ]
    },
    "len": {
     "line number": [
      119
     ]
    },
    "mne.commands.mne_make_scalp_surfaces._check_file": {
     "line number": [
      109,
      129
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.copy": {
     "line number": [
      68
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.mne": {
     "line number": [
      112,
      113,
      115,
      124,
      130,
      132,
      134
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.os": {
     "line number": [
      68,
      106,
      118
     ]
    },
    "mne.utils.ETSContext": {
     "line number": [
      123
     ]
    },
    "mne.utils.get_subjects_dir": {
     "line number": [
      69
     ]
    },
    "mne.utils.logger.info": {
     "line number": [
      83,
      108,
      121,
      122,
      128
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      96
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      66
     ]
    },
    "os.path.exists": {
     "line number": [
      77,
      81
     ]
    },
    "os.path.isdir": {
     "line number": [
      105
     ]
    },
    "os.path.join": {
     "line number": [
      76,
      81,
      104,
      107
     ]
    },
    "zip": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces._run.check_seghead": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "os.path.exists": {
     "line number": [
      89
     ]
    },
    "os.path.join": {
     "line number": [
      85,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.run": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "mne.commands.mne_make_scalp_surfaces._run": {
     "line number": [
      62
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.mne": {
     "line number": [
      40
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.os": {
     "line number": [
      57
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.sys": {
     "line number": [
      61
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      54
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      39
     ]
    },
    "vars": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_maxfilter.mne": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_maxfilter.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "mne.commands.mne_maxfilter.mne": {
     "line number": [
      139
     ]
    },
    "mne.commands.mne_maxfilter.os": {
     "line number": [
      135
     ]
    },
    "mne.commands.mne_maxfilter.sys": {
     "line number": [
      100
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      26
     ]
    },
    "open": {
     "line number": [
      136,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_maxfilter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_prepare_bem_model.mne": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_prepare_bem_model._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "mne.commands.mne_prepare_bem_model.mne": {
     "line number": [
      50,
      52,
      53
     ]
    },
    "mne.commands.mne_prepare_bem_model.os": {
     "line number": [
      47
     ]
    },
    "mne.commands.mne_prepare_bem_model.sys": {
     "line number": [
      44
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      35
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_prepare_bem_model.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_report": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_report.mne": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_report.Report": {
  "data": {
   "shadows": "mne.report.Report"
  },
  "type": "import"
 },
 "mne.commands.mne_report._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_report.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_report.log_elapsed": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "mne.utils.logger.info": {
     "line number": [
      80
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      77
     ]
    },
    "round": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_report.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.commands.mne_report.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_report.run": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "float": {
     "line number": [
      137,
      138
     ]
    },
    "int": {
     "line number": [
      131,
      135
     ]
    },
    "mne.commands.mne_report.log_elapsed": {
     "line number": [
      152
     ]
    },
    "mne.commands.mne_report.sys": {
     "line number": [
      125
     ]
    },
    "mne.commands.mne_report.time": {
     "line number": [
      145,
      152
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      119
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      87
     ]
    },
    "mne.report.Report": {
     "line number": [
      146
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      132,
      148,
      150,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_report.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.commands.mne_report.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_setup_forward_model.mne": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_setup_forward_model._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "len": {
     "line number": [
      109
     ]
    },
    "list": {
     "line number": [
      109
     ]
    },
    "mne.commands.mne_setup_forward_model.mne": {
     "line number": [
      102,
      118,
      121,
      122
     ]
    },
    "mne.commands.mne_setup_forward_model.os": {
     "line number": [
      116,
      120
     ]
    },
    "mne.commands.mne_setup_forward_model.sys": {
     "line number": [
      74
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      69
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      22
     ]
    },
    "mne.utils.get_subjects_dir": {
     "line number": [
      115
     ]
    },
    "mne.utils.warn": {
     "line number": [
      88,
      91
     ]
    },
    "str": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_setup_forward_model.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.warn": {
  "data": {
   "shadows": "mne.utils.warn"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_setup_source_space.mne": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_setup_source_space._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space._check_option": {
  "data": {
   "shadows": "mne.utils._check_option"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      110
     ]
    },
    "len": {
     "line number": [
      108
     ]
    },
    "mne.commands.mne_setup_source_space.mne": {
     "line number": [
      132,
      138
     ]
    },
    "mne.commands.mne_setup_source_space.sys": {
     "line number": [
      89
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      83
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      25
     ]
    },
    "mne.utils._check_option": {
     "line number": [
      101
     ]
    },
    "oct": {
     "line number": [
      97,
      107,
      117,
      118
     ]
    },
    "str": {
     "line number": [
      116,
      118,
      124,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_setup_source_space.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_show_fiff.mne": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_show_fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff.run": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "len": {
     "line number": [
      32
     ]
    },
    "mne.commands.mne_show_fiff.mne": {
     "line number": [
      27,
      35
     ]
    },
    "mne.commands.mne_show_fiff.sys": {
     "line number": [
      34
     ]
    },
    "print": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_show_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_show_info": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_show_info.mne": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_show_info.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_show_info.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      30
     ]
    },
    "len": {
     "line number": [
      23
     ]
    },
    "mne.commands.mne_show_info.mne": {
     "line number": [
      20,
      32
     ]
    },
    "mne.commands.mne_show_info.sys": {
     "line number": [
      25
     ]
    },
    "print": {
     "line number": [
      33,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_show_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_surf2bem.mne": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_surf2bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "int": {
     "line number": [
      42
     ]
    },
    "mne.commands.mne_surf2bem.mne": {
     "line number": [
      42,
      44
     ]
    },
    "mne.commands.mne_surf2bem.sys": {
     "line number": [
      39
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      26
     ]
    },
    "print": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_surf2bem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_sys_info": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_sys_info.mne": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_sys_info.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_sys_info.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "len": {
     "line number": [
      22
     ]
    },
    "mne.commands.mne_sys_info.mne": {
     "line number": [
      20,
      26
     ]
    },
    "mne.commands.mne_sys_info.sys": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_sys_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_watershed_bem.mne": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_watershed_bem._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem._check_option": {
  "data": {
   "shadows": "mne.utils._check_option"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.make_watershed_bem": {
  "data": {
   "shadows": "mne.bem.make_watershed_bem"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.bem.make_watershed_bem": {
     "line number": [
      79
     ]
    },
    "mne.commands.mne_watershed_bem.sys": {
     "line number": [
      61
     ]
    },
    "mne.commands.utils._add_verbose_flag": {
     "line number": [
      55
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      24
     ]
    },
    "mne.utils._check_option": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.mne_watershed_bem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_what": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.mne_what.mne": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.mne_what.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_what.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_what.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "mne.commands.mne_what.mne": {
     "line number": [
      23
     ]
    },
    "mne.commands.utils.get_optparser": {
     "line number": [
      20
     ]
    },
    "print": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests": {
  "data": {},
  "type": "module"
 },
 "mne.commands.tests.test_commands": {
  "data": {
   "symbols_in_volume": {
    "mne.commands.tests.test_commands.base_dir": {
     "line number": [
      31
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      33
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      397
     ]
    },
    "os.path.dirname": {
     "line number": [
      30
     ]
    },
    "os.path.join": {
     "line number": [
      30,
      31,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.commands.tests.test_commands.ArgvSetter": {
  "data": {
   "shadows": "mne.utils.ArgvSetter"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.ConductorModel": {
  "data": {
   "shadows": "mne.bem.ConductorModel"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.base_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.check_usage": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "SystemExit": {
     "line number": [
      42
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_anonymize": {
  "data": {
   "shadows": "mne.commands.mne_anonymize"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_browse_raw": {
  "data": {
   "shadows": "mne.commands.mne_browse_raw"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_bti2fiff": {
  "data": {
   "shadows": "mne.commands.mne_bti2fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_clean_eog_ecg": {
  "data": {
   "shadows": "mne.commands.mne_clean_eog_ecg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compare_fiff": {
  "data": {
   "shadows": "mne.commands.mne_compare_fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compute_proj_ecg": {
  "data": {
   "shadows": "mne.commands.mne_compute_proj_ecg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compute_proj_eog": {
  "data": {
   "shadows": "mne.commands.mne_compute_proj_eog"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_coreg": {
  "data": {
   "shadows": "mne.commands.mne_coreg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_flash_bem": {
  "data": {
   "shadows": "mne.commands.mne_flash_bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_kit2fiff": {
  "data": {
   "shadows": "mne.commands.mne_kit2fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_make_scalp_surfaces": {
  "data": {
   "shadows": "mne.commands.mne_make_scalp_surfaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_maxfilter": {
  "data": {
   "shadows": "mne.commands.mne_maxfilter"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_prepare_bem_model": {
  "data": {
   "shadows": "mne.commands.mne_prepare_bem_model"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_report": {
  "data": {
   "shadows": "mne.commands.mne_report"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_setup_forward_model": {
  "data": {
   "shadows": "mne.commands.mne_setup_forward_model"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_setup_source_space": {
  "data": {
   "shadows": "mne.commands.mne_setup_source_space"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_show_fiff": {
  "data": {
   "shadows": "mne.commands.mne_show_fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_show_info": {
  "data": {
   "shadows": "mne.commands.mne_show_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_surf2bem": {
  "data": {
   "shadows": "mne.commands.mne_surf2bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_sys_info": {
  "data": {
   "shadows": "mne.commands.mne_sys_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_watershed_bem": {
  "data": {
   "shadows": "mne.commands.mne_watershed_bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_what": {
  "data": {
   "shadows": "mne.commands.mne_what"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.raw_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_vtk": {
  "data": {
   "shadows": "mne.utils.requires_vtk"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.subjects_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.test_anonymize": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "mne.commands.mne_anonymize": {
     "line number": [
      388
     ]
    },
    "mne.commands.mne_anonymize.run": {
     "line number": [
      391
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      388
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      390
     ]
    },
    "mne.io.read_info": {
     "line number": [
      392
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      390
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      394
     ]
    },
    "os.path.exists": {
     "line number": [
      393
     ]
    },
    "os.path.join": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_browse_raw": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "mne.commands.mne_browse_raw": {
     "line number": [
      50
     ]
    },
    "mne.commands.mne_browse_raw.run": {
     "line number": [
      53
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      50
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      52,
      47
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      51
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_bti2fiff": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "mne.commands.mne_bti2fiff": {
     "line number": [
      66
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_clean_eog_ecg": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "len": {
     "line number": [
      97
     ]
    },
    "mne.commands.mne_clean_eog_ecg": {
     "line number": [
      86
     ]
    },
    "mne.commands.mne_clean_eog_ecg.run": {
     "line number": [
      94
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      86
     ]
    },
    "mne.commands.tests.test_commands.glob": {
     "line number": [
      96
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      89,
      89,
      89,
      91
     ]
    },
    "mne.concatenate_raws": {
     "line number": [
      88
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      88
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      93
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      83
     ]
    },
    "os.path.basename": {
     "line number": [
      91
     ]
    },
    "os.path.join": {
     "line number": [
      91,
      96
     ]
    },
    "str": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_compare_fiff": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "mne.commands.mne_compare_fiff": {
     "line number": [
      71
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_compute_proj_exg": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "len": {
     "line number": [
      116,
      118
     ]
    },
    "mne.commands.mne_compute_proj_ecg": {
     "line number": [
      101
     ]
    },
    "mne.commands.mne_compute_proj_eog": {
     "line number": [
      101
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      104
     ]
    },
    "mne.commands.tests.test_commands.glob": {
     "line number": [
      115,
      117
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      113,
      100,
      101
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      106,
      110
     ]
    },
    "mne.commands.tests.test_commands.shutil": {
     "line number": [
      110
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      111
     ]
    },
    "open": {
     "line number": [
      108
     ]
    },
    "os.path.basename": {
     "line number": [
      106
     ]
    },
    "os.path.join": {
     "line number": [
      106,
      107,
      115,
      117
     ]
    },
    "str": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_coreg": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      123
     ]
    },
    "mne.commands.mne_coreg": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_flash_bem": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      291
     ]
    },
    "len": {
     "line number": [
      295
     ]
    },
    "mne.commands.mne_flash_bem": {
     "line number": [
      266
     ]
    },
    "mne.commands.mne_flash_bem.run": {
     "line number": [
      289
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      266
     ]
    },
    "mne.commands.tests.test_commands.os": {
     "line number": [
      272,
      273
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      259,
      260,
      261
     ]
    },
    "mne.commands.tests.test_commands.shutil": {
     "line number": [
      274,
      276,
      282
     ]
    },
    "mne.commands.tests.test_commands.subjects_dir": {
     "line number": [
      269,
      299
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      263
     ]
    },
    "mne.read_surface": {
     "line number": [
      293,
      299
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      287
     ]
    },
    "mne.utils.requires_freesurfer": {
     "line number": [
      262
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      301,
      302
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      295,
      296,
      297
     ]
    },
    "os.path.basename": {
     "line number": [
      282
     ]
    },
    "os.path.isfile": {
     "line number": [
      286
     ]
    },
    "os.path.join": {
     "line number": [
      269,
      270,
      271,
      272,
      273,
      274,
      275,
      276,
      277,
      279,
      281,
      282,
      286,
      293,
      299
     ]
    },
    "str": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_kit2fiff": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "mne.commands.mne_kit2fiff": {
     "line number": [
      129
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_make_scalp_surfaces": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      160
     ]
    },
    "RuntimeError": {
     "line number": [
      155
     ]
    },
    "len": {
     "line number": [
      164
     ]
    },
    "mne.commands.mne_make_scalp_surfaces": {
     "line number": [
      137
     ]
    },
    "mne.commands.mne_make_scalp_surfaces.run": {
     "line number": [
      155,
      157,
      161
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      137
     ]
    },
    "mne.commands.tests.test_commands.os": {
     "line number": [
      138,
      143,
      144,
      146,
      170
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      155,
      160,
      132
     ]
    },
    "mne.commands.tests.test_commands.shutil": {
     "line number": [
      147
     ]
    },
    "mne.commands.tests.test_commands.subjects_dir": {
     "line number": [
      141,
      166
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      134
     ]
    },
    "mne.read_bem_surfaces": {
     "line number": [
      163,
      166
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      153
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      150,
      154,
      156
     ]
    },
    "mne.utils.requires_vtk": {
     "line number": [
      133
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      168
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      164
     ]
    },
    "os.path.isfile": {
     "line number": [
      158,
      159
     ]
    },
    "os.path.join": {
     "line number": [
      141,
      142,
      143,
      145,
      147,
      151,
      152,
      166
     ]
    },
    "str": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_maxfilter": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      178
     ]
    },
    "mne.commands.mne_maxfilter": {
     "line number": [
      175
     ]
    },
    "mne.commands.mne_maxfilter.run": {
     "line number": [
      181
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      175
     ]
    },
    "mne.commands.tests.test_commands.os": {
     "line number": [
      179,
      183
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      178
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      176,
      177
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_mne_prepare_bem_model": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      365
     ]
    },
    "mne.bem.ConductorModel": {
     "line number": [
      365
     ]
    },
    "mne.commands.mne_prepare_bem_model": {
     "line number": [
      355
     ]
    },
    "mne.commands.mne_prepare_bem_model.run": {
     "line number": [
      363
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      355
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      351
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      357
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      352
     ]
    },
    "mne.read_bem_solution": {
     "line number": [
      364
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      361
     ]
    },
    "os.path.join": {
     "line number": [
      357,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_report": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "len": {
     "line number": [
      204
     ]
    },
    "mne.commands.mne_report": {
     "line number": [
      195
     ]
    },
    "mne.commands.mne_report.run": {
     "line number": [
      202
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      195
     ]
    },
    "mne.commands.tests.test_commands.glob": {
     "line number": [
      203
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      201,
      189
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      197,
      198
     ]
    },
    "mne.commands.tests.test_commands.shutil": {
     "line number": [
      198
     ]
    },
    "mne.commands.tests.test_commands.subjects_dir": {
     "line number": [
      199
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      192
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      199
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      190
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      191
     ]
    },
    "os.path.basename": {
     "line number": [
      197
     ]
    },
    "os.path.join": {
     "line number": [
      197,
      203
     ]
    },
    "str": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_setup_forward_model": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "len": {
     "line number": [
      346
     ]
    },
    "mne.commands.mne_setup_forward_model": {
     "line number": [
      337
     ]
    },
    "mne.commands.mne_setup_forward_model.run": {
     "line number": [
      344
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      337
     ]
    },
    "mne.commands.tests.test_commands.subjects_dir": {
     "line number": [
      339,
      342
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      339
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      334
     ]
    },
    "mne.read_bem_solution": {
     "line number": [
      348
     ]
    },
    "mne.read_bem_surfaces": {
     "line number": [
      345
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      342
     ]
    },
    "os.path.join": {
     "line number": [
      339,
      340
     ]
    },
    "os.path.splitext": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_setup_source_space": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      319,
      323,
      327
     ]
    },
    "len": {
     "line number": [
      318
     ]
    },
    "mne.commands.mne_setup_source_space": {
     "line number": [
      308
     ]
    },
    "mne.commands.mne_setup_source_space.run": {
     "line number": [
      316,
      322,
      326,
      331
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      308
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      319,
      323,
      327
     ]
    },
    "mne.commands.tests.test_commands.subjects_dir": {
     "line number": [
      310,
      313,
      320,
      324,
      328
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      310
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      305
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      317
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      313,
      320,
      324,
      328
     ]
    },
    "os.path.join": {
     "line number": [
      310,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_show_fiff": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "mne.commands.mne_show_fiff": {
     "line number": [
      76
     ]
    },
    "mne.commands.mne_show_fiff.run": {
     "line number": [
      78,
      80
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      76
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      77,
      79
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      77,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_show_info": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "mne.commands.mne_show_info": {
     "line number": [
      370
     ]
    },
    "mne.commands.mne_show_info.run": {
     "line number": [
      372
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      370
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      371
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_surf2bem": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "mne.commands.mne_surf2bem": {
     "line number": [
      209
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_sys_info": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "SystemExit": {
     "line number": [
      379
     ]
    },
    "mne.commands.mne_sys_info": {
     "line number": [
      377
     ]
    },
    "mne.commands.mne_sys_info.run": {
     "line number": [
      380,
      382
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      377
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      379
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      378
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      378,
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_watershed_bem": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "PermissionError": {
     "line number": [
      235
     ]
    },
    "dict": {
     "line number": [
      244
     ]
    },
    "len": {
     "line number": [
      249
     ]
    },
    "mne.commands.mne_watershed_bem": {
     "line number": [
      220
     ]
    },
    "mne.commands.mne_watershed_bem.run": {
     "line number": [
      237,
      242
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      220
     ]
    },
    "mne.commands.tests.test_commands.os": {
     "line number": [
      229,
      232,
      233,
      238
     ]
    },
    "mne.commands.tests.test_commands.pytest": {
     "line number": [
      235,
      212,
      213,
      214
     ]
    },
    "mne.commands.tests.test_commands.shutil": {
     "line number": [
      231
     ]
    },
    "mne.commands.tests.test_commands.subjects_dir": {
     "line number": [
      226
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      217
     ]
    },
    "mne.read_surface": {
     "line number": [
      246
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      236,
      241
     ]
    },
    "mne.utils.requires_freesurfer": {
     "line number": [
      216
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      215
     ]
    },
    "numpy.array": {
     "line number": [
      222,
      223
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      253,
      254,
      255,
      256
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      249,
      250,
      251
     ]
    },
    "os.path.isfile": {
     "line number": [
      240
     ]
    },
    "os.path.join": {
     "line number": [
      226,
      227,
      228,
      230,
      231,
      240,
      246
     ]
    },
    "str": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_what": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "mne.commands.mne_browse_raw": {
     "line number": [
      58
     ]
    },
    "mne.commands.mne_what.run": {
     "line number": [
      60
     ]
    },
    "mne.commands.tests.test_commands.check_usage": {
     "line number": [
      58
     ]
    },
    "mne.commands.tests.test_commands.raw_fname": {
     "line number": [
      59
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.commands.utils": {
  "data": {},
  "type": "module"
 },
 "mne.commands.utils.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "mne.commands.utils._add_verbose_flag": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mne.commands.utils.get_optparser": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "len": {
     "line number": [
      56,
      62
     ]
    },
    "mne.commands.utils.load_module": {
     "line number": [
      50
     ]
    },
    "mne.commands.utils.mne": {
     "line number": [
      69
     ]
    },
    "mne.commands.utils.os": {
     "line number": [
      60,
      61
     ]
    },
    "optparse.OptionParser": {
     "line number": [
      73
     ]
    },
    "optparse.OptionParser.format_epilog": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.commands.utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mne.commands.utils.load_module": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "importlib.util.module_from_spec": {
     "line number": [
      42
     ]
    },
    "importlib.util.spec_from_file_location": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.utils.main": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "len": {
     "line number": [
      96
     ]
    },
    "mne.commands.utils.glob": {
     "line number": [
      84
     ]
    },
    "mne.commands.utils.importlib": {
     "line number": [
      105
     ]
    },
    "mne.commands.utils.mne": {
     "line number": [
      99
     ]
    },
    "mne.commands.utils.sys": {
     "line number": [
      96,
      96,
      96,
      98,
      100,
      101,
      104,
      106,
      106
     ]
    },
    "os.path.dirname": {
     "line number": [
      83,
      83
     ]
    },
    "os.path.join": {
     "line number": [
      84
     ]
    },
    "os.path.sep": {
     "line number": [
      86
     ]
    },
    "print": {
     "line number": [
      99,
      101
     ]
    },
    "print_help": {
     "line number": [
      97,
      102
     ]
    },
    "sorted": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.utils.main.print_help": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "print": {
     "line number": [
      89,
      90,
      92,
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.commands.utils.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.utils.module_from_spec": {
  "data": {
   "shadows": "importlib.util.module_from_spec"
  },
  "type": "import"
 },
 "mne.commands.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.utils.spec_from_file_location": {
  "data": {
   "shadows": "importlib.util.spec_from_file_location"
  },
  "type": "import"
 },
 "mne.commands.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.connectivity": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.effective": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.effective.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.connectivity.effective.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.effective.phase_slope_index": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      129
     ]
    },
    "list": {
     "line number": [
      128,
      134,
      143
     ]
    },
    "mne.connectivity.effective.copy": {
     "line number": [
      139
     ]
    },
    "numpy.asarray": {
     "line number": [
      128,
      128
     ]
    },
    "numpy.complex128": {
     "line number": [
      141
     ]
    },
    "numpy.conj": {
     "line number": [
      154
     ]
    },
    "numpy.empty": {
     "line number": [
      141
     ]
    },
    "numpy.float64": {
     "line number": [
      136
     ]
    },
    "numpy.imag": {
     "line number": [
      157
     ]
    },
    "numpy.inf": {
     "line number": [
      15,
      126
     ]
    },
    "numpy.pi": {
     "line number": [
      14
     ]
    },
    "numpy.where": {
     "line number": [
      147
     ]
    },
    "numpy.zeros": {
     "line number": [
      136
     ]
    },
    "slice": {
     "line number": [
      144,
      145
     ]
    },
    "spectral_connectivity": {
     "line number": [
      115
     ]
    },
    "tuple": {
     "line number": [
      154,
      154,
      157
     ]
    },
    "zip": {
     "line number": [
      128,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.envelope": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.envelope.envelope_correlation": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      83,
      87,
      97
     ]
    },
    "_check_combine": {
     "line number": [
      70
     ]
    },
    "_check_option": {
     "line number": [
      66
     ]
    },
    "enumerate": {
     "line number": [
      79,
      108
     ]
    },
    "fun": {
     "line number": [
      129
     ]
    },
    "isinstance": {
     "line number": [
      80
     ]
    },
    "list": {
     "line number": [
      74
     ]
    },
    "next_fast_len": {
     "line number": [
      93
     ]
    },
    "numpy.abs": {
     "line number": [
      99,
      124
     ]
    },
    "numpy.array": {
     "line number": [
      72
     ]
    },
    "numpy.complex128": {
     "line number": [
      96
     ]
    },
    "numpy.complex64": {
     "line number": [
      96
     ]
    },
    "numpy.dot": {
     "line number": [
      119
     ]
    },
    "numpy.empty": {
     "line number": [
      107
     ]
    },
    "numpy.float32": {
     "line number": [
      92
     ]
    },
    "numpy.float64": {
     "line number": [
      92
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      105,
      116
     ]
    },
    "numpy.mean": {
     "line number": [
      103,
      114
     ]
    },
    "scipy.signal.hilbert": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.envelope.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.connectivity.envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.spectral": {
  "data": {
   "symbols_in_volume": {
    "mne.connectivity.spectral._CohEst": {
     "line number": [
      511
     ]
    },
    "mne.connectivity.spectral._CohyEst": {
     "line number": [
      511
     ]
    },
    "mne.connectivity.spectral._ImCohEst": {
     "line number": [
      511
     ]
    },
    "mne.connectivity.spectral._PLIEst": {
     "line number": [
      513
     ]
    },
    "mne.connectivity.spectral._PLIUnbiasedEst": {
     "line number": [
      513
     ]
    },
    "mne.connectivity.spectral._PLVEst": {
     "line number": [
      512
     ]
    },
    "mne.connectivity.spectral._PPCEst": {
     "line number": [
      512
     ]
    },
    "mne.connectivity.spectral._WPLIDebiasedEst": {
     "line number": [
      514
     ]
    },
    "mne.connectivity.spectral._WPLIEst": {
     "line number": [
      514
     ]
    },
    "mne.connectivity.spectral._ciPLVEst": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.connectivity.spectral._AbstractConEstBase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "object": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._AbstractConEstBase.accumulate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.combine": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.compute_con": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.start_epoch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CON_METHOD_MAP": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "mne.connectivity.spectral._CohEst": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "mne.connectivity.spectral._CohEstBase": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohEst.compute_con": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      91
     ]
    },
    "numpy.sqrt": {
     "line number": [
      91
     ]
    },
    "numpy.zeros": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohEstBase": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohEstBase.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "mne.connectivity.spectral._CohEstBase": {
     "line number": [
      71
     ]
    },
    "numpy.complex128": {
     "line number": [
      74
     ]
    },
    "numpy.zeros": {
     "line number": [
      74
     ]
    },
    "super": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohEstBase.accumulate": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohyEst": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "mne.connectivity.spectral._CohEstBase": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohyEst.compute_con": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.complex128": {
     "line number": [
      103
     ]
    },
    "numpy.sqrt": {
     "line number": [
      105
     ]
    },
    "numpy.zeros": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "mne.connectivity.spectral._AbstractConEstBase": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.combine": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.start_epoch": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ImCohEst": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "mne.connectivity.spectral._CohEstBase": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._ImCohEst.compute_con": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.imag": {
     "line number": [
      118
     ]
    },
    "numpy.sqrt": {
     "line number": [
      118
     ]
    },
    "numpy.zeros": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLIEst.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "mne.connectivity.spectral._PLIEst": {
     "line number": [
      178
     ]
    },
    "numpy.zeros": {
     "line number": [
      181
     ]
    },
    "super": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst.accumulate": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.imag": {
     "line number": [
      185
     ]
    },
    "numpy.sign": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst.compute_con": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      192
     ]
    },
    "numpy.zeros": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIUnbiasedEst": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "mne.connectivity.spectral._PLIEst": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLIUnbiasedEst.compute_con": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLVEst.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "mne.connectivity.spectral._PLVEst": {
     "line number": [
      127
     ]
    },
    "numpy.complex128": {
     "line number": [
      130
     ]
    },
    "numpy.zeros": {
     "line number": [
      130
     ]
    },
    "super": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst.accumulate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst.compute_con": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      140
     ]
    },
    "numpy.zeros": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PPCEst.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "mne.connectivity.spectral._PPCEst": {
     "line number": [
      299
     ]
    },
    "numpy.complex128": {
     "line number": [
      302
     ]
    },
    "numpy.zeros": {
     "line number": [
      302
     ]
    },
    "super": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst.accumulate": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      306
     ]
    },
    "numpy.where": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst.compute_con": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "numpy.conj": {
     "line number": [
      321
     ]
    },
    "numpy.real": {
     "line number": [
      324
     ]
    },
    "numpy.zeros": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "mne.connectivity.spectral._WPLIDebiasedEst": {
     "line number": [
      256
     ]
    },
    "numpy.zeros": {
     "line number": [
      259
     ]
    },
    "super": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.accumulate": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      265
     ]
    },
    "numpy.imag": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.compute_con": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.where": {
     "line number": [
      282
     ]
    },
    "numpy.zeros": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._WPLIEst.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "mne.connectivity.spectral._WPLIEst": {
     "line number": [
      218
     ]
    },
    "numpy.zeros": {
     "line number": [
      222
     ]
    },
    "super": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst.accumulate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      228
     ]
    },
    "numpy.imag": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst.compute_con": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      235
     ]
    },
    "numpy.where": {
     "line number": [
      239
     ]
    },
    "numpy.zeros": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._assemble_spectral_params": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1075,
      1085
     ]
    },
    "_compute_mt_params": {
     "line number": [
      1059
     ]
    },
    "dict": {
     "line number": [
      1054
     ]
    },
    "float": {
     "line number": [
      1072
     ]
    },
    "len": {
     "line number": [
      1073,
      1074,
      1074
     ]
    },
    "morlet": {
     "line number": [
      1081
     ]
    },
    "numpy.array": {
     "line number": [
      1072
     ]
    },
    "numpy.hanning": {
     "line number": [
      1065
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._check_estimators": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      525,
      531,
      541
     ]
    },
    "_get_args": {
     "line number": [
      536
     ]
    },
    "any": {
     "line number": [
      540,
      544
     ]
    },
    "isinstance": {
     "line number": [
      524
     ]
    },
    "len": {
     "line number": [
      519,
      536
     ]
    },
    "list": {
     "line number": [
      520
     ]
    },
    "mne.connectivity.spectral._CON_METHOD_MAP": {
     "line number": [
      522,
      523
     ]
    },
    "mne.connectivity.spectral._check_method": {
     "line number": [
      529
     ]
    },
    "mtype": {
     "line number": [
      537
     ]
    },
    "mtype.compute_con": {
     "line number": [
      536
     ]
    },
    "str": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._check_method": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "inspect.getmembers": {
     "line number": [
      467,
      469
     ]
    },
    "mne.connectivity.spectral._AbstractConEstBase": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ciPLVEst": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "mne.connectivity.spectral._EpochMeanConEstBase": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.connectivity.spectral._ciPLVEst.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "mne.connectivity.spectral._ciPLVEst": {
     "line number": [
      150
     ]
    },
    "numpy.complex128": {
     "line number": [
      153
     ]
    },
    "numpy.zeros": {
     "line number": [
      153
     ]
    },
    "super": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ciPLVEst.accumulate": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ciPLVEst.compute_con": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      163,
      166
     ]
    },
    "numpy.clip": {
     "line number": [
      165
     ]
    },
    "numpy.imag": {
     "line number": [
      163
     ]
    },
    "numpy.real": {
     "line number": [
      164
     ]
    },
    "numpy.sqrt": {
     "line number": [
      168
     ]
    },
    "numpy.zeros": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._epoch_spectral_connectivity": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      349
     ]
    },
    "_csd_from_mt": {
     "line number": [
      426,
      431
     ]
    },
    "_mt_spectra": {
     "line number": [
      366
     ]
    },
    "_psd_from_mt": {
     "line number": [
      387
     ]
    },
    "_psd_from_mt_adaptive": {
     "line number": [
      372
     ]
    },
    "cwt": {
     "line number": [
      396
     ]
    },
    "enumerate": {
     "line number": [
      438
     ]
    },
    "functools.partial": {
     "line number": [
      360,
      390
     ]
    },
    "isinstance": {
     "line number": [
      359,
      389
     ]
    },
    "len": {
     "line number": [
      335,
      339,
      350
     ]
    },
    "list": {
     "line number": [
      355,
      356
     ]
    },
    "mtype": {
     "line number": [
      346,
      347
     ]
    },
    "numpy.array": {
     "line number": [
      384
     ]
    },
    "numpy.concatenate": {
     "line number": [
      404,
      406
     ]
    },
    "numpy.newaxis": {
     "line number": [
      381,
      381
     ]
    },
    "numpy.sqrt": {
     "line number": [
      381
     ]
    },
    "numpy.sum": {
     "line number": [
      342
     ]
    },
    "range": {
     "line number": [
      423,
      438
     ]
    },
    "slice": {
     "line number": [
      352,
      424,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._get_and_verify_data_sizes": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      481,
      487,
      503
     ]
    },
    "hasattr": {
     "line number": [
      493
     ]
    },
    "isinstance": {
     "line number": [
      480
     ]
    },
    "list": {
     "line number": [
      480
     ]
    },
    "numpy.any": {
     "line number": [
      496
     ]
    },
    "tuple": {
     "line number": [
      480
     ]
    },
    "warn": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._get_n_epochs": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      455
     ]
    },
    "len": {
     "line number": [
      458,
      461
     ]
    },
    "list": {
     "line number": [
      453,
      455,
      460
     ]
    },
    "tuple": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral._prepare_connectivity": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      980,
      985,
      989,
      1026
     ]
    },
    "_time_mask": {
     "line number": [
      948
     ]
    },
    "any": {
     "line number": [
      984
     ]
    },
    "bool": {
     "line number": [
      1006
     ]
    },
    "check_indices": {
     "line number": [
      962
     ]
    },
    "enumerate": {
     "line number": [
      1024,
      1037
     ]
    },
    "float": {
     "line number": [
      992
     ]
    },
    "len": {
     "line number": [
      947,
      955,
      965,
      994,
      1006,
      1016,
      1024,
      1040
     ]
    },
    "mne.connectivity.spectral._get_and_verify_data_sizes": {
     "line number": [
      940
     ]
    },
    "numpy.any": {
     "line number": [
      998
     ]
    },
    "numpy.array": {
     "line number": [
      996
     ]
    },
    "numpy.float64": {
     "line number": [
      983
     ]
    },
    "numpy.inf": {
     "line number": [
      994
     ]
    },
    "numpy.linspace": {
     "line number": [
      944
     ]
    },
    "numpy.min": {
     "line number": [
      1002,
      1002,
      1003
     ]
    },
    "numpy.tril_indices": {
     "line number": [
      960
     ]
    },
    "numpy.where": {
     "line number": [
      949,
      1019
     ]
    },
    "numpy.zeros": {
     "line number": [
      1006
     ]
    },
    "range": {
     "line number": [
      1011
     ]
    },
    "rfftfreq": {
     "line number": [
      976
     ]
    },
    "warn": {
     "line number": [
      999
     ]
    },
    "zip": {
     "line number": [
      1007,
      1020
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.spectral.getmembers": {
  "data": {
   "shadows": "inspect.getmembers"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.spectral_connectivity": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      886
     ]
    },
    "ValueError": {
     "line number": [
      758,
      760,
      892,
      896
     ]
    },
    "dict": {
     "line number": [
      829
     ]
    },
    "float": {
     "line number": [
      755,
      756
     ]
    },
    "isinstance": {
     "line number": [
      765,
      772
     ]
    },
    "len": {
     "line number": [
      757,
      757,
      762,
      808,
      810,
      852,
      864
     ]
    },
    "list": {
     "line number": [
      765,
      872,
      912
     ]
    },
    "mne.connectivity.spectral._assemble_spectral_params": {
     "line number": [
      793
     ]
    },
    "mne.connectivity.spectral._check_estimators": {
     "line number": [
      770
     ]
    },
    "mne.connectivity.spectral._epoch_spectral_connectivity": {
     "line number": [
      748,
      847
     ]
    },
    "mne.connectivity.spectral._get_and_verify_data_sizes": {
     "line number": [
      826
     ]
    },
    "mne.connectivity.spectral._get_n_epochs": {
     "line number": [
      780
     ]
    },
    "mne.connectivity.spectral._prepare_connectivity": {
     "line number": [
      785
     ]
    },
    "mtype": {
     "line number": [
      816,
      817
     ]
    },
    "my_epoch_spectral_connectivity": {
     "line number": [
      854
     ]
    },
    "numpy.any": {
     "line number": [
      759
     ]
    },
    "numpy.array": {
     "line number": [
      755,
      756
     ]
    },
    "numpy.empty": {
     "line number": [
      899
     ]
    },
    "numpy.inf": {
     "line number": [
      550,
      753
     ]
    },
    "numpy.mean": {
     "line number": [
      902
     ]
    },
    "numpy.pi": {
     "line number": [
      549
     ]
    },
    "numpy.r_": {
     "line number": [
      800
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      803
     ]
    },
    "numpy.unique": {
     "line number": [
      800
     ]
    },
    "numpy.zeros": {
     "line number": [
      811,
      914
     ]
    },
    "parallel": {
     "line number": [
      854
     ]
    },
    "parallel_func": {
     "line number": [
      748
     ]
    },
    "range": {
     "line number": [
      880,
      900
     ]
    },
    "slice": {
     "line number": [
      877,
      881
     ]
    },
    "tuple": {
     "line number": [
      765
     ]
    },
    "zip": {
     "line number": [
      859,
      873
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_effective": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_effective.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.phase_slope_index": {
  "data": {
   "shadows": "mne.connectivity.phase_slope_index"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.test_psi": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "mne.connectivity.phase_slope_index": {
     "line number": [
      21,
      27,
      34
     ]
    },
    "numpy.all": {
     "line number": [
      38
     ]
    },
    "numpy.arange": {
     "line number": [
      33
     ]
    },
    "numpy.array": {
     "line number": [
      26,
      26
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      13
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      31
     ]
    },
    "range": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_envelope": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_envelope._compute_corrs_orig": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      20
     ]
    },
    "numpy.abs": {
     "line number": [
      21,
      22,
      29,
      29
     ]
    },
    "numpy.array": {
     "line number": [
      26,
      29
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      26
     ]
    },
    "numpy.dstack": {
     "line number": [
      24
     ]
    },
    "numpy.empty": {
     "line number": [
      19
     ]
    },
    "numpy.imag": {
     "line number": [
      21
     ]
    },
    "numpy.mean": {
     "line number": [
      29
     ]
    },
    "numpy.transpose": {
     "line number": [
      18,
      23,
      24,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_envelope.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.envelope_correlation": {
  "data": {
   "shadows": "mne.connectivity.envelope_correlation"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.test_envelope_correlation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      55,
      57,
      59,
      61,
      63,
      65
     ]
    },
    "int": {
     "line number": [
      56
     ]
    },
    "mne.connectivity.envelope_correlation": {
     "line number": [
      43,
      46,
      50,
      56,
      58,
      60,
      62,
      64,
      66,
      68
     ]
    },
    "mne.connectivity.tests.test_envelope._compute_corrs_orig": {
     "line number": [
      39
     ]
    },
    "mne.connectivity.tests.test_envelope.pytest": {
     "line number": [
      55,
      57,
      59,
      61,
      63,
      65
     ]
    },
    "numpy.abs": {
     "line number": [
      73
     ]
    },
    "numpy.array": {
     "line number": [
      73
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      73
     ]
    },
    "numpy.diag": {
     "line number": [
      72
     ]
    },
    "numpy.mean": {
     "line number": [
      47,
      52,
      71
     ]
    },
    "numpy.min": {
     "line number": [
      70
     ]
    },
    "numpy.newaxis": {
     "line number": [
      58
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      44,
      48,
      53,
      72,
      74
     ]
    },
    "scipy.signal.hilbert": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.connectivity.tests.test_spectral.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._CohEst": {
  "data": {
   "shadows": "mne.connectivity.spectral._CohEst"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._get_n_epochs": {
  "data": {
   "shadows": "mne.connectivity.spectral._get_n_epochs"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._stc_gen": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "float": {
     "line number": [
      19,
      25
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      18,
      24
     ]
    },
    "numpy.arange": {
     "line number": [
      15
     ]
    },
    "numpy.empty": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.spectral_connectivity": {
  "data": {
   "shadows": "mne.connectivity.spectral_connectivity"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.test_spectral_connectivity": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61,
      62,
      66,
      68,
      69,
      71
     ]
    },
    "float": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      143,
      155,
      161,
      188,
      195
     ]
    },
    "len": {
     "line number": [
      85,
      156,
      156,
      171,
      171,
      189,
      189,
      190,
      196,
      201,
      202,
      208,
      210,
      211
     ]
    },
    "list": {
     "line number": [
      143,
      155,
      161,
      188,
      195,
      207
     ]
    },
    "mne.connectivity.spectral._CohEst": {
     "line number": [
      144
     ]
    },
    "mne.connectivity.spectral._get_n_epochs": {
     "line number": [
      208,
      210
     ]
    },
    "mne.connectivity.spectral_connectivity": {
     "line number": [
      61,
      62,
      66,
      68,
      69,
      71,
      96,
      149,
      181
     ]
    },
    "mne.connectivity.tests.test_spectral._stc_gen": {
     "line number": [
      148
     ]
    },
    "mne.connectivity.tests.test_spectral.pytest": {
     "line number": [
      61,
      62,
      66,
      68,
      69,
      71,
      29,
      32
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      51
     ]
    },
    "numpy.abs": {
     "line number": [
      130,
      131,
      132
     ]
    },
    "numpy.all": {
     "line number": [
      119,
      122,
      123,
      128,
      130,
      131,
      132,
      135,
      136,
      137,
      191
     ]
    },
    "numpy.arange": {
     "line number": [
      75
     ]
    },
    "numpy.array": {
     "line number": [
      141,
      141,
      208,
      209,
      210
     ]
    },
    "numpy.imag": {
     "line number": [
      127
     ]
    },
    "numpy.linspace": {
     "line number": [
      48
     ]
    },
    "numpy.mean": {
     "line number": [
      198,
      204
     ]
    },
    "numpy.ones": {
     "line number": [
      85
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      37
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      114,
      115,
      197,
      203
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      103,
      159,
      165,
      166,
      168,
      173,
      174,
      176,
      199,
      205
     ]
    },
    "numpy.transpose": {
     "line number": [
      58
     ]
    },
    "range": {
     "line number": [
      190,
      196,
      201,
      202,
      207
     ]
    },
    "zip": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.degree": {
  "data": {
   "shadows": "mne.connectivity.degree"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.seed_target_indices": {
  "data": {
   "shadows": "mne.connectivity.seed_target_indices"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.test_degree": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31
     ]
    },
    "mne.connectivity.degree": {
     "line number": [
      32,
      35,
      40,
      51,
      52,
      55,
      56
     ]
    },
    "mne.connectivity.tests.test_utils.pytest": {
     "line number": [
      31
     ]
    },
    "numpy.array": {
     "line number": [
      37
     ]
    },
    "numpy.eye": {
     "line number": [
      32,
      34
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      35,
      41,
      51,
      52,
      55,
      56
     ]
    },
    "numpy.zeros": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_utils.test_indices": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "len": {
     "line number": [
      19,
      20,
      20,
      21
     ]
    },
    "mne.connectivity.seed_target_indices": {
     "line number": [
      18
     ]
    },
    "numpy.arange": {
     "line number": [
      15
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      12
     ]
    },
    "numpy.sum": {
     "line number": [
      23,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.utils": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.utils.check_indices": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      10,
      13
     ]
    },
    "isinstance": {
     "line number": [
      9
     ]
    },
    "len": {
     "line number": [
      9,
      12,
      12
     ]
    },
    "tuple": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.utils.degree": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      72,
      82
     ]
    },
    "float": {
     "line number": [
      80
     ]
    },
    "int": {
     "line number": [
      86
     ]
    },
    "len": {
     "line number": [
      74,
      86
     ]
    },
    "numpy.allclose": {
     "line number": [
      75
     ]
    },
    "numpy.argsort": {
     "line number": [
      88
     ]
    },
    "numpy.array": {
     "line number": [
      69
     ]
    },
    "numpy.sum": {
     "line number": [
      92
     ]
    },
    "numpy.tril_indices": {
     "line number": [
      77
     ]
    },
    "round": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.connectivity.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.utils.seed_target_indices": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "len": {
     "line number": [
      38,
      39
     ]
    },
    "numpy.asarray": {
     "line number": [
      35,
      36
     ]
    },
    "numpy.concatenate": {
     "line number": [
      41
     ]
    },
    "numpy.tile": {
     "line number": [
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg": {
  "data": {
   "symbols_in_volume": {
    "mne.coreg.bem_dirname": {
     "line number": [
      43,
      46,
      47,
      48,
      50
     ]
    },
    "mne.coreg.bem_fname": {
     "line number": [
      44,
      45
     ]
    },
    "mne.coreg.head_bem_fname": {
     "line number": [
      49
     ]
    },
    "mne.coreg.os": {
     "line number": [
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      46,
      47,
      48,
      50,
      51,
      52
     ]
    },
    "mne.coreg.subject_dirname": {
     "line number": [
      39,
      40,
      41,
      42
     ]
    },
    "mne.coreg.surf_dirname": {
     "line number": [
      51,
      52
     ]
    },
    "pformat": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.coreg._ALLOW_ANALITICAL": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "mne.coreg._decimate_points": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      233
     ]
    },
    "numpy.arange": {
     "line number": [
      223,
      224,
      225
     ]
    },
    "numpy.argmin": {
     "line number": [
      245
     ]
    },
    "numpy.array": {
     "line number": [
      243
     ]
    },
    "numpy.asarray": {
     "line number": [
      218
     ]
    },
    "numpy.empty": {
     "line number": [
      232
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      228
     ]
    },
    "numpy.logical_and": {
     "line number": [
      237,
      238,
      239,
      240,
      240
     ]
    },
    "numpy.nonzero": {
     "line number": [
      233
     ]
    },
    "numpy.sum": {
     "line number": [
      232
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      244
     ]
    },
    "zip": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._find_fiducials_files": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "glob.iglob": {
     "line number": [
      619
     ]
    },
    "mne.coreg.fid_fname": {
     "line number": [
      611,
      613
     ]
    },
    "mne.coreg.fid_fname_general": {
     "line number": [
      615,
      617,
      622
     ]
    },
    "mne.coreg.os": {
     "line number": [
      611
     ]
    },
    "mne.coreg.re": {
     "line number": [
      620
     ]
    },
    "pformat": {
     "line number": [
      615,
      617,
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._find_head_bem": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "mne.coreg._head_fnames": {
     "line number": [
      72
     ]
    },
    "mne.coreg._high_res_head_fnames": {
     "line number": [
      72
     ]
    },
    "mne.coreg.os": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._find_label_paths": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "get_subjects_dir": {
     "line number": [
      471
     ]
    },
    "glob.iglob": {
     "line number": [
      483
     ]
    },
    "mne.coreg.fnmatch": {
     "line number": [
      479
     ]
    },
    "mne.coreg.os": {
     "line number": [
      472,
      473,
      477,
      478,
      480,
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._find_mri_paths": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      560
     ]
    },
    "get_subjects_dir": {
     "line number": [
      508
     ]
    },
    "glob.iglob": {
     "line number": [
      547
     ]
    },
    "len": {
     "line number": [
      559,
      595
     ]
    },
    "mne.coreg._find_fiducials_files": {
     "line number": [
      557
     ]
    },
    "mne.coreg.bem_dirname": {
     "line number": [
      512,
      529,
      590,
      596
     ]
    },
    "mne.coreg.bem_fname": {
     "line number": [
      543,
      545
     ]
    },
    "mne.coreg.fnmatch": {
     "line number": [
      591,
      601
     ]
    },
    "mne.coreg.head_bem_fname": {
     "line number": [
      540
     ]
    },
    "mne.coreg.mri_dirname": {
     "line number": [
      600
     ]
    },
    "mne.coreg.mri_transforms_dirname": {
     "line number": [
      582
     ]
    },
    "mne.coreg.os": {
     "line number": [
      516,
      520,
      527,
      529,
      534,
      541,
      568,
      569,
      576,
      582,
      584,
      591,
      596,
      601,
      602
     ]
    },
    "mne.coreg.re": {
     "line number": [
      548
     ]
    },
    "mne.coreg.surf_dirname": {
     "line number": [
      512,
      516,
      568,
      569
     ]
    },
    "pformat": {
     "line number": [
      528,
      535,
      543,
      545,
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._generic_fit": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      443
     ]
    },
    "len": {
     "line number": [
      392
     ]
    },
    "numpy.hstack": {
     "line number": [
      392
     ]
    },
    "numpy.ones": {
     "line number": [
      392
     ]
    },
    "scipy.optimize.leastsq": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._generic_fit.error": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      432
     ]
    },
    "numpy.dot": {
     "line number": [
      432,
      435
     ]
    },
    "rotation": {
     "line number": [
      433
     ]
    },
    "scaling": {
     "line number": [
      434
     ]
    },
    "translation": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._head_fnames": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.coreg._high_res_head_fnames": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.coreg._is_mri_subject": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      642
     ]
    },
    "get_subjects_dir": {
     "line number": [
      641
     ]
    },
    "mne.coreg._find_head_bem": {
     "line number": [
      642,
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._is_scaled_mri_subject": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "get_subjects_dir": {
     "line number": [
      661
     ]
    },
    "mne.coreg._is_mri_subject": {
     "line number": [
      662
     ]
    },
    "mne.coreg.os": {
     "line number": [
      664,
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._make_writable": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "mne.coreg.os": {
     "line number": [
      57,
      57
     ]
    },
    "mne.coreg.stat": {
     "line number": [
      57,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._make_writable_recursive": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "mne.coreg._make_writable": {
     "line number": [
      66
     ]
    },
    "mne.coreg.os": {
     "line number": [
      64,
      66
     ]
    },
    "mne.coreg.sys": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._mri_subject_has_bem": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      687
     ]
    },
    "get_subjects_dir": {
     "line number": [
      683
     ]
    },
    "glob.glob": {
     "line number": [
      686
     ]
    },
    "len": {
     "line number": [
      687
     ]
    },
    "mne.coreg.bem_fname": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._scale_mri": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "has_nibabel": {
     "line number": [
      1127
     ]
    },
    "mne.coreg._scale_params": {
     "line number": [
      1124
     ]
    },
    "mne.coreg.mri_dirname": {
     "line number": [
      1132,
      1134
     ]
    },
    "mne.coreg.nibabel": {
     "line number": [
      1136,
      1143
     ]
    },
    "numpy.array": {
     "line number": [
      1137
     ]
    },
    "os.path.join": {
     "line number": [
      1132,
      1134
     ]
    },
    "warn": {
     "line number": [
      1128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._scale_params": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      780
     ]
    },
    "ValueError": {
     "line number": [
      791
     ]
    },
    "get_subjects_dir": {
     "line number": [
      778
     ]
    },
    "len": {
     "line number": [
      794
     ]
    },
    "mne.coreg.read_mri_cfg": {
     "line number": [
      784
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._scale_xfm": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      1188,
      1196
     ]
    },
    "_read_fs_xfm": {
     "line number": [
      1193
     ]
    },
    "_read_mri_info": {
     "line number": [
      1195,
      1204
     ]
    },
    "_write_fs_xfm": {
     "line number": [
      1220
     ]
    },
    "combine_transforms": {
     "line number": [
      1214,
      1215,
      1216
     ]
    },
    "has_nibabel": {
     "line number": [
      1155
     ]
    },
    "invert_transform": {
     "line number": [
      1205,
      1217
     ]
    },
    "len": {
     "line number": [
      1187
     ]
    },
    "mne.coreg._scale_params": {
     "line number": [
      1149
     ]
    },
    "mne.coreg.mri_dirname": {
     "line number": [
      1202
     ]
    },
    "mne.coreg.mri_transforms_dirname": {
     "line number": [
      1159,
      1162
     ]
    },
    "mne.coreg.os": {
     "line number": [
      1158
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      1186
     ]
    },
    "numpy.tile": {
     "line number": [
      1187
     ]
    },
    "os.path.basename": {
     "line number": [
      1203
     ]
    },
    "os.path.dirname": {
     "line number": [
      1165,
      1165
     ]
    },
    "os.path.isdir": {
     "line number": [
      1165
     ]
    },
    "os.path.isfile": {
     "line number": [
      1164
     ]
    },
    "os.path.join": {
     "line number": [
      1161,
      1202
     ]
    },
    "scaling": {
     "line number": [
      1188
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._trans_from_params": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      289
     ]
    },
    "numpy.dot": {
     "line number": [
      289
     ]
    },
    "rotation": {
     "line number": [
      274
     ]
    },
    "scaling": {
     "line number": [
      284,
      287
     ]
    },
    "translation": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg._write_mri_config": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "mne.coreg.configparser": {
     "line number": [
      749
     ]
    },
    "numpy.asarray": {
     "line number": [
      743
     ]
    },
    "numpy.isscalar": {
     "line number": [
      744
     ]
    },
    "open": {
     "line number": [
      759
     ]
    },
    "str": {
     "line number": [
      753,
      755,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.bem_dirname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.coreg.bem_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.coreg.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.coreg.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "mne.coreg.coregister_fiducials": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      110
     ]
    },
    "ValueError": {
     "line number": [
      103
     ]
    },
    "_fiducial_coords": {
     "line number": [
      107,
      108
     ]
    },
    "isinstance": {
     "line number": [
      95,
      97
     ]
    },
    "len": {
     "line number": [
      102
     ]
    },
    "mne.coreg.fit_matched_points": {
     "line number": [
      109
     ]
    },
    "read_fiducials": {
     "line number": [
      98
     ]
    },
    "read_info": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      95,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.create_default_subject": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      156,
      161,
      167,
      173
     ]
    },
    "ValueError": {
     "line number": [
      148
     ]
    },
    "get_config": {
     "line number": [
      146
     ]
    },
    "get_subjects_dir": {
     "line number": [
      144
     ]
    },
    "mne.coreg._make_writable_recursive": {
     "line number": [
      182,
      192
     ]
    },
    "mne.coreg.os": {
     "line number": [
      154,
      155,
      159,
      160,
      165,
      172,
      180,
      185,
      185,
      187,
      188,
      189,
      191,
      194
     ]
    },
    "mne.coreg.shutil": {
     "line number": [
      181,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.fid_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.coreg.fid_fname_general": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.coreg.fit_matched_points": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      378
     ]
    },
    "ValueError": {
     "line number": [
      344,
      349,
      385
     ]
    },
    "_fit_matched_points": {
     "line number": [
      361
     ]
    },
    "_quat_to_euler": {
     "line number": [
      363
     ]
    },
    "bool": {
     "line number": [
      353,
      353,
      362
     ]
    },
    "float": {
     "line number": [
      359,
      360
     ]
    },
    "int": {
     "line number": [
      353
     ]
    },
    "len": {
     "line number": [
      374
     ]
    },
    "mne.coreg._ALLOW_ANALITICAL": {
     "line number": [
      358
     ]
    },
    "mne.coreg._generic_fit": {
     "line number": [
      366
     ]
    },
    "mne.coreg._trans_from_params": {
     "line number": [
      370
     ]
    },
    "numpy.any": {
     "line number": [
      377
     ]
    },
    "numpy.asarray": {
     "line number": [
      347,
      359,
      360
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      341,
      342
     ]
    },
    "numpy.concatenate": {
     "line number": [
      364
     ]
    },
    "numpy.dot": {
     "line number": [
      375
     ]
    },
    "numpy.hstack": {
     "line number": [
      374
     ]
    },
    "numpy.newaxis": {
     "line number": [
      351
     ]
    },
    "numpy.ones": {
     "line number": [
      374
     ]
    },
    "numpy.sqrt": {
     "line number": [
      376
     ]
    },
    "numpy.sum": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.coreg.get_mni_fiducials": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": {
    "_read_talxfm": {
     "line number": [
      1268
     ]
    },
    "apply_trans": {
     "line number": [
      1275
     ]
    },
    "invert_transform": {
     "line number": [
      1268
     ]
    },
    "mne.coreg.os": {
     "line number": [
      1260,
      1260
     ]
    },
    "numpy.array": {
     "line number": [
      1271
     ]
    },
    "range": {
     "line number": [
      1276
     ]
    },
    "read_fiducials": {
     "line number": [
      1264
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.coreg.head_bem_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.coreg.iglob": {
  "data": {
   "shadows": "glob.iglob"
  },
  "type": "import"
 },
 "mne.coreg.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "mne.coreg.mri_dirname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.coreg.mri_transforms_dirname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.coreg.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.coreg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.coreg.read_mri_cfg": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      709
     ]
    },
    "ValueError": {
     "line number": [
      722
     ]
    },
    "float": {
     "line number": [
      720
     ]
    },
    "get_subjects_dir": {
     "line number": [
      705
     ]
    },
    "mne.coreg.configparser": {
     "line number": [
      713
     ]
    },
    "mne.coreg.os": {
     "line number": [
      706,
      708
     ]
    },
    "numpy.array": {
     "line number": [
      720
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.coreg.scale_bem": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      830
     ]
    },
    "_normalize_vectors": {
     "line number": [
      838
     ]
    },
    "len": {
     "line number": [
      836
     ]
    },
    "mne.coreg._scale_params": {
     "line number": [
      822
     ]
    },
    "mne.coreg.bem_fname": {
     "line number": [
      824,
      826
     ]
    },
    "mne.coreg.os": {
     "line number": [
      829
     ]
    },
    "read_bem_surfaces": {
     "line number": [
      832
     ]
    },
    "write_bem_surfaces": {
     "line number": [
      839
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.scale_labels": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "Label": {
     "line number": [
      892
     ]
    },
    "get_subjects_dir": {
     "line number": [
      875
     ]
    },
    "mne.coreg._find_label_paths": {
     "line number": [
      871
     ]
    },
    "mne.coreg._scale_params": {
     "line number": [
      867
     ]
    },
    "mne.coreg.os": {
     "line number": [
      876,
      877,
      881,
      882,
      885,
      886,
      887,
      889
     ]
    },
    "read_label": {
     "line number": [
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.scale_mri": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      944
     ]
    },
    "ValueError": {
     "line number": [
      936
     ]
    },
    "get_subjects_dir": {
     "line number": [
      929
     ]
    },
    "glob.iglob": {
     "line number": [
      1022
     ]
    },
    "mne.coreg._find_mri_paths": {
     "line number": [
      930
     ]
    },
    "mne.coreg._scale_mri": {
     "line number": [
      985
     ]
    },
    "mne.coreg._scale_xfm": {
     "line number": [
      994
     ]
    },
    "mne.coreg._write_mri_config": {
     "line number": [
      955
     ]
    },
    "mne.coreg.mri_dirname": {
     "line number": [
      981
     ]
    },
    "mne.coreg.mri_transforms_dirname": {
     "line number": [
      990
     ]
    },
    "mne.coreg.os": {
     "line number": [
      942,
      951,
      954,
      960,
      973,
      981,
      984,
      990,
      993,
      1006,
      1011,
      1011,
      1019,
      1021
     ]
    },
    "mne.coreg.scale_bem": {
     "line number": [
      967
     ]
    },
    "mne.coreg.scale_labels": {
     "line number": [
      1013
     ]
    },
    "mne.coreg.scale_source_space": {
     "line number": [
      1007
     ]
    },
    "mne.coreg.shutil": {
     "line number": [
      946,
      1002,
      1023
     ]
    },
    "mne.coreg.subject_dirname": {
     "line number": [
      940
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      931
     ]
    },
    "numpy.isclose": {
     "line number": [
      933,
      933
     ]
    },
    "read_fiducials": {
     "line number": [
      974
     ]
    },
    "read_surface": {
     "line number": [
      962
     ]
    },
    "write_fiducials": {
     "line number": [
      978
     ]
    },
    "write_surface": {
     "line number": [
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.scale_source_space": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": {
    "_normalize_vectors": {
     "line number": [
      1107
     ]
    },
    "add_source_space_distances": {
     "line number": [
      1117
     ]
    },
    "float": {
     "line number": [
      1110
     ]
    },
    "mne.coreg._scale_params": {
     "line number": [
      1063
     ]
    },
    "mne.coreg.bem_dirname": {
     "line number": [
      1077
     ]
    },
    "mne.coreg.os": {
     "line number": [
      1077
     ]
    },
    "mne.coreg.re": {
     "line number": [
      1071
     ]
    },
    "mne.coreg.src_fname": {
     "line number": [
      1069,
      1074
     ]
    },
    "numpy.abs": {
     "line number": [
      1110
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1097
     ]
    },
    "read_source_spaces": {
     "line number": [
      1085
     ]
    },
    "write_source_spaces": {
     "line number": [
      1119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.coreg.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.coreg.src_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.coreg.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mne.coreg.subject_dirname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.coreg.surf_dirname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.coreg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.coreg.trans_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.data": {
  "data": {},
  "type": "module"
 },
 "mne.datasets": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.datasets._fake": {
  "data": {},
  "type": "module"
 },
 "mne.datasets._fake._fake": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets._fake._fake.data_path": {
     "line number": [
      19
     ]
    },
    "mne.datasets._fake._fake.get_version": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets._fake._fake.data_path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets._fake._fake.get_version": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets._fsaverage": {
  "data": {},
  "type": "module"
 },
 "mne.datasets._fsaverage.base": {
  "data": {
   "symbols_in_volume": {
    "os.path.dirname": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets._fsaverage.base.FSAVERAGE_MANIFEST_PATH": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets._fsaverage.base._get_create_subjects_dir": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "_get_path": {
     "line number": [
      101
     ]
    },
    "get_subjects_dir": {
     "line number": [
      99
     ]
    },
    "mne.datasets._fsaverage.base.os": {
     "line number": [
      103
     ]
    },
    "os.path.join": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets._fsaverage.base._set_montage_coreg_path": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "get_subjects_dir": {
     "line number": [
      140
     ]
    },
    "mne.datasets._fsaverage.base._get_create_subjects_dir": {
     "line number": [
      139
     ]
    },
    "set_config": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets._fsaverage.base.fetch_fsaverage": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_manifest_check_download": {
     "line number": [
      88
     ]
    },
    "dict": {
     "line number": [
      74,
      80
     ]
    },
    "mne.datasets._fsaverage.base.FSAVERAGE_MANIFEST_PATH": {
     "line number": [
      77,
      83
     ]
    },
    "mne.datasets._fsaverage.base._set_montage_coreg_path": {
     "line number": [
      68
     ]
    },
    "mne.datasets._fsaverage.base.os": {
     "line number": [
      71
     ]
    },
    "os.path.abspath": {
     "line number": [
      69
     ]
    },
    "os.path.join": {
     "line number": [
      70,
      77,
      78,
      83,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets._fsaverage.base.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets._fsaverage.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_auditory": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.brainstorm.bst_auditory._data_path_doc": {
     "line number": [
      43
     ]
    },
    "mne.datasets.brainstorm.bst_auditory.data_path": {
     "line number": [
      43
     ]
    },
    "mne.datasets.brainstorm.bst_auditory.get_version": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_auditory._data_path_doc": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory.data_path": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.description": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_auditory._description": {
     "line number": [
      55
     ]
    },
    "print": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.get_version": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.brainstorm.bst_phantom_ctf._data_path_doc": {
     "line number": [
      32
     ]
    },
    "mne.datasets.brainstorm.bst_phantom_ctf.data_path": {
     "line number": [
      32
     ]
    },
    "mne.datasets.brainstorm.bst_phantom_ctf.get_version": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf._data_path_doc": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.data_path": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.description": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_phantom_ctf._description": {
     "line number": [
      44
     ]
    },
    "print": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.get_version": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.brainstorm.bst_phantom_elekta._data_path_doc": {
     "line number": [
      35
     ]
    },
    "mne.datasets.brainstorm.bst_phantom_elekta.data_path": {
     "line number": [
      35
     ]
    },
    "mne.datasets.brainstorm.bst_phantom_elekta.get_version": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta._data_path_doc": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta._description": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.data_path": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.description": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_phantom_elekta._description": {
     "line number": [
      47
     ]
    },
    "print": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.get_version": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.brainstorm.bst_raw._data_path_doc": {
     "line number": [
      41
     ]
    },
    "mne.datasets.brainstorm.bst_raw.data_path": {
     "line number": [
      41
     ]
    },
    "mne.datasets.brainstorm.bst_raw.get_version": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_raw._data_path_doc": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw._description": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw._skip_bstraw_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "get_config": {
     "line number": [
      58
     ]
    },
    "mne.datasets.brainstorm.bst_raw.has_brainstorm_data": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.data_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.description": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_raw._description": {
     "line number": [
      53
     ]
    },
    "print": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.get_version": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw.requires_bstraw_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_raw._skip_bstraw_data": {
     "line number": [
      67
     ]
    },
    "mne.datasets.brainstorm.bst_raw.pytest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.brainstorm.bst_resting._data_path_doc": {
     "line number": [
      34
     ]
    },
    "mne.datasets.brainstorm.bst_resting.data_path": {
     "line number": [
      34
     ]
    },
    "mne.datasets.brainstorm.bst_resting.get_version": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_resting._data_path_doc": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting._description": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting.data_path": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.description": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_resting._description": {
     "line number": [
      46
     ]
    },
    "print": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.get_version": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.eegbci": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.eegbci.eegbci": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.eegbci.eegbci.EEGMI_URL": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.eegbci.eegbci.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_do_path_update": {
     "line number": [
      84
     ]
    },
    "_fetch_file": {
     "line number": [
      81
     ]
    },
    "_get_path": {
     "line number": [
      71
     ]
    },
    "_url_to_local_path": {
     "line number": [
      72
     ]
    },
    "mne.datasets.eegbci.eegbci.os": {
     "line number": [
      78,
      80
     ]
    },
    "os.path": {
     "line number": [
      71,
      71,
      72,
      84
     ]
    },
    "os.path.dirname": {
     "line number": [
      79,
      80
     ]
    },
    "os.path.isdir": {
     "line number": [
      79
     ]
    },
    "os.path.isfile": {
     "line number": [
      76,
      77
     ]
    },
    "os.path.join": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.eegbci.eegbci.load_data": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      157
     ]
    },
    "mne.datasets.eegbci.eegbci.EEGMI_URL": {
     "line number": [
      90
     ]
    },
    "mne.datasets.eegbci.eegbci.data_path": {
     "line number": [
      164
     ]
    },
    "os.path": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.eegbci.eegbci.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.eegbci.eegbci.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.eegbci.eegbci.standardize": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      15
     ]
    },
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.conf_name": {
     "line number": [
      27
     ]
    },
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name": {
     "line number": [
      15,
      26,
      34
     ]
    },
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_path": {
     "line number": [
      26
     ]
    },
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.get_version": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.conf_name": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      21
     ]
    },
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.get_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      31
     ]
    },
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.has_mtrf_data": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.fnirs_motor": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.fnirs_motor.fnirs_motor": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.fnirs_motor.fnirs_motor.data_path": {
     "line number": [
      22
     ]
    },
    "mne.datasets.fnirs_motor.fnirs_motor.get_version": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.get_version": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.has_fnirs_motor_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.hf_sef.hf_sef": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.hf_sef.hf_sef.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      88
     ]
    },
    "_check_option": {
     "line number": [
      61
     ]
    },
    "_do_path_update": {
     "line number": [
      99
     ]
    },
    "_fetch_file": {
     "line number": [
      78
     ]
    },
    "_get_path": {
     "line number": [
      52
     ]
    },
    "any": {
     "line number": [
      72
     ]
    },
    "dict": {
     "line number": [
      68
     ]
    },
    "mne.datasets.hf_sef.hf_sef.os": {
     "line number": [
      73,
      77,
      92,
      97
     ]
    },
    "mne.datasets.hf_sef.hf_sef.tarfile": {
     "line number": [
      80
     ]
    },
    "os.path.isdir": {
     "line number": [
      71,
      71,
      72,
      76
     ]
    },
    "os.path.isfile": {
     "line number": [
      91
     ]
    },
    "os.path.join": {
     "line number": [
      53,
      65,
      69,
      70,
      90
     ]
    },
    "sorted": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.hf_sef.hf_sef.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef.hf_sef.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef.hf_sef.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mne.datasets.kiloword": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.kiloword.kiloword": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.kiloword.kiloword.get_version": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.kiloword.kiloword.data_path": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.kiloword.kiloword.get_version": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.limo": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.limo.limo": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.limo.limo.data_path": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "_do_path_update": {
     "line number": [
      133
     ]
    },
    "_fetch_file": {
     "line number": [
      117
     ]
    },
    "_get_path": {
     "line number": [
      99
     ]
    },
    "any": {
     "line number": [
      120
     ]
    },
    "len": {
     "line number": [
      126
     ]
    },
    "mne.datasets.limo.limo.os": {
     "line number": [
      112,
      116,
      122,
      130
     ]
    },
    "mne.datasets.limo.limo.root_url": {
     "line number": [
      105
     ]
    },
    "mne.datasets.limo.limo.shutil": {
     "line number": [
      110
     ]
    },
    "mne.datasets.limo.limo.subject_ids": {
     "line number": [
      105
     ]
    },
    "mne.datasets.limo.limo.zipfile": {
     "line number": [
      123
     ]
    },
    "os.path.isdir": {
     "line number": [
      108,
      109,
      111,
      115,
      121
     ]
    },
    "os.path.join": {
     "line number": [
      100,
      102,
      105,
      115,
      116,
      121,
      122,
      124,
      127
     ]
    },
    "os.path.splitext": {
     "line number": [
      120
     ]
    },
    "sys.stdout.write": {
     "line number": [
      125,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.limo.limo.load_data": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "EpochsArray": {
     "line number": [
      241
     ]
    },
    "ValueError": {
     "line number": [
      171
     ]
    },
    "_check_pandas_installed": {
     "line number": [
      164
     ]
    },
    "create_info": {
     "line number": [
      231
     ]
    },
    "enumerate": {
     "line number": [
      209,
      221
     ]
    },
    "events": {
     "line number": [
      196,
      233,
      241
     ]
    },
    "int": {
     "line number": [
      168,
      196
     ]
    },
    "isinstance": {
     "line number": [
      168
     ]
    },
    "len": {
     "line number": [
      193,
      194,
      219
     ]
    },
    "list": {
     "line number": [
      233,
      235
     ]
    },
    "make_standard_montage": {
     "line number": [
      205
     ]
    },
    "mne.datasets.limo.limo.data_path": {
     "line number": [
      174
     ]
    },
    "numpy.arange": {
     "line number": [
      193
     ]
    },
    "numpy.array": {
     "line number": [
      196
     ]
    },
    "numpy.empty": {
     "line number": [
      219
     ]
    },
    "numpy.transpose": {
     "line number": [
      217
     ]
    },
    "numpy.zeros": {
     "line number": [
      194
     ]
    },
    "os.path.join": {
     "line number": [
      178,
      184
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      179,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.limo.limo.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.root_url": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.datasets.limo.limo.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.subject_ids": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.datasets.limo.limo.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.misc": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.misc._misc": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.misc._misc.data_path": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.misc._misc.data_path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.mtrf": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.mtrf.mtrf": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      13
     ]
    },
    "mne.datasets.mtrf.mtrf.data_name": {
     "line number": [
      13,
      24,
      32
     ]
    },
    "mne.datasets.mtrf.mtrf.data_path": {
     "line number": [
      24
     ]
    },
    "mne.datasets.mtrf.mtrf.get_version": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.mtrf.mtrf.data_name": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.mtrf.mtrf.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      19
     ]
    },
    "mne.datasets.mtrf.mtrf.data_name": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.mtrf.mtrf.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      29
     ]
    },
    "mne.datasets.mtrf.mtrf.data_name": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.mtrf.mtrf.has_mtrf_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.mtrf.mtrf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.multimodal": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.multimodal.multimodal": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      13
     ]
    },
    "mne.datasets.multimodal.multimodal.data_path": {
     "line number": [
      24
     ]
    },
    "mne.datasets.multimodal.multimodal.get_version": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.multimodal.multimodal.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.multimodal.multimodal.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.multimodal.multimodal.has_multimodal_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.multimodal.multimodal.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.opm": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.opm.opm": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      13
     ]
    },
    "mne.datasets.opm.opm.data_path": {
     "line number": [
      24
     ]
    },
    "mne.datasets.opm.opm.get_version": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.opm.opm.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.opm.opm.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.opm.opm.has_opm_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.opm.opm.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.phantom_4dbti": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      12
     ]
    },
    "mne.datasets.phantom_4dbti.phantom_4dbti.data_path": {
     "line number": [
      23
     ]
    },
    "mne.datasets.phantom_4dbti.phantom_4dbti.get_version": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.data_path": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.has_phantom_4dbti_data": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.refmeg_noise": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.refmeg_noise.refmeg_noise": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      11
     ]
    },
    "mne.datasets.refmeg_noise.refmeg_noise.data_path": {
     "line number": [
      22
     ]
    },
    "mne.datasets.refmeg_noise.refmeg_noise.get_version": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.refmeg_noise.refmeg_noise.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.refmeg_noise.refmeg_noise.get_version": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.refmeg_noise.refmeg_noise.has_refmeg_noise_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.refmeg_noise.refmeg_noise.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.sample": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sample.sample": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      13
     ]
    },
    "mne.datasets.sample.sample.data_path": {
     "line number": [
      24
     ]
    },
    "mne.datasets.sample.sample.get_version": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.sample.sample.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.has_sample_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.sample.sample.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet._utils": {
  "data": {
   "symbols_in_volume": {
    "os.path.dirname": {
     "line number": [
      16,
      17,
      26
     ]
    },
    "os.path.join": {
     "line number": [
      16,
      17,
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL_SHA1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL_SHA1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils._check_subjects": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "_on_missing": {
     "line number": [
      222
     ]
    },
    "numpy.arange": {
     "line number": [
      213
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      215,
      216
     ]
    },
    "str": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._data_path": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "_get_path": {
     "line number": [
      85
     ]
    },
    "os.path.join": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._fetch_one": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "_fetch_file": {
     "line number": [
      38
     ]
    },
    "mne.datasets.sleep_physionet._utils.os": {
     "line number": [
      35,
      37
     ]
    },
    "os.path.dirname": {
     "line number": [
      36,
      37
     ]
    },
    "os.path.isdir": {
     "line number": [
      36
     ]
    },
    "os.path.isfile": {
     "line number": [
      33,
      34
     ]
    },
    "os.path.join": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._update_sleep_age_records": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "_TempDir": {
     "line number": [
      152
     ]
    },
    "_check_pandas_installed": {
     "line number": [
      151
     ]
    },
    "_fetch_file": {
     "line number": [
      156
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      185,
      185
     ]
    },
    "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL": {
     "line number": [
      156
     ]
    },
    "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL_SHA1": {
     "line number": [
      158
     ]
    },
    "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS": {
     "line number": [
      149
     ]
    },
    "mne.datasets.sleep_physionet._utils.sha1sums_fname": {
     "line number": [
      162
     ]
    },
    "os.path.join": {
     "line number": [
      155
     ]
    },
    "str": {
     "line number": [
      171
     ]
    },
    "zip": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._update_sleep_temazepam_records": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "_TempDir": {
     "line number": [
      92
     ]
    },
    "_check_pandas_installed": {
     "line number": [
      91
     ]
    },
    "_fetch_file": {
     "line number": [
      96
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      111,
      111,
      133,
      133
     ]
    },
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL": {
     "line number": [
      96
     ]
    },
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL_SHA1": {
     "line number": [
      98
     ]
    },
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS": {
     "line number": [
      89
     ]
    },
    "mne.datasets.sleep_physionet._utils.sha1sums_fname": {
     "line number": [
      102
     ]
    },
    "os.path.join": {
     "line number": [
      95
     ]
    },
    "zip": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.sha1sums_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.age": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet.age.BASE_URL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.age.data_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.age.fetch_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "_check_subjects": {
     "line number": [
      105
     ]
    },
    "_fetch_one": {
     "line number": [
      122,
      125
     ]
    },
    "_on_missing": {
     "line number": [
      112,
      116
     ]
    },
    "mne.datasets.sleep_physionet.age.BASE_URL": {
     "line number": [
      20
     ]
    },
    "mne.datasets.sleep_physionet.age.data_path": {
     "line number": [
      102
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      91
     ]
    },
    "numpy.where": {
     "line number": [
      99,
      100,
      120
     ]
    },
    "set": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.age.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.temazepam": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet.temazepam.BASE_URL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.temazepam.data_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.temazepam.fetch_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "_check_subjects": {
     "line number": [
      89
     ]
    },
    "_fetch_one": {
     "line number": [
      98,
      101
     ]
    },
    "mne.datasets.sleep_physionet.temazepam.BASE_URL": {
     "line number": [
      21
     ]
    },
    "mne.datasets.sleep_physionet.temazepam.data_path": {
     "line number": [
      91
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      79
     ]
    },
    "numpy.where": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.temazepam.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.AGE_SLEEP_RECORDS": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.TEMAZEPAM_SLEEP_RECORDS": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._FakeFetch": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._FakeFetch.__call__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._FakeFetch.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "list": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._FakeFetch.call_count": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "len": {
     "line number": [
      38
     ]
    },
    "property": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._check_mocked_function_calls": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      62
     ]
    },
    "len": {
     "line number": [
      58
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_path": {
     "line number": [
      65
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_url": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_path": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "os.path.join": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_url": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._keep_basename_only": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      42
     ]
    },
    "numpy.vectorize": {
     "line number": [
      42
     ]
    },
    "os.path.basename": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._update_sleep_age_records": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils._update_sleep_age_records"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._update_sleep_temazepam_records": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils._update_sleep_temazepam_records"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.age": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet.age"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      22
     ]
    },
    "str": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.temazepam": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet.temazepam"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_run_update_age_records": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS": {
     "line number": [
      84,
      90
     ]
    },
    "mne.datasets.sleep_physionet._utils._update_sleep_age_records": {
     "line number": [
      80
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      71,
      72
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      83
     ]
    },
    "mne.utils.requires_good_network": {
     "line number": [
      73
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      74
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      75
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      85
     ]
    },
    "os.path.join": {
     "line number": [
      79
     ]
    },
    "pandas.read_csv": {
     "line number": [
      81,
      84,
      90
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      90
     ]
    },
    "str": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_run_update_temazepam_records": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS": {
     "line number": [
      193,
      200
     ]
    },
    "mne.datasets.sleep_physionet._utils._update_sleep_temazepam_records": {
     "line number": [
      189
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      181
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      192
     ]
    },
    "mne.utils.requires_good_network": {
     "line number": [
      182
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      183
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      184
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      194
     ]
    },
    "os.path.join": {
     "line number": [
      188
     ]
    },
    "pandas.read_csv": {
     "line number": [
      190,
      193,
      200
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      199
     ]
    },
    "str": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_sleep_physionet_age": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      135
     ]
    },
    "mne.datasets.sleep_physionet.age.data_path": {
     "line number": [
      177
     ]
    },
    "mne.datasets.sleep_physionet.age.fetch_data": {
     "line number": [
      136,
      142,
      146,
      151
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._FakeFetch": {
     "line number": [
      138
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._check_mocked_function_calls": {
     "line number": [
      178
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._keep_basename_only": {
     "line number": [
      143,
      147,
      152
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.mne": {
     "line number": [
      140
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir": {
     "line number": [
      134,
      177
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      135
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      143,
      147,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_sleep_physionet_age_missing_recordings": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      122
     ]
    },
    "ValueError": {
     "line number": [
      119
     ]
    },
    "mne.datasets.sleep_physionet.age.fetch_data": {
     "line number": [
      120,
      124,
      126
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir": {
     "line number": [
      116
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      118,
      122,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_sleep_physionet_age_missing_subjects": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      103
     ]
    },
    "ValueError": {
     "line number": [
      100
     ]
    },
    "mne.datasets.sleep_physionet.age.fetch_data": {
     "line number": [
      101,
      105,
      107
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir": {
     "line number": [
      97
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      99,
      103,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_sleep_physionet_temazepam": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      224
     ]
    },
    "mne.datasets.sleep_physionet.temazepam.data_path": {
     "line number": [
      220
     ]
    },
    "mne.datasets.sleep_physionet.temazepam.fetch_data": {
     "line number": [
      211,
      225
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._FakeFetch": {
     "line number": [
      205
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._check_mocked_function_calls": {
     "line number": [
      221
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet._keep_basename_only": {
     "line number": [
      212
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.mne": {
     "line number": [
      207
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir": {
     "line number": [
      209,
      220
     ]
    },
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
     "line number": [
      223
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.somato": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.somato.somato": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      13
     ]
    },
    "mne.datasets.somato.somato.data_path": {
     "line number": [
      24
     ]
    },
    "mne.datasets.somato.somato.get_version": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.somato.somato.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.somato.somato.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.somato.somato.has_somato_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.somato.somato.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.spm_face": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.spm_face.spm_data": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      12
     ]
    },
    "mne.datasets.spm_face.spm_data.data_path": {
     "line number": [
      23
     ]
    },
    "mne.datasets.spm_face.spm_data.get_version": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.spm_face.spm_data._skip_spm_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "get_config": {
     "line number": [
      35
     ]
    },
    "mne.datasets.spm_face.spm_data.has_spm_data": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.data_path": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.has_spm_data": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.spm_face.spm_data.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.spm_face.spm_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.spm_face.spm_data.requires_spm_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "mne.datasets.spm_face.spm_data._skip_spm_data": {
     "line number": [
      44
     ]
    },
    "mne.datasets.spm_face.spm_data.pytest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.testing": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.testing._testing": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      13
     ]
    },
    "mne.datasets.testing._testing.data_path": {
     "line number": [
      28
     ]
    },
    "mne.datasets.testing._testing.get_version": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.testing._testing._pytest_param": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "len": {
     "line number": [
      56,
      56
     ]
    },
    "mne.datasets.testing._testing._skip_testing_data": {
     "line number": [
      63
     ]
    },
    "mne.datasets.testing._testing.pytest": {
     "line number": [
      62,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.testing._testing._skip_testing_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "get_config": {
     "line number": [
      42
     ]
    },
    "mne.datasets.testing._testing.has_testing_data": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      22
     ]
    },
    "_data_path": {
     "line number": [
      23
     ]
    },
    "get_config": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.get_version": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.has_testing_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.testing._testing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.testing._testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.testing._testing.requires_testing_data": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "mne.datasets.testing._testing._skip_testing_data": {
     "line number": [
      51
     ]
    },
    "mne.datasets.testing._testing.pytest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.tests.test_datasets": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      156
     ]
    },
    "os.path.join": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.tests.test_datasets.ArgvSetter": {
  "data": {
   "shadows": "mne.utils.ArgvSetter"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._fake_fetch_file": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "open": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets._fake_zip_fetch": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "mne.datasets.tests.test_datasets._zip_fnames": {
     "line number": [
      113
     ]
    },
    "mne.datasets.tests.test_datasets.zipfile": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets._manifest_check_download": {
  "data": {
   "shadows": "mne.datasets.utils._manifest_check_download"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._pl": {
  "data": {
   "shadows": "mne.utils._pl"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._set_montage_coreg_path": {
  "data": {
   "shadows": "mne.datasets._fsaverage.base._set_montage_coreg_path"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._zip_fnames": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "mne.datasets.tests.test_datasets.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.datasets": {
  "data": {
   "shadows": "mne.datasets"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.hashfunc": {
  "data": {
   "shadows": "mne.utils.hashfunc"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.read_labels_from_annot": {
  "data": {
   "shadows": "mne.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.subjects_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.datasets.tests.test_datasets.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.test_datasets_basic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      31,
      34
     ]
    },
    "isinstance": {
     "line number": [
      37
     ]
    },
    "mne.datasets": {
     "line number": [
      34
     ]
    },
    "mne.datasets._fsaverage.base._set_montage_coreg_path": {
     "line number": [
      50
     ]
    },
    "mne.datasets.brainstorm": {
     "line number": [
      31
     ]
    },
    "mne.datasets.utils._get_path": {
     "line number": [
      47
     ]
    },
    "mne.datasets.utils.has_dataset": {
     "line number": [
      38,
      41,
      42
     ]
    },
    "mne.utils.get_subjects_dir": {
     "line number": [
      49,
      51
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      46
     ]
    },
    "os.path.join": {
     "line number": [
      48
     ]
    },
    "print": {
     "line number": [
      42
     ]
    },
    "str": {
     "line number": [
      37,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_downloads": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "mne.datasets._fake.data_path": {
     "line number": [
      64
     ]
    },
    "mne.datasets._fake.get_version": {
     "line number": [
      66
     ]
    },
    "mne.utils.requires_good_network": {
     "line number": [
      60
     ]
    },
    "os.path": {
     "line number": [
      64,
      65
     ]
    },
    "os.path.isfile": {
     "line number": [
      65
     ]
    },
    "os.path.join": {
     "line number": [
      65
     ]
    },
    "str": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_fetch_parcellations": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      93
     ]
    },
    "mne.datasets.fetch_aparc_sub_parcellation": {
     "line number": [
      86
     ]
    },
    "mne.datasets.fetch_hcp_mmp_parcellation": {
     "line number": [
      88
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      70
     ]
    },
    "mne.datasets.tests.test_datasets.os": {
     "line number": [
      75,
      76,
      77
     ]
    },
    "mne.datasets.tests.test_datasets.pytest": {
     "line number": [
      69
     ]
    },
    "mne.datasets.tests.test_datasets.shutil": {
     "line number": [
      79
     ]
    },
    "mne.datasets.tests.test_datasets.subjects_dir": {
     "line number": [
      80
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      95
     ]
    },
    "mne.utils.ArgvSetter": {
     "line number": [
      87
     ]
    },
    "mne.utils.hashfunc": {
     "line number": [
      100,
      102
     ]
    },
    "mne.utils.requires_good_network": {
     "line number": [
      71
     ]
    },
    "mne.write_labels_to_annot": {
     "line number": [
      96
     ]
    },
    "open": {
     "line number": [
      83
     ]
    },
    "os.path.isfile": {
     "line number": [
      90
     ]
    },
    "os.path.join": {
     "line number": [
      75,
      76,
      77,
      80,
      81,
      83,
      90,
      99
     ]
    },
    "str": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_manifest_check_download": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "len": {
     "line number": [
      129,
      120
     ]
    },
    "mne.datasets.tests.test_datasets._fake_zip_fetch": {
     "line number": [
      123
     ]
    },
    "mne.datasets.tests.test_datasets._zip_fnames": {
     "line number": [
      127,
      129,
      134,
      136,
      152,
      120
     ]
    },
    "mne.datasets.tests.test_datasets.os": {
     "line number": [
      132
     ]
    },
    "mne.datasets.tests.test_datasets.pytest": {
     "line number": [
      118,
      120
     ]
    },
    "mne.datasets.tests.test_datasets.sys": {
     "line number": [
      118
     ]
    },
    "mne.datasets.utils": {
     "line number": [
      123
     ]
    },
    "mne.datasets.utils._manifest_check_download": {
     "line number": [
      142
     ]
    },
    "mne.utils._pl": {
     "line number": [
      145
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      139
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      140
     ]
    },
    "open": {
     "line number": [
      126,
      137
     ]
    },
    "os.path.isdir": {
     "line number": [
      130,
      133,
      151
     ]
    },
    "os.path.isfile": {
     "line number": [
      135,
      153
     ]
    },
    "os.path.join": {
     "line number": [
      124,
      125,
      132,
      133,
      135,
      137,
      153
     ]
    },
    "range": {
     "line number": [
      129,
      120
     ]
    },
    "str": {
     "line number": [
      124,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.use_log_level": {
  "data": {
   "shadows": "mne.utils.use_log_level"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.write_labels_to_annot": {
  "data": {
   "shadows": "mne.write_labels_to_annot"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.utils": {
  "data": {
   "symbols_in_volume": {
    "docformat": {
     "line number": [
      62,
      63
     ]
    },
    "mne.datasets.utils._data_path_doc": {
     "line number": [
      58
     ]
    },
    "mne.datasets.utils._data_path_doc_accept": {
     "line number": [
      59,
      59,
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.datasets.utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.datasets.utils._bst_license_text": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mne.datasets.utils._data_path": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      397
     ]
    },
    "_safe_input": {
     "line number": [
      394
     ]
    },
    "all": {
     "line number": [
      371
     ]
    },
    "any": {
     "line number": [
      379
     ]
    },
    "dict": {
     "line number": [
      248,
      254,
      255,
      284,
      303,
      310,
      322,
      323
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      429,
      430
     ]
    },
    "isinstance": {
     "line number": [
      358,
      359,
      363,
      367,
      371
     ]
    },
    "len": {
     "line number": [
      368,
      373,
      373,
      373,
      373,
      399,
      399,
      400,
      400,
      401,
      401,
      402,
      402,
      403
     ]
    },
    "list": {
     "line number": [
      358,
      359,
      363,
      367,
      371,
      405
     ]
    },
    "mne.datasets.utils._bst_license_text": {
     "line number": [
      395
     ]
    },
    "mne.datasets.utils._dataset_version": {
     "line number": [
      427
     ]
    },
    "mne.datasets.utils._do_path_update": {
     "line number": [
      423
     ]
    },
    "mne.datasets.utils._download": {
     "line number": [
      407
     ]
    },
    "mne.datasets.utils._extract": {
     "line number": [
      414
     ]
    },
    "mne.datasets.utils._get_path": {
     "line number": [
      245
     ]
    },
    "mne.datasets.utils.os": {
     "line number": [
      419
     ]
    },
    "mne.datasets.utils.sys": {
     "line number": [
      389
     ]
    },
    "os.path.abspath": {
     "line number": [
      369
     ]
    },
    "os.path.exists": {
     "line number": [
      379,
      387
     ]
    },
    "os.path.join": {
     "line number": [
      353,
      365,
      419
     ]
    },
    "set": {
     "line number": [
      346,
      346
     ]
    },
    "warn": {
     "line number": [
      431
     ]
    },
    "zip": {
     "line number": [
      406,
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._data_path_doc": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.datasets.utils._data_path_doc_accept": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.datasets.utils._dataset_version": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "open": {
     "line number": [
      159
     ]
    },
    "os.path.exists": {
     "line number": [
      158
     ]
    },
    "os.path.join": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._do_path_update": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "_safe_input": {
     "line number": [
      212
     ]
    },
    "get_config": {
     "line number": [
      202
     ]
    },
    "mne.datasets.utils.sys": {
     "line number": [
      206
     ]
    },
    "os.path.abspath": {
     "line number": [
      201
     ]
    },
    "set_config": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._download": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "_fetch_file": {
     "line number": [
      464
     ]
    },
    "hashfunc": {
     "line number": [
      456
     ]
    },
    "input": {
     "line number": [
      457
     ]
    },
    "mne.datasets.utils.os": {
     "line number": [
      460
     ]
    },
    "os.path.exists": {
     "line number": [
      444,
      446,
      452
     ]
    },
    "os.path.join": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._download_all_example_data": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "fetch_fsaverage": {
     "line number": [
      613
     ]
    },
    "mne.datasets.utils.fetch_hcp_mmp_parcellation": {
     "line number": [
      614
     ]
    },
    "range": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._extract": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "mne.datasets.utils.shutil": {
     "line number": [
      490,
      512
     ]
    },
    "mne.datasets.utils.tarfile": {
     "line number": [
      508
     ]
    },
    "mne.datasets.utils.zipfile": {
     "line number": [
      501
     ]
    },
    "os.path.exists": {
     "line number": [
      470
     ]
    },
    "os.path.join": {
     "line number": [
      497,
      512
     ]
    },
    "os.path.split": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._extract.onerror": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "func": {
     "line number": [
      487
     ]
    },
    "mne.datasets.utils.os": {
     "line number": [
      477,
      477,
      478,
      479,
      481,
      481,
      482,
      484
     ]
    },
    "mne.datasets.utils.stat": {
     "line number": [
      478,
      483
     ]
    },
    "os.path.dirname": {
     "line number": [
      481,
      482,
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._get_path": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      190,
      191
     ]
    },
    "ValueError": {
     "line number": [
      174
     ]
    },
    "get_config": {
     "line number": [
      178,
      178
     ]
    },
    "isinstance": {
     "line number": [
      173
     ]
    },
    "mne.datasets.utils.os": {
     "line number": [
      184,
      189
     ]
    },
    "os.path.exists": {
     "line number": [
      186
     ]
    },
    "os.path.expanduser": {
     "line number": [
      185
     ]
    },
    "os.path.join": {
     "line number": [
      184
     ]
    },
    "str": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._get_version": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "mne.datasets.utils._data_path": {
     "line number": [
      523
     ]
    },
    "mne.datasets.utils.has_dataset": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._hcp_mmp_license_text": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mne.datasets.utils._manifest_check_download": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      820
     ]
    },
    "_fetch_file": {
     "line number": [
      814
     ]
    },
    "_pl": {
     "line number": [
      808,
      815,
      825
     ]
    },
    "len": {
     "line number": [
      808,
      809,
      819,
      825
     ]
    },
    "list": {
     "line number": [
      803
     ]
    },
    "mne.datasets.utils.tempfile": {
     "line number": [
      810
     ]
    },
    "mne.datasets.utils.zipfile": {
     "line number": [
      816
     ]
    },
    "open": {
     "line number": [
      801
     ]
    },
    "os.path.isfile": {
     "line number": [
      805
     ]
    },
    "os.path.join": {
     "line number": [
      805,
      813
     ]
    },
    "set": {
     "line number": [
      817,
      818
     ]
    },
    "sorted": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils._version_doc": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.datasets.utils.fetch_aparc_sub_parcellation": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "_fetch_file": {
     "line number": [
      648
     ]
    },
    "dict": {
     "line number": [
      641,
      643
     ]
    },
    "get_subjects_dir": {
     "line number": [
      639
     ]
    },
    "os.path.isfile": {
     "line number": [
      647
     ]
    },
    "os.path.join": {
     "line number": [
      640,
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils.fetch_hcp_mmp_parcellation": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "Label": {
     "line number": [
      787
     ]
    },
    "RuntimeError": {
     "line number": [
      695
     ]
    },
    "_fetch_file": {
     "line number": [
      699
     ]
    },
    "_safe_input": {
     "line number": [
      693
     ]
    },
    "all": {
     "line number": [
      689,
      703
     ]
    },
    "bool": {
     "line number": [
      772
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      707
     ]
    },
    "dict": {
     "line number": [
      685,
      687
     ]
    },
    "enumerate": {
     "line number": [
      775
     ]
    },
    "float": {
     "line number": [
      784
     ]
    },
    "get_subjects_dir": {
     "line number": [
      681
     ]
    },
    "len": {
     "line number": [
      762,
      772,
      778,
      778,
      783,
      792
     ]
    },
    "list": {
     "line number": [
      763
     ]
    },
    "mne.datasets.utils._hcp_mmp_license_text": {
     "line number": [
      693
     ]
    },
    "mne.datasets.utils.sys": {
     "line number": [
      690
     ]
    },
    "numpy.array": {
     "line number": [
      783
     ]
    },
    "numpy.dot": {
     "line number": [
      785
     ]
    },
    "numpy.zeros": {
     "line number": [
      772
     ]
    },
    "os.path.isfile": {
     "line number": [
      689,
      698,
      703
     ]
    },
    "os.path.join": {
     "line number": [
      682,
      683,
      701
     ]
    },
    "read_labels_from_annot": {
     "line number": [
      766
     ]
    },
    "sum": {
     "line number": [
      786
     ]
    },
    "write_labels_to_annot": {
     "line number": [
      795
     ]
    },
    "zip": {
     "line number": [
      697
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils.has_dataset": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "mne.datasets.utils._data_path": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.utils.mne_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "mne.datasets.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.utils.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mne.datasets.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.datasets.utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mne.datasets.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.datasets.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.visual_92_categories": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.visual_92_categories.visual_92_categories": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.visual_92_categories.visual_92_categories.data_path": {
     "line number": [
      50
     ]
    },
    "mne.datasets.visual_92_categories.visual_92_categories.get_version": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.data_path": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "_data_path": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.get_version": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "_get_version": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.base": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.base.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.decoding.base.LinearModel": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mne.decoding.base.LinearModel.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "check_version": {
     "line number": [
      57
     ]
    },
    "getattr": {
     "line number": [
      63
     ]
    },
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      58,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.decision_function": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.filters_": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      116
     ]
    },
    "hasattr": {
     "line number": [
      109,
      112
     ]
    },
    "property": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.fit": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87,
      90
     ]
    },
    "numpy.asarray": {
     "line number": [
      85,
      85
     ]
    },
    "numpy.cov": {
     "line number": [
      102,
      103
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.fit_transform": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.predict": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.predict_proba": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.score": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.transform": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "mne.decoding.base.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.base.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.base._check_estimator": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      259,
      264
     ]
    },
    "any": {
     "line number": [
      257
     ]
    },
    "hasattr": {
     "line number": [
      256,
      257,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base._fit_and_score": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      486
     ]
    },
    "ValueError": {
     "line number": [
      500
     ]
    },
    "_check_fit_params": {
     "line number": [
      470
     ]
    },
    "isinstance": {
     "line number": [
      492
     ]
    },
    "len": {
     "line number": [
      466,
      516
     ]
    },
    "mne.decoding.base._score": {
     "line number": [
      506,
      509
     ]
    },
    "mne.decoding.base.numbers": {
     "line number": [
      492
     ]
    },
    "mne.decoding.base.time": {
     "line number": [
      475,
      488,
      505,
      507
     ]
    },
    "print": {
     "line number": [
      466,
      516
     ]
    },
    "sklearn.utils.metaestimators._safe_split": {
     "line number": [
      477,
      478
     ]
    },
    "sklearn.utils.validation._num_samples": {
     "line number": [
      521
     ]
    },
    "warn": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base._get_inverse_funcs": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      272,
      277
     ]
    },
    "list": {
     "line number": [
      274,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "mne.decoding.base._safe_split": {
  "data": {
   "shadows": "sklearn.utils.metaestimators._safe_split"
  },
  "type": "import"
 },
 "mne.decoding.base._score": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      543
     ]
    },
    "hasattr": {
     "line number": [
      539
     ]
    },
    "scorer": {
     "line number": [
      536,
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base._set_cv": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      232,
      246
     ]
    },
    "XFold": {
     "line number": [
      229
     ]
    },
    "cv": {
     "line number": [
      234,
      235,
      235,
      238,
      243,
      248
     ]
    },
    "cv.split": {
     "line number": [
      240
     ]
    },
    "getattr": {
     "line number": [
      233
     ]
    },
    "hasattr": {
     "line number": [
      231,
      238
     ]
    },
    "int": {
     "line number": [
      227
     ]
    },
    "is_classifier": {
     "line number": [
      223
     ]
    },
    "isinstance": {
     "line number": [
      227,
      230
     ]
    },
    "len": {
     "line number": [
      245
     ]
    },
    "numpy.all": {
     "line number": [
      245
     ]
    },
    "numpy.int64": {
     "line number": [
      227
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      240
     ]
    },
    "sklearn.model_selection": {
     "line number": [
      231,
      233
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      228
     ]
    },
    "sklearn.model_selection.StratifiedKFold": {
     "line number": [
      228
     ]
    },
    "sklearn.model_selection.check_cv": {
     "line number": [
      235
     ]
    },
    "str": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection._split.check_cv"
  },
  "type": "import"
 },
 "mne.decoding.base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.base.cross_val_multiscore": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "_get_check_scoring": {
     "line number": [
      432
     ]
    },
    "check_scoring": {
     "line number": [
      438
     ]
    },
    "cv": {
     "line number": [
      436,
      436
     ]
    },
    "cv.split": {
     "line number": [
      437
     ]
    },
    "is_classifier": {
     "line number": [
      436
     ]
    },
    "list": {
     "line number": [
      437
     ]
    },
    "numpy.array": {
     "line number": [
      447
     ]
    },
    "p_func": {
     "line number": [
      444
     ]
    },
    "parallel": {
     "line number": [
      444
     ]
    },
    "parallel_func": {
     "line number": [
      442
     ]
    },
    "sklearn.base.clone": {
     "line number": [
      444
     ]
    },
    "sklearn.model_selection._split.check_cv": {
     "line number": [
      436
     ]
    },
    "sklearn.utils.indexable": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base.get_coef": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      337,
      349
     ]
    },
    "getattr": {
     "line number": [
      340
     ]
    },
    "hasattr": {
     "line number": [
      323,
      329,
      336,
      348,
      348
     ]
    },
    "inverse_func": {
     "line number": [
      354
     ]
    },
    "list": {
     "line number": [
      330
     ]
    },
    "mne.decoding.base._get_inverse_funcs": {
     "line number": [
      353
     ]
    },
    "numpy.newaxis": {
     "line number": [
      334,
      343
     ]
    },
    "numpy.transpose": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.base.indexable": {
  "data": {
   "shadows": "sklearn.utils.indexable"
  },
  "type": "import"
 },
 "mne.decoding.base.models": {
  "data": {
   "shadows": "sklearn.model_selection"
  },
  "type": "import"
 },
 "mne.decoding.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "mne.decoding.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.decoding.csp": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.csp.CSP": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "mne.decoding.csp.CSP.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      105,
      112,
      123,
      127
     ]
    },
    "_check_option": {
     "line number": [
      116,
      134
     ]
    },
    "_validate_type": {
     "line number": [
      131
     ]
    },
    "bool": {
     "line number": [
      122,
      131
     ]
    },
    "int": {
     "line number": [
      104
     ]
    },
    "isinstance": {
     "line number": [
      104,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._check_Xy": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141,
      145,
      147
     ]
    },
    "isinstance": {
     "line number": [
      140
     ]
    },
    "len": {
     "line number": [
      144,
      144,
      144
     ]
    },
    "numpy.ndarray": {
     "line number": [
      140
     ]
    },
    "type": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._compute_covariance_matrices": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "cov_estimator": {
     "line number": [
      501
     ]
    },
    "numpy.array": {
     "line number": [
      509
     ]
    },
    "numpy.stack": {
     "line number": [
      509
     ]
    },
    "numpy.trace": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._compute_mutual_info": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      555,
      555
     ]
    },
    "numpy.log": {
     "line number": [
      557
     ]
    },
    "numpy.sqrt": {
     "line number": [
      557
     ]
    },
    "range": {
     "line number": [
      552
     ]
    },
    "zip": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._concat_cov": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "_regularized_covariance": {
     "line number": [
      517
     ]
    },
    "numpy.transpose": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._decompose_covs": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "len": {
     "line number": [
      536
     ]
    },
    "mne.decoding.csp._ajd_pham": {
     "line number": [
      542
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._epoch_cov": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "_regularized_covariance": {
     "line number": [
      526
     ]
    },
    "len": {
     "line number": [
      530,
      531
     ]
    },
    "sum": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._normalize_eigenvectors": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "numpy.average": {
     "line number": [
      566
     ]
    },
    "numpy.dot": {
     "line number": [
      569,
      569
     ]
    },
    "numpy.sqrt": {
     "line number": [
      571
     ]
    },
    "range": {
     "line number": [
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._order_components": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "len": {
     "line number": [
      576,
      586,
      587
     ]
    },
    "numpy.abs": {
     "line number": [
      582
     ]
    },
    "numpy.argsort": {
     "line number": [
      580,
      582,
      584
     ]
    },
    "numpy.empty_like": {
     "line number": [
      585
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.fit": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      169,
      171
     ]
    },
    "len": {
     "line number": [
      167
     ]
    },
    "numpy.asarray": {
     "line number": [
      188
     ]
    },
    "numpy.dot": {
     "line number": [
      188
     ]
    },
    "numpy.unique": {
     "line number": [
      166
     ]
    },
    "scipy.linalg.pinv2": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.plot_filters": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      479
     ]
    },
    "copy.deepcopy": {
     "line number": [
      476
     ]
    },
    "numpy.arange": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.plot_patterns": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      352
     ]
    },
    "copy.deepcopy": {
     "line number": [
      349
     ]
    },
    "numpy.arange": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.transform": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      218
     ]
    },
    "ValueError": {
     "line number": [
      216
     ]
    },
    "isinstance": {
     "line number": [
      215
     ]
    },
    "numpy.asarray": {
     "line number": [
      222
     ]
    },
    "numpy.dot": {
     "line number": [
      222
     ]
    },
    "numpy.log": {
     "line number": [
      229
     ]
    },
    "numpy.ndarray": {
     "line number": [
      215
     ]
    },
    "type": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "mne.decoding.csp.CSP": {
     "line number": [
      676
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.csp.SPoC.__init__": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "delattr": {
     "line number": [
      749,
      750
     ]
    },
    "mne.decoding.csp.SPoC": {
     "line number": [
      742
     ]
    },
    "super": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC.fit": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      770
     ]
    },
    "_regularized_covariance": {
     "line number": [
      784
     ]
    },
    "enumerate": {
     "line number": [
      783
     ]
    },
    "len": {
     "line number": [
      769
     ]
    },
    "numpy.abs": {
     "line number": [
      796
     ]
    },
    "numpy.argsort": {
     "line number": [
      796
     ]
    },
    "numpy.asarray": {
     "line number": [
      806
     ]
    },
    "numpy.dot": {
     "line number": [
      806
     ]
    },
    "numpy.empty": {
     "line number": [
      782
     ]
    },
    "numpy.float64": {
     "line number": [
      775
     ]
    },
    "numpy.mean": {
     "line number": [
      789
     ]
    },
    "numpy.newaxis": {
     "line number": [
      789,
      789
     ]
    },
    "numpy.unique": {
     "line number": [
      769
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      792
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      802
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC.transform": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "mne.decoding.csp.SPoC": {
     "line number": [
      833
     ]
    },
    "super": {
     "line number": [
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp._ajd_pham": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "max": {
     "line number": [
      649
     ]
    },
    "numpy.arange": {
     "line number": [
      634,
      635
     ]
    },
    "numpy.array": {
     "line number": [
      658
     ]
    },
    "numpy.c_": {
     "line number": [
      661
     ]
    },
    "numpy.concatenate": {
     "line number": [
      623
     ]
    },
    "numpy.conj": {
     "line number": [
      652,
      654
     ]
    },
    "numpy.dot": {
     "line number": [
      660,
      663,
      668
     ]
    },
    "numpy.eye": {
     "line number": [
      627
     ]
    },
    "numpy.imag": {
     "line number": [
      656
     ]
    },
    "numpy.mean": {
     "line number": [
      640,
      641,
      643,
      644
     ]
    },
    "numpy.real": {
     "line number": [
      657
     ]
    },
    "numpy.reshape": {
     "line number": [
      662,
      665,
      671
     ]
    },
    "numpy.sqrt": {
     "line number": [
      645,
      647,
      657
     ]
    },
    "range": {
     "line number": [
      630,
      632,
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.csp.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.decoding.csp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.decoding.csp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.ems": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.ems.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.decoding.ems.EMS": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mne.decoding.ems.EMS.__repr__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      45
     ]
    },
    "len": {
     "line number": [
      47,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.ems.EMS.fit": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "len": {
     "line number": [
      70
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      74
     ]
    },
    "numpy.unique": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.ems.EMS.transform": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.ems._ems_diff": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      211,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.ems._run_ems": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.intersect1d": {
     "line number": [
      216
     ]
    },
    "numpy.sqrt": {
     "line number": [
      217
     ]
    },
    "numpy.sum": {
     "line number": [
      217,
      219
     ]
    },
    "objective_function": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.ems.compute_ems": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      153,
      166
     ]
    },
    "_picks_to_idx": {
     "line number": [
      150
     ]
    },
    "_set_cv": {
     "line number": [
      192
     ]
    },
    "collections.Counter": {
     "line number": [
      152
     ]
    },
    "len": {
     "line number": [
      152,
      165,
      168
     ]
    },
    "list": {
     "line number": [
      172
     ]
    },
    "numpy.array": {
     "line number": [
      203
     ]
    },
    "numpy.mean": {
     "line number": [
      204
     ]
    },
    "numpy.std": {
     "line number": [
      187
     ]
    },
    "numpy.where": {
     "line number": [
      173
     ]
    },
    "p_func": {
     "line number": [
      199
     ]
    },
    "parallel": {
     "line number": [
      199
     ]
    },
    "parallel_func": {
     "line number": [
      194
     ]
    },
    "pick_info": {
     "line number": [
      175
     ]
    },
    "pick_types": {
     "line number": [
      184,
      186
     ]
    },
    "set": {
     "line number": [
      152
     ]
    },
    "sorted": {
     "line number": [
      172
     ]
    },
    "zip": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.ems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.mixin": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.mixin.EstimatorMixin": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "object": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.mixin.EstimatorMixin.get_params": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "mne.decoding.mixin.EstimatorMixin.set_params": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71,
      80
     ]
    },
    "len": {
     "line number": [
      67
     ]
    },
    "setattr": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.mixin.TransformerMixin": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": {
    "object": {
     "line number": [
      3
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.mixin.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "mne.decoding.tests": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.GeneralizingEstimator": {
  "data": {
   "shadows": "mne.decoding.GeneralizingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LinearModel": {
  "data": {
   "shadows": "mne.decoding.base.LinearModel"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Scaler": {
  "data": {
   "shadows": "mne.decoding.Scaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.SlidingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.SlidingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base._Noop": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "sklearn.base.BaseEstimator": {
     "line number": [
      180
     ]
    },
    "sklearn.base.TransformerMixin": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base._Noop.fit": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base._Noop.transform": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base._get_inverse_funcs": {
  "data": {
   "shadows": "mne.decoding.base._get_inverse_funcs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base._make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      45
     ]
    },
    "numpy.random.multivariate_normal": {
     "line number": [
      48
     ]
    },
    "numpy.random.rand": {
     "line number": [
      45,
      47,
      55
     ]
    },
    "numpy.random.randn": {
     "line number": [
      51,
      54
     ]
    },
    "numpy.random.seed": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.cross_val_multiscore": {
  "data": {
   "shadows": "mne.decoding.base.cross_val_multiscore"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.get_coef": {
  "data": {
   "shadows": "mne.decoding.base.get_coef"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.is_classifier": {
  "data": {
   "shadows": "mne.fixes.is_classifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.is_regressor": {
  "data": {
   "shadows": "mne.fixes.is_regressor"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.test_cross_val_multiscore": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      405
     ]
    },
    "cross_val": {
     "line number": [
      424,
      425,
      428,
      429
     ]
    },
    "int": {
     "line number": [
      419
     ]
    },
    "list": {
     "line number": [
      395,
      409
     ]
    },
    "mne.decoding.base.cross_val_multiscore": {
     "line number": [
      385,
      391,
      405,
      408,
      423
     ]
    },
    "mne.decoding.search_light.SlidingEstimator": {
     "line number": [
      390,
      407
     ]
    },
    "mne.decoding.tests.test_base.pytest": {
     "line number": [
      405
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      374
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      368
     ]
    },
    "numpy.arange": {
     "line number": [
      381,
      389
     ]
    },
    "numpy.ones": {
     "line number": [
      419
     ]
    },
    "numpy.random.rand": {
     "line number": [
      380,
      388
     ]
    },
    "numpy.random.randn": {
     "line number": [
      418
     ]
    },
    "numpy.shape": {
     "line number": [
      392
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      384,
      392,
      399,
      413,
      426,
      430
     ]
    },
    "sklearn.linear_model.LinearRegression": {
     "line number": [
      422
     ]
    },
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      375,
      377
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      382,
      428
     ]
    },
    "sklearn.model_selection.StratifiedKFold": {
     "line number": [
      424
     ]
    },
    "sklearn.model_selection.cross_val_score": {
     "line number": [
      384,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Clf": {
     "line number": [
      109,
      110,
      111,
      119,
      121,
      123
     ]
    },
    "Inv": {
     "line number": [
      109,
      110,
      110,
      111,
      111,
      111,
      120,
      122,
      123
     ]
    },
    "NoInv": {
     "line number": [
      121,
      123
     ]
    },
    "hasattr": {
     "line number": [
      151,
      152,
      159
     ]
    },
    "len": {
     "line number": [
      116
     ]
    },
    "list": {
     "line number": [
      128
     ]
    },
    "mne.decoding.base.LinearModel": {
     "line number": [
      70,
      73,
      77,
      81
     ]
    },
    "mne.decoding.base._get_inverse_funcs": {
     "line number": [
      116,
      127
     ]
    },
    "mne.decoding.base.get_coef": {
     "line number": [
      150,
      168,
      174,
      176
     ]
    },
    "mne.decoding.tests.test_base._make_data": {
     "line number": [
      102,
      144
     ]
    },
    "mne.fixes.is_classifier": {
     "line number": [
      71,
      79,
      139
     ]
    },
    "mne.fixes.is_regressor": {
     "line number": [
      74,
      83
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      60
     ]
    },
    "numpy.arange": {
     "line number": [
      142
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      131
     ]
    },
    "numpy.ravel": {
     "line number": [
      145
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      167,
      171
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      128
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      73
     ]
    },
    "sklearn.model_selection.GridSearchCV": {
     "line number": [
      78,
      82
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      109,
      110,
      111,
      111,
      121,
      122,
      122,
      134,
      135
     ]
    },
    "sklearn.preprocessing.StandardScaler": {
     "line number": [
      134,
      135
     ]
    },
    "sklearn.svm.SVC": {
     "line number": [
      78
     ]
    },
    "sklearn.svm.SVR": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.Clf": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "sklearn.base.BaseEstimator": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.Clf.fit": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.Inv": {
  "data": {
   "lineno": 98
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.Inv.inverse_transform": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "sklearn.base.TransformerMixin": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv.fit": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv.transform": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef_inverse_transform": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Scale": {
     "line number": [
      209,
      220
     ]
    },
    "dict": {
     "line number": [
      194,
      195
     ]
    },
    "mne.decoding.Scaler": {
     "line number": [
      194
     ]
    },
    "mne.decoding.base.LinearModel": {
     "line number": [
      201
     ]
    },
    "mne.decoding.base.get_coef": {
     "line number": [
      211,
      212,
      217
     ]
    },
    "mne.decoding.search_light.SlidingEstimator": {
     "line number": [
      207
     ]
    },
    "mne.decoding.tests.test_base._Noop": {
     "line number": [
      220,
      195
     ]
    },
    "mne.decoding.tests.test_base._make_data": {
     "line number": [
      202
     ]
    },
    "mne.decoding.tests.test_base.pytest": {
     "line number": [
      192,
      193
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      191
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      213,
      221
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      215
     ]
    },
    "numpy.transpose": {
     "line number": [
      208
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      201
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      207,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef_multiclass": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      256
     ]
    },
    "len": {
     "line number": [
      268
     ]
    },
    "mne.create_info": {
     "line number": [
      253
     ]
    },
    "mne.decoding.Scaler": {
     "line number": [
      256
     ]
    },
    "mne.decoding.Vectorizer": {
     "line number": [
      257
     ]
    },
    "mne.decoding.base.LinearModel": {
     "line number": [
      234,
      243,
      254
     ]
    },
    "mne.decoding.base.get_coef": {
     "line number": [
      248,
      263
     ]
    },
    "mne.decoding.tests.test_base._make_data": {
     "line number": [
      232
     ]
    },
    "mne.decoding.tests.test_base.pytest": {
     "line number": [
      225,
      226
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      224
     ]
    },
    "numpy.newaxis": {
     "line number": [
      264
     ]
    },
    "numpy.ones": {
     "line number": [
      268
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      247,
      249,
      262,
      265
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      242
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      235,
      240
     ]
    },
    "sklearn.linear_model.LinearRegression": {
     "line number": [
      234
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      243,
      254
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      244,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef_multiclass_full": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "events": {
     "line number": [
      287,
      288,
      288,
      289,
      291
     ]
    },
    "int": {
     "line number": [
      287
     ]
    },
    "len": {
     "line number": [
      287,
      288
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      291
     ]
    },
    "mne.create_info": {
     "line number": [
      290
     ]
    },
    "mne.decoding.GeneralizingEstimator": {
     "line number": [
      297
     ]
    },
    "mne.decoding.Scaler": {
     "line number": [
      293
     ]
    },
    "mne.decoding.Vectorizer": {
     "line number": [
      293
     ]
    },
    "mne.decoding.base.LinearModel": {
     "line number": [
      294
     ]
    },
    "mne.decoding.base.cross_val_multiscore": {
     "line number": [
      302
     ]
    },
    "mne.decoding.base.get_coef": {
     "line number": [
      309
     ]
    },
    "mne.decoding.tests.test_base.pytest": {
     "line number": [
      272
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      271
     ]
    },
    "numpy.arange": {
     "line number": [
      288
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      311
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      307
     ]
    },
    "numpy.zeros": {
     "line number": [
      283,
      287
     ]
    },
    "range": {
     "line number": [
      285
     ]
    },
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      294
     ]
    },
    "sklearn.model_selection.StratifiedKFold": {
     "line number": [
      301
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_linearmodel": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      327,
      340,
      352,
      363
     ]
    },
    "mne.decoding.base.LinearModel": {
     "line number": [
      320,
      335,
      347,
      359
     ]
    },
    "mne.decoding.tests.test_base.pytest": {
     "line number": [
      327,
      340,
      352,
      363
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      314
     ]
    },
    "numpy.arange": {
     "line number": [
      323
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      319
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      325,
      326,
      338,
      339,
      350,
      351,
      361,
      362
     ]
    },
    "sklearn.linear_model.LinearRegression": {
     "line number": [
      359
     ]
    },
    "sklearn.model_selection.GridSearchCV": {
     "line number": [
      336,
      348
     ]
    },
    "sklearn.svm.SVC": {
     "line number": [
      336
     ]
    },
    "sklearn.svm.SVR": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      24
     ]
    },
    "mne.decoding.tests.test_csp.data_dir": {
     "line number": [
      20,
      21
     ]
    },
    "os.path.dirname": {
     "line number": [
      19
     ]
    },
    "os.path.join": {
     "line number": [
      19,
      20,
      21
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.decoding.tests.test_csp.CSP": {
  "data": {
   "shadows": "mne.decoding.csp.CSP"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.SPoC": {
  "data": {
   "shadows": "mne.decoding.csp.SPoC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp._ajd_pham": {
  "data": {
   "shadows": "mne.decoding.csp._ajd_pham"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.data_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.deterministic_toy_data": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "float": {
     "line number": [
      60,
      66
     ]
    },
    "numpy.array": {
     "line number": [
      56,
      62,
      74,
      83
     ]
    },
    "numpy.stack": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.event_id": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.event_name": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.raw_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.simulate_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      42
     ]
    },
    "numpy.dot": {
     "line number": [
      45
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      39
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      36
     ]
    },
    "numpy.sqrt": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_ajd": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "mne.decoding.csp._ajd_pham": {
     "line number": [
      275
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      271
     ]
    },
    "numpy.diag": {
     "line number": [
      274
     ]
    },
    "numpy.dot": {
     "line number": [
      274,
      274
     ]
    },
    "numpy.empty": {
     "line number": [
      272
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      268
     ]
    },
    "numpy.sqrt": {
     "line number": [
      271
     ]
    },
    "numpy.sum": {
     "line number": [
      271
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      280
     ]
    },
    "range": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      104,
      107,
      111,
      135,
      137,
      138,
      178,
      184
     ]
    },
    "dict": {
     "line number": [
      149,
      166
     ]
    },
    "events": {
     "line number": [
      92,
      97,
      148
     ]
    },
    "len": {
     "line number": [
      123,
      124,
      158,
      165,
      190
     ]
    },
    "mne.Epochs": {
     "line number": [
      97,
      148
     ]
    },
    "mne.decoding.csp.CSP": {
     "line number": [
      104,
      106,
      109,
      111,
      113,
      115,
      120,
      156,
      168,
      178,
      181,
      184,
      187,
      199
     ]
    },
    "mne.decoding.tests.test_csp.event_id": {
     "line number": [
      97
     ]
    },
    "mne.decoding.tests.test_csp.event_name": {
     "line number": [
      92
     ]
    },
    "mne.decoding.tests.test_csp.pytest": {
     "line number": [
      104,
      107,
      111,
      112,
      135,
      137,
      138,
      178,
      184,
      88
     ]
    },
    "mne.decoding.tests.test_csp.raw_fname": {
     "line number": [
      91
     ]
    },
    "mne.decoding.tests.test_csp.simulate_data": {
     "line number": [
      195
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      91
     ]
    },
    "mne.pick_types": {
     "line number": [
      93
     ]
    },
    "mne.read_events": {
     "line number": [
      92
     ]
    },
    "numpy.abs": {
     "line number": [
      204,
      205,
      209,
      210
     ]
    },
    "numpy.arange": {
     "line number": [
      143
     ]
    },
    "numpy.array": {
     "line number": [
      194
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      204,
      209
     ]
    },
    "numpy.sum": {
     "line number": [
      176
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      132,
      174
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      159,
      160,
      171,
      191
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      123,
      124,
      158
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      136
     ]
    },
    "plot": {
     "line number": [
      145
     ]
    },
    "str": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp_component_ordering": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      344,
      348
     ]
    },
    "mne.decoding.csp.CSP": {
     "line number": [
      344,
      347,
      351,
      352
     ]
    },
    "mne.decoding.tests.test_csp.deterministic_toy_data": {
     "line number": [
      342
     ]
    },
    "mne.decoding.tests.test_csp.pytest": {
     "line number": [
      344,
      348
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      358
     ]
    },
    "numpy.zeros": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp_pipeline": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "mne.decoding.csp.CSP": {
     "line number": [
      255
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      250
     ]
    },
    "sklearn.pipeline.Pipeline": {
     "line number": [
      257
     ]
    },
    "sklearn.svm.SVC": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp_twoclass_symmetry": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "mne.decoding.csp.CSP": {
     "line number": [
      327,
      332
     ]
    },
    "mne.decoding.tests.test_csp.deterministic_toy_data": {
     "line number": [
      326,
      331
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_regularized_csp": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      240,
      242,
      243
     ]
    },
    "events": {
     "line number": [
      217,
      221
     ]
    },
    "mne.Epochs": {
     "line number": [
      221
     ]
    },
    "mne.decoding.csp.CSP": {
     "line number": [
      229
     ]
    },
    "mne.decoding.tests.test_csp.event_id": {
     "line number": [
      221
     ]
    },
    "mne.decoding.tests.test_csp.event_name": {
     "line number": [
      217
     ]
    },
    "mne.decoding.tests.test_csp.pytest": {
     "line number": [
      240,
      242,
      243
     ]
    },
    "mne.decoding.tests.test_csp.raw_fname": {
     "line number": [
      216
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      216
     ]
    },
    "mne.pick_types": {
     "line number": [
      218
     ]
    },
    "mne.read_events": {
     "line number": [
      217
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      213
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      236
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_spoc": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      303
     ]
    },
    "ValueError": {
     "line number": [
      300
     ]
    },
    "mne.decoding.csp.SPoC": {
     "line number": [
      288,
      292,
      303,
      311
     ]
    },
    "mne.decoding.tests.test_csp.pytest": {
     "line number": [
      300,
      303
     ]
    },
    "mne.decoding.tests.test_csp.simulate_data": {
     "line number": [
      308
     ]
    },
    "numpy.abs": {
     "line number": [
      315,
      316,
      320,
      321
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      315,
      320
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      306
     ]
    },
    "numpy.random.randn": {
     "line number": [
      285,
      286
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      291,
      295,
      296,
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_ems": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      21
     ]
    },
    "mne.decoding.tests.test_ems.data_dir": {
     "line number": [
      17,
      18
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      87
     ]
    },
    "os.path.dirname": {
     "line number": [
      14,
      15
     ]
    },
    "os.path.join": {
     "line number": [
      14,
      15,
      17,
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.decoding.tests.test_ems.EMS": {
  "data": {
   "shadows": "mne.decoding.EMS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.compute_ems": {
  "data": {
   "shadows": "mne.decoding.compute_ems"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.curdir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.data_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.event_id": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.event_name": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.raw_fname": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.test_ems": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      41
     ]
    },
    "ValueError": {
     "line number": [
      38,
      53,
      65,
      66
     ]
    },
    "dict": {
     "line number": [
      46
     ]
    },
    "events": {
     "line number": [
      31,
      32,
      36,
      45,
      47
     ]
    },
    "len": {
     "line number": [
      51,
      55,
      56,
      66,
      77,
      78
     ]
    },
    "list": {
     "line number": [
      43,
      57,
      73,
      73
     ]
    },
    "mne.Epochs": {
     "line number": [
      36,
      47
     ]
    },
    "mne.decoding.EMS": {
     "line number": [
      74
     ]
    },
    "mne.decoding.compute_ems": {
     "line number": [
      38,
      41,
      42,
      53,
      54,
      63,
      64,
      65,
      66
     ]
    },
    "mne.decoding.tests.test_ems.event_id": {
     "line number": [
      36
     ]
    },
    "mne.decoding.tests.test_ems.event_name": {
     "line number": [
      31,
      45
     ]
    },
    "mne.decoding.tests.test_ems.pytest": {
     "line number": [
      38,
      41,
      53,
      65,
      66
     ]
    },
    "mne.decoding.tests.test_ems.raw_fname": {
     "line number": [
      28
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      28
     ]
    },
    "mne.pick_types": {
     "line number": [
      33
     ]
    },
    "mne.read_events": {
     "line number": [
      31,
      45
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      24
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      78
     ]
    },
    "numpy.mean": {
     "line number": [
      83
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      78
     ]
    },
    "numpy.std": {
     "line number": [
      72
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      83,
      84
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      43,
      55,
      56,
      57,
      75,
      82
     ]
    },
    "numpy.vstack": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      77,
      78
     ]
    },
    "set": {
     "line number": [
      43,
      57
     ]
    },
    "sklearn.model_selection.StratifiedKFold": {
     "line number": [
      62
     ]
    },
    "sum": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      25
     ]
    },
    "mne.decoding.tests.test_receptive_field.data_dir": {
     "line number": [
      21,
      22
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      546
     ]
    },
    "os.path.dirname": {
     "line number": [
      20
     ]
    },
    "os.path.join": {
     "line number": [
      20,
      21,
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.decoding.tests.test_receptive_field.ReceptiveField": {
  "data": {
   "shadows": "mne.decoding.ReceptiveField"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.TimeDelayingRidge": {
  "data": {
   "shadows": "mne.decoding.TimeDelayingRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._SCORERS": {
  "data": {
   "shadows": "mne.decoding.receptive_field._SCORERS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._compute_corrs": {
  "data": {
   "shadows": "mne.decoding.time_delaying_ridge._compute_corrs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._compute_reg_neighbors": {
  "data": {
   "shadows": "mne.decoding.time_delaying_ridge._compute_reg_neighbors"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._delay_time_series": {
  "data": {
   "shadows": "mne.decoding.receptive_field._delay_time_series"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._delays_to_slice": {
  "data": {
   "shadows": "mne.decoding.receptive_field._delays_to_slice"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._make_data": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "int": {
     "line number": [
      494
     ]
    },
    "mne.decoding.receptive_field._delay_time_series": {
     "line number": [
      497
     ]
    },
    "numpy.concatenate": {
     "line number": [
      496
     ]
    },
    "numpy.dot": {
     "line number": [
      498
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field._times_to_delays": {
  "data": {
   "shadows": "mne.decoding.receptive_field._times_to_delays"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.data_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.einsum": {
  "data": {
   "shadows": "mne.fixes.einsum"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.event_id": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.event_name": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.irfft": {
  "data": {
   "shadows": "mne.fixes.irfft"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.n_jobs_test": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.raw_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.rfft": {
  "data": {
   "shadows": "mne.fixes.rfft"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.test_compute_reg_neighbors": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "mne.decoding.time_delaying_ridge._compute_reg_neighbors": {
     "line number": [
      45,
      47
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_inverse_coef": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "int": {
     "line number": [
      509
     ]
    },
    "mne.decoding.ReceptiveField": {
     "line number": [
      515,
      518
     ]
    },
    "mne.decoding.TimeDelayingRidge": {
     "line number": [
      513
     ]
    },
    "mne.decoding.tests.test_receptive_field._make_data": {
     "line number": [
      512
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      502
     ]
    },
    "numpy.dot": {
     "line number": [
      530
     ]
    },
    "numpy.eye": {
     "line number": [
      530
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      530
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      522,
      524
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_linalg_warning": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      541
     ]
    },
    "UserWarning": {
     "line number": [
      541
     ]
    },
    "mne.decoding.ReceptiveField": {
     "line number": [
      540
     ]
    },
    "mne.decoding.tests.test_receptive_field._make_data": {
     "line number": [
      538
     ]
    },
    "mne.decoding.tests.test_receptive_field.pytest": {
     "line number": [
      541
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      533
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_rank_deficiency": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "mne.decoding.ReceptiveField": {
     "line number": [
      75
     ]
    },
    "mne.fixes.irfft": {
     "line number": [
      68
     ]
    },
    "mne.fixes.rfft": {
     "line number": [
      66
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      54
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      71
     ]
    },
    "numpy.convolve": {
     "line number": [
      71
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      79
     ]
    },
    "numpy.hanning": {
     "line number": [
      69
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      78
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_1d": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "float": {
     "line number": [
      373
     ]
    },
    "len": {
     "line number": [
      380
     ]
    },
    "mne.decoding.ReceptiveField": {
     "line number": [
      362
     ]
    },
    "mne.decoding.TimeDelayingRidge": {
     "line number": [
      357
     ]
    },
    "mne.decoding.tests.test_receptive_field.n_jobs_test": {
     "line number": [
      335
     ]
    },
    "mne.decoding.tests.test_receptive_field.pytest": {
     "line number": [
      335
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      336
     ]
    },
    "numpy.arange": {
     "line number": [
      372
     ]
    },
    "numpy.mean": {
     "line number": [
      385
     ]
    },
    "numpy.newaxis": {
     "line number": [
      374,
      376
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      340
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      369,
      378,
      382
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      371
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      377
     ]
    },
    "numpy.zeros": {
     "line number": [
      343
     ]
    },
    "range": {
     "line number": [
      342
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      359,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_basic": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      182,
      184,
      186,
      189,
      191,
      211,
      213,
      215,
      226,
      229
     ]
    },
    "int": {
     "line number": [
      160
     ]
    },
    "isinstance": {
     "line number": [
      205
     ]
    },
    "mne.decoding.ReceptiveField": {
     "line number": [
      169,
      195,
      198,
      202,
      207,
      212,
      214,
      216,
      219,
      230
     ]
    },
    "mne.decoding.TimeDelayingRidge": {
     "line number": [
      205
     ]
    },
    "mne.decoding.receptive_field._SCORERS": {
     "line number": [
      227
     ]
    },
    "mne.decoding.receptive_field._SCORERS.items": {
     "line number": [
      218
     ]
    },
    "mne.decoding.receptive_field._delay_time_series": {
     "line number": [
      164
     ]
    },
    "mne.decoding.tests.test_receptive_field.n_jobs_test": {
     "line number": [
      145
     ]
    },
    "mne.decoding.tests.test_receptive_field.pytest": {
     "line number": [
      182,
      184,
      186,
      189,
      191,
      211,
      213,
      215,
      226,
      229,
      145
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      146
     ]
    },
    "numpy.arange": {
     "line number": [
      172
     ]
    },
    "numpy.array": {
     "line number": [
      214
     ]
    },
    "numpy.concatenate": {
     "line number": [
      163
     ]
    },
    "numpy.dot": {
     "line number": [
      165
     ]
    },
    "numpy.newaxis": {
     "line number": [
      180,
      180,
      181,
      183,
      187,
      187,
      187,
      222,
      223
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      152,
      158
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      175,
      178,
      223
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      172
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      197,
      200
     ]
    },
    "numpy.tile": {
     "line number": [
      187
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      151
     ]
    },
    "str": {
     "line number": [
      203,
      206,
      209
     ]
    },
    "val": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_nd": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      429,
      434,
      437
     ]
    },
    "mne.decoding.ReceptiveField": {
     "line number": [
      420,
      428,
      433,
      436,
      447,
      484
     ]
    },
    "mne.decoding.TimeDelayingRidge": {
     "line number": [
      415,
      416,
      426,
      431,
      441,
      442
     ]
    },
    "mne.decoding.tests.test_receptive_field.n_jobs_test": {
     "line number": [
      389
     ]
    },
    "mne.decoding.tests.test_receptive_field.pytest": {
     "line number": [
      429,
      434,
      437,
      389
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      390
     ]
    },
    "numpy.arange": {
     "line number": [
      424
     ]
    },
    "numpy.mean": {
     "line number": [
      404,
      405,
      457,
      482,
      487
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      395
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      425,
      449,
      451,
      454,
      469,
      471,
      480,
      486
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      423
     ]
    },
    "numpy.zeros": {
     "line number": [
      397
     ]
    },
    "range": {
     "line number": [
      402
     ]
    },
    "repr": {
     "line number": [
      450,
      452,
      456,
      470,
      472,
      481
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      418,
      444,
      445
     ]
    },
    "val": {
     "line number": [
      463,
      467,
      469
     ]
    },
    "zip": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_time_delay": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      107,
      110
     ]
    },
    "int": {
     "line number": [
      113,
      113,
      127
     ]
    },
    "len": {
     "line number": [
      122
     ]
    },
    "mne.decoding.receptive_field._delay_time_series": {
     "line number": [
      108,
      111,
      115
     ]
    },
    "mne.decoding.receptive_field._delays_to_slice": {
     "line number": [
      120
     ]
    },
    "mne.decoding.receptive_field._times_to_delays": {
     "line number": [
      118
     ]
    },
    "mne.decoding.tests.test_receptive_field.pytest": {
     "line number": [
      107,
      110
     ]
    },
    "numpy.arange": {
     "line number": [
      119,
      122
     ]
    },
    "numpy.complex128": {
     "line number": [
      111
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      86
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      119,
      123,
      133,
      136,
      138,
      140,
      142
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      116
     ]
    },
    "numpy.where": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      128
     ]
    },
    "round": {
     "line number": [
      113,
      113,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_time_delaying_fast_calc": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "mne.decoding.receptive_field._delay_time_series": {
     "line number": [
      239,
      251,
      263,
      282,
      296,
      326
     ]
    },
    "mne.decoding.tests.test_receptive_field.n_jobs_test": {
     "line number": [
      233
     ]
    },
    "mne.decoding.tests.test_receptive_field.pytest": {
     "line number": [
      233
     ]
    },
    "mne.decoding.time_delaying_ridge._compute_corrs": {
     "line number": [
      247,
      259,
      276,
      290,
      309,
      325
     ]
    },
    "mne.fixes.einsum": {
     "line number": [
      327
     ]
    },
    "numpy.array": {
     "line number": [
      236,
      242,
      253,
      265,
      280,
      284,
      294,
      298,
      302
     ]
    },
    "numpy.convolve": {
     "line number": [
      324
     ]
    },
    "numpy.dot": {
     "line number": [
      244,
      255,
      268,
      287,
      301,
      331
     ]
    },
    "numpy.empty": {
     "line number": [
      315
     ]
    },
    "numpy.mean": {
     "line number": [
      323
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      313
     ]
    },
    "numpy.reshape": {
     "line number": [
      328
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      243,
      246,
      248,
      254,
      258,
      260,
      267,
      275,
      277,
      286,
      289,
      291,
      300,
      308,
      310,
      329,
      332
     ]
    },
    "numpy.zeros": {
     "line number": [
      247,
      259,
      276,
      290,
      309
     ]
    },
    "range": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_search_light.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.GeneralizingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.GeneralizingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.SlidingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.SlidingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.transformer.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.make_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      19
     ]
    },
    "numpy.random.rand": {
     "line number": [
      18
     ]
    },
    "numpy.random.randn": {
     "line number": [
      21
     ]
    },
    "range": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      288
     ]
    },
    "Classifier": {
     "line number": [
      289
     ]
    },
    "mne.decoding.search_light.SlidingEstimator": {
     "line number": [
      272,
      289,
      292
     ]
    },
    "mne.decoding.tests.test_search_light.pytest": {
     "line number": [
      288
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      261
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      268
     ]
    },
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": {
     "line number": [
      292
     ]
    },
    "sklearn.linear_model.LinearRegression": {
     "line number": [
      272
     ]
    },
    "sklearn.model_selection.cross_val_predict": {
     "line number": [
      273,
      290,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "sklearn.base.BaseEstimator": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier.fit": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "sklearn.base.clone": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier.predict_proba": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_generalization_light": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      220
     ]
    },
    "ValueError": {
     "line number": [
      220,
      227
     ]
    },
    "float": {
     "line number": [
      198,
      209
     ]
    },
    "int": {
     "line number": [
      196
     ]
    },
    "len": {
     "line number": [
      225,
      229
     ]
    },
    "list": {
     "line number": [
      251
     ]
    },
    "mne.decoding.search_light.GeneralizingEstimator": {
     "line number": [
      187,
      211,
      218,
      224,
      237,
      253
     ]
    },
    "mne.decoding.tests.test_search_light.make_data": {
     "line number": [
      184
     ]
    },
    "mne.decoding.tests.test_search_light.pytest": {
     "line number": [
      220,
      227
     ]
    },
    "mne.decoding.transformer.Vectorizer": {
     "line number": [
      254
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      174
     ]
    },
    "numpy.abs": {
     "line number": [
      208
     ]
    },
    "numpy.arange": {
     "line number": [
      225,
      229,
      250
     ]
    },
    "numpy.ones_like": {
     "line number": [
      190
     ]
    },
    "numpy.random.rand": {
     "line number": [
      249
     ]
    },
    "numpy.sum": {
     "line number": [
      208
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      195,
      199,
      203,
      207,
      234,
      240,
      242,
      257,
      258
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      188,
      192,
      215
     ]
    },
    "repr": {
     "line number": [
      188
     ]
    },
    "scoring": {
     "line number": [
      217,
      218
     ]
    },
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      181
     ]
    },
    "sklearn.metrics.roc_auc_score": {
     "line number": [
      214,
      232
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      78
     ]
    },
    "ValueError": {
     "line number": [
      43,
      52,
      53,
      57,
      78,
      85,
      106
     ]
    },
    "_LogRegTransformer": {
     "line number": [
      148
     ]
    },
    "float": {
     "line number": [
      62,
      69,
      115
     ]
    },
    "int": {
     "line number": [
      59
     ]
    },
    "isinstance": {
     "line number": [
      171
     ]
    },
    "len": {
     "line number": [
      83,
      96,
      101
     ]
    },
    "list": {
     "line number": [
      156
     ]
    },
    "mne.decoding.search_light.SlidingEstimator": {
     "line number": [
      43,
      44,
      46,
      71,
      76,
      82,
      91,
      104,
      109,
      124,
      148,
      158,
      168
     ]
    },
    "mne.decoding.tests.test_search_light.make_data": {
     "line number": [
      40
     ]
    },
    "mne.decoding.tests.test_search_light.pytest": {
     "line number": [
      33,
      43,
      52,
      53,
      57,
      78,
      85,
      106
     ]
    },
    "mne.decoding.transformer.Vectorizer": {
     "line number": [
      159
     ]
    },
    "mne.fixes._get_args": {
     "line number": [
      88
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      27
     ]
    },
    "numpy.abs": {
     "line number": [
      68
     ]
    },
    "numpy.arange": {
     "line number": [
      83,
      96,
      101,
      155
     ]
    },
    "numpy.ones_like": {
     "line number": [
      54
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      111
     ]
    },
    "numpy.random.rand": {
     "line number": [
      154,
      166
     ]
    },
    "numpy.sum": {
     "line number": [
      68
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      60,
      63,
      67,
      99,
      114,
      121,
      128,
      162,
      163
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      49,
      51,
      72
     ]
    },
    "scoring": {
     "line number": [
      119
     ]
    },
    "sklearn.base.is_classifier": {
     "line number": [
      45,
      47
     ]
    },
    "sklearn.ensemble.BaggingClassifier": {
     "line number": [
      168,
      171
     ]
    },
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      37,
      46
     ]
    },
    "sklearn.linear_model.Ridge": {
     "line number": [
      44
     ]
    },
    "sklearn.metrics.make_scorer": {
     "line number": [
      89,
      118
     ]
    },
    "sklearn.metrics.roc_auc_score": {
     "line number": [
      88,
      90,
      99,
      104,
      118
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      148,
      159
     ]
    },
    "zip": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "super": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer.transform": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "super": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_time_frequency.TimeFrequency": {
  "data": {
   "shadows": "mne.decoding.time_frequency.TimeFrequency"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.test_timefrequency": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      23
     ]
    },
    "mne.decoding.tests.test_time_frequency.pytest": {
     "line number": [
      23
     ]
    },
    "mne.decoding.time_frequency.TimeFrequency": {
     "line number": [
      21,
      23,
      32,
      41
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      14
     ]
    },
    "numpy.random.rand": {
     "line number": [
      28
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      36,
      39,
      43
     ]
    },
    "sklearn.base.clone": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      20
     ]
    },
    "mne.decoding.tests.test_transformer.data_dir": {
     "line number": [
      24,
      25
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      238
     ]
    },
    "os.path.dirname": {
     "line number": [
      23
     ]
    },
    "os.path.join": {
     "line number": [
      23,
      24,
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.decoding.tests.test_transformer.DEFAULTS": {
  "data": {
   "shadows": "mne.defaults.DEFAULTS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.FilterEstimator": {
  "data": {
   "shadows": "mne.decoding.FilterEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.PSDEstimator": {
  "data": {
   "shadows": "mne.decoding.PSDEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Scaler": {
  "data": {
   "shadows": "mne.decoding.Scaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.TemporalFilter": {
  "data": {
   "shadows": "mne.decoding.TemporalFilter"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.UnsupervisedSpatialFilter": {
  "data": {
   "shadows": "mne.decoding.UnsupervisedSpatialFilter"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.data_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.event_id": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.event_name": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.raw_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.test_filterestimator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      113
     ]
    },
    "ValueError": {
     "line number": [
      114,
      122,
      123
     ]
    },
    "events": {
     "line number": [
      90,
      94
     ]
    },
    "mne.Epochs": {
     "line number": [
      94
     ]
    },
    "mne.decoding.FilterEstimator": {
     "line number": [
      99,
      105,
      111,
      116
     ]
    },
    "mne.decoding.tests.test_transformer.event_id": {
     "line number": [
      94
     ]
    },
    "mne.decoding.tests.test_transformer.event_name": {
     "line number": [
      90
     ]
    },
    "mne.decoding.tests.test_transformer.pytest": {
     "line number": [
      113,
      114,
      122,
      123
     ]
    },
    "mne.decoding.tests.test_transformer.raw_fname": {
     "line number": [
      89
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      89
     ]
    },
    "mne.pick_types": {
     "line number": [
      91
     ]
    },
    "mne.read_events": {
     "line number": [
      90
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_psdestimator": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      144,
      145
     ]
    },
    "events": {
     "line number": [
      129,
      133
     ]
    },
    "mne.Epochs": {
     "line number": [
      133
     ]
    },
    "mne.decoding.PSDEstimator": {
     "line number": [
      136
     ]
    },
    "mne.decoding.tests.test_transformer.event_id": {
     "line number": [
      133
     ]
    },
    "mne.decoding.tests.test_transformer.event_name": {
     "line number": [
      129
     ]
    },
    "mne.decoding.tests.test_transformer.pytest": {
     "line number": [
      144,
      145
     ]
    },
    "mne.decoding.tests.test_transformer.raw_fname": {
     "line number": [
      128
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      128
     ]
    },
    "mne.pick_types": {
     "line number": [
      130
     ]
    },
    "mne.read_events": {
     "line number": [
      129
     ]
    },
    "numpy.inf": {
     "line number": [
      136
     ]
    },
    "numpy.pi": {
     "line number": [
      136
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_scaler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      46
     ]
    },
    "TypeError": {
     "line number": [
      79,
      80
     ]
    },
    "ValueError": {
     "line number": [
      78,
      84
     ]
    },
    "dict": {
     "line number": [
      41,
      52
     ]
    },
    "events": {
     "line number": [
      31,
      36,
      81
     ]
    },
    "isinstance": {
     "line number": [
      52
     ]
    },
    "len": {
     "line number": [
      54,
      58,
      82
     ]
    },
    "mne.Epochs": {
     "line number": [
      36,
      81
     ]
    },
    "mne.decoding.Scaler": {
     "line number": [
      47,
      49,
      78,
      83
     ]
    },
    "mne.decoding.tests.test_transformer.event_id": {
     "line number": [
      36,
      81
     ]
    },
    "mne.decoding.tests.test_transformer.event_name": {
     "line number": [
      31
     ]
    },
    "mne.decoding.tests.test_transformer.pytest": {
     "line number": [
      46,
      78,
      79,
      80,
      84
     ]
    },
    "mne.decoding.tests.test_transformer.raw_fname": {
     "line number": [
      30
     ]
    },
    "mne.defaults.DEFAULTS": {
     "line number": [
      53
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      30
     ]
    },
    "mne.pick_types": {
     "line number": [
      32,
      56,
      57
     ]
    },
    "mne.read_events": {
     "line number": [
      31
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      45
     ]
    },
    "numpy.arange": {
     "line number": [
      82
     ]
    },
    "numpy.array": {
     "line number": [
      60,
      61,
      63
     ]
    },
    "numpy.mean": {
     "line number": [
      61
     ]
    },
    "numpy.newaxis": {
     "line number": [
      67,
      67
     ]
    },
    "numpy.percentile": {
     "line number": [
      63
     ]
    },
    "numpy.std": {
     "line number": [
      60
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      67
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      75
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      51
     ]
    },
    "numpy.zeros": {
     "line number": [
      54,
      58
     ]
    },
    "zip": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_temporal_filter": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      218,
      228
     ]
    },
    "mne.decoding.TemporalFilter": {
     "line number": [
      217,
      222,
      233
     ]
    },
    "mne.decoding.tests.test_transformer.pytest": {
     "line number": [
      218,
      228
     ]
    },
    "numpy.random.rand": {
     "line number": [
      211,
      232
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      224
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_unsupervised_spatial_filter": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      187,
      206
     ]
    },
    "events": {
     "line number": [
      179,
      183
     ]
    },
    "mne.Epochs": {
     "line number": [
      183
     ]
    },
    "mne.decoding.UnsupervisedSpatialFilter": {
     "line number": [
      187,
      192,
      194,
      204,
      206
     ]
    },
    "mne.decoding.tests.test_transformer.event_id": {
     "line number": [
      183
     ]
    },
    "mne.decoding.tests.test_transformer.event_name": {
     "line number": [
      179
     ]
    },
    "mne.decoding.tests.test_transformer.pytest": {
     "line number": [
      187,
      206
     ]
    },
    "mne.decoding.tests.test_transformer.raw_fname": {
     "line number": [
      178
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      178
     ]
    },
    "mne.pick_types": {
     "line number": [
      180
     ]
    },
    "mne.read_events": {
     "line number": [
      179
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      173
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      199,
      201
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      197,
      200
     ]
    },
    "sklearn.decomposition.PCA": {
     "line number": [
      192,
      194,
      204,
      206
     ]
    },
    "sklearn.kernel_ridge.KernelRidge": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_vectorizer": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      168,
      169
     ]
    },
    "mne.decoding.Vectorizer": {
     "line number": [
      151
     ]
    },
    "mne.decoding.tests.test_transformer.pytest": {
     "line number": [
      168,
      169
     ]
    },
    "numpy.random.rand": {
     "line number": [
      150,
      162,
      167,
      168,
      170
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      158,
      159
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      153,
      157,
      162,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge": {
  "data": {
   "lineno": 215
  },
  "type": "class"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      268
     ]
    },
    "float": {
     "line number": [
      270,
      271,
      272,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge._smax": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "int": {
     "line number": [
      285
     ]
    },
    "property": {
     "line number": [
      283
     ]
    },
    "round": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge._smin": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "int": {
     "line number": [
      281
     ]
    },
    "property": {
     "line number": [
      279
     ]
    },
    "round": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.fit": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "check_n_jobs": {
     "line number": [
      308
     ]
    },
    "mne.decoding.time_delaying_ridge._compute_corrs": {
     "line number": [
      312
     ]
    },
    "mne.decoding.time_delaying_ridge._fit_corrs": {
     "line number": [
      315
     ]
    },
    "numpy.dot": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.predict": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "len": {
     "line number": [
      349,
      350
     ]
    },
    "max": {
     "line number": [
      344,
      349
     ]
    },
    "numpy.convolve": {
     "line number": [
      348
     ]
    },
    "numpy.newaxis": {
     "line number": [
      338
     ]
    },
    "numpy.zeros": {
     "line number": [
      342
     ]
    },
    "range": {
     "line number": [
      345,
      346,
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._compute_corrs": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ProgressBar": {
     "line number": [
      59
     ]
    },
    "_setup_cuda_fft_multiply_repeated": {
     "line number": [
      45
     ]
    },
    "enumerate": {
     "line number": [
      70
     ]
    },
    "int": {
     "line number": [
      49
     ]
    },
    "max": {
     "line number": [
      90,
      90
     ]
    },
    "mne.decoding.time_delaying_ridge._toeplitz_dot": {
     "line number": [
      86,
      92
     ]
    },
    "next_fast_len": {
     "line number": [
      43
     ]
    },
    "numpy.arange": {
     "line number": [
      51,
      52
     ]
    },
    "numpy.empty": {
     "line number": [
      49
     ]
    },
    "numpy.mean": {
     "line number": [
      24,
      25,
      28
     ]
    },
    "numpy.newaxis": {
     "line number": [
      35,
      36
     ]
    },
    "numpy.reshape": {
     "line number": [
      118
     ]
    },
    "numpy.zeros": {
     "line number": [
      55,
      56
     ]
    },
    "range": {
     "line number": [
      50,
      62,
      69,
      70
     ]
    },
    "slice": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._compute_reg_neighbors": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      146,
      150
     ]
    },
    "isinstance": {
     "line number": [
      143
     ]
    },
    "len": {
     "line number": [
      145,
      147
     ]
    },
    "numpy.array_equal": {
     "line number": [
      177
     ]
    },
    "numpy.diag": {
     "line number": [
      181
     ]
    },
    "numpy.eye": {
     "line number": [
      155,
      158
     ]
    },
    "numpy.newaxis": {
     "line number": [
      183
     ]
    },
    "numpy.sqrt": {
     "line number": [
      181
     ]
    },
    "numpy.zeros": {
     "line number": [
      166
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      164
     ]
    },
    "scipy.sparse.csgraph.laplacian": {
     "line number": [
      189
     ]
    },
    "str": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._fit_corrs": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "mne.decoding.time_delaying_ridge._compute_reg_neighbors": {
     "line number": [
      199
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      207
     ]
    },
    "scipy.linalg.lstsq": {
     "line number": [
      210
     ]
    },
    "scipy.linalg.solve": {
     "line number": [
      206
     ]
    },
    "warn": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._toeplitz_dot": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "len": {
     "line number": [
      132
     ]
    },
    "numpy.outer": {
     "line number": [
      131
     ]
    },
    "range": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.laplacian": {
  "data": {
   "shadows": "scipy.sparse.csgraph.laplacian"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.time_frequency.TimeFrequency": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "mne.decoding.time_frequency.TimeFrequency.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      77
     ]
    },
    "_check_tfr_param": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.fit": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.fit_transform": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.transform": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "_compute_tfr": {
     "line number": [
      139
     ]
    },
    "numpy.newaxis": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.transformer": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.transformer.FilterEstimator": {
  "data": {
   "lineno": 423
  },
  "type": "class"
 },
 "mne.decoding.transformer.FilterEstimator.__init__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.FilterEstimator.fit": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      508
     ]
    },
    "float": {
     "line number": [
      519,
      520,
      521,
      522
     ]
    },
    "isinstance": {
     "line number": [
      507,
      519,
      521
     ]
    },
    "numpy.ndarray": {
     "line number": [
      507
     ]
    },
    "pick_types": {
     "line number": [
      512
     ]
    },
    "type": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.FilterEstimator.transform": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      554
     ]
    },
    "filter_data": {
     "line number": [
      557
     ]
    },
    "isinstance": {
     "line number": [
      553
     ]
    },
    "numpy.atleast_3d": {
     "line number": [
      556
     ]
    },
    "numpy.ndarray": {
     "line number": [
      553
     ]
    },
    "type": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator": {
  "data": {
   "lineno": 332
  },
  "type": "class"
 },
 "mne.decoding.transformer.PSDEstimator.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      365
     ]
    },
    "numpy.pi": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator.fit": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      394
     ]
    },
    "isinstance": {
     "line number": [
      393
     ]
    },
    "numpy.ndarray": {
     "line number": [
      393
     ]
    },
    "type": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator.transform": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      413
     ]
    },
    "isinstance": {
     "line number": [
      412
     ]
    },
    "numpy.ndarray": {
     "line number": [
      412
     ]
    },
    "psd_array_multitaper": {
     "line number": [
      415
     ]
    },
    "type": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "mne.decoding.transformer.Scaler": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "mne.decoding.transformer.Scaler.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      114,
      120
     ]
    },
    "_check_option": {
     "line number": [
      117
     ]
    },
    "dict": {
     "line number": [
      113,
      118
     ]
    },
    "isinstance": {
     "line number": [
      113,
      116,
      118
     ]
    },
    "mne.decoding.transformer._ConstantScaler": {
     "line number": [
      122
     ]
    },
    "sklearn.preprocessing.RobustScaler": {
     "line number": [
      129
     ]
    },
    "sklearn.preprocessing.StandardScaler": {
     "line number": [
      125
     ]
    },
    "str": {
     "line number": [
      113,
      116
     ]
    },
    "type": {
     "line number": [
      115,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.fit": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      147
     ]
    },
    "mne.decoding.transformer._sklearn_reshape_apply": {
     "line number": [
      151
     ]
    },
    "numpy.ndarray": {
     "line number": [
      147
     ]
    },
    "numpy.newaxis": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.fit_transform": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.inverse_transform": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "mne.decoding.transformer._sklearn_reshape_apply": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.transform": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      175
     ]
    },
    "mne.decoding.transformer._sklearn_reshape_apply": {
     "line number": [
      178
     ]
    },
    "numpy.ndarray": {
     "line number": [
      172
     ]
    },
    "numpy.newaxis": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "mne.decoding.transformer.TemporalFilter": {
  "data": {
   "lineno": 688
  },
  "type": "class"
 },
 "mne.decoding.transformer.TemporalFilter.__init__": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      791
     ]
    },
    "int": {
     "line number": [
      790
     ]
    },
    "isinstance": {
     "line number": [
      790
     ]
    },
    "method": {
     "line number": [
      784
     ]
    },
    "type": {
     "line number": [
      792
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.TemporalFilter.fit": {
  "data": {
   "lineno": 794
  },
  "type": "function"
 },
 "mne.decoding.transformer.TemporalFilter.transform": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      829
     ]
    },
    "_triage_filter_params": {
     "line number": [
      837
     ]
    },
    "filter_data": {
     "line number": [
      843
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter": {
  "data": {
   "lineno": 565
  },
  "type": "class"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.__init__": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      581,
      585
     ]
    },
    "bool": {
     "line number": [
      584,
      586
     ]
    },
    "hasattr": {
     "line number": [
      580
     ]
    },
    "isinstance": {
     "line number": [
      584
     ]
    },
    "type": {
     "line number": [
      586
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter._apply_method": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      681
     ]
    },
    "method": {
     "line number": [
      682
     ]
    },
    "numpy.reshape": {
     "line number": [
      679,
      684
     ]
    },
    "numpy.transpose": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.fit": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      607
     ]
    },
    "numpy.transpose": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.fit_transform": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.inverse_transform": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.transform": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer": {
  "data": {
   "lineno": 230
  },
  "type": "class"
 },
 "mne.decoding.transformer.Vectorizer.fit": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.fit_transform": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.inverse_transform": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      327
     ]
    },
    "numpy.asarray": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.transform": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      287
     ]
    },
    "len": {
     "line number": [
      289
     ]
    },
    "numpy.asarray": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mne.decoding.transformer._ConstantScaler.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.fit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      36
     ]
    },
    "_check_scalings_user": {
     "line number": [
      31
     ]
    },
    "_pick_data_channels": {
     "line number": [
      33
     ]
    },
    "_picks_by_type": {
     "line number": [
      32
     ]
    },
    "len": {
     "line number": [
      34,
      35,
      37,
      37
     ]
    },
    "numpy.ones": {
     "line number": [
      34
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      42
     ]
    },
    "pick_info": {
     "line number": [
      32
     ]
    },
    "sum": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.fit_transform": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.inverse_transform": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.transform": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.decoding.transformer._sklearn_reshape_apply": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58
     ]
    },
    "func": {
     "line number": [
      61
     ]
    },
    "isinstance": {
     "line number": [
      57
     ]
    },
    "numpy.ndarray": {
     "line number": [
      57
     ]
    },
    "numpy.reshape": {
     "line number": [
      60
     ]
    },
    "type": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.decoding.transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.defaults": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      9,
      10,
      15,
      20,
      25,
      31,
      33,
      37,
      44,
      50,
      78,
      79,
      80,
      82,
      84,
      85
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.defaults.DEFAULTS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.defaults.HEAD_SIZE_DEFAULT": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "mne.defaults._BORDER_DEFAULT": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "mne.defaults._EXTRAPOLATE_DEFAULT": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "mne.defaults._handle_default": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      99
     ]
    },
    "dict": {
     "line number": [
      101
     ]
    },
    "isinstance": {
     "line number": [
      101
     ]
    },
    "mne.defaults.DEFAULTS": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.defaults.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.dipole": {
  "data": {},
  "type": "module"
 },
 "mne.dipole.Dipole": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.dipole.Dipole.__getitem__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      307
     ]
    },
    "int": {
     "line number": [
      298
     ]
    },
    "isinstance": {
     "line number": [
      298
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      106
     ]
    },
    "dict": {
     "line number": [
      106
     ]
    },
    "numpy.array": {
     "line number": [
      100,
      101,
      102,
      103,
      104,
      107,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__len__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__repr__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "len": {
     "line number": [
      112
     ]
    },
    "numpy.max": {
     "line number": [
      114
     ]
    },
    "numpy.min": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.copy": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.crop": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "_time_mask": {
     "line number": [
      161
     ]
    },
    "getattr": {
     "line number": [
      165,
      166
     ]
    },
    "len": {
     "line number": [
      159
     ]
    },
    "numpy.diff": {
     "line number": [
      160
     ]
    },
    "numpy.median": {
     "line number": [
      160
     ]
    },
    "setattr": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.plot_amplitudes": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "plot_dipole_amplitudes": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.plot_locations": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      259
     ]
    },
    "plot_dipole_locations": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.Dipole.save": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      135
     ]
    },
    "mne.dipole._write_dipole_bdip": {
     "line number": [
      137
     ]
    },
    "mne.dipole._write_dipole_text": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed": {
  "data": {
   "lineno": 343
  },
  "type": "class"
 },
 "mne.dipole.DipoleFixed.__init__": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.__repr__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "len": {
     "line number": [
      396
     ]
    },
    "numpy.max": {
     "line number": [
      398
     ]
    },
    "numpy.min": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.ch_names": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "property": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.copy": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.plot": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "_plot_evoked": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.save": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "_write_evokeds": {
     "line number": [
      435
     ]
    },
    "check_fname": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._BDIP_ERROR_KEYS": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "mne.dipole._concatenate_dipoles": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": {
    "mne.dipole.Dipole": {
     "line number": [
      1486
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1486,
      1486,
      1487,
      1487,
      1488
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._dipole_forwards": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": {
    "_compute_forwards_meeg": {
     "line number": [
      710
     ]
    },
    "dgemm": {
     "line number": [
      716
     ]
    },
    "numpy.concatenate": {
     "line number": [
      711
     ]
    },
    "numpy.isfinite": {
     "line number": [
      712
     ]
    },
    "numpy.ones": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._dipole_gof": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "ddot": {
     "line number": [
      765
     ]
    },
    "dgemv": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._fit_Q": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "len": {
     "line number": [
      791
     ]
    },
    "mne.dipole._dipole_forwards": {
     "line number": [
      783
     ]
    },
    "mne.dipole._dipole_gof": {
     "line number": [
      790
     ]
    },
    "numpy.dot": {
     "line number": [
      793,
      795,
      797,
      803
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      796
     ]
    },
    "numpy.newaxis": {
     "line number": [
      784,
      795
     ]
    },
    "numpy.sum": {
     "line number": [
      799
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._fit_confidence": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": {
    "mne.dipole._dipole_forwards": {
     "line number": [
      954,
      958
     ]
    },
    "numpy.allclose": {
     "line number": [
      945
     ]
    },
    "numpy.array": {
     "line number": [
      957,
      969
     ]
    },
    "numpy.concatenate": {
     "line number": [
      981
     ]
    },
    "numpy.cross": {
     "line number": [
      944
     ]
    },
    "numpy.diag": {
     "line number": [
      975
     ]
    },
    "numpy.diff": {
     "line number": [
      955,
      955,
      963,
      963
     ]
    },
    "numpy.dot": {
     "line number": [
      941,
      945,
      954,
      962,
      971
     ]
    },
    "numpy.empty": {
     "line number": [
      936,
      948
     ]
    },
    "numpy.eye": {
     "line number": [
      945
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      942,
      957,
      967,
      968
     ]
    },
    "numpy.newaxis": {
     "line number": [
      952,
      958,
      974
     ]
    },
    "numpy.pi": {
     "line number": [
      979
     ]
    },
    "numpy.prod": {
     "line number": [
      980
     ]
    },
    "numpy.sqrt": {
     "line number": [
      975,
      979
     ]
    },
    "range": {
     "line number": [
      949,
      959
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      980
     ]
    },
    "scipy.linalg.pinvh": {
     "line number": [
      972
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._fit_dipole": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": {
    "_compute_nearest": {
     "line number": [
      1061
     ]
    },
    "_svd_lwork": {
     "line number": [
      1032
     ]
    },
    "enumerate": {
     "line number": [
      1030
     ]
    },
    "functools.partial": {
     "line number": [
      1015,
      1019,
      1033
     ]
    },
    "mne.dipole._fit_Q": {
     "line number": [
      1049
     ]
    },
    "mne.dipole._fit_confidence": {
     "line number": [
      1057
     ]
    },
    "mne.dipole._fit_eval": {
     "line number": [
      1029,
      1033
     ]
    },
    "mne.dipole._sphere_constraint": {
     "line number": [
      1020
     ]
    },
    "mne.dipole._surface_constraint": {
     "line number": [
      1015
     ]
    },
    "numpy.argmin": {
     "line number": [
      1029
     ]
    },
    "numpy.dot": {
     "line number": [
      1010,
      1024,
      1053
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1062
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1053
     ]
    },
    "numpy.zeros": {
     "line number": [
      1027,
      1027
     ]
    },
    "scipy.optimize.fmin_cobyla": {
     "line number": [
      1041
     ]
    },
    "warn": {
     "line number": [
      1026
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._fit_dipole_fixed": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": {
    "mne.dipole._fit_Q": {
     "line number": [
      1080
     ]
    },
    "numpy.dot": {
     "line number": [
      1074,
      1075,
      1083,
      1087
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1083
     ]
    },
    "numpy.zeros": {
     "line number": [
      1078,
      1078,
      1078
     ]
    },
    "warn": {
     "line number": [
      1077
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._fit_dipoles": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      825
     ]
    },
    "numpy.array": {
     "line number": [
      817,
      818,
      819,
      820,
      823,
      826,
      827,
      828
     ]
    },
    "p_fun": {
     "line number": [
      813
     ]
    },
    "parallel": {
     "line number": [
      813
     ]
    },
    "parallel_func": {
     "line number": [
      811
     ]
    },
    "scipy.optimize.fmin_cobyla": {
     "line number": [
      815
     ]
    },
    "zip": {
     "line number": [
      816
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._fit_eval": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "_repeated_svd": {
     "line number": [
      753
     ]
    },
    "mne.dipole._dipole_forwards": {
     "line number": [
      752
     ]
    },
    "mne.dipole._dipole_gof": {
     "line number": [
      756
     ]
    },
    "numpy.newaxis": {
     "line number": [
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._make_guesses": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "SourceSpaces": {
     "line number": [
      745
     ]
    },
    "_coord_frame_name": {
     "line number": [
      733
     ]
    },
    "_make_volume_source_space": {
     "line number": [
      738
     ]
    },
    "dict": {
     "line number": [
      742
     ]
    },
    "numpy.arange": {
     "line number": [
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_bdip": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      661
     ]
    },
    "dict": {
     "line number": [
      646
     ]
    },
    "len": {
     "line number": [
      651
     ]
    },
    "list": {
     "line number": [
      641,
      642,
      643,
      644,
      645,
      646,
      647,
      665
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      676
     ]
    },
    "mne.dipole._BDIP_ERROR_KEYS": {
     "line number": [
      664,
      669
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      650,
      653,
      656,
      657,
      660,
      661,
      668,
      672,
      673
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      658
     ]
    },
    "open": {
     "line number": [
      639
     ]
    },
    "zip": {
     "line number": [
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_fixed": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "_read_evoked": {
     "line number": [
      339
     ]
    },
    "mne.dipole.DipoleFixed": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_text": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      522,
      555
     ]
    },
    "RuntimeError": {
     "line number": [
      545
     ]
    },
    "dict": {
     "line number": [
      583
     ]
    },
    "enumerate": {
     "line number": [
      579
     ]
    },
    "float": {
     "line number": [
      520
     ]
    },
    "len": {
     "line number": [
      544,
      548,
      548,
      548,
      552,
      554,
      556,
      558,
      568
     ]
    },
    "list": {
     "line number": [
      506
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      587
     ]
    },
    "mne.dipole.re": {
     "line number": [
      516,
      527,
      529,
      531
     ]
    },
    "numpy.array": {
     "line number": [
      520
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      520
     ]
    },
    "numpy.diff": {
     "line number": [
      561
     ]
    },
    "numpy.newaxis": {
     "line number": [
      575
     ]
    },
    "open": {
     "line number": [
      507
     ]
    },
    "set": {
     "line number": [
      543,
      543,
      547,
      547,
      549,
      550
     ]
    },
    "sorted": {
     "line number": [
      543,
      549
     ]
    },
    "warn": {
     "line number": [
      553,
      563
     ]
    },
    "zip": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._sphere_constraint": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      1004
     ]
    },
    "numpy.sum": {
     "line number": [
      1004
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._surface_constraint": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": {
    "_compute_nearest": {
     "line number": [
      990
     ]
    },
    "_points_outside_surface": {
     "line number": [
      992
     ]
    },
    "numpy.newaxis": {
     "line number": [
      990,
      992
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._write_dipole_bdip": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      689
     ]
    },
    "enumerate": {
     "line number": [
      681
     ]
    },
    "int": {
     "line number": [
      689
     ]
    },
    "len": {
     "line number": [
      689
     ]
    },
    "mne.dipole._BDIP_ERROR_KEYS": {
     "line number": [
      692
     ]
    },
    "numpy.array": {
     "line number": [
      683,
      688,
      690,
      695,
      698,
      700
     ]
    },
    "numpy.zeros": {
     "line number": [
      682,
      684,
      691,
      696,
      701,
      702
     ]
    },
    "open": {
     "line number": [
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole._write_dipole_text": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      600
     ]
    },
    "getattr": {
     "line number": [
      610
     ]
    },
    "numpy.concatenate": {
     "line number": [
      621
     ]
    },
    "numpy.newaxis": {
     "line number": [
      594,
      595,
      596,
      614,
      620
     ]
    },
    "numpy.savetxt": {
     "line number": [
      627
     ]
    },
    "open": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.dipole.fit_dipole": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1220,
      1296
     ]
    },
    "ValueError": {
     "line number": [
      1167,
      1170,
      1172,
      1176,
      1236,
      1243,
      1247,
      1340
     ]
    },
    "_bem_find_surface": {
     "line number": [
      1198
     ]
    },
    "_fit_sphere": {
     "line number": [
      1200
     ]
    },
    "_get_trans": {
     "line number": [
      1193
     ]
    },
    "_needs_eeg_average_ref_proj": {
     "line number": [
      1166
     ]
    },
    "_pl": {
     "line number": [
      1360
     ]
    },
    "_prep_eeg_channels": {
     "line number": [
      1291
     ]
    },
    "_prep_field_computation": {
     "line number": [
      1348
     ]
    },
    "_prep_meg_channels": {
     "line number": [
      1288
     ]
    },
    "_print_coord_trans": {
     "line number": [
      1277,
      1278
     ]
    },
    "_setup_bem": {
     "line number": [
      1195
     ]
    },
    "apply_trans": {
     "line number": [
      1202
     ]
    },
    "compute_whitener": {
     "line number": [
      1313
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1374
     ]
    },
    "dict": {
     "line number": [
      1227,
      1318,
      1344,
      1356,
      1377,
      1381
     ]
    },
    "float": {
     "line number": [
      1234,
      1241
     ]
    },
    "isinstance": {
     "line number": [
      1188,
      1272
     ]
    },
    "len": {
     "line number": [
      1186,
      1210,
      1219,
      1279,
      1295,
      1355,
      1370,
      1402
     ]
    },
    "list": {
     "line number": [
      1387
     ]
    },
    "make_projector": {
     "line number": [
      1365
     ]
    },
    "max": {
     "line number": [
      1259
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      1398
     ]
    },
    "mne.dipole.DipoleFixed": {
     "line number": [
      1395
     ]
    },
    "mne.dipole._dipole_forwards": {
     "line number": [
      1350
     ]
    },
    "mne.dipole._fit_dipole": {
     "line number": [
      1366
     ]
    },
    "mne.dipole._fit_dipole_fixed": {
     "line number": [
      1366
     ]
    },
    "mne.dipole._fit_dipoles": {
     "line number": [
      1367
     ]
    },
    "mne.dipole._make_guesses": {
     "line number": [
      1322
     ]
    },
    "mne.dipole._sphere_constraint": {
     "line number": [
      1336
     ]
    },
    "mne.dipole._surface_constraint": {
     "line number": [
      1333
     ]
    },
    "numpy.array": {
     "line number": [
      1234,
      1241,
      1318,
      1373
     ]
    },
    "numpy.array_split": {
     "line number": [
      1354
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1375
     ]
    },
    "numpy.dot": {
     "line number": [
      1215,
      1401
     ]
    },
    "numpy.full": {
     "line number": [
      1381
     ]
    },
    "numpy.hstack": {
     "line number": [
      1216
     ]
    },
    "numpy.isclose": {
     "line number": [
      1246
     ]
    },
    "numpy.isfinite": {
     "line number": [
      1175
     ]
    },
    "numpy.min": {
     "line number": [
      1222
     ]
    },
    "numpy.nan": {
     "line number": [
      1381
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1202,
      1318
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1222,
      1245
     ]
    },
    "numpy.sum": {
     "line number": [
      1222,
      1245
     ]
    },
    "numpy.zeros": {
     "line number": [
      1375
     ]
    },
    "pick_types": {
     "line number": [
      1186,
      1218,
      1300
     ]
    },
    "read_cov": {
     "line number": [
      1274
     ]
    },
    "repr": {
     "line number": [
      1191
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      1215
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      1353
     ]
    },
    "str": {
     "line number": [
      1188,
      1272
     ]
    },
    "transform_surface_to": {
     "line number": [
      1325,
      1330
     ]
    },
    "tuple": {
     "line number": [
      1239,
      1250
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.dipole.get_phantom_dipoles": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      1431
     ]
    },
    "enumerate": {
     "line number": [
      1458
     ]
    },
    "list": {
     "line number": [
      1457
     ]
    },
    "numpy.arange": {
     "line number": [
      1462
     ]
    },
    "numpy.array": {
     "line number": [
      1435,
      1436,
      1446,
      1447,
      1472
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1437,
      1438,
      1441,
      1449,
      1450,
      1451
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1464
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      1462
     ]
    },
    "numpy.vstack": {
     "line number": [
      1453
     ]
    },
    "numpy.where": {
     "line number": [
      1460
     ]
    },
    "numpy.zeros": {
     "line number": [
      1448,
      1459
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.dipole.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.dipole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.dipole.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.dipole.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.dipole.read_dipole": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      490
     ]
    },
    "mne.dipole._read_dipole_bdip": {
     "line number": [
      494
     ]
    },
    "mne.dipole._read_dipole_fixed": {
     "line number": [
      492
     ]
    },
    "mne.dipole._read_dipole_text": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked": {
  "data": {
   "symbols_in_volume": {
    "mne.evoked._aspect_dict": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.evoked.Evoked": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "mne.evoked.Evoked.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      122
     ]
    },
    "bool": {
     "line number": [
      122
     ]
    },
    "mne.evoked._read_evoked": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.__neg__": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "mne.evoked.Evoked.__repr__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "sizeof_fmt": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.animate_topomap": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "_topomap_animation": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.apply_baseline": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "rescale": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.as_type": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "_as_meg_type_inst": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.ch_names": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "property": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.copy": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.crop": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "_time_mask": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.data": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "mne.evoked.Evoked.decimate": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "int": {
     "line number": [
      279
     ]
    },
    "mne.evoked._check_decim": {
     "line number": [
      278
     ]
    },
    "round": {
     "line number": [
      279
     ]
    },
    "slice": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.detrend": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      488
     ]
    },
    "detrend": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.get_peak": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      572
     ]
    },
    "ValueError": {
     "line number": [
      568,
      578,
      580
     ]
    },
    "_check_option": {
     "line number": [
      565
     ]
    },
    "_merge_ch_data": {
     "line number": [
      613
     ]
    },
    "_pair_grad_sensors": {
     "line number": [
      600
     ]
    },
    "len": {
     "line number": [
      571
     ]
    },
    "mne.evoked._get_peak": {
     "line number": [
      616
     ]
    },
    "pick_types": {
     "line number": [
      602
     ]
    },
    "str": {
     "line number": [
      565
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.kind": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      140
     ]
    },
    "list": {
     "line number": [
      140
     ]
    },
    "mne.evoked._aspect_dict": {
     "line number": [
      140,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      288
     ]
    },
    "plot_evoked": {
     "line number": [
      294,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_field": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      358
     ]
    },
    "plot_evoked_field": {
     "line number": [
      361,
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_image": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      302
     ]
    },
    "plot_evoked_image": {
     "line number": [
      309,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_joint": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      373
     ]
    },
    "plot_evoked_joint": {
     "line number": [
      377,
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_topo": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      317
     ]
    },
    "plot_evoked_topo": {
     "line number": [
      328,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_topomap": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      335
     ]
    },
    "plot_evoked_topomap": {
     "line number": [
      346,
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_white": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "copy_function_doc_to_method_doc": {
     "line number": [
      366
     ]
    },
    "plot_evoked_white": {
     "line number": [
      369,
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.save": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "mne.evoked.write_evokeds": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.tmax": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "property": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.tmin": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "property": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.Evoked.to_data_frame": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "_build_data_frame": {
     "line number": [
      673
     ]
    },
    "_check_pandas_index_arguments": {
     "line number": [
      658
     ]
    },
    "_check_pandas_installed": {
     "line number": [
      654
     ]
    },
    "_check_time_format": {
     "line number": [
      659
     ]
    },
    "_convert_times": {
     "line number": [
      670
     ]
    },
    "_picks_to_idx": {
     "line number": [
      661
     ]
    },
    "_scale_dataframe_data": {
     "line number": [
      667
     ]
    },
    "list": {
     "line number": [
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.EvokedArray": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": {
    "mne.evoked.Evoked": {
     "line number": [
      703
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.evoked.EvokedArray.__init__": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      745,
      749,
      769
     ]
    },
    "_validate_type": {
     "line number": [
      767
     ]
    },
    "int": {
     "line number": [
      755
     ]
    },
    "len": {
     "line number": [
      748,
      750
     ]
    },
    "mne.evoked._aspect_dict": {
     "line number": [
      768,
      771
     ]
    },
    "numpy.arange": {
     "line number": [
      757
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      742
     ]
    },
    "numpy.complex128": {
     "line number": [
      741
     ]
    },
    "numpy.float64": {
     "line number": [
      741,
      758
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      741
     ]
    },
    "numpy.shape": {
     "line number": [
      748,
      751,
      756
     ]
    },
    "round": {
     "line number": [
      755
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._aspect_dict": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.evoked._aspect_rev": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.evoked._check_decim": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      681,
      697
     ]
    },
    "float": {
     "line number": [
      683
     ]
    },
    "int": {
     "line number": [
      680,
      682,
      695
     ]
    },
    "warn": {
     "line number": [
      686,
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._check_evokeds_ch_names_times": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      832,
      841
     ]
    },
    "enumerate": {
     "line number": [
      829
     ]
    },
    "numpy.abs": {
     "line number": [
      840
     ]
    },
    "numpy.max": {
     "line number": [
      840
     ]
    },
    "set": {
     "line number": [
      831,
      831
     ]
    },
    "warn": {
     "line number": [
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._get_aspect": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "_check_maxshield": {
     "line number": [
      809
     ]
    },
    "dir_tree_find": {
     "line number": [
      807,
      810
     ]
    },
    "len": {
     "line number": [
      808,
      812
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._get_entries": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      796
     ]
    },
    "int": {
     "line number": [
      791
     ]
    },
    "len": {
     "line number": [
      794,
      794,
      794
     ]
    },
    "list": {
     "line number": [
      776,
      777
     ]
    },
    "mne.evoked._aspect_rev": {
     "line number": [
      798
     ]
    },
    "mne.evoked._get_aspect": {
     "line number": [
      785
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      792,
      793
     ]
    },
    "range": {
     "line number": [
      779,
      786
     ]
    },
    "read_tag": {
     "line number": [
      783,
      790
     ]
    },
    "zip": {
     "line number": [
      799
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._get_evoked_node": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "dir_tree_find": {
     "line number": [
      822
     ]
    },
    "fiff_open": {
     "line number": [
      819
     ]
    },
    "read_meas_info": {
     "line number": [
      821
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._get_peak": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1284,
      1287,
      1290,
      1299,
      1303
     ]
    },
    "_check_option": {
     "line number": [
      1276
     ]
    },
    "bool": {
     "line number": [
      1293
     ]
    },
    "maxfun": {
     "line number": [
      1310
     ]
    },
    "numpy.abs": {
     "line number": [
      1307
     ]
    },
    "numpy.any": {
     "line number": [
      1298,
      1302
     ]
    },
    "numpy.argmax": {
     "line number": [
      1296
     ]
    },
    "numpy.argmin": {
     "line number": [
      1305
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1307
     ]
    },
    "numpy.ones_like": {
     "line number": [
      1293
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      1310
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._read_evoked": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1127
     ]
    },
    "TypeError": {
     "line number": [
      1016
     ]
    },
    "ValueError": {
     "line number": [
      980,
      990,
      994,
      999,
      1008,
      1023,
      1069,
      1073,
      1103,
      1130
     ]
    },
    "dir_tree_find": {
     "line number": [
      988,
      992
     ]
    },
    "fiff_open": {
     "line number": [
      982
     ]
    },
    "float": {
     "line number": [
      1052,
      1058
     ]
    },
    "int": {
     "line number": [
      1043,
      1046,
      1049,
      1061,
      1093,
      1096
     ]
    },
    "isinstance": {
     "line number": [
      997
     ]
    },
    "len": {
     "line number": [
      989,
      993,
      1007,
      1013,
      1022,
      1072,
      1101,
      1137
     ]
    },
    "mne.evoked._aspect_dict": {
     "line number": [
      998,
      1005
     ]
    },
    "mne.evoked._get_aspect": {
     "line number": [
      1028
     ]
    },
    "mne.evoked._get_entries": {
     "line number": [
      1002,
      1014
     ]
    },
    "numpy.arange": {
     "line number": [
      1122,
      1125
     ]
    },
    "numpy.array": {
     "line number": [
      1142
     ]
    },
    "numpy.complex128": {
     "line number": [
      1119
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1115
     ]
    },
    "numpy.float64": {
     "line number": [
      1117
     ]
    },
    "numpy.in1d": {
     "line number": [
      1004,
      1005
     ]
    },
    "numpy.isrealobj": {
     "line number": [
      1116
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1145
     ]
    },
    "numpy.where": {
     "line number": [
      1006
     ]
    },
    "range": {
     "line number": [
      1035,
      1085,
      1144
     ]
    },
    "read_meas_info": {
     "line number": [
      985
     ]
    },
    "read_tag": {
     "line number": [
      1039,
      1042,
      1045,
      1048,
      1051,
      1054,
      1057,
      1060,
      1089,
      1092,
      1095,
      1098
     ]
    },
    "str": {
     "line number": [
      997
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked._write_evokeds": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": {
    "_compare_epochs_infos": {
     "line number": [
      1195
     ]
    },
    "check_fname": {
     "line number": [
      1173
     ]
    },
    "end_block": {
     "line number": [
      1237,
      1238,
      1240,
      1241
     ]
    },
    "end_file": {
     "line number": [
      1242
     ]
    },
    "enumerate": {
     "line number": [
      1193
     ]
    },
    "int": {
     "line number": [
      1217
     ]
    },
    "isinstance": {
     "line number": [
      1176
     ]
    },
    "len": {
     "line number": [
      1199,
      1204
     ]
    },
    "list": {
     "line number": [
      1176
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      1231
     ]
    },
    "numpy.zeros": {
     "line number": [
      1226
     ]
    },
    "range": {
     "line number": [
      1227
     ]
    },
    "round": {
     "line number": [
      1217
     ]
    },
    "start_block": {
     "line number": [
      1183,
      1192,
      1196,
      1213
     ]
    },
    "start_file": {
     "line number": [
      1181
     ]
    },
    "warn": {
     "line number": [
      1219
     ]
    },
    "write_float": {
     "line number": [
      1203
     ]
    },
    "write_function": {
     "line number": [
      1236
     ]
    },
    "write_id": {
     "line number": [
      1184,
      1186
     ]
    },
    "write_int": {
     "line number": [
      1204,
      1205,
      1206,
      1215,
      1223
     ]
    },
    "write_meas_info": {
     "line number": [
      1189
     ]
    },
    "write_string": {
     "line number": [
      1200
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.combine_evoked": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      890
     ]
    },
    "_check_option": {
     "line number": [
      881
     ]
    },
    "float": {
     "line number": [
      879,
      887
     ]
    },
    "isinstance": {
     "line number": [
      880
     ]
    },
    "len": {
     "line number": [
      885,
      889
     ]
    },
    "list": {
     "line number": [
      912
     ]
    },
    "mne.evoked._check_evokeds_ch_names_times": {
     "line number": [
      908
     ]
    },
    "numpy.array": {
     "line number": [
      879,
      887
     ]
    },
    "numpy.ones_like": {
     "line number": [
      885
     ]
    },
    "numpy.sum": {
     "line number": [
      902
     ]
    },
    "set": {
     "line number": [
      912
     ]
    },
    "str": {
     "line number": [
      880
     ]
    },
    "sum": {
     "line number": [
      914
     ]
    },
    "zip": {
     "line number": [
      914,
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.evoked.read_evokeds": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "check_fname": {
     "line number": [
      958
     ]
    },
    "isinstance": {
     "line number": [
      965
     ]
    },
    "len": {
     "line number": [
      964
     ]
    },
    "list": {
     "line number": [
      965
     ]
    },
    "mne.evoked.Evoked": {
     "line number": [
      969
     ]
    },
    "mne.evoked._get_evoked_node": {
     "line number": [
      963
     ]
    },
    "range": {
     "line number": [
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.evoked.write_evokeds": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": {
    "mne.evoked._write_evokeds": {
     "line number": [
      1166
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals": {
  "data": {},
  "type": "module"
 },
 "mne.externals.FieldTrip": {
  "data": {},
  "type": "module"
 },
 "mne.externals.FieldTrip.CHUNK_ASCII_KEYVAL": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CHANNEL_FLAGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CTF_RES4": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_NEUROMAG_FIF": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_NIFTI1": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_RESOLUTIONS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_SIEMENS_AP": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_UNSPECIFIED": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Chunk": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Chunk.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Client.__init__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.connect": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "mne.externals.FieldTrip.socket": {
     "line number": [
      221,
      221,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.disconnect": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getData": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      383,
      387,
      392
     ]
    },
    "int": {
     "line number": [
      372,
      373
     ]
    },
    "len": {
     "line number": [
      391
     ]
    },
    "mne.externals.FieldTrip.GET_DAT": {
     "line number": [
      370,
      374
     ]
    },
    "mne.externals.FieldTrip.GET_ERR": {
     "line number": [
      378
     ]
    },
    "mne.externals.FieldTrip.GET_OK": {
     "line number": [
      381
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      370,
      374
     ]
    },
    "mne.externals.FieldTrip.numpy": {
     "line number": [
      395
     ]
    },
    "mne.externals.FieldTrip.numpyType": {
     "line number": [
      391,
      395
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      370,
      374,
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getEvents": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      422
     ]
    },
    "int": {
     "line number": [
      411,
      412
     ]
    },
    "mne.externals.FieldTrip.Event": {
     "line number": [
      427
     ]
    },
    "mne.externals.FieldTrip.GET_ERR": {
     "line number": [
      417
     ]
    },
    "mne.externals.FieldTrip.GET_EVT": {
     "line number": [
      409,
      413
     ]
    },
    "mne.externals.FieldTrip.GET_OK": {
     "line number": [
      420
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      409,
      413
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      409,
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getHeader": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      289,
      293
     ]
    },
    "len": {
     "line number": [
      319
     ]
    },
    "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES": {
     "line number": [
      317,
      318
     ]
    },
    "mne.externals.FieldTrip.GET_ERR": {
     "line number": [
      284
     ]
    },
    "mne.externals.FieldTrip.GET_HDR": {
     "line number": [
      281
     ]
    },
    "mne.externals.FieldTrip.GET_OK": {
     "line number": [
      287
     ]
    },
    "mne.externals.FieldTrip.Header": {
     "line number": [
      299
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      297,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.poll": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      494
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      488
     ]
    },
    "mne.externals.FieldTrip.WAIT_DAT": {
     "line number": [
      488
     ]
    },
    "mne.externals.FieldTrip.WAIT_OK": {
     "line number": [
      493
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      488,
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putData": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      484
     ]
    },
    "ValueError": {
     "line number": [
      468
     ]
    },
    "isinstance": {
     "line number": [
      467
     ]
    },
    "len": {
     "line number": [
      467,
      476
     ]
    },
    "mne.externals.FieldTrip.PUT_DAT": {
     "line number": [
      478
     ]
    },
    "mne.externals.FieldTrip.PUT_OK": {
     "line number": [
      483
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      478
     ]
    },
    "mne.externals.FieldTrip.dataType": {
     "line number": [
      474,
      479
     ]
    },
    "mne.externals.FieldTrip.numpy": {
     "line number": [
      467
     ]
    },
    "mne.externals.FieldTrip.serialize": {
     "line number": [
      474
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      478,
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putEvents": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      457
     ]
    },
    "isinstance": {
     "line number": [
      442,
      448
     ]
    },
    "mne.externals.FieldTrip.Event": {
     "line number": [
      442,
      448
     ]
    },
    "mne.externals.FieldTrip.PUT_EVT": {
     "line number": [
      453
     ]
    },
    "mne.externals.FieldTrip.PUT_OK": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putHeader": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      359
     ]
    },
    "ValueError": {
     "line number": [
      335
     ]
    },
    "len": {
     "line number": [
      339,
      348,
      350,
      355
     ]
    },
    "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES": {
     "line number": [
      338,
      344
     ]
    },
    "mne.externals.FieldTrip.PUT_HDR": {
     "line number": [
      354
     ]
    },
    "mne.externals.FieldTrip.PUT_OK": {
     "line number": [
      358
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      354
     ]
    },
    "mne.externals.FieldTrip.dataType": {
     "line number": [
      353
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      338,
      347,
      352,
      354
     ]
    },
    "range": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.receiveResponse": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      265
     ]
    },
    "len": {
     "line number": [
      258,
      259,
      269,
      270
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      263
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.sendRaw": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      236
     ]
    },
    "len": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.sendRequest": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "len": {
     "line number": [
      248
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      245,
      248
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      245,
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.wait": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      506
     ]
    },
    "int": {
     "line number": [
      500,
      500,
      500
     ]
    },
    "mne.externals.FieldTrip.VERSION": {
     "line number": [
      499
     ]
    },
    "mne.externals.FieldTrip.WAIT_DAT": {
     "line number": [
      499
     ]
    },
    "mne.externals.FieldTrip.WAIT_OK": {
     "line number": [
      505
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      499,
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.DATATYPE_CHAR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_FLOAT32": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_FLOAT64": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT16": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT32": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT64": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT8": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT16": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT32": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT64": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT8": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UNKNOWN": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Event": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Event.__init__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.__str__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "str": {
     "line number": [
      143,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.deserialize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      163
     ]
    },
    "len": {
     "line number": [
      148
     ]
    },
    "mne.externals.FieldTrip.numpy": {
     "line number": [
      172,
      178
     ]
    },
    "mne.externals.FieldTrip.numpyType": {
     "line number": [
      173,
      179
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      153
     ]
    },
    "mne.externals.FieldTrip.wordSize": {
     "line number": [
      159,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.serialize": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "int": {
     "line number": [
      203,
      203,
      204
     ]
    },
    "len": {
     "line number": [
      191,
      197
     ]
    },
    "mne.externals.FieldTrip.DATATYPE_UNKNOWN": {
     "line number": [
      189,
      195
     ]
    },
    "mne.externals.FieldTrip.serialize": {
     "line number": [
      188,
      194
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      202
     ]
    },
    "mne.externals.FieldTrip.wordSize": {
     "line number": [
      192,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.FLUSH_DAT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_ERR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_EVT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_HDR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_OK": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_DAT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_ERR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_EVT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_HDR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_OK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Header": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Header.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Header.__str__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "mne.externals.FieldTrip.numpyType": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.PUT_DAT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_ERR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_EVT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_HDR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_OK": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.VERSION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_DAT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_ERR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_OK": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.dataType": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.numpyType": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.serialize": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "float": {
     "line number": [
      94
     ]
    },
    "int": {
     "line number": [
      91
     ]
    },
    "isinstance": {
     "line number": [
      71,
      74,
      91,
      94
     ]
    },
    "len": {
     "line number": [
      76
     ]
    },
    "mne.externals.FieldTrip.DATATYPE_FLOAT64": {
     "line number": [
      95
     ]
    },
    "mne.externals.FieldTrip.DATATYPE_INT32": {
     "line number": [
      92
     ]
    },
    "mne.externals.FieldTrip.DATATYPE_UNKNOWN": {
     "line number": [
      77,
      81,
      97
     ]
    },
    "mne.externals.FieldTrip.dataType": {
     "line number": [
      76,
      79
     ]
    },
    "mne.externals.FieldTrip.numpy": {
     "line number": [
      74
     ]
    },
    "mne.externals.FieldTrip.struct": {
     "line number": [
      92,
      95
     ]
    },
    "str": {
     "line number": [
      71,
      85,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.wordSize": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.externals.decorator": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      64
     ]
    },
    "ImportError": {
     "line number": [
      70,
      299
     ]
    },
    "contextlib.GeneratorContextManager.__init__": {
     "line number": [
      311
     ]
    },
    "inspect.getfullargspec": {
     "line number": [
      311
     ]
    },
    "len": {
     "line number": [
      312
     ]
    },
    "mne.externals.decorator.ContextManager": {
     "line number": [
      316,
      322,
      324
     ]
    },
    "mne.externals.decorator.__init__": {
     "line number": [
      316,
      322
     ]
    },
    "mne.externals.decorator.collections": {
     "line number": [
      51
     ]
    },
    "mne.externals.decorator.decorator": {
     "line number": [
      324
     ]
    },
    "mne.externals.decorator.init": {
     "line number": [
      312,
      313,
      317
     ]
    },
    "mne.externals.decorator.inspect": {
     "line number": [
      63
     ]
    },
    "mne.externals.decorator.n_args": {
     "line number": [
      313,
      317,
      319
     ]
    },
    "mne.externals.decorator.re": {
     "line number": [
      76
     ]
    },
    "mne.externals.decorator.sys": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.decorator.ContextManager": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "contextlib.GeneratorContextManager": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.decorator.ContextManager.__call__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      308
     ]
    },
    "mne.externals.decorator.FunctionMaker": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.DEF": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mne.externals.decorator.FullArgSpec": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.externals.decorator.FunctionMaker": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "mne.externals.decorator.itertools": {
     "line number": [
      88
     ]
    },
    "object": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.decorator.FunctionMaker.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      143
     ]
    },
    "enumerate": {
     "line number": [
      109
     ]
    },
    "getattr": {
     "line number": [
      105,
      108
     ]
    },
    "hasattr": {
     "line number": [
      141,
      142
     ]
    },
    "inspect.getfullargspec": {
     "line number": [
      104
     ]
    },
    "list": {
     "line number": [
      111,
      112
     ]
    },
    "mne.externals.decorator.inspect": {
     "line number": [
      103
     ]
    },
    "setattr": {
     "line number": [
      108,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.create": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      196
     ]
    },
    "cls": {
     "line number": [
      213
     ]
    },
    "isinstance": {
     "line number": [
      205
     ]
    },
    "mne.externals.decorator.iscoroutinefunction": {
     "line number": [
      216
     ]
    },
    "str": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.make": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      186
     ]
    },
    "NameError": {
     "line number": [
      174
     ]
    },
    "SyntaxError": {
     "line number": [
      168
     ]
    },
    "compile": {
     "line number": [
      184
     ]
    },
    "exec": {
     "line number": [
      185
     ]
    },
    "mne.externals.decorator.DEF": {
     "line number": [
      166
     ]
    },
    "mne.externals.decorator.sys": {
     "line number": [
      187,
      188
     ]
    },
    "next": {
     "line number": [
      182
     ]
    },
    "print": {
     "line number": [
      187,
      188
     ]
    },
    "set": {
     "line number": [
      170
     ]
    },
    "vars": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.update": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      155
     ]
    },
    "getattr": {
     "line number": [
      148,
      149,
      152,
      159
     ]
    },
    "mne.externals.decorator.sys": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator._GeneratorContextManager": {
  "data": {
   "shadows": "contextlib.GeneratorContextManager"
  },
  "type": "import"
 },
 "mne.externals.decorator.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "contextlib.GeneratorContextManager.__init__": {
     "line number": [
      321
     ]
    },
    "g": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.__version__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.decorator._contextmanager": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "mne.externals.decorator.append": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      340
     ]
    },
    "issubclass": {
     "line number": [
      341,
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mne.externals.decorator.contextmanager": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "mne.externals.decorator._contextmanager": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.decorate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      230
     ]
    },
    "enumerate": {
     "line number": [
      232
     ]
    },
    "hasattr": {
     "line number": [
      253
     ]
    },
    "inspect.isgeneratorfunction": {
     "line number": [
      241,
      244
     ]
    },
    "mne.externals.decorator.FunctionMaker": {
     "line number": [
      246,
      250
     ]
    },
    "mne.externals.decorator.iscoroutinefunction": {
     "line number": [
      242
     ]
    },
    "mne.externals.decorator.sys": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.decorator": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      284
     ]
    },
    "len": {
     "line number": [
      276
     ]
    },
    "mne.externals.decorator.FunctionMaker": {
     "line number": [
      285
     ]
    },
    "mne.externals.decorator.decorate": {
     "line number": [
      262,
      284
     ]
    },
    "mne.externals.decorator.inspect": {
     "line number": [
      265,
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.check": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      363
     ]
    },
    "len": {
     "line number": [
      362,
      362,
      364,
      364
     ]
    },
    "mne.externals.decorator.operator": {
     "line number": [
      360
     ]
    },
    "wrong": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      372
     ]
    },
    "ancestors": {
     "line number": [
      450
     ]
    },
    "dict": {
     "line number": [
      449
     ]
    },
    "func": {
     "line number": [
      448,
      449,
      451
     ]
    },
    "inspect.getfullargspec": {
     "line number": [
      370
     ]
    },
    "mne.externals.decorator.FunctionMaker": {
     "line number": [
      447
     ]
    },
    "set": {
     "line number": [
      370,
      371
     ]
    },
    "vancestors": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec._dispatch": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      433
     ]
    },
    "ancestors": {
     "line number": [
      437
     ]
    },
    "f": {
     "line number": [
      436,
      440,
      441,
      442
     ]
    },
    "func": {
     "line number": [
      445
     ]
    },
    "mne.externals.decorator.itertools": {
     "line number": [
      437
     ]
    },
    "next": {
     "line number": [
      438
     ]
    },
    "tuple": {
     "line number": [
      430
     ]
    },
    "type": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.ancestors": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      397
     ]
    },
    "check": {
     "line number": [
      392
     ]
    },
    "len": {
     "line number": [
      395
     ]
    },
    "type": {
     "line number": [
      401
     ]
    },
    "vancestors": {
     "line number": [
      394
     ]
    },
    "zip": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.dispatch_info": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "ancestors": {
     "line number": [
      425
     ]
    },
    "check": {
     "line number": [
      423
     ]
    },
    "mne.externals.decorator.itertools": {
     "line number": [
      425
     ]
    },
    "tuple": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.register": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "check": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.register.dec": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "check": {
     "line number": [
      414
     ]
    },
    "inspect.getfullargspec": {
     "line number": [
      414
     ]
    },
    "mne.externals.decorator.operator": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.vancestors": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "check": {
     "line number": [
      380
     ]
    },
    "issubclass": {
     "line number": [
      384
     ]
    },
    "len": {
     "line number": [
      381
     ]
    },
    "mne.externals.decorator.append": {
     "line number": [
      385
     ]
    },
    "range": {
     "line number": [
      381
     ]
    },
    "set": {
     "line number": [
      386
     ]
    },
    "zip": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.get_init": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mne.externals.decorator.getfullargspec": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "mne.externals.decorator.FullArgSpec": {
     "line number": [
      57
     ]
    },
    "mne.externals.decorator.inspect": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.decorator.init": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "mne.externals.decorator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.externals.decorator.iscoroutinefunction": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "mne.externals.decorator.isgeneratorfunction": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "mne.externals.decorator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.externals.decorator.n_args": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "mne.externals.decorator.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mne.externals.decorator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.externals.decorator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.decorator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.doccer": {
  "data": {},
  "type": "module"
 },
 "mne.externals.doccer.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.externals.doccer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.doccer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.doccer.docformat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      68
     ]
    },
    "KeyError": {
     "line number": [
      73
     ]
    },
    "RuntimeError": {
     "line number": [
      74
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      73
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "mne.externals.doccer.indentcount_lines": {
     "line number": [
      57
     ]
    },
    "str": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.doccer.filldoc": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "mne.externals.doccer.unindent_dict": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.doccer.filldoc.decorate": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "mne.externals.doccer.docformat": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.doccer.indentcount_lines": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "len": {
     "line number": [
      97,
      97
     ]
    },
    "min": {
     "line number": [
      97
     ]
    },
    "mne.externals.doccer.sys": {
     "line number": [
      93,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.doccer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.externals.doccer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.doccer.unindent_dict": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "mne.externals.doccer.unindent_string": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.doccer.unindent_string": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "mne.externals.doccer.indentcount_lines": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io": {
  "data": {},
  "type": "module"
 },
 "mne.externals.h5io.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      618
     ]
    },
    "ImportError": {
     "line number": [
      16
     ]
    },
    "datetime.datetime.fromisoformat": {
     "line number": [
      617
     ]
    },
    "mne.externals.h5io._h5io.PY3": {
     "line number": [
      21,
      22
     ]
    },
    "mne.externals.h5io._h5io.sys": {
     "line number": [
      20
     ]
    },
    "scipy.sparse": {
     "line number": [
      17
     ]
    },
    "str": {
     "line number": [
      21,
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.h5io._h5io.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.HDFStore": {
  "data": {
   "shadows": "pandas.HDFStore"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.PY3": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io._TempDir": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "str": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.h5io._h5io._TempDir.__del__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._TempDir.__init__": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._TempDir.__new__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "mne.externals.h5io._h5io.tempfile": {
     "line number": [
      457
     ]
    },
    "str.__new__": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._array_index": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._check_h5py": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      35,
      36
     ]
    },
    "mne.externals.h5io._h5io.h5py": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._check_keys_in_dict": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      544,
      552
     ]
    },
    "list": {
     "line number": [
      539
     ]
    },
    "mne.externals.h5io._h5io.special_chars": {
     "line number": [
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_pandas_dataset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "mne.externals.h5io._h5io._check_h5py": {
     "line number": [
      56
     ]
    },
    "mne.externals.h5io._h5io.h5py": {
     "line number": [
      56,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_titled_dataset": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_titled_group": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._index_sum": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._json_compatible": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "all": {
     "line number": [
      530,
      533
     ]
    },
    "bool": {
     "line number": [
      527
     ]
    },
    "dict": {
     "line number": [
      531
     ]
    },
    "float": {
     "line number": [
      527
     ]
    },
    "int": {
     "line number": [
      527
     ]
    },
    "isinstance": {
     "line number": [
      527,
      529,
      531
     ]
    },
    "list": {
     "line number": [
      529
     ]
    },
    "mne.externals.h5io._h5io._check_keys_in_dict": {
     "line number": [
      532
     ]
    },
    "mne.externals.h5io._h5io.string_types": {
     "line number": [
      527
     ]
    },
    "type": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._list_file_contents": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      469
     ]
    },
    "cast": {
     "line number": [
      491,
      492
     ]
    },
    "len": {
     "line number": [
      474,
      474,
      478,
      493,
      496
     ]
    },
    "mne.externals.h5io._h5io.tab_str": {
     "line number": [
      499
     ]
    },
    "mne.externals.h5io._h5io.text_type": {
     "line number": [
      491
     ]
    },
    "numpy.array": {
     "line number": [
      492
     ]
    },
    "numpy.max": {
     "line number": [
      474
     ]
    },
    "print": {
     "line number": [
      502
     ]
    },
    "str": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._merge_array": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._parse_hh_mm_ss_ff": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      630,
      641,
      647,
      653
     ]
    },
    "int": {
     "line number": [
      632,
      655
     ]
    },
    "len": {
     "line number": [
      624
     ]
    },
    "range": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._parse_isoformat_date": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      692,
      697
     ]
    },
    "int": {
     "line number": [
      690,
      694,
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._parse_isoformat_time": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      707,
      725
     ]
    },
    "all": {
     "line number": [
      728
     ]
    },
    "datetime.timedelta": {
     "line number": [
      733
     ]
    },
    "datetime.timezone": {
     "line number": [
      736
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      729
     ]
    },
    "len": {
     "line number": [
      705,
      724
     ]
    },
    "mne.externals.h5io._h5io._parse_hh_mm_ss_ff": {
     "line number": [
      713,
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._shape_list": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._sort_keys": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "list": {
     "line number": [
      361
     ]
    },
    "numpy.argsort": {
     "line number": [
      362
     ]
    },
    "str": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._triage_read": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      328
     ]
    },
    "RuntimeError": {
     "line number": [
      302,
      310
     ]
    },
    "TypeError": {
     "line number": [
      352
     ]
    },
    "ValueError": {
     "line number": [
      275
     ]
    },
    "bytes": {
     "line number": [
      278
     ]
    },
    "cast": {
     "line number": [
      334,
      340,
      341,
      344,
      345
     ]
    },
    "dict": {
     "line number": [
      282
     ]
    },
    "float": {
     "line number": [
      333
     ]
    },
    "getattr": {
     "line number": [
      340
     ]
    },
    "int": {
     "line number": [
      333
     ]
    },
    "isinstance": {
     "line number": [
      278,
      280
     ]
    },
    "len": {
     "line number": [
      297
     ]
    },
    "list": {
     "line number": [
      289
     ]
    },
    "mne.externals.h5io._h5io._check_h5py": {
     "line number": [
      276
     ]
    },
    "mne.externals.h5io._h5io.fromisoformat": {
     "line number": [
      337
     ]
    },
    "mne.externals.h5io._h5io.h5py": {
     "line number": [
      276,
      280
     ]
    },
    "mne.externals.h5io._h5io.json": {
     "line number": [
      348
     ]
    },
    "mne.externals.h5io._h5io.multiarray_load": {
     "line number": [
      326
     ]
    },
    "mne.externals.h5io._h5io.special_chars": {
     "line number": [
      285
     ]
    },
    "mne.externals.h5io._h5io.text_type": {
     "line number": [
      336,
      344
     ]
    },
    "numpy": {
     "line number": [
      340
     ]
    },
    "numpy.array": {
     "line number": [
      331,
      334,
      336,
      341,
      345,
      347
     ]
    },
    "pandas.HDFStore": {
     "line number": [
      321
     ]
    },
    "pandas.read_hdf": {
     "line number": [
      322
     ]
    },
    "scipy.sparse": {
     "line number": [
      301,
      309
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      303
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      311
     ]
    },
    "str": {
     "line number": [
      344,
      347
     ]
    },
    "tuple": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._triage_write": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      219
     ]
    },
    "TypeError": {
     "line number": [
      148,
      232
     ]
    },
    "ValueError": {
     "line number": [
      131,
      138
     ]
    },
    "datetime.datetime": {
     "line number": [
      167
     ]
    },
    "dict": {
     "line number": [
      140,
      144
     ]
    },
    "enumerate": {
     "line number": [
      155
     ]
    },
    "float": {
     "line number": [
      161
     ]
    },
    "int": {
     "line number": [
      161,
      162
     ]
    },
    "isinstance": {
     "line number": [
      140,
      144,
      147,
      152,
      153,
      159,
      161,
      162,
      167,
      171,
      174,
      175,
      182,
      191,
      202,
      222,
      223
     ]
    },
    "len": {
     "line number": [
      184
     ]
    },
    "list": {
     "line number": [
      140,
      152,
      153
     ]
    },
    "mne.externals.h5io._h5io._create_titled_dataset": {
     "line number": [
      143,
      160,
      166,
      170,
      173,
      181,
      185,
      189,
      190
     ]
    },
    "mne.externals.h5io._h5io._create_titled_group": {
     "line number": [
      145,
      154,
      188,
      192,
      203
     ]
    },
    "mne.externals.h5io._h5io._json_compatible": {
     "line number": [
      141
     ]
    },
    "mne.externals.h5io._h5io.json": {
     "line number": [
      142
     ]
    },
    "mne.externals.h5io._h5io.multiarray_dump": {
     "line number": [
      187
     ]
    },
    "mne.externals.h5io._h5io.special_chars": {
     "line number": [
      135
     ]
    },
    "mne.externals.h5io._h5io.string_types": {
     "line number": [
      147,
      174
     ]
    },
    "mne.externals.h5io._h5io.text_type": {
     "line number": [
      175
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      166,
      173
     ]
    },
    "numpy.bool_": {
     "line number": [
      171
     ]
    },
    "numpy.dtype": {
     "line number": [
      183
     ]
    },
    "numpy.floating": {
     "line number": [
      171
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      142,
      169,
      176,
      179
     ]
    },
    "numpy.integer": {
     "line number": [
      171
     ]
    },
    "numpy.ndarray": {
     "line number": [
      182
     ]
    },
    "numpy.uint8": {
     "line number": [
      142,
      169,
      176,
      179
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      222,
      223
     ]
    },
    "pandas.Series": {
     "line number": [
      222
     ]
    },
    "scipy.sparse": {
     "line number": [
      191,
      202
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      191
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      202
     ]
    },
    "set": {
     "line number": [
      184
     ]
    },
    "tuple": {
     "line number": [
      152
     ]
    },
    "type": {
     "line number": [
      159,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._validate_object_array": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      562
     ]
    },
    "len": {
     "line number": [
      561
     ]
    },
    "numpy.dtype": {
     "line number": [
      560
     ]
    },
    "set": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._validate_sub_shapes": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      571
     ]
    },
    "all": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.fromisoformat": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      664
     ]
    },
    "ValueError": {
     "line number": [
      672,
      673,
      679,
      680
     ]
    },
    "datetime.datetime": {
     "line number": [
      685
     ]
    },
    "isinstance": {
     "line number": [
      663
     ]
    },
    "mne.externals.h5io._h5io._parse_isoformat_date": {
     "line number": [
      671
     ]
    },
    "mne.externals.h5io._h5io._parse_isoformat_time": {
     "line number": [
      678
     ]
    },
    "str": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.list_file_contents": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      522
     ]
    },
    "isinstance": {
     "line number": [
      517,
      521
     ]
    },
    "mne.externals.h5io._h5io._check_h5py": {
     "line number": [
      515
     ]
    },
    "mne.externals.h5io._h5io._list_file_contents": {
     "line number": [
      519,
      523
     ]
    },
    "mne.externals.h5io._h5io.h5py": {
     "line number": [
      515,
      518,
      521
     ]
    },
    "str": {
     "line number": [
      517
     ]
    },
    "type": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.multiarray_dump": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "mne.externals.h5io._h5io._array_index": {
     "line number": [
      599
     ]
    },
    "mne.externals.h5io._h5io._index_sum": {
     "line number": [
      599
     ]
    },
    "mne.externals.h5io._h5io._merge_array": {
     "line number": [
      600
     ]
    },
    "mne.externals.h5io._h5io._shape_list": {
     "line number": [
      597
     ]
    },
    "mne.externals.h5io._h5io._validate_object_array": {
     "line number": [
      596
     ]
    },
    "mne.externals.h5io._h5io._validate_sub_shapes": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.multiarray_load": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.object_diff": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      388
     ]
    },
    "RuntimeError": {
     "line number": [
      441
     ]
    },
    "bytes": {
     "line number": [
      411
     ]
    },
    "dict": {
     "line number": [
      394
     ]
    },
    "float": {
     "line number": [
      411
     ]
    },
    "int": {
     "line number": [
      411
     ]
    },
    "isinstance": {
     "line number": [
      394,
      405,
      411,
      416,
      430
     ]
    },
    "len": {
     "line number": [
      398,
      406,
      406,
      407,
      407
     ]
    },
    "list": {
     "line number": [
      405
     ]
    },
    "mne.externals.h5io._h5io._sort_keys": {
     "line number": [
      395,
      396
     ]
    },
    "mne.externals.h5io._h5io.string_types": {
     "line number": [
      411
     ]
    },
    "numpy.array_equal": {
     "line number": [
      417
     ]
    },
    "numpy.ndarray": {
     "line number": [
      416
     ]
    },
    "numpy.sum": {
     "line number": [
      436
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      389,
      430
     ]
    },
    "pandas.Series": {
     "line number": [
      389,
      430
     ]
    },
    "repr": {
     "line number": [
      404
     ]
    },
    "scipy.sparse": {
     "line number": [
      419
     ]
    },
    "scipy.sparse.isspmatrix": {
     "line number": [
      419
     ]
    },
    "set": {
     "line number": [
      397,
      397
     ]
    },
    "tuple": {
     "line number": [
      405
     ]
    },
    "type": {
     "line number": [
      389,
      392,
      392,
      393,
      393,
      441
     ]
    },
    "zip": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.read_hdf": {
  "data": {
   "shadows": "pandas.read_hdf"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.read_hdf5": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      260
     ]
    },
    "ValueError": {
     "line number": [
      262,
      265,
      268
     ]
    },
    "isinstance": {
     "line number": [
      261,
      266
     ]
    },
    "mne.externals.h5io._h5io._check_h5py": {
     "line number": [
      258
     ]
    },
    "mne.externals.h5io._h5io._triage_read": {
     "line number": [
      269
     ]
    },
    "mne.externals.h5io._h5io.h5py": {
     "line number": [
      258,
      263,
      266
     ]
    },
    "mne.externals.h5io._h5io.string_types": {
     "line number": [
      261
     ]
    },
    "os.path.isfile": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.sparse": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.special_chars": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.string_types": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.tab_str": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.text_type": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.write_hdf5": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      102
     ]
    },
    "ValueError": {
     "line number": [
      99,
      105
     ]
    },
    "dict": {
     "line number": [
      106,
      108
     ]
    },
    "isinstance": {
     "line number": [
      97,
      104
     ]
    },
    "list": {
     "line number": [
      120
     ]
    },
    "mne.externals.h5io._h5io._check_h5py": {
     "line number": [
      94
     ]
    },
    "mne.externals.h5io._h5io._create_pandas_dataset": {
     "line number": [
      123
     ]
    },
    "mne.externals.h5io._h5io._triage_write": {
     "line number": [
      113
     ]
    },
    "mne.externals.h5io._h5io.h5py": {
     "line number": [
      94,
      109
     ]
    },
    "mne.externals.h5io._h5io.string_types": {
     "line number": [
      97,
      104
     ]
    },
    "os.path.isfile": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      113
     ]
    },
    "type": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader": {
  "data": {},
  "type": "module"
 },
 "mne.externals.pymatreader.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.pymatreader": {
  "data": {},
  "type": "module"
 },
 "mne.externals.pymatreader.pymatreader.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.pymatreader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.pymatreader.read_mat": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      76
     ]
    },
    "NotImplementedError": {
     "line number": [
      87
     ]
    },
    "_check_for_scipy_mat_struct": {
     "line number": [
      86
     ]
    },
    "_hdf5todict": {
     "line number": [
      91
     ]
    },
    "_import_h5py": {
     "line number": [
      89
     ]
    },
    "mne.externals.pymatreader.pymatreader.os": {
     "line number": [
      75
     ]
    },
    "open": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.pymatreader.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils": {
  "data": {
   "symbols_in_volume": {
    "mne.externals.pymatreader.utils.sys": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.pymatreader.utils._assign_types": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "float": {
     "line number": [
      159
     ]
    },
    "mne.externals.pymatreader.utils._handle_hdf5_strings": {
     "line number": [
      155
     ]
    },
    "mne.externals.pymatreader.utils._handle_ndarray": {
     "line number": [
      157
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      154,
      156,
      158
     ]
    },
    "type": {
     "line number": [
      156,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._check_for_scipy_mat_struct": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      208
     ]
    },
    "isinstance": {
     "line number": [
      208,
      212,
      217
     ]
    },
    "mne.externals.pymatreader.utils._handle_scipy_ndarray": {
     "line number": [
      218
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      217
     ]
    },
    "warnings.warn": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._convert_string_hdf5": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      144
     ]
    },
    "mne.externals.pymatreader.utils.chr": {
     "line number": [
      140,
      143
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_hdf5_dataset": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      122
     ]
    },
    "len": {
     "line number": [
      126
     ]
    },
    "mne.externals.pymatreader.utils._assign_types": {
     "line number": [
      131,
      135
     ]
    },
    "mne.externals.pymatreader.utils._hdf5todict": {
     "line number": [
      133
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      110,
      122,
      123
     ]
    },
    "mne.externals.pymatreader.utils.standard_matlab_classes": {
     "line number": [
      117
     ]
    },
    "warnings.warn": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_hdf5_group": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      98
     ]
    },
    "mne.externals.pymatreader.utils._hdf5todict": {
     "line number": [
      101
     ]
    },
    "set": {
     "line number": [
      91,
      93,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_hdf5_strings": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      187
     ]
    },
    "mne.externals.pymatreader.utils._convert_string_hdf5": {
     "line number": [
      182,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_ndarray": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      168,
      172
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      167,
      168,
      170,
      170,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_scipy_ndarray": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      225,
      230,
      234
     ]
    },
    "mne.externals.pymatreader.utils._check_for_scipy_mat_struct": {
     "line number": [
      228,
      232
     ]
    },
    "mne.externals.pymatreader.utils._todict_from_np_struct": {
     "line number": [
      231
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      224,
      234,
      235
     ]
    },
    "tuple": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._hdf5todict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      87
     ]
    },
    "isinstance": {
     "line number": [
      78,
      82,
      84
     ]
    },
    "list": {
     "line number": [
      84
     ]
    },
    "mne.externals.pymatreader.utils._handle_hdf5_dataset": {
     "line number": [
      83
     ]
    },
    "mne.externals.pymatreader.utils._handle_hdf5_group": {
     "line number": [
      79
     ]
    },
    "mne.externals.pymatreader.utils._import_h5py": {
     "line number": [
      76
     ]
    },
    "mne.externals.pymatreader.utils.h5py": {
     "line number": [
      76,
      78,
      82
     ]
    },
    "mne.externals.pymatreader.utils.types": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._import_h5py": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      48
     ]
    },
    "ImportError": {
     "line number": [
      49
     ]
    },
    "mne.externals.pymatreader.utils.h5py": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._todict_from_np_struct": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      254
     ]
    },
    "dict": {
     "line number": [
      241
     ]
    },
    "len": {
     "line number": [
      245
     ]
    },
    "list": {
     "line number": [
      246
     ]
    },
    "mne.externals.pymatreader.utils._check_for_scipy_mat_struct": {
     "line number": [
      250,
      256
     ]
    },
    "mne.externals.pymatreader.utils.numpy": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils.chr": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.utils.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.standard_matlab_classes": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tempita": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      51
     ]
    },
    "__name__": {
     "line number": [
      1308
     ]
    },
    "mne.externals.tempita._Empty": {
     "line number": [
      643,
      644
     ]
    },
    "mne.externals.tempita.fill_command": {
     "line number": [
      1309
     ]
    },
    "mne.externals.tempita.lex": {
     "line number": [
      692
     ]
    },
    "mne.externals.tempita.parse": {
     "line number": [
      833
     ]
    },
    "mne.externals.tempita.re": {
     "line number": [
      46,
      47,
      47,
      734,
      736,
      737
     ]
    },
    "mne.externals.tempita.trim_lex": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tempita.Empty": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "mne.externals.tempita.HTMLTemplate": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      493
     ]
    },
    "mne.externals.tempita.Template": {
     "line number": [
      490,
      492
     ]
    },
    "mne.externals.tempita.attr": {
     "line number": [
      495
     ]
    },
    "mne.externals.tempita.html": {
     "line number": [
      494
     ]
    },
    "mne.externals.tempita.html_quote": {
     "line number": [
      497
     ]
    },
    "mne.externals.tempita.url": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.HTMLTemplate._repr": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      500
     ]
    },
    "mne.externals.tempita.Template": {
     "line number": [
      505
     ]
    },
    "mne.externals.tempita.html_quote": {
     "line number": [
      507
     ]
    },
    "urllib.parse.quote": {
     "line number": [
      502,
      504,
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.externals.tempita.Template": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      158
     ]
    },
    "object": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.Template.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      122
     ]
    },
    "all": {
     "line number": [
      110
     ]
    },
    "globals": {
     "line number": [
      125,
      127,
      128,
      131,
      132
     ]
    },
    "is_unicode": {
     "line number": [
      118
     ]
    },
    "isinstance": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      110
     ]
    },
    "mne.externals.tempita.parse": {
     "line number": [
      138
     ]
    },
    "mne.externals.tempita.sys": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.__repr__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "hex": {
     "line number": [
      163
     ]
    },
    "id": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._add_line_info": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._eval": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      305,
      306
     ]
    },
    "coerce_text": {
     "line number": [
      315
     ]
    },
    "eval": {
     "line number": [
      304
     ]
    },
    "getattr": {
     "line number": [
      312
     ]
    },
    "mne.externals.tempita.sys": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._exec": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "exec": {
     "line number": [
      322
     ]
    },
    "mne.externals.tempita.sys": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_code": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "func": {
     "line number": [
      245
     ]
    },
    "mne.externals.tempita.TemplateDef": {
     "line number": [
      260
     ]
    },
    "mne.externals.tempita._TemplateBreak": {
     "line number": [
      232
     ]
    },
    "mne.externals.tempita._TemplateContinue": {
     "line number": [
      230
     ]
    },
    "vars": {
     "line number": [
      234,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_codes": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_for": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      274
     ]
    },
    "len": {
     "line number": [
      270,
      273,
      273,
      276,
      276
     ]
    },
    "mne.externals.tempita._TemplateBreak": {
     "line number": [
      283
     ]
    },
    "mne.externals.tempita._TemplateContinue": {
     "line number": [
      281
     ]
    },
    "vars": {
     "line number": [
      270,
      271,
      273,
      276,
      277
     ]
    },
    "zip": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_if": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_inherit": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "mne.externals.tempita.TemplateError": {
     "line number": [
      204
     ]
    },
    "mne.externals.tempita.TemplateObject": {
     "line number": [
      208
     ]
    },
    "setattr": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._repr": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "UnicodeDecodeError": {
     "line number": [
      343,
      359,
      364,
      365
     ]
    },
    "UnicodeEncodeError": {
     "line number": [
      373
     ]
    },
    "bytes": {
     "line number": [
      344,
      357
     ]
    },
    "coerce_text": {
     "line number": [
      347
     ]
    },
    "is_unicode": {
     "line number": [
      339,
      341,
      348,
      371
     ]
    },
    "isinstance": {
     "line number": [
      346,
      357
     ]
    },
    "mne.externals.tempita.sys": {
     "line number": [
      351
     ]
    },
    "str": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.from_filename": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      155
     ]
    },
    "mne.externals.tempita.get_file_template": {
     "line number": [
      149
     ]
    },
    "open": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.substitute": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      168,
      171,
      174
     ]
    },
    "hasattr": {
     "line number": [
      173
     ]
    },
    "len": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "object": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateDef.__call__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "self._body": {
     "line number": [
      545
     ]
    },
    "self._bound_self": {
     "line number": [
      541,
      542
     ]
    },
    "self._ns.copy": {
     "line number": [
      539
     ]
    },
    "self._parse_signature": {
     "line number": [
      538
     ]
    },
    "self._template._interpret_codes": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__get__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "self": {
     "line number": [
      550
     ]
    },
    "self.__class__": {
     "line number": [
      551
     ]
    },
    "self._body": {
     "line number": [
      553
     ]
    },
    "self._func_name": {
     "line number": [
      552
     ]
    },
    "self._func_signature": {
     "line number": [
      552
     ]
    },
    "self._ns": {
     "line number": [
      553
     ]
    },
    "self._pos": {
     "line number": [
      553
     ]
    },
    "self._template": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__init__": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__repr__": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__str__": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "self": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef._parse_signature": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      561,
      579,
      588
     ]
    },
    "list": {
     "line number": [
      567,
      568
     ]
    },
    "repr": {
     "line number": [
      581
     ]
    },
    "self._func_signature": {
     "line number": [
      557
     ]
    },
    "self._ns": {
     "line number": [
      585
     ]
    },
    "self._pos": {
     "line number": [
      585
     ]
    },
    "self._template._eval": {
     "line number": [
      584
     ]
    },
    "tuple": {
     "line number": [
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateError": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateError.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Exception.__init__": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateError.__str__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObject": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "object": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateObject.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "mne.externals.tempita.TemplateObjectGetter": {
     "line number": [
      599
     ]
    },
    "self": {
     "line number": [
      599
     ]
    },
    "self.__name": {
     "line number": [
      598
     ]
    },
    "self.get": {
     "line number": [
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObject.__repr__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "self.__class__.__name__": {
     "line number": [
      602
     ]
    },
    "self.__name": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "object": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateObjectGetter.__getattr__": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      611
     ]
    },
    "mne.externals.tempita.attr": {
     "line number": [
      611
     ]
    },
    "self.__template_obj": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter.__init__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "self.__template_obj": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter.__repr__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "self.__class__.__name__": {
     "line number": [
      615
     ]
    },
    "self.__template_obj": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": {
    "mne.externals.tempita.sys": {
     "line number": [
      640
     ]
    },
    "object": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita._Empty.__bool__": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__call__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "self": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__iter__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__repr__": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__str__": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__unicode__": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": {
    "str": {
     "line number": [
      630
     ]
    },
    "unicode": {
     "line number": [
      632
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._TemplateBreak": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita._TemplateContinue": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.tempita._fill_command_usage": {
  "data": {
   "lineno": 1236
  },
  "type": "constant"
 },
 "mne.externals.tempita._looper": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tempita._looper.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.tempita._looper.loop_pos": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "mne.externals.tempita._looper.sys": {
     "line number": [
      98
     ]
    },
    "next": {
     "line number": [
      99
     ]
    },
    "object": {
     "line number": [
      69
     ]
    },
    "property": {
     "line number": [
      81,
      85,
      89,
      96,
      105,
      109,
      113,
      117,
      121,
      125
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.loop_pos.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.__next__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.__repr__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos._compare_group": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      157,
      157,
      159,
      159
     ]
    },
    "getter": {
     "line number": [
      161,
      161,
      163,
      163
     ]
    },
    "hasattr": {
     "line number": [
      160
     ]
    },
    "isinstance": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.even": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.first": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.first_group": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.index": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.item": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.last": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "len": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.last_group": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.length": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "len": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.number": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.odd": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.previous": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "object": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.looper.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "mne.externals.tempita._looper.looper_iter": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "mne.externals.tempita._looper.sys": {
     "line number": [
      65
     ]
    },
    "next": {
     "line number": [
      66
     ]
    },
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.looper_iter.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "list": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter.__iter__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter.__next__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      60
     ]
    },
    "len": {
     "line number": [
      59
     ]
    },
    "mne.externals.tempita._looper.loop_pos": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tempita.attr": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "list": {
     "line number": [
      478
     ]
    },
    "mne.externals.tempita.html": {
     "line number": [
      487
     ]
    },
    "mne.externals.tempita.html_quote": {
     "line number": [
      486,
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.bunch.__getattr__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      411
     ]
    },
    "KeyError": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__getitem__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      417
     ]
    },
    "dict.__getitem__": {
     "line number": [
      416,
      418,
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__init__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__repr__": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__setattr__": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "mne.externals.tempita.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "mne.externals.tempita.fill_command": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": {
    "TemplateClass": {
     "line number": [
      1299
     ]
    },
    "coerce_text": {
     "line number": [
      1253
     ]
    },
    "eval": {
     "line number": [
      1286
     ]
    },
    "len": {
     "line number": [
      1271
     ]
    },
    "mne.externals.tempita.HTMLTemplate": {
     "line number": [
      1296
     ]
    },
    "mne.externals.tempita.Template": {
     "line number": [
      1298
     ]
    },
    "mne.externals.tempita._fill_command_usage": {
     "line number": [
      1254
     ]
    },
    "mne.externals.tempita.optparse": {
     "line number": [
      1252
     ]
    },
    "mne.externals.tempita.os": {
     "line number": [
      1278
     ]
    },
    "mne.externals.tempita.pkg_resources": {
     "line number": [
      1251
     ]
    },
    "mne.externals.tempita.sys": {
     "line number": [
      1250,
      1273,
      1282,
      1289,
      1306
     ]
    },
    "open": {
     "line number": [
      1292,
      1302
     ]
    },
    "print": {
     "line number": [
      1272,
      1281
     ]
    },
    "vars": {
     "line number": [
      1276,
      1287,
      1300
     ]
    },
    "vars.update": {
     "line number": [
      1278
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.find_position": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "mne.externals.tempita.get_file_template": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "mne.externals.tempita.os": {
     "line number": [
      83,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.html": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "object": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tempita.html.__html__": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__init__": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__repr__": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__str__": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "mne.externals.tempita.html_escape": {
  "data": {
   "shadows": "cgi.escape"
  },
  "type": "import"
 },
 "mne.externals.tempita.html_quote": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      458
     ]
    },
    "cgi.escape": {
     "line number": [
      459,
      463
     ]
    },
    "coerce_text": {
     "line number": [
      457
     ]
    },
    "hasattr": {
     "line number": [
      452
     ]
    },
    "is_unicode": {
     "line number": [
      465
     ]
    },
    "isinstance": {
     "line number": [
      456,
      458
     ]
    },
    "mne.externals.tempita.sys": {
     "line number": [
      458,
      464
     ]
    },
    "mne.externals.tempita.warnings": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.in_re": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.externals.tempita.isolate_expression": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1231
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.lead_whitespace_re": {
  "data": {
   "lineno": 737
  },
  "type": "constant"
 },
 "mne.externals.tempita.lex": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "mne.externals.tempita.Template": {
     "line number": [
      653,
      654
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      665,
      669,
      683
     ]
    },
    "mne.externals.tempita.find_position": {
     "line number": [
      663
     ]
    },
    "mne.externals.tempita.re": {
     "line number": [
      659,
      659,
      660
     ]
    },
    "mne.externals.tempita.trim_lex": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "mne.externals.tempita.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tempita.parse": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": {
    "mne.externals.tempita.Template": {
     "line number": [
      824,
      825
     ]
    },
    "mne.externals.tempita.lex": {
     "line number": [
      826
     ]
    },
    "mne.externals.tempita.parse_expr": {
     "line number": [
      829
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_cond": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1008
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      1005
     ]
    },
    "mne.externals.tempita.parse_one_cond": {
     "line number": [
      1010
     ]
    },
    "tuple": {
     "line number": [
      1008,
      1009
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_def": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1128
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      1115,
      1125
     ]
    },
    "mne.externals.tempita.parse_expr": {
     "line number": [
      1130
     ]
    },
    "mne.externals.tempita.parse_signature": {
     "line number": [
      1120
     ]
    },
    "tuple": {
     "line number": [
      1128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_default": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1080
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      1081,
      1086,
      1090
     ]
    },
    "mne.externals.tempita.var_re": {
     "line number": [
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_expr": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      947
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      961,
      967,
      975,
      979,
      983
     ]
    },
    "mne.externals.tempita.parse_cond": {
     "line number": [
      972
     ]
    },
    "mne.externals.tempita.parse_def": {
     "line number": [
      993
     ]
    },
    "mne.externals.tempita.parse_default": {
     "line number": [
      989
     ]
    },
    "mne.externals.tempita.parse_for": {
     "line number": [
      987
     ]
    },
    "mne.externals.tempita.parse_inherit": {
     "line number": [
      991
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_for": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1069
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      1052,
      1057,
      1066
     ]
    },
    "mne.externals.tempita.in_re": {
     "line number": [
      1050
     ]
    },
    "mne.externals.tempita.parse_expr": {
     "line number": [
      1071
     ]
    },
    "tuple": {
     "line number": [
      1060,
      1069
     ]
    },
    "vars": {
     "line number": [
      1055,
      1056,
      1059,
      1060,
      1070
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_inherit": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_one_cond": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1032
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      1029
     ]
    },
    "mne.externals.tempita.parse_expr": {
     "line number": [
      1037
     ]
    },
    "tuple": {
     "line number": [
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_signature": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": {
    "get_token": {
     "line number": [
      1153,
      1159,
      1164,
      1186
     ]
    },
    "io.StringIO": {
     "line number": [
      1135
     ]
    },
    "mne.externals.tempita.TemplateError": {
     "line number": [
      1161,
      1177,
      1191
     ]
    },
    "mne.externals.tempita.isolate_expression": {
     "line number": [
      1196
     ]
    },
    "mne.externals.tempita.tokenize": {
     "line number": [
      1135,
      1154,
      1156,
      1160,
      1165,
      1166,
      1173,
      1179,
      1190,
      1194,
      1195,
      1203,
      1207,
      1213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_signature.get_token": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      1145
     ]
    },
    "mne.externals.tempita.tokenize": {
     "line number": [
      1146
     ]
    },
    "next": {
     "line number": [
      1143
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.paste_script_template_renderer": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "mne.externals.tempita.Template": {
     "line number": [
      394
     ]
    },
    "vars": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "mne.externals.tempita.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tempita.single_statements": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "mne.externals.tempita.statement_re": {
  "data": {
   "lineno": 734
  },
  "type": "constant"
 },
 "mne.externals.tempita.sub": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "mne.externals.tempita.Template": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.sub_html": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "mne.externals.tempita.HTMLTemplate": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tempita.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "mne.externals.tempita.trail_whitespace_re": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "mne.externals.tempita.trim_lex": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      744,
      759,
      760
     ]
    },
    "len": {
     "line number": [
      742,
      754,
      769,
      780
     ]
    },
    "mne.externals.tempita.lead_whitespace_re": {
     "line number": [
      768,
      783
     ]
    },
    "mne.externals.tempita.single_statements": {
     "line number": [
      748
     ]
    },
    "mne.externals.tempita.statement_re": {
     "line number": [
      748
     ]
    },
    "mne.externals.tempita.trail_whitespace_re": {
     "line number": [
      762,
      774
     ]
    },
    "range": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.url": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "coerce_text": {
     "line number": [
      471
     ]
    },
    "is_unicode": {
     "line number": [
      472
     ]
    },
    "urllib.parse.quote": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tempita.url_quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "mne.externals.tempita.var_re": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.tempita.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.externals.tqdm": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      6,
      7
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      5,
      5
     ]
    },
    "tqdm.__version__": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.externals.tqdm.__version__": {
  "data": {
   "shadows": "tqdm.__version__"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.__main__": {
  "data": {
   "symbols_in_volume": {
    "main": {
     "line number": [
      2
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._main": {
  "data": {
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._main.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._monitor.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "threading.Thread": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm._monitor.TMonitor": {
     "line number": [
      39,
      40,
      43,
      44
     ]
    },
    "mne.externals.tqdm._tqdm._monitor.atexit": {
     "line number": [
      47
     ]
    },
    "threading.Event": {
     "line number": [
      35,
      46
     ]
    },
    "threading.Thread.__init__": {
     "line number": [
      33
     ]
    },
    "time.time": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.exit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "threading.current_thread": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.get_instances": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.report": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm._monitor.TqdmSynchronisationWarning": {
     "line number": [
      96
     ]
    },
    "warnings.warn": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.TqdmSynchronisationWarning": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm._monitor.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._monitor.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.current_thread": {
  "data": {
   "shadows": "threading.current_thread"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tnrange": {
  "data": {
   "shadows": "trange"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm": {
  "data": {
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._tqdm.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_gui": {
  "data": {
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._tqdm_gui.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_notebook": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_notebook.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.TqdmDeprecationWarning": {
  "data": {
   "shadows": "tqdm.TqdmDeprecationWarning"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.tqdm_pandas": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      36,
      40,
      45
     ]
    },
    "isinstance": {
     "line number": [
      36
     ]
    },
    "mne.externals.tqdm._tqdm._tqdm_pandas.sys": {
     "line number": [
      40,
      45
     ]
    },
    "tqdm.TqdmDeprecationWarning": {
     "line number": [
      38,
      43
     ]
    },
    "type": {
     "line number": [
      36,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._utils": {
  "data": {
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._version": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      57
     ]
    },
    "io.open": {
     "line number": [
      20,
      23,
      40,
      53
     ]
    },
    "map": {
     "line number": [
      11
     ]
    },
    "mne.externals.tqdm._tqdm._version.__version__": {
     "line number": [
      54,
      56
     ]
    },
    "mne.externals.tqdm._tqdm._version.branch_name": {
     "line number": [
      43,
      44
     ]
    },
    "mne.externals.tqdm._tqdm._version.commit_hash": {
     "line number": [
      42
     ]
    },
    "mne.externals.tqdm._tqdm._version.extra": {
     "line number": [
      26,
      28,
      44,
      51,
      55,
      56
     ]
    },
    "mne.externals.tqdm._tqdm._version.gitdir": {
     "line number": [
      17,
      20,
      23,
      31,
      35,
      53
     ]
    },
    "mne.externals.tqdm._tqdm._version.os": {
     "line number": [
      15,
      16,
      16,
      17,
      20,
      23,
      31,
      31,
      34,
      53
     ]
    },
    "mne.externals.tqdm._tqdm._version.ref_file": {
     "line number": [
      29,
      31,
      35
     ]
    },
    "mne.externals.tqdm._tqdm._version.ref_file_path": {
     "line number": [
      35,
      40
     ]
    },
    "mne.externals.tqdm._tqdm._version.scriptdir": {
     "line number": [
      16
     ]
    },
    "mne.externals.tqdm._tqdm._version.version_info": {
     "line number": [
      11
     ]
    },
    "str": {
     "line number": [
      11,
      58
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._version.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.__version__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.branch_name": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.commit_hash": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.extra": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.gitdir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.io_open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._version.ref_file": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.ref_file_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.scriptdir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.version_info": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.auto": {
  "data": {
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.auto.warnings": {
     "line number": [
      3,
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.auto.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.auto.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.autonotebook": {
  "data": {
   "symbols_in_volume": {
    "IPython.get_ipython": {
     "line number": [
      5
     ]
    },
    "ImportError": {
     "line number": [
      6,
      8
     ]
    },
    "mne.externals.tqdm._tqdm.autonotebook.os": {
     "line number": [
      7
     ]
    },
    "warnings.warn": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.autonotebook.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.autonotebook.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.autonotebook.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.autonotebook.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli": {
  "data": {
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.cli.re": {
     "line number": [
      90,
      92
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.cli.CLI_EXTRA_DOC": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.RE_OPTS": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.RE_SHLEX": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.Requirement": {
  "data": {
   "shadows": "pkg_resources.Requirement"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.UNSUPPORTED_OPTS": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.cast": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "TqdmTypeError": {
     "line number": [
      18,
      27,
      34
     ]
    },
    "__name__": {
     "line number": [
      10
     ]
    },
    "chr": {
     "line number": [
      32
     ]
    },
    "eval": {
     "line number": [
      29,
      32
     ]
    },
    "mne.externals.tqdm._tqdm.cli.logging": {
     "line number": [
      10
     ]
    },
    "ord": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.cli.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.main": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      190
     ]
    },
    "TqdmKeyError": {
     "line number": [
      191
     ]
    },
    "ValueError": {
     "line number": [
      130
     ]
    },
    "__name__": {
     "line number": [
      144
     ]
    },
    "any": {
     "line number": [
      172,
      175
     ]
    },
    "dict": {
     "line number": [
      148,
      180
     ]
    },
    "getattr": {
     "line number": [
      142,
      203,
      204
     ]
    },
    "len": {
     "line number": [
      133
     ]
    },
    "mne.externals.tqdm._tqdm.cli.CLI_EXTRA_DOC": {
     "line number": [
      146
     ]
    },
    "mne.externals.tqdm._tqdm.cli.RE_OPTS": {
     "line number": [
      148,
      157
     ]
    },
    "mne.externals.tqdm._tqdm.cli.RE_SHLEX": {
     "line number": [
      179
     ]
    },
    "mne.externals.tqdm._tqdm.cli.UNSUPPORTED_OPTS": {
     "line number": [
      151,
      160
     ]
    },
    "mne.externals.tqdm._tqdm.cli.cast": {
     "line number": [
      189
     ]
    },
    "mne.externals.tqdm._tqdm.cli.logging": {
     "line number": [
      141,
      142,
      144
     ]
    },
    "mne.externals.tqdm._tqdm.cli.posix_pipe": {
     "line number": [
      220,
      228
     ]
    },
    "mne.externals.tqdm._tqdm.cli.sys": {
     "line number": [
      119,
      127,
      173,
      174,
      176,
      177,
      195,
      196,
      203,
      203,
      204,
      204,
      213
     ]
    },
    "os.path.join": {
     "line number": [
      210
     ]
    },
    "pkg_resources.Requirement.parse": {
     "line number": [
      209
     ]
    },
    "pkg_resources.resource_filename": {
     "line number": [
      209
     ]
    },
    "shutil.copyfile": {
     "line number": [
      211
     ]
    },
    "sorted": {
     "line number": [
      154
     ]
    },
    "str": {
     "line number": [
      191,
      192
     ]
    },
    "tqdm": {
     "line number": [
      219,
      223,
      227
     ]
    },
    "zip": {
     "line number": [
      158,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.cli.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.posix_pipe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      79
     ]
    },
    "callback": {
     "line number": [
      60,
      72,
      84
     ]
    },
    "fp_write": {
     "line number": [
      59,
      71,
      83
     ]
    },
    "getattr": {
     "line number": [
      56,
      73
     ]
    },
    "len": {
     "line number": [
      60,
      83,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.cli.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.contrib": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.contrib.DummyTqdmFile": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "tqdm.utils.ObjectWrapper": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.contrib.DummyTqdmFile.write": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "len": {
     "line number": [
      9
     ]
    },
    "tqdm.tqdm.write": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.contrib.ObjectWrapper": {
  "data": {
   "shadows": "tqdm.utils.ObjectWrapper"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.contrib.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui": {
  "data": {
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.gui.tgrange": {
     "line number": [
      321
     ]
    },
    "mne.externals.tqdm._tqdm.gui.tqdm_gui": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.gui.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.std_tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.tgrange": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "_range": {
     "line number": [
      316
     ]
    },
    "mne.externals.tqdm._tqdm.gui.tqdm_gui": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "collections.deque": {
     "line number": [
      62,
      63,
      64
     ]
    },
    "len": {
     "line number": [
      56
     ]
    },
    "matplotlib": {
     "line number": [
      45
     ]
    },
    "matplotlib.pyplot": {
     "line number": [
      46
     ]
    },
    "matplotlib.pyplot.axhspan": {
     "line number": [
      74
     ]
    },
    "matplotlib.pyplot.ion": {
     "line number": [
      92
     ]
    },
    "matplotlib.pyplot.isinteractive": {
     "line number": [
      91
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      54
     ]
    },
    "matplotlib.pyplot.ticklabel_format": {
     "line number": [
      86
     ]
    },
    "max": {
     "line number": [
      53
     ]
    },
    "mne.externals.tqdm._tqdm.gui.tqdm_gui": {
     "line number": [
      38
     ]
    },
    "super": {
     "line number": [
      38
     ]
    },
    "warnings.warn": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.__iter__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "max": {
     "line number": [
      159
     ]
    },
    "time": {
     "line number": [
      126,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.close": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.display": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      286
     ]
    },
    "len": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.update": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "max": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.trange": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      29
     ]
    },
    "ImportError": {
     "line number": [
      31,
      40,
      51,
      57,
      62,
      68
     ]
    },
    "int": {
     "line number": [
      28
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.IPY": {
     "line number": [
      44
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.ipywidgets": {
     "line number": [
      28
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.tnrange": {
     "line number": [
      261
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
     "line number": [
      260
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.warnings": {
     "line number": [
      34,
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.notebook.HBox": {
  "data": {
   "shadows": "IPython.html.widgets.ContainerWidget"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.HTML": {
  "data": {
   "shadows": "IPython.html.widgets.HTML"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.IPY": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.IPYW": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.IProgress": {
  "data": {
   "shadows": "IPython.html.widgets.FloatProgressWidget"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.__all__": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.__author__": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.escape": {
  "data": {
   "shadows": "cgi.escape"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.ipywidgets": {
  "data": {
   "shadows": "IPython.html.widgets"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.std_tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.tnrange": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "_range": {
     "line number": [
      256
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.notebook.sys": {
     "line number": [
      187,
      188,
      189
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
     "line number": [
      195
     ]
    },
    "super": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.__iter__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
     "line number": [
      215
     ]
    },
    "super": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.close": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      235
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
     "line number": [
      233
     ]
    },
    "super": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.display": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      182
     ]
    },
    "cgi.escape": {
     "line number": [
      152,
      154
     ]
    },
    "map": {
     "line number": [
      152
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.IPYW": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.moveto": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.status_printer": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "IPython.display.display": {
     "line number": [
      129
     ]
    },
    "IPython.html.widgets.ContainerWidget": {
     "line number": [
      115
     ]
    },
    "IPython.html.widgets.FloatProgressWidget": {
     "line number": [
      96,
      98
     ]
    },
    "IPython.html.widgets.HTML": {
     "line number": [
      113
     ]
    },
    "ImportError": {
     "line number": [
      103
     ]
    },
    "NameError": {
     "line number": [
      101
     ]
    },
    "ValueError": {
     "line number": [
      123
     ]
    },
    "int": {
     "line number": [
      121
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.IPYW": {
     "line number": [
      110
     ]
    },
    "staticmethod": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.update": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      226
     ]
    },
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
     "line number": [
      225
     ]
    },
    "super": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.trange": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std": {
  "data": {
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.std.Bar": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "map": {
     "line number": [
      142
     ]
    },
    "object": {
     "line number": [
      128
     ]
    },
    "range": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.Bar.__format__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      159
     ]
    },
    "dict": {
     "line number": [
      158
     ]
    },
    "divmod": {
     "line number": [
      174
     ]
    },
    "int": {
     "line number": [
      164,
      175
     ]
    },
    "len": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.Bar.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "max": {
     "line number": [
      148
     ]
    },
    "min": {
     "line number": [
      148
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmWarning": {
     "line number": [
      147
     ]
    },
    "warnings.warn": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.DataFrameGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.DataFrameGroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.GroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.GroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.PanelGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.PanelGroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.RLock": {
  "data": {
   "shadows": "multiprocessing.RLock"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.SeriesGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.SeriesGroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "object": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.__enter__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.__exit__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "type": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.acquire": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.create_mp_lock": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      107
     ]
    },
    "OSError": {
     "line number": [
      109
     ]
    },
    "classmethod": {
     "line number": [
      101
     ]
    },
    "hasattr": {
     "line number": [
      103
     ]
    },
    "multiprocessing.RLock": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.create_th_lock": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      117
     ]
    },
    "classmethod": {
     "line number": [
      112
     ]
    },
    "hasattr": {
     "line number": [
      114
     ]
    },
    "threading.RLock": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.release": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      60
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmWarning": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmExperimentalWarning": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      55
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmWarning": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmKeyError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmMonitorWarning": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      65
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmWarning": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmTypeError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmWarning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmWarning.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "fp_write": {
     "line number": [
      49
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmWarning": {
     "line number": [
      52
     ]
    },
    "str": {
     "line number": [
      50
     ]
    },
    "super": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std._Rolling_and_Expanding": {
  "data": {
   "shadows": "pandas.core.window._Rolling_and_Expanding"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.std.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.std.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.th": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.tqdm": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__bool__": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1035
     ]
    },
    "bool": {
     "line number": [
      1036
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__del__": {
  "data": {
   "lineno": 1059
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__enter__": {
  "data": {
   "lineno": 1047
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__exit__": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1053
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmWarning": {
     "line number": [
      1057
     ]
    },
    "warnings.warn": {
     "line number": [
      1057
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__hash__": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": {
    "id": {
     "line number": [
      1070
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__init__": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      916
     ]
    },
    "SimpleTextIOWrapper": {
     "line number": [
      907
     ]
    },
    "TypeError": {
     "line number": [
      916,
      1006
     ]
    },
    "_dynamic_ncols": {
     "line number": [
      955
     ]
    },
    "_environ_cols_wrapper": {
     "line number": [
      949,
      953
     ]
    },
    "_is_ascii": {
     "line number": [
      972
     ]
    },
    "_supports_unicode": {
     "line number": [
      970
     ]
    },
    "_unicode": {
     "line number": [
      974
     ]
    },
    "ascii": {
     "line number": [
      969,
      970,
      972,
      972,
      990
     ]
    },
    "dynamic_ncols": {
     "line number": [
      951,
      997
     ]
    },
    "float": {
     "line number": [
      918
     ]
    },
    "getattr": {
     "line number": [
      908,
      941
     ]
    },
    "hasattr": {
     "line number": [
      910
     ]
    },
    "len": {
     "line number": [
      915
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning": {
     "line number": [
      938
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmKeyError": {
     "line number": [
      943
     ]
    },
    "mne.externals.tqdm._tqdm.std.sys": {
     "line number": [
      899,
      902,
      941,
      946,
      946
     ]
    },
    "str": {
     "line number": [
      943
     ]
    },
    "time.time": {
     "line number": [
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__iter__": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1100
     ]
    },
    "hasattr": {
     "line number": [
      1096
     ]
    },
    "max": {
     "line number": [
      1143
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning": {
     "line number": [
      1097
     ]
    },
    "mne.externals.tqdm._tqdm.std.sys": {
     "line number": [
      1100
     ]
    },
    "time.time": {
     "line number": [
      1094,
      1110,
      1112
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__len__": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1045
     ]
    },
    "hasattr": {
     "line number": [
      1043,
      1044
     ]
    },
    "len": {
     "line number": [
      1044
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__new__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      523
     ]
    },
    "TMonitor": {
     "line number": [
      522
     ]
    },
    "WeakSet": {
     "line number": [
      516
     ]
    },
    "hasattr": {
     "line number": [
      515
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmMonitorWarning": {
     "line number": [
      526
     ]
    },
    "object.__new__": {
     "line number": [
      511
     ]
    },
    "str": {
     "line number": [
      525
     ]
    },
    "warnings.warn": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__nonzero__": {
  "data": {
   "lineno": 1038
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__repr__": {
  "data": {
   "lineno": 1062
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm._comparable": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1067
     ]
    },
    "getattr": {
     "line number": [
      1067
     ]
    },
    "property": {
     "line number": [
      1065
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm._decr_instances": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      564
     ]
    },
    "KeyError": {
     "line number": [
      547
     ]
    },
    "abs": {
     "line number": [
      555
     ]
    },
    "classmethod": {
     "line number": [
      538
     ]
    },
    "hasattr": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm._get_free_pos": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      534
     ]
    },
    "classmethod": {
     "line number": [
      531
     ]
    },
    "hasattr": {
     "line number": [
      535
     ]
    },
    "len": {
     "line number": [
      536
     ]
    },
    "min": {
     "line number": [
      536
     ]
    },
    "range": {
     "line number": [
      536
     ]
    },
    "set": {
     "line number": [
      534,
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.clear": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1280,
      1283
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.close": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1255
     ]
    },
    "abs": {
     "line number": [
      1242
     ]
    },
    "fp_write": {
     "line number": [
      1254,
      1267,
      1271
     ]
    },
    "hasattr": {
     "line number": [
      1246
     ]
    },
    "str": {
     "line number": [
      1256
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.close.fp_write": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": {
    "_unicode": {
     "line number": [
      1251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.display": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1429
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.ema": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.external_write_mode": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "all": {
     "line number": [
      595
     ]
    },
    "classmethod": {
     "line number": [
      578
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      579
     ]
    },
    "getattr": {
     "line number": [
      591
     ]
    },
    "hasattr": {
     "line number": [
      595
     ]
    },
    "mne.externals.tqdm._tqdm.std.sys": {
     "line number": [
      585,
      596,
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_dict": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1403
     ]
    },
    "hasattr": {
     "line number": [
      1406
     ]
    },
    "property": {
     "line number": [
      1400
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_interval": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "divmod": {
     "line number": [
      242,
      243
     ]
    },
    "int": {
     "line number": [
      242
     ]
    },
    "staticmethod": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_meter": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "FormatReplace": {
     "line number": [
      469,
      493
     ]
    },
    "TypeError": {
     "line number": [
      414
     ]
    },
    "UnicodeEncodeError": {
     "line number": [
      472
     ]
    },
    "_is_ascii": {
     "line number": [
      485,
      485
     ]
    },
    "_text_width": {
     "line number": [
      482,
      499
     ]
    },
    "_unicode": {
     "line number": [
      473,
      486
     ]
    },
    "ascii": {
     "line number": [
      484,
      484
     ]
    },
    "dict": {
     "line number": [
      433
     ]
    },
    "format_sizeof": {
     "line number": [
      396,
      399,
      405,
      406
     ]
    },
    "max": {
     "line number": [
      482,
      499
     ]
    },
    "mne.externals.tqdm._tqdm.std.Bar": {
     "line number": [
      480,
      484,
      484,
      497,
      501
     ]
    },
    "mne.externals.tqdm._tqdm.std.tqdm": {
     "line number": [
      388,
      395,
      418
     ]
    },
    "staticmethod": {
     "line number": [
      310
     ]
    },
    "str": {
     "line number": [
      409,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_num": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "len": {
     "line number": [
      266,
      266
     ]
    },
    "staticmethod": {
     "line number": [
      249
     ]
    },
    "str": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_sizeof": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      218,
      219,
      220
     ]
    },
    "staticmethod": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.get_lock": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      611
     ]
    },
    "hasattr": {
     "line number": [
      614
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.moveto": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": {
    "_term_move_up": {
     "line number": [
      1397
     ]
    },
    "_unicode": {
     "line number": [
      1397
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      657,
      661,
      666,
      670,
      675,
      680,
      683
     ]
    },
    "classmethod": {
     "line number": [
      618
     ]
    },
    "inner_generator": {
     "line number": [
      761,
      762,
      763,
      764,
      766,
      767,
      768,
      771,
      773,
      775,
      776,
      777,
      780
     ]
    },
    "pandas.Panel": {
     "line number": [
      658,
      770
     ]
    },
    "pandas.Panel.progress_apply": {
     "line number": [
      771
     ]
    },
    "pandas.core.frame.DataFrame.progress_apply": {
     "line number": [
      766
     ]
    },
    "pandas.core.frame.DataFrame.progress_applymap": {
     "line number": [
      768
     ]
    },
    "pandas.core.groupby.DataFrameGroupBy.progress_apply": {
     "line number": [
      767
     ]
    },
    "pandas.core.groupby.GroupBy.progress_aggregate": {
     "line number": [
      776
     ]
    },
    "pandas.core.groupby.GroupBy.progress_apply": {
     "line number": [
      775
     ]
    },
    "pandas.core.groupby.GroupBy.progress_transform": {
     "line number": [
      777
     ]
    },
    "pandas.core.groupby.PanelGroupBy": {
     "line number": [
      684,
      772
     ]
    },
    "pandas.core.groupby.PanelGroupBy.progress_apply": {
     "line number": [
      773
     ]
    },
    "pandas.core.groupby.SeriesGroupBy.progress_apply": {
     "line number": [
      762
     ]
    },
    "pandas.core.groupby.SeriesGroupBy.progress_map": {
     "line number": [
      764
     ]
    },
    "pandas.core.series.Series.progress_apply": {
     "line number": [
      761
     ]
    },
    "pandas.core.series.Series.progress_map": {
     "line number": [
      763
     ]
    },
    "pandas.core.window._Rolling_and_Expanding": {
     "line number": [
      662,
      779
     ]
    },
    "pandas.core.window._Rolling_and_Expanding.progress_apply": {
     "line number": [
      780
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas.inner_generator": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas.inner_generator.inner": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      737
     ]
    },
    "getattr": {
     "line number": [
      702,
      733,
      751
     ]
    },
    "isinstance": {
     "line number": [
      706,
      709
     ]
    },
    "len": {
     "line number": [
      707,
      726
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning": {
     "line number": [
      728
     ]
    },
    "mne.externals.tqdm._tqdm.std.sys": {
     "line number": [
      733
     ]
    },
    "pandas.core.series.Series": {
     "line number": [
      706
     ]
    },
    "pandas.core.window._Rolling_and_Expanding": {
     "line number": [
      708,
      709
     ]
    },
    "tclass": {
     "line number": [
      724
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas.inner_generator.inner.wrapper": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": {
    "func": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.refresh": {
  "data": {
   "lineno": 1287
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.reset": {
  "data": {
   "lineno": 1320
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_description": {
  "data": {
   "lineno": 1336
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_description_str": {
  "data": {
   "lineno": 1350
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_lock": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_postfix": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": {
    "_OrderedDict": {
     "line number": [
      1369
     ]
    },
    "isinstance": {
     "line number": [
      1375,
      1378
     ]
    },
    "numbers.Number": {
     "line number": [
      1375
     ]
    },
    "sorted": {
     "line number": [
      1370
     ]
    },
    "str": {
     "line number": [
      1379
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_postfix_str": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": {
    "str": {
     "line number": [
      1391
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.status_printer": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      295
     ]
    },
    "staticmethod": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.status_printer.fp_write": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "_unicode": {
     "line number": [
      298
     ]
    },
    "fp_flush": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.status_printer.print_status": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "fp_write": {
     "line number": [
      305
     ]
    },
    "len": {
     "line number": [
      304
     ]
    },
    "max": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.unpause": {
  "data": {
   "lineno": 1314
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.update": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1203
     ]
    },
    "hasattr": {
     "line number": [
      1199
     ]
    },
    "max": {
     "line number": [
      1227
     ]
    },
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning": {
     "line number": [
      1200
     ]
    },
    "mne.externals.tqdm._tqdm.std.sys": {
     "line number": [
      1203
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.wrapattr": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": {
    "CallbackIOWrapper": {
     "line number": [
      1456
     ]
    },
    "bytes": {
     "line number": [
      1452
     ]
    },
    "classmethod": {
     "line number": [
      1437
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      1438
     ]
    },
    "tclass": {
     "line number": [
      1451
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.write": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      569
     ]
    },
    "mne.externals.tqdm._tqdm.std.sys": {
     "line number": [
      572
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.trange": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": {
    "_range": {
     "line number": [
      1464
     ]
    },
    "mne.externals.tqdm._tqdm.std.tqdm": {
     "line number": [
      1464
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.tgrange": {
  "data": {
   "shadows": "trange"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.tnrange": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.tqdm_gui": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.tqdm_notebook": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      36,
      37,
      47,
      57,
      60,
      340
     ]
    },
    "NameError": {
     "line number": [
      19,
      24,
      29,
      52
     ]
    },
    "TypeError": {
     "line number": [
      42
     ]
    },
    "any": {
     "line number": [
      8
     ]
    },
    "chr": {
     "line number": [
      25
     ]
    },
    "len": {
     "line number": [
      341
     ]
    },
    "mne.externals.tqdm._tqdm.utils.CUR_OS": {
     "line number": [
      7,
      9
     ]
    },
    "mne.externals.tqdm._tqdm.utils.IS_WIN": {
     "line number": [
      8,
      33
     ]
    },
    "mne.externals.tqdm._tqdm.utils.colorama": {
     "line number": [
      41,
      43
     ]
    },
    "mne.externals.tqdm._tqdm.utils.re": {
     "line number": [
      12
     ]
    },
    "platform.system": {
     "line number": [
      6
     ]
    },
    "range": {
     "line number": [
      20
     ]
    },
    "set": {
     "line number": [
      48
     ]
    },
    "str": {
     "line number": [
      30,
      53
     ]
    },
    "weakref.WeakSet": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.utils.CUR_OS": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.utils.ObjectWrapper": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      230
     ]
    },
    "getattr": {
     "line number": [
      214
     ]
    },
    "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper": {
     "line number": [
      213
     ]
    },
    "super": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper.__init__.read": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      226
     ]
    },
    "func": {
     "line number": [
      225,
      223
     ]
    },
    "functools.wraps": {
     "line number": [
      223
     ]
    },
    "len": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper.__init__.write": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      219
     ]
    },
    "func": {
     "line number": [
      218,
      216
     ]
    },
    "functools.wraps": {
     "line number": [
      216
     ]
    },
    "len": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "object": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__eq__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__ge__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__gt__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__le__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__lt__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__ne__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.FormatReplace": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "object": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.FormatReplace.__format__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.FormatReplace.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.IS_NIX": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.IS_WIN": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "object": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.__getattr__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.__setattr__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.wrapper_getattr": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      176
     ]
    },
    "getattr": {
     "line number": [
      177
     ]
    },
    "object.__getattr__": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.wrapper_setattr": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "object.__setattr__": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.RE_ANSI": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.utils.ObjectWrapper": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper": {
     "line number": [
      197
     ]
    },
    "super": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper.write": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.TIOCGWINSZ": {
  "data": {
   "shadows": "termios.TIOCGWINSZ"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.WeakSet": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "collections.MutableMapping": {
     "line number": [
      64
     ]
    },
    "collections.MutableMapping.items": {
     "line number": [
      112
     ]
    },
    "collections.MutableMapping.keys": {
     "line number": [
      110
     ]
    },
    "collections.MutableMapping.pop": {
     "line number": [
      109
     ]
    },
    "collections.MutableMapping.setdefault": {
     "line number": [
      107
     ]
    },
    "collections.MutableMapping.update": {
     "line number": [
      108
     ]
    },
    "collections.MutableMapping.values": {
     "line number": [
      111
     ]
    },
    "dict": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__delitem__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "dict.__delitem__": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      68
     ]
    },
    "hasattr": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      67,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__iter__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__reduce__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "vars": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__repr__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "map": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__reversed__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "reversed": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__setitem__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "dict.__setitem__": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.clear": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "dict.clear": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.copy": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.fromkeys": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      121
     ]
    },
    "cls": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.popitem": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      95
     ]
    },
    "dict.pop": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._basestring": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._curos": {
  "data": {
   "shadows": "platform.system"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_linux": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      321
     ]
    },
    "KeyError": {
     "line number": [
      329
     ]
    },
    "array.array": {
     "line number": [
      325
     ]
    },
    "fcntl.ioctl": {
     "line number": [
      325
     ]
    },
    "int": {
     "line number": [
      328
     ]
    },
    "mne.externals.tqdm._tqdm.utils.os": {
     "line number": [
      328
     ]
    },
    "termios.TIOCGWINSZ": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_tput": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "int": {
     "line number": [
      307
     ]
    },
    "mne.externals.tqdm._tqdm.utils.shlex": {
     "line number": [
      307
     ]
    },
    "mne.externals.tqdm._tqdm.utils.subprocess": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_windows": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "ctypes.create_string_buffer": {
     "line number": [
      291
     ]
    },
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo": {
     "line number": [
      292
     ]
    },
    "ctypes.windll.kernel32.GetStdHandle": {
     "line number": [
      290
     ]
    },
    "mne.externals.tqdm._tqdm.utils.struct": {
     "line number": [
      295
     ]
    },
    "sys.stdin": {
     "line number": [
      285
     ]
    },
    "sys.stdout": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_wrapper": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.utils.IS_NIX": {
     "line number": [
      273
     ]
    },
    "mne.externals.tqdm._tqdm.utils.IS_WIN": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._is_ascii": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      255
     ]
    },
    "mne.externals.tqdm._tqdm.utils._supports_unicode": {
     "line number": [
      260
     ]
    },
    "ord": {
     "line number": [
      257
     ]
    },
    "str": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._is_utf": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      238
     ]
    },
    "UnicodeEncodeError": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._range": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._supports_unicode": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      250
     ]
    },
    "mne.externals.tqdm._tqdm.utils._is_utf": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._term_move_up": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.utils.colorama": {
     "line number": [
      334
     ]
    },
    "mne.externals.tqdm._tqdm.utils.os": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._text_width": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "mne.externals.tqdm._tqdm.utils._unicode": {
     "line number": [
      345
     ]
    },
    "sum": {
     "line number": [
      344
     ]
    },
    "unicodedata.east_asian_width": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._unich": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._unicode": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.colorama": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.east_asian_width": {
  "data": {
   "shadows": "unicodedata.east_asian_width"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.ioctl": {
  "data": {
   "shadows": "fcntl.ioctl"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.stdin": {
  "data": {
   "shadows": "sys.stdin"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.windll": {
  "data": {
   "shadows": "ctypes.windll"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm.auto": {
  "data": {
   "shadows": "tqdm.auto"
  },
  "type": "import"
 },
 "mne.fixes": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      314,
      1037,
      1135,
      1141,
      1189
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      321,
      1134,
      1134
     ]
    },
    "mne.fixes.has_numba": {
     "line number": [
      1147
     ]
    },
    "mne.fixes.numba": {
     "line number": [
      1134,
      1136
     ]
    },
    "mne.fixes.os": {
     "line number": [
      1144
     ]
    },
    "mne.fixes.scipy": {
     "line number": [
      321
     ]
    },
    "numpy.bincount": {
     "line number": [
      1153
     ]
    },
    "numpy.mean": {
     "line number": [
      1154
     ]
    },
    "range": {
     "line number": [
      1152
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.fixes.BaseEstimator": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "object": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.fixes.BaseEstimator.__repr__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "len": {
     "line number": [
      575
     ]
    },
    "sklearn.base._pprint": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      489
     ]
    },
    "classmethod": {
     "line number": [
      471
     ]
    },
    "getattr": {
     "line number": [
      476
     ]
    },
    "mne.fixes.inspect": {
     "line number": [
      483
     ]
    },
    "object.__init__": {
     "line number": [
      477
     ]
    },
    "sorted": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator._get_tags": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      584
     ]
    },
    "mne.fixes.inspect": {
     "line number": [
      583
     ]
    },
    "reversed": {
     "line number": [
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator.get_params": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      518,
      522
     ]
    },
    "dict": {
     "line number": [
      512
     ]
    },
    "getattr": {
     "line number": [
      521
     ]
    },
    "hasattr": {
     "line number": [
      529
     ]
    },
    "len": {
     "line number": [
      522
     ]
    },
    "mne.fixes.warnings": {
     "line number": [
      518,
      520,
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator.set_params": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      555,
      564
     ]
    },
    "len": {
     "line number": [
      551
     ]
    },
    "setattr": {
     "line number": [
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "mne.fixes.BaseEstimator": {
     "line number": [
      679
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.fixes.EmpiricalCovariance.__init__": {
  "data": {
   "lineno": 705
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance._set_covariance": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": {
    "scipy.linalg.pinvh": {
     "line number": [
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.error_norm": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      843
     ]
    },
    "numpy.amax": {
     "line number": [
      841
     ]
    },
    "numpy.dot": {
     "line number": [
      841
     ]
    },
    "numpy.sqrt": {
     "line number": [
      852
     ]
    },
    "numpy.sum": {
     "line number": [
      839
     ]
    },
    "scipy.linalg.svdvals": {
     "line number": [
      841
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.fit": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": {
    "mne.fixes.empirical_covariance": {
     "line number": [
      769
     ]
    },
    "numpy.zeros": {
     "line number": [
      766
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.get_precision": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": {
    "scipy.linalg.pinvh": {
     "line number": [
      743
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.mahalanobis": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      876
     ]
    },
    "numpy.sum": {
     "line number": [
      875
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.score": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "mne.fixes.empirical_covariance": {
     "line number": [
      797
     ]
    },
    "mne.fixes.log_likelihood": {
     "line number": [
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "mne.fixes.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.fixes.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.fixes._assess_dimension_": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      932
     ]
    },
    "len": {
     "line number": [
      931,
      957
     ]
    },
    "math.log": {
     "line number": [
      935,
      938,
      951,
      958,
      959,
      961
     ]
    },
    "numpy.log": {
     "line number": [
      940,
      948
     ]
    },
    "numpy.pi": {
     "line number": [
      938,
      951
     ]
    },
    "numpy.sum": {
     "line number": [
      940,
      947
     ]
    },
    "range": {
     "line number": [
      936,
      956,
      957
     ]
    },
    "scipy.special.gammaln": {
     "line number": [
      937
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._check_fit_params": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      628
     ]
    },
    "sklearn.model_selection._validation._index_param_value": {
     "line number": [
      632
     ]
    },
    "sklearn.utils.validation._check_fit_params": {
     "line number": [
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._crop_colorbar": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      1099,
      1099
     ]
    },
    "len": {
     "line number": [
      1095
     ]
    },
    "mne.fixes.matplotlib": {
     "line number": [
      1099
     ]
    },
    "numpy.array": {
     "line number": [
      1102,
      1103
     ]
    },
    "numpy.linspace": {
     "line number": [
      1094
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._dpss": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      288,
      294
     ]
    },
    "float": {
     "line number": [
      264
     ]
    },
    "mne.fixes.tridi_inverse_iteration": {
     "line number": [
      281
     ]
    },
    "numpy.abs": {
     "line number": [
      293
     ]
    },
    "numpy.arange": {
     "line number": [
      263
     ]
    },
    "numpy.argmax": {
     "line number": [
      293
     ]
    },
    "numpy.cos": {
     "line number": [
      265
     ]
    },
    "numpy.linspace": {
     "line number": [
      278
     ]
    },
    "numpy.pi": {
     "line number": [
      265,
      278
     ]
    },
    "numpy.sin": {
     "line number": [
      282
     ]
    },
    "numpy.sum": {
     "line number": [
      295
     ]
    },
    "numpy.zeros": {
     "line number": [
      269,
      279
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      266
     ]
    },
    "range": {
     "line number": [
      280
     ]
    },
    "scipy.linalg.eigvals_banded": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._get_args": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "len": {
     "line number": [
      39
     ]
    },
    "mne.fixes.inspect": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._get_check_scoring": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      598
     ]
    },
    "sklearn.metrics.scorer.check_scoring": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._get_dpss": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      304
     ]
    },
    "mne.fixes._dpss": {
     "line number": [
      305
     ]
    },
    "scipy.signal.windows.dpss": {
     "line number": [
      305,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._get_img_fdata": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "numpy.asanyarray": {
     "line number": [
      362
     ]
    },
    "numpy.complex128": {
     "line number": [
      363
     ]
    },
    "numpy.float64": {
     "line number": [
      363
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._get_read_geometry": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      74
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      76,
      76
     ]
    },
    "nibabel.__version__": {
     "line number": [
      76
     ]
    },
    "nibabel.freesurfer.read_geometry": {
     "line number": [
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._get_status": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1124
     ]
    },
    "list": {
     "line number": [
      1123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._infer_dimension_": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "len": {
     "line number": [
      922
     ]
    },
    "mne.fixes._assess_dimension_": {
     "line number": [
      925
     ]
    },
    "numpy.empty": {
     "line number": [
      923
     ]
    },
    "range": {
     "line number": [
      924
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._logdet": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": {
    "numpy.finfo": {
     "line number": [
      913
     ]
    },
    "numpy.float64": {
     "line number": [
      913
     ]
    },
    "numpy.log": {
     "line number": [
      915
     ]
    },
    "numpy.sum": {
     "line number": [
      915
     ]
    },
    "numpy.where": {
     "line number": [
      914
     ]
    },
    "scipy.linalg.eigvalsh": {
     "line number": [
      911
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._make_along_axis_idx": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1058
     ]
    },
    "ValueError": {
     "line number": [
      1060
     ]
    },
    "len": {
     "line number": [
      1059
     ]
    },
    "list": {
     "line number": [
      1063,
      1063
     ]
    },
    "numpy.arange": {
     "line number": [
      1073
     ]
    },
    "numpy.integer": {
     "line number": [
      1057
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      1057
     ]
    },
    "range": {
     "line number": [
      1063,
      1063
     ]
    },
    "tuple": {
     "line number": [
      1075
     ]
    },
    "zip": {
     "line number": [
      1068
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._np_apply_along_axis": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": {
    "func1d": {
     "line number": [
      1172,
      1176
     ]
    },
    "len": {
     "line number": [
      1171,
      1175
     ]
    },
    "mne.fixes.jit": {
     "line number": [
      1165
     ]
    },
    "numpy.empty": {
     "line number": [
      1170,
      1174
     ]
    },
    "range": {
     "line number": [
      1171,
      1175
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._pprint": {
  "data": {
   "shadows": "sklearn.base._pprint"
  },
  "type": "import"
 },
 "mne.fixes._read_geometry": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      129
     ]
    },
    "_fread3": {
     "line number": [
      92,
      94,
      95
     ]
    },
    "_fread3_many": {
     "line number": [
      99
     ]
    },
    "dict": {
     "line number": [
      86
     ]
    },
    "len": {
     "line number": [
      135
     ]
    },
    "mne.fixes._read_volume_info": {
     "line number": [
      127
     ]
    },
    "mne.fixes.warnings": {
     "line number": [
      136
     ]
    },
    "numpy.float64": {
     "line number": [
      97,
      131
     ]
    },
    "numpy.fromfile": {
     "line number": [
      97,
      121,
      122,
      123,
      124
     ]
    },
    "numpy.int64": {
     "line number": [
      104
     ]
    },
    "numpy.zeros": {
     "line number": [
      104
     ]
    },
    "open": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._read_volume_info": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      384
     ]
    },
    "dict": {
     "line number": [
      371
     ]
    },
    "float": {
     "line number": [
      390
     ]
    },
    "int": {
     "line number": [
      388
     ]
    },
    "len": {
     "line number": [
      383
     ]
    },
    "mne.fixes.warnings": {
     "line number": [
      376
     ]
    },
    "numpy.array": {
     "line number": [
      388,
      390
     ]
    },
    "numpy.array_equal": {
     "line number": [
      373,
      375
     ]
    },
    "numpy.concatenate": {
     "line number": [
      374
     ]
    },
    "numpy.fromfile": {
     "line number": [
      372,
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._safe_svd": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53
     ]
    },
    "mne.fixes._get_args": {
     "line number": [
      58
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      56
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      55,
      58,
      61
     ]
    },
    "warn": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._serialize_volume_info": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      402
     ]
    },
    "len": {
     "line number": [
      401
     ]
    },
    "list": {
     "line number": [
      404
     ]
    },
    "mne.fixes.warnings": {
     "line number": [
      409
     ]
    },
    "numpy.array": {
     "line number": [
      410
     ]
    },
    "numpy.array_equal": {
     "line number": [
      407,
      407
     ]
    },
    "set": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._sklearn_check_fit_params": {
  "data": {
   "shadows": "sklearn.utils.validation._check_fit_params"
  },
  "type": "import"
 },
 "mne.fixes._validate_sos": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      348,
      351,
      353
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes._validation": {
  "data": {
   "shadows": "sklearn.model_selection._validation"
  },
  "type": "import"
 },
 "mne.fixes.bincount": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": {
    "mne.fixes.jit": {
     "line number": [
      1157
     ]
    },
    "numpy.zeros": {
     "line number": [
      1159
     ]
    },
    "zip": {
     "line number": [
      1160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer.check_scoring"
  },
  "type": "import"
 },
 "mne.fixes.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.fixes.dpss": {
  "data": {
   "shadows": "scipy.signal.windows.dpss"
  },
  "type": "import"
 },
 "mne.fixes.einsum": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.empirical_covariance": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": {
    "mne.fixes.warnings": {
     "line number": [
      666
     ]
    },
    "numpy.array": {
     "line number": [
      675
     ]
    },
    "numpy.asarray": {
     "line number": [
      661
     ]
    },
    "numpy.cov": {
     "line number": [
      672
     ]
    },
    "numpy.dot": {
     "line number": [
      670
     ]
    },
    "numpy.reshape": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.fft": {
  "data": {
   "shadows": "numpy.fft.fft"
  },
  "type": "import"
 },
 "mne.fixes.fftfreq": {
  "data": {
   "shadows": "numpy.fft.fftfreq"
  },
  "type": "import"
 },
 "mne.fixes.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "mne.fixes.has_numba": {
  "data": {
   "lineno": 1144
  },
  "type": "constant"
 },
 "mne.fixes.ifft": {
  "data": {
   "shadows": "numpy.fft.ifft"
  },
  "type": "import"
 },
 "mne.fixes.ifftshift": {
  "data": {
   "shadows": "numpy.fft.ifftshift"
  },
  "type": "import"
 },
 "mne.fixes.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.fixes.irfft": {
  "data": {
   "shadows": "numpy.fft.irfft"
  },
  "type": "import"
 },
 "mne.fixes.is_classifier": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.is_regressor": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.jit": {
  "data": {
   "lineno": 1148
  },
  "type": "function"
 },
 "mne.fixes.jit._jit": {
  "data": {
   "lineno": 1149
  },
  "type": "function"
 },
 "mne.fixes.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.fixes.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "mne.fixes.log_likelihood": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": {
    "mne.fixes._logdet": {
     "line number": [
      901
     ]
    },
    "numpy.log": {
     "line number": [
      902
     ]
    },
    "numpy.pi": {
     "line number": [
      902
     ]
    },
    "numpy.sum": {
     "line number": [
      901
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.fixes.mean": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": {
    "mne.fixes._np_apply_along_axis": {
     "line number": [
      1181
     ]
    },
    "mne.fixes.jit": {
     "line number": [
      1179
     ]
    },
    "numpy.mean": {
     "line number": [
      1181
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.fixes.nullcontext": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      1192
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "mne.fixes.orth": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "int": {
     "line number": [
      330
     ]
    },
    "max": {
     "line number": [
      328
     ]
    },
    "numpy.amax": {
     "line number": [
      329
     ]
    },
    "numpy.finfo": {
     "line number": [
      328
     ]
    },
    "numpy.sum": {
     "line number": [
      330
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.fixes.prange": {
  "data": {
   "lineno": 1152
  },
  "type": "constant"
 },
 "mne.fixes.read_geometry": {
  "data": {
   "shadows": "nibabel.freesurfer.read_geometry"
  },
  "type": "import"
 },
 "mne.fixes.rfft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "mne.fixes.rfftfreq": {
  "data": {
   "shadows": "numpy.fft.rfftfreq"
  },
  "type": "import"
 },
 "mne.fixes.rng_uniform": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      341,
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "mne.fixes.stable_cumsum": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1003
     ]
    },
    "mne.fixes.warnings": {
     "line number": [
      1001
     ]
    },
    "numpy.all": {
     "line number": [
      999
     ]
    },
    "numpy.cumsum": {
     "line number": [
      997
     ]
    },
    "numpy.float64": {
     "line number": [
      997,
      998
     ]
    },
    "numpy.isclose": {
     "line number": [
      999
     ]
    },
    "numpy.sum": {
     "line number": [
      998
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.svd": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "mne.fixes.take_along_axis": {
     "line number": [
      1014,
      1015,
      1016
     ]
    },
    "numpy.abs": {
     "line number": [
      1012,
      1019
     ]
    },
    "numpy.argsort": {
     "line number": [
      1013
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      1010
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      1022
     ]
    },
    "numpy.newaxis.swapaxes": {
     "line number": [
      1018
     ]
    },
    "numpy.sign": {
     "line number": [
      1011
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.svd_flip": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      969,
      975
     ]
    },
    "numpy.arange": {
     "line number": [
      970,
      976
     ]
    },
    "numpy.argmax": {
     "line number": [
      969,
      975
     ]
    },
    "numpy.newaxis": {
     "line number": [
      972,
      978
     ]
    },
    "numpy.sign": {
     "line number": [
      970,
      976
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.take_along_axis": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1042
     ]
    },
    "mne.fixes._make_along_axis_idx": {
     "line number": [
      1053
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.tridi_inverse_iteration": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "len": {
     "line number": [
      229
     ]
    },
    "mne.fixes.tridisolve": {
     "line number": [
      237
     ]
    },
    "numpy.abs": {
     "line number": [
      235,
      235
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      231,
      235,
      238
     ]
    },
    "numpy.random.randn": {
     "line number": [
      229
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.tridisolve": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "len": {
     "line number": [
      168
     ]
    },
    "numpy.diag": {
     "line number": [
      187,
      187,
      187
     ]
    },
    "range": {
     "line number": [
      176,
      190,
      194
     ]
    },
    "scipy.linalg.solve": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.fixes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.forward": {
  "data": {},
  "type": "module"
 },
 "mne.forward._field_interpolation": {
  "data": {},
  "type": "module"
 },
 "mne.forward._field_interpolation._ad_hoc_noise": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      43
     ]
    },
    "dict": {
     "line number": [
      48
     ]
    },
    "len": {
     "line number": [
      41
     ]
    },
    "mne.forward._field_interpolation._is_axial_coil": {
     "line number": [
      43
     ]
    },
    "numpy.array": {
     "line number": [
      43
     ]
    },
    "numpy.empty": {
     "line number": [
      41
     ]
    },
    "numpy.logical_not": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._as_meg_type_inst": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "EpochsArray": {
     "line number": [
      285
     ]
    },
    "EvokedArray": {
     "line number": [
      281
     ]
    },
    "ValueError": {
     "line number": [
      242
     ]
    },
    "_check_option": {
     "line number": [
      233
     ]
    },
    "hasattr": {
     "line number": [
      256
     ]
    },
    "isinstance": {
     "line number": [
      278,
      284
     ]
    },
    "len": {
     "line number": [
      241,
      265
     ]
    },
    "mne.forward._field_interpolation._map_meg_or_eeg_channels": {
     "line number": [
      251
     ]
    },
    "numpy.dot": {
     "line number": [
      268
     ]
    },
    "numpy.empty": {
     "line number": [
      265
     ]
    },
    "numpy.newaxis": {
     "line number": [
      263
     ]
    },
    "pick_info": {
     "line number": [
      248,
      249,
      271
     ]
    },
    "pick_types": {
     "line number": [
      236,
      238
     ]
    },
    "zip": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._compute_mapping_matrix": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      75
     ]
    },
    "_has_eeg_average_ref_proj": {
     "line number": [
      99
     ]
    },
    "list": {
     "line number": [
      68
     ]
    },
    "make_projector": {
     "line number": [
      69
     ]
    },
    "mne.forward._field_interpolation._pinv_tikhonov": {
     "line number": [
      85
     ]
    },
    "mne.forward._field_interpolation._pinv_trunc": {
     "line number": [
      82
     ]
    },
    "numpy.diag": {
     "line number": [
      76
     ]
    },
    "numpy.dot": {
     "line number": [
      70,
      70,
      77,
      77,
      88,
      88,
      96
     ]
    },
    "numpy.mean": {
     "line number": [
      103
     ]
    },
    "numpy.sqrt": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._is_axial_coil": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._make_surface_mapping": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      328,
      330
     ]
    },
    "RuntimeError": {
     "line number": [
      352
     ]
    },
    "_check_option": {
     "line number": [
      332,
      344
     ]
    },
    "_check_origin": {
     "line number": [
      338
     ]
    },
    "_create_eeg_els": {
     "line number": [
      365
     ]
    },
    "_create_meg_coils": {
     "line number": [
      361
     ]
    },
    "_do_self_dots": {
     "line number": [
      374
     ]
    },
    "_do_surface_dots": {
     "line number": [
      379
     ]
    },
    "all": {
     "line number": [
      327
     ]
    },
    "check_n_jobs": {
     "line number": [
      337
     ]
    },
    "copy.deepcopy": {
     "line number": [
      336
     ]
    },
    "dict": {
     "line number": [
      387
     ]
    },
    "len": {
     "line number": [
      351,
      373,
      376,
      378
     ]
    },
    "mne.forward._field_interpolation._compute_mapping_matrix": {
     "line number": [
      392
     ]
    },
    "mne.forward._field_interpolation._setup_dots": {
     "line number": [
      372
     ]
    },
    "numpy.arange": {
     "line number": [
      376
     ]
    },
    "pick_types": {
     "line number": [
      346,
      349
     ]
    },
    "transform_surface_to": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._map_meg_or_eeg_channels": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      184
     ]
    },
    "_check_origin": {
     "line number": [
      187
     ]
    },
    "_create_eeg_els": {
     "line number": [
      178,
      179
     ]
    },
    "_create_meg_coils": {
     "line number": [
      171,
      173
     ]
    },
    "_do_cross_dots": {
     "line number": [
      198
     ]
    },
    "_do_self_dots": {
     "line number": [
      194
     ]
    },
    "_has_eeg_average_ref_proj": {
     "line number": [
      182,
      183
     ]
    },
    "_pl": {
     "line number": [
      192,
      196
     ]
    },
    "_read_coil_defs": {
     "line number": [
      170
     ]
    },
    "dict": {
     "line number": [
      202
     ]
    },
    "len": {
     "line number": [
      162,
      192,
      196,
      196
     ]
    },
    "mne.forward._field_interpolation._compute_mapping_matrix": {
     "line number": [
      210
     ]
    },
    "mne.forward._field_interpolation._setup_dots": {
     "line number": [
      191
     ]
    },
    "set": {
     "line number": [
      155,
      156,
      158,
      159
     ]
    },
    "sorted": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._pinv_tikhonov": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "_reg_pinv": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._pinv_trunc": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "len": {
     "line number": [
      116
     ]
    },
    "numpy.cumsum": {
     "line number": [
      112
     ]
    },
    "numpy.where": {
     "line number": [
      114
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._setup_dots": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "_get_legen_table": {
     "line number": [
      58
     ]
    },
    "mne.forward._field_interpolation._ad_hoc_noise": {
     "line number": [
      56
     ]
    },
    "numpy.linspace": {
     "line number": [
      59
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.make_field_map": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      467
     ]
    },
    "_check_option": {
     "line number": [
      455,
      474
     ]
    },
    "_ensure_trans": {
     "line number": [
      472
     ]
    },
    "_find_trans": {
     "line number": [
      460
     ]
    },
    "get_head_surf": {
     "line number": [
      481
     ]
    },
    "get_meg_helmet_surf": {
     "line number": [
      479
     ]
    },
    "isinstance": {
     "line number": [
      470
     ]
    },
    "len": {
     "line number": [
      466
     ]
    },
    "list": {
     "line number": [
      484
     ]
    },
    "mne.forward._field_interpolation._make_surface_mapping": {
     "line number": [
      487
     ]
    },
    "read_trans": {
     "line number": [
      471
     ]
    },
    "str": {
     "line number": [
      470
     ]
    },
    "zip": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._field_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._lead_dots": {
  "data": {
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      179,
      180
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.forward._lead_dots._comp_sum_eeg": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "lut_fun": {
     "line number": [
      120
     ]
    },
    "max": {
     "line number": [
      116
     ]
    },
    "numpy.arange": {
     "line number": [
      117
     ]
    },
    "numpy.concatenate": {
     "line number": [
      117
     ]
    },
    "numpy.cumprod": {
     "line number": [
      122
     ]
    },
    "numpy.dot": {
     "line number": [
      124
     ]
    },
    "numpy.empty": {
     "line number": [
      118
     ]
    },
    "numpy.newaxis": {
     "line number": [
      121
     ]
    },
    "numpy.tile": {
     "line number": [
      121
     ]
    },
    "zip": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._comp_sums_meg": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "einsum": {
     "line number": [
      171
     ]
    },
    "len": {
     "line number": [
      162
     ]
    },
    "lut_fun": {
     "line number": [
      171
     ]
    },
    "max": {
     "line number": [
      165
     ]
    },
    "numpy.arange": {
     "line number": [
      166
     ]
    },
    "numpy.concatenate": {
     "line number": [
      166
     ]
    },
    "numpy.cumprod": {
     "line number": [
      170
     ]
    },
    "numpy.empty": {
     "line number": [
      162
     ]
    },
    "numpy.newaxis": {
     "line number": [
      168
     ]
    },
    "numpy.tile": {
     "line number": [
      168
     ]
    },
    "zip": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_cross_dots": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "len": {
     "line number": [
      399,
      399,
      400
     ]
    },
    "mne.forward._lead_dots._fast_sphere_dot_r0": {
     "line number": [
      401
     ]
    },
    "numpy.newaxis": {
     "line number": [
      384,
      385,
      390,
      391
     ]
    },
    "numpy.sqrt": {
     "line number": [
      387,
      388
     ]
    },
    "numpy.sum": {
     "line number": [
      387,
      388
     ]
    },
    "numpy.zeros": {
     "line number": [
      399
     ]
    },
    "range": {
     "line number": [
      400
     ]
    },
    "zip": {
     "line number": [
      390,
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_self_dots": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "len": {
     "line number": [
      329
     ]
    },
    "numpy.arange": {
     "line number": [
      329
     ]
    },
    "numpy.array_split": {
     "line number": [
      329
     ]
    },
    "numpy.newaxis": {
     "line number": [
      321,
      323
     ]
    },
    "numpy.sqrt": {
     "line number": [
      322
     ]
    },
    "numpy.sum": {
     "line number": [
      322,
      330
     ]
    },
    "p_fun": {
     "line number": [
      327
     ]
    },
    "parallel": {
     "line number": [
      327
     ]
    },
    "parallel_func": {
     "line number": [
      326
     ]
    },
    "zip": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_self_dots_subset": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "len": {
     "line number": [
      338,
      338
     ]
    },
    "mne.forward._lead_dots._fast_sphere_dot_r0": {
     "line number": [
      341
     ]
    },
    "numpy.zeros": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_surface_dots": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "len": {
     "line number": [
      469
     ]
    },
    "numpy.arange": {
     "line number": [
      469
     ]
    },
    "numpy.array_split": {
     "line number": [
      469
     ]
    },
    "numpy.newaxis": {
     "line number": [
      442,
      444,
      459,
      461
     ]
    },
    "numpy.sqrt": {
     "line number": [
      443,
      460
     ]
    },
    "numpy.sum": {
     "line number": [
      443,
      460,
      470
     ]
    },
    "p_fun": {
     "line number": [
      465,
      466
     ]
    },
    "parallel": {
     "line number": [
      465,
      466
     ]
    },
    "parallel_func": {
     "line number": [
      465
     ]
    },
    "zip": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_surface_dots_subset": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      514
     ]
    },
    "mne.forward._lead_dots._fast_sphere_dot_r0": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._eeg_const": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "mne.forward._lead_dots._fast_sphere_dot_r0": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "einsum": {
     "line number": [
      234,
      256,
      257,
      258,
      259,
      260
     ]
    },
    "enumerate": {
     "line number": [
      284
     ]
    },
    "len": {
     "line number": [
      223,
      223,
      226,
      285,
      286
     ]
    },
    "mne.forward._lead_dots._comp_sum_eeg": {
     "line number": [
      274
     ]
    },
    "mne.forward._lead_dots._comp_sums_meg": {
     "line number": [
      244
     ]
    },
    "mne.forward._lead_dots._eeg_const": {
     "line number": [
      277
     ]
    },
    "mne.forward._lead_dots._meg_const": {
     "line number": [
      270
     ]
    },
    "numpy.clip": {
     "line number": [
      235
     ]
    },
    "numpy.concatenate": {
     "line number": [
      229,
      230,
      231,
      281
     ]
    },
    "numpy.empty": {
     "line number": [
      228
     ]
    },
    "numpy.newaxis": {
     "line number": [
      238,
      239,
      240,
      240,
      283
     ]
    },
    "numpy.sum": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen_der": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "len": {
     "line number": [
      42
     ]
    },
    "mne.forward._lead_dots._next_legen_der": {
     "line number": [
      49
     ]
    },
    "numpy.empty": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      48
     ]
    },
    "zip": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen_table": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      59
     ]
    },
    "_get_extra_data_path": {
     "line number": [
      60
     ]
    },
    "float": {
     "line number": [
      88
     ]
    },
    "leg_fun": {
     "line number": [
      77
     ]
    },
    "list": {
     "line number": [
      90
     ]
    },
    "mne.forward._lead_dots._get_legen": {
     "line number": [
      71
     ]
    },
    "mne.forward._lead_dots._get_legen_der": {
     "line number": [
      66
     ]
    },
    "mne.forward._lead_dots.os": {
     "line number": [
      63
     ]
    },
    "numpy.arange": {
     "line number": [
      88
     ]
    },
    "numpy.array": {
     "line number": [
      101
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      102
     ]
    },
    "numpy.float32": {
     "line number": [
      77,
      84
     ]
    },
    "numpy.fromfile": {
     "line number": [
      84
     ]
    },
    "numpy.linspace": {
     "line number": [
      76
     ]
    },
    "open": {
     "line number": [
      79,
      83
     ]
    },
    "os.path.isdir": {
     "line number": [
      61
     ]
    },
    "os.path.isfile": {
     "line number": [
      74
     ]
    },
    "os.path.join": {
     "line number": [
      60,
      65,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._lead_dots._meg_const": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "mne.forward._lead_dots._next_legen_der": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "mne.forward._lead_dots.legendre": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward._make_forward": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.forward._make_forward._accuracy_dict": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.forward._make_forward._coil_registry": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.forward._make_forward._create_eeg_el": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      170,
      175
     ]
    },
    "Transform": {
     "line number": [
      173
     ]
    },
    "_loc_to_eeg_loc": {
     "line number": [
      177
     ]
    },
    "_normalize_vectors": {
     "line number": [
      188
     ]
    },
    "apply_trans": {
     "line number": [
      184
     ]
    },
    "dict": {
     "line number": [
      189
     ]
    },
    "mne.forward._make_forward._accuracy_dict": {
     "line number": [
      190
     ]
    },
    "numpy.array": {
     "line number": [
      179,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_eeg_els": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "mne.forward._make_forward._create_eeg_el": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_meg_coil": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      136,
      144
     ]
    },
    "_loc_to_coil_trans": {
     "line number": [
      148
     ]
    },
    "apply_trans": {
     "line number": [
      157,
      158
     ]
    },
    "dict": {
     "line number": [
      151
     ]
    },
    "numpy.dot": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_meg_coils": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      197
     ]
    },
    "mne.forward._make_forward._accuracy_dict": {
     "line number": [
      197
     ]
    },
    "mne.forward._make_forward._create_meg_coil": {
     "line number": [
      199
     ]
    },
    "mne.forward._make_forward._read_coil_defs": {
     "line number": [
      198
     ]
    },
    "mne.forward._make_forward._transform_orig_meg_coils": {
     "line number": [
      200
     ]
    },
    "str": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._extra_coil_def_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.forward._make_forward._prep_eeg_channels": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      404
     ]
    },
    "len": {
     "line number": [
      402,
      409
     ]
    },
    "mne.forward._make_forward._create_eeg_els": {
     "line number": [
      412
     ]
    },
    "pick_info": {
     "line number": [
      407
     ]
    },
    "pick_types": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._prep_meg_channels": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      331
     ]
    },
    "RuntimeError": {
     "line number": [
      313
     ]
    },
    "_has_kit_refs": {
     "line number": [
      330
     ]
    },
    "_print_coord_trans": {
     "line number": [
      347
     ]
    },
    "len": {
     "line number": [
      311,
      319,
      324,
      339
     ]
    },
    "mne.forward._make_forward._create_meg_coils": {
     "line number": [
      352,
      358
     ]
    },
    "mne.forward._make_forward._read_coil_defs": {
     "line number": [
      344
     ]
    },
    "pick_info": {
     "line number": [
      326,
      371
     ]
    },
    "pick_types": {
     "line number": [
      307,
      323,
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._prepare_for_forward": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "Info": {
     "line number": [
      449
     ]
    },
    "RuntimeError": {
     "line number": [
      430,
      469,
      494
     ]
    },
    "_bem_find_surface": {
     "line number": [
      488
     ]
    },
    "_coord_frame_name": {
     "line number": [
      480
     ]
    },
    "_ensure_src": {
     "line number": [
      427
     ]
    },
    "_filter_source_spaces": {
     "line number": [
      489
     ]
    },
    "_print_coord_trans": {
     "line number": [
      441
     ]
    },
    "dict": {
     "line number": [
      447,
      499
     ]
    },
    "len": {
     "line number": [
      433,
      460,
      463,
      468,
      483,
      493,
      498,
      499,
      499
     ]
    },
    "mne.forward._make_forward._prep_eeg_channels": {
     "line number": [
      465
     ]
    },
    "mne.forward._make_forward._prep_meg_channels": {
     "line number": [
      462
     ]
    },
    "mne.forward._make_forward._setup_bem": {
     "line number": [
      483
     ]
    },
    "mne.forward._make_forward.os": {
     "line number": [
      451
     ]
    },
    "numpy.concatenate": {
     "line number": [
      492
     ]
    },
    "numpy.eye": {
     "line number": [
      498
     ]
    },
    "numpy.int32": {
     "line number": [
      447
     ]
    },
    "numpy.tile": {
     "line number": [
      498
     ]
    },
    "numpy.zeros": {
     "line number": [
      447
     ]
    },
    "pick_info": {
     "line number": [
      472
     ]
    },
    "pick_types": {
     "line number": [
      460,
      463,
      472
     ]
    },
    "str": {
     "line number": [
      446
     ]
    },
    "sum": {
     "line number": [
      428
     ]
    },
    "transform_surface_to": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._read_coil_def_file": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      118,
      120
     ]
    },
    "_pl": {
     "line number": [
      128
     ]
    },
    "copy.deepcopy": {
     "line number": [
      127
     ]
    },
    "dict": {
     "line number": [
      96,
      122
     ]
    },
    "float": {
     "line number": [
      93
     ]
    },
    "int": {
     "line number": [
      95
     ]
    },
    "len": {
     "line number": [
      84,
      86,
      89,
      94,
      108,
      128
     ]
    },
    "list": {
     "line number": [
      80,
      99,
      100,
      101
     ]
    },
    "mne.forward._make_forward._coil_registry": {
     "line number": [
      78,
      125,
      127
     ]
    },
    "numpy.any": {
     "line number": [
      117,
      119
     ]
    },
    "numpy.array": {
     "line number": [
      113,
      114,
      115
     ]
    },
    "numpy.fromstring": {
     "line number": [
      92,
      107
     ]
    },
    "numpy.newaxis": {
     "line number": [
      121
     ]
    },
    "numpy.sqrt": {
     "line number": [
      116,
      117
     ]
    },
    "numpy.sum": {
     "line number": [
      116,
      117
     ]
    },
    "open": {
     "line number": [
      81
     ]
    },
    "range": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._read_coil_defs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "list": {
     "line number": [
      64
     ]
    },
    "mne.forward._make_forward._extra_coil_def_fname": {
     "line number": [
      65,
      66
     ]
    },
    "mne.forward._make_forward._read_coil_def_file": {
     "line number": [
      66,
      67
     ]
    },
    "os.path.join": {
     "line number": [
      63,
      67
     ]
    },
    "os.path.split": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._setup_bem": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      243,
      246,
      249,
      253
     ]
    },
    "TypeError": {
     "line number": [
      238
     ]
    },
    "_coord_frame_name": {
     "line number": [
      251
     ]
    },
    "_ensure_trans": {
     "line number": [
      259
     ]
    },
    "isinstance": {
     "line number": [
      233,
      237
     ]
    },
    "len": {
     "line number": [
      242,
      252
     ]
    },
    "os.path.split": {
     "line number": [
      260
     ]
    },
    "read_bem_solution": {
     "line number": [
      235
     ]
    },
    "str": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._to_forward_dict": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": {
    "Forward": {
     "line number": [
      752
     ]
    },
    "dict": {
     "line number": [
      750,
      757,
      760
     ]
    },
    "len": {
     "line number": [
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward._transform_orig_meg_coils": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      212,
      213
     ]
    },
    "numpy.dot": {
     "line number": [
      209,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.forward._make_forward.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._make_forward.make_forward_dipole": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      703
     ]
    },
    "VolSourceEstimate": {
     "line number": [
      731,
      737
     ]
    },
    "_complete_vol_src": {
     "line number": [
      679
     ]
    },
    "_make_discrete_source_space": {
     "line number": [
      680
     ]
    },
    "bool": {
     "line number": [
      693
     ]
    },
    "convert_forward_solution": {
     "line number": [
      687
     ]
    },
    "dict": {
     "line number": [
      677
     ]
    },
    "enumerate": {
     "line number": [
      725,
      736
     ]
    },
    "len": {
     "line number": [
      692,
      695,
      701,
      708,
      716,
      723,
      723,
      727,
      728
     ]
    },
    "mne.forward._make_forward.make_forward_solution": {
     "line number": [
      684
     ]
    },
    "numpy.allclose": {
     "line number": [
      710
     ]
    },
    "numpy.diff": {
     "line number": [
      709
     ]
    },
    "numpy.in1d": {
     "line number": [
      726
     ]
    },
    "numpy.logical_not": {
     "line number": [
      696,
      697
     ]
    },
    "numpy.newaxis": {
     "line number": [
      737
     ]
    },
    "numpy.unique": {
     "line number": [
      707
     ]
    },
    "numpy.zeros": {
     "line number": [
      723
     ]
    },
    "warn": {
     "line number": [
      711
     ]
    },
    "zip": {
     "line number": [
      696
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward.make_forward_solution": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "Info": {
     "line number": [
      567
     ]
    },
    "TypeError": {
     "line number": [
      568
     ]
    },
    "_compute_forwards": {
     "line number": [
      603
     ]
    },
    "_coord_frame_name": {
     "line number": [
      588
     ]
    },
    "_get_trans": {
     "line number": [
      562
     ]
    },
    "_merge_meg_eeg_fwds": {
     "line number": [
      607
     ]
    },
    "check_n_jobs": {
     "line number": [
      574
     ]
    },
    "isinstance": {
     "line number": [
      563,
      567,
      569,
      580
     ]
    },
    "mne.forward._make_forward._prepare_for_forward": {
     "line number": [
      592
     ]
    },
    "mne.forward._make_forward._to_forward_dict": {
     "line number": [
      607,
      608
     ]
    },
    "os.path.split": {
     "line number": [
      570
     ]
    },
    "read_info": {
     "line number": [
      571
     ]
    },
    "str": {
     "line number": [
      567,
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward._make_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._make_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward._make_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward._make_forward.use_coil_def": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      765
     ]
    },
    "mne.forward._make_forward._extra_coil_def_fname": {
     "line number": [
      790,
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests": {
  "data": {},
  "type": "module"
 },
 "mne.forward.tests.test_field_interpolation": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      29
     ]
    },
    "mne.forward.tests.test_field_interpolation.base_dir": {
     "line number": [
      25,
      26,
      27
     ]
    },
    "mne.forward.tests.test_field_interpolation.data_path": {
     "line number": [
      30,
      32
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      279
     ]
    },
    "os.path.dirname": {
     "line number": [
      24
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      26,
      27,
      30,
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.forward.tests.test_field_interpolation.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._comp_sum_eeg": {
  "data": {
   "shadows": "mne.forward._lead_dots._comp_sum_eeg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._comp_sums_meg": {
  "data": {
   "shadows": "mne.forward._lead_dots._comp_sums_meg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._create_meg_coils": {
  "data": {
   "shadows": "mne.forward._make_forward._create_meg_coils"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._do_cross_dots": {
  "data": {
   "shadows": "mne.forward._lead_dots._do_cross_dots"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._get_legen_table": {
  "data": {
   "shadows": "mne.forward._lead_dots._get_legen_table"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._make_surface_mapping": {
  "data": {
   "shadows": "mne.forward._make_surface_mapping"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._setup_args": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      218
     ]
    },
    "lut_fun": {
     "line number": [
      216,
      219
     ]
    },
    "mne.forward._field_interpolation._setup_dots": {
     "line number": [
      216
     ]
    },
    "mne.forward._make_forward._create_meg_coils": {
     "line number": [
      215
     ]
    },
    "numpy.array": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation._setup_dots": {
  "data": {
   "shadows": "mne.forward._field_interpolation._setup_dots"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.base_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.data_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.evoked_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.get_head_surf": {
  "data": {
   "shadows": "mne.surface.get_head_surf"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.get_meg_helmet_surf": {
  "data": {
   "shadows": "mne.surface.get_meg_helmet_surf"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.legendre": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.make_field_map": {
  "data": {
   "shadows": "mne.forward.make_field_map"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.raw_ctf_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.test_as_meg_type_evoked": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      235,
      237
     ]
    },
    "all": {
     "line number": [
      245,
      275
     ]
    },
    "events": {
     "line number": [
      228,
      232
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      223
     ]
    },
    "mne.forward._lead_dots._do_cross_dots": {
     "line number": [
      259,
      260
     ]
    },
    "mne.forward.tests.test_field_interpolation._setup_args": {
     "line number": [
      254,
      254
     ]
    },
    "mne.forward.tests.test_field_interpolation.mne": {
     "line number": [
      228,
      232
     ]
    },
    "mne.forward.tests.test_field_interpolation.pytest": {
     "line number": [
      235,
      237
     ]
    },
    "mne.forward.tests.test_field_interpolation.raw_fname": {
     "line number": [
      227
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      227
     ]
    },
    "mne.pick_types": {
     "line number": [
      229
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      268
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      276
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_field_map_ctf": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "events": {
     "line number": [
      40,
      41
     ]
    },
    "mne.Epochs": {
     "line number": [
      41
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      35
     ]
    },
    "mne.forward.make_field_map": {
     "line number": [
      44
     ]
    },
    "mne.forward.tests.test_field_interpolation.raw_ctf_fname": {
     "line number": [
      38
     ]
    },
    "mne.forward.tests.test_field_interpolation.subjects_dir": {
     "line number": [
      45
     ]
    },
    "mne.forward.tests.test_field_interpolation.trans_fname": {
     "line number": [
      44
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      38
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_legendre_table": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "mne.forward._lead_dots._get_legen_table": {
     "line number": [
      103,
      106
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      107,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_legendre_val": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "float": {
     "line number": [
      75
     ]
    },
    "lut_fun": {
     "line number": [
      63,
      71
     ]
    },
    "mne.forward._lead_dots._comp_sum_eeg": {
     "line number": [
      71
     ]
    },
    "mne.forward._lead_dots._comp_sums_meg": {
     "line number": [
      92,
      95
     ]
    },
    "mne.forward._lead_dots._get_legen_table": {
     "line number": [
      60,
      90,
      93
     ]
    },
    "numpy.arange": {
     "line number": [
      75
     ]
    },
    "numpy.cumprod": {
     "line number": [
      77
     ]
    },
    "numpy.empty": {
     "line number": [
      80
     ]
    },
    "numpy.linspace": {
     "line number": [
      52,
      61,
      91,
      94
     ]
    },
    "numpy.newaxis": {
     "line number": [
      75,
      75
     ]
    },
    "numpy.polynomial.legendre.legval": {
     "line number": [
      83
     ]
    },
    "numpy.polynomial.legendre.legvander": {
     "line number": [
      56
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      50
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      65,
      85
     ]
    },
    "numpy.zeros": {
     "line number": [
      76
     ]
    },
    "range": {
     "line number": [
      81,
      82
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      61,
      91,
      94
     ]
    },
    "zip": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_eeg": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      125
     ]
    },
    "ValueError": {
     "line number": [
      118
     ]
    },
    "len": {
     "line number": [
      130,
      132
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      111
     ]
    },
    "mne.forward._make_surface_mapping": {
     "line number": [
      118
     ]
    },
    "mne.forward.make_field_map": {
     "line number": [
      121,
      125,
      128
     ]
    },
    "mne.forward.tests.test_field_interpolation.evoked_fname": {
     "line number": [
      114
     ]
    },
    "mne.forward.tests.test_field_interpolation.pytest": {
     "line number": [
      118,
      125
     ]
    },
    "mne.forward.tests.test_field_interpolation.subjects_dir": {
     "line number": [
      116,
      122,
      126,
      129
     ]
    },
    "mne.forward.tests.test_field_interpolation.trans_fname": {
     "line number": [
      121,
      128
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      114
     ]
    },
    "mne.surface.get_head_surf": {
     "line number": [
      116
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_meeg": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "len": {
     "line number": [
      202,
      202
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      187
     ]
    },
    "mne.forward.make_field_map": {
     "line number": [
      195
     ]
    },
    "mne.forward.tests.test_field_interpolation.evoked_fname": {
     "line number": [
      190
     ]
    },
    "mne.forward.tests.test_field_interpolation.subjects_dir": {
     "line number": [
      196
     ]
    },
    "mne.forward.tests.test_field_interpolation.trans_fname": {
     "line number": [
      195
     ]
    },
    "mne.pick_types": {
     "line number": [
      191
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      190
     ]
    },
    "numpy.sqrt": {
     "line number": [
      207,
      209
     ]
    },
    "numpy.sum": {
     "line number": [
      207,
      209
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      204,
      205,
      207,
      209
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      197,
      198,
      202
     ]
    },
    "zip": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_meg": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      156,
      160
     ]
    },
    "RuntimeError": {
     "line number": [
      151
     ]
    },
    "ValueError": {
     "line number": [
      145,
      147,
      172,
      183
     ]
    },
    "len": {
     "line number": [
      168,
      170,
      179,
      181
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      135
     ]
    },
    "mne.forward._make_surface_mapping": {
     "line number": [
      145,
      147,
      151,
      156,
      160
     ]
    },
    "mne.forward.make_field_map": {
     "line number": [
      166,
      172,
      177,
      183
     ]
    },
    "mne.forward.tests.test_field_interpolation.evoked_fname": {
     "line number": [
      139
     ]
    },
    "mne.forward.tests.test_field_interpolation.pytest": {
     "line number": [
      145,
      147,
      151,
      156,
      160,
      172,
      183,
      136
     ]
    },
    "mne.forward.tests.test_field_interpolation.subjects_dir": {
     "line number": [
      167,
      178,
      184
     ]
    },
    "mne.forward.tests.test_field_interpolation.trans_fname": {
     "line number": [
      177,
      184
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      139
     ]
    },
    "mne.surface.get_meg_helmet_surf": {
     "line number": [
      141
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      169,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.trans_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.forward.tests.test_forward.data_path": {
     "line number": [
      24,
      26
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      451
     ]
    },
    "os.path.dirname": {
     "line number": [
      29
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      26,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.forward.tests.test_forward.Forward": {
  "data": {
   "shadows": "mne.forward.Forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.apply_forward": {
  "data": {
   "shadows": "mne.apply_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.apply_forward_raw": {
  "data": {
   "shadows": "mne.apply_forward_raw"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_forward_allclose": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      35,
      38,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.average_forward_solutions": {
  "data": {
   "shadows": "mne.average_forward_solutions"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.compute_depth_prior": {
  "data": {
   "shadows": "mne.forward.compute_depth_prior"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.compute_orient_prior": {
  "data": {
   "shadows": "mne.forward.compute_orient_prior"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.fname_evoked": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_meeg": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_meeg_grad": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.is_fixed_orient": {
  "data": {
   "shadows": "mne.forward.is_fixed_orient"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.restrict_forward_to_label": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_label"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.restrict_forward_to_stc": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_stc"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.test_apply_forward": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      207,
      222,
      228
     ]
    },
    "isinstance": {
     "line number": [
      196
     ]
    },
    "len": {
     "line number": [
      199,
      199
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      200
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      219
     ]
    },
    "mne.apply_forward": {
     "line number": [
      208,
      223
     ]
    },
    "mne.apply_forward_raw": {
     "line number": [
      229
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      193
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      183
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      196
     ]
    },
    "mne.forward.tests.test_forward.fname_evoked": {
     "line number": [
      205
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      192
     ]
    },
    "mne.forward.tests.test_forward.pytest": {
     "line number": [
      207,
      222,
      228
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      195
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      205
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      192
     ]
    },
    "numpy.abs": {
     "line number": [
      224
     ]
    },
    "numpy.newaxis": {
     "line number": [
      220,
      220
     ]
    },
    "numpy.ones": {
     "line number": [
      199
     ]
    },
    "numpy.sum": {
     "line number": [
      202,
      214,
      235
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      225,
      237,
      238
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      213,
      214,
      215,
      216,
      234,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_average_forward_solution": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      368,
      378
     ]
    },
    "ValueError": {
     "line number": [
      370,
      372,
      374,
      376
     ]
    },
    "isinstance": {
     "line number": [
      382
     ]
    },
    "mne.average_forward_solutions": {
     "line number": [
      368,
      370,
      372,
      374,
      376,
      378,
      381,
      394,
      401
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      362
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      382
     ]
    },
    "mne.forward.tests.test_forward.assert_forward_allclose": {
     "line number": [
      402
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      366,
      389
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg_grad": {
     "line number": [
      400
     ]
    },
    "mne.forward.tests.test_forward.pytest": {
     "line number": [
      368,
      370,
      372,
      374,
      376,
      378
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      366,
      400
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      363
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      391
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      388
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      383,
      395
     ]
    },
    "str": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_convert_forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      59,
      65,
      76,
      82
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      61,
      63,
      71,
      79
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      51
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      59,
      65,
      76,
      82
     ]
    },
    "mne.forward.is_fixed_orient": {
     "line number": [
      77
     ]
    },
    "mne.forward.tests.test_forward.assert_forward_allclose": {
     "line number": [
      66,
      83
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg_grad": {
     "line number": [
      54
     ]
    },
    "mne.forward.tests.test_forward.gc": {
     "line number": [
      68,
      74,
      85
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      54
     ]
    },
    "repr": {
     "line number": [
      55,
      64,
      75,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_equalize_channels": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "mne.channels.equalize_channels": {
     "line number": [
      446
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      440
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      443
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_io_forward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      102,
      120,
      139,
      159,
      172,
      174
     ]
    },
    "isinstance": {
     "line number": [
      95,
      126,
      145,
      165
     ]
    },
    "len": {
     "line number": [
      100,
      111,
      112,
      134,
      135,
      154,
      155
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      97,
      106,
      108,
      118,
      123,
      130,
      142,
      150,
      162
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      89
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      95,
      126,
      145,
      165
     ]
    },
    "mne.forward.is_fixed_orient": {
     "line number": [
      127,
      146,
      166
     ]
    },
    "mne.forward.tests.test_forward.assert_forward_allclose": {
     "line number": [
      128,
      147,
      167,
      180
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      117,
      177
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg_grad": {
     "line number": [
      94,
      96,
      105,
      149,
      170
     ]
    },
    "mne.forward.tests.test_forward.pytest": {
     "line number": [
      102,
      120,
      139,
      159,
      172,
      174,
      88
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      94,
      96,
      105,
      107,
      117,
      122,
      141,
      149,
      161,
      170,
      175,
      177,
      179
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      103,
      121,
      140,
      160,
      173,
      178
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      115
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      99,
      100,
      110,
      111,
      112,
      133,
      134,
      135,
      153,
      154,
      155
     ]
    },
    "repr": {
     "line number": [
      125,
      144,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_priors": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      417,
      419,
      429,
      434,
      436
     ]
    },
    "all": {
     "line number": [
      433
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      421,
      431
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      405
     ]
    },
    "mne.forward.compute_depth_prior": {
     "line number": [
      413,
      415,
      418,
      420,
      422
     ]
    },
    "mne.forward.compute_orient_prior": {
     "line number": [
      425,
      427,
      430,
      432,
      435,
      437
     ]
    },
    "mne.forward.is_fixed_orient": {
     "line number": [
      410
     ]
    },
    "mne.forward.tests.test_forward.fname_evoked": {
     "line number": [
      412
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      409
     ]
    },
    "mne.forward.tests.test_forward.pytest": {
     "line number": [
      417,
      419,
      429,
      434,
      436
     ]
    },
    "mne.io.read_info": {
     "line number": [
      412
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      409
     ]
    },
    "numpy.in1d": {
     "line number": [
      433
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      416,
      426,
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_restrict_forward_to_label": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "len": {
     "line number": [
      321,
      321,
      322,
      323,
      348,
      348,
      349,
      350
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      300
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      296
     ]
    },
    "mne.forward.restrict_forward_to_label": {
     "line number": [
      309,
      335
     ]
    },
    "mne.forward.tests.test_forward.assert_forward_allclose": {
     "line number": [
      359
     ]
    },
    "mne.forward.tests.test_forward.data_path": {
     "line number": [
      304,
      330
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      299,
      327
     ]
    },
    "mne.label.read_label": {
     "line number": [
      306,
      307,
      332,
      333
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      302,
      328
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      299,
      327,
      358
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      357
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      311,
      316,
      337,
      342
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      312,
      317,
      338,
      343
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      321,
      322,
      323,
      324,
      325,
      347,
      349,
      350,
      351,
      352
     ]
    },
    "os.path.join": {
     "line number": [
      304,
      306,
      307,
      330,
      332,
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_restrict_forward_to_stc": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      288
     ]
    },
    "isinstance": {
     "line number": [
      261
     ]
    },
    "len": {
     "line number": [
      257,
      257,
      274,
      274
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      258,
      275
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      252,
      270,
      291
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      242
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      261
     ]
    },
    "mne.forward.restrict_forward_to_stc": {
     "line number": [
      260,
      277
     ]
    },
    "mne.forward.tests.test_forward.assert_forward_allclose": {
     "line number": [
      293
     ]
    },
    "mne.forward.tests.test_forward.fname_meeg": {
     "line number": [
      251,
      269
     ]
    },
    "mne.forward.tests.test_forward.pytest": {
     "line number": [
      288
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      254,
      271
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      251,
      269,
      290
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      289
     ]
    },
    "numpy.ones": {
     "line number": [
      257,
      274
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      263,
      264,
      265,
      266,
      267,
      279,
      280,
      281,
      282,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.write_forward_solution": {
  "data": {
   "shadows": "mne.write_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      31
     ]
    },
    "mne.forward.tests.test_make_forward.data_path": {
     "line number": [
      32,
      36,
      37,
      38,
      39,
      41
     ]
    },
    "mne.forward.tests.test_make_forward.os": {
     "line number": [
      41
     ]
    },
    "mne.forward.tests.test_make_forward.subjects_dir": {
     "line number": [
      42,
      43,
      45,
      46
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      472
     ]
    },
    "os.path.dirname": {
     "line number": [
      34
     ]
    },
    "os.path.join": {
     "line number": [
      32,
      34,
      36,
      37,
      38,
      39,
      42,
      43,
      45,
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.forward.tests.test_make_forward.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.Forward": {
  "data": {
   "shadows": "mne.forward.Forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._compare_forwards": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      57
     ]
    },
    "len": {
     "line number": [
      55,
      55,
      80,
      81
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      59,
      61
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      56
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      67,
      74,
      76,
      84,
      90
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      55,
      79,
      80,
      81
     ]
    },
    "slice": {
     "line number": [
      71,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._create_meg_coils": {
  "data": {
   "shadows": "mne.forward._make_forward._create_meg_coils"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._do_forward_solution": {
  "data": {
   "shadows": "mne.forward._do_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._magnetic_dipole_field_vec": {
  "data": {
   "shadows": "mne.forward._compute_forward._magnetic_dipole_field_vec"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_forward_allclose": {
  "data": {
   "shadows": "mne.forward.tests.test_forward.assert_forward_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.data_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fit_dipole": {
  "data": {
   "shadows": "mne.dipole.fit_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.fname_aseg": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_bem": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_bem_meg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_cov": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_dip": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_evo": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_meeg": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_raw": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_src": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_trans": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_forward_dipole": {
  "data": {
   "shadows": "mne.forward._make_forward.make_forward_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.setup_source_space": {
  "data": {
   "shadows": "mne.source_space.setup_source_space"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.subjects_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.test_forward_mixed_source_space": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      334,
      339
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      296
     ]
    },
    "mne.forward.tests.test_make_forward.fname_aseg": {
     "line number": [
      305,
      307,
      310
     ]
    },
    "mne.forward.tests.test_make_forward.fname_bem": {
     "line number": [
      318
     ]
    },
    "mne.forward.tests.test_make_forward.fname_raw": {
     "line number": [
      318
     ]
    },
    "mne.forward.tests.test_make_forward.fname_src": {
     "line number": [
      302
     ]
    },
    "mne.forward.tests.test_make_forward.fname_trans": {
     "line number": [
      318
     ]
    },
    "mne.forward.tests.test_make_forward.pytest": {
     "line number": [
      334,
      339,
      295
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD.all": {
     "line number": [
      328
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      318
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      302
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      307,
      310
     ]
    },
    "mne.source_space.get_volume_labels_from_aseg": {
     "line number": [
      305
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      297
     ]
    },
    "numpy.array": {
     "line number": [
      325
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      301
     ]
    },
    "repr": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_magnetic_dipole": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      112
     ]
    },
    "RuntimeWarning": {
     "line number": [
      114
     ]
    },
    "mne.forward._compute_forward._magnetic_dipole_field_vec": {
     "line number": [
      106,
      107,
      113,
      115,
      118
     ]
    },
    "mne.forward._make_forward._create_meg_coils": {
     "line number": [
      101
     ]
    },
    "mne.forward.tests.test_make_forward.fname_raw": {
     "line number": [
      98
     ]
    },
    "mne.forward.tests.test_make_forward.pytest": {
     "line number": [
      112,
      114
     ]
    },
    "mne.io.read_info": {
     "line number": [
      98
     ]
    },
    "mne.pick_info": {
     "line number": [
      100
     ]
    },
    "mne.pick_types": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      103
     ]
    },
    "numpy.errstate": {
     "line number": [
      117
     ]
    },
    "numpy.isfinite": {
     "line number": [
      116,
      119
     ]
    },
    "numpy.median": {
     "line number": [
      109
     ]
    },
    "numpy.newaxis": {
     "line number": [
      106,
      107
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      109
     ]
    },
    "zip": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_dipole": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      374,
      444
     ]
    },
    "ValueError": {
     "line number": [
      426
     ]
    },
    "isinstance": {
     "line number": [
      379,
      381,
      452
     ]
    },
    "len": {
     "line number": [
      364,
      438,
      438
     ]
    },
    "list": {
     "line number": [
      379
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      446
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      345
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      365,
      399,
      422,
      440
     ]
    },
    "mne.dipole.fit_dipole": {
     "line number": [
      391
     ]
    },
    "mne.forward._make_forward.make_forward_dipole": {
     "line number": [
      375,
      427,
      450
     ]
    },
    "mne.forward.tests.test_forward.assert_forward_allclose": {
     "line number": [
      448
     ]
    },
    "mne.forward.tests.test_make_forward.fname_bem": {
     "line number": [
      427
     ]
    },
    "mne.forward.tests.test_make_forward.fname_cov": {
     "line number": [
      351
     ]
    },
    "mne.forward.tests.test_make_forward.fname_dip": {
     "line number": [
      353
     ]
    },
    "mne.forward.tests.test_make_forward.fname_evo": {
     "line number": [
      350
     ]
    },
    "mne.forward.tests.test_make_forward.fname_trans": {
     "line number": [
      376,
      427,
      451
     ]
    },
    "mne.forward.tests.test_make_forward.pytest": {
     "line number": [
      374,
      426,
      444,
      344
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      371
     ]
    },
    "mne.pick_types": {
     "line number": [
      356
     ]
    },
    "mne.read_cov": {
     "line number": [
      351
     ]
    },
    "mne.read_dipole": {
     "line number": [
      353
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      350
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      447
     ]
    },
    "mne.simulation.simulate_evoked": {
     "line number": [
      388
     ]
    },
    "mne.source_estimate.VolSourceEstimate": {
     "line number": [
      381,
      452
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      445
     ]
    },
    "numpy.arange": {
     "line number": [
      364,
      438,
      453
     ]
    },
    "numpy.arccos": {
     "line number": [
      407
     ]
    },
    "numpy.array": {
     "line number": [
      435
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      404
     ]
    },
    "numpy.eye": {
     "line number": [
      437,
      437
     ]
    },
    "numpy.mean": {
     "line number": [
      405,
      407,
      408
     ]
    },
    "numpy.newaxis": {
     "line number": [
      435
     ]
    },
    "numpy.pi": {
     "line number": [
      406
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      348
     ]
    },
    "numpy.random.rand": {
     "line number": [
      434,
      436
     ]
    },
    "numpy.sort": {
     "line number": [
      364
     ]
    },
    "numpy.sqrt": {
     "line number": [
      405,
      408
     ]
    },
    "numpy.sum": {
     "line number": [
      405,
      407
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      412,
      453
     ]
    },
    "range": {
     "line number": [
      380
     ]
    },
    "str": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_no_meg": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      459
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      463
     ]
    },
    "mne.create_info": {
     "line number": [
      464
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      456
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      465
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      461
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      468
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      460
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      467
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      231
     ]
    },
    "isinstance": {
     "line number": [
      226,
      228
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      221
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      226,
      228
     ]
    },
    "mne.forward.tests.test_make_forward._compare_forwards": {
     "line number": [
      229
     ]
    },
    "mne.forward.tests.test_make_forward.fname_bem": {
     "line number": [
      225
     ]
    },
    "mne.forward.tests.test_make_forward.fname_bem_meg": {
     "line number": [
      233
     ]
    },
    "mne.forward.tests.test_make_forward.fname_meeg": {
     "line number": [
      227
     ]
    },
    "mne.forward.tests.test_make_forward.fname_raw": {
     "line number": [
      224,
      232
     ]
    },
    "mne.forward.tests.test_make_forward.fname_src": {
     "line number": [
      224,
      232
     ]
    },
    "mne.forward.tests.test_make_forward.fname_trans": {
     "line number": [
      224,
      232
     ]
    },
    "mne.forward.tests.test_make_forward.pytest": {
     "line number": [
      231,
      220
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      224,
      232
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_discrete": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      243
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      248
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      236
     ]
    },
    "mne.forward.tests.test_make_forward.fname_raw": {
     "line number": [
      246
     ]
    },
    "mne.forward.tests.test_make_forward.fname_trans": {
     "line number": [
      246
     ]
    },
    "mne.forward.tests.test_make_forward.subjects_dir": {
     "line number": [
      240
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      246
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      245
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      242
     ]
    },
    "mne.source_space.setup_source_space": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_kit": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      169
     ]
    },
    "isinstance": {
     "line number": [
      158,
      164
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      124
     ]
    },
    "mne.forward.Forward": {
     "line number": [
      158,
      164
     ]
    },
    "mne.forward._do_forward_solution": {
     "line number": [
      155,
      183,
      195,
      207
     ]
    },
    "mne.forward.tests.test_make_forward._compare_forwards": {
     "line number": [
      163,
      179,
      189,
      198,
      211,
      216
     ]
    },
    "mne.forward.tests.test_make_forward.fname_bem_meg": {
     "line number": [
      156,
      162,
      171,
      177,
      184,
      188,
      193,
      196,
      206,
      208
     ]
    },
    "mne.forward.tests.test_make_forward.fname_trans": {
     "line number": [
      192,
      195,
      205,
      207
     ]
    },
    "mne.forward.tests.test_make_forward.pytest": {
     "line number": [
      169,
      122,
      123
     ]
    },
    "mne.forward.tests.test_make_forward.subjects_dir": {
     "line number": [
      149,
      157,
      185,
      197,
      210
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      186
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      201
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      167
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      161,
      170,
      176,
      187,
      192,
      205
     ]
    },
    "mne.pick_info": {
     "line number": [
      174
     ]
    },
    "mne.pick_types": {
     "line number": [
      174
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      215
     ]
    },
    "mne.source_space.setup_source_space": {
     "line number": [
      149
     ]
    },
    "mne.source_space.write_source_spaces": {
     "line number": [
      151
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      125
     ]
    },
    "mne.write_forward_solution": {
     "line number": [
      214
     ]
    },
    "os.path.dirname": {
     "line number": [
      128,
      137,
      144
     ]
    },
    "os.path.join": {
     "line number": [
      128,
      130,
      131,
      132,
      133,
      134,
      135,
      137,
      139,
      140,
      141,
      142,
      144
     ]
    },
    "repr": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_sphere": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      291
     ]
    },
    "len": {
     "line number": [
      280,
      284
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      251
     ]
    },
    "mne.forward.tests.test_make_forward._compare_forwards": {
     "line number": [
      268,
      288
     ]
    },
    "mne.forward.tests.test_make_forward.fname_raw": {
     "line number": [
      262,
      266,
      281,
      286,
      292
     ]
    },
    "mne.forward.tests.test_make_forward.fname_trans": {
     "line number": [
      263,
      266,
      281,
      286,
      292
     ]
    },
    "mne.forward.tests.test_make_forward.pytest": {
     "line number": [
      291,
      253
     ]
    },
    "mne.forward.tests.test_make_forward.subjects_dir": {
     "line number": [
      257
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      266,
      281,
      286,
      292
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      265,
      283,
      290
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      273,
      274
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      264
     ]
    },
    "mne.source_space.setup_source_space": {
     "line number": [
      257
     ]
    },
    "mne.source_space.write_source_spaces": {
     "line number": [
      259
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      252
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      261
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      275
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      275
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      285
     ]
    },
    "zip": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.write_forward_solution": {
  "data": {
   "shadows": "mne.write_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.write_source_spaces": {
  "data": {
   "shadows": "mne.source_space.write_source_spaces"
  },
  "type": "import"
 },
 "mne.gui": {
  "data": {},
  "type": "module"
 },
 "mne.gui._backend": {
  "data": {},
  "type": "module"
 },
 "mne.gui._backend.ETSConfig": {
  "data": {
   "shadows": "traits.etsconfig.api.ETSConfig"
  },
  "type": "import"
 },
 "mne.gui._backend._check_backend": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "_check_pyqt5_version": {
     "line number": [
      37
     ]
    },
    "mne.gui._backend._get_pyface_backend": {
     "line number": [
      35
     ]
    },
    "pyface.api.warning": {
     "line number": [
      44
     ]
    },
    "warn": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._backend._get_pyface_backend": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "traits.etsconfig.api.ETSConfig.toolkit": {
     "line number": [
      30
     ]
    },
    "traitsui.toolkit.toolkit": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._backend._testing_mode": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "mne.gui._backend.os": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._backend.toolkit": {
  "data": {
   "shadows": "traitsui.toolkit.toolkit"
  },
  "type": "import"
 },
 "mne.gui._backend.warning": {
  "data": {
   "shadows": "pyface.api.warning"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui._coreg_gui.Action": {
  "data": {
   "shadows": "traitsui.menu.Action"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CANCEL": {
  "data": {
   "shadows": "pyface.api.CANCEL"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CancelButton": {
  "data": {
   "shadows": "traitsui.menu.CancelButton"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CoregFrame": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": {
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      1756
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      1754
     ]
    },
    "mne.gui._coreg_gui.CoregPanel": {
     "line number": [
      1761
     ]
    },
    "mne.gui._coreg_gui.DataPanel": {
     "line number": [
      1760
     ]
    },
    "mne.gui._coreg_gui._make_view": {
     "line number": [
      1798
     ]
    },
    "mne.gui._coreg_gui.queue": {
     "line number": [
      1796
     ]
    },
    "object": {
     "line number": [
      1793
     ]
    },
    "traits.api.Bool": {
     "line number": [
      1757,
      1758
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      1763,
      1764,
      1765,
      1766,
      1767,
      1768,
      1770,
      1771,
      1796
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      1751
     ]
    },
    "traits.api.Instance": {
     "line number": [
      1754,
      1756,
      1760,
      1761,
      1775,
      1776,
      1777,
      1778,
      1781,
      1782,
      1783,
      1784,
      1785,
      1786,
      1790,
      1791,
      1793
     ]
    },
    "traits.api.Property": {
     "line number": [
      1787
     ]
    },
    "traits.api.RGBColor": {
     "line number": [
      1779
     ]
    },
    "traits.api.Str": {
     "line number": [
      1772
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregFrame.__init__": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1864
     ]
    },
    "ValueError": {
     "line number": [
      1835,
      1859
     ]
    },
    "any": {
     "line number": [
      1849
     ]
    },
    "dict": {
     "line number": [
      1826
     ]
    },
    "mne.gui._coreg_gui.CoregFrame": {
     "line number": [
      1823
     ]
    },
    "mne.gui._coreg_gui.os": {
     "line number": [
      1839
     ]
    },
    "pyface.api.error": {
     "line number": [
      1865
     ]
    },
    "super": {
     "line number": [
      1823
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._coreg_panel_default": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.CoregPanel": {
     "line number": [
      1813
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._data_panel_default": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.DataPanel": {
     "line number": [
      1810
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._get_hsp_visible": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      2047
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._init_plot": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": {
    "PointObject": {
     "line number": [
      1901,
      1906,
      1912,
      1924,
      1931,
      1939,
      1952,
      1957,
      1962,
      1979,
      1985
     ]
    },
    "SurfaceObject": {
     "line number": [
      1886
     ]
    },
    "_toggle_mlab_render": {
     "line number": [
      1874,
      1996
     ]
    },
    "dict": {
     "line number": [
      1919
     ]
    },
    "mne.gui._coreg_gui.ViewOptionsPanel": {
     "line number": [
      1999
     ]
    },
    "mne.gui._coreg_gui.defaults": {
     "line number": [
      1877,
      1878,
      1879,
      1885,
      1900,
      1925,
      1926,
      1932,
      1932,
      1940,
      1941,
      1950,
      1951
     ]
    },
    "numpy.empty": {
     "line number": [
      1887,
      1887
     ]
    },
    "on_pick": {
     "line number": [
      1976
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      1872
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._model_default": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      1801
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_advanced_rendering_change": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": {
    "_get_3d_option": {
     "line number": [
      2032
     ]
    },
    "getattr": {
     "line number": [
      2018
     ]
    },
    "hasattr": {
     "line number": [
      2031
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      2016
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_fid_file_loaded": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      2099
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      2097
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_lock_change": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      2035
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._set_title": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      1868
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_hsp_axes": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      2064,
      2065
     ]
    },
    "numpy.eye": {
     "line number": [
      2064
     ]
    },
    "numpy.zeros": {
     "line number": [
      2065
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      2060
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_mri_axes": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      2055,
      2056
     ]
    },
    "numpy.eye": {
     "line number": [
      2055
     ]
    },
    "numpy.zeros": {
     "line number": [
      2056
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      2051
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_mri_obj": {
  "data": {
   "lineno": 2084,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      2089,
      2092
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      2084
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_projection_surf": {
  "data": {
   "lineno": 2069,
   "symbols_in_volume": {
    "_CheckInside": {
     "line number": [
      2077
     ]
    },
    "_DistanceQuery": {
     "line number": [
      2078
     ]
    },
    "dict": {
     "line number": [
      2075
     ]
    },
    "len": {
     "line number": [
      2071
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      2069
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame.save_config": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": {
    "s_c": {
     "line number": [
      2110,
      2111,
      2112,
      2117,
      2119,
      2120,
      2121,
      2122,
      2123,
      2124,
      2126,
      2127,
      2128,
      2129,
      2130,
      2131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame.save_config.s_c": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": {
    "set_config": {
     "line number": [
      2107
     ]
    },
    "str": {
     "line number": [
      2104,
      2107
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrameHandler": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": {
    "traitsui.api.Handler": {
     "line number": [
      875
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregFrameHandler.close": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      892
     ]
    },
    "Exception": {
     "line number": [
      897
     ]
    },
    "mne.gui._coreg_gui.warnings": {
     "line number": [
      898
     ]
    },
    "pyface.api.information": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrameHandler.object_title_changed": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "traits.api.Bool": {
     "line number": [
      154,
      185,
      186,
      191,
      192,
      194,
      199,
      201,
      203,
      205,
      207,
      209,
      211,
      213,
      236,
      238
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      233,
      234
     ]
    },
    "traits.api.Enum": {
     "line number": [
      158,
      184,
      187
     ]
    },
    "traits.api.Float": {
     "line number": [
      155,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      172,
      173,
      174,
      175,
      176,
      177,
      180,
      181,
      182,
      183
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      128
     ]
    },
    "traits.api.Instance": {
     "line number": [
      150,
      151,
      246
     ]
    },
    "traits.api.Int": {
     "line number": [
      178,
      179,
      215
     ]
    },
    "traits.api.List": {
     "line number": [
      170,
      171
     ]
    },
    "traits.api.Property": {
     "line number": [
      198,
      200,
      202,
      204,
      206,
      208,
      210,
      212,
      214,
      221,
      224,
      227,
      228,
      229,
      230,
      235,
      238,
      239,
      249,
      251,
      253,
      255,
      257,
      259,
      261,
      263,
      265,
      267,
      269,
      271,
      273,
      275,
      278,
      280,
      282,
      284,
      286,
      288,
      290,
      294,
      296,
      298,
      300,
      307,
      312,
      314
     ]
    },
    "traits.api.Str": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregModel._get_can_prepare_bem_model": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_can_save": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      329
     ]
    },
    "numpy.eye": {
     "line number": [
      329
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_changes": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "_angle_between_quats": {
     "line number": [
      382
     ]
    },
    "float": {
     "line number": [
      379,
      380
     ]
    },
    "numpy.array": {
     "line number": [
      379,
      380
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      381
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      382
     ]
    },
    "rot_to_quat": {
     "line number": [
      383,
      384
     ]
    },
    "rotation": {
     "line number": [
      383,
      384
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_fid_eval_str": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_eeg_data": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "len": {
     "line number": [
      359
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_fid_data": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_hpi_data": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "len": {
     "line number": [
      364
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_hsp_data": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "len": {
     "line number": [
      354
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_lpa_data": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      333,
      333
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_mri_data": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "len": {
     "line number": [
      349
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_nasion_data": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      337,
      337
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_rpa_data": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      341,
      341
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_head_mri_t": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      398
     ]
    },
    "rotation": {
     "line number": [
      397
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_hsp_trans": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      443
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_lpa_distance": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      552
     ]
    },
    "numpy.ravel": {
     "line number": [
      551
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_head_t": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      392
     ]
    },
    "rotation": {
     "line number": [
      391
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_trans": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_trans_noscale": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      437
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_n_icp_points": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      371
     ]
    },
    "len": {
     "line number": [
      369,
      373,
      374
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nasion_distance": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      557
     ]
    },
    "numpy.ravel": {
     "line number": [
      556
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_eeg": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      479
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_hpi": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      484
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_hsp": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      466
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_lpa": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      451
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_nasion": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      456
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_orig_hsp": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      474
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_rpa": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      461
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_orig_hsp_point_distance": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      594
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_point_distance": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "all": {
     "line number": [
      583
     ]
    },
    "len": {
     "line number": [
      572,
      572,
      577,
      577,
      582,
      582,
      583
     ]
    },
    "list": {
     "line number": [
      566,
      567
     ]
    },
    "numpy.concatenate": {
     "line number": [
      585,
      586
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      587
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_points_eval_str": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "len": {
     "line number": [
      615
     ]
    },
    "numpy.mean": {
     "line number": [
      607
     ]
    },
    "numpy.std": {
     "line number": [
      608
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_high_res_mri_points": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_low_res_mri_points": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_mri_points": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "len": {
     "line number": [
      413
     ]
    },
    "numpy.array": {
     "line number": [
      415
     ]
    },
    "pyface.api.error": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_raw_subject": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_rpa_distance": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      562
     ]
    },
    "numpy.ravel": {
     "line number": [
      561
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_high_res_mri_points": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      503
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_eeg_points": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      542
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_hpi": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      546
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_lpa": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      530
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_nasion": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      534
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_points": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      522
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_rpa": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      538
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_low_res_mri_points": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      489
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_lpa": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      509
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_nasion": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      513
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_rpa": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      517
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_orig_hsp_points": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      526
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._last_parameters_default": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "list": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._nearest_calc_default": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "_DistanceQuery": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._on_raw_subject_change": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._parameters_default": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "list": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._parameters_items_changed": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      816,
      820,
      824
     ]
    },
    "getattr": {
     "line number": [
      818,
      822,
      826
     ]
    },
    "mne.gui._coreg_gui.time": {
     "line number": [
      840
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      817
     ]
    },
    "setattr": {
     "line number": [
      819,
      823,
      827
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._rot_x_changed": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": {
    "numpy.deg2rad": {
     "line number": [
      845
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._rot_y_changed": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": {
    "numpy.deg2rad": {
     "line number": [
      848
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._rot_z_changed": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": {
    "numpy.deg2rad": {
     "line number": [
      851
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._scale_x_changed": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._scale_y_changed": {
  "data": {
   "lineno": 868
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._scale_z_changed": {
  "data": {
   "lineno": 871
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._setup_icp": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      687,
      688,
      690,
      694,
      697
     ]
    },
    "len": {
     "line number": [
      685,
      696,
      702,
      707
     ]
    },
    "list": {
     "line number": [
      678,
      679,
      680
     ]
    },
    "numpy.concatenate": {
     "line number": [
      708,
      709,
      710
     ]
    },
    "numpy.full": {
     "line number": [
      685,
      696,
      702,
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._trans_x_changed": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._trans_y_changed": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._trans_z_changed": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._update_nearest_calc": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_fiducials": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "fit_matched_points": {
     "line number": [
      669
     ]
    },
    "numpy.array": {
     "line number": [
      668
     ]
    },
    "numpy.concatenate": {
     "line number": [
      674
     ]
    },
    "numpy.vstack": {
     "line number": [
      662,
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_icp": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": {
    "all": {
     "line number": [
      741
     ]
    },
    "fit_matched_points": {
     "line number": [
      731
     ]
    },
    "getattr": {
     "line number": [
      744
     ]
    },
    "list": {
     "line number": [
      736
     ]
    },
    "mne.gui._coreg_gui.time": {
     "line number": [
      728
     ]
    },
    "pyface.api.GUI.process_events": {
     "line number": [
      727,
      747
     ]
    },
    "range": {
     "line number": [
      729
     ]
    },
    "setattr": {
     "line number": [
      726,
      750
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.get_scaling_job": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.os": {
     "line number": [
      761,
      762
     ]
    },
    "mne.gui._coreg_gui.re": {
     "line number": [
      763
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.load_trans": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "_ensure_trans": {
     "line number": [
      778
     ]
    },
    "read_trans": {
     "line number": [
      778
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.omit_hsp_points": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "float": {
     "line number": [
      645
     ]
    },
    "mne.gui._coreg_gui.warnings": {
     "line number": [
      655
     ]
    },
    "numpy.sum": {
     "line number": [
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.reset": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.busy": {
     "line number": [
      783
     ]
    },
    "numpy.inf": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.save_trans": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      810
     ]
    },
    "Transform": {
     "line number": [
      811
     ]
    },
    "write_trans": {
     "line number": [
      811
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.set_trans": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.busy": {
     "line number": [
      796
     ]
    },
    "rotation_angles": {
     "line number": [
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      1276
     ]
    },
    "mne.gui._coreg_gui.FittingOptionsPanel": {
     "line number": [
      1354
     ]
    },
    "mne.gui._coreg_gui._make_view_coreg_panel": {
     "line number": [
      1360
     ]
    },
    "mne.gui._coreg_gui.queue": {
     "line number": [
      1347,
      1347
     ]
    },
    "traits.api.Button": {
     "line number": [
      1279,
      1284,
      1285,
      1287,
      1288,
      1290,
      1291,
      1294,
      1295,
      1297,
      1298,
      1300,
      1301,
      1304,
      1305,
      1307,
      1308,
      1310,
      1311,
      1323,
      1324,
      1325,
      1326,
      1329,
      1330,
      1331,
      1332,
      1345,
      1346,
      1355
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      1280,
      1281,
      1283,
      1286,
      1289,
      1293,
      1296,
      1299,
      1303,
      1306,
      1309,
      1314,
      1315,
      1316,
      1317,
      1318,
      1319,
      1320,
      1321,
      1327,
      1333,
      1336,
      1337,
      1340,
      1341,
      1342,
      1343,
      1344
     ]
    },
    "traits.api.Float": {
     "line number": [
      1282,
      1292,
      1302
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      1273
     ]
    },
    "traits.api.Instance": {
     "line number": [
      1276,
      1347,
      1354
     ]
    },
    "traits.api.Int": {
     "line number": [
      1350
     ]
    },
    "traits.api.Property": {
     "line number": [
      1351
     ]
    },
    "traits.api.Str": {
     "line number": [
      1348,
      1349,
      1352
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregPanel.__init__": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.CoregPanel": {
     "line number": [
      1363
     ]
    },
    "super": {
     "line number": [
      1363
     ]
    },
    "threading.Thread": {
     "line number": [
      1410
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel.__init__.worker": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1378,
      1397
     ]
    },
    "make_bem_solution": {
     "line number": [
      1395
     ]
    },
    "mne.gui._coreg_gui.traceback": {
     "line number": [
      1380,
      1399
     ]
    },
    "scale_mri": {
     "line number": [
      1375
     ]
    },
    "write_bem_solution": {
     "line number": [
      1396
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._cancel_icp_fired": {
  "data": {
   "lineno": 1461
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._cancels_icp_fired": {
  "data": {
   "lineno": 1464
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_fid_fired": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.busy": {
     "line number": [
      1446
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_icp_fired": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.busy": {
     "line number": [
      1450
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_fid_fired": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.busy": {
     "line number": [
      1454
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_icp_fired": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.busy": {
     "line number": [
      1458
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fitting_options_panel_default": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.FittingOptionsPanel": {
     "line number": [
      1358
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_queue_status_text": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      1414
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_rotation": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1427
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      1425
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_translation": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1432
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      1430
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._n_scale_params_fired": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      1439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_params_fired": {
  "data": {
   "lineno": 1474
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_scale_fired": {
  "data": {
   "lineno": 1467
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_tr_fired": {
  "data": {
   "lineno": 1470
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_x_dec_fired": {
  "data": {
   "lineno": 1477
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_x_inc_fired": {
  "data": {
   "lineno": 1480
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_y_dec_fired": {
  "data": {
   "lineno": 1483
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_y_inc_fired": {
  "data": {
   "lineno": 1486
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_z_dec_fired": {
  "data": {
   "lineno": 1489
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_z_inc_fired": {
  "data": {
   "lineno": 1492
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_x_dec_fired": {
  "data": {
   "lineno": 1495
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_x_inc_fired": {
  "data": {
   "lineno": 1498
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_y_dec_fired": {
  "data": {
   "lineno": 1501
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_y_inc_fired": {
  "data": {
   "lineno": 1504
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_z_dec_fired": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_z_inc_fired": {
  "data": {
   "lineno": 1510
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_x_dec_fired": {
  "data": {
   "lineno": 1513
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_x_inc_fired": {
  "data": {
   "lineno": 1516
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_y_dec_fired": {
  "data": {
   "lineno": 1519
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_y_inc_fired": {
  "data": {
   "lineno": 1522
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_z_dec_fired": {
  "data": {
   "lineno": 1525
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_z_inc_fired": {
  "data": {
   "lineno": 1528
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": {
    "traits.api.Instance": {
     "line number": [
      905
     ]
    },
    "traitsui.api.Handler": {
     "line number": [
      902
     ]
    },
    "traitsui.api.UIInfo": {
     "line number": [
      905
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_fitting_options_changed": {
  "data": {
   "lineno": 910
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_fitting_options_panel_changed": {
  "data": {
   "lineno": 907
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_load_trans_changed": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      927
     ]
    },
    "mne.gui._coreg_gui.os": {
     "line number": [
      917
     ]
    },
    "pyface.api.FileDialog": {
     "line number": [
      920
     ]
    },
    "pyface.api.OK": {
     "line number": [
      922
     ]
    },
    "pyface.api.error": {
     "line number": [
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_save_changed": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      995
     ]
    },
    "RuntimeError": {
     "line number": [
      958
     ]
    },
    "_find_fiducials_files": {
     "line number": [
      939
     ]
    },
    "mne.gui._coreg_gui.NewMriDialog": {
     "line number": [
      963
     ]
    },
    "mne.gui._coreg_gui.os": {
     "line number": [
      975,
      986
     ]
    },
    "pyface.api.CANCEL": {
     "line number": [
      950,
      951
     ]
    },
    "pyface.api.FileDialog": {
     "line number": [
      977
     ]
    },
    "pyface.api.NO": {
     "line number": [
      955
     ]
    },
    "pyface.api.OK": {
     "line number": [
      981
     ]
    },
    "pyface.api.YES": {
     "line number": [
      953,
      989
     ]
    },
    "pyface.api.confirm": {
     "line number": [
      949,
      987
     ]
    },
    "pyface.api.error": {
     "line number": [
      996
     ]
    },
    "repr": {
     "line number": [
      958
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": {
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      1701
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      1700
     ]
    },
    "mne.gui._coreg_gui.ViewOptionsPanel": {
     "line number": [
      1709
     ]
    },
    "traits.api.Bool": {
     "line number": [
      1710
     ]
    },
    "traits.api.Button": {
     "line number": [
      1711,
      1716,
      1720
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      1702,
      1703,
      1704,
      1719
     ]
    },
    "traits.api.Float": {
     "line number": [
      1714
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      1696
     ]
    },
    "traits.api.Instance": {
     "line number": [
      1700,
      1701,
      1706,
      1707,
      1708,
      1709
     ]
    },
    "traits.api.Str": {
     "line number": [
      1722
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.DataPanel._fid_panel_default": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": {
    "FiducialsPanel": {
     "line number": [
      1728
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._file_change": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      1742
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._headview_default": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": {
    "HeadViewController": {
     "line number": [
      1731
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._omit_points_fired": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": {
    "_pl": {
     "line number": [
      1739
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._reset_omit_points_fired": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      1747
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._subject_panel_default": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": {
    "SubjectSelectorPanel": {
     "line number": [
      1725
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanelHandler": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": {
    "traits.api.Instance": {
     "line number": [
      1686
     ]
    },
    "traitsui.api.Handler": {
     "line number": [
      1683
     ]
    },
    "traitsui.api.UIInfo": {
     "line number": [
      1686
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.DataPanelHandler.object_view_options_changed": {
  "data": {
   "lineno": 1691
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanelHandler.object_view_options_panel_changed": {
  "data": {
   "lineno": 1688
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Directory": {
  "data": {
   "shadows": "traits.api.Directory"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.EnumEditor": {
  "data": {
   "shadows": "traitsui.api.EnumEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.FittingOptionsPanel": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1234
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      1197
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      1198,
      1199,
      1200,
      1201,
      1202,
      1203,
      1204,
      1205,
      1206,
      1207,
      1208,
      1209,
      1210,
      1211,
      1212,
      1213,
      1214,
      1215,
      1216
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      1194
     ]
    },
    "traits.api.Instance": {
     "line number": [
      1197
     ]
    },
    "traitsui.api.EnumEditor": {
     "line number": [
      1234
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      1219
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      1219,
      1224,
      1226,
      1228,
      1233,
      1242,
      1245,
      1248,
      1253,
      1257,
      1260
     ]
    },
    "traitsui.api.Spring": {
     "line number": [
      1222
     ]
    },
    "traitsui.api.VGrid": {
     "line number": [
      1219,
      1224,
      1233,
      1241,
      1242,
      1253
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      1218
     ]
    },
    "traitsui.api.View": {
     "line number": [
      1218
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.GUI": {
  "data": {
   "shadows": "pyface.api.GUI"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Group": {
  "data": {
   "shadows": "traitsui.api.Group"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.InstanceEditor": {
  "data": {
   "shadows": "traitsui.api.InstanceEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Label": {
  "data": {
   "shadows": "traitsui.api.Label"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.NO": {
  "data": {
   "shadows": "pyface.api.NO"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.NewMriDialog": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": {
    "traits.api.Bool": {
     "line number": [
      1540,
      1543,
      1544,
      1545
     ]
    },
    "traits.api.Directory": {
     "line number": [
      1536
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      1532
     ]
    },
    "traits.api.Property": {
     "line number": [
      1539,
      1540
     ]
    },
    "traits.api.Str": {
     "line number": [
      1537,
      1538,
      1542
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      1547,
      1550,
      1551
     ]
    },
    "traitsui.api.View": {
     "line number": [
      1547
     ]
    },
    "traitsui.menu.Action": {
     "line number": [
      1555
     ]
    },
    "traitsui.menu.CancelButton": {
     "line number": [
      1554
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.NewMriDialog._can_overwrite_changed": {
  "data": {
   "lineno": 1557
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog._get_subject_to_dir": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.os": {
     "line number": [
      1563
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      1561
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog._get_subject_to_exists": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.os": {
     "line number": [
      1569
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      1565
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog.update_dialog": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      1574
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.RGBColor": {
  "data": {
   "shadows": "traits.api.RGBColor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Spring": {
  "data": {
   "shadows": "traitsui.api.Spring"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.StatusItem": {
  "data": {
   "shadows": "traitsui.api.StatusItem"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.UIInfo": {
  "data": {
   "shadows": "traitsui.api.UIInfo"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.UndoButton": {
  "data": {
   "shadows": "traitsui.menu.UndoButton"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.VGrid": {
  "data": {
   "shadows": "traitsui.api.VGrid"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.ViewOptionsPanel": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": {
    "mne.gui._coreg_gui._pass": {
     "line number": [
      1673
     ]
    },
    "traits.api.Bool": {
     "line number": [
      1658,
      1659
     ]
    },
    "traits.api.Enum": {
     "line number": [
      1657
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      1647
     ]
    },
    "traits.api.Instance": {
     "line number": [
      1650,
      1651,
      1652,
      1653,
      1654,
      1655
     ]
    },
    "traits.api.RGBColor": {
     "line number": [
      1656
     ]
    },
    "traitsui.api.EnumEditor": {
     "line number": [
      1671
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      1679
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      1666,
      1667,
      1668,
      1669,
      1670,
      1674,
      1675,
      1677,
      1678,
      1679
     ]
    },
    "traitsui.api.Spring": {
     "line number": [
      1674,
      1676,
      1676,
      1679
     ]
    },
    "traitsui.api.VGrid": {
     "line number": [
      1670
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      1665
     ]
    },
    "traitsui.api.View": {
     "line number": [
      1664
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui._DEFAULT_PARAMETERS": {
  "data": {
   "lineno": 1270
  },
  "type": "constant"
 },
 "mne.gui._coreg_gui._make_view": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": {
    "mayavi.core.ui.mayavi_scene.MayaviScene": {
     "line number": [
      1608
     ]
    },
    "mne.gui._coreg_gui.CoregFrameHandler": {
     "line number": [
      1640
     ]
    },
    "mne.gui._coreg_gui._make_view_coreg_panel": {
     "line number": [
      1623
     ]
    },
    "mne.gui._coreg_gui._make_view_data_panel": {
     "line number": [
      1613
     ]
    },
    "traitsui.api.Group": {
     "line number": [
      1631
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      1630,
      1635
     ]
    },
    "traitsui.api.InstanceEditor": {
     "line number": [
      1613,
      1623
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      1607,
      1611,
      1621
     ]
    },
    "traitsui.api.StatusItem": {
     "line number": [
      1642,
      1643
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      1610,
      1620
     ]
    },
    "traitsui.api.View": {
     "line number": [
      1640
     ]
    },
    "traitsui.menu.NoButtons": {
     "line number": [
      1641
     ]
    },
    "tvtk.pyface.scene_editor.SceneEditor": {
     "line number": [
      1608
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._make_view_coreg_panel": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.CoregPanelHandler": {
     "line number": [
      1190
     ]
    },
    "traitsui.api.EnumEditor": {
     "line number": [
      1050
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      1049
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      1049,
      1053,
      1056,
      1058,
      1060,
      1064,
      1068,
      1070,
      1075,
      1078,
      1080,
      1087,
      1092,
      1097,
      1099,
      1103,
      1105,
      1106,
      1107,
      1111,
      1114,
      1115,
      1119,
      1122,
      1123,
      1127,
      1130,
      1131,
      1132,
      1136,
      1139,
      1140,
      1144,
      1147,
      1148,
      1154,
      1158,
      1161,
      1163,
      1167,
      1169,
      1171,
      1172,
      1174,
      1176,
      1180,
      1183,
      1185
     ]
    },
    "traitsui.api.Label": {
     "line number": [
      1072,
      1116,
      1141
     ]
    },
    "traitsui.api.Spring": {
     "line number": [
      1052,
      1062,
      1073,
      1083,
      1109,
      1117,
      1125,
      1134,
      1142,
      1150,
      1188
     ]
    },
    "traitsui.api.VGrid": {
     "line number": [
      1053,
      1087,
      1103,
      1172,
      1180
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      1047,
      1154
     ]
    },
    "traitsui.api.View": {
     "line number": [
      1047
     ]
    },
    "traitsui.menu.UndoButton": {
     "line number": [
      1189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._make_view_data_panel": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": {
    "mne.gui._coreg_gui.DataPanelHandler": {
     "line number": [
      1041
     ]
    },
    "traitsui.api.EnumEditor": {
     "line number": [
      1012
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      1015,
      1022,
      1035
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      1009,
      1011,
      1015,
      1019,
      1021,
      1024,
      1027,
      1029,
      1030,
      1032,
      1035,
      1037
     ]
    },
    "traitsui.api.Label": {
     "line number": [
      1023,
      1026
     ]
    },
    "traitsui.api.Spring": {
     "line number": [
      1035,
      1039
     ]
    },
    "traitsui.api.VGrid": {
     "line number": [
      1024
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      1008,
      1009,
      1011,
      1021,
      1035
     ]
    },
    "traitsui.api.View": {
     "line number": [
      1008
     ]
    },
    "traitsui.menu.UndoButton": {
     "line number": [
      1040
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._pass": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.busy": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "object": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.busy.__enter__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "pyface.api.GUI.set_busy": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.busy.__exit__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "pyface.api.GUI.set_busy": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.defaults": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "mne.gui._coreg_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui": {
  "data": {
   "symbols_in_volume": {
    "traitsui.api.HGroup": {
     "line number": [
      429
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      426,
      427,
      428,
      429,
      430,
      431
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      426
     ]
    },
    "traitsui.api.View": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui._fiducials_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.ArrayEditor": {
  "data": {
   "shadows": "traitsui.api.ArrayEditor"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Event": {
  "data": {
   "shadows": "traits.api.Event"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.FiducialsFrame": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "float": {
     "line number": [
      456
     ]
    },
    "mayavi.core.ui.mayavi_scene.MayaviScene": {
     "line number": [
      473
     ]
    },
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      449
     ]
    },
    "mne.gui._fiducials_gui.FiducialsPanel": {
     "line number": [
      453
     ]
    },
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
     "line number": [
      447
     ]
    },
    "mne.gui._fiducials_gui.defaults": {
     "line number": [
      456
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      436
     ]
    },
    "traits.api.Instance": {
     "line number": [
      447,
      449,
      450,
      452,
      453,
      455,
      457,
      458,
      459
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      472
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      472,
      476,
      479
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      475,
      476,
      479
     ]
    },
    "traitsui.api.View": {
     "line number": [
      472
     ]
    },
    "traitsui.menu.NoButtons": {
     "line number": [
      485
     ]
    },
    "tvtk.pyface.scene_editor.SceneEditor": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.FiducialsFrame.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "get_subjects_dir": {
     "line number": [
      491
     ]
    },
    "mne.gui._fiducials_gui.FiducialsFrame": {
     "line number": [
      489
     ]
    },
    "super": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._headview_default": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "HeadViewController": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._init_plot": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "PointObject": {
     "line number": [
      515,
      521,
      528
     ]
    },
    "SurfaceObject": {
     "line number": [
      509
     ]
    },
    "_toggle_mlab_render": {
     "line number": [
      501,
      535
     ]
    },
    "mne.gui._fiducials_gui.defaults": {
     "line number": [
      503,
      504,
      505,
      508
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._on_mri_src_change": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      541,
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._panel_default": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "mne.gui._fiducials_gui.FiducialsPanel": {
     "line number": [
      465
     ]
    },
    "mne.gui._fiducials_gui.view2": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._spanel_default": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "SubjectSelectorPanel": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "float": {
     "line number": [
      274
     ]
    },
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
     "line number": [
      260
     ]
    },
    "mne.gui._fiducials_gui.SetHandler": {
     "line number": [
      304
     ]
    },
    "mne.gui._fiducials_gui._SET_TOOLTIP": {
     "line number": [
      291
     ]
    },
    "object": {
     "line number": [
      283
     ]
    },
    "set": {
     "line number": [
      273
     ]
    },
    "traits.api.Array": {
     "line number": [
      274
     ]
    },
    "traits.api.Button": {
     "line number": [
      276,
      277,
      278
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      262,
      263,
      264,
      265,
      266,
      267,
      268,
      269,
      270,
      271
     ]
    },
    "traits.api.Enum": {
     "line number": [
      273
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      257
     ]
    },
    "traits.api.Instance": {
     "line number": [
      260,
      280,
      281,
      283
     ]
    },
    "traitsui.api.ArrayEditor": {
     "line number": [
      293
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      287,
      289,
      292,
      295
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      287,
      289,
      292,
      295,
      299,
      301
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      286
     ]
    },
    "traitsui.api.View": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.FiducialsPanel.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "mne.gui._fiducials_gui.FiducialsPanel": {
     "line number": [
      307
     ]
    },
    "super": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_pick": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      410
     ]
    },
    "enumerate": {
     "line number": [
      394
     ]
    },
    "len": {
     "line number": [
      364
     ]
    },
    "map": {
     "line number": [
      385,
      386
     ]
    },
    "range": {
     "line number": [
      375
     ]
    },
    "str": {
     "line number": [
      389,
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_pick.round_": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "round": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_set_change": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._reset_fid_fired": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._save_as_fired": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "mne.gui._fiducials_gui.os": {
     "line number": [
      351
     ]
    },
    "pyface.api.FileDialog": {
     "line number": [
      342
     ]
    },
    "pyface.api.OK": {
     "line number": [
      345
     ]
    },
    "pyface.api.YES": {
     "line number": [
      354
     ]
    },
    "pyface.api.confirm": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._save_fired": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_lpa": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_nasion": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_pos": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      312
     ]
    },
    "numpy.allclose": {
     "line number": [
      312
     ]
    },
    "setattr": {
     "line number": [
      313
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_rpa": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "float": {
     "line number": [
      68,
      69,
      70
     ]
    },
    "traits.api.Array": {
     "line number": [
      68,
      69,
      70
     ]
    },
    "traits.api.Bool": {
     "line number": [
      86
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      62,
      63,
      64,
      65,
      66,
      67
     ]
    },
    "traits.api.Event": {
     "line number": [
      72
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      40
     ]
    },
    "traits.api.Instance": {
     "line number": [
      57,
      58,
      59,
      60
     ]
    },
    "traits.api.Property": {
     "line number": [
      75,
      76,
      77,
      79,
      81
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_reset": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      126,
      128,
      130
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_save": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_save_as": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      136,
      137,
      138
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_default_fid_fname": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_fid_ok": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "all": {
     "line number": [
      160
     ]
    },
    "numpy.any": {
     "line number": [
      160
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._reset_fired": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._subject_changed": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      205
     ]
    },
    "RuntimeError": {
     "line number": [
      180
     ]
    },
    "Surf": {
     "line number": [
      197
     ]
    },
    "_find_fiducials_files": {
     "line number": [
      211
     ]
    },
    "_find_head_bem": {
     "line number": [
      175,
      176
     ]
    },
    "complete_surface_info": {
     "line number": [
      194
     ]
    },
    "decimate_surface": {
     "line number": [
      191
     ]
    },
    "dict": {
     "line number": [
      194
     ]
    },
    "float": {
     "line number": [
      208
     ]
    },
    "get_mni_fiducials": {
     "line number": [
      204
     ]
    },
    "len": {
     "line number": [
      188,
      212
     ]
    },
    "numpy.array": {
     "line number": [
      208
     ]
    },
    "pyface.api.error": {
     "line number": [
      179
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      167
     ]
    },
    "warn": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel.reset_fiducials": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel.save": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      112,
      115,
      118
     ]
    },
    "write_fiducials": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.SetHandler": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "traitsui.api.Handler": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.SetHandler.object_locked_changed": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      238
     ]
    },
    "mne.gui._fiducials_gui._color_children": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.SetHandler.object_set_changed": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui._SET_TOOLTIP": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "mne.gui._fiducials_gui._color_children": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      245,
      247,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.defaults": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.gui._fiducials_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.view2": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "mne.gui._file_traits": {
  "data": {},
  "type": "module"
 },
 "mne.gui._file_traits.Any": {
  "data": {
   "shadows": "traits.api.Any"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._file_traits.ArrayOrNone": {
  "data": {
   "shadows": "traits.api.ArrayOrNone"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DigSource": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "traits.api.Any": {
     "line number": [
      254
     ]
    },
    "traits.api.File": {
     "line number": [
      248
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      233
     ]
    },
    "traits.api.Int": {
     "line number": [
      256
     ]
    },
    "traits.api.Property": {
     "line number": [
      250,
      251,
      252,
      256,
      259,
      261,
      266,
      268,
      270,
      274,
      276
     ]
    },
    "traits.api.Str": {
     "line number": [
      250
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      279
     ]
    },
    "traitsui.api.View": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._file_traits.DigSource._cardinal_point": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._file_changed": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get__hsp_points": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "len": {
     "line number": [
      357
     ]
    },
    "numpy.array": {
     "line number": [
      355
     ]
    },
    "numpy.empty": {
     "line number": [
      357
     ]
    },
    "numpy.zeros": {
     "line number": [
      353
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get__info": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "_empty_info": {
     "line number": [
      302
     ]
    },
    "_fiducial_coords": {
     "line number": [
      319
     ]
    },
    "all": {
     "line number": [
      318
     ]
    },
    "dir_tree_find": {
     "line number": [
      295,
      297
     ]
    },
    "fiff_open": {
     "line number": [
      293
     ]
    },
    "isinstance": {
     "line number": [
      300
     ]
    },
    "len": {
     "line number": [
      295,
      297,
      320
     ]
    },
    "mne.gui._file_traits._append_fiducials": {
     "line number": [
      321
     ]
    },
    "pyface.api.error": {
     "line number": [
      305,
      330
     ]
    },
    "read_dig_fif": {
     "line number": [
      298
     ]
    },
    "read_info": {
     "line number": [
      296
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_eeg_points": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "len": {
     "line number": [
      394
     ]
    },
    "numpy.array": {
     "line number": [
      394
     ]
    },
    "numpy.empty": {
     "line number": [
      394,
      397
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_hpi_points": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "len": {
     "line number": [
      405
     ]
    },
    "numpy.array": {
     "line number": [
      405
     ]
    },
    "numpy.empty": {
     "line number": [
      405,
      408
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_inst_dir": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "os.path.dirname": {
     "line number": [
      341
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_inst_fname": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "os.path.basename": {
     "line number": [
      346
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_lpa": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_n_omitted": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      287
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_nasion": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_points": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_rpa": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.Directory": {
  "data": {
   "shadows": "traits.api.Directory"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DirectoryDialog": {
  "data": {
   "shadows": "pyface.api.DirectoryDialog"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Event": {
  "data": {
   "shadows": "traits.api.Event"
  },
  "type": "import"
 },
 "mne.gui._file_traits.FiducialsSource": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "float": {
     "line number": [
      214
     ]
    },
    "mne.gui._file_traits.fid_wildcard": {
     "line number": [
      211
     ]
    },
    "traits.api.ArrayOrNone": {
     "line number": [
      213,
      214
     ]
    },
    "traits.api.File": {
     "line number": [
      211
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      197
     ]
    },
    "traits.api.Property": {
     "line number": [
      212,
      213
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._file_traits.FiducialsSource._get_fname": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "os.path.basename": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.FiducialsSource._get_points": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      225
     ]
    },
    "_fiducial_coords": {
     "line number": [
      224
     ]
    },
    "os.path.exists": {
     "line number": [
      221
     ]
    },
    "pyface.api.error": {
     "line number": [
      226
     ]
    },
    "read_fiducials": {
     "line number": [
      224
     ]
    },
    "str": {
     "line number": [
      227
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._file_traits.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._file_traits.MRISubjectSource": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "traits.api.Bool": {
     "line number": [
      449,
      451
     ]
    },
    "traits.api.Directory": {
     "line number": [
      444
     ]
    },
    "traits.api.Enum": {
     "line number": [
      446
     ]
    },
    "traits.api.Event": {
     "line number": [
      440
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      429
     ]
    },
    "traits.api.List": {
     "line number": [
      445
     ]
    },
    "traits.api.Property": {
     "line number": [
      445,
      449,
      451,
      454
     ]
    },
    "traits.api.Str": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._file_traits.MRISubjectSource._emit_subject": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_can_create_fsaverage": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "os.path.exists": {
     "line number": [
      458
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_mri_dir": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "os.path.join": {
     "line number": [
      469
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_subject_has_bem": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "_mri_subject_has_bem": {
     "line number": [
      489
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_subjects": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "_is_mri_subject": {
     "line number": [
      477
     ]
    },
    "len": {
     "line number": [
      478
     ]
    },
    "mne.gui._file_traits.os": {
     "line number": [
      476
     ]
    },
    "os.path.isdir": {
     "line number": [
      474
     ]
    },
    "sorted": {
     "line number": [
      483
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource.create_fsaverage": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      493,
      499
     ]
    },
    "create_default_subject": {
     "line number": [
      503
     ]
    },
    "mne.gui._file_traits.get_fs_home": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._file_traits.ProgressDialog": {
  "data": {
   "shadows": "pyface.api.ProgressDialog"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._file_traits.SubjectSelectorPanel": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "mne.gui._file_traits.MRISubjectSource": {
     "line number": [
      518
     ]
    },
    "traits.api.Button": {
     "line number": [
      525
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      520,
      521,
      522,
      523
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      515
     ]
    },
    "traits.api.Instance": {
     "line number": [
      518
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      531,
      533,
      535
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      531
     ]
    },
    "traitsui.api.View": {
     "line number": [
      531
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._file_traits.SubjectSelectorPanel._create_fsaverage_fired": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      550
     ]
    },
    "pyface.api.ProgressDialog": {
     "line number": [
      544
     ]
    },
    "pyface.api.error": {
     "line number": [
      551
     ]
    },
    "str": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.SubjectSelectorPanel._subjects_dir_changed": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "pyface.api.information": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.Surf": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      141,
      142,
      143
     ]
    },
    "traits.api.Array": {
     "line number": [
      141,
      142,
      143
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._file_traits.SurfaceSource": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "mne.gui._file_traits.Surf": {
     "line number": [
      168
     ]
    },
    "traits.api.File": {
     "line number": [
      167
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      146
     ]
    },
    "traits.api.Instance": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._file_traits.SurfaceSource._surf_default": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "int": {
     "line number": [
      194
     ]
    },
    "mne.gui._file_traits.Surf": {
     "line number": [
      193
     ]
    },
    "numpy.empty": {
     "line number": [
      193,
      194,
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.SurfaceSource.read_file": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      181
     ]
    },
    "complete_surface_info": {
     "line number": [
      180
     ]
    },
    "mne.gui._file_traits.Surf": {
     "line number": [
      188
     ]
    },
    "os.path.exists": {
     "line number": [
      173
     ]
    },
    "pyface.api.error": {
     "line number": [
      182
     ]
    },
    "read_bem_surfaces": {
     "line number": [
      175
     ]
    },
    "read_surface": {
     "line number": [
      178
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._file_traits.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._file_traits._append_fiducials": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "mne.gui._file_traits._expand_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "os.path.abspath": {
     "line number": [
      43
     ]
    },
    "os.path.expanduser": {
     "line number": [
      43
     ]
    },
    "os.path.expandvars": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits._fs_home_problem": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "os.path.exists": {
     "line number": [
      113,
      117
     ]
    },
    "os.path.join": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits._get_root_home": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "check_fun": {
     "line number": [
      65,
      75
     ]
    },
    "get_config": {
     "line number": [
      64
     ]
    },
    "pyface.api.DirectoryDialog": {
     "line number": [
      72
     ]
    },
    "pyface.api.OK": {
     "line number": [
      73
     ]
    },
    "pyface.api.information": {
     "line number": [
      70
     ]
    },
    "set_config": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits._mne_root_problem": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "os.path.exists": {
     "line number": [
      129,
      133
     ]
    },
    "os.path.join": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._file_traits.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._file_traits.fid_wildcard": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.gui._file_traits.get_fs_home": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "mne.gui._file_traits._get_root_home": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._file_traits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._file_traits.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._file_traits.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui._file_traits.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._file_traits.set_fs_home": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "mne.gui._file_traits.get_fs_home": {
     "line number": [
      98
     ]
    },
    "mne.gui._file_traits.os": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._file_traits.trans_wildcard": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.gui._help": {
  "data": {},
  "type": "module"
 },
 "mne.gui._help.TextWrapper": {
  "data": {
   "shadows": "textwrap.TextWrapper"
  },
  "type": "import"
 },
 "mne.gui._help.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.gui._help.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._help.read_tooltips": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "format_": {
     "line number": [
      16
     ]
    },
    "mne.gui._help.json": {
     "line number": [
      14
     ]
    },
    "mne.gui._help.os": {
     "line number": [
      11,
      12
     ]
    },
    "open": {
     "line number": [
      13
     ]
    },
    "textwrap.TextWrapper": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._initialize_gui": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "_testing_mode": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui": {
  "data": {
   "symbols_in_volume": {
    "_get_pyface_backend": {
     "line number": [
      45
     ]
    },
    "mne.gui._kit2fiff_gui.sys": {
     "line number": [
      50
     ]
    },
    "range": {
     "line number": [
      43
     ]
    },
    "read_tooltips": {
     "line number": [
      61
     ]
    },
    "str": {
     "line number": [
      43
     ]
    },
    "traitsui.api.CheckListEditor": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui._kit2fiff_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.CheckListEditor": {
  "data": {
   "shadows": "traitsui.api.CheckListEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.ETSConfig": {
  "data": {
   "shadows": "traits.trait_base.ETSConfig"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.EnumEditor": {
  "data": {
   "shadows": "traitsui.api.EnumEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "mayavi.core.ui.mayavi_scene.MayaviScene": {
     "line number": [
      688
     ]
    },
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      680
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler": {
     "line number": [
      697
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffModel": {
     "line number": [
      679
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffPanel": {
     "line number": [
      683
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      676
     ]
    },
    "traits.api.Instance": {
     "line number": [
      679,
      680,
      681,
      682,
      683
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      685
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      685,
      687,
      690,
      693
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      685,
      687,
      690,
      693
     ]
    },
    "traitsui.api.View": {
     "line number": [
      685
     ]
    },
    "traitsui.menu.NoButtons": {
     "line number": [
      698
     ]
    },
    "tvtk.pyface.scene_editor.SceneEditor": {
     "line number": [
      688
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": {
    "traits.api.HasTraits.__init__": {
     "line number": [
      703
     ]
    },
    "traits.trait_base.ETSConfig.toolkit": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._headview_default": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "HeadViewController": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._kit2fiff_panel_default": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": {
    "mne.gui._kit2fiff_gui.Kit2FiffPanel": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._marker_panel_default": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "CombineMarkersPanel": {
     "line number": [
      745
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._model_default": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      714
     ]
    },
    "float": {
     "line number": [
      712
     ]
    },
    "get_config": {
     "line number": [
      708
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffModel": {
     "line number": [
      731
     ]
    },
    "mne.gui._kit2fiff_gui.os": {
     "line number": [
      708
     ]
    },
    "warn": {
     "line number": [
      715,
      721,
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame.save_config": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "set_config": {
     "line number": [
      750,
      752,
      754,
      756
     ]
    },
    "str": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "traitsui.api.Handler": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler.close": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      444
     ]
    },
    "pyface.api.information": {
     "line number": [
      438
     ]
    },
    "warn": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "list": {
     "line number": [
      87
     ]
    },
    "mne.gui._kit2fiff_gui.elp_wildcard": {
     "line number": [
      77
     ]
    },
    "mne.gui._kit2fiff_gui.hsp_wildcard": {
     "line number": [
      76
     ]
    },
    "mne.gui._kit2fiff_gui.kit_con_wildcard": {
     "line number": [
      74
     ]
    },
    "range": {
     "line number": [
      87
     ]
    },
    "traits.api.Array": {
     "line number": [
      111
     ]
    },
    "traits.api.Bool": {
     "line number": [
      75,
      112,
      118,
      122
     ]
    },
    "traits.api.Enum": {
     "line number": [
      78,
      83
     ]
    },
    "traits.api.File": {
     "line number": [
      74,
      76,
      77
     ]
    },
    "traits.api.Float": {
     "line number": [
      84
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      64
     ]
    },
    "traits.api.Instance": {
     "line number": [
      73
     ]
    },
    "traits.api.List": {
     "line number": [
      87,
      109
     ]
    },
    "traits.api.Property": {
     "line number": [
      80,
      81,
      82,
      91,
      94,
      95,
      96,
      99,
      100,
      101,
      104,
      105,
      108,
      109,
      110,
      111,
      112,
      115,
      116,
      117,
      118
     ]
    },
    "traits.api.Str": {
     "line number": [
      79,
      110,
      115,
      116,
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_can_save": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      130,
      130,
      131,
      131,
      135
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_can_test_stim": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_dev_head_trans": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "fit_matched_points": {
     "line number": [
      161
     ]
    },
    "len": {
     "line number": [
      150
     ]
    },
    "numpy.any": {
     "line number": [
      144
     ]
    },
    "numpy.eye": {
     "line number": [
      145
     ]
    },
    "pyface.api.error": {
     "line number": [
      153
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_elp": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      169
     ]
    },
    "numpy.empty": {
     "line number": [
      167
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_elp_raw": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      181
     ]
    },
    "ValueError": {
     "line number": [
      180
     ]
    },
    "_read_dig_points": {
     "line number": [
      178
     ]
    },
    "len": {
     "line number": [
      179,
      180
     ]
    },
    "pyface.api.error": {
     "line number": [
      183
     ]
    },
    "str": {
     "line number": [
      183
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_fid": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      194
     ]
    },
    "numpy.empty": {
     "line number": [
      192
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_fid_fname": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "mne.gui._kit2fiff_gui.os": {
     "line number": [
      200
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_head_dev_trans": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "scipy.linalg.inv": {
     "line number": [
      206
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      213
     ]
    },
    "numpy.any": {
     "line number": [
      210
     ]
    },
    "numpy.empty": {
     "line number": [
      211
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp_fname": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "mne.gui._kit2fiff_gui.os": {
     "line number": [
      219
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp_raw": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      243
     ]
    },
    "_decimate_points": {
     "line number": [
      241
     ]
    },
    "_read_dig_points": {
     "line number": [
      230
     ]
    },
    "len": {
     "line number": [
      231
     ]
    },
    "pyface.api.error": {
     "line number": [
      245
     ]
    },
    "pyface.api.information": {
     "line number": [
      240
     ]
    },
    "str": {
     "line number": [
      245
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_chs": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      255
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_chs_desc": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      262
     ]
    },
    "numpy.diff": {
     "line number": [
      262
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_data": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      283
     ]
    },
    "pyface.api.ProgressDialog": {
     "line number": [
      273
     ]
    },
    "pyface.api.error": {
     "line number": [
      285
     ]
    },
    "str": {
     "line number": [
      286
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_mrk": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      296
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_polhemus_neuromag_trans": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      302
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      303
     ]
    },
    "numpy.dot": {
     "line number": [
      304
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_raw": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      323
     ]
    },
    "RawKIT": {
     "line number": [
      311
     ]
    },
    "pyface.api.error": {
     "line number": [
      326
     ]
    },
    "pyface.api.warning": {
     "line number": [
      314
     ]
    },
    "str": {
     "line number": [
      327
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_sqd_fname": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "mne.gui._kit2fiff_gui.os": {
     "line number": [
      334
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_array": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      349
     ]
    },
    "TypeError": {
     "line number": [
      348
     ]
    },
    "_default_stim_chs": {
     "line number": [
      343
     ]
    },
    "eval": {
     "line number": [
      346
     ]
    },
    "numpy": {
     "line number": [
      346
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      338
     ]
    },
    "vars": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_comment": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "len": {
     "line number": [
      366
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_ok": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.clear_all": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.get_event_info": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "_find_events": {
     "line number": [
      396
     ]
    },
    "_make_stim_channel": {
     "line number": [
      393
     ]
    },
    "collections.Counter": {
     "line number": [
      398
     ]
    },
    "events": {
     "line number": [
      396,
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.get_raw": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "RawKIT": {
     "line number": [
      416
     ]
    },
    "RuntimeError": {
     "line number": [
      411
     ]
    },
    "Transform": {
     "line number": [
      425
     ]
    },
    "ValueError": {
     "line number": [
      403
     ]
    },
    "_make_dig_points": {
     "line number": [
      422
     ]
    },
    "numpy.any": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      480
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffModel": {
     "line number": [
      452
     ]
    },
    "mne.gui._kit2fiff_gui.queue": {
     "line number": [
      488,
      488
     ]
    },
    "mne.gui._kit2fiff_gui.tooltips": {
     "line number": [
      497,
      500,
      503,
      508,
      513,
      523,
      525,
      531
     ]
    },
    "mne.gui._kit2fiff_gui.use_editor": {
     "line number": [
      507
     ]
    },
    "pyface.api.error": {
     "line number": [
      493
     ]
    },
    "traits.api.Button": {
     "line number": [
      473,
      474,
      477,
      486,
      487
     ]
    },
    "traits.api.DelegatesTo": {
     "line number": [
      455,
      456,
      457,
      458,
      459,
      460,
      461,
      462,
      463,
      464,
      467,
      468,
      469,
      470,
      471,
      472
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      449
     ]
    },
    "traits.api.Instance": {
     "line number": [
      452,
      480,
      481,
      482,
      483,
      488
     ]
    },
    "traits.api.Int": {
     "line number": [
      491
     ]
    },
    "traits.api.Property": {
     "line number": [
      492
     ]
    },
    "traits.api.Str": {
     "line number": [
      489,
      490,
      492,
      493
     ]
    },
    "traitsui.api.EnumEditor": {
     "line number": [
      514,
      519
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      532,
      538
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      496,
      498,
      499,
      501,
      502,
      504,
      505,
      507,
      510,
      512,
      518,
      524,
      528,
      530,
      532,
      534,
      538,
      540,
      541,
      542
     ]
    },
    "traitsui.api.TextEditor": {
     "line number": [
      526
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      496,
      496,
      510
     ]
    },
    "traitsui.api.View": {
     "line number": [
      495
     ]
    },
    "traitsui.api.spring": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel.__init__": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "PointObject": {
     "line number": [
      576,
      579,
      583
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffPanel": {
     "line number": [
      547
     ]
    },
    "super": {
     "line number": [
      547
     ]
    },
    "threading.Thread": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel.__init__.worker": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      560
     ]
    },
    "mne.gui._kit2fiff_gui.os": {
     "line number": [
      553
     ]
    },
    "str": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._clear_all_fired": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._get_queue_len_str": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._plot_raw_fired": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._reset_dig_fired": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._save_as_fired": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      627
     ]
    },
    "mne.gui._kit2fiff_gui.os": {
     "line number": [
      632,
      648
     ]
    },
    "pyface.api.FileDialog": {
     "line number": [
      638
     ]
    },
    "pyface.api.OK": {
     "line number": [
      642
     ]
    },
    "pyface.api.YES": {
     "line number": [
      651
     ]
    },
    "pyface.api.confirm": {
     "line number": [
      649
     ]
    },
    "pyface.api.error": {
     "line number": [
      628
     ]
    },
    "str": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._test_stim_fired": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      660
     ]
    },
    "events": {
     "line number": [
      659,
      666,
      671,
      672
     ]
    },
    "len": {
     "line number": [
      666
     ]
    },
    "pyface.api.error": {
     "line number": [
      661
     ]
    },
    "pyface.api.information": {
     "line number": [
      667,
      673
     ]
    },
    "sorted": {
     "line number": [
      671
     ]
    },
    "str": {
     "line number": [
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._update_elp": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      604
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._update_fid": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      592
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._update_hsp": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      598
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.ProgressDialog": {
  "data": {
   "shadows": "pyface.api.ProgressDialog"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.TextEditor": {
  "data": {
   "shadows": "traitsui.api.TextEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.elp_wildcard": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.hsp_wildcard": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.kit_con_wildcard": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.spring": {
  "data": {
   "shadows": "traitsui.api.spring"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.tooltips": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.use_editor": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.warning": {
  "data": {
   "shadows": "pyface.api.warning"
  },
  "type": "import"
 },
 "mne.gui._marker_gui": {
  "data": {
   "symbols_in_volume": {
    "_get_pyface_backend": {
     "line number": [
      28
     ]
    },
    "mne.gui._marker_gui.sys": {
     "line number": [
      36
     ]
    },
    "mne.gui._marker_gui.use_editor_h": {
     "line number": [
      64
     ]
    },
    "mne.gui._marker_gui.use_editor_v": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      45,
      46
     ]
    },
    "str": {
     "line number": [
      45,
      46
     ]
    },
    "traitsui.api.CheckListEditor": {
     "line number": [
      45,
      46
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      51,
      56,
      66
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      50,
      52,
      56,
      57,
      63,
      64,
      66,
      67,
      68,
      70,
      71
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      49,
      62,
      75
     ]
    },
    "traitsui.api.View": {
     "line number": [
      48,
      61,
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui._marker_gui.Action": {
  "data": {
   "shadows": "traitsui.menu.Action"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.ArrayOrNone": {
  "data": {
   "shadows": "traits.api.ArrayOrNone"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CancelButton": {
  "data": {
   "shadows": "traitsui.menu.CancelButton"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CheckListEditor": {
  "data": {
   "shadows": "traitsui.api.CheckListEditor"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CombineMarkersModel": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "mne.gui._marker_gui.MarkerPointDest": {
     "line number": [
      333
     ]
    },
    "mne.gui._marker_gui.MarkerPointSource": {
     "line number": [
      331,
      332
     ]
    },
    "traits.api.Button": {
     "line number": [
      335
     ]
    },
    "traits.api.File": {
     "line number": [
      329,
      330
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      326
     ]
    },
    "traits.api.Instance": {
     "line number": [
      329,
      330,
      331,
      332,
      333
     ]
    },
    "traits.api.Property": {
     "line number": [
      338
     ]
    },
    "traits.api.Str": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersModel._clear_fired": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._get_distance": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      363,
      364
     ]
    },
    "numpy.sqrt": {
     "line number": [
      367
     ]
    },
    "numpy.sum": {
     "line number": [
      367
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk1_default": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "mne.gui._marker_gui.MarkerPointSource": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk1_file_default": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk2_default": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "mne.gui._marker_gui.MarkerPointSource": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk2_file_default": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk3_default": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "mne.gui._marker_gui.MarkerPointDest": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      384
     ]
    },
    "mne.gui._marker_gui.CombineMarkersModel": {
     "line number": [
      375
     ]
    },
    "mne.gui._marker_gui.MarkerPointDest": {
     "line number": [
      380
     ]
    },
    "mne.gui._marker_gui.MarkerPointSource": {
     "line number": [
      378,
      379
     ]
    },
    "traits.api.Array": {
     "line number": [
      389
     ]
    },
    "traits.api.Float": {
     "line number": [
      385
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      372
     ]
    },
    "traits.api.Instance": {
     "line number": [
      375,
      378,
      379,
      380,
      384,
      386,
      387,
      388
     ]
    },
    "traits.api.Str": {
     "line number": [
      381
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      391,
      392,
      395,
      396,
      399,
      401,
      402
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      391,
      391,
      395,
      399,
      401
     ]
    },
    "traitsui.api.View": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersPanel.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "PointObject": {
     "line number": [
      421,
      427,
      433
     ]
    },
    "mne.gui._marker_gui.CombineMarkersPanel": {
     "line number": [
      417
     ]
    },
    "super": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk1_default": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk2_default": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk3_default": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._update_mrk1": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      442
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._update_mrk2": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      448
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._update_mrk3": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      454
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.MarkerPointDest": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      218
     ]
    },
    "float": {
     "line number": [
      220
     ]
    },
    "mne.gui._marker_gui.MarkerPointSource": {
     "line number": [
      214,
      215
     ]
    },
    "mne.gui._marker_gui.MarkerPoints": {
     "line number": [
      211
     ]
    },
    "traits.api.ArrayOrNone": {
     "line number": [
      220
     ]
    },
    "traits.api.Bool": {
     "line number": [
      223
     ]
    },
    "traits.api.Enum": {
     "line number": [
      225
     ]
    },
    "traits.api.Instance": {
     "line number": [
      214,
      215
     ]
    },
    "traits.api.Property": {
     "line number": [
      217,
      218,
      220,
      223
     ]
    },
    "traits.api.Str": {
     "line number": [
      217,
      218
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      229,
      230
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      229
     ]
    },
    "traitsui.api.View": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_dir": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "traits.api.cached_property": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_enabled": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      268
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_name": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "len": {
     "line number": [
      254,
      255
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_points": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      312,
      315,
      318,
      321
     ]
    },
    "fit_matched_points": {
     "line number": [
      306
     ]
    },
    "len": {
     "line number": [
      283,
      299,
      310,
      313
     ]
    },
    "numpy.array": {
     "line number": [
      297,
      298,
      307,
      308
     ]
    },
    "numpy.dot": {
     "line number": [
      311,
      314,
      317,
      319
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      297
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      289,
      291,
      320
     ]
    },
    "numpy.union1d": {
     "line number": [
      283
     ]
    },
    "numpy.zeros": {
     "line number": [
      277,
      286,
      302
     ]
    },
    "pyface.api.error": {
     "line number": [
      284,
      300
     ]
    },
    "rotation": {
     "line number": [
      311,
      314,
      317,
      319
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      270
     ]
    },
    "translation": {
     "line number": [
      311,
      314,
      317,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      152
     ]
    },
    "list": {
     "line number": [
      154
     ]
    },
    "mne.gui._marker_gui.MarkerPoints": {
     "line number": [
      147
     ]
    },
    "mne.gui._marker_gui.mrk_view_basic": {
     "line number": [
      164
     ]
    },
    "mne.gui._marker_gui.mrk_wildcard": {
     "line number": [
      150
     ]
    },
    "range": {
     "line number": [
      154
     ]
    },
    "traits.api.Bool": {
     "line number": [
      156
     ]
    },
    "traits.api.Button": {
     "line number": [
      157,
      158,
      159,
      162
     ]
    },
    "traits.api.File": {
     "line number": [
      150
     ]
    },
    "traits.api.List": {
     "line number": [
      154
     ]
    },
    "traits.api.Property": {
     "line number": [
      151,
      152,
      156
     ]
    },
    "traits.api.Str": {
     "line number": [
      151,
      152
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPointSource._clear_fired": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._edit_fired": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "mne.gui._marker_gui.mrk_view_edit": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_dir": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "mne.gui._marker_gui.os": {
     "line number": [
      173
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_enabled": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      168
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_name": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "mne.gui._marker_gui.os": {
     "line number": [
      178
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._reorder_fired": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "mne.gui._marker_gui.ReorderDialog": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._switch_left_right_fired": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource.load": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      188
     ]
    },
    "pyface.api.error": {
     "line number": [
      189
     ]
    },
    "read_mrk": {
     "line number": [
      187
     ]
    },
    "str": {
     "line number": [
      189
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "float": {
     "line number": [
      102
     ]
    },
    "traits.api.Array": {
     "line number": [
      102
     ]
    },
    "traits.api.Button": {
     "line number": [
      105
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      99
     ]
    },
    "traits.api.Property": {
     "line number": [
      104
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      108
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      107
     ]
    },
    "traitsui.api.View": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPoints._get_can_save": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      112
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints._save_as_fired": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      123
     ]
    },
    "mne.gui._marker_gui.mrk_out_wildcard": {
     "line number": [
      115
     ]
    },
    "mne.gui._marker_gui.os": {
     "line number": [
      122,
      127
     ]
    },
    "mne.gui._marker_gui.out_ext": {
     "line number": [
      123,
      125
     ]
    },
    "pyface.api.FileDialog": {
     "line number": [
      115
     ]
    },
    "pyface.api.OK": {
     "line number": [
      119
     ]
    },
    "pyface.api.YES": {
     "line number": [
      130
     ]
    },
    "pyface.api.confirm": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints.save": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "_write_dig_points": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.ReorderDialog": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "traits.api.Bool": {
     "line number": [
      83
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      78
     ]
    },
    "traits.api.List": {
     "line number": [
      82
     ]
    },
    "traits.api.Property": {
     "line number": [
      82,
      83
     ]
    },
    "traits.api.Str": {
     "line number": [
      81
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      86
     ]
    },
    "traitsui.api.View": {
     "line number": [
      85
     ]
    },
    "traitsui.menu.Action": {
     "line number": [
      87
     ]
    },
    "traitsui.menu.CancelButton": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._marker_gui.ReorderDialog._get_index": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      92
     ]
    },
    "int": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.ReorderDialog._get_is_ok": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._marker_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.mrk_out_wildcard": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_basic": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_edit": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_editable": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_wildcard": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.out_ext": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.use_editor_h": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.use_editor_v": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.gui._viewer": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      31
     ]
    },
    "float": {
     "line number": [
      44,
      48,
      52,
      56,
      60
     ]
    },
    "mne.gui._viewer._DEG_STEP_WIDTH": {
     "line number": [
      69,
      70
     ]
    },
    "mne.gui._viewer._DEG_WIDTH": {
     "line number": [
      65,
      66
     ]
    },
    "mne.gui._viewer._INC_BUTTON_WIDTH": {
     "line number": [
      82
     ]
    },
    "mne.gui._viewer._TEXT_WIDTH": {
     "line number": [
      77,
      77,
      78,
      78,
      79,
      79
     ]
    },
    "numpy.sign": {
     "line number": [
      77,
      78,
      79
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      34
     ]
    },
    "traitsui.api.TextEditor": {
     "line number": [
      43,
      47,
      51,
      55,
      59
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui._viewer.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._viewer.ArrayOrNone": {
  "data": {
   "shadows": "traits.api.ArrayOrNone"
  },
  "type": "import"
 },
 "mne.gui._viewer.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._viewer.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._viewer.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._viewer.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._viewer.Glyph": {
  "data": {
   "shadows": "mayavi.modules.glyph.Glyph"
  },
  "type": "import"
 },
 "mne.gui._viewer.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._viewer.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._viewer.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._viewer.HeadViewController": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      107
     ]
    },
    "mne.gui._viewer._SCALE_WIDTH": {
     "line number": [
      118
     ]
    },
    "mne.gui._viewer._VIEW_BUTTON_WIDTH": {
     "line number": [
      110,
      111,
      112,
      113
     ]
    },
    "mne.gui._viewer.laggy_float_editor_headscale": {
     "line number": [
      117
     ]
    },
    "traits.api.Button": {
     "line number": [
      99,
      100,
      101,
      102
     ]
    },
    "traits.api.Enum": {
     "line number": [
      96,
      103
     ]
    },
    "traits.api.Float": {
     "line number": [
      105
     ]
    },
    "traits.api.HasTraits": {
     "line number": [
      85
     ]
    },
    "traits.api.Instance": {
     "line number": [
      107
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      116
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      110,
      111,
      112,
      113,
      116,
      119
     ]
    },
    "traitsui.api.Spring": {
     "line number": [
      120
     ]
    },
    "traitsui.api.VGrid": {
     "line number": [
      110
     ]
    },
    "traitsui.api.VGroup": {
     "line number": [
      109
     ]
    },
    "traitsui.api.View": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._viewer.HeadViewController._init_view": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.HeadViewController.on_set_interaction": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      134
     ]
    },
    "tvtk.api.tvtk.InteractorStyleTerrain": {
     "line number": [
      143
     ]
    },
    "tvtk.api.tvtk.InteractorStyleTrackballCamera": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.HeadViewController.on_set_view": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "SilenceStdout": {
     "line number": [
      174
     ]
    },
    "ValueError": {
     "line number": [
      168,
      170
     ]
    },
    "dict": {
     "line number": [
      155,
      155,
      159,
      163,
      171
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      149
     ]
    },
    "zip": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._viewer.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._viewer.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._viewer.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._viewer.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._viewer.Object": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "float": {
     "line number": [
      182,
      183
     ]
    },
    "mayavi.sources.vtk_data_source.VTKDataSource": {
     "line number": [
      187
     ]
    },
    "mayavi.tools.mlab_scene_model.MlabSceneModel": {
     "line number": [
      186
     ]
    },
    "traits.api.Array": {
     "line number": [
      182,
      183
     ]
    },
    "traits.api.Bool": {
     "line number": [
      193
     ]
    },
    "traits.api.HasPrivateTraits": {
     "line number": [
      179
     ]
    },
    "traits.api.Instance": {
     "line number": [
      186,
      187
     ]
    },
    "traits.api.RGBColor": {
     "line number": [
      190
     ]
    },
    "traits.api.Range": {
     "line number": [
      192
     ]
    },
    "traits.api.Str": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._viewer.Object._update_points": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "float": {
     "line number": [
      215
     ]
    },
    "mayavi.mlab.text3d": {
     "line number": [
      209
     ]
    },
    "mayavi.modules.glyph.Glyph": {
     "line number": [
      226
     ]
    },
    "mne.gui._viewer.Object": {
     "line number": [
      202
     ]
    },
    "traits.api.ArrayOrNone": {
     "line number": [
      215
     ]
    },
    "traits.api.Bool": {
     "line number": [
      205,
      207,
      216,
      218,
      220,
      222
     ]
    },
    "traits.api.Float": {
     "line number": [
      206,
      210
     ]
    },
    "traits.api.Instance": {
     "line number": [
      213,
      214,
      226
     ]
    },
    "traits.api.Int": {
     "line number": [
      227
     ]
    },
    "traits.api.List": {
     "line number": [
      209
     ]
    },
    "traits.api.Property": {
     "line number": [
      208
     ]
    },
    "traits.api.RGBColor": {
     "line number": [
      224
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      229
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      229,
      230,
      231
     ]
    },
    "traitsui.api.View": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._viewer.PointObject.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      247
     ]
    },
    "mne.gui._viewer.PointObject": {
     "line number": [
      248
     ]
    },
    "super": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._get_nearest": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      366,
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._get_orientable": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "len": {
     "line number": [
      467
     ]
    },
    "traits.api.cached_property": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._nearest_default": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "_DistanceQuery": {
     "line number": [
      362
     ]
    },
    "numpy.zeros": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._on_hide": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._plot_points": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "_toggle_mlab_render": {
     "line number": [
      322,
      358
     ]
    },
    "hasattr": {
     "line number": [
      317,
      319
     ]
    },
    "mayavi.mlab.pipeline.glyph": {
     "line number": [
      331
     ]
    },
    "mayavi.mlab.pipeline.scalar_scatter": {
     "line number": [
      325
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._resolution_changed": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      456,
      459
     ]
    },
    "tvtk.api.tvtk.CylinderSource": {
     "line number": [
      459
     ]
    },
    "tvtk.api.tvtk.SphereSource": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._show_labels": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "_toggle_mlab_render": {
     "line number": [
      288,
      305
     ]
    },
    "enumerate": {
     "line number": [
      301
     ]
    },
    "len": {
     "line number": [
      293
     ]
    },
    "mayavi.mlab.text3d": {
     "line number": [
      297,
      302
     ]
    },
    "numpy.array": {
     "line number": [
      301
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_colors": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      416
     ]
    },
    "numpy.array": {
     "line number": [
      414,
      420
     ]
    },
    "numpy.mean": {
     "line number": [
      416
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      408
     ]
    },
    "tuple": {
     "line number": [
      420,
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_marker_scaling": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_marker_type": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      431,
      432
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      424
     ]
    },
    "tvtk.api.tvtk.CylinderSource": {
     "line number": [
      434
     ]
    },
    "tvtk.api.tvtk.SphereSource": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_projections": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      390
     ]
    },
    "hasattr": {
     "line number": [
      377
     ]
    },
    "int": {
     "line number": [
      397
     ]
    },
    "len": {
     "line number": [
      384,
      384,
      399
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      389
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      401
     ]
    },
    "numpy.ones": {
     "line number": [
      399
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject.default_traits_view": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "mne.gui._viewer._SCALE_WIDTH": {
     "line number": [
      252
     ]
    },
    "mne.gui._viewer.laggy_float_editor_headscale": {
     "line number": [
      253
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      266,
      276,
      278,
      284,
      284
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      251,
      252,
      254,
      257,
      260,
      265,
      268,
      272,
      278
     ]
    },
    "traitsui.api.Spring": {
     "line number": [
      266,
      283
     ]
    },
    "traitsui.api.View": {
     "line number": [
      266,
      276,
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._viewer.RGBColor": {
  "data": {
   "shadows": "traits.api.RGBColor"
  },
  "type": "import"
 },
 "mne.gui._viewer.Range": {
  "data": {
   "shadows": "traits.api.Range"
  },
  "type": "import"
 },
 "mne.gui._viewer.Spring": {
  "data": {
   "shadows": "traitsui.api.Spring"
  },
  "type": "import"
 },
 "mne.gui._viewer.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._viewer.Surface": {
  "data": {
   "shadows": "mayavi.modules.surface.Surface"
  },
  "type": "import"
 },
 "mne.gui._viewer.SurfaceObject": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "int": {
     "line number": [
      481
     ]
    },
    "mayavi.modules.surface.Surface": {
     "line number": [
      483,
      484
     ]
    },
    "mne.gui._viewer.Object": {
     "line number": [
      470
     ]
    },
    "traits.api.Array": {
     "line number": [
      481
     ]
    },
    "traits.api.Enum": {
     "line number": [
      480
     ]
    },
    "traits.api.Instance": {
     "line number": [
      483,
      484
     ]
    },
    "traitsui.api.HGroup": {
     "line number": [
      486
     ]
    },
    "traitsui.api.Item": {
     "line number": [
      486,
      487,
      488
     ]
    },
    "traitsui.api.View": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.gui._viewer.SurfaceObject.__init__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "mne.gui._viewer.SurfaceObject": {
     "line number": [
      493
     ]
    },
    "super": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject._update_points": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "mne.gui._viewer.Object": {
     "line number": [
      551
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject._update_tris": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "traits.api.on_trait_change": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject.clear": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      496,
      498,
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject.plot": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "_create_mesh_surf": {
     "line number": [
      515
     ]
    },
    "dict": {
     "line number": [
      514
     ]
    },
    "mayavi.mlab.pipeline.surface": {
     "line number": [
      521,
      530
     ]
    },
    "numpy.any": {
     "line number": [
      510
     ]
    },
    "traits.api.on_trait_change": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui._viewer.TextEditor": {
  "data": {
   "shadows": "traitsui.api.TextEditor"
  },
  "type": "import"
 },
 "mne.gui._viewer.VGrid": {
  "data": {
   "shadows": "traitsui.api.VGrid"
  },
  "type": "import"
 },
 "mne.gui._viewer.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._viewer.VTKDataSource": {
  "data": {
   "shadows": "mayavi.sources.vtk_data_source.VTKDataSource"
  },
  "type": "import"
 },
 "mne.gui._viewer.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._viewer._BUTTON_WIDTH": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.gui._viewer._COREG_WIDTH": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mne.gui._viewer._DEG_STEP_WIDTH": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.gui._viewer._DEG_WIDTH": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mne.gui._viewer._DIG_SOURCE_WIDTH": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "mne.gui._viewer._INC_BUTTON_WIDTH": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.gui._viewer._MM_STEP_WIDTH": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mne.gui._viewer._MM_WIDTH": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.gui._viewer._MRI_FIDUCIALS_WIDTH": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mne.gui._viewer._REDUCED_TEXT_WIDTH": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mne.gui._viewer._RESET_LABEL": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mne.gui._viewer._RESET_WIDTH": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "mne.gui._viewer._SCALE_STEP_WIDTH": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.gui._viewer._SCALE_WIDTH": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.gui._viewer._SHOW_BORDER": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "mne.gui._viewer._TEXT_WIDTH": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mne.gui._viewer._VIEW_BUTTON_WIDTH": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.gui._viewer._WEIGHT_WIDTH": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mne.gui._viewer._mm_fmt": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mne.gui._viewer.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._viewer.headview_borders": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_deg": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_headscale": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_mm": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_scale": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_weight": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.gui._viewer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._viewer.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._viewer.pipeline": {
  "data": {
   "shadows": "mayavi.mlab.pipeline"
  },
  "type": "import"
 },
 "mne.gui._viewer.text3d": {
  "data": {
   "shadows": "mayavi.mlab.text3d"
  },
  "type": "import"
 },
 "mne.gui._viewer.tvtk": {
  "data": {
   "shadows": "tvtk.api.tvtk"
  },
  "type": "import"
 },
 "mne.gui.coregistration": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "CoregFrame": {
     "line number": [
      173
     ]
    },
    "_check_backend": {
     "line number": [
      170
     ]
    },
    "_check_mayavi_version": {
     "line number": [
      168
     ]
    },
    "_make_view": {
     "line number": [
      172
     ]
    },
    "float": {
     "line number": [
      164,
      167
     ]
    },
    "get_config": {
     "line number": [
      130
     ]
    },
    "int": {
     "line number": [
      165,
      166
     ]
    },
    "mne.gui._initialize_gui": {
     "line number": [
      180
     ]
    },
    "mne.gui.os": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.fiducials": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "FiducialsFrame": {
     "line number": [
      210
     ]
    },
    "_check_backend": {
     "line number": [
      208
     ]
    },
    "_check_mayavi_version": {
     "line number": [
      206
     ]
    },
    "mne.gui._initialize_gui": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.kit2fiff": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "Kit2FiffFrame": {
     "line number": [
      230
     ]
    },
    "_check_backend": {
     "line number": [
      228
     ]
    },
    "_check_mayavi_version": {
     "line number": [
      226
     ]
    },
    "mne.gui._initialize_gui": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests": {
  "data": {},
  "type": "module"
 },
 "mne.gui.tests.test_coreg_gui": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      22
     ]
    },
    "mne.gui.tests.test_coreg_gui.data_path": {
     "line number": [
      23,
      24,
      27
     ]
    },
    "mne.io.kit.tests.data_dir": {
     "line number": [
      26
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      342
     ]
    },
    "os.path.join": {
     "line number": [
      23,
      24,
      26,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui.tests.test_coreg_gui.CoregModel": {
  "data": {
   "shadows": "mne.gui._coreg_gui.CoregModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.DigSource": {
  "data": {
   "shadows": "mne.gui._file_traits.DigSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "shadows": "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.dig_mri_distances": {
  "data": {
   "shadows": "mne.surface.dig_mri_distances"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.fname_trans": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.kit_raw_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.mlab": {
  "data": {
   "shadows": "mayavi.mlab"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.raw_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.subjects_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_gui_automation": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      311
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      323
     ]
    },
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
     "line number": [
      322
     ]
    },
    "mne.gui._file_traits.DigSource": {
     "line number": [
      320
     ]
    },
    "mne.gui.tests.test_coreg_gui.fname_trans": {
     "line number": [
      338
     ]
    },
    "mne.gui.tests.test_coreg_gui.mne": {
     "line number": [
      336
     ]
    },
    "mne.gui.tests.test_coreg_gui.raw_path": {
     "line number": [
      321,
      336
     ]
    },
    "mne.gui.tests.test_coreg_gui.subjects_dir": {
     "line number": [
      322,
      338
     ]
    },
    "mne.surface.dig_mri_distances": {
     "line number": [
      338
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      312
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      313
     ]
    },
    "numpy.median": {
     "line number": [
      333,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_gui_display": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      175
     ]
    },
    "isinstance": {
     "line number": [
      196,
      199
     ]
    },
    "mayavi.mlab.process_ui_events": {
     "line number": [
      182,
      184,
      188,
      201,
      225,
      231
     ]
    },
    "mne.gui.tests.test_coreg_gui.mne": {
     "line number": [
      176,
      181,
      186,
      227
     ]
    },
    "mne.gui.tests.test_coreg_gui.os": {
     "line number": [
      169,
      171
     ]
    },
    "mne.gui.tests.test_coreg_gui.pytest": {
     "line number": [
      175
     ]
    },
    "mne.gui.tests.test_coreg_gui.raw_path": {
     "line number": [
      195
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      173
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      161
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      162
     ]
    },
    "os.path.join": {
     "line number": [
      169,
      171
     ]
    },
    "tvtk.api.tvtk.CylinderSource": {
     "line number": [
      200
     ]
    },
    "tvtk.api.tvtk.SphereSource": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      63
     ]
    },
    "isinstance": {
     "line number": [
      125,
      126
     ]
    },
    "len": {
     "line number": [
      78,
      80,
      81
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      62
     ]
    },
    "mne.gui.tests.test_coreg_gui.fname_trans": {
     "line number": [
      153
     ]
    },
    "mne.gui.tests.test_coreg_gui.mne": {
     "line number": [
      100,
      155
     ]
    },
    "mne.gui.tests.test_coreg_gui.os": {
     "line number": [
      59,
      142
     ]
    },
    "mne.gui.tests.test_coreg_gui.pytest": {
     "line number": [
      63
     ]
    },
    "mne.gui.tests.test_coreg_gui.raw_path": {
     "line number": [
      71
     ]
    },
    "mne.gui.tests.test_coreg_gui.re": {
     "line number": [
      143
     ]
    },
    "mne.gui.tests.test_coreg_gui.subjects_dir": {
     "line number": [
      142
     ]
    },
    "mne.transforms.invert_transform": {
     "line number": [
      157
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      52
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      53
     ]
    },
    "numpy.mean": {
     "line number": [
      86,
      96
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      105
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      72,
      73,
      74,
      101,
      138,
      156,
      157
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      117,
      118,
      119,
      120,
      121,
      122
     ]
    },
    "os.path.join": {
     "line number": [
      57,
      59,
      142
     ]
    },
    "set": {
     "line number": [
      141,
      146
     ]
    },
    "str": {
     "line number": [
      125,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model_decimation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      44
     ]
    },
    "len": {
     "line number": [
      48,
      49
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      30
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      43
     ]
    },
    "mne.gui.tests.test_coreg_gui.os": {
     "line number": [
      41
     ]
    },
    "mne.gui.tests.test_coreg_gui.pytest": {
     "line number": [
      44
     ]
    },
    "mne.gui.tests.test_coreg_gui.shutil": {
     "line number": [
      38
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      31
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      32
     ]
    },
    "os.path.dirname": {
     "line number": [
      45
     ]
    },
    "os.path.join": {
     "line number": [
      37,
      38,
      39,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model_with_fsaverage": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      234
     ]
    },
    "mne.gui._coreg_gui.CoregModel": {
     "line number": [
      245
     ]
    },
    "mne.gui.tests.test_coreg_gui.kit_raw_path": {
     "line number": [
      307
     ]
    },
    "mne.gui.tests.test_coreg_gui.mne": {
     "line number": [
      242
     ]
    },
    "mne.gui.tests.test_coreg_gui.raw_path": {
     "line number": [
      250
     ]
    },
    "mne.gui.tests.test_coreg_gui.subjects_dir": {
     "line number": [
      243
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      235
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      236
     ]
    },
    "numpy.inf": {
     "line number": [
      262
     ]
    },
    "numpy.mean": {
     "line number": [
      254,
      284,
      303
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      293
     ]
    },
    "os.path.join": {
     "line number": [
      243
     ]
    },
    "set": {
     "line number": [
      294
     ]
    },
    "str": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.tvtk": {
  "data": {
   "shadows": "tvtk.api.tvtk"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui.tests.test_fiducials_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "shadows": "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.test_mri_model": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
     "line number": [
      26
     ]
    },
    "mne.gui.tests.test_fiducials_gui.os": {
     "line number": [
      21,
      23
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      13
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      14
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      46,
      47,
      48,
      54,
      55,
      56,
      60,
      61,
      62,
      68
     ]
    },
    "os.path.basename": {
     "line number": [
      37
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      21,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_fiducials_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      16
     ]
    },
    "mne.gui.tests.test_file_traits.data_path": {
     "line number": [
      17,
      19
     ]
    },
    "mne.gui.tests.test_file_traits.subjects_dir": {
     "line number": [
      18
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      123
     ]
    },
    "os.path.dirname": {
     "line number": [
      20
     ]
    },
    "os.path.join": {
     "line number": [
      17,
      18,
      19,
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui.tests.test_file_traits.DigSource": {
  "data": {
   "shadows": "mne.gui._file_traits.DigSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.FiducialsSource": {
  "data": {
   "shadows": "mne.gui._file_traits.FiducialsSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.MRISubjectSource": {
  "data": {
   "shadows": "mne.gui._file_traits.MRISubjectSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.SurfaceSource": {
  "data": {
   "shadows": "mne.gui._file_traits.SurfaceSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.bem_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.data_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.fid_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.inst_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.read_dig_fif": {
  "data": {
   "shadows": "mne.channels.read_dig_fif"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.subjects_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.test_bem_source": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      24
     ]
    },
    "mne.gui._file_traits.SurfaceSource": {
     "line number": [
      31
     ]
    },
    "mne.gui.tests.test_file_traits.bem_path": {
     "line number": [
      35
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      25
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_fiducials_source": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      40
     ]
    },
    "mne.gui._file_traits.FiducialsSource": {
     "line number": [
      47
     ]
    },
    "mne.gui.tests.test_file_traits.fid_path": {
     "line number": [
      48
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      41
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      42
     ]
    },
    "numpy.array": {
     "line number": [
      50
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_inst_source": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "mne.channels.read_dig_fif": {
     "line number": [
      80
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      59
     ]
    },
    "mne.gui._file_traits.DigSource": {
     "line number": [
      67
     ]
    },
    "mne.gui.tests.test_file_traits.inst_path": {
     "line number": [
      70,
      71,
      80
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      60
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      61
     ]
    },
    "numpy.array": {
     "line number": [
      73,
      74,
      75
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      76,
      77,
      78,
      84,
      85,
      86
     ]
    },
    "os.path.dirname": {
     "line number": [
      71
     ]
    },
    "os.path.join": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_subject_source": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      89
     ]
    },
    "mne.gui._file_traits.MRISubjectSource": {
     "line number": [
      96
     ]
    },
    "mne.gui.tests.test_file_traits.subjects_dir": {
     "line number": [
      97
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      90
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_subject_source_with_fsaverage": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      112
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      102
     ]
    },
    "mne.gui._file_traits.MRISubjectSource": {
     "line number": [
      110
     ]
    },
    "mne.gui.tests.test_file_traits.data_path": {
     "line number": [
      118
     ]
    },
    "mne.gui.tests.test_file_traits.pytest": {
     "line number": [
      112
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      118
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      103
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      104
     ]
    },
    "os.path.isdir": {
     "line number": [
      116,
      120
     ]
    },
    "os.path.join": {
     "line number": [
      116,
      120
     ]
    },
    "str": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui": {
  "data": {
   "symbols_in_volume": {
    "mne.gui.tests.test_kit2fiff_gui.os": {
     "line number": [
      16,
      17,
      18,
      19,
      20,
      21
     ]
    },
    "mne.io.kit.tests.data_dir": {
     "line number": [
      16,
      17,
      18,
      19,
      20,
      21
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui.tests.test_kit2fiff_gui.GUI": {
  "data": {
   "shadows": "pyface.api.GUI"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.Kit2FiffModel": {
  "data": {
   "shadows": "mne.gui._kit2fiff_gui.Kit2FiffModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.fid_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.fif_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.hsp_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.mrk_post_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.sqd_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.test_kit2fiff_gui": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "mne.gui.tests.test_kit2fiff_gui.mne": {
     "line number": [
      127,
      138
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path": {
     "line number": [
      150
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      121
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      116
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      117
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      151,
      152
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      148,
      149,
      156,
      157
     ]
    },
    "pyface.api.GUI": {
     "line number": [
      124
     ]
    },
    "str": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.test_kit2fiff_model": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "events": {
     "line number": [
      94,
      95,
      101,
      102,
      107,
      108
     ]
    },
    "list": {
     "line number": [
      70,
      71
     ]
    },
    "mne.gui._kit2fiff_gui.Kit2FiffModel": {
     "line number": [
      32
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.fid_path": {
     "line number": [
      42
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.fif_path": {
     "line number": [
      68
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.hsp_path": {
     "line number": [
      40
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.mne": {
     "line number": [
      90,
      94,
      101,
      107
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.mrk_post_path": {
     "line number": [
      37
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path": {
     "line number": [
      36
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.os": {
     "line number": [
      30
     ]
    },
    "mne.gui.tests.test_kit2fiff_gui.sqd_path": {
     "line number": [
      38
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      65,
      68
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      24
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      25
     ]
    },
    "numpy.all": {
     "line number": [
      78,
      84,
      85,
      86
     ]
    },
    "numpy.eye": {
     "line number": [
      86
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      73,
      79
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      53,
      95,
      102,
      108
     ]
    },
    "sorted": {
     "line number": [
      71,
      71
     ]
    },
    "str": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui": {
  "data": {
   "symbols_in_volume": {
    "mne.gui.tests.test_marker_gui.os": {
     "line number": [
      15,
      16,
      17
     ]
    },
    "mne.io.kit.tests.data_dir": {
     "line number": [
      15,
      16,
      17
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.gui.tests.test_marker_gui.CombineMarkersModel": {
  "data": {
   "shadows": "mne.gui._marker_gui.CombineMarkersModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.CombineMarkersPanel": {
  "data": {
   "shadows": "mne.gui._marker_gui.CombineMarkersPanel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.mrk_avg_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.mrk_post_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.mrk_pre_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.read_mrk": {
  "data": {
   "shadows": "mne.io.kit.read_mrk"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.test_combine_markers_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.gui._marker_gui.CombineMarkersModel": {
     "line number": [
      28
     ]
    },
    "mne.gui.tests.test_marker_gui.mrk_avg_path": {
     "line number": [
      48
     ]
    },
    "mne.gui.tests.test_marker_gui.mrk_post_path": {
     "line number": [
      42,
      56,
      69
     ]
    },
    "mne.gui.tests.test_marker_gui.mrk_pre_path": {
     "line number": [
      32,
      37,
      68
     ]
    },
    "mne.gui.tests.test_marker_gui.os": {
     "line number": [
      26
     ]
    },
    "mne.io.kit.read_mrk": {
     "line number": [
      48,
      58
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      20
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      21
     ]
    },
    "numpy.any": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      34,
      38,
      49,
      53,
      59,
      63,
      64,
      70
     ]
    },
    "str": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_marker_gui.test_combine_markers_panel": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "mne.gui._marker_gui.CombineMarkersPanel": {
     "line number": [
      79
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      78
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      73
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.gui.tests.test_marker_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.icons.resources": {
  "data": {
   "symbols_in_volume": {
    "PyQt5.QtCore.qVersion": {
     "line number": [
      1254
     ]
    },
    "int": {
     "line number": [
      1254
     ]
    },
    "mne.icons.resources.qInitResources": {
     "line number": [
      1268
     ]
    },
    "mne.icons.resources.qt_resource_struct_v1": {
     "line number": [
      1257
     ]
    },
    "mne.icons.resources.qt_resource_struct_v2": {
     "line number": [
      1260
     ]
    },
    "mne.icons.resources.qt_version": {
     "line number": [
      1255
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.icons.resources.QtCore": {
  "data": {
   "shadows": "PyQt5.QtCore"
  },
  "type": "import"
 },
 "mne.icons.resources.qCleanupResources": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": {
    "PyQt5.QtCore.qUnregisterResourceData": {
     "line number": [
      1266
     ]
    },
    "mne.icons.resources.qt_resource_data": {
     "line number": [
      1266
     ]
    },
    "mne.icons.resources.qt_resource_name": {
     "line number": [
      1266
     ]
    },
    "mne.icons.resources.qt_resource_struct": {
     "line number": [
      1266
     ]
    },
    "mne.icons.resources.rcc_version": {
     "line number": [
      1266
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.icons.resources.qInitResources": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": {
    "PyQt5.QtCore.qRegisterResourceData": {
     "line number": [
      1263
     ]
    },
    "mne.icons.resources.qt_resource_data": {
     "line number": [
      1263
     ]
    },
    "mne.icons.resources.qt_resource_name": {
     "line number": [
      1263
     ]
    },
    "mne.icons.resources.qt_resource_struct": {
     "line number": [
      1263
     ]
    },
    "mne.icons.resources.rcc_version": {
     "line number": [
      1263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.icons.resources.qt_resource_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.icons.resources.qt_resource_name": {
  "data": {
   "lineno": 1156
  },
  "type": "constant"
 },
 "mne.icons.resources.qt_resource_struct": {
  "data": {
   "lineno": 1260
  },
  "type": "constant"
 },
 "mne.icons.resources.qt_resource_struct_v1": {
  "data": {
   "lineno": 1209
  },
  "type": "constant"
 },
 "mne.icons.resources.qt_resource_struct_v2": {
  "data": {
   "lineno": 1225
  },
  "type": "constant"
 },
 "mne.icons.resources.qt_version": {
  "data": {
   "lineno": 1254
  },
  "type": "constant"
 },
 "mne.icons.resources.rcc_version": {
  "data": {
   "lineno": 1259
  },
  "type": "constant"
 },
 "mne.inverse_sparse": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse._gamma_map": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse._gamma_map._gamma_map_opt": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      69,
      116
     ]
    },
    "denom_fun": {
     "line number": [
      122,
      130
     ]
    },
    "float": {
     "line number": [
      56
     ]
    },
    "len": {
     "line number": [
      93,
      144,
      146,
      147
     ]
    },
    "numpy.abs": {
     "line number": [
      88,
      138,
      139
     ]
    },
    "numpy.arange": {
     "line number": [
      73
     ]
    },
    "numpy.dot": {
     "line number": [
      62,
      97,
      103,
      104,
      105
     ]
    },
    "numpy.finfo": {
     "line number": [
      56,
      123
     ]
    },
    "numpy.float64": {
     "line number": [
      54,
      135
     ]
    },
    "numpy.inf": {
     "line number": [
      65
     ]
    },
    "numpy.isnan": {
     "line number": [
      86
     ]
    },
    "numpy.maximum": {
     "line number": [
      122
     ]
    },
    "numpy.mean": {
     "line number": [
      109,
      113
     ]
    },
    "numpy.newaxis": {
     "line number": [
      97,
      101
     ]
    },
    "numpy.ones": {
     "line number": [
      54
     ]
    },
    "numpy.repeat": {
     "line number": [
      132
     ]
    },
    "numpy.sqrt": {
     "line number": [
      63,
      78,
      113,
      158
     ]
    },
    "numpy.sum": {
     "line number": [
      110,
      114,
      125,
      129,
      138,
      139
     ]
    },
    "numpy.zeros": {
     "line number": [
      135
     ]
    },
    "range": {
     "line number": [
      85
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      62,
      65
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      100
     ]
    },
    "warn": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map._gamma_map_opt.denom_fun": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map.gamma_map": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      251
     ]
    },
    "_check_ori": {
     "line number": [
      233
     ]
    },
    "_check_reference": {
     "line number": [
      229
     ]
    },
    "_compute_residual": {
     "line number": [
      259
     ]
    },
    "_log_exp_var": {
     "line number": [
      288
     ]
    },
    "_make_dipoles_sparse": {
     "line number": [
      281
     ]
    },
    "_make_sparse_stc": {
     "line number": [
      284
     ]
    },
    "_prepare_gain": {
     "line number": [
      231
     ]
    },
    "_reapply_source_weighting": {
     "line number": [
      256
     ]
    },
    "divmod": {
     "line number": [
      264
     ]
    },
    "is_fixed_orient": {
     "line number": [
      235,
      262
     ]
    },
    "len": {
     "line number": [
      250,
      266,
      266,
      267,
      270
     ]
    },
    "mne.inverse_sparse._gamma_map._gamma_map_opt": {
     "line number": [
      246
     ]
    },
    "numpy.arange": {
     "line number": [
      272
     ]
    },
    "numpy.dot": {
     "line number": [
      243
     ]
    },
    "numpy.newaxis.ravel": {
     "line number": [
      272
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      268
     ]
    },
    "numpy.unique": {
     "line number": [
      265
     ]
    },
    "numpy.zeros": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse._gamma_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_debiasing.compute_bias": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "math.sqrt": {
     "line number": [
      119
     ]
    },
    "mne.inverse_sparse.mxne_debiasing.power_iteration_kron": {
     "line number": [
      95
     ]
    },
    "numpy.dot": {
     "line number": [
      106,
      107
     ]
    },
    "numpy.inf": {
     "line number": [
      124,
      131
     ]
    },
    "numpy.maximum": {
     "line number": [
      116
     ]
    },
    "numpy.mean": {
     "line number": [
      114
     ]
    },
    "numpy.ones": {
     "line number": [
      98,
      99
     ]
    },
    "numpy.sum": {
     "line number": [
      107
     ]
    },
    "numpy.tile": {
     "line number": [
      115
     ]
    },
    "range": {
     "line number": [
      102
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      124,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_debiasing.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing.power_iteration_kron": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      49
     ]
    },
    "check_random_state": {
     "line number": [
      39
     ]
    },
    "numpy.dot": {
     "line number": [
      42,
      43,
      46,
      46
     ]
    },
    "numpy.inf": {
     "line number": [
      44
     ]
    },
    "range": {
     "line number": [
      45
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      41,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_debiasing.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_inverse._check_ori": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      27
     ]
    },
    "_check_option": {
     "line number": [
      25
     ]
    },
    "is_fixed_orient": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._compute_residual": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "deactivate_proj": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      100
     ]
    },
    "list": {
     "line number": [
      92,
      93
     ]
    },
    "numpy.dot": {
     "line number": [
      89
     ]
    },
    "pick_channels_evoked": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "Dipole": {
     "line number": [
      231
     ]
    },
    "enumerate": {
     "line number": [
      214
     ]
    },
    "is_fixed_orient": {
     "line number": [
      202
     ]
    },
    "len": {
     "line number": [
      196,
      197,
      199,
      199,
      200,
      200,
      208,
      208,
      211,
      211,
      216,
      221,
      227
     ]
    },
    "mne.inverse_sparse.mxne_inverse._split_gof": {
     "line number": [
      198
     ]
    },
    "numpy.arange": {
     "line number": [
      188
     ]
    },
    "numpy.dot": {
     "line number": [
      224
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      226
     ]
    },
    "numpy.newaxis": {
     "line number": [
      215,
      220
     ]
    },
    "numpy.unique": {
     "line number": [
      205
     ]
    },
    "numpy.where": {
     "line number": [
      191
     ]
    },
    "numpy.zeros": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._make_sparse_stc": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "_make_stc": {
     "line number": [
      145
     ]
    },
    "combine_xyz": {
     "line number": [
      119
     ]
    },
    "is_fixed_orient": {
     "line number": [
      116,
      129
     ]
    },
    "len": {
     "line number": [
      137
     ]
    },
    "numpy.reshape": {
     "line number": [
      122
     ]
    },
    "numpy.unique": {
     "line number": [
      131
     ]
    },
    "numpy.where": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_gain": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "_check_depth": {
     "line number": [
      63
     ]
    },
    "_prepare_forward": {
     "line number": [
      65
     ]
    },
    "mne.inverse_sparse.mxne_inverse._prepare_weights": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_weights": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      37,
      44
     ]
    },
    "is_fixed_orient": {
     "line number": [
      41
     ]
    },
    "isinstance": {
     "line number": [
      33
     ]
    },
    "len": {
     "line number": [
      43,
      45,
      46
     ]
    },
    "numpy.abs": {
     "line number": [
      34
     ]
    },
    "numpy.max": {
     "line number": [
      34,
      35
     ]
    },
    "numpy.ravel": {
     "line number": [
      42
     ]
    },
    "numpy.sum": {
     "line number": [
      55
     ]
    },
    "numpy.tile": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._reapply_source_weighting": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._split_gof": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      158
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      172,
      176,
      177
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      164
     ]
    },
    "numpy.newaxis": {
     "line number": [
      171,
      176,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._window_evoked": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "float": {
     "line number": [
      496,
      497,
      501
     ]
    },
    "int": {
     "line number": [
      496,
      502,
      503
     ]
    },
    "isinstance": {
     "line number": [
      496
     ]
    },
    "len": {
     "line number": [
      506
     ]
    },
    "numpy.hanning": {
     "line number": [
      504,
      505
     ]
    },
    "numpy.ones": {
     "line number": [
      506
     ]
    },
    "numpy.r_": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "Dipole": {
     "line number": [
      254
     ]
    },
    "SourceEstimate": {
     "line number": [
      281
     ]
    },
    "ValueError": {
     "line number": [
      257,
      270
     ]
    },
    "int": {
     "line number": [
      279,
      280
     ]
    },
    "isinstance": {
     "line number": [
      254,
      256
     ]
    },
    "len": {
     "line number": [
      262,
      262,
      265,
      268
     ]
    },
    "list": {
     "line number": [
      256,
      266,
      267
     ]
    },
    "numpy.all": {
     "line number": [
      269,
      273
     ]
    },
    "numpy.array": {
     "line number": [
      279,
      280
     ]
    },
    "numpy.concatenate": {
     "line number": [
      263
     ]
    },
    "numpy.where": {
     "line number": [
      274
     ]
    },
    "numpy.zeros": {
     "line number": [
      262
     ]
    },
    "range": {
     "line number": [
      268
     ]
    },
    "type": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.mixed_norm": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      394,
      447
     ]
    },
    "ValueError": {
     "line number": [
      376,
      379,
      382
     ]
    },
    "_check_reference": {
     "line number": [
      389
     ]
    },
    "_log_exp_var": {
     "line number": [
      478
     ]
    },
    "all": {
     "line number": [
      392
     ]
    },
    "bool": {
     "line number": [
      410,
      441
     ]
    },
    "int": {
     "line number": [
      410
     ]
    },
    "is_fixed_orient": {
     "line number": [
      418
     ]
    },
    "isinstance": {
     "line number": [
      386,
      410,
      410
     ]
    },
    "iterative_mixed_norm_solver": {
     "line number": [
      430
     ]
    },
    "len": {
     "line number": [
      393,
      441,
      462,
      466,
      472,
      481
     ]
    },
    "list": {
     "line number": [
      386,
      456,
      457
     ]
    },
    "mixed_norm_solver": {
     "line number": [
      425
     ]
    },
    "mne.inverse_sparse.mxne_inverse._check_ori": {
     "line number": [
      399
     ]
    },
    "mne.inverse_sparse.mxne_inverse._compute_residual": {
     "line number": [
      475
     ]
    },
    "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse": {
     "line number": [
      464
     ]
    },
    "mne.inverse_sparse.mxne_inverse._make_sparse_stc": {
     "line number": [
      469
     ]
    },
    "mne.inverse_sparse.mxne_inverse._prepare_gain": {
     "line number": [
      396
     ]
    },
    "mne.inverse_sparse.mxne_inverse._reapply_source_weighting": {
     "line number": [
      450
     ]
    },
    "norm_l2inf": {
     "line number": [
      419
     ]
    },
    "numpy.concatenate": {
     "line number": [
      402
     ]
    },
    "numpy.dot": {
     "line number": [
      406,
      419,
      436,
      437,
      454
     ]
    },
    "numpy.zeros": {
     "line number": [
      441
     ]
    },
    "range": {
     "line number": [
      393
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      409
     ]
    },
    "sum_squared": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.tf_mixed_norm": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      692
     ]
    },
    "ValueError": {
     "line number": [
      627,
      631,
      637,
      641,
      647
     ]
    },
    "_Phi": {
     "line number": [
      671
     ]
    },
    "_check_reference": {
     "line number": [
      621
     ]
    },
    "bool": {
     "line number": [
      699
     ]
    },
    "float": {
     "line number": [
      668
     ]
    },
    "int": {
     "line number": [
      668
     ]
    },
    "is_fixed_orient": {
     "line number": [
      656
     ]
    },
    "iterative_tf_mixed_norm_solver": {
     "line number": [
      686
     ]
    },
    "len": {
     "line number": [
      646,
      646,
      699
     ]
    },
    "mne.inverse_sparse.mxne_inverse._check_ori": {
     "line number": [
      654
     ]
    },
    "mne.inverse_sparse.mxne_inverse._compute_residual": {
     "line number": [
      708
     ]
    },
    "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse": {
     "line number": [
      712
     ]
    },
    "mne.inverse_sparse.mxne_inverse._make_sparse_stc": {
     "line number": [
      716
     ]
    },
    "mne.inverse_sparse.mxne_inverse._prepare_gain": {
     "line number": [
      651
     ]
    },
    "mne.inverse_sparse.mxne_inverse._reapply_source_weighting": {
     "line number": [
      704
     ]
    },
    "mne.inverse_sparse.mxne_inverse._window_evoked": {
     "line number": [
      659
     ]
    },
    "norm_epsilon_inf": {
     "line number": [
      675
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      644,
      645
     ]
    },
    "numpy.ceil": {
     "line number": [
      668
     ]
    },
    "numpy.dot": {
     "line number": [
      666
     ]
    },
    "numpy.zeros": {
     "line number": [
      699
     ]
    },
    "sum_squared": {
     "line number": [
      674
     ]
    },
    "tf_mixed_norm_solver": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_optim.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskLasso"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim._Phi": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "object": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.inverse_sparse.mxne_optim._Phi.__call__": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "numpy.hstack": {
     "line number": [
      791
     ]
    },
    "numpy.sqrt": {
     "line number": [
      793
     ]
    },
    "range": {
     "line number": [
      793
     ]
    },
    "stft": {
     "line number": [
      788,
      792
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._Phi.__init__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": {
    "len": {
     "line number": [
      782
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      779,
      780,
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._Phi.norm": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      799
     ]
    },
    "len": {
     "line number": [
      803,
      808
     ]
    },
    "numpy.array_split": {
     "line number": [
      804
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      804,
      807
     ]
    },
    "numpy.cumsum": {
     "line number": [
      804
     ]
    },
    "ord": {
     "line number": [
      798,
      800,
      801
     ]
    },
    "range": {
     "line number": [
      808
     ]
    },
    "stft_norm": {
     "line number": [
      809
     ]
    },
    "stft_norm2": {
     "line number": [
      801
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._PhiT": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "object": {
     "line number": [
      814
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.inverse_sparse.mxne_optim._PhiT.__call__": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": {
    "istft": {
     "line number": [
      827,
      833
     ]
    },
    "numpy.array_split": {
     "line number": [
      831
     ]
    },
    "numpy.cumsum": {
     "line number": [
      831
     ]
    },
    "numpy.sqrt": {
     "line number": [
      836
     ]
    },
    "numpy.zeros": {
     "line number": [
      830
     ]
    },
    "range": {
     "line number": [
      832
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._PhiT.__init__": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      822
     ]
    },
    "len": {
     "line number": [
      822
     ]
    },
    "numpy.ndarray": {
     "line number": [
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._bcd": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "dgemm": {
     "line number": [
      411,
      418,
      429
     ]
    },
    "enumerate": {
     "line number": [
      407
     ]
    },
    "math.sqrt": {
     "line number": [
      422
     ]
    },
    "max": {
     "line number": [
      427
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      405
     ]
    },
    "slice": {
     "line number": [
      408
     ]
    },
    "sum_squared": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_bcd": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      335
     ]
    },
    "max": {
     "line number": [
      363
     ]
    },
    "mne.inverse_sparse.mxne_optim._bcd": {
     "line number": [
      357
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21": {
     "line number": [
      361
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      354
     ]
    },
    "numpy.asfortranarray": {
     "line number": [
      340
     ]
    },
    "numpy.dot": {
     "line number": [
      331
     ]
    },
    "numpy.float64": {
     "line number": [
      342,
      343
     ]
    },
    "numpy.inf": {
     "line number": [
      334
     ]
    },
    "numpy.sum": {
     "line number": [
      367
     ]
    },
    "numpy.zeros": {
     "line number": [
      327,
      335
     ]
    },
    "range": {
     "line number": [
      352,
      356
     ]
    },
    "slice": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_cd": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "len": {
     "line number": [
      301
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21": {
     "line number": [
      313
     ]
    },
    "numpy.any": {
     "line number": [
      311
     ]
    },
    "numpy.zeros": {
     "line number": [
      307
     ]
    },
    "sklearn.linear_model.MultiTaskLasso": {
     "line number": [
      301
     ]
    },
    "sum_squared": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_prox": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      255
     ]
    },
    "math.sqrt": {
     "line number": [
      266
     ]
    },
    "max": {
     "line number": [
      281
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21": {
     "line number": [
      279
     ]
    },
    "mne.inverse_sparse.mxne_optim.prox_l21": {
     "line number": [
      263
     ]
    },
    "numpy.dot": {
     "line number": [
      234,
      235,
      243,
      247,
      249,
      260,
      274,
      276
     ]
    },
    "numpy.inf": {
     "line number": [
      254
     ]
    },
    "numpy.ones": {
     "line number": [
      255
     ]
    },
    "numpy.zeros": {
     "line number": [
      252
     ]
    },
    "range": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1139
     ]
    },
    "float": {
     "line number": [
      1235
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21l1": {
     "line number": [
      1221
     ]
    },
    "numpy.abs": {
     "line number": [
      1190
     ]
    },
    "numpy.all": {
     "line number": [
      1192
     ]
    },
    "numpy.any": {
     "line number": [
      1169,
      1220
     ]
    },
    "numpy.arange": {
     "line number": [
      1139
     ]
    },
    "numpy.asfortranarray": {
     "line number": [
      1133
     ]
    },
    "numpy.dot": {
     "line number": [
      1144,
      1172,
      1177,
      1216
     ]
    },
    "numpy.hsplit": {
     "line number": [
      1139
     ]
    },
    "numpy.inf": {
     "line number": [
      1158
     ]
    },
    "numpy.maximum": {
     "line number": [
      1197,
      1197,
      1210,
      1212
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1201
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1190,
      1205
     ]
    },
    "numpy.sum": {
     "line number": [
      1190,
      1227,
      1235
     ]
    },
    "numpy.vstack": {
     "line number": [
      1219
     ]
    },
    "numpy.where": {
     "line number": [
      1142
     ]
    },
    "phi": {
     "line number": [
      1187,
      1189,
      1222
     ]
    },
    "phi.norm": {
     "line number": [
      1205
     ]
    },
    "phiT": {
     "line number": [
      1144,
      1176,
      1216,
      1222
     ]
    },
    "range": {
     "line number": [
      1160,
      1219
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      1180
     ]
    },
    "zip": {
     "line number": [
      1139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1258
     ]
    },
    "bool": {
     "line number": [
      1254,
      1298
     ]
    },
    "dict": {
     "line number": [
      1265,
      1275,
      1285
     ]
    },
    "dict.fromkeys": {
     "line number": [
      1253,
      1274
     ]
    },
    "len": {
     "line number": [
      1264,
      1266,
      1285,
      1286,
      1298,
      1311,
      1322
     ]
    },
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_": {
     "line number": [
      1276,
      1296
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21l1": {
     "line number": [
      1312
     ]
    },
    "numpy.any": {
     "line number": [
      1261,
      1311,
      1322
     ]
    },
    "numpy.arange": {
     "line number": [
      1253,
      1274
     ]
    },
    "numpy.complex128": {
     "line number": [
      1325
     ]
    },
    "numpy.inf": {
     "line number": [
      1270
     ]
    },
    "numpy.ones": {
     "line number": [
      1298
     ]
    },
    "numpy.sum": {
     "line number": [
      1316
     ]
    },
    "numpy.vsplit": {
     "line number": [
      1266
     ]
    },
    "numpy.vstack": {
     "line number": [
      1311,
      1322
     ]
    },
    "numpy.where": {
     "line number": [
      1284,
      1305
     ]
    },
    "numpy.zeros": {
     "line number": [
      1254,
      1325,
      1326
     ]
    },
    "phi": {
     "line number": [
      1278,
      1300,
      1314
     ]
    },
    "phi.n_coefs.sum": {
     "line number": [
      1257,
      1325
     ]
    },
    "phiT": {
     "line number": [
      1278,
      1300,
      1314,
      1323
     ]
    },
    "range": {
     "line number": [
      1260,
      1269,
      1285,
      1286,
      1311,
      1322
     ]
    },
    "zip": {
     "line number": [
      1265,
      1275,
      1285
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.dgap_l21": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "min": {
     "line number": [
      218
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_l21": {
     "line number": [
      212
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_l2inf": {
     "line number": [
      216
     ]
    },
    "numpy.dot": {
     "line number": [
      210,
      216
     ]
    },
    "numpy.sum": {
     "line number": [
      219
     ]
    },
    "sum_squared": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.dgap_l21l1": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": {
    "max": {
     "line number": [
      1120
     ]
    },
    "min": {
     "line number": [
      1117
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_epsilon_inf": {
     "line number": [
      1115
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_l1_tf": {
     "line number": [
      1109
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_l21_tf": {
     "line number": [
      1110
     ]
    },
    "numpy.dot": {
     "line number": [
      1096
     ]
    },
    "numpy.sum": {
     "line number": [
      1119
     ]
    },
    "phi": {
     "line number": [
      1109,
      1110,
      1115
     ]
    },
    "phiT": {
     "line number": [
      1095
     ]
    },
    "sum_squared": {
     "line number": [
      1111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.groups_norm2": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.power": {
     "line number": [
      19
     ]
    },
    "numpy.sum": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      676
     ]
    },
    "compute_bias": {
     "line number": [
      726
     ]
    },
    "g": {
     "line number": [
      711
     ]
    },
    "gprime": {
     "line number": [
      709
     ]
    },
    "list": {
     "line number": [
      674
     ]
    },
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
     "line number": [
      687,
      692,
      697
     ]
    },
    "numpy.abs": {
     "line number": [
      716
     ]
    },
    "numpy.all": {
     "line number": [
      715,
      716
     ]
    },
    "numpy.any": {
     "line number": [
      725
     ]
    },
    "numpy.dot": {
     "line number": [
      710
     ]
    },
    "numpy.newaxis": {
     "line number": [
      683,
      708,
      727
     ]
    },
    "numpy.ones": {
     "line number": [
      676,
      677
     ]
    },
    "numpy.sum": {
     "line number": [
      686,
      711
     ]
    },
    "numpy.zeros": {
     "line number": [
      678
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      720
     ]
    },
    "print": {
     "line number": [
      717
     ]
    },
    "range": {
     "line number": [
      680
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      710,
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver.g": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_optim.groups_norm2": {
     "line number": [
      669
     ]
    },
    "numpy.sqrt": {
     "line number": [
      669,
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver.gprime": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "g": {
     "line number": [
      672
     ]
    },
    "numpy.repeat": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1514
     ]
    },
    "bool": {
     "line number": [
      1550
     ]
    },
    "compute_bias": {
     "line number": [
      1602
     ]
    },
    "float": {
     "line number": [
      1518
     ]
    },
    "g_space": {
     "line number": [
      1576
     ]
    },
    "g_space_prime_inv": {
     "line number": [
      1561
     ]
    },
    "g_time": {
     "line number": [
      1577
     ]
    },
    "g_time_prime_inv": {
     "line number": [
      1562
     ]
    },
    "int": {
     "line number": [
      1518
     ]
    },
    "len": {
     "line number": [
      1513,
      1513
     ]
    },
    "list": {
     "line number": [
      1548
     ]
    },
    "mne.inverse_sparse.mxne_optim._Phi": {
     "line number": [
      1521
     ]
    },
    "mne.inverse_sparse.mxne_optim._PhiT": {
     "line number": [
      1522
     ]
    },
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set": {
     "line number": [
      1567
     ]
    },
    "numpy.abs": {
     "line number": [
      1589
     ]
    },
    "numpy.amax": {
     "line number": [
      1589
     ]
    },
    "numpy.array_equal": {
     "line number": [
      1588
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      1511,
      1512
     ]
    },
    "numpy.ceil": {
     "line number": [
      1518
     ]
    },
    "numpy.complex128": {
     "line number": [
      1551
     ]
    },
    "numpy.dot": {
     "line number": [
      1530,
      1579
     ]
    },
    "numpy.empty": {
     "line number": [
      1527
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1603
     ]
    },
    "numpy.ones": {
     "line number": [
      1550
     ]
    },
    "numpy.sum": {
     "line number": [
      1525,
      1576
     ]
    },
    "numpy.zeros": {
     "line number": [
      1551
     ]
    },
    "phi": {
     "line number": [
      1521,
      1569
     ]
    },
    "phi.n_coefs.sum": {
     "line number": [
      1551
     ]
    },
    "phi.norm": {
     "line number": [
      1577
     ]
    },
    "phiT": {
     "line number": [
      1522,
      1569
     ]
    },
    "print": {
     "line number": [
      1591
     ]
    },
    "range": {
     "line number": [
      1528,
      1553
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      1530,
      1579,
      1594
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_space": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      1534,
      1534
     ]
    },
    "phi.norm": {
     "line number": [
      1534
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_space_prime_inv": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": {
    "g_space": {
     "line number": [
      1538
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_time": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      1541
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1541,
      1541
     ]
    },
    "numpy.sum": {
     "line number": [
      1541
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_time_prime_inv": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": {
    "g_time": {
     "line number": [
      1546
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      503
     ]
    },
    "bool": {
     "line number": [
      547
     ]
    },
    "compute_bias": {
     "line number": [
      606
     ]
    },
    "float": {
     "line number": [
      498
     ]
    },
    "l21_solver": {
     "line number": [
      562,
      600
     ]
    },
    "list": {
     "line number": [
      544
     ]
    },
    "max": {
     "line number": [
      570
     ]
    },
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_bcd": {
     "line number": [
      529
     ]
    },
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_cd": {
     "line number": [
      525
     ]
    },
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_prox": {
     "line number": [
      540
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21": {
     "line number": [
      568,
      603
     ]
    },
    "mne.inverse_sparse.mxne_optim.groups_norm2": {
     "line number": [
      548,
      584
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_l2inf": {
     "line number": [
      496
     ]
    },
    "numpy.any": {
     "line number": [
      605
     ]
    },
    "numpy.arange": {
     "line number": [
      552,
      589
     ]
    },
    "numpy.argsort": {
     "line number": [
      548,
      584
     ]
    },
    "numpy.asfortranarray": {
     "line number": [
      530
     ]
    },
    "numpy.dot": {
     "line number": [
      496,
      537,
      548,
      584
     ]
    },
    "numpy.empty": {
     "line number": [
      534
     ]
    },
    "numpy.inf": {
     "line number": [
      545
     ]
    },
    "numpy.newaxis": {
     "line number": [
      607
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      595
     ]
    },
    "numpy.sum": {
     "line number": [
      532,
      554,
      576,
      593,
      609
     ]
    },
    "numpy.where": {
     "line number": [
      566,
      592
     ]
    },
    "numpy.zeros": {
     "line number": [
      547,
      594
     ]
    },
    "range": {
     "line number": [
      535,
      555
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      537,
      541,
      561
     ]
    },
    "warn": {
     "line number": [
      514,
      518,
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_epsilon": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      917
     ]
    },
    "len": {
     "line number": [
      916
     ]
    },
    "numpy.abs": {
     "line number": [
      986
     ]
    },
    "numpy.arange": {
     "line number": [
      967
     ]
    },
    "numpy.argsort": {
     "line number": [
      952,
      955
     ]
    },
    "numpy.array_split": {
     "line number": [
      917
     ]
    },
    "numpy.cumsum": {
     "line number": [
      918,
      966,
      968,
      971,
      972,
      973
     ]
    },
    "numpy.full": {
     "line number": [
      916
     ]
    },
    "numpy.max": {
     "line number": [
      929,
      929,
      944
     ]
    },
    "numpy.repeat": {
     "line number": [
      960,
      962
     ]
    },
    "numpy.sqrt": {
     "line number": [
      935,
      990
     ]
    },
    "numpy.where": {
     "line number": [
      976
     ]
    },
    "phi.n_coefs": {
     "line number": [
      918
     ]
    },
    "phi.n_steps": {
     "line number": [
      919,
      920
     ]
    },
    "phi.norm": {
     "line number": [
      935
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_epsilon_inf": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_optim.norm_epsilon": {
     "line number": [
      1033
     ]
    },
    "numpy.abs": {
     "line number": [
      1023
     ]
    },
    "numpy.dot": {
     "line number": [
      1023
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1026
     ]
    },
    "phi": {
     "line number": [
      1023,
      1033
     ]
    },
    "range": {
     "line number": [
      1029
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l1_tf": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      857
     ]
    },
    "numpy.sqrt": {
     "line number": [
      856
     ]
    },
    "numpy.sum": {
     "line number": [
      856
     ]
    },
    "phi.norm": {
     "line number": [
      861
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l21": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_optim.groups_norm2": {
     "line number": [
      37
     ]
    },
    "numpy.sqrt": {
     "line number": [
      37
     ]
    },
    "numpy.sum": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l21_tf": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      842
     ]
    },
    "phi.norm": {
     "line number": [
      843
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l2inf": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "math.sqrt": {
     "line number": [
      28
     ]
    },
    "mne.inverse_sparse.mxne_optim.groups_norm2": {
     "line number": [
      28
     ]
    },
    "numpy.max": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.prox_l1": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "len": {
     "line number": [
      168
     ]
    },
    "numpy.any": {
     "line number": [
      163
     ]
    },
    "numpy.maximum": {
     "line number": [
      161,
      161
     ]
    },
    "numpy.sqrt": {
     "line number": [
      159
     ]
    },
    "numpy.tile": {
     "line number": [
      166
     ]
    },
    "range": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.prox_l21": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      85
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "numpy.maximum": {
     "line number": [
      97,
      97
     ]
    },
    "numpy.newaxis": {
     "line number": [
      104,
      106,
      106
     ]
    },
    "numpy.sqrt": {
     "line number": [
      92,
      94
     ]
    },
    "numpy.tile": {
     "line number": [
      100,
      101
     ]
    },
    "numpy.zeros": {
     "line number": [
      85
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      85
     ]
    },
    "stft_norm2": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.safe_max_abs": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      763
     ]
    },
    "numpy.max": {
     "line number": [
      763
     ]
    },
    "numpy.sum": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.safe_max_abs_diff": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      772
     ]
    },
    "numpy.max": {
     "line number": [
      772
     ]
    },
    "numpy.sum": {
     "line number": [
      770,
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.tf_lipschitz_constant": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      755
     ]
    },
    "numpy.abs": {
     "line number": [
      753
     ]
    },
    "numpy.dot": {
     "line number": [
      750,
      751
     ]
    },
    "numpy.float64": {
     "line number": [
      743
     ]
    },
    "numpy.max": {
     "line number": [
      753
     ]
    },
    "numpy.ones": {
     "line number": [
      743
     ]
    },
    "numpy.real": {
     "line number": [
      749
     ]
    },
    "phi": {
     "line number": [
      744,
      752
     ]
    },
    "phiT": {
     "line number": [
      749
     ]
    },
    "range": {
     "line number": [
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1415
     ]
    },
    "compute_bias": {
     "line number": [
      1440
     ]
    },
    "float": {
     "line number": [
      1419
     ]
    },
    "int": {
     "line number": [
      1419
     ]
    },
    "len": {
     "line number": [
      1414,
      1414
     ]
    },
    "mne.inverse_sparse.mxne_optim._Phi": {
     "line number": [
      1422
     ]
    },
    "mne.inverse_sparse.mxne_optim._PhiT": {
     "line number": [
      1423
     ]
    },
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set": {
     "line number": [
      1434
     ]
    },
    "numpy.any": {
     "line number": [
      1439
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      1412,
      1413
     ]
    },
    "numpy.ceil": {
     "line number": [
      1419
     ]
    },
    "numpy.dot": {
     "line number": [
      1431
     ]
    },
    "numpy.empty": {
     "line number": [
      1428
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1441
     ]
    },
    "numpy.sum": {
     "line number": [
      1426
     ]
    },
    "phi": {
     "line number": [
      1422,
      1435
     ]
    },
    "phiT": {
     "line number": [
      1423,
      1435
     ]
    },
    "range": {
     "line number": [
      1429
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      1431
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_gamma_map": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      24
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.data_path": {
     "line number": [
      25,
      26,
      27,
      29
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      164
     ]
    },
    "os.path.join": {
     "line number": [
      25,
      26,
      27,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_gamma_map.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map._check_stc": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "int": {
     "line number": [
      44
     ]
    },
    "isinstance": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      44
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      37
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_stc_res": {
     "line number": [
      52
     ]
    },
    "numpy.argsort": {
     "line number": [
      41
     ]
    },
    "numpy.concatenate": {
     "line number": [
      43
     ]
    },
    "numpy.diff": {
     "line number": [
      47
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      47
     ]
    },
    "numpy.sum": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_stc_res": {
  "data": {
   "shadows": "mne.minimum_norm.tests.test_inverse.assert_stc_res"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_stcs_equal": {
  "data": {
   "shadows": "mne.utils.assert_stcs_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_var_exp_log": {
  "data": {
   "shadows": "mne.minimum_norm.tests.test_inverse.assert_var_exp_log"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.data_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_cov": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_evoked": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_fwd": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.gamma_map": {
  "data": {
   "shadows": "mne.inverse_sparse.gamma_map"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.make_stc_from_dipoles": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.subjects_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.test_gamma_map_standard": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      100
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      60
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      69
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      56
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      100
     ]
    },
    "mne.inverse_sparse.gamma_map": {
     "line number": [
      73,
      79,
      87,
      94,
      105
     ]
    },
    "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles": {
     "line number": [
      101
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map._check_stc": {
     "line number": [
      75,
      85,
      90,
      108
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.fname_cov": {
     "line number": [
      68
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.fname_evoked": {
     "line number": [
      63
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.fname_fwd": {
     "line number": [
      59
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.pytest": {
     "line number": [
      55
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
     "line number": [
      76,
      83,
      97
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      62
     ]
    },
    "mne.read_cov": {
     "line number": [
      68
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      63
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      59
     ]
    },
    "mne.utils.assert_stcs_equal": {
     "line number": [
      84,
      102
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      72,
      78,
      93
     ]
    },
    "numpy.mean": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      99
     ]
    },
    "sum": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.test_gamma_map_vol_sphere": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      133,
      136
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      121
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      112
     ]
    },
    "mne.inverse_sparse.gamma_map": {
     "line number": [
      133,
      136,
      139,
      154
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.fname_cov": {
     "line number": [
      120
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.fname_evoked": {
     "line number": [
      115
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.mne": {
     "line number": [
      124,
      125,
      129,
      147,
      151,
      160
     ]
    },
    "mne.inverse_sparse.tests.test_gamma_map.pytest": {
     "line number": [
      133,
      136,
      111
     ]
    },
    "mne.read_cov": {
     "line number": [
      120
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      115
     ]
    },
    "numpy.abs": {
     "line number": [
      161
     ]
    },
    "numpy.argmax": {
     "line number": [
      157
     ]
    },
    "numpy.dot": {
     "line number": [
      161
     ]
    },
    "numpy.max": {
     "line number": [
      156
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.compute_bias": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_debiasing.compute_bias"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.test_compute_debiasing": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_debiasing.compute_bias": {
     "line number": [
      19,
      21
     ]
    },
    "numpy.arange": {
     "line number": [
      17
     ]
    },
    "numpy.dot": {
     "line number": [
      18
     ]
    },
    "numpy.float64": {
     "line number": [
      17
     ]
    },
    "numpy.newaxis": {
     "line number": [
      18
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      14
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      20,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      27
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.data_path": {
     "line number": [
      29,
      30,
      31,
      34
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.label": {
     "line number": [
      34
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      339
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      30,
      31,
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse._split_gof": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse._split_gof"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_stc_res": {
  "data": {
   "shadows": "mne.minimum_norm.tests.test_inverse.assert_stc_res"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_stcs_equal": {
  "data": {
   "shadows": "mne.utils.assert_stcs_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_var_exp_log": {
  "data": {
   "shadows": "mne.minimum_norm.tests.test_inverse.assert_var_exp_log"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.data_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_data": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_fwd": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_label": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "mne.datasets.testing._pytest_param": {
     "line number": [
      37
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_fwd": {
     "line number": [
      41
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
     "line number": [
      37
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.label": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.make_stc_from_dipoles": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.mixed_norm": {
  "data": {
   "shadows": "mne.inverse_sparse.mixed_norm"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_mxne_inverse_standard": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      109,
      183,
      185
     ]
    },
    "isinstance": {
     "line number": [
      119
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      64
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      44
     ]
    },
    "mne.dipole.Dipole": {
     "line number": [
      119
     ]
    },
    "mne.inverse_sparse.mixed_norm": {
     "line number": [
      79,
      84,
      88,
      104,
      106,
      110,
      114,
      126,
      136,
      149
     ]
    },
    "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles": {
     "line number": [
      118
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov": {
     "line number": [
      50
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_data": {
     "line number": [
      56
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_label": {
     "line number": [
      61
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.forward": {
     "line number": [
      64,
      64,
      67,
      79,
      84,
      88,
      104,
      106,
      110,
      114,
      118,
      127,
      136,
      145,
      150,
      157,
      163,
      173,
      177,
      183,
      185
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.label": {
     "line number": [
      61,
      62,
      98,
      99,
      100,
      142,
      154,
      169
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
     "line number": [
      83,
      103,
      105,
      109,
      109,
      113,
      125,
      135,
      148,
      183,
      185,
      45,
      46
     ]
    },
    "mne.inverse_sparse.tf_mixed_norm": {
     "line number": [
      163,
      172,
      176,
      183,
      185
     ]
    },
    "mne.label.read_label": {
     "line number": [
      61
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      70
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      67
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_stc_res": {
     "line number": [
      145,
      157
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
     "line number": [
      122,
      131,
      143,
      156
     ]
    },
    "mne.read_cov": {
     "line number": [
      50
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      56
     ]
    },
    "mne.utils.assert_stcs_equal": {
     "line number": [
      108,
      121,
      181
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      113,
      125,
      135,
      148
     ]
    },
    "numpy.abs": {
     "line number": [
      72,
      73
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      95,
      96,
      97,
      133
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      92,
      93,
      94,
      141,
      153,
      168
     ]
    },
    "sum": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_mxne_vol_sphere": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      210,
      214
     ]
    },
    "isinstance": {
     "line number": [
      223,
      256
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      190
     ]
    },
    "mne.inverse_sparse.mixed_norm": {
     "line number": [
      210,
      214,
      220,
      236
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov": {
     "line number": [
      195
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_data": {
     "line number": [
      193
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.mne": {
     "line number": [
      201,
      202,
      206,
      229,
      233,
      244
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
     "line number": [
      210,
      214,
      189
     ]
    },
    "mne.inverse_sparse.tf_mixed_norm": {
     "line number": [
      253
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
     "line number": [
      225
     ]
    },
    "mne.read_cov": {
     "line number": [
      195
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      193
     ]
    },
    "mne.source_estimate.VolSourceEstimate": {
     "line number": [
      223,
      256
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      219
     ]
    },
    "numpy.abs": {
     "line number": [
      245
     ]
    },
    "numpy.argmax": {
     "line number": [
      241
     ]
    },
    "numpy.dot": {
     "line number": [
      245
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      246
     ]
    },
    "numpy.max": {
     "line number": [
      240
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      229
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      224,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_split_gof_basic": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_inverse._split_gof": {
     "line number": [
      291
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
     "line number": [
      260
     ]
    },
    "numpy.array": {
     "line number": [
      265,
      269,
      281
     ]
    },
    "numpy.concatenate": {
     "line number": [
      274,
      275,
      295
     ]
    },
    "numpy.ones": {
     "line number": [
      266,
      267
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      269,
      292,
      299,
      300,
      302
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      297
     ]
    },
    "numpy.zeros": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_split_gof_meg": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "len": {
     "line number": [
      320,
      327
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      305
     ]
    },
    "mne.inverse_sparse.mxne_inverse._split_gof": {
     "line number": [
      325,
      332
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.forward": {
     "line number": [
      317
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
     "line number": [
      306
     ]
    },
    "numpy.abs": {
     "line number": [
      321
     ]
    },
    "numpy.array": {
     "line number": [
      329
     ]
    },
    "numpy.diag": {
     "line number": [
      325
     ]
    },
    "numpy.dot": {
     "line number": [
      321
     ]
    },
    "numpy.eye": {
     "line number": [
      327
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      319
     ]
    },
    "numpy.newaxis": {
     "line number": [
      329
     ]
    },
    "numpy.outer": {
     "line number": [
      321
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      326,
      327,
      335,
      336
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      322
     ]
    },
    "numpy.triu_indices": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.tf_mixed_norm": {
  "data": {
   "shadows": "mne.inverse_sparse.tf_mixed_norm"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._Phi": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim._Phi"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._PhiT": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim._PhiT"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      32
     ]
    },
    "numpy.linspace": {
     "line number": [
      27
     ]
    },
    "numpy.pi": {
     "line number": [
      27,
      30,
      31
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      22
     ]
    },
    "numpy.sin": {
     "line number": [
      28,
      29
     ]
    },
    "numpy.std": {
     "line number": [
      24
     ]
    },
    "numpy.zeros": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.dgap_l21l1": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.dgap_l21l1"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.iterative_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.iterative_tf_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.norm_epsilon": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.norm_epsilon"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.norm_epsilon_inf": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.norm_epsilon_inf"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.stft_norm2": {
  "data": {
   "shadows": "mne.time_frequency._stft.stft_norm2"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_dgapl21l1": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      199
     ]
    },
    "float": {
     "line number": [
      186
     ]
    },
    "int": {
     "line number": [
      186
     ]
    },
    "len": {
     "line number": [
      212,
      220
     ]
    },
    "mne.inverse_sparse.mxne_optim._Phi": {
     "line number": [
      189
     ]
    },
    "mne.inverse_sparse.mxne_optim._PhiT": {
     "line number": [
      190
     ]
    },
    "mne.inverse_sparse.mxne_optim.dgap_l21l1": {
     "line number": [
      199
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_epsilon_inf": {
     "line number": [
      193
     ]
    },
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
     "line number": [
      205,
      214
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
     "line number": [
      182
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
     "line number": [
      177,
      178
     ]
    },
    "numpy.array": {
     "line number": [
      185,
      185
     ]
    },
    "numpy.ceil": {
     "line number": [
      186
     ]
    },
    "numpy.inf": {
     "line number": [
      201
     ]
    },
    "numpy.ones": {
     "line number": [
      199
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      203
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      210,
      211,
      212,
      218,
      219,
      220
     ]
    },
    "numpy.zeros": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_iterative_reweighted_mxne": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      293,
      304
     ]
    },
    "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver": {
     "line number": [
      259,
      263,
      270,
      275,
      280,
      288,
      294,
      300,
      305
     ]
    },
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
     "line number": [
      255
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
     "line number": [
      254,
      258,
      262,
      269,
      274,
      279,
      287,
      293,
      304,
      242
     ]
    },
    "numpy.dot": {
     "line number": [
      252
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      246
     ]
    },
    "numpy.std": {
     "line number": [
      248
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      266,
      267
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      284,
      285
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      273,
      278,
      283,
      291,
      297,
      298,
      303,
      308,
      309
     ]
    },
    "numpy.where": {
     "line number": [
      273,
      278,
      283,
      291,
      297,
      303,
      308
     ]
    },
    "numpy.zeros": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_iterative_reweighted_tfmxne": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver": {
     "line number": [
      323,
      330,
      336
     ]
    },
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
     "line number": [
      320
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
     "line number": [
      315
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
     "line number": [
      312
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      326
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      327,
      333,
      339
     ]
    },
    "numpy.where": {
     "line number": [
      327,
      333,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_l21_mxne": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      95,
      110
     ]
    },
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
     "line number": [
      50,
      55,
      61,
      71,
      75,
      79,
      86,
      90,
      96,
      103,
      107,
      111
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
     "line number": [
      49,
      54,
      60,
      70,
      74,
      78,
      85,
      89,
      95,
      102,
      106,
      110
     ]
    },
    "numpy.dot": {
     "line number": [
      46
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      40
     ]
    },
    "numpy.std": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      66,
      67,
      68,
      82,
      83,
      99,
      100,
      116
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      53,
      59,
      65,
      73,
      77,
      81,
      88,
      92,
      98,
      105,
      109,
      114,
      115
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      58,
      64
     ]
    },
    "numpy.where": {
     "line number": [
      53,
      59,
      65,
      73,
      77,
      81,
      88,
      92,
      98,
      105,
      109,
      114
     ]
    },
    "numpy.zeros": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_norm_epsilon": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "float": {
     "line number": [
      139
     ]
    },
    "int": {
     "line number": [
      139
     ]
    },
    "mne.inverse_sparse.mxne_optim._Phi": {
     "line number": [
      142
     ]
    },
    "mne.inverse_sparse.mxne_optim.norm_epsilon": {
     "line number": [
      146,
      149,
      152,
      156,
      163,
      164,
      171,
      173
     ]
    },
    "mne.time_frequency._stft.stft_norm2": {
     "line number": [
      157
     ]
    },
    "numpy.abs": {
     "line number": [
      162
     ]
    },
    "numpy.arange": {
     "line number": [
      154,
      168
     ]
    },
    "numpy.array": {
     "line number": [
      136,
      137
     ]
    },
    "numpy.ceil": {
     "line number": [
      139
     ]
    },
    "numpy.max": {
     "line number": [
      149,
      152
     ]
    },
    "numpy.ones": {
     "line number": [
      161,
      172,
      174
     ]
    },
    "numpy.random.randn": {
     "line number": [
      162
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      146,
      149,
      152,
      156,
      163,
      170
     ]
    },
    "numpy.zeros": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_tf_mxne": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
     "line number": [
      127
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
     "line number": [
      124
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
     "line number": [
      126
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      131
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      130
     ]
    },
    "numpy.where": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_tf_mxne_vs_mxne": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
     "line number": [
      235
     ]
    },
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
     "line number": [
      230
     ]
    },
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
     "line number": [
      228
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.tf_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.io": {
  "data": {},
  "type": "module"
 },
 "mne.io.RawFIF": {
  "data": {
   "shadows": "Raw"
  },
  "type": "import"
 },
 "mne.io._digitization": {
  "data": {
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      33
     ]
    },
    "mne.io._digitization._dig_kind_dict": {
     "line number": [
      41,
      47
     ]
    },
    "sorted": {
     "line number": [
      41
     ]
    },
    "tuple": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io._digitization.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.io._digitization.DigPoint": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io._digitization.DigPoint.__deepcopy__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "mne.io._digitization.DigPoint": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization.DigPoint.__eq__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "any": {
     "line number": [
      164
     ]
    },
    "numpy.allclose": {
     "line number": [
      167
     ]
    },
    "set": {
     "line number": [
      162,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization.DigPoint.__repr__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "_coord_frame_name": {
     "line number": [
      144
     ]
    },
    "mne.io._digitization._cardinal_kind_rev": {
     "line number": [
      138
     ]
    },
    "mne.io._digitization._dig_kind_proper": {
     "line number": [
      140
     ]
    },
    "mne.io._digitization._dig_kind_rev": {
     "line number": [
      141
     ]
    },
    "tuple": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.io._digitization._artemis123_read_pos": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "mne.io._digitization._call_make_dig_points": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._call_make_dig_points": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      514
     ]
    },
    "apply_trans": {
     "line number": [
      503,
      504,
      505,
      508,
      510
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      502
     ]
    },
    "mne.io._digitization._make_dig_points": {
     "line number": [
      516
     ]
    },
    "numpy.float32": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._cardinal_ident_mapping": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "mne.io._digitization._cardinal_kind_rev": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io._digitization._coord_frame_const": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      406
     ]
    },
    "isinstance": {
     "line number": [
      405
     ]
    },
    "sorted": {
     "line number": [
      407
     ]
    },
    "str": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._count_points_by_type": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "collections.Counter": {
     "line number": [
      103
     ]
    },
    "dict": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._dig_keys": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_dict": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_ints": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_proper": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_rev": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io._digitization._format_dig_points": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      63,
      88
     ]
    },
    "mne.io._digitization.DigPoint": {
     "line number": [
      94
     ]
    },
    "mne.io._digitization.heapq": {
     "line number": [
      73,
      75,
      77,
      79,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._get_data_as_dict_from_dig": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "Bunch": {
     "line number": [
      266
     ]
    },
    "dict": {
     "line number": [
      246
     ]
    },
    "len": {
     "line number": [
      263,
      270,
      271,
      272
     ]
    },
    "list": {
     "line number": [
      245,
      245,
      245,
      246
     ]
    },
    "mne.io._digitization._cardinal_ident_mapping": {
     "line number": [
      250
     ]
    },
    "numpy.array": {
     "line number": [
      270,
      271,
      272
     ]
    },
    "set": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._get_dig_eeg": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "mne.io._digitization._get_fid_coords": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "Bunch": {
     "line number": [
      279
     ]
    },
    "ValueError": {
     "line number": [
      290,
      294
     ]
    },
    "dict": {
     "line number": [
      280
     ]
    },
    "len": {
     "line number": [
      288,
      293,
      296
     ]
    },
    "mne.io._digitization._cardinal_ident_mapping": {
     "line number": [
      284
     ]
    },
    "set": {
     "line number": [
      289,
      289,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._make_bti_dig_points": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      627
     ]
    },
    "combine_transforms": {
     "line number": [
      623,
      625
     ]
    },
    "invert_transform": {
     "line number": [
      623
     ]
    },
    "mne.io._digitization._call_make_dig_points": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._make_dig_points": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      445,
      453,
      461,
      469,
      478,
      490
     ]
    },
    "_validate_type": {
     "line number": [
      488
     ]
    },
    "enumerate": {
     "line number": [
      471,
      480
     ]
    },
    "int": {
     "line number": [
      489,
      493
     ]
    },
    "len": {
     "line number": [
      491
     ]
    },
    "mne.io._digitization._coord_frame_const": {
     "line number": [
      439
     ]
    },
    "mne.io._digitization._format_dig_points": {
     "line number": [
      497
     ]
    },
    "numpy.arange": {
     "line number": [
      491
     ]
    },
    "numpy.asarray": {
     "line number": [
      443,
      451,
      459,
      467,
      476
     ]
    },
    "str": {
     "line number": [
      488
     ]
    },
    "zip": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._read_dig_fif": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "dir_tree_find": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      174,
      176
     ]
    },
    "mne.io._digitization._format_dig_points": {
     "line number": [
      188
     ]
    },
    "range": {
     "line number": [
      181
     ]
    },
    "read_tag": {
     "line number": [
      185
     ]
    },
    "warn": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._read_dig_points": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      362
     ]
    },
    "_check_option": {
     "line number": [
      329
     ]
    },
    "float": {
     "line number": [
      348
     ]
    },
    "mne.io._digitization.re": {
     "line number": [
      346,
      347
     ]
    },
    "numpy.array": {
     "line number": [
      348
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      353
     ]
    },
    "open": {
     "line number": [
      340
     ]
    },
    "os.path.splitext": {
     "line number": [
      331
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      351
     ]
    },
    "warn": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._set_dig_kit": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      599
     ]
    },
    "ValueError": {
     "line number": [
      575,
      579
     ]
    },
    "_decimate_points": {
     "line number": [
      564
     ]
    },
    "apply_trans": {
     "line number": [
      584,
      588,
      589,
      590
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      590
     ]
    },
    "fit_matched_points": {
     "line number": [
      593
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      587
     ]
    },
    "isinstance": {
     "line number": [
      560,
      572,
      581
     ]
    },
    "len": {
     "line number": [
      562,
      565,
      574,
      578
     ]
    },
    "mne.io._digitization._make_dig_points": {
     "line number": [
      598
     ]
    },
    "mne.io._digitization._read_dig_points": {
     "line number": [
      561,
      573
     ]
    },
    "read_mrk": {
     "line number": [
      582
     ]
    },
    "str": {
     "line number": [
      560,
      572,
      581
     ]
    },
    "warn": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization._write_dig_points": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      389,
      401
     ]
    },
    "len": {
     "line number": [
      397
     ]
    },
    "mne.io._digitization.datetime": {
     "line number": [
      394
     ]
    },
    "numpy.asarray": {
     "line number": [
      385
     ]
    },
    "numpy.savetxt": {
     "line number": [
      398
     ]
    },
    "open": {
     "line number": [
      392
     ]
    },
    "os.path.splitext": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._digitization.b": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io._digitization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io._digitization.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "mne.io._digitization.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.io._digitization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io._digitization.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io._digitization.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io._digitization.write_dig": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      211
     ]
    },
    "_to_const": {
     "line number": [
      207
     ]
    },
    "end_file": {
     "line number": [
      217
     ]
    },
    "len": {
     "line number": [
      210
     ]
    },
    "start_file": {
     "line number": [
      215
     ]
    },
    "str": {
     "line number": [
      213
     ]
    },
    "tuple": {
     "line number": [
      213
     ]
    },
    "write_dig_points": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._read_raw": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      48,
      49
     ]
    },
    "mne.io._read_raw._read_unsupported": {
     "line number": [
      48,
      49
     ]
    },
    "mne.io._read_raw.suggested": {
     "line number": [
      52
     ]
    },
    "mne.io._read_raw.supported": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io._read_raw.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.io._read_raw._read_unsupported": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      26
     ]
    },
    "pathlib.Path": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._read_raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io._read_raw.read_raw": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "mne.io._read_raw._read_unsupported": {
     "line number": [
      84
     ]
    },
    "mne.io._read_raw.readers": {
     "line number": [
      81,
      82
     ]
    },
    "pathlib.Path": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io._read_raw.readers": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.io._read_raw.suggested": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io._read_raw.supported": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.array": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.array": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.array.RawArray": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "mne.io.array.array.RawArray.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      62,
      65,
      75
     ]
    },
    "_check_option": {
     "line number": [
      57
     ]
    },
    "_validate_type": {
     "line number": [
      56
     ]
    },
    "float": {
     "line number": [
      85,
      86
     ]
    },
    "int": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      64,
      64,
      67,
      67,
      68
     ]
    },
    "mne.io.array.array.RawArray": {
     "line number": [
      80
     ]
    },
    "numpy.any": {
     "line number": [
      58
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      60
     ]
    },
    "numpy.complex128": {
     "line number": [
      58
     ]
    },
    "numpy.float64": {
     "line number": [
      58
     ]
    },
    "numpy.iscomplex": {
     "line number": [
      58
     ]
    },
    "super": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.array.array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.array.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.tests.test_array": {
  "data": {
   "symbols_in_volume": {
    "mne.io.array.tests.test_array.base_dir": {
     "line number": [
      22
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      177
     ]
    },
    "os.path.dirname": {
     "line number": [
      21
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.array.tests.test_array.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.RawArray": {
  "data": {
   "shadows": "mne.io.array.RawArray"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array._kind_dict": {
  "data": {
   "shadows": "mne.io.meas_info._kind_dict"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.array.tests.test_array.create_info": {
  "data": {
   "shadows": "mne.io.meas_info.create_info"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.fif_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.array.tests.test_array.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.test_array_copy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      52,
      69
     ]
    },
    "mne.io.array.RawArray": {
     "line number": [
      42,
      45,
      49,
      53,
      55,
      59,
      62,
      66,
      70
     ]
    },
    "mne.io.array.tests.test_array.pytest": {
     "line number": [
      52,
      69
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      39
     ]
    },
    "numpy.empty": {
     "line number": [
      40
     ]
    },
    "numpy.float32": {
     "line number": [
      45,
      53,
      62,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.array.tests.test_array.test_array_raw": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      100
     ]
    },
    "TypeError": {
     "line number": [
      113
     ]
    },
    "ValueError": {
     "line number": [
      97
     ]
    },
    "dict": {
     "line number": [
      119,
      166
     ]
    },
    "events": {
     "line number": [
      144,
      145,
      146,
      147,
      149
     ]
    },
    "len": {
     "line number": [
      117,
      146,
      149
     ]
    },
    "list": {
     "line number": [
      82
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      141
     ]
    },
    "mne.Epochs": {
     "line number": [
      147
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      165
     ]
    },
    "mne.find_events": {
     "line number": [
      144
     ]
    },
    "mne.io.array.RawArray": {
     "line number": [
      107,
      113,
      154,
      171
     ]
    },
    "mne.io.array.tests.test_array.fif_fname": {
     "line number": [
      77
     ]
    },
    "mne.io.array.tests.test_array.pytest": {
     "line number": [
      97,
      100,
      113,
      73
     ]
    },
    "mne.io.meas_info._kind_dict": {
     "line number": [
      104
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      97,
      100,
      103,
      106,
      154,
      169
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      77
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      107
     ]
    },
    "mne.pick_types": {
     "line number": [
      88,
      89,
      90,
      116
     ]
    },
    "numpy.array": {
     "line number": [
      93,
      94
     ]
    },
    "numpy.concatenate": {
     "line number": [
      88
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      152
     ]
    },
    "numpy.random.rand": {
     "line number": [
      164
     ]
    },
    "numpy.random.randint": {
     "line number": [
      162
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      110,
      111,
      155
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      135,
      136
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      104,
      117,
      149
     ]
    },
    "range": {
     "line number": [
      83,
      161
     ]
    },
    "repr": {
     "line number": [
      112
     ]
    },
    "str": {
     "line number": [
      161
     ]
    },
    "zip": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.array.tests.test_array.test_long_names": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "mne.io.array.RawArray": {
     "line number": [
      29,
      33
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      27,
      31
     ]
    },
    "numpy.empty": {
     "line number": [
      28,
      32
     ]
    },
    "range": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.artemis123": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.artemis123.RawArtemis123": {
  "data": {
   "lineno": 290
  },
  "type": "class"
 },
 "mne.io.artemis123.artemis123.RawArtemis123.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "DigPoint": {
     "line number": [
      393
     ]
    },
    "RuntimeError": {
     "line number": [
      315,
      319,
      376
     ]
    },
    "Transform": {
     "line number": [
      346,
      385,
      413
     ]
    },
    "_fit_coil_order_dev_head_trans": {
     "line number": [
      381
     ]
    },
    "_make_dig_points": {
     "line number": [
      422
     ]
    },
    "apply_trans": {
     "line number": [
      417,
      418,
      419,
      421
     ]
    },
    "compute_chpi_amplitudes": {
     "line number": [
      347
     ]
    },
    "compute_chpi_locs": {
     "line number": [
      350
     ]
    },
    "dict": {
     "line number": [
      342,
      343,
      428
     ]
    },
    "enumerate": {
     "line number": [
      357,
      389,
      432
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      411
     ]
    },
    "len": {
     "line number": [
      349,
      372,
      372,
      376,
      377
     ]
    },
    "mne.io.artemis123.artemis123.RawArtemis123": {
     "line number": [
      326
     ]
    },
    "mne.io.artemis123.artemis123._get_artemis123_info": {
     "line number": [
      321
     ]
    },
    "numpy.abs": {
     "line number": [
      397
     ]
    },
    "numpy.arange": {
     "line number": [
      443
     ]
    },
    "numpy.array": {
     "line number": [
      368,
      424
     ]
    },
    "numpy.delete": {
     "line number": [
      363,
      364
     ]
    },
    "numpy.float32": {
     "line number": [
      328
     ]
    },
    "numpy.zeros": {
     "line number": [
      344
     ]
    },
    "os.path.exists": {
     "line number": [
      318
     ]
    },
    "os.path.splitext": {
     "line number": [
      311
     ]
    },
    "range": {
     "line number": [
      345
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      395,
      396
     ]
    },
    "super": {
     "line number": [
      326
     ]
    },
    "warn": {
     "line number": [
      337,
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123.RawArtemis123._read_segment_file": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "_read_segments_file": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123._get_artemis123_info": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      141
     ]
    },
    "IOError": {
     "line number": [
      110
     ]
    },
    "ValueError": {
     "line number": [
      147,
      231
     ]
    },
    "_empty_info": {
     "line number": [
      132
     ]
    },
    "_load_mne_locs": {
     "line number": [
      169
     ]
    },
    "_read_pos": {
     "line number": [
      282
     ]
    },
    "dict": {
     "line number": [
      65,
      112,
      248,
      252,
      252,
      252,
      252,
      253,
      253,
      253,
      253
     ]
    },
    "enumerate": {
     "line number": [
      173
     ]
    },
    "float": {
     "line number": [
      132,
      175
     ]
    },
    "int": {
     "line number": [
      120,
      146
     ]
    },
    "len": {
     "line number": [
      103,
      109
     ]
    },
    "list": {
     "line number": [
      244
     ]
    },
    "mne.io.artemis123.artemis123.calendar": {
     "line number": [
      140
     ]
    },
    "mne.io.artemis123.artemis123.datetime": {
     "line number": [
      138
     ]
    },
    "numpy.zeros": {
     "line number": [
      184
     ]
    },
    "open": {
     "line number": [
      70
     ]
    },
    "os.path.basename": {
     "line number": [
      139
     ]
    },
    "os.path.splitext": {
     "line number": [
      56
     ]
    },
    "range": {
     "line number": [
      263
     ]
    },
    "set": {
     "line number": [
      244
     ]
    },
    "warn": {
     "line number": [
      127,
      129
     ]
    },
    "zip": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.read_raw_artemis123": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.io.artemis123.artemis123.RawArtemis123": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.tests.test_artemis123": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      21
     ]
    },
    "mne.io.artemis123.tests.test_artemis123.artemis123_dir": {
     "line number": [
      23,
      27,
      29
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      114
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      23,
      27,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.artemis123.tests.test_artemis123.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._assert_trans": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "mne.transforms._angle_between_quats": {
     "line number": [
      42
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      38,
      40
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      43
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123._generate_mne_locs_file": {
  "data": {
   "shadows": "mne.io.artemis123.utils._generate_mne_locs_file"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._load_mne_locs": {
  "data": {
   "shadows": "mne.io.artemis123.utils._load_mne_locs"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.artemis123_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.dig_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.read_raw_artemis123": {
  "data": {
   "shadows": "mne.io.read_raw_artemis123"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.short_HPI_dip_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.short_hpi_1kz_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.test_data": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      84
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      51
     ]
    },
    "mne.io.artemis123.tests.test_artemis123._assert_trans": {
     "line number": [
      80,
      87,
      97
     ]
    },
    "mne.io.artemis123.tests.test_artemis123.dig_fname": {
     "line number": [
      55,
      86
     ]
    },
    "mne.io.artemis123.tests.test_artemis123.pytest": {
     "line number": [
      84,
      50
     ]
    },
    "mne.io.artemis123.tests.test_artemis123.short_HPI_dip_fname": {
     "line number": [
      79,
      85
     ]
    },
    "mne.io.artemis123.tests.test_artemis123.short_hpi_1kz_fname": {
     "line number": [
      54,
      58,
      96
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE": {
     "line number": [
      91
     ]
    },
    "mne.io.read_raw_artemis123": {
     "line number": [
      54,
      58,
      79,
      85,
      96
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      54
     ]
    },
    "mne.pick_types": {
     "line number": [
      60
     ]
    },
    "numpy.array": {
     "line number": [
      65,
      70,
      75,
      90
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      63,
      93
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      81,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123.test_utils": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "mne.io.artemis123.utils._generate_mne_locs_file": {
     "line number": [
      106
     ]
    },
    "mne.io.artemis123.utils._load_mne_locs": {
     "line number": [
      107,
      108
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      104
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      111
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      109
     ]
    },
    "os.path.join": {
     "line number": [
      105
     ]
    },
    "set": {
     "line number": [
      109,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.artemis123.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.utils._compute_mne_loc": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      74,
      75
     ]
    },
    "numpy.zeros": {
     "line number": [
      73
     ]
    },
    "rotation3d_align_z_axis": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._generate_mne_locs_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "mne.io.artemis123.utils._compute_mne_loc": {
     "line number": [
      36
     ]
    },
    "mne.io.artemis123.utils._load_tristan_coil_locs": {
     "line number": [
      33
     ]
    },
    "open": {
     "line number": [
      39
     ]
    },
    "os.path.abspath": {
     "line number": [
      31
     ]
    },
    "os.path.dirname": {
     "line number": [
      31
     ]
    },
    "os.path.join": {
     "line number": [
      31,
      32
     ]
    },
    "sorted": {
     "line number": [
      40
     ]
    },
    "str": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._load_mne_locs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      16
     ]
    },
    "dict": {
     "line number": [
      19
     ]
    },
    "numpy.array": {
     "line number": [
      23
     ]
    },
    "numpy.float64": {
     "line number": [
      23
     ]
    },
    "open": {
     "line number": [
      20
     ]
    },
    "os.path.abspath": {
     "line number": [
      12
     ]
    },
    "os.path.dirname": {
     "line number": [
      12
     ]
    },
    "os.path.exists": {
     "line number": [
      15
     ]
    },
    "os.path.join": {
     "line number": [
      12,
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._load_tristan_coil_locs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      48,
      56
     ]
    },
    "numpy.array": {
     "line number": [
      59,
      61
     ]
    },
    "numpy.float64": {
     "line number": [
      59,
      61
     ]
    },
    "numpy.zeros": {
     "line number": [
      63,
      64
     ]
    },
    "open": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._read_pos": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "_artemis123_read_pos": {
     "line number": [
      119
     ]
    },
    "float": {
     "line number": [
      104,
      106,
      108,
      112,
      116
     ]
    },
    "len": {
     "line number": [
      94,
      100
     ]
    },
    "list": {
     "line number": [
      111,
      115
     ]
    },
    "numpy.array": {
     "line number": [
      104,
      106,
      108,
      112,
      116
     ]
    },
    "open": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.artemis123.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.brainvision": {
  "data": {},
  "type": "module"
 },
 "mne.io.brainvision.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.brainvision.tests.test_brainvision": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      50
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.data_dir": {
     "line number": [
      25,
      26,
      27,
      29,
      33,
      36,
      38,
      39,
      40,
      41,
      44,
      45,
      46,
      47,
      54,
      57,
      59,
      67
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.data_path": {
     "line number": [
      51
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      714
     ]
    },
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "numpy.dtype": {
     "line number": [
      110
     ]
    },
    "object": {
     "line number": [
      112,
      112
     ]
    },
    "os.path.dirname": {
     "line number": [
      24
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      26,
      27,
      29,
      33,
      36,
      38,
      39,
      40,
      41,
      44,
      45,
      46,
      47,
      51,
      54,
      57,
      59,
      67
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.brainvision.tests.test_brainvision.DATE_TEST_CASES": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision._mocked_meas_date_data": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "mne.io.brainvision.tests.test_brainvision.eeg_path": {
     "line number": [
      123,
      125
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      116
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.shutil": {
     "line number": [
      126
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      123,
      125
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
     "line number": [
      123,
      129
     ]
    },
    "open": {
     "line number": [
      129
     ]
    },
    "os.path.basename": {
     "line number": [
      122
     ]
    },
    "os.path.join": {
     "line number": [
      122
     ]
    },
    "str": {
     "line number": [
      120
     ]
    },
    "zip": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.data_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.data_path": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.eeg_bin": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eeg_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eog": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.mocked_meas_date_file": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "mne.io.brainvision.tests.test_brainvision.DATE_TEST_CASES": {
     "line number": [
      135
     ]
    },
    "mne.io.brainvision.tests.test_brainvision._mocked_meas_date_data": {
     "line number": [
      139
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      135
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      146
     ]
    },
    "open": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.montage": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.neuroone_vhdr": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_annotations": {
  "data": {
   "shadows": "mne.read_annotations"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_raw_brainvision": {
  "data": {
   "shadows": "mne.io.read_raw_brainvision"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.test_ascii": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "mne.io.brainvision.tests.test_brainvision.shutil": {
     "line number": [
      241
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      238,
      239,
      241,
      246
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      238,
      269
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      271,
      272
     ]
    },
    "open": {
     "line number": [
      245,
      246,
      264
     ]
    },
    "os.path.join": {
     "line number": [
      239
     ]
    },
    "os.path.split": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_automatic_vmrk_sfreq_recovery": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      639
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
     "line number": [
      642,
      643
     ]
    },
    "mne.read_annotations": {
     "line number": [
      642,
      643
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      642
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      423
     ]
    },
    "RuntimeError": {
     "line number": [
      463
     ]
    },
    "ValueError": {
     "line number": [
      424
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eeg_bin": {
     "line number": [
      440
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      428,
      449,
      466,
      470
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      423,
      424
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      424,
      428
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_units_path": {
     "line number": [
      470
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path": {
     "line number": [
      466
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
     "line number": [
      423
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EEG_CH": {
     "line number": [
      460,
      473,
      478,
      483
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EOG_CH": {
     "line number": [
      450
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MISC_CH": {
     "line number": [
      454,
      457
     ]
    },
    "mne.io.constants.FIFF.FIFFV_STIM_CH": {
     "line number": [
      452
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_CEL": {
     "line number": [
      458
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_NONE": {
     "line number": [
      455
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_V": {
     "line number": [
      461
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      423,
      424,
      428,
      466,
      470
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      440
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      427,
      469
     ]
    },
    "mne.pick_types": {
     "line number": [
      436,
      441
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      444,
      445,
      475,
      480,
      485
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      433,
      434,
      450,
      452,
      454,
      455,
      457,
      458,
      460,
      461,
      472,
      473,
      477,
      478,
      482,
      483
     ]
    },
    "repr": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_highpass_filters": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      286,
      312
     ]
    },
    "all": {
     "line number": [
      298,
      326
     ]
    },
    "any": {
     "line number": [
      298,
      326
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      279,
      289,
      306,
      315
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      286,
      312
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_hz_path": {
     "line number": [
      305
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_path": {
     "line number": [
      279
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_hz_path": {
     "line number": [
      314
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_path": {
     "line number": [
      288
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      279,
      288,
      305,
      314
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      278,
      287,
      304,
      313
     ]
    },
    "numpy.pi": {
     "line number": [
      282,
      300
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      282,
      283,
      300,
      301,
      308,
      309,
      328,
      329
     ]
    },
    "str": {
     "line number": [
      291,
      293,
      317,
      319,
      321
     ]
    },
    "zip": {
     "line number": [
      296,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_lowpass_filters": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      343,
      369
     ]
    },
    "all": {
     "line number": [
      355,
      381
     ]
    },
    "any": {
     "line number": [
      355,
      381
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      336,
      345,
      362,
      371
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      343,
      369
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_path": {
     "line number": [
      336
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_s_path": {
     "line number": [
      362
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path": {
     "line number": [
      345
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_s_path": {
     "line number": [
      371
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      336,
      345,
      362,
      371
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      335,
      344,
      361,
      370
     ]
    },
    "numpy.pi": {
     "line number": [
      339,
      357,
      365,
      366,
      383,
      384
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      339,
      340,
      357,
      358,
      365,
      366,
      383,
      384
     ]
    },
    "str": {
     "line number": [
      348,
      350,
      374,
      376
     ]
    },
    "zip": {
     "line number": [
      353,
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_partially_disabled_hw_filters": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      389
     ]
    },
    "all": {
     "line number": [
      404
     ]
    },
    "any": {
     "line number": [
      404
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      392
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      389
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_partially_disabled_hw_filter_path": {
     "line number": [
      392
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      391
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      390
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      406,
      407
     ]
    },
    "str": {
     "line number": [
      395,
      397,
      399
     ]
    },
    "zip": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_software_filters_latin1_global_units": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      412
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      412
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_old_path": {
     "line number": [
      414
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      414
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      413
     ]
    },
    "numpy.pi": {
     "line number": [
      417
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      417,
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_neuroone_export": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "len": {
     "line number": [
      559
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      554
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.neuroone_vhdr": {
     "line number": [
      557
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_vectorized_data": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      490
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      490
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_old_path": {
     "line number": [
      491
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      491
     ]
    },
    "numpy.array": {
     "line number": [
      495
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      526
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_coodinates_extraction": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      532
     ]
    },
    "len": {
     "line number": [
      540
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      532
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      550
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path": {
     "line number": [
      533
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      533,
      550
     ]
    },
    "numpy.array": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_event_id_stability_when_save_and_fif_reload": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "events": {
     "line number": [
      655,
      658
     ]
    },
    "mne.annotations.events_from_annotations": {
     "line number": [
      651,
      655
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      646
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      650
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      650
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      650
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      654
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      658
     ]
    },
    "os.path.join": {
     "line number": [
      649
     ]
    },
    "str": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_meas_date": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "mne.io.brainvision.tests.test_brainvision.mocked_meas_date_file": {
     "line number": [
      153
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      154
     ]
    },
    "repr": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_orig_units": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      74
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      72
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      72
     ]
    },
    "sum": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_parse_impedance": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      708
     ]
    },
    "enumerate": {
     "line number": [
      684,
      706
     ]
    },
    "len": {
     "line number": [
      672,
      698
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.datetime": {
     "line number": [
      663,
      664
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      686
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      708
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path": {
     "line number": [
      709
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      686
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      686,
      709
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      687,
      711
     ]
    },
    "numpy.nan": {
     "line number": [
      673,
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_read_vhdr_annotations_and_events": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      633
     ]
    },
    "enumerate": {
     "line number": [
      618
     ]
    },
    "events": {
     "line number": [
      613,
      614,
      620
     ]
    },
    "mne.annotations.events_from_annotations": {
     "line number": [
      613,
      620,
      628,
      635
     ]
    },
    "mne.concatenate_raws": {
     "line number": [
      634
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      579
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eog": {
     "line number": [
      605
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      633
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      605
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      605
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      583
     ]
    },
    "numpy.array": {
     "line number": [
      584
     ]
    },
    "numpy.stack": {
     "line number": [
      594
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      609
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      610,
      614
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      596
     ]
    },
    "sorted": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_read_vmrk_annotations": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      563
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
     "line number": [
      570
     ]
    },
    "mne.read_annotations": {
     "line number": [
      576
     ]
    },
    "next": {
     "line number": [
      571
     ]
    },
    "open": {
     "line number": [
      570,
      573
     ]
    },
    "range": {
     "line number": [
      571
     ]
    },
    "str": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_vhdr_codepage_ansi": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "mne.io.brainvision.tests.test_brainvision.eeg_path": {
     "line number": [
      169,
      171
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.shutil": {
     "line number": [
      171
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      164,
      167,
      174
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
     "line number": [
      168,
      182
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      164,
      189
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      193,
      194
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      192
     ]
    },
    "open": {
     "line number": [
      173,
      174,
      181,
      182
     ]
    },
    "os.path.join": {
     "line number": [
      167,
      168,
      169
     ]
    },
    "os.path.split": {
     "line number": [
      167,
      168,
      169
     ]
    },
    "str": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_vhdr_versions": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      228
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.eeg_path": {
     "line number": [
      210,
      211
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.pytest": {
     "line number": [
      228,
      197
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.shutil": {
     "line number": [
      211
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
     "line number": [
      206,
      208,
      213
     ]
    },
    "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
     "line number": [
      209,
      220
     ]
    },
    "mne.io.read_raw_brainvision": {
     "line number": [
      206,
      229,
      231
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      233
     ]
    },
    "open": {
     "line number": [
      212,
      213,
      219,
      220
     ]
    },
    "os.path.join": {
     "line number": [
      208,
      209,
      210
     ]
    },
    "os.path.split": {
     "line number": [
      208,
      209,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_bad_date": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_hz_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_s_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_hz_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_s_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_old_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_partially_disabled_hw_filter_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_units_path": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.bti": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.bti": {
  "data": {
   "symbols_in_volume": {
    "list": {
     "line number": [
      48
     ]
    },
    "mne.io.bti.bti.dtypes": {
     "line number": [
      49
     ]
    },
    "numpy.array": {
     "line number": [
      36
     ]
    },
    "numpy.dtype": {
     "line number": [
      49
     ]
    },
    "range": {
     "line number": [
      48
     ]
    },
    "zip": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.bti.bti.BTI_WH2500_REF_GRAD": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.bti.bti.BTI_WH2500_REF_MAG": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.bti.bti.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.bti.bti.DTYPES": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_CHS_DEFAULTS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_CHS_FIELDS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_DIG_DEFAULTS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_DIG_FIELDS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.bti.bti.RawBTi": {
  "data": {
   "lineno": 903
  },
  "type": "class"
 },
 "mne.io.bti.bti.RawBTi.__init__": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      955
     ]
    },
    "isinstance": {
     "line number": [
      955
     ]
    },
    "mne.io.bti.bti.RawBTi": {
     "line number": [
      957
     ]
    },
    "mne.io.bti.bti._get_bti_info": {
     "line number": [
      947
     ]
    },
    "repr": {
     "line number": [
      956
     ]
    },
    "super": {
     "line number": [
      957
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti.RawBTi._read_segment_file": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      994
     ]
    },
    "enumerate": {
     "line number": [
      992
     ]
    },
    "int": {
     "line number": [
      974
     ]
    },
    "io.BytesIO": {
     "line number": [
      982
     ]
    },
    "isinstance": {
     "line number": [
      982
     ]
    },
    "itertools.count": {
     "line number": [
      981,
      983,
      985,
      986
     ]
    },
    "len": {
     "line number": [
      966,
      967
     ]
    },
    "min": {
     "line number": [
      975,
      981
     ]
    },
    "mne.io.bti.bti._bti_open": {
     "line number": [
      977
     ]
    },
    "numpy.arange": {
     "line number": [
      979
     ]
    },
    "numpy.dtype": {
     "line number": [
      968
     ]
    },
    "numpy.empty": {
     "line number": [
      970,
      990
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      983
     ]
    },
    "numpy.fromfile": {
     "line number": [
      985
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._bti_open": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      72
     ]
    },
    "io.BytesIO": {
     "line number": [
      69
     ]
    },
    "isinstance": {
     "line number": [
      67,
      69
     ]
    },
    "mne.io.bti.bti._bytes_io_mock_context": {
     "line number": [
      70
     ]
    },
    "open": {
     "line number": [
      68
     ]
    },
    "str": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__enter__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__exit__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.io.bti.bti._check_nan_dev_head_t": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      166
     ]
    },
    "numpy.identity": {
     "line number": [
      169
     ]
    },
    "numpy.isnan": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._convert_coil_trans": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "combine_transforms": {
     "line number": [
      174
     ]
    },
    "invert_transform": {
     "line number": [
      174
     ]
    },
    "numpy.dot": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._correct_offset": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "mne.io.bti.bti._correct_trans": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      893
     ]
    },
    "numpy.float64": {
     "line number": [
      893
     ]
    },
    "numpy.newaxis": {
     "line number": [
      894
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_dev_t": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      92,
      96
     ]
    },
    "numpy.cos": {
     "line number": [
      97,
      98
     ]
    },
    "numpy.deg2rad": {
     "line number": [
      95
     ]
    },
    "numpy.dot": {
     "line number": [
      100
     ]
    },
    "numpy.eye": {
     "line number": [
      99
     ]
    },
    "numpy.sin": {
     "line number": [
      97,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_info": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      1076,
      1083
     ]
    },
    "ValueError": {
     "line number": [
      1054,
      1066
     ]
    },
    "_coil_trans_to_loc": {
     "line number": [
      1152
     ]
    },
    "_empty_info": {
     "line number": [
      1093,
      1097
     ]
    },
    "_loc_to_coil_trans": {
     "line number": [
      1150
     ]
    },
    "_stamp_to_dt": {
     "line number": [
      1095
     ]
    },
    "any": {
     "line number": [
      1143
     ]
    },
    "dict": {
     "line number": [
      1137
     ]
    },
    "enumerate": {
     "line number": [
      1136
     ]
    },
    "float": {
     "line number": [
      1141
     ]
    },
    "io.BytesIO": {
     "line number": [
      1040,
      1044,
      1059
     ]
    },
    "isinstance": {
     "line number": [
      1040,
      1044,
      1058
     ]
    },
    "list": {
     "line number": [
      1102,
      1123
     ]
    },
    "mne.io.bti.bti.FIFF_INFO_CHS_DEFAULTS": {
     "line number": [
      1137
     ]
    },
    "mne.io.bti.bti.FIFF_INFO_CHS_FIELDS": {
     "line number": [
      1137
     ]
    },
    "mne.io.bti.bti._check_nan_dev_head_t": {
     "line number": [
      1079
     ]
    },
    "mne.io.bti.bti._convert_coil_trans": {
     "line number": [
      1151
     ]
    },
    "mne.io.bti.bti._correct_trans": {
     "line number": [
      1077
     ]
    },
    "mne.io.bti.bti._get_bti_dev_t": {
     "line number": [
      1082
     ]
    },
    "mne.io.bti.bti._make_bti_digitization": {
     "line number": [
      1206
     ]
    },
    "mne.io.bti.bti._read_bti_header": {
     "line number": [
      1073
     ]
    },
    "mne.io.bti.bti._rename_channels": {
     "line number": [
      1131
     ]
    },
    "os.path.abspath": {
     "line number": [
      1042,
      1046,
      1047
     ]
    },
    "os.path.dirname": {
     "line number": [
      1047,
      1062
     ]
    },
    "os.path.isabs": {
     "line number": [
      1041,
      1045
     ]
    },
    "os.path.isfile": {
     "line number": [
      1050,
      1053,
      1061,
      1065
     ]
    },
    "os.path.join": {
     "line number": [
      1047,
      1062
     ]
    },
    "zip": {
     "line number": [
      1133,
      1137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._make_bti_digitization": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      1010,
      1011
     ]
    },
    "_make_bti_dig_points": {
     "line number": [
      1004
     ]
    },
    "mne.io.bti.bti._read_head_shape": {
     "line number": [
      1003
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_assoc_file": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "read_int16": {
     "line number": [
      647,
      648
     ]
    },
    "read_int32": {
     "line number": [
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_bti_header": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      840
     ]
    },
    "_coil_trans_to_loc": {
     "line number": [
      853
     ]
    },
    "dict": {
     "line number": [
      820,
      845,
      852
     ]
    },
    "enumerate": {
     "line number": [
      865,
      870
     ]
    },
    "float": {
     "line number": [
      858
     ]
    },
    "int": {
     "line number": [
      874
     ]
    },
    "len": {
     "line number": [
      882
     ]
    },
    "mne.io.bti.bti._read_bti_header_pdf": {
     "line number": [
      820
     ]
    },
    "mne.io.bti.bti._read_config": {
     "line number": [
      821
     ]
    },
    "numpy.arange": {
     "line number": [
      882
     ]
    },
    "sorted": {
     "line number": [
      832,
      833,
      873,
      874
     ]
    },
    "zip": {
     "line number": [
      848
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_bti_header_pdf": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "mne.io.bti.bti.DTYPES": {
     "line number": [
      812
     ]
    },
    "mne.io.bti.bti._bti_open": {
     "line number": [
      742
     ]
    },
    "mne.io.bti.bti._correct_offset": {
     "line number": [
      784
     ]
    },
    "mne.io.bti.bti._read_assoc_file": {
     "line number": [
      800
     ]
    },
    "mne.io.bti.bti._read_channel": {
     "line number": [
      791
     ]
    },
    "mne.io.bti.bti._read_epoch": {
     "line number": [
      788
     ]
    },
    "mne.io.bti.bti._read_event": {
     "line number": [
      794
     ]
    },
    "mne.io.bti.bti._read_pfid_ed": {
     "line number": [
      803
     ]
    },
    "mne.io.bti.bti._read_process": {
     "line number": [
      797
     ]
    },
    "range": {
     "line number": [
      789,
      792,
      795,
      798,
      801,
      804
     ]
    },
    "read_float": {
     "line number": [
      771
     ]
    },
    "read_int16": {
     "line number": [
      758,
      765,
      766,
      774,
      779,
      780
     ]
    },
    "read_int32": {
     "line number": [
      767,
      768,
      769,
      770,
      773,
      777,
      778,
      781
     ]
    },
    "read_int64": {
     "line number": [
      745
     ]
    },
    "read_str": {
     "line number": [
      759,
      772
     ]
    },
    "sum": {
     "line number": [
      809
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_ch_config": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      709
     ]
    },
    "mne.io.bti.bti._correct_offset": {
     "line number": [
      706,
      735
     ]
    },
    "mne.io.bti.bti._read_coil_def": {
     "line number": [
      714
     ]
    },
    "range": {
     "line number": [
      715
     ]
    },
    "read_char": {
     "line number": [
      721
     ]
    },
    "read_double": {
     "line number": [
      702
     ]
    },
    "read_float": {
     "line number": [
      699,
      700,
      718
     ]
    },
    "read_int16": {
     "line number": [
      693,
      695
     ]
    },
    "read_int32": {
     "line number": [
      703,
      710,
      711,
      725
     ]
    },
    "read_str": {
     "line number": [
      692,
      701,
      704,
      712,
      719,
      728,
      731
     ]
    },
    "read_transform": {
     "line number": [
      720
     ]
    },
    "read_uint16": {
     "line number": [
      694
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_channel": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "read_double": {
     "line number": [
      573,
      574
     ]
    },
    "read_float": {
     "line number": [
      568,
      578
     ]
    },
    "read_int16": {
     "line number": [
      566,
      567,
      570
     ]
    },
    "read_int32": {
     "line number": [
      575,
      576
     ]
    },
    "read_str": {
     "line number": [
      565,
      569,
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_coil_def": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": {
    "read_double": {
     "line number": [
      681,
      682
     ]
    },
    "read_double_matrix": {
     "line number": [
      679,
      680
     ]
    },
    "read_int16": {
     "line number": [
      683
     ]
    },
    "read_int32": {
     "line number": [
      686
     ]
    },
    "read_str": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_config": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      239,
      465
     ]
    },
    "ValueError": {
     "line number": [
      298,
      320
     ]
    },
    "any": {
     "line number": [
      392
     ]
    },
    "dict": {
     "line number": [
      202,
      223,
      225,
      243,
      394,
      480,
      492
     ]
    },
    "len": {
     "line number": [
      423,
      424
     ]
    },
    "list": {
     "line number": [
      248,
      302,
      324,
      347,
      472
     ]
    },
    "mne.io.bti.bti.BTI_WH2500_REF_GRAD": {
     "line number": [
      424
     ]
    },
    "mne.io.bti.bti.BTI_WH2500_REF_MAG": {
     "line number": [
      387,
      423
     ]
    },
    "mne.io.bti.bti._bti_open": {
     "line number": [
      201
     ]
    },
    "mne.io.bti.bti._correct_offset": {
     "line number": [
      235,
      470,
      491,
      543
     ]
    },
    "mne.io.bti.bti._correct_trans": {
     "line number": [
      497
     ]
    },
    "numpy.zeros": {
     "line number": [
      432,
      435
     ]
    },
    "range": {
     "line number": [
      221,
      224,
      249,
      260,
      303,
      325,
      348,
      377,
      379,
      406,
      408,
      411,
      438,
      451,
      475,
      504
     ]
    },
    "read_char": {
     "line number": [
      219,
      233,
      460,
      520
     ]
    },
    "read_dev_header": {
     "line number": [
      494,
      516,
      523,
      528,
      534,
      539
     ]
    },
    "read_double": {
     "line number": [
      263,
      486,
      507,
      508
     ]
    },
    "read_double_matrix": {
     "line number": [
      261,
      262,
      277,
      505,
      506
     ]
    },
    "read_float": {
     "line number": [
      210,
      211,
      252,
      334,
      338,
      483,
      484,
      495,
      517
     ]
    },
    "read_float_matrix": {
     "line number": [
      383,
      390,
      412,
      442
     ]
    },
    "read_int16": {
     "line number": [
      203,
      206,
      208,
      209,
      212,
      213,
      214,
      284,
      285,
      286,
      304,
      305,
      306,
      307,
      308,
      326,
      327,
      328,
      329,
      330,
      336,
      337,
      352,
      364,
      441,
      477,
      479,
      498,
      499,
      509
     ]
    },
    "read_int16_matrix": {
     "line number": [
      414,
      439
     ]
    },
    "read_int32": {
     "line number": [
      207,
      229,
      246,
      257,
      258,
      267,
      335,
      343,
      344,
      354,
      361,
      367,
      368,
      369,
      371,
      395,
      446,
      447,
      487,
      511,
      524,
      529,
      535
     ]
    },
    "read_str": {
     "line number": [
      204,
      205,
      228,
      230,
      250,
      276,
      349,
      355,
      360,
      370,
      372,
      376,
      378,
      398,
      401,
      404,
      405,
      407,
      410,
      452,
      476,
      485,
      488,
      496,
      502,
      512,
      518,
      525,
      531,
      536,
      540
     ]
    },
    "read_transform": {
     "line number": [
      220,
      251,
      271,
      497,
      519
     ]
    },
    "read_uint16": {
     "line number": [
      453,
      454,
      478
     ]
    },
    "read_uint32": {
     "line number": [
      218,
      227,
      231,
      232,
      396,
      397,
      402,
      403,
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_epoch": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "read_float": {
     "line number": [
      551,
      552,
      553
     ]
    },
    "read_int32": {
     "line number": [
      550,
      554,
      555,
      556
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_event": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": {
    "mne.io.bti.bti._correct_offset": {
     "line number": [
      595
     ]
    },
    "read_float": {
     "line number": [
      588,
      589,
      590
     ]
    },
    "read_int16": {
     "line number": [
      591
     ]
    },
    "read_int32": {
     "line number": [
      592
     ]
    },
    "read_str": {
     "line number": [
      587
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_head_shape": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "len": {
     "line number": [
      158
     ]
    },
    "mne.io.bti.bti._bti_open": {
     "line number": [
      150
     ]
    },
    "read_double_matrix": {
     "line number": [
      153,
      154
     ]
    },
    "read_int32": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_pfid_ed": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "read_float": {
     "line number": [
      669,
      670
     ]
    },
    "read_int16": {
     "line number": [
      662
     ]
    },
    "read_int32": {
     "line number": [
      658,
      663,
      664,
      665,
      666,
      667,
      668
     ]
    },
    "read_str": {
     "line number": [
      659
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_process": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "list": {
     "line number": [
      612
     ]
    },
    "mne.io.bti.bti._correct_offset": {
     "line number": [
      611,
      640
     ]
    },
    "range": {
     "line number": [
      613
     ]
    },
    "read_double": {
     "line number": [
      622
     ]
    },
    "read_float": {
     "line number": [
      629,
      632,
      633
     ]
    },
    "read_int16": {
     "line number": [
      624,
      625
     ]
    },
    "read_int32": {
     "line number": [
      602,
      604,
      606,
      608,
      614,
      616,
      619,
      623,
      635
     ]
    },
    "read_str": {
     "line number": [
      603,
      605,
      607,
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti._rename_channels": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "any": {
     "line number": [
      127
     ]
    },
    "enumerate": {
     "line number": [
      120
     ]
    },
    "itertools.count": {
     "line number": [
      119
     ]
    },
    "list": {
     "line number": [
      118
     ]
    },
    "next": {
     "line number": [
      128,
      132,
      136,
      138,
      140
     ]
    },
    "range": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.bti.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "mne.io.bti.bti.dtypes": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.bti.bti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.bti.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.bti.bti.read_raw_bti": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "mne.io.bti.bti.RawBTi": {
     "line number": [
      1281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.constants": {
  "data": {
   "symbols_in_volume": {
    "BunchConst": {
     "line number": [
      7
     ]
    },
    "mne.io.bti.constants.BTI": {
     "line number": [
      9,
      10,
      11,
      12,
      16,
      17,
      18,
      20,
      21,
      22,
      23,
      24,
      26,
      27,
      28,
      29,
      30,
      32,
      34,
      35,
      36,
      37,
      38,
      40,
      41,
      43,
      44,
      45,
      46,
      48,
      50,
      51,
      52,
      57,
      58,
      59,
      60,
      61,
      62,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      77,
      78,
      79,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.bti.constants.BTI": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.io.bti.read": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.read._unpack_matrix": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "int": {
     "line number": [
      13
     ]
    },
    "numpy.dtype": {
     "line number": [
      11
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read._unpack_simple": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "len": {
     "line number": [
      25
     ]
    },
    "numpy.dtype": {
     "line number": [
      21
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.read.read_bool": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      37
     ]
    },
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_char": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_dev_header": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      115
     ]
    },
    "mne.io.bti.read.read_int32": {
     "line number": [
      115,
      115
     ]
    },
    "read_str": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_double": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      87
     ]
    },
    "numpy.float64": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_double_matrix": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_matrix": {
     "line number": [
      104
     ]
    },
    "numpy.float64": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_float": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      82
     ]
    },
    "numpy.float32": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_float_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_matrix": {
     "line number": [
      98
     ]
    },
    "numpy.float32": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int16": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      57
     ]
    },
    "numpy.int16": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int16_matrix": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_matrix": {
     "line number": [
      92
     ]
    },
    "numpy.int16": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int32": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      67
     ]
    },
    "numpy.int32": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int64": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      77
     ]
    },
    "numpy.int64": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int8": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      47
     ]
    },
    "numpy.int8": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "mne.io.bti.read.read_double_matrix": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint16": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      52
     ]
    },
    "numpy.uint16": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint32": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      62
     ]
    },
    "numpy.uint32": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint64": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      72
     ]
    },
    "numpy.uint64": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint8": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "mne.io.bti.read._unpack_simple": {
     "line number": [
      42
     ]
    },
    "numpy.uint8": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.tests.test_bti": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      41,
      43,
      45
     ]
    },
    "mne.io.bti.tests.test_bti.archs": {
     "line number": [
      34,
      35,
      36,
      38
     ]
    },
    "mne.io.bti.tests.test_bti.base_dir": {
     "line number": [
      34,
      35,
      36,
      37,
      39
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      360
     ]
    },
    "os.path.abspath": {
     "line number": [
      31
     ]
    },
    "os.path.dirname": {
     "line number": [
      31
     ]
    },
    "os.path.join": {
     "line number": [
      31,
      34,
      35,
      36,
      37,
      39,
      41,
      43,
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.bti.tests.test_bti.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.NCH": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._check_nan_dev_head_t": {
  "data": {
   "shadows": "mne.io.bti.bti._check_nan_dev_head_t"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._convert_coil_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._convert_coil_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._correct_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._correct_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._get_bti_dev_t": {
  "data": {
   "shadows": "mne.io.bti.bti._get_bti_dev_t"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._get_bti_info": {
  "data": {
   "shadows": "mne.io.bti.bti._get_bti_info"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._make_bti_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._make_bti_dig_points"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_bti_header": {
  "data": {
   "shadows": "mne.io.bti.bti._read_bti_header"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_config": {
  "data": {
   "shadows": "mne.io.bti.bti._read_config"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_head_shape": {
  "data": {
   "shadows": "mne.io.bti.bti._read_head_shape"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._rename_channels": {
  "data": {
   "shadows": "mne.io.bti.bti._rename_channels"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.archs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_dig_allclose": {
  "data": {
   "shadows": "mne.utils.assert_dig_allclose"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.base_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.combine_transforms": {
  "data": {
   "shadows": "mne.transforms.combine_transforms"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.config_fnames": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.exported_fnames": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_2500": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_sim": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_sim_filt": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.hs_fnames": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pdf_fnames": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.test_bti_ch_data": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      352
     ]
    },
    "mne.io.bti.tests.test_bti.fname_sim": {
     "line number": [
      353
     ]
    },
    "mne.io.bti.tests.test_bti.fname_sim_filt": {
     "line number": [
      353
     ]
    },
    "mne.io.bti.tests.test_bti.pytest": {
     "line number": [
      353,
      354
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_bytes_io": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      288,
      290,
      292
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      284
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      284
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      284
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      285,
      294
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      296
     ]
    },
    "open": {
     "line number": [
      287,
      289,
      291
     ]
    },
    "repr": {
     "line number": [
      295
     ]
    },
    "zip": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_crop_append": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      71
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      71
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      70
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      70
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_info_no_rename_no_reorder_no_pdf": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "mne.io.bti.bti._get_bti_info": {
     "line number": [
      164,
      169
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      163
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      163
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      163
     ]
    },
    "mne.io.pick.pick_info": {
     "line number": [
      182,
      184
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      207,
      211
     ]
    },
    "mne.pick_types": {
     "line number": [
      182,
      184
     ]
    },
    "numpy.array": {
     "line number": [
      203,
      204
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      200,
      202,
      218,
      219
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      175,
      177,
      179,
      192,
      193,
      194,
      195,
      197,
      198
     ]
    },
    "zip": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_nan_trans": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      313,
      344
     ]
    },
    "list": {
     "line number": [
      330
     ]
    },
    "mne.io.bti.bti._check_nan_dev_head_t": {
     "line number": [
      343
     ]
    },
    "mne.io.bti.bti._convert_coil_trans": {
     "line number": [
      349
     ]
    },
    "mne.io.bti.bti._correct_trans": {
     "line number": [
      318
     ]
    },
    "mne.io.bti.bti._get_bti_dev_t": {
     "line number": [
      324
     ]
    },
    "mne.io.bti.bti._loc_to_coil_trans": {
     "line number": [
      348
     ]
    },
    "mne.io.bti.bti._read_bti_header": {
     "line number": [
      314
     ]
    },
    "mne.io.bti.bti._rename_channels": {
     "line number": [
      337
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      315
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      313
     ]
    },
    "mne.transforms.Transform": {
     "line number": [
      317,
      325
     ]
    },
    "numpy.nan": {
     "line number": [
      342
     ]
    },
    "zip": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_no_conversion": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      253,
      264
     ]
    },
    "functools.partial": {
     "line number": [
      224
     ]
    },
    "get_info": {
     "line number": [
      231
     ]
    },
    "mne.io._digitization._make_bti_dig_points": {
     "line number": [
      248
     ]
    },
    "mne.io.bti.bti._correct_trans": {
     "line number": [
      242
     ]
    },
    "mne.io.bti.bti._get_bti_info": {
     "line number": [
      225
     ]
    },
    "mne.io.bti.bti._read_bti_header": {
     "line number": [
      241
     ]
    },
    "mne.io.bti.bti._read_head_shape": {
     "line number": [
      247
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      230
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      230
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      230
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE": {
     "line number": [
      276
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MNE_COORD_4D_HEAD": {
     "line number": [
      279
     ]
    },
    "mne.io.pick.pick_info": {
     "line number": [
      236,
      239
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      232
     ]
    },
    "mne.pick_types": {
     "line number": [
      237,
      240
     ]
    },
    "numpy.allclose": {
     "line number": [
      257,
      271
     ]
    },
    "numpy.eye": {
     "line number": [
      244,
      245,
      251
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      270
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      243,
      244,
      245,
      251,
      256
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      255,
      274,
      277
     ]
    },
    "zip": {
     "line number": [
      230,
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_raw": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      109,
      110
     ]
    },
    "dict": {
     "line number": [
      153
     ]
    },
    "isinstance": {
     "line number": [
      153
     ]
    },
    "len": {
     "line number": [
      120
     ]
    },
    "mne.io.bti.tests.test_bti.NCH": {
     "line number": [
      117,
      117,
      123,
      128,
      132,
      132,
      133,
      134,
      135,
      136,
      137,
      137
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      106
     ]
    },
    "mne.io.bti.tests.test_bti.exported_fnames": {
     "line number": [
      107
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      106
     ]
    },
    "mne.io.bti.tests.test_bti.os": {
     "line number": [
      113,
      158
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      106
     ]
    },
    "mne.io.bti.tests.test_bti.pytest": {
     "line number": [
      109,
      110,
      103
     ]
    },
    "mne.io.bti.tests.test_bti.tmp_raw_fname": {
     "line number": [
      112,
      113,
      149,
      150,
      158
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      109,
      110,
      115
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      114,
      150
     ]
    },
    "mne.utils.assert_dig_allclose": {
     "line number": [
      121
     ]
    },
    "numpy.allclose": {
     "line number": [
      157
     ]
    },
    "numpy.concatenate": {
     "line number": [
      122,
      127
     ]
    },
    "numpy.eye": {
     "line number": [
      157
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      130,
      132,
      146
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      118,
      125
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      133,
      135,
      137
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      117,
      155
     ]
    },
    "os.path.exists": {
     "line number": [
      112
     ]
    },
    "print": {
     "line number": [
      151
     ]
    },
    "repr": {
     "line number": [
      116
     ]
    },
    "zip": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_read_2500": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      52
     ]
    },
    "mne.io.bti.tests.test_bti.fname_2500": {
     "line number": [
      55
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      55
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_read_config": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "all": {
     "line number": [
      63
     ]
    },
    "mne.io.bti.bti._read_config": {
     "line number": [
      62
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_setup_headshape": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      306
     ]
    },
    "list": {
     "line number": [
      306,
      306
     ]
    },
    "mne.io._digitization._make_bti_dig_points": {
     "line number": [
      303
     ]
    },
    "mne.io.bti.bti._read_head_shape": {
     "line number": [
      302
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      301
     ]
    },
    "set": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_transforms": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "mne.io.bti.bti._get_bti_dev_t": {
     "line number": [
      84,
      92
     ]
    },
    "mne.io.bti.tests.test_bti.config_fnames": {
     "line number": [
      85
     ]
    },
    "mne.io.bti.tests.test_bti.hs_fnames": {
     "line number": [
      85
     ]
    },
    "mne.io.bti.tests.test_bti.pdf_fnames": {
     "line number": [
      85
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      86
     ]
    },
    "mne.transforms.Transform": {
     "line number": [
      84,
      92
     ]
    },
    "mne.transforms.combine_transforms": {
     "line number": [
      95,
      98
     ]
    },
    "mne.transforms.invert_transform": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      100
     ]
    },
    "zip": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.tmp_raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.cnt": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt._utils": {
  "data": {
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      35,
      46,
      63
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.cnt._utils.CNTEventType1": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.cnt._utils.CNTEventType2": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.cnt._utils.CNTEventType3": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.io.cnt._utils.SEEK_END": {
  "data": {
   "shadows": "os.SEEK_END"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.Struct": {
  "data": {
   "shadows": "struct.Struct"
  },
  "type": "import"
 },
 "mne.io.cnt._utils._compute_robust_event_table_position": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "int": {
     "line number": [
      138,
      139,
      139
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      121,
      132,
      135
     ]
    },
    "os.SEEK_END": {
     "line number": [
      118
     ]
    },
    "warn": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt._utils._get_event_parser": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      79
     ]
    },
    "mne.io.cnt._utils.CNTEventType1": {
     "line number": [
      70
     ]
    },
    "mne.io.cnt._utils.CNTEventType2": {
     "line number": [
      73
     ]
    },
    "mne.io.cnt._utils.CNTEventType3": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt._utils._get_event_parser.parser": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "event_maker": {
     "line number": [
      84
     ]
    },
    "struct.Struct": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt._utils._read_teeg": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "Teeg": {
     "line number": [
      32
     ]
    },
    "collections.namedtuple": {
     "line number": [
      28
     ]
    },
    "struct.Struct": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt._utils._session_date_2_meas_date": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      91
     ]
    },
    "math.modf": {
     "line number": [
      91
     ]
    },
    "warn": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt._utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.modf": {
  "data": {
   "shadows": "math.modf"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.cnt.RawCNT": {
  "data": {
   "lineno": 321
  },
  "type": "class"
 },
 "mne.io.cnt.cnt.RawCNT.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      383
     ]
    },
    "mne.io.cnt.cnt.RawCNT": {
     "line number": [
      393
     ]
    },
    "mne.io.cnt.cnt._get_cnt_info": {
     "line number": [
      390
     ]
    },
    "mne.io.cnt.cnt._read_annotations_cnt": {
     "line number": [
      399
     ]
    },
    "os.path.abspath": {
     "line number": [
      389
     ]
    },
    "super": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.cnt.RawCNT._read_segment_file": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      462
     ]
    },
    "enumerate": {
     "line number": [
      451
     ]
    },
    "int": {
     "line number": [
      422
     ]
    },
    "min": {
     "line number": [
      423,
      429
     ]
    },
    "numpy.arange": {
     "line number": [
      427
     ]
    },
    "numpy.fromfile": {
     "line number": [
      445
     ]
    },
    "numpy.zeros": {
     "line number": [
      433,
      450
     ]
    },
    "open": {
     "line number": [
      425
     ]
    },
    "slice": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._get_cnt_info": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      238
     ]
    },
    "_compute_robust_event_table_position": {
     "line number": [
      226
     ]
    },
    "_create_chs": {
     "line number": [
      299
     ]
    },
    "_empty_info": {
     "line number": [
      284
     ]
    },
    "_find_channels": {
     "line number": [
      293,
      295,
      297
     ]
    },
    "_session_date_2_meas_date": {
     "line number": [
      203
     ]
    },
    "_topo_to_sphere": {
     "line number": [
      304
     ]
    },
    "dict": {
     "line number": [
      173
     ]
    },
    "enumerate": {
     "line number": [
      301
     ]
    },
    "int": {
     "line number": [
      179
     ]
    },
    "len": {
     "line number": [
      182,
      183,
      305
     ]
    },
    "list": {
     "line number": [
      260,
      260,
      260,
      260,
      260,
      263
     ]
    },
    "numpy.array": {
     "line number": [
      310
     ]
    },
    "numpy.fromfile": {
     "line number": [
      206,
      208,
      211,
      214,
      215,
      220,
      222,
      224,
      230,
      253,
      269,
      272,
      277,
      279,
      281
     ]
    },
    "numpy.full": {
     "line number": [
      305
     ]
    },
    "numpy.nan": {
     "line number": [
      305
     ]
    },
    "open": {
     "line number": [
      176
     ]
    },
    "range": {
     "line number": [
      264
     ]
    },
    "read_str": {
     "line number": [
      178,
      181,
      185,
      192,
      200,
      202,
      202,
      266
     ]
    },
    "str": {
     "line number": [
      313,
      313
     ]
    },
    "warn": {
     "line number": [
      242
     ]
    },
    "zip": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._read_annotations_cnt": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      79,
      90
     ]
    },
    "_compute_robust_event_table_position": {
     "line number": [
      64
     ]
    },
    "_get_event_parser": {
     "line number": [
      70
     ]
    },
    "_read_teeg": {
     "line number": [
      68
     ]
    },
    "_translating_function": {
     "line number": [
      81
     ]
    },
    "event_parser": {
     "line number": [
      76
     ]
    },
    "float": {
     "line number": [
      82,
      87
     ]
    },
    "getattr": {
     "line number": [
      86
     ]
    },
    "list": {
     "line number": [
      76,
      79,
      79,
      79
     ]
    },
    "numpy.array": {
     "line number": [
      81,
      86,
      89
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      59,
      62
     ]
    },
    "open": {
     "line number": [
      57,
      67,
      72
     ]
    },
    "str": {
     "line number": [
      89
     ]
    },
    "type": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._read_annotations_cnt._translating_function": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mne.io.cnt.cnt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.read_raw_cnt": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "mne.io.cnt.cnt.RawCNT": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.tests.test_cnt": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      20
     ]
    },
    "mne.io.cnt.tests.test_cnt.data_path": {
     "line number": [
      21
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      59
     ]
    },
    "os.path.join": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.cnt.tests.test_cnt._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.data_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.cnt.tests.test_cnt.fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.cnt.tests.test_cnt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.read_raw_cnt": {
  "data": {
   "shadows": "mne.io.cnt.read_raw_cnt"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.test_compare_events_and_annotations": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      45
     ]
    },
    "events": {
     "line number": [
      47,
      55
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "mne.annotations.read_annotations": {
     "line number": [
      53
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      42
     ]
    },
    "mne.io.cnt.read_raw_cnt": {
     "line number": [
      46
     ]
    },
    "mne.io.cnt.tests.test_cnt.fname": {
     "line number": [
      46,
      53
     ]
    },
    "mne.io.cnt.tests.test_cnt.pytest": {
     "line number": [
      45
     ]
    },
    "numpy.array": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.tests.test_cnt.test_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      27
     ]
    },
    "len": {
     "line number": [
      32,
      35
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      24
     ]
    },
    "mne.io.cnt.read_raw_cnt": {
     "line number": [
      28
     ]
    },
    "mne.io.cnt.tests.test_cnt.fname": {
     "line number": [
      28
     ]
    },
    "mne.io.cnt.tests.test_cnt.pytest": {
     "line number": [
      27
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      28
     ]
    },
    "mne.pick_types": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.cnt.tests.test_cnt.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.compensator": {
  "data": {},
  "type": "module"
 },
 "mne.io.compensator._make_compensator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43,
      46,
      55,
      62
     ]
    },
    "enumerate": {
     "line number": [
      39,
      40,
      51,
      52
     ]
    },
    "len": {
     "line number": [
      33,
      42,
      45,
      54,
      56
     ]
    },
    "numpy.dot": {
     "line number": [
      59,
      59
     ]
    },
    "numpy.zeros": {
     "line number": [
      38,
      50
     ]
    },
    "range": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.compensator.get_current_comp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      17
     ]
    },
    "enumerate": {
     "line number": [
      11
     ]
    },
    "int": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.compensator.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.compensator.make_compensator": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      118
     ]
    },
    "enumerate": {
     "line number": [
      114
     ]
    },
    "len": {
     "line number": [
      117
     ]
    },
    "mne.io.compensator._make_compensator": {
     "line number": [
      96,
      99
     ]
    },
    "numpy.dot": {
     "line number": [
      106
     ]
    },
    "numpy.eye": {
     "line number": [
      97,
      100
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.compensator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.compensator.set_current_comp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      25
     ]
    },
    "int": {
     "line number": [
      28
     ]
    },
    "mne.io.compensator.get_current_comp": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.constants": {
  "data": {
   "symbols_in_volume": {
    "BunchConstNamed": {
     "line number": [
      8,
      733
     ]
    },
    "mne.io.constants.FIFF": {
     "line number": [
      13,
      14,
      15,
      15,
      15,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      44,
      45,
      46,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      95,
      96,
      98,
      99,
      100,
      101,
      103,
      104,
      105,
      106,
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      139,
      140,
      141,
      142,
      142,
      143,
      144,
      145,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      162,
      163,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      183,
      184,
      185,
      187,
      188,
      189,
      190,
      191,
      192,
      193,
      194,
      195,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      211,
      212,
      213,
      214,
      215,
      216,
      217,
      218,
      219,
      220,
      224,
      225,
      226,
      227,
      228,
      229,
      230,
      231,
      232,
      233,
      235,
      236,
      237,
      238,
      239,
      240,
      241,
      242,
      243,
      244,
      249,
      250,
      251,
      252,
      257,
      258,
      259,
      260,
      261,
      262,
      263,
      264,
      265,
      266,
      267,
      269,
      270,
      271,
      273,
      274,
      275,
      277,
      278,
      279,
      280,
      281,
      283,
      284,
      285,
      286,
      291,
      292,
      293,
      297,
      298,
      299,
      304,
      305,
      310,
      315,
      316,
      317,
      318,
      319,
      320,
      321,
      322,
      327,
      328,
      329,
      330,
      331,
      332,
      334,
      335,
      337,
      338,
      339,
      340,
      341,
      342,
      343,
      345,
      346,
      347,
      348,
      349,
      350,
      355,
      356,
      357,
      358,
      362,
      363,
      364,
      365,
      365,
      366,
      367,
      369,
      370,
      371,
      372,
      373,
      378,
      379,
      380,
      381,
      383,
      384,
      385,
      386,
      391,
      392,
      393,
      394,
      395,
      396,
      398,
      402,
      402,
      403,
      404,
      405,
      406,
      407,
      408,
      409,
      410,
      411,
      412,
      413,
      414,
      415,
      416,
      417,
      418,
      419,
      420,
      421,
      422,
      423,
      424,
      425,
      426,
      428,
      429,
      430,
      431,
      432,
      433,
      434,
      435,
      436,
      440,
      441,
      442,
      443,
      444,
      445,
      446,
      447,
      448,
      449,
      450,
      451,
      452,
      453,
      454,
      459,
      460,
      461,
      463,
      464,
      471,
      472,
      473,
      474,
      475,
      479,
      480,
      484,
      485,
      486,
      487,
      488,
      489,
      490,
      491,
      492,
      493,
      495,
      496,
      497,
      499,
      500,
      501,
      502,
      503,
      504,
      506,
      507,
      509,
      510,
      515,
      516,
      517,
      518,
      522,
      523,
      524,
      525,
      526,
      527,
      528,
      529,
      530,
      538,
      539,
      540,
      541,
      542,
      543,
      546,
      549,
      553,
      554,
      555,
      556,
      560,
      561,
      562,
      563,
      564,
      565,
      566,
      567,
      568,
      569,
      573,
      574,
      575,
      579,
      580,
      581,
      583,
      587,
      588,
      589,
      590,
      591,
      592,
      593,
      594,
      595,
      599,
      603,
      604,
      605,
      606,
      607,
      608,
      609,
      610,
      611,
      612,
      613,
      614,
      615,
      619,
      620,
      621,
      623,
      624,
      625,
      627,
      628,
      629,
      630,
      632,
      633,
      634,
      635,
      636,
      637,
      638,
      639,
      644,
      645,
      646,
      647,
      648,
      649,
      650,
      651,
      652,
      653,
      654,
      655,
      659,
      660,
      661,
      662,
      666,
      667,
      668,
      669,
      673,
      674,
      675,
      676,
      677,
      678,
      679,
      680,
      680,
      684,
      685,
      686,
      690,
      691,
      692,
      693,
      694,
      695,
      696,
      697,
      698,
      699,
      700,
      701,
      702,
      703,
      704,
      705,
      706,
      712,
      713,
      714,
      715,
      715,
      716,
      716,
      717,
      718,
      719,
      720,
      721,
      722,
      726,
      726,
      727,
      727,
      760,
      761,
      762,
      763,
      764,
      765,
      766,
      767,
      768,
      769,
      770,
      771,
      772,
      773,
      774,
      775,
      776,
      777,
      778,
      779,
      780,
      781,
      782,
      783,
      784,
      785,
      789,
      793,
      794,
      795,
      796,
      797,
      798,
      799,
      803,
      804,
      808,
      812,
      813,
      814,
      815,
      816,
      817,
      818,
      819,
      820,
      821,
      822,
      823,
      824,
      825,
      826,
      827,
      828,
      829,
      833,
      834,
      835,
      836,
      838,
      838,
      838,
      839,
      839,
      839,
      839,
      840,
      840,
      840,
      841,
      841,
      841,
      842,
      842,
      842,
      842,
      843,
      843,
      843,
      843,
      844,
      844,
      844,
      844,
      845,
      845,
      845,
      846,
      846,
      846,
      847,
      847,
      852,
      853,
      854,
      855,
      856,
      857,
      858,
      859,
      860,
      861,
      862,
      863,
      864,
      865,
      866,
      867,
      868,
      870,
      870,
      870,
      871,
      871,
      871,
      872,
      872,
      872,
      873,
      873,
      873,
      874,
      874,
      874,
      875,
      875,
      881,
      882,
      883,
      884,
      885,
      886,
      887,
      889,
      892,
      893,
      894,
      895,
      896,
      897,
      898,
      898,
      900,
      902,
      903,
      905,
      906,
      907,
      908,
      909,
      910,
      911,
      912,
      913,
      914,
      916,
      917,
      921,
      922,
      923,
      924,
      924,
      925,
      925,
      926,
      926,
      931,
      932,
      933,
      934,
      938,
      939,
      943,
      947,
      948,
      949,
      953,
      954,
      955,
      959,
      960,
      964,
      968,
      969,
      971,
      971,
      971,
      972,
      972,
      973,
      973,
      974,
      974,
      975,
      975,
      976,
      976,
      977,
      977,
      978,
      978,
      979,
      979,
      980,
      980,
      981,
      981,
      982,
      982,
      983,
      983,
      984,
      984,
      985,
      985,
      986,
      986,
      987,
      987,
      988,
      988,
      989,
      989,
      990,
      990,
      991,
      991,
      992,
      992,
      993,
      993,
      994,
      994,
      995,
      999,
      1000,
      1003,
      1004,
      1005,
      1008,
      1011
     ]
    },
    "mne.io.constants.FWD": {
     "line number": [
      735,
      736,
      737,
      738,
      739,
      740,
      741,
      743,
      744,
      745,
      747,
      748,
      749,
      751,
      753,
      754,
      755
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.constants.FIFF": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.io.constants.FWD": {
  "data": {
   "lineno": 733
  },
  "type": "constant"
 },
 "mne.io.constants._ch_coil_type_named": {
  "data": {
   "lineno": 970
  },
  "type": "constant"
 },
 "mne.io.constants._ch_kind_named": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "mne.io.constants._ch_unit_mul_named": {
  "data": {
   "lineno": 869
  },
  "type": "constant"
 },
 "mne.io.constants._ch_unit_named": {
  "data": {
   "lineno": 837
  },
  "type": "constant"
 },
 "mne.io.constants._coord_frame_named": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "mne.io.constants._dig_cardinal_named": {
  "data": {
   "lineno": 382
  },
  "type": "constant"
 },
 "mne.io.constants._dig_kind_named": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "mne.io.ctf": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.constants": {
  "data": {
   "symbols_in_volume": {
    "BunchConst": {
     "line number": [
      11
     ]
    },
    "mne.io.ctf.constants.CTF": {
     "line number": [
      14,
      15,
      16,
      17,
      19,
      20,
      21,
      22,
      24,
      25,
      26,
      27,
      28,
      30,
      31,
      34,
      37,
      38,
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.ctf.constants.CTF": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.io.ctf.ctf": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.ctf.RawCTF": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "mne.io.ctf.ctf.RawCTF.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      97
     ]
    },
    "ValueError": {
     "line number": [
      100
     ]
    },
    "_annotate_bad_segments": {
     "line number": [
      147
     ]
    },
    "_check_option": {
     "line number": [
      101
     ]
    },
    "_compose_meas_info": {
     "line number": [
      113
     ]
    },
    "_format_dig_points": {
     "line number": [
      115
     ]
    },
    "_make_ctf_coord_trans_set": {
     "line number": [
      108
     ]
    },
    "_make_ctf_name": {
     "line number": [
      124
     ]
    },
    "_read_annotations_ctf_call": {
     "line number": [
      149
     ]
    },
    "_read_bad_chans": {
     "line number": [
      116
     ]
    },
    "_read_eeg": {
     "line number": [
      105
     ]
    },
    "_read_hc": {
     "line number": [
      104
     ]
    },
    "_read_pos": {
     "line number": [
      110
     ]
    },
    "_read_res4": {
     "line number": [
      103
     ]
    },
    "_validate_type": {
     "line number": [
      94
     ]
    },
    "float": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      123,
      123,
      131,
      138
     ]
    },
    "list": {
     "line number": [
      119,
      120,
      121
     ]
    },
    "mne.io.ctf.ctf.RawCTF": {
     "line number": [
      139
     ]
    },
    "mne.io.ctf.ctf._get_sample_info": {
     "line number": [
      128
     ]
    },
    "os.path.isdir": {
     "line number": [
      99
     ]
    },
    "str": {
     "line number": [
      95
     ]
    },
    "super": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.RawCTF._clean_names": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "_clean_names": {
     "line number": [
      185,
      191
     ]
    },
    "dict": {
     "line number": [
      185
     ]
    },
    "zip": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.RawCTF._read_segment_file": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "_blk_read_lims": {
     "line number": [
      165
     ]
    },
    "_mult_cal_one": {
     "line number": [
      180
     ]
    },
    "int": {
     "line number": [
      166
     ]
    },
    "len": {
     "line number": [
      168
     ]
    },
    "min": {
     "line number": [
      170
     ]
    },
    "numpy.fromfile": {
     "line number": [
      175
     ]
    },
    "open": {
     "line number": [
      167
     ]
    },
    "range": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.ctf._get_sample_info": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      211,
      232
     ]
    },
    "dict": {
     "line number": [
      250
     ]
    },
    "enumerate": {
     "line number": [
      201
     ]
    },
    "len": {
     "line number": [
      231,
      235
     ]
    },
    "mne.io.ctf.ctf.os": {
     "line number": [
      206
     ]
    },
    "numpy.fromfile": {
     "line number": [
      230
     ]
    },
    "numpy.where": {
     "line number": [
      234
     ]
    },
    "open": {
     "line number": [
      205
     ]
    },
    "range": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.read_raw_ctf": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.io.ctf.ctf.RawCTF": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.eeg": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.ctf.eeg._cardinal_dict": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.ctf.eeg._read_eeg": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      37
     ]
    },
    "_make_ctf_name": {
     "line number": [
      25
     ]
    },
    "dict": {
     "line number": [
      29
     ]
    },
    "float": {
     "line number": [
      39
     ]
    },
    "int": {
     "line number": [
      44
     ]
    },
    "len": {
     "line number": [
      34,
      36
     ]
    },
    "list": {
     "line number": [
      29,
      29,
      29,
      29
     ]
    },
    "mne.io.ctf.eeg._cardinal_dict": {
     "line number": [
      44,
      45
     ]
    },
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "open": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.eeg._read_pos": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      85
     ]
    },
    "apply_trans": {
     "line number": [
      92
     ]
    },
    "dict": {
     "line number": [
      88
     ]
    },
    "float": {
     "line number": [
      90
     ]
    },
    "int": {
     "line number": [
      84
     ]
    },
    "len": {
     "line number": [
      60,
      62,
      75,
      81
     ]
    },
    "list": {
     "line number": [
      61,
      64,
      68,
      70,
      88
     ]
    },
    "numpy.array": {
     "line number": [
      90
     ]
    },
    "open": {
     "line number": [
      72
     ]
    },
    "os.listdir": {
     "line number": [
      58
     ]
    },
    "os.path.join": {
     "line number": [
      58
     ]
    },
    "warn": {
     "line number": [
      63,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.eeg.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mne.io.ctf.eeg.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "mne.io.ctf.eeg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.hc": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.hc._coord_dict": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.ctf.hc._kind_dict": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.ctf.hc._read_hc": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "_make_ctf_name": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "list": {
     "line number": [
      71
     ]
    },
    "mne.io.ctf.hc._read_one_coil_point": {
     "line number": [
      74
     ]
    },
    "open": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.hc._read_one_coil_point": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      32,
      59
     ]
    },
    "dict": {
     "line number": [
      35
     ]
    },
    "enumerate": {
     "line number": [
      53
     ]
    },
    "float": {
     "line number": [
      61
     ]
    },
    "len": {
     "line number": [
      26,
      28,
      55,
      58
     ]
    },
    "mne.io.ctf.hc._coord_dict": {
     "line number": [
      37
     ]
    },
    "mne.io.ctf.hc._kind_dict": {
     "line number": [
      44
     ]
    },
    "numpy.empty": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.hc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.info": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.info._add_eeg_pos": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      357,
      370,
      389
     ]
    },
    "_coord_frame_name": {
     "line number": [
      373,
      391
     ]
    },
    "apply_trans": {
     "line number": [
      368,
      387
     ]
    },
    "dict": {
     "line number": [
      383
     ]
    },
    "range": {
     "line number": [
      361,
      382
     ]
    },
    "zip": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._annotate_bad_segments": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      480
     ]
    },
    "len": {
     "line number": [
      477
     ]
    },
    "numpy.float64": {
     "line number": [
      474,
      475,
      475
     ]
    },
    "open": {
     "line number": [
      470
     ]
    },
    "os.path.exists": {
     "line number": [
      463
     ]
    },
    "os.path.join": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._at_origin": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._check_comp": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      282
     ]
    },
    "enumerate": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._check_comp_ch": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._comp_sort_keys": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "int": {
     "line number": [
      269,
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._compose_meas_info": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "_empty_info": {
     "line number": [
      413
     ]
    },
    "combine_transforms": {
     "line number": [
      433
     ]
    },
    "dict": {
     "line number": [
      422
     ]
    },
    "get_new_file_id": {
     "line number": [
      416
     ]
    },
    "invert_transform": {
     "line number": [
      435
     ]
    },
    "len": {
     "line number": [
      429
     ]
    },
    "mne.io.ctf.info._add_eeg_pos": {
     "line number": [
      444
     ]
    },
    "mne.io.ctf.info._convert_channel_info": {
     "line number": [
      439
     ]
    },
    "mne.io.ctf.info._convert_comp_data": {
     "line number": [
      440
     ]
    },
    "mne.io.ctf.info._convert_time": {
     "line number": [
      418
     ]
    },
    "mne.io.ctf.info._filt_map": {
     "line number": [
      424,
      425
     ]
    },
    "mne.io.ctf.info._pick_eeg_pos": {
     "line number": [
      443
     ]
    },
    "mne.io.ctf.info._pick_isotrak_and_hpi_coils": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._conv_comp": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "_add_kind": {
     "line number": [
      297
     ]
    },
    "_calibrate_comp": {
     "line number": [
      306
     ]
    },
    "dict": {
     "line number": [
      295,
      303
     ]
    },
    "enumerate": {
     "line number": [
      300
     ]
    },
    "len": {
     "line number": [
      293,
      294,
      304,
      304
     ]
    },
    "numpy.array": {
     "line number": [
      292,
      295
     ]
    },
    "numpy.empty": {
     "line number": [
      299
     ]
    },
    "numpy.in1d": {
     "line number": [
      291
     ]
    },
    "range": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_channel_info": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      208,
      209,
      210,
      211,
      250
     ]
    },
    "dict": {
     "line number": [
      153
     ]
    },
    "enumerate": {
     "line number": [
      151
     ]
    },
    "float": {
     "line number": [
      152
     ]
    },
    "int": {
     "line number": [
      234
     ]
    },
    "list": {
     "line number": [
      149
     ]
    },
    "mne.io.ctf.info._at_origin": {
     "line number": [
      243
     ]
    },
    "mne.io.ctf.info._check_comp_ch": {
     "line number": [
      228
     ]
    },
    "mne.io.ctf.info._get_plane_vectors": {
     "line number": [
      203,
      205
     ]
    },
    "numpy.abs": {
     "line number": [
      196
     ]
    },
    "numpy.concatenate": {
     "line number": [
      207
     ]
    },
    "numpy.cross": {
     "line number": [
      201
     ]
    },
    "numpy.dot": {
     "line number": [
      196
     ]
    },
    "numpy.full": {
     "line number": [
      153
     ]
    },
    "numpy.nan": {
     "line number": [
      153,
      247
     ]
    },
    "numpy.sqrt": {
     "line number": [
      192
     ]
    },
    "numpy.sum": {
     "line number": [
      163,
      164,
      192
     ]
    },
    "warn": {
     "line number": [
      171,
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_comp_data": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "len": {
     "line number": [
      323
     ]
    },
    "list": {
     "line number": [
      322
     ]
    },
    "mne.io.ctf.info._check_comp": {
     "line number": [
      318
     ]
    },
    "mne.io.ctf.info._comp_sort_keys": {
     "line number": [
      315
     ]
    },
    "mne.io.ctf.info._conv_comp": {
     "line number": [
      326,
      330
     ]
    },
    "range": {
     "line number": [
      323
     ]
    },
    "sorted": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_time": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      84,
      98
     ]
    },
    "ValueError": {
     "line number": [
      79,
      93
     ]
    },
    "calendar.timegm": {
     "line number": [
      104
     ]
    },
    "time.strptime": {
     "line number": [
      78,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._ctf_to_fiff": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.ctf.info._filt_map": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "mne.io.ctf.info._get_plane_vectors": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      115
     ]
    },
    "numpy.abs": {
     "line number": [
      116,
      116
     ]
    },
    "numpy.array": {
     "line number": [
      117
     ]
    },
    "numpy.cross": {
     "line number": [
      127
     ]
    },
    "numpy.dot": {
     "line number": [
      125
     ]
    },
    "numpy.sqrt": {
     "line number": [
      113,
      126
     ]
    },
    "numpy.sum": {
     "line number": [
      113,
      126
     ]
    },
    "numpy.zeros": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._pick_eeg_pos": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      336
     ]
    },
    "list": {
     "line number": [
      337,
      337,
      337,
      337
     ]
    },
    "mne.io.ctf.info._at_origin": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._pick_isotrak_and_hpi_coils": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      50,
      59
     ]
    },
    "apply_trans": {
     "line number": [
      53,
      62
     ]
    },
    "dict": {
     "line number": [
      36,
      52,
      61
     ]
    },
    "list": {
     "line number": [
      34,
      34,
      35,
      36
     ]
    },
    "mne.io.ctf.info._ctf_to_fiff": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info._read_bad_chans": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "_clean_names": {
     "line number": [
      455
     ]
    },
    "dict": {
     "line number": [
      455
     ]
    },
    "open": {
     "line number": [
      456
     ]
    },
    "os.path.exists": {
     "line number": [
      453
     ]
    },
    "os.path.join": {
     "line number": [
      452
     ]
    },
    "zip": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.info.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.info.strptime": {
  "data": {
   "shadows": "time.strptime"
  },
  "type": "import"
 },
 "mne.io.ctf.info.timegm": {
  "data": {
   "shadows": "calendar.timegm"
  },
  "type": "import"
 },
 "mne.io.ctf.markers": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.markers.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.ctf.markers._get_markers": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "consume": {
     "line number": [
      26,
      30,
      33,
      36
     ]
    },
    "dict": {
     "line number": [
      24
     ]
    },
    "int": {
     "line number": [
      27,
      34
     ]
    },
    "next": {
     "line number": [
      37,
      39
     ]
    },
    "open": {
     "line number": [
      25
     ]
    },
    "parse_marker": {
     "line number": [
      39
     ]
    },
    "range": {
     "line number": [
      29,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.markers._get_markers.consume": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "predicate": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.markers._get_markers.parse_marker": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "float": {
     "line number": [
      21,
      22
     ]
    },
    "int": {
     "line number": [
      21,
      22
     ]
    },
    "io.BytesIO": {
     "line number": [
      21
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.markers._get_res4_info_needed_by_markers": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "_convert_time": {
     "line number": [
      54
     ]
    },
    "_read_res4": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.markers._read_annotations_ctf": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "mne.io.ctf.markers._get_res4_info_needed_by_markers": {
     "line number": [
      61
     ]
    },
    "mne.io.ctf.markers._read_annotations_ctf_call": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.markers._read_annotations_ctf_call": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      70,
      81
     ]
    },
    "len": {
     "line number": [
      78
     ]
    },
    "list": {
     "line number": [
      70,
      70,
      70
     ]
    },
    "mne.io.ctf.markers._get_markers": {
     "line number": [
      72
     ]
    },
    "numpy.concatenate": {
     "line number": [
      77
     ]
    },
    "numpy.repeat": {
     "line number": [
      78
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      81
     ]
    },
    "os.path.exists": {
     "line number": [
      69
     ]
    },
    "os.path.join": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.markers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.markers.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.res4": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.res4._make_ctf_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      21
     ]
    },
    "os.path.basename": {
     "line number": [
      18
     ]
    },
    "os.path.isfile": {
     "line number": [
      19
     ]
    },
    "os.path.join": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._move_to_next": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_comp_coeff": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      87
     ]
    },
    "list": {
     "line number": [
      77
     ]
    },
    "mne.io.ctf.res4._read_int2": {
     "line number": [
      76
     ]
    },
    "numpy.dtype": {
     "line number": [
      79
     ]
    },
    "numpy.fromfile": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_double": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.fromfile": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_filter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      64
     ]
    },
    "mne.io.ctf.res4._read_double": {
     "line number": [
      65,
      69
     ]
    },
    "mne.io.ctf.res4._read_int": {
     "line number": [
      66,
      67
     ]
    },
    "mne.io.ctf.res4._read_int2": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_int": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.fromfile": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_int2": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.fromfile": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_res4": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      103,
      193
     ]
    },
    "len": {
     "line number": [
      150
     ]
    },
    "list": {
     "line number": [
      162,
      167
     ]
    },
    "mne.io.ctf.res4._make_ctf_name": {
     "line number": [
      102
     ]
    },
    "mne.io.ctf.res4._move_to_next": {
     "line number": [
      121,
      125,
      129,
      136,
      139,
      141,
      153
     ]
    },
    "mne.io.ctf.res4._read_comp_coeff": {
     "line number": [
      199
     ]
    },
    "mne.io.ctf.res4._read_double": {
     "line number": [
      122,
      123
     ]
    },
    "mne.io.ctf.res4._read_filter": {
     "line number": [
      164
     ]
    },
    "mne.io.ctf.res4._read_int": {
     "line number": [
      119,
      126,
      130,
      137,
      140,
      142,
      143,
      154
     ]
    },
    "mne.io.ctf.res4._read_int2": {
     "line number": [
      110,
      120,
      124,
      127,
      128,
      135,
      138,
      161
     ]
    },
    "mne.io.ctf.res4._read_string": {
     "line number": [
      106,
      107,
      108,
      109,
      111,
      112,
      144,
      145,
      146,
      147,
      148,
      149,
      158,
      169
     ]
    },
    "mne.io.ctf.res4._read_ustring": {
     "line number": [
      152
     ]
    },
    "numpy.dtype": {
     "line number": [
      171,
      176
     ]
    },
    "numpy.fromfile": {
     "line number": [
      188
     ]
    },
    "open": {
     "line number": [
      104
     ]
    },
    "range": {
     "line number": [
      133,
      163,
      168,
      195
     ]
    },
    "zip": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_string": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_ustring": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.fromfile": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.res4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.res4.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.tests.test_ctf": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.brainstorm.bst_raw.data_path": {
     "line number": [
      37
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      29
     ]
    },
    "mne.io.ctf.tests.test_ctf.block_sizes": {
     "line number": [
      54
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial": {
     "line number": [
      43,
      51
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_2_trials": {
     "line number": [
      44
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch": {
     "line number": [
      47
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous": {
     "line number": [
      42,
      50
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_discont": {
     "line number": [
      45
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_somato": {
     "line number": [
      46
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      429
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      36
     ]
    },
    "sorted": {
     "line number": [
      54
     ]
    },
    "tuple": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.ctf.tests.test_ctf.CTF": {
  "data": {
   "shadows": "mne.io.ctf.constants.CTF"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._assert_annotations_equal": {
  "data": {
   "shadows": "mne.tests.test_annotations._assert_annotations_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._bad_res4_grad_comp": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "mne.io.ctf.constants.CTF.CTFV_MEG_CH": {
     "line number": [
      399
     ]
    },
    "mne.io.ctf.tests.test_ctf.mne": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf._clean_names": {
  "data": {
   "shadows": "mne.utils._clean_names"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._read_res4_mag_comp": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "mne.io.ctf.constants.CTF.CTFV_REF_MAG_CH": {
     "line number": [
      391
     ]
    },
    "mne.io.ctf.tests.test_ctf.mne": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.block_sizes": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.brainstorm": {
  "data": {
   "shadows": "mne.datasets.brainstorm"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.ctf_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_2_trials": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_catch": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_continuous": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_discont": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_somato": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fnames": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_annotations": {
  "data": {
   "shadows": "mne.read_annotations"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.single_trials": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.somato_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.spm_face": {
  "data": {
   "shadows": "mne.datasets.spm_face"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.test_rawctf_clean_names": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      236
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      232
     ]
    },
    "mne.io.ctf.tests.test_ctf.copy": {
     "line number": [
      241
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_dir": {
     "line number": [
      237,
      238
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch": {
     "line number": [
      237,
      238
     ]
    },
    "mne.io.ctf.tests.test_ctf.pytest": {
     "line number": [
      236
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      237,
      238
     ]
    },
    "mne.utils._clean_names": {
     "line number": [
      240,
      252,
      263
     ]
    },
    "numpy.array_equal": {
     "line number": [
      252
     ]
    },
    "os.path.join": {
     "line number": [
      237,
      238
     ]
    },
    "zip": {
     "line number": [
      250,
      258,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      76,
      100
     ]
    },
    "RuntimeWarning": {
     "line number": [
      68,
      84,
      99
     ]
    },
    "TypeError": {
     "line number": [
      224
     ]
    },
    "ValueError": {
     "line number": [
      225,
      228
     ]
    },
    "enumerate": {
     "line number": [
      79,
      146
     ]
    },
    "int": {
     "line number": [
      201
     ]
    },
    "len": {
     "line number": [
      71,
      133,
      133,
      145,
      145,
      200,
      206
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      58
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      154
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_NONE": {
     "line number": [
      156
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      184
     ]
    },
    "mne.io.ctf.tests.test_ctf.block_sizes": {
     "line number": [
      203
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_dir": {
     "line number": [
      67,
      90,
      102,
      106,
      227,
      229
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch": {
     "line number": [
      66,
      67,
      95,
      97
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous": {
     "line number": [
      225,
      227,
      229
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fnames": {
     "line number": [
      106
     ]
    },
    "mne.io.ctf.tests.test_ctf.os": {
     "line number": [
      65,
      94,
      98,
      101
     ]
    },
    "mne.io.ctf.tests.test_ctf.pytest": {
     "line number": [
      68,
      76,
      84,
      99,
      100,
      109,
      215,
      224,
      225,
      228,
      57
     ]
    },
    "mne.io.ctf.tests.test_ctf.shutil": {
     "line number": [
      67,
      90,
      96,
      102
     ]
    },
    "mne.io.ctf.tests.test_ctf.single_trials": {
     "line number": [
      130
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      69,
      76,
      85,
      100,
      110,
      216,
      224,
      225,
      227,
      228
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      108,
      196
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      69
     ]
    },
    "mne.pick_types": {
     "line number": [
      70
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      87
     ]
    },
    "numpy.arange": {
     "line number": [
      200
     ]
    },
    "numpy.array": {
     "line number": [
      83,
      86
     ]
    },
    "numpy.nan": {
     "line number": [
      170,
      176
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      71,
      199
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      87,
      114,
      115,
      119,
      136,
      140,
      142,
      160,
      173,
      179,
      210,
      212,
      217,
      221,
      222
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      113,
      139
     ]
    },
    "open": {
     "line number": [
      74,
      78
     ]
    },
    "os.path.basename": {
     "line number": [
      97,
      130,
      203
     ]
    },
    "os.path.join": {
     "line number": [
      62,
      65,
      66,
      67,
      72,
      90,
      91,
      94,
      95,
      97,
      102,
      103,
      106,
      227,
      229
     ]
    },
    "round": {
     "line number": [
      201
     ]
    },
    "slice": {
     "line number": [
      204,
      204,
      204,
      205,
      205,
      207,
      207,
      208
     ]
    },
    "str": {
     "line number": [
      61,
      80
     ]
    },
    "tuple": {
     "line number": [
      80
     ]
    },
    "zip": {
     "line number": [
      134,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf_annotations": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "events": {
     "line number": [
      360,
      361
     ]
    },
    "mne.create_info": {
     "line number": [
      356
     ]
    },
    "mne.datasets.brainstorm.bst_raw.requires_bstraw_data": {
     "line number": [
      322
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      360
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      354
     ]
    },
    "mne.io.ctf.tests.test_ctf.somato_fname": {
     "line number": [
      357,
      358
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      357
     ]
    },
    "mne.read_annotations": {
     "line number": [
      358
     ]
    },
    "numpy.array": {
     "line number": [
      325
     ]
    },
    "numpy.empty": {
     "line number": [
      355
     ]
    },
    "numpy.float64": {
     "line number": [
      355
     ]
    },
    "numpy.sort": {
     "line number": [
      361
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf_annotations_smoke_test": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      365
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_dir": {
     "line number": [
      380
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      384
     ]
    },
    "mne.read_annotations": {
     "line number": [
      381
     ]
    },
    "mne.tests.test_annotations._assert_annotations_equal": {
     "line number": [
      385
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      382
     ]
    },
    "os.path.join": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf_mag_bad_comp": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      425
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      405
     ]
    },
    "mne.io.ctf.tests.test_ctf._bad_res4_grad_comp": {
     "line number": [
      424
     ]
    },
    "mne.io.ctf.tests.test_ctf._read_res4_mag_comp": {
     "line number": [
      411
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_dir": {
     "line number": [
      408
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous": {
     "line number": [
      408
     ]
    },
    "mne.io.ctf.tests.test_ctf.mne": {
     "line number": [
      411,
      414,
      415,
      424
     ]
    },
    "mne.io.ctf.tests.test_ctf.pytest": {
     "line number": [
      425
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      409,
      412,
      426
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      421,
      422
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      423
     ]
    },
    "os.path": {
     "line number": [
      408,
      409,
      412,
      426
     ]
    },
    "os.path.join": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_spm_ctf": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "mne.datasets.spm_face.data_path": {
     "line number": [
      269
     ]
    },
    "mne.datasets.spm_face.requires_spm_data": {
     "line number": [
      266
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      279
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      272
     ]
    },
    "numpy.all": {
     "line number": [
      279
     ]
    },
    "numpy.array": {
     "line number": [
      278
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      285
     ]
    },
    "os.path.join": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_saving_picked": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      299
     ]
    },
    "len": {
     "line number": [
      298,
      304,
      305
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      288
     ]
    },
    "mne.io.compensator.get_current_comp": {
     "line number": [
      297
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_dir": {
     "line number": [
      294
     ]
    },
    "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial": {
     "line number": [
      294
     ]
    },
    "mne.io.ctf.tests.test_ctf.pytest": {
     "line number": [
      289
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      294
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      309,
      315
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      295
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      302
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      312,
      318
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      311,
      317
     ]
    },
    "os.path.join": {
     "line number": [
      293,
      294
     ]
    },
    "str": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.ctf.trans": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.trans._make_ctf_coord_trans_set": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      58,
      96,
      99
     ]
    },
    "Transform": {
     "line number": [
      76
     ]
    },
    "any": {
     "line number": [
      95,
      98
     ]
    },
    "combine_transforms": {
     "line number": [
      109,
      110
     ]
    },
    "dict": {
     "line number": [
      80,
      81,
      111
     ]
    },
    "invert_transform": {
     "line number": [
      62,
      110
     ]
    },
    "mne.io.ctf.trans._make_transform_card": {
     "line number": [
      60
     ]
    },
    "mne.io.ctf.trans._quaternion_align": {
     "line number": [
      105
     ]
    },
    "numpy.array": {
     "line number": [
      103,
      104
     ]
    },
    "numpy.eye": {
     "line number": [
      69
     ]
    },
    "numpy.sqrt": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.trans._make_transform_card": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      19
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      20
     ]
    },
    "invert_transform": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.trans._quaternion_align": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      38
     ]
    },
    "Transform": {
     "line number": [
      40
     ]
    },
    "_fit_matched_points": {
     "line number": [
      26
     ]
    },
    "_quat_to_affine": {
     "line number": [
      26
     ]
    },
    "apply_trans": {
     "line number": [
      31
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      32
     ]
    },
    "tuple": {
     "line number": [
      35,
      35,
      36
     ]
    },
    "zip": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf.trans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf_comp._add_kind": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "int": {
     "line number": [
      22,
      24,
      26,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf_comp._calibrate_comp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      43
     ]
    },
    "_pl": {
     "line number": [
      45
     ]
    },
    "float": {
     "line number": [
      48,
      48
     ]
    },
    "len": {
     "line number": [
      36,
      37,
      40
     ]
    },
    "numpy.zeros": {
     "line number": [
      36,
      37
     ]
    },
    "range": {
     "line number": [
      40
     ]
    },
    "zip": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf_comp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp.read_ctf_comp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      90
     ]
    },
    "_read_named_matrix": {
     "line number": [
      82
     ]
    },
    "bool": {
     "line number": [
      106
     ]
    },
    "dict": {
     "line number": [
      93
     ]
    },
    "dir_tree_find": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      117,
      118
     ]
    },
    "mne.io.ctf_comp._add_kind": {
     "line number": [
      95
     ]
    },
    "mne.io.ctf_comp._calibrate_comp": {
     "line number": [
      110
     ]
    },
    "numpy.float64": {
     "line number": [
      112,
      113
     ]
    },
    "numpy.ones": {
     "line number": [
      112,
      113
     ]
    },
    "range": {
     "line number": [
      83,
      96
     ]
    },
    "read_tag": {
     "line number": [
      87,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.ctf_comp.write_ctf_comp": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      152
     ]
    },
    "end_block": {
     "line number": [
      157,
      159
     ]
    },
    "len": {
     "line number": [
      137
     ]
    },
    "start_block": {
     "line number": [
      141,
      143
     ]
    },
    "write_int": {
     "line number": [
      145,
      147
     ]
    },
    "write_named_matrix": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry": {
  "data": {},
  "type": "module"
 },
 "mne.io.curry.curry": {
  "data": {
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      51
     ]
    },
    "dict": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.curry.curry.CHANTYPES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.curry.curry.CurryParameters": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.curry.curry.FIFFV_CHANTYPES": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.curry.curry.FIFFV_COILTYPES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.curry.curry.FILE_EXTENSIONS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.curry.curry.RawCurry": {
  "data": {
   "lineno": 409
  },
  "type": "class"
 },
 "mne.io.curry.curry.RawCurry.__init__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      437
     ]
    },
    "mne.io.curry.curry.RawCurry": {
     "line number": [
      439
     ]
    },
    "mne.io.curry.curry._get_curry_file_structure": {
     "line number": [
      429
     ]
    },
    "mne.io.curry.curry._read_annotations_curry": {
     "line number": [
      446
     ]
    },
    "mne.io.curry.curry._read_curry_info": {
     "line number": [
      434
     ]
    },
    "os.path.abspath": {
     "line number": [
      432
     ]
    },
    "super": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry.RawCurry._read_segment_file": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      466
     ]
    },
    "_read_segments_file": {
     "line number": [
      469
     ]
    },
    "check_version": {
     "line number": [
      458
     ]
    },
    "dict": {
     "line number": [
      457
     ]
    },
    "isinstance": {
     "line number": [
      455
     ]
    },
    "numpy.arange": {
     "line number": [
      456
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      464
     ]
    },
    "slice": {
     "line number": [
      455
     ]
    },
    "warn": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry.SI_UNITS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.curry.curry.SI_UNIT_SCALE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.curry.curry._card_dict": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "mne.io.curry.curry._first_hpi": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      324
     ]
    },
    "any": {
     "line number": [
      319
     ]
    },
    "float": {
     "line number": [
      321
     ]
    },
    "numpy.array": {
     "line number": [
      321
     ]
    },
    "open": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._get_curry_file_structure": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      77
     ]
    },
    "_check_fname": {
     "line number": [
      64
     ]
    },
    "dict": {
     "line number": [
      69
     ]
    },
    "mne.io.curry.curry.FILE_EXTENSIONS": {
     "line number": [
      71
     ]
    },
    "mne.io.curry.curry._get_curry_version": {
     "line number": [
      68
     ]
    },
    "numpy.unique": {
     "line number": [
      77
     ]
    },
    "os.path.isfile": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._get_curry_version": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.io.curry.curry._make_trans_dig": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      293
     ]
    },
    "_angle_between_quats": {
     "line number": [
      286
     ]
    },
    "_quaternion_align": {
     "line number": [
      284
     ]
    },
    "apply_trans": {
     "line number": [
      303
     ]
    },
    "combine_transforms": {
     "line number": [
      291,
      299
     ]
    },
    "dict": {
     "line number": [
      261,
      272
     ]
    },
    "float": {
     "line number": [
      250,
      281
     ]
    },
    "get_ras_to_neuromag_trans": {
     "line number": [
      295
     ]
    },
    "int": {
     "line number": [
      270
     ]
    },
    "invert_transform": {
     "line number": [
      300
     ]
    },
    "len": {
     "line number": [
      252,
      259,
      259,
      276,
      283
     ]
    },
    "list": {
     "line number": [
      260
     ]
    },
    "mne.io.curry.curry.CHANTYPES": {
     "line number": [
      248,
      257
     ]
    },
    "mne.io.curry.curry._card_dict": {
     "line number": [
      264,
      266
     ]
    },
    "mne.io.curry.curry._first_hpi": {
     "line number": [
      283
     ]
    },
    "mne.io.curry.curry._read_curry_lines": {
     "line number": [
      249,
      258
     ]
    },
    "numpy.array": {
     "line number": [
      250,
      280
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      282
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      288
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      286
     ]
    },
    "numpy.zeros": {
     "line number": [
      287
     ]
    },
    "rot_to_quat": {
     "line number": [
      287
     ]
    },
    "zip": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_annotations_curry": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      386
     ]
    },
    "events": {
     "line number": [
      377,
      382,
      384
     ]
    },
    "events.shape": {
     "line number": [
      383
     ]
    },
    "mne.io.curry.curry._get_curry_file_structure": {
     "line number": [
      376
     ]
    },
    "mne.io.curry.curry._read_curry_parameters": {
     "line number": [
      380
     ]
    },
    "mne.io.curry.curry._read_events_curry": {
     "line number": [
      377
     ]
    },
    "numpy.zeros": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_curry_info": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      179
     ]
    },
    "_coil_trans_to_loc": {
     "line number": [
      221
     ]
    },
    "_normal_orth": {
     "line number": [
      220
     ]
    },
    "apply_trans": {
     "line number": [
      213,
      217
     ]
    },
    "create_info": {
     "line number": [
      226
     ]
    },
    "enumerate": {
     "line number": [
      194,
      229
     ]
    },
    "float": {
     "line number": [
      201,
      210,
      214
     ]
    },
    "len": {
     "line number": [
      190,
      190,
      190
     ]
    },
    "list": {
     "line number": [
      192
     ]
    },
    "mne.io.curry.curry.CHANTYPES": {
     "line number": [
      185,
      187,
      189,
      194,
      201,
      210,
      214
     ]
    },
    "mne.io.curry.curry.FIFFV_CHANTYPES": {
     "line number": [
      197
     ]
    },
    "mne.io.curry.curry.FIFFV_COILTYPES": {
     "line number": [
      198
     ]
    },
    "mne.io.curry.curry.SI_UNITS": {
     "line number": [
      232
     ]
    },
    "mne.io.curry.curry.SI_UNIT_SCALE": {
     "line number": [
      233
     ]
    },
    "mne.io.curry.curry._make_trans_dig": {
     "line number": [
      227
     ]
    },
    "mne.io.curry.curry._read_curry_lines": {
     "line number": [
      184,
      186,
      188
     ]
    },
    "mne.io.curry.curry._read_curry_parameters": {
     "line number": [
      173
     ]
    },
    "numpy.array": {
     "line number": [
      201,
      210,
      214
     ]
    },
    "numpy.concatenate": {
     "line number": [
      205
     ]
    },
    "numpy.eye": {
     "line number": [
      174,
      218
     ]
    },
    "numpy.isclose": {
     "line number": [
      215
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      215,
      216
     ]
    },
    "numpy.zeros": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_curry_lines": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "mne.io.curry.curry.re": {
     "line number": [
      113,
      122
     ]
    },
    "open": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_curry_parameters": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      162,
      166
     ]
    },
    "any": {
     "line number": [
      143
     ]
    },
    "dict": {
     "line number": [
      139,
      140
     ]
    },
    "float": {
     "line number": [
      153,
      154
     ]
    },
    "int": {
     "line number": [
      152
     ]
    },
    "iter": {
     "line number": [
      142
     ]
    },
    "mne.io.curry.curry.CHANTYPES": {
     "line number": [
      146,
      147
     ]
    },
    "mne.io.curry.curry.CurryParameters": {
     "line number": [
      168
     ]
    },
    "next": {
     "line number": [
      148
     ]
    },
    "numpy.isclose": {
     "line number": [
      161
     ]
    },
    "open": {
     "line number": [
      141
     ]
    },
    "type": {
     "line number": [
      146,
      147,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_events_curry": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "check_fname": {
     "line number": [
      347
     ]
    },
    "int": {
     "line number": [
      352
     ]
    },
    "mne.io.curry.curry._read_curry_lines": {
     "line number": [
      350
     ]
    },
    "numpy.array": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.curry.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.io.curry.curry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.curry.curry.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.curry.curry.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.curry.curry.read_raw_curry": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "mne.io.curry.curry.RawCurry": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.curry.tests.test_curry": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      30
     ]
    },
    "mne.io.curry.tests.test_curry.curry_dir": {
     "line number": [
      37,
      38,
      40,
      41,
      44,
      45,
      48
     ]
    },
    "mne.io.curry.tests.test_curry.data_dir": {
     "line number": [
      31,
      33,
      35
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      431
     ]
    },
    "numpy.array": {
     "line number": [
      190
     ]
    },
    "os.path.join": {
     "line number": [
      31,
      33,
      35,
      37,
      38,
      40,
      41,
      44,
      45,
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.curry.tests.test_curry.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.FILE_EXTENSIONS": {
  "data": {
   "shadows": "mne.io.curry.curry.FILE_EXTENSIONS"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.HPI_CONTENT": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.LM_CONTENT": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.WANT_TRANS": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry._fit_sphere": {
  "data": {
   "shadows": "mne.bem._fit_sphere"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._get_curry_file_structure": {
  "data": {
   "shadows": "mne.io.curry.curry._get_curry_file_structure"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._get_curry_version": {
  "data": {
   "shadows": "mne.io.curry.curry._get_curry_version"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._get_read_annotations_mock_info": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      381,
      381
     ]
    },
    "mne.io.curry.curry.FILE_EXTENSIONS": {
     "line number": [
      386,
      389,
      390
     ]
    },
    "mne.io.curry.curry._get_curry_version": {
     "line number": [
      385
     ]
    },
    "mne.io.curry.tests.test_curry.curry_dir": {
     "line number": [
      383
     ]
    },
    "str": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._mock_info_file": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "open": {
     "line number": [
      310,
      310
     ]
    },
    "str": {
     "line number": [
      313,
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry._read_events_curry": {
  "data": {
   "shadows": "mne.io.curry.curry._read_events_curry"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.bdf_curry_ref": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "mne.io.curry.tests.test_curry.bdf_file": {
     "line number": [
      54
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      51
     ]
    },
    "mne.io.edf.read_raw_bdf": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.bdf_file": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.bti_rfDC_file": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.curry7_bdf_ascii_file": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry7_bdf_file": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry7_rfDC_file": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry8_bdf_ascii_file": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry8_bdf_file": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry8_rfDC_file": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.data_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.find_events": {
  "data": {
   "shadows": "mne.event.find_events"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.missing_event_file": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_raw_bdf": {
  "data": {
   "shadows": "mne.io.edf.read_raw_bdf"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_raw_bti": {
  "data": {
   "shadows": "mne.io.bti.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_raw_curry": {
  "data": {
   "shadows": "mne.io.curry.read_raw_curry"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.sfreq_testing_data": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      325,
      327
     ]
    },
    "dict": {
     "line number": [
      321,
      322,
      323,
      324,
      326
     ]
    },
    "mne.io.curry.tests.test_curry._mock_info_file": {
     "line number": [
      340
     ]
    },
    "mne.io.curry.tests.test_curry.curry7_bdf_file": {
     "line number": [
      333
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      320,
      321,
      322,
      323,
      324,
      325,
      326,
      327
     ]
    },
    "open": {
     "line number": [
      338
     ]
    },
    "str": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_check_missing_files": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      301,
      304
     ]
    },
    "IOError": {
     "line number": [
      298
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      293
     ]
    },
    "mne.io.curry.curry._get_curry_file_structure": {
     "line number": [
      302,
      305
     ]
    },
    "mne.io.curry.curry._read_events_curry": {
     "line number": [
      299
     ]
    },
    "mne.io.curry.tests.test_curry.missing_event_file": {
     "line number": [
      305
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      298,
      301,
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_curry_annotations": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "mne.annotations.read_annotations": {
     "line number": [
      372
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      353
     ]
    },
    "mne.io.curry.tests.test_curry.curry_dir": {
     "line number": [
      355,
      356,
      357,
      359
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      354,
      355,
      356,
      357,
      359
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      375,
      376,
      377
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_curry_annotations_using_mocked_info": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      417
     ]
    },
    "mne.annotations.read_annotations": {
     "line number": [
      418,
      423
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      395
     ]
    },
    "mne.io.curry.tests.test_curry._get_read_annotations_mock_info": {
     "line number": [
      412
     ]
    },
    "mne.io.curry.tests.test_curry._mock_info_file": {
     "line number": [
      420
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      417,
      396,
      397,
      398,
      399,
      400
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      426,
      427,
      428
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      407
     ]
    },
    "shutil.copyfile": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_events_curry_are_same_as_bdf": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "events": {
     "line number": [
      288,
      289
     ]
    },
    "mne.annotations.events_from_annotations": {
     "line number": [
      288
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      277
     ]
    },
    "mne.event.find_events": {
     "line number": [
      285
     ]
    },
    "mne.io.curry.read_raw_curry": {
     "line number": [
      287
     ]
    },
    "mne.io.curry.tests.test_curry.bdf_file": {
     "line number": [
      285
     ]
    },
    "mne.io.curry.tests.test_curry.curry7_bdf_file": {
     "line number": [
      279
     ]
    },
    "mne.io.curry.tests.test_curry.curry8_bdf_file": {
     "line number": [
      280
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      278,
      279,
      280
     ]
    },
    "mne.io.edf.read_raw_bdf": {
     "line number": [
      285
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      289
     ]
    },
    "range": {
     "line number": [
      284
     ]
    },
    "str": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_raw_curry": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      77
     ]
    },
    "len": {
     "line number": [
      73,
      75
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      58
     ]
    },
    "mne.io.curry.read_raw_curry": {
     "line number": [
      69
     ]
    },
    "mne.io.curry.tests.test_curry.bdf_curry_ref": {
     "line number": [
      78,
      79,
      83,
      86,
      91
     ]
    },
    "mne.io.curry.tests.test_curry.curry7_bdf_ascii_file": {
     "line number": [
      62
     ]
    },
    "mne.io.curry.tests.test_curry.curry7_bdf_file": {
     "line number": [
      60
     ]
    },
    "mne.io.curry.tests.test_curry.curry8_bdf_ascii_file": {
     "line number": [
      63
     ]
    },
    "mne.io.curry.tests.test_curry.curry8_bdf_file": {
     "line number": [
      61
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      68,
      59,
      60,
      61,
      62,
      63,
      65
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      86,
      89
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_raw_curry_rfDC": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "list": {
     "line number": [
      248,
      249
     ]
    },
    "mne.bem._fit_sphere": {
     "line number": [
      269
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      197
     ]
    },
    "mne.io._loc_to_coil_trans": {
     "line number": [
      253
     ]
    },
    "mne.io.bti.read_raw_bti": {
     "line number": [
      222
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_CTF_GRAD": {
     "line number": [
      252
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      259
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_NONE": {
     "line number": [
      262
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EEG_CH": {
     "line number": [
      234,
      258
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MEG_CH": {
     "line number": [
      251
     ]
    },
    "mne.io.curry.read_raw_curry": {
     "line number": [
      224
     ]
    },
    "mne.io.curry.tests.test_curry.HPI_CONTENT": {
     "line number": [
      219
     ]
    },
    "mne.io.curry.tests.test_curry.LM_CONTENT": {
     "line number": [
      216
     ]
    },
    "mne.io.curry.tests.test_curry.WANT_TRANS": {
     "line number": [
      241
     ]
    },
    "mne.io.curry.tests.test_curry.bti_rfDC_file": {
     "line number": [
      222
     ]
    },
    "mne.io.curry.tests.test_curry.curry7_rfDC_file": {
     "line number": [
      199
     ]
    },
    "mne.io.curry.tests.test_curry.curry8_rfDC_file": {
     "line number": [
      200
     ]
    },
    "mne.io.curry.tests.test_curry.pytest": {
     "line number": [
      198,
      199,
      200,
      202
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      223
     ]
    },
    "numpy.abs": {
     "line number": [
      273
     ]
    },
    "numpy.arccos": {
     "line number": [
      273
     ]
    },
    "numpy.array": {
     "line number": [
      267,
      268
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      256,
      272
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      273
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      236,
      241,
      256
     ]
    },
    "open": {
     "line number": [
      215,
      218
     ]
    },
    "os.path.basename": {
     "line number": [
      212,
      217
     ]
    },
    "os.path.join": {
     "line number": [
      212,
      217
     ]
    },
    "os.path.splitext": {
     "line number": [
      209
     ]
    },
    "shutil.copyfile": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_sfreq": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      346
     ]
    },
    "mne.io.curry.read_raw_curry": {
     "line number": [
      349
     ]
    },
    "mne.io.curry.tests.test_curry.sfreq_testing_data": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.diff": {
  "data": {},
  "type": "module"
 },
 "mne.io.diff.is_equal": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      20
     ]
    },
    "isinstance": {
     "line number": [
      20,
      28,
      31
     ]
    },
    "list": {
     "line number": [
      31
     ]
    },
    "numpy.allclose": {
     "line number": [
      29
     ]
    },
    "numpy.ndarray": {
     "line number": [
      28
     ]
    },
    "type": {
     "line number": [
      18,
      18
     ]
    },
    "zip": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.diff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.tests.test_edf": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      49
     ]
    },
    "mne.io.edf.tests.test_edf.FILE": {
     "line number": [
      36
     ]
    },
    "mne.io.edf.tests.test_edf.data_dir": {
     "line number": [
      37,
      38,
      39,
      40,
      42,
      43,
      44,
      45,
      46,
      47
     ]
    },
    "mne.io.edf.tests.test_edf.data_path": {
     "line number": [
      50,
      51,
      53,
      54,
      55,
      57,
      58,
      59
     ]
    },
    "mne.io.edf.tests.test_edf.inspect": {
     "line number": [
      35,
      35
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      422
     ]
    },
    "os.path.abspath": {
     "line number": [
      36
     ]
    },
    "os.path.dirname": {
     "line number": [
      36
     ]
    },
    "os.path.join": {
     "line number": [
      36,
      37,
      38,
      39,
      40,
      42,
      43,
      44,
      45,
      46,
      47,
      50,
      51,
      53,
      54,
      55,
      57,
      58,
      59
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.edf.tests.test_edf.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.FILE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf._KIND_DICT": {
  "data": {
   "shadows": "mne.io.meas_info._kind_dict"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._assert_annotations_equal": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      251,
      252,
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf._get_edf_default_event_id": {
  "data": {
   "shadows": "mne.io.edf.edf._get_edf_default_event_id"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._parse_prefilter_string": {
  "data": {
   "shadows": "mne.io.edf.edf._parse_prefilter_string"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._read_annotations_edf": {
  "data": {
   "shadows": "mne.io.edf.edf._read_annotations_edf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._read_ch": {
  "data": {
   "shadows": "mne.io.edf.edf._read_ch"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.bdf_eeglab_path": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_multiple_annotations_path": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_stim_channel_path": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.data_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.data_path": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.duplicate_channel_labels_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_annot_sub_s_path": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_eeglab_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_overlap_annot_path": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_reduced": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_stim_channel_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_stim_resamp_path": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_txt_stim_channel_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_uneven_eeglab_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_uneven_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.eog": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.misc": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.montage_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_raw_bdf": {
  "data": {
   "shadows": "mne.io.read_raw_bdf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_raw_edf": {
  "data": {
   "shadows": "mne.io.read_raw_edf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.test_bdf_crop_save_stim_channel": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      108
     ]
    },
    "mne.io.edf.tests.test_edf.bdf_stim_channel_path": {
     "line number": [
      111
     ]
    },
    "mne.io.read_raw_bdf": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_bdf_data": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "len": {
     "line number": [
      85,
      90
     ]
    },
    "mne.io.edf.tests.test_edf.bdf_eeglab_path": {
     "line number": [
      96
     ]
    },
    "mne.io.edf.tests.test_edf.bdf_path": {
     "line number": [
      80,
      86
     ]
    },
    "mne.io.edf.tests.test_edf.eog": {
     "line number": [
      81,
      87
     ]
    },
    "mne.io.edf.tests.test_edf.misc": {
     "line number": [
      81,
      87
     ]
    },
    "mne.io.read_raw_bdf": {
     "line number": [
      80,
      86
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      80,
      86
     ]
    },
    "mne.pick_types": {
     "line number": [
      92
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      100
     ]
    },
    "repr": {
     "line number": [
      91
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_bdf_multiple_annotation_channels": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "len": {
     "line number": [
      378
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      374
     ]
    },
    "mne.io.edf.tests.test_edf.bdf_multiple_annotations_path": {
     "line number": [
      377
     ]
    },
    "mne.io.read_raw_bdf": {
     "line number": [
      377
     ]
    },
    "numpy.array": {
     "line number": [
      379
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_duplicate_channel_labels_edf": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      166
     ]
    },
    "mne.io.edf.tests.test_edf.duplicate_channel_labels_path": {
     "line number": [
      167
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      166
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_annot_sub_s_onset": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      394
     ]
    },
    "mne.io.edf.tests.test_edf.edf_annot_sub_s_path": {
     "line number": [
      397
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      397
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_data_broken": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      147
     ]
    },
    "int": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      134,
      134
     ]
    },
    "mne.io.edf.tests.test_edf.edf_path": {
     "line number": [
      130,
      132,
      138
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      147
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      130,
      132,
      149,
      150,
      158
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      130
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      160
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      134
     ]
    },
    "open": {
     "line number": [
      138,
      143,
      153
     ]
    },
    "os.path.join": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_lowpass_zero": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      389
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      386
     ]
    },
    "mne.io.edf.tests.test_edf.edf_stim_resamp_path": {
     "line number": [
      390
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      389
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      390
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_others": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      115
     ]
    },
    "mne.io.edf.tests.test_edf.edf_overlap_annot_path": {
     "line number": [
      118
     ]
    },
    "mne.io.edf.tests.test_edf.edf_reduced": {
     "line number": [
      117
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      116,
      120
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      124
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_prefilter_parse": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "mne.io.edf.edf._parse_prefilter_string": {
     "line number": [
      306,
      311,
      316,
      321
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      307,
      308,
      312,
      313,
      317,
      318,
      322,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_stim_ch_pick_up": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "mne.io.edf.tests.test_edf.data_dir": {
     "line number": [
      367
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      350,
      351,
      353,
      355,
      357,
      359,
      361
     ]
    },
    "mne.io.meas_info._kind_dict.items": {
     "line number": [
      366
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      369
     ]
    },
    "os.path.join": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_find_events_backward_compatibility": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "mne.annotations.events_from_annotations": {
     "line number": [
      213
     ]
    },
    "mne.io.edf.edf._get_edf_default_event_id": {
     "line number": [
      211
     ]
    },
    "mne.io.edf.tests.test_edf.edf_path": {
     "line number": [
      210
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      210
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_generator_bdf": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.test_generator_edf": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.test_invalid_date": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      411,
      418
     ]
    },
    "bytearray": {
     "line number": [
      405
     ]
    },
    "mne.io.edf.tests.test_edf.edf_path": {
     "line number": [
      404
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      411,
      418
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      412,
      419
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      403
     ]
    },
    "open": {
     "line number": [
      404,
      409,
      416
     ]
    },
    "ord": {
     "line number": [
      408,
      415
     ]
    },
    "os.path.join": {
     "line number": [
      409,
      412,
      416,
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_load_generator": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "events": {
     "line number": [
      340,
      347
     ]
    },
    "len": {
     "line number": [
      335,
      339
     ]
    },
    "mne.annotations.events_from_annotations": {
     "line number": [
      340
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      326
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      327
     ]
    },
    "mne.io.edf.tests.test_edf.test_generator_bdf": {
     "line number": [
      327
     ]
    },
    "mne.io.edf.tests.test_edf.test_generator_edf": {
     "line number": [
      327
     ]
    },
    "mne.io.pick.channel_indices_by_type": {
     "line number": [
      337
     ]
    },
    "mne.io.read_raw_bdf": {
     "line number": [
      334
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      332
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      347
     ]
    },
    "os.path.splitext": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_orig_units": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "len": {
     "line number": [
      71,
      71
     ]
    },
    "mne.io.edf.tests.test_edf.edf_path": {
     "line number": [
      67
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_parse_annotation": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      184
     ]
    },
    "len": {
     "line number": [
      192
     ]
    },
    "list": {
     "line number": [
      186
     ]
    },
    "map": {
     "line number": [
      186
     ]
    },
    "mne.io.edf.edf._read_annotations_edf": {
     "line number": [
      196
     ]
    },
    "mne.io.edf.edf._read_ch": {
     "line number": [
      191
     ]
    },
    "numpy.array": {
     "line number": [
      186
     ]
    },
    "numpy.column_stack": {
     "line number": [
      197
     ]
    },
    "numpy.int16": {
     "line number": [
      191
     ]
    },
    "numpy.int64": {
     "line number": [
      187
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      197
     ]
    },
    "open": {
     "line number": [
      189
     ]
    },
    "str": {
     "line number": [
      189
     ]
    },
    "sum": {
     "line number": [
      186
     ]
    },
    "zip": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_read_annot": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "len": {
     "line number": [
      288
     ]
    },
    "mne.Annotations": {
     "line number": [
      267,
      282,
      290
     ]
    },
    "mne.io.edf.edf._read_annotations_edf": {
     "line number": [
      281,
      289
     ]
    },
    "mne.io.edf.tests.test_edf._assert_annotations_equal": {
     "line number": [
      284,
      292
     ]
    },
    "numpy.fromfile": {
     "line number": [
      288
     ]
    },
    "numpy.int16": {
     "line number": [
      288
     ]
    },
    "open": {
     "line number": [
      287
     ]
    },
    "str": {
     "line number": [
      281,
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_read_annotations": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "len": {
     "line number": [
      300
     ]
    },
    "mne.annotations.read_annotations": {
     "line number": [
      299
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      295
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      296
     ]
    },
    "mne.io.edf.tests.test_edf.test_generator_bdf": {
     "line number": [
      296
     ]
    },
    "mne.io.edf.tests.test_edf.test_generator_edf": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_read_raw_edf_stim_channel_input_parameters": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      242
     ]
    },
    "ValueError": {
     "line number": [
      245
     ]
    },
    "all": {
     "line number": [
      242
     ]
    },
    "mne.io.edf.tests.test_edf.edf_path": {
     "line number": [
      241,
      247
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      240,
      245
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      241,
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_to_data_frame": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "mne.io.edf.tests.test_edf.bdf_path": {
     "line number": [
      220
     ]
    },
    "mne.io.edf.tests.test_edf.edf_path": {
     "line number": [
      220
     ]
    },
    "mne.io.edf.tests.test_edf.pytest": {
     "line number": [
      220
     ]
    },
    "mne.io.read_raw_bdf": {
     "line number": [
      227
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      225
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      219
     ]
    },
    "numpy.round": {
     "line number": [
      231
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      231,
      234
     ]
    },
    "os.path.splitext": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      21
     ]
    },
    "mne.io.edf.tests.test_gdf.data_path": {
     "line number": [
      22,
      23,
      24
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      130
     ]
    },
    "os.path.join": {
     "line number": [
      22,
      23,
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.edf.tests.test_gdf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.gdf1_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.gdf2_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.gdf_1ch_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.read_raw_gdf": {
  "data": {
   "shadows": "mne.io.read_raw_gdf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.test_gdf2_birthday": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "int": {
     "line number": [
      65
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      60
     ]
    },
    "mne.io.edf.tests.test_gdf.gdf2_path": {
     "line number": [
      64
     ]
    },
    "mne.io.edf.tests.test_gdf.shutil": {
     "line number": [
      64
     ]
    },
    "mne.io.read_raw_gdf": {
     "line number": [
      73
     ]
    },
    "numpy.array": {
     "line number": [
      70
     ]
    },
    "numpy.fromfile": {
     "line number": [
      68,
      72
     ]
    },
    "numpy.uint64": {
     "line number": [
      68,
      70,
      72
     ]
    },
    "open": {
     "line number": [
      66
     ]
    },
    "str": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_gdf2_data": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "events": {
     "line number": [
      97,
      98,
      100
     ]
    },
    "events.shape": {
     "line number": [
      99
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      79
     ]
    },
    "mne.find_events": {
     "line number": [
      97
     ]
    },
    "mne.io.edf.tests.test_gdf.gdf2_path": {
     "line number": [
      82,
      89,
      104
     ]
    },
    "mne.io.read_raw_gdf": {
     "line number": [
      82,
      104
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      104
     ]
    },
    "mne.pick_types": {
     "line number": [
      85
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      94
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      100
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      99
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_gdf_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      27
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      41
     ]
    },
    "mne.io.edf.tests.test_gdf.gdf1_path": {
     "line number": [
      30,
      46
     ]
    },
    "mne.io.read_raw_gdf": {
     "line number": [
      30
     ]
    },
    "mne.pick_types": {
     "line number": [
      31
     ]
    },
    "numpy.load": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_gdf_exclude_channels": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      119
     ]
    },
    "mne.io.edf.tests.test_gdf.gdf1_path": {
     "line number": [
      122
     ]
    },
    "mne.io.edf.tests.test_gdf.gdf2_path": {
     "line number": [
      125
     ]
    },
    "mne.io.read_raw_gdf": {
     "line number": [
      122,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_one_channel_gdf": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      113
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      110
     ]
    },
    "mne.io.edf.tests.test_gdf.gdf_1ch_path": {
     "line number": [
      114
     ]
    },
    "mne.io.edf.tests.test_gdf.pytest": {
     "line number": [
      113
     ]
    },
    "mne.io.read_raw_gdf": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.eeglab": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests._utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests._utils._read_eeglab_montage": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      36
     ]
    },
    "float": {
     "line number": [
      30
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      35
     ]
    },
    "mne.transforms._sph_to_cart": {
     "line number": [
      32
     ]
    },
    "mne.transforms._topo_to_sph": {
     "line number": [
      31
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      29
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      30
     ]
    },
    "str": {
     "line number": [
      29
     ]
    },
    "zip": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests._utils._sph_to_cart": {
  "data": {
   "shadows": "mne.transforms._sph_to_cart"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests._utils._topo_to_sph": {
  "data": {
   "shadows": "mne.transforms._topo_to_sph"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests._utils.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      27
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.base_dir": {
     "line number": [
      29,
      30,
      31,
      32,
      33,
      37,
      38,
      39,
      40,
      46
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_h5": {
     "line number": [
      42
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat": {
     "line number": [
      35
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_h5": {
     "line number": [
      42
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_mat": {
     "line number": [
      35
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_h5": {
     "line number": [
      41,
      45
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
     "line number": [
      34,
      44
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_h5": {
     "line number": [
      41,
      45
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_mat": {
     "line number": [
      34,
      44
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      384
     ]
    },
    "os.path.join": {
     "line number": [
      27,
      29,
      30,
      31,
      32,
      33,
      37,
      38,
      39,
      40,
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.eeglab.tests.test_eeglab.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab._assert_array_allclose_nan": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      313,
      313,
      314,
      314
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      314
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab._check_h5": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      53
     ]
    },
    "unittest.SkipTest": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab._read_eeglab_montage": {
  "data": {
   "shadows": "mne.io.eeglab.tests._utils._read_eeglab_montage"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_h5": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_h5": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_mat": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_h5_fnames": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_mat_fnames": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.montage_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.one_chanpos_fname": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      330
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      317
     ]
    },
    "numpy.array": {
     "line number": [
      332,
      334
     ]
    },
    "numpy.empty": {
     "line number": [
      333
     ]
    },
    "numpy.nan": {
     "line number": [
      337,
      337,
      337
     ]
    },
    "scipy.io.savemat": {
     "line number": [
      342
     ]
    },
    "str": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_event_duration": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_h5": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_h5": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_mat": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fnames": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_h5_fnames": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_mat_fnames": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.read_epochs_eeglab": {
  "data": {
   "shadows": "mne.read_epochs_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.read_raw_eeglab": {
  "data": {
   "shadows": "mne.io.read_raw_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.test_degenerate": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      263
     ]
    },
    "RuntimeWarning": {
     "line number": [
      262
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      245
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.base_dir": {
     "line number": [
      260
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat": {
     "line number": [
      250
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      262,
      263
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.shutil": {
     "line number": [
      260
     ]
    },
    "mne.read_epochs_eeglab": {
     "line number": [
      263
     ]
    },
    "os.path.join": {
     "line number": [
      253,
      260,
      261
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      250
     ]
    },
    "scipy.io.savemat": {
     "line number": [
      254
     ]
    },
    "str": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_eeglab_annotations": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "len": {
     "line number": [
      274
     ]
    },
    "mne.annotations.read_annotations": {
     "line number": [
      273
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      269
     ]
    },
    "mne.io.eeglab.tests.test_eeglab._check_h5": {
     "line number": [
      272
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      267,
      268
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fnames": {
     "line number": [
      267
     ]
    },
    "numpy.all": {
     "line number": [
      276
     ]
    },
    "set": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_eeglab_event_from_annot": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "len": {
     "line number": [
      306,
      309
     ]
    },
    "mne.annotations.events_from_annotations": {
     "line number": [
      308
     ]
    },
    "mne.annotations.read_annotations": {
     "line number": [
      305
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      299
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      296
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.base_dir": {
     "line number": [
      299,
      300
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
     "line number": [
      300,
      301
     ]
    },
    "mne.io.read_raw_eeglab": {
     "line number": [
      303
     ]
    },
    "os.path.join": {
     "line number": [
      299,
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_eeglab_read_annotations": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "mne.annotations.read_annotations": {
     "line number": [
      282
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      279
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_event_duration": {
     "line number": [
      291
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
     "line number": [
      282
     ]
    },
    "mne.io.read_raw_eeglab": {
     "line number": [
      291
     ]
    },
    "numpy.array": {
     "line number": [
      284
     ]
    },
    "numpy.ones": {
     "line number": [
      293
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      293
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_epochs": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      216,
      218
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      211
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_h5_fnames": {
     "line number": [
      212
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_mat_fnames": {
     "line number": [
      212
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      216,
      218,
      208,
      209,
      212
     ]
    },
    "mne.read_epochs_eeglab": {
     "line number": [
      217,
      219
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      210
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_epochs_events": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      239,
      241
     ]
    },
    "events": {
     "line number": [
      230,
      231,
      234
     ]
    },
    "len": {
     "line number": [
      235
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      225
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat": {
     "line number": [
      234,
      238,
      239,
      241
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      239,
      241
     ]
    },
    "mne.read_epochs_eeglab": {
     "line number": [
      234,
      238,
      239,
      241
     ]
    },
    "mne.write_events": {
     "line number": [
      231
     ]
    },
    "numpy.array": {
     "line number": [
      230
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      235
     ]
    },
    "os.path.join": {
     "line number": [
      229,
      233
     ]
    },
    "str": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_raw": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "len": {
     "line number": [
      67
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      58
     ]
    },
    "mne.io.eeglab.tests._utils._read_eeglab_montage": {
     "line number": [
      65
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.montage_path": {
     "line number": [
      65
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      59,
      60
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_h5": {
     "line number": [
      61
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
     "line number": [
      61
     ]
    },
    "mne.io.read_raw_eeglab": {
     "line number": [
      70,
      72,
      78
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      70
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      57
     ]
    },
    "os.path.basename": {
     "line number": [
      61
     ]
    },
    "range": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_raw_more": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      152
     ]
    },
    "RuntimeWarning": {
     "line number": [
      103,
      116,
      140
     ]
    },
    "ValueError": {
     "line number": [
      115
     ]
    },
    "copy.deepcopy": {
     "line number": [
      92
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      184
     ]
    },
    "enumerate": {
     "line number": [
      175
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      83
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.base_dir": {
     "line number": [
      101,
      128
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.pytest": {
     "line number": [
      103,
      115,
      116,
      140,
      152
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
     "line number": [
      87
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.shutil": {
     "line number": [
      101,
      128
     ]
    },
    "mne.io.read_raw_eeglab": {
     "line number": [
      104,
      117,
      130,
      141,
      153,
      165,
      199
     ]
    },
    "numpy.__version__": {
     "line number": [
      184
     ]
    },
    "numpy.array": {
     "line number": [
      205
     ]
    },
    "numpy.nan": {
     "line number": [
      170,
      170,
      170,
      205,
      205,
      205
     ]
    },
    "numpy.random.random": {
     "line number": [
      159,
      194
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      204
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      203
     ]
    },
    "numpy.zeros": {
     "line number": [
      173,
      174
     ]
    },
    "os.path.join": {
     "line number": [
      91,
      101,
      120,
      128,
      144,
      156,
      191
     ]
    },
    "range": {
     "line number": [
      176,
      202
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      87
     ]
    },
    "scipy.io.savemat": {
     "line number": [
      94,
      108,
      121,
      133,
      145,
      157,
      192
     ]
    },
    "str": {
     "line number": [
      86
     ]
    },
    "unittest.SkipTest": {
     "line number": [
      187
     ]
    },
    "zip": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_position_information": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      348
     ]
    },
    "mne.io.eeglab.tests.test_eeglab._assert_array_allclose_nan": {
     "line number": [
      377,
      380
     ]
    },
    "mne.io.eeglab.tests.test_eeglab.one_chanpos_fname": {
     "line number": [
      364,
      373
     ]
    },
    "mne.io.read_raw_eeglab": {
     "line number": [
      364,
      372
     ]
    },
    "numpy.array": {
     "line number": [
      352,
      358,
      365,
      377,
      380
     ]
    },
    "numpy.nan": {
     "line number": [
      351
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.write_events": {
  "data": {
   "shadows": "mne.write_events"
  },
  "type": "import"
 },
 "mne.io.egi": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egi": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egi.RawEGI": {
  "data": {
   "lineno": 157
  },
  "type": "class"
 },
 "mne.io.egi.egi.RawEGI.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      194
     ]
    },
    "ValueError": {
     "line number": [
      212,
      214
     ]
    },
    "_combine_triggers": {
     "line number": [
      221
     ]
    },
    "_create_chs": {
     "line number": [
      244
     ]
    },
    "_empty_info": {
     "line number": [
      229
     ]
    },
    "dict": {
     "line number": [
      223
     ]
    },
    "enumerate": {
     "line number": [
      185,
      189,
      201,
      204,
      219,
      245
     ]
    },
    "isinstance": {
     "line number": [
      209
     ]
    },
    "len": {
     "line number": [
      192,
      192,
      192,
      216,
      240
     ]
    },
    "list": {
     "line number": [
      182,
      209,
      237
     ]
    },
    "mne.io.egi.egi.RawEGI": {
     "line number": [
      254
     ]
    },
    "mne.io.egi.egi._read_events": {
     "line number": [
      172
     ]
    },
    "mne.io.egi.egi._read_header": {
     "line number": [
      170
     ]
    },
    "mne.io.egi.egi.datetime": {
     "line number": [
      230
     ]
    },
    "mne.io.egi.egi.time": {
     "line number": [
      233
     ]
    },
    "numpy.arange": {
     "line number": [
      199,
      216
     ]
    },
    "numpy.repeat": {
     "line number": [
      241
     ]
    },
    "open": {
     "line number": [
      168
     ]
    },
    "range": {
     "line number": [
      236
     ]
    },
    "super": {
     "line number": [
      254
     ]
    },
    "warn": {
     "line number": [
      193
     ]
    },
    "zip": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egi.RawEGI._read_segment_file": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "_read_segments_file": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_events": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "events": {
     "line number": [
      78,
      85,
      86
     ]
    },
    "numpy.fromfile": {
     "line number": [
      85
     ]
    },
    "numpy.zeros": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      67
     ]
    },
    "RuntimeError": {
     "line number": [
      52
     ]
    },
    "ValueError": {
     "line number": [
      27
     ]
    },
    "dict": {
     "line number": [
      33,
      55
     ]
    },
    "my_fread": {
     "line number": [
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46
     ]
    },
    "numpy.bitwise_and": {
     "line number": [
      24,
      49,
      50
     ]
    },
    "numpy.dtype": {
     "line number": [
      72
     ]
    },
    "numpy.fromfile": {
     "line number": [
      22,
      57,
      58,
      64
     ]
    },
    "numpy.int32": {
     "line number": [
      22
     ]
    },
    "numpy.uint32": {
     "line number": [
      25
     ]
    },
    "range": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_header.my_fread": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.fromfile": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egi.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.egi.egi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.egi.read_raw_egi": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "_read_raw_egi_mff": {
     "line number": [
      151
     ]
    },
    "mne.io.egi.egi.RawEGI": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.egi.egimff": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egimff.RawMff": {
  "data": {
   "lineno": 327
  },
  "type": "class"
 },
 "mne.io.egi.egimff.RawMff.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      529
     ]
    },
    "RuntimeError": {
     "line number": [
      506
     ]
    },
    "RuntimeWarning": {
     "line number": [
      370
     ]
    },
    "ValueError": {
     "line number": [
      388,
      390,
      480
     ]
    },
    "_combine_triggers": {
     "line number": [
      396
     ]
    },
    "_create_chs": {
     "line number": [
      434
     ]
    },
    "_empty_info": {
     "line number": [
      408
     ]
    },
    "_get_gains": {
     "line number": [
      345
     ]
    },
    "_read_events": {
     "line number": [
      344
     ]
    },
    "dict": {
     "line number": [
      398,
      468,
      491
     ]
    },
    "enumerate": {
     "line number": [
      361,
      365,
      377,
      380,
      393,
      436,
      444
     ]
    },
    "isinstance": {
     "line number": [
      385
     ]
    },
    "len": {
     "line number": [
      348,
      368,
      368,
      368,
      395,
      424,
      424,
      424,
      429,
      479,
      484,
      492,
      528
     ]
    },
    "list": {
     "line number": [
      358,
      385,
      420,
      491,
      491,
      491
     ]
    },
    "mne.io.egi.egimff.RawMff": {
     "line number": [
      513
     ]
    },
    "mne.io.egi.egimff._read_header": {
     "line number": [
      336
     ]
    },
    "mne.io.egi.egimff._read_locs": {
     "line number": [
      435
     ]
    },
    "mne.io.egi.egimff.datetime": {
     "line number": [
      409
     ]
    },
    "mne.io.egi.egimff.time": {
     "line number": [
      412
     ]
    },
    "numpy.arange": {
     "line number": [
      375,
      395,
      479
     ]
    },
    "numpy.array": {
     "line number": [
      340
     ]
    },
    "numpy.array_equal": {
     "line number": [
      477
     ]
    },
    "numpy.concatenate": {
     "line number": [
      423,
      428,
      478
     ]
    },
    "numpy.cumsum": {
     "line number": [
      485
     ]
    },
    "numpy.repeat": {
     "line number": [
      424,
      429
     ]
    },
    "numpy.sum": {
     "line number": [
      497,
      499
     ]
    },
    "numpy.vstack": {
     "line number": [
      401
     ]
    },
    "numpy.where": {
     "line number": [
      340,
      469,
      471,
      473
     ]
    },
    "os.path.join": {
     "line number": [
      345,
      463,
      494
     ]
    },
    "range": {
     "line number": [
      348,
      417
     ]
    },
    "super": {
     "line number": [
      513
     ]
    },
    "warn": {
     "line number": [
      369,
      501
     ]
    },
    "zip": {
     "line number": [
      398,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff.RawMff._read_segment_file": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "_block_r": {
     "line number": [
      583,
      591,
      643,
      657
     ]
    },
    "_mult_cal_one": {
     "line number": [
      688
     ]
    },
    "isinstance": {
     "line number": [
      544
     ]
    },
    "len": {
     "line number": [
      565,
      568,
      619
     ]
    },
    "numpy.arange": {
     "line number": [
      545
     ]
    },
    "numpy.cumsum": {
     "line number": [
      571,
      627
     ]
    },
    "numpy.fromfile": {
     "line number": [
      597,
      663
     ]
    },
    "numpy.newaxis": {
     "line number": [
      547,
      554
     ]
    },
    "numpy.sum": {
     "line number": [
      572,
      628
     ]
    },
    "numpy.where": {
     "line number": [
      546,
      549,
      552,
      564
     ]
    },
    "numpy.zeros": {
     "line number": [
      536
     ]
    },
    "open": {
     "line number": [
      577,
      633
     ]
    },
    "slice": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "mne.io.egi.egimff.datetime": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io.egi.egimff._FixedOffset.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "mne.io.egi.egimff.datetime": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset.dst": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "mne.io.egi.egimff.datetime": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset.tzname": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset.utcoffset": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_header": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      223
     ]
    },
    "int": {
     "line number": [
      220,
      225,
      226,
      227,
      228,
      229,
      230,
      231
     ]
    },
    "mne.io.egi.egimff._FixedOffset": {
     "line number": [
      222
     ]
    },
    "mne.io.egi.egimff._read_mff_header": {
     "line number": [
      211
     ]
    },
    "mne.io.egi.egimff.datetime": {
     "line number": [
      221
     ]
    },
    "numpy.fromfile": {
     "line number": [
      213
     ]
    },
    "numpy.int32": {
     "line number": [
      213
     ]
    },
    "open": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_locs": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "id": {
     "line number": [
      251,
      252,
      254
     ]
    },
    "len": {
     "line number": [
      252
     ]
    },
    "numpy.array": {
     "line number": [
      246
     ]
    },
    "numpy.where": {
     "line number": [
      251
     ]
    },
    "os.path.exists": {
     "line number": [
      244
     ]
    },
    "os.path.join": {
     "line number": [
      243
     ]
    },
    "xml.dom.minidom.parse": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_mff_header": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      104
     ]
    },
    "RuntimeError": {
     "line number": [
      51,
      59,
      87,
      125,
      140
     ]
    },
    "_extract": {
     "line number": [
      31
     ]
    },
    "_get_blocks": {
     "line number": [
      37,
      133
     ]
    },
    "_get_ep_info": {
     "line number": [
      38
     ]
    },
    "_get_signalfname": {
     "line number": [
      25
     ]
    },
    "all": {
     "line number": [
      53
     ]
    },
    "dict": {
     "line number": [
      39
     ]
    },
    "enumerate": {
     "line number": [
      57
     ]
    },
    "int": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      33,
      53,
      54
     ]
    },
    "list": {
     "line number": [
      88,
      89,
      110,
      111,
      113,
      142,
      142
     ]
    },
    "mne.io.egi.egimff.math": {
     "line number": [
      72
     ]
    },
    "mne.io.egi.egimff.re": {
     "line number": [
      47
     ]
    },
    "numpy.arange": {
     "line number": [
      97,
      138
     ]
    },
    "numpy.array": {
     "line number": [
      61
     ]
    },
    "numpy.array_equal": {
     "line number": [
      136
     ]
    },
    "numpy.errstate": {
     "line number": [
      75
     ]
    },
    "numpy.full": {
     "line number": [
      93
     ]
    },
    "numpy.int64": {
     "line number": [
      80
     ]
    },
    "numpy.uint64": {
     "line number": [
      61
     ]
    },
    "os.path.isfile": {
     "line number": [
      103
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      36,
      102,
      107,
      132,
      144
     ]
    },
    "xml.dom.minidom.parse": {
     "line number": [
      108,
      145
     ]
    },
    "zip": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_raw_egi_mff": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "mne.io.egi.egimff.RawMff": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.egimff.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.egi.events": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.events._combine_triggers": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      155
     ]
    },
    "numpy.any": {
     "line number": [
      163
     ]
    },
    "numpy.arange": {
     "line number": [
      160
     ]
    },
    "numpy.zeros": {
     "line number": [
      154
     ]
    },
    "zip": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events._ns": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "mne.io.egi.events._ns2py_time": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "datetime.datetime.strptime": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events._parse_xml": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "mne.io.egi.events._xml2list": {
     "line number": [
      83
     ]
    },
    "xml.etree.ElementTree.parse": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events._read_events": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      30
     ]
    },
    "events": {
     "line number": [
      29,
      32,
      33
     ]
    },
    "len": {
     "line number": [
      27
     ]
    },
    "mne.io.egi.events._read_mff_events": {
     "line number": [
      26
     ]
    },
    "numpy.zeros": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events._read_mff_events": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      71
     ]
    },
    "enumerate": {
     "line number": [
      74
     ]
    },
    "float": {
     "line number": [
      67
     ]
    },
    "glob.glob": {
     "line number": [
      47
     ]
    },
    "int": {
     "line number": [
      66
     ]
    },
    "list": {
     "line number": [
      73
     ]
    },
    "mne.io.egi.events._ns2py_time": {
     "line number": [
      54,
      60
     ]
    },
    "mne.io.egi.events._parse_xml": {
     "line number": [
      49
     ]
    },
    "numpy.fix": {
     "line number": [
      66
     ]
    },
    "os.path.basename": {
     "line number": [
      48
     ]
    },
    "os.path.join": {
     "line number": [
      47
     ]
    },
    "os.path.splitext": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events._xml2dict": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      122,
      132,
      136
     ]
    },
    "len": {
     "line number": [
      125,
      126
     ]
    },
    "mne.io.egi.events._ns": {
     "line number": [
      129,
      133,
      136,
      139
     ]
    },
    "mne.io.egi.events._xml2list": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events._xml2list": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "len": {
     "line number": [
      91
     ]
    },
    "mne.io.egi.events._ns": {
     "line number": [
      100
     ]
    },
    "mne.io.egi.events._xml2dict": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.events.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "mne.io.egi.events.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.egi.events.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.io.egi.events.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mne.io.egi.events.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.events.parse": {
  "data": {
   "shadows": "xml.etree.ElementTree.parse"
  },
  "type": "import"
 },
 "mne.io.egi.events.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "mne.io.egi.general": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.general._block_r": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      165
     ]
    },
    "dict": {
     "line number": [
      169
     ]
    },
    "int": {
     "line number": [
      158,
      160,
      167
     ]
    },
    "numpy.dtype": {
     "line number": [
      154,
      156,
      157,
      159,
      161,
      162,
      168
     ]
    },
    "numpy.fromfile": {
     "line number": [
      154,
      156,
      157,
      159,
      161,
      162,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.general._extract": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      21
     ]
    },
    "dict": {
     "line number": [
      22
     ]
    },
    "len": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      26
     ]
    },
    "xml.dom.minidom.parse": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.general._get_blocks": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      111,
      114,
      117
     ]
    },
    "any": {
     "line number": [
      110,
      113
     ]
    },
    "dict": {
     "line number": [
      119
     ]
    },
    "len": {
     "line number": [
      116
     ]
    },
    "mne.io.egi.general._block_r": {
     "line number": [
      93
     ]
    },
    "mne.io.egi.general.os": {
     "line number": [
      73
     ]
    },
    "numpy.array": {
     "line number": [
      118
     ]
    },
    "open": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.general._get_ep_info": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "int": {
     "line number": [
      55,
      57,
      58,
      60
     ]
    },
    "list": {
     "line number": [
      53
     ]
    },
    "xml.dom.minidom.parse": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.general._get_gains": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      35
     ]
    },
    "mne.io.egi.general._extract": {
     "line number": [
      39,
      42
     ]
    },
    "numpy.asarray": {
     "line number": [
      40,
      43
     ]
    },
    "numpy.float64": {
     "line number": [
      40,
      43
     ]
    },
    "xml.dom.minidom.parse": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.general._get_signalfname": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      146
     ]
    },
    "_pl": {
     "line number": [
      148
     ]
    },
    "len": {
     "line number": [
      138,
      140,
      148
     ]
    },
    "list": {
     "line number": [
      128,
      131
     ]
    },
    "mne.io.egi.general.os": {
     "line number": [
      127,
      136
     ]
    },
    "mne.io.egi.general.re": {
     "line number": [
      133
     ]
    },
    "xml.dom.minidom.parse": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.general.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.general.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.egi.general.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "mne.io.egi.general.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.egi.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.tests.test_egi": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      26
     ]
    },
    "mne.io.egi.tests.test_egi.base_dir": {
     "line number": [
      24,
      25
     ]
    },
    "mne.io.egi.tests.test_egi.egi_path": {
     "line number": [
      27,
      28,
      29,
      30,
      31
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      291
     ]
    },
    "os.path.abspath": {
     "line number": [
      23
     ]
    },
    "os.path.dirname": {
     "line number": [
      23
     ]
    },
    "os.path.join": {
     "line number": [
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.egi.tests.test_egi._combine_triggers": {
  "data": {
   "shadows": "mne.io.egi.egi._combine_triggers"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.base_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.egi_eprime_pause_events": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_eprime_pause_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_eprime_pause_skips": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_mff_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_mff_pns_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_pause_events": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_pause_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_pause_skips": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_pause_w1337_events": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_pause_w1337_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_pause_w1337_skips": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_txt_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.read_raw_egi": {
  "data": {
   "shadows": "mne.io.read_raw_egi"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.test_egi_mff_pause": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      59
     ]
    },
    "ValueError": {
     "line number": [
      69
     ]
    },
    "enumerate": {
     "line number": [
      83
     ]
    },
    "events": {
     "line number": [
      72,
      77,
      77
     ]
    },
    "len": {
     "line number": [
      65,
      65,
      82
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      51
     ]
    },
    "mne.find_events": {
     "line number": [
      70,
      72
     ]
    },
    "mne.io.egi.tests.test_egi.egi_eprime_pause_events": {
     "line number": [
      54
     ]
    },
    "mne.io.egi.tests.test_egi.egi_eprime_pause_fname": {
     "line number": [
      54
     ]
    },
    "mne.io.egi.tests.test_egi.egi_eprime_pause_skips": {
     "line number": [
      54
     ]
    },
    "mne.io.egi.tests.test_egi.egi_pause_events": {
     "line number": [
      53
     ]
    },
    "mne.io.egi.tests.test_egi.egi_pause_fname": {
     "line number": [
      53
     ]
    },
    "mne.io.egi.tests.test_egi.egi_pause_skips": {
     "line number": [
      53
     ]
    },
    "mne.io.egi.tests.test_egi.egi_pause_w1337_events": {
     "line number": [
      55
     ]
    },
    "mne.io.egi.tests.test_egi.egi_pause_w1337_fname": {
     "line number": [
      55
     ]
    },
    "mne.io.egi.tests.test_egi.egi_pause_w1337_skips": {
     "line number": [
      55
     ]
    },
    "mne.io.egi.tests.test_egi.pytest": {
     "line number": [
      59,
      69,
      52
     ]
    },
    "mne.io.read_raw_egi": {
     "line number": [
      60
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      60
     ]
    },
    "mne.pick_types": {
     "line number": [
      81
     ]
    },
    "numpy.arange": {
     "line number": [
      82
     ]
    },
    "numpy.array": {
     "line number": [
      74
     ]
    },
    "numpy.array_equal": {
     "line number": [
      91
     ]
    },
    "numpy.floor": {
     "line number": [
      74
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      82
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      76,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      142
     ]
    },
    "ValueError": {
     "line number": [
      176,
      178
     ]
    },
    "enumerate": {
     "line number": [
      180
     ]
    },
    "events": {
     "line number": [
      163,
      164,
      165,
      166,
      167
     ]
    },
    "len": {
     "line number": [
      158,
      160,
      164
     ]
    },
    "mne.find_events": {
     "line number": [
      163
     ]
    },
    "mne.io.egi.egi._combine_triggers": {
     "line number": [
      173
     ]
    },
    "mne.io.egi.tests.test_egi.egi_fname": {
     "line number": [
      143,
      150,
      176,
      178
     ]
    },
    "mne.io.egi.tests.test_egi.egi_txt_fname": {
     "line number": [
      136
     ]
    },
    "mne.io.egi.tests.test_egi.pytest": {
     "line number": [
      142,
      176,
      178
     ]
    },
    "mne.io.read_raw_egi": {
     "line number": [
      143,
      150,
      176,
      178
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      150
     ]
    },
    "mne.pick_types": {
     "line number": [
      159
     ]
    },
    "numpy.array": {
     "line number": [
      168,
      171
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      137
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      146,
      147
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      174
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      155,
      158,
      160,
      161,
      164,
      165
     ]
    },
    "numpy.unique": {
     "line number": [
      165,
      166,
      167,
      174,
      174
     ]
    },
    "open": {
     "line number": [
      136
     ]
    },
    "repr": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_crop_no_preload": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      281
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      278
     ]
    },
    "mne.io.read_raw_egi": {
     "line number": [
      282,
      285
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      288
     ]
    },
    "os.path.join": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_mff": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      124,
      126
     ]
    },
    "enumerate": {
     "line number": [
      128
     ]
    },
    "events": {
     "line number": [
      118,
      119,
      120,
      121,
      122
     ]
    },
    "len": {
     "line number": [
      113,
      115,
      119
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      99
     ]
    },
    "mne.find_events": {
     "line number": [
      118
     ]
    },
    "mne.io.egi.tests.test_egi.egi_mff_fname": {
     "line number": [
      102,
      105,
      124,
      126
     ]
    },
    "mne.io.egi.tests.test_egi.pytest": {
     "line number": [
      124,
      126
     ]
    },
    "mne.io.read_raw_egi": {
     "line number": [
      102,
      105,
      124,
      126
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      105
     ]
    },
    "mne.pick_types": {
     "line number": [
      114
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      111,
      113,
      115,
      116,
      119,
      120
     ]
    },
    "numpy.unique": {
     "line number": [
      120,
      121,
      122
     ]
    },
    "repr": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_pns_mff": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      233
     ]
    },
    "len": {
     "line number": [
      192
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      217
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      185
     ]
    },
    "mne.io.egi.tests.test_egi.egi_mff_pns_fname": {
     "line number": [
      188,
      201,
      229
     ]
    },
    "mne.io.egi.tests.test_egi.os": {
     "line number": [
      231,
      232
     ]
    },
    "mne.io.egi.tests.test_egi.pytest": {
     "line number": [
      233
     ]
    },
    "mne.io.egi.tests.test_egi.shutil": {
     "line number": [
      229
     ]
    },
    "mne.io.read_raw_egi": {
     "line number": [
      188,
      201,
      230,
      234
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      201
     ]
    },
    "mne.pick_types": {
     "line number": [
      191
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      225
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      192,
      206
     ]
    },
    "os.path.join": {
     "line number": [
      217,
      231,
      232
     ]
    },
    "print": {
     "line number": [
      220
     ]
    },
    "repr": {
     "line number": [
      190
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      218
     ]
    },
    "str": {
     "line number": [
      228
     ]
    },
    "zip": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_pns_mff_bug": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      242
     ]
    },
    "len": {
     "line number": [
      245
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      241,
      248
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      237
     ]
    },
    "mne.io.egi.tests.test_egi.pytest": {
     "line number": [
      242,
      238
     ]
    },
    "mne.io.read_raw_egi": {
     "line number": [
      243
     ]
    },
    "mne.pick_types": {
     "line number": [
      250
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      246,
      247
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      275
     ]
    },
    "os.path.join": {
     "line number": [
      241,
      248
     ]
    },
    "print": {
     "line number": [
      269
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      249
     ]
    },
    "zip": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eximia": {
  "data": {},
  "type": "module"
 },
 "mne.io.eximia.eximia": {
  "data": {},
  "type": "module"
 },
 "mne.io.eximia.eximia.RawEximia": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "mne.io.eximia.eximia.RawEximia.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "_file_size": {
     "line number": [
      77
     ]
    },
    "create_info": {
     "line number": [
      76
     ]
    },
    "divmod": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      72,
      72,
      75
     ]
    },
    "mne.io.eximia.eximia.RawEximia": {
     "line number": [
      84
     ]
    },
    "os.path.basename": {
     "line number": [
      55
     ]
    },
    "super": {
     "line number": [
      84
     ]
    },
    "warn": {
     "line number": [
      80
     ]
    },
    "zip": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eximia.eximia.RawEximia._read_segment_file": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "_read_segments_file": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eximia.eximia.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eximia.eximia.read_raw_eximia": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "mne.io.eximia.eximia.RawEximia": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.eximia.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.eximia.tests.test_eximia": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.eximia.tests.test_eximia._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.read_raw_eximia": {
  "data": {
   "shadows": "mne.io.read_raw_eximia"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.test_eximia_nxe": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "len": {
     "line number": [
      41
     ]
    },
    "list": {
     "line number": [
      31,
      36
     ]
    },
    "map": {
     "line number": [
      32,
      37
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      18,
      24
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      15
     ]
    },
    "mne.io.read_raw_eximia": {
     "line number": [
      19,
      21
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      21
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      44
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      24
     ]
    },
    "range": {
     "line number": [
      41
     ]
    },
    "repr": {
     "line number": [
      20
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.fieldtrip": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.fieldtrip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.fieldtrip.read_epochs_fieldtrip": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "EpochsArray": {
     "line number": [
      129
     ]
    },
    "_create_event_metadata": {
     "line number": [
      124
     ]
    },
    "_create_events": {
     "line number": [
      122
     ]
    },
    "_create_info": {
     "line number": [
      120
     ]
    },
    "_set_tmin": {
     "line number": [
      127
     ]
    },
    "_validate_ft_struct": {
     "line number": [
      118
     ]
    },
    "events": {
     "line number": [
      122,
      123,
      130
     ]
    },
    "numpy.array": {
     "line number": [
      121
     ]
    },
    "read_mat": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.fieldtrip.read_evoked_fieldtrip": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      178
     ]
    },
    "_create_info": {
     "line number": [
      175
     ]
    },
    "_validate_ft_struct": {
     "line number": [
      173
     ]
    },
    "read_mat": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.fieldtrip.read_raw_fieldtrip": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "RawArray": {
     "line number": [
      70
     ]
    },
    "RuntimeError": {
     "line number": [
      67
     ]
    },
    "_create_info": {
     "line number": [
      57
     ]
    },
    "_validate_ft_struct": {
     "line number": [
      55
     ]
    },
    "numpy.array": {
     "line number": [
      58
     ]
    },
    "numpy.newaxis": {
     "line number": [
      64
     ]
    },
    "numpy.squeeze": {
     "line number": [
      61
     ]
    },
    "read_mat": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.tests.helpers": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      28,
      29,
      31
     ]
    },
    "mne.io.fieldtrip.tests.helpers.mne": {
     "line number": [
      27,
      28,
      29,
      31,
      35,
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.fieldtrip.tests.helpers._has_h5py": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers._remove_ignored_ch_fields": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers.ch_ignore_fields": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers._remove_ignored_info_fields": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers._remove_ignored_ch_fields": {
     "line number": [
      78
     ]
    },
    "mne.io.fieldtrip.tests.helpers.info_ignored_fields": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers._remove_long_info_fields": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers.info_long_fields": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.assert_deep_almost_equal": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      255,
      264
     ]
    },
    "AttributeError": {
     "line number": [
      262
     ]
    },
    "complex": {
     "line number": [
      235
     ]
    },
    "dict": {
     "line number": [
      248
     ]
    },
    "float": {
     "line number": [
      235
     ]
    },
    "int": {
     "line number": [
      235
     ]
    },
    "isinstance": {
     "line number": [
      228,
      231,
      235,
      237,
      239,
      248
     ]
    },
    "len": {
     "line number": [
      243,
      243,
      244
     ]
    },
    "list": {
     "line number": [
      237,
      240,
      241
     ]
    },
    "mne.io.fieldtrip.tests.helpers.types": {
     "line number": [
      238,
      239
     ]
    },
    "numpy.ndarray": {
     "line number": [
      228,
      231,
      237
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      236
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      243,
      249,
      254
     ]
    },
    "range": {
     "line number": [
      244
     ]
    },
    "repr": {
     "line number": [
      247,
      252
     ]
    },
    "reversed": {
     "line number": [
      258
     ]
    },
    "set": {
     "line number": [
      249,
      249
     ]
    },
    "tuple": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.assert_warning_in_record": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "str": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.ch_ignore_fields": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.check_data": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers.system_decimal_accuracy_dict": {
     "line number": [
      205,
      206
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.check_info_fields": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers._remove_ignored_info_fields": {
     "line number": [
      192,
      193
     ]
    },
    "mne.io.fieldtrip.tests.helpers._remove_long_info_fields": {
     "line number": [
      196,
      197
     ]
    },
    "mne.io.fieldtrip.tests.helpers.assert_deep_almost_equal": {
     "line number": [
      199
     ]
    },
    "mne.io.fieldtrip.tests.helpers.info_long_fields": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.drop_extra_chans_dict": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.get_cfg_local": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "mne.externals.pymatreader.read_mat": {
     "line number": [
      92
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      92
     ]
    },
    "mne.io.fieldtrip.tests.helpers.os": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_data_paths": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers.mne": {
     "line number": [
      83
     ]
    },
    "mne.io.fieldtrip.tests.helpers.os": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_epochs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "events": {
     "line number": [
      154,
      155,
      155,
      157,
      165,
      167
     ]
    },
    "id": {
     "line number": [
      165,
      165,
      165
     ]
    },
    "int": {
     "line number": [
      163
     ]
    },
    "isinstance": {
     "line number": [
      160
     ]
    },
    "list": {
     "line number": [
      161
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_cfg_local": {
     "line number": [
      145
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_data": {
     "line number": [
      146
     ]
    },
    "mne.io.fieldtrip.tests.helpers.mne": {
     "line number": [
      154,
      157,
      167
     ]
    },
    "numpy.ndarray": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_evoked": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "len": {
     "line number": [
      179
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_epochs": {
     "line number": [
      177
     ]
    },
    "numpy.arange": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_raw_data": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "min": {
     "line number": [
      120
     ]
    },
    "mne.io.fieldtrip.tests.helpers.drop_extra_chans_dict": {
     "line number": [
      137,
      138
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_cfg_local": {
     "line number": [
      113
     ]
    },
    "mne.io.fieldtrip.tests.helpers.ignore_channels_dict": {
     "line number": [
      134,
      135
     ]
    },
    "mne.io.fieldtrip.tests.helpers.mne": {
     "line number": [
      115
     ]
    },
    "mne.io.fieldtrip.tests.helpers.os": {
     "line number": [
      115
     ]
    },
    "mne.io.fieldtrip.tests.helpers.system_to_reader_fn_dict": {
     "line number": [
      117
     ]
    },
    "numpy.max": {
     "line number": [
      120
     ]
    },
    "reader_function": {
     "line number": [
      117,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_raw_info": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "mne.io.fieldtrip.tests.helpers.get_cfg_local": {
     "line number": [
      100
     ]
    },
    "mne.io.fieldtrip.tests.helpers.mne": {
     "line number": [
      102
     ]
    },
    "mne.io.fieldtrip.tests.helpers.os": {
     "line number": [
      102
     ]
    },
    "mne.io.fieldtrip.tests.helpers.system_to_reader_fn_dict": {
     "line number": [
      104
     ]
    },
    "reader_function": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.ignore_channels_dict": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.info_ignored_fields": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.info_long_fields": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.pandas_not_found_warning_msg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.system_decimal_accuracy_dict": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.system_to_reader_fn_dict": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip": {
  "data": {
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      37
     ]
    },
    "list": {
     "line number": [
      31,
      33
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_epochs": {
     "line number": [
      33
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_raw": {
     "line number": [
      31
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_versions": {
     "line number": [
      31,
      34
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.itertools": {
     "line number": [
      31,
      33
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info": {
     "line number": [
      32,
      35
     ]
    },
    "mne.io.fieldtrip.utils.NOINFO_WARNING": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.NOINFO_WARNING": {
  "data": {
   "shadows": "mne.io.fieldtrip.utils.NOINFO_WARNING"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip._check_pandas_installed": {
  "data": {
   "shadows": "mne.utils._check_pandas_installed"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip._create_events": {
  "data": {
   "shadows": "mne.io.fieldtrip.utils._create_events"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip._has_h5py": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers._has_h5py"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_epochs": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_raw": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_epochs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_raw": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_versions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.assert_warning_in_record": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.assert_warning_in_record"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.check_data": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.check_data"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.check_info_fields": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.check_info_fields"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_data_paths": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_data_paths"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_epochs": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_epochs"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_evoked": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_evoked"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_raw_data": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_raw_data"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_raw_info": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_raw_info"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.pandas_not_found_warning_msg": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.pandas_not_found_warning_msg"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_create_events": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      227,
      234
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      213
     ]
    },
    "mne.externals.pymatreader.read_mat": {
     "line number": [
      220
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      218
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.copy": {
     "line number": [
      222
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      227,
      234
     ]
    },
    "mne.io.fieldtrip.utils._create_events": {
     "line number": [
      228,
      231,
      235
     ]
    },
    "numpy.all": {
     "line number": [
      232
     ]
    },
    "numpy.arange": {
     "line number": [
      230
     ]
    },
    "numpy.array": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_invalid_trialinfocolumn": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      206,
      209
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      199
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      202
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      203
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      207,
      210
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      206,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_load_epoched_as_raw": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      195
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      188
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      191
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      192
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      196
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_one_channel_elec_bug": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      238
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_versions": {
     "line number": [
      239
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      243,
      247
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning": {
     "line number": [
      246
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      246,
      239
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_raw": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      166
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      144
     ]
    },
    "mne.io.fieldtrip.tests.helpers._has_h5py": {
     "line number": [
      165
     ]
    },
    "mne.io.fieldtrip.tests.helpers.check_data": {
     "line number": [
      180
     ]
    },
    "mne.io.fieldtrip.tests.helpers.check_info_fields": {
     "line number": [
      185
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      153
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_data": {
     "line number": [
      154
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      156
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_raw": {
     "line number": [
      149
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      167,
      170
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning": {
     "line number": [
      160
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      166,
      169,
      147,
      148,
      149
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info": {
     "line number": [
      155,
      172,
      176,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_read_epochs": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      106,
      115
     ]
    },
    "RuntimeWarning": {
     "line number": [
      140
     ]
    },
    "isinstance": {
     "line number": [
      111
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      77
     ]
    },
    "mne.io.fieldtrip.tests.helpers._has_h5py": {
     "line number": [
      105,
      114
     ]
    },
    "mne.io.fieldtrip.tests.helpers.assert_warning_in_record": {
     "line number": [
      120,
      122
     ]
    },
    "mne.io.fieldtrip.tests.helpers.check_data": {
     "line number": [
      127
     ]
    },
    "mne.io.fieldtrip.tests.helpers.check_info_fields": {
     "line number": [
      128
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      93
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_epochs": {
     "line number": [
      94
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      96
     ]
    },
    "mne.io.fieldtrip.tests.helpers.pandas_not_found_warning_msg": {
     "line number": [
      120
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_epochs": {
     "line number": [
      83
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      107,
      110,
      116,
      118,
      139,
      141
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning": {
     "line number": [
      100
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      106,
      109,
      113,
      115,
      140,
      80,
      81,
      82,
      87
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info": {
     "line number": [
      95,
      128
     ]
    },
    "mne.utils._check_pandas_installed": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_read_epochs.modify_mat": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "mne.externals.pymatreader.read_mat": {
     "line number": [
      134
     ]
    },
    "numpy.repeat": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_read_evoked": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      63
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      42
     ]
    },
    "mne.io.fieldtrip.tests.helpers._has_h5py": {
     "line number": [
      62
     ]
    },
    "mne.io.fieldtrip.tests.helpers.check_data": {
     "line number": [
      73
     ]
    },
    "mne.io.fieldtrip.tests.helpers.check_info_fields": {
     "line number": [
      74
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      51
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_evoked": {
     "line number": [
      52
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      54
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_epochs": {
     "line number": [
      48
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      64,
      68
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning": {
     "line number": [
      58
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      63,
      67,
      41,
      45,
      46,
      47
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info": {
     "line number": [
      53,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_throw_error_on_non_uniform_time_field": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      302
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      293
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      298,
      304
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      302,
      294,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_throw_error_when_importing_old_ft_version_data": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      315
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      307
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      311,
      324
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      315,
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_throw_exception_on_cellarray": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      265
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      250
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      260
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      263
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.all_versions": {
     "line number": [
      255
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      268,
      270,
      272
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      265,
      253,
      254,
      255,
      256
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      257
     ]
    },
    "type": {
     "line number": [
      261,
      267,
      269,
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_with_missing_channels": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      284
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      275
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_data_paths": {
     "line number": [
      279
     ]
    },
    "mne.io.fieldtrip.tests.helpers.get_raw_info": {
     "line number": [
      280
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
     "line number": [
      285,
      287,
      289
     ]
    },
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.use_info": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.utils.NOINFO_WARNING": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils._create_event_metadata": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "_check_pandas_installed": {
     "line number": [
      266
     ]
    },
    "warn": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_events": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      243,
      250
     ]
    },
    "events": {
     "line number": [
      258,
      261
     ]
    },
    "len": {
     "line number": [
      240,
      253
     ]
    },
    "numpy.array": {
     "line number": [
      258
     ]
    },
    "numpy.vstack": {
     "line number": [
      258
     ]
    },
    "numpy.zeros": {
     "line number": [
      253
     ]
    },
    "range": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_info": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "create_info": {
     "line number": [
      78
     ]
    },
    "mne.io.fieldtrip.utils.NOINFO_WARNING": {
     "line number": [
      42
     ]
    },
    "mne.io.fieldtrip.utils._create_info_chs": {
     "line number": [
      80
     ]
    },
    "mne.io.fieldtrip.utils._create_montage": {
     "line number": [
      76
     ]
    },
    "mne.io.fieldtrip.utils._remove_missing_channels_from_trial": {
     "line number": [
      61
     ]
    },
    "mne.io.fieldtrip.utils._set_sfreq": {
     "line number": [
      44
     ]
    },
    "numpy.delete": {
     "line number": [
      68
     ]
    },
    "pick_info": {
     "line number": [
      74
     ]
    },
    "set": {
     "line number": [
      48,
      48
     ]
    },
    "str": {
     "line number": [
      53
     ]
    },
    "warn": {
     "line number": [
      42,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_info_chs": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      116,
      121
     ]
    },
    "dict": {
     "line number": [
      108
     ]
    },
    "enumerate": {
     "line number": [
      130
     ]
    },
    "list": {
     "line number": [
      129
     ]
    },
    "mne.io.fieldtrip.utils._process_channel_eeg": {
     "line number": [
      136
     ]
    },
    "mne.io.fieldtrip.utils._process_channel_meg": {
     "line number": [
      139
     ]
    },
    "numpy.array": {
     "line number": [
      112
     ]
    },
    "warn": {
     "line number": [
      125,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_montage": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      180
     ]
    },
    "RuntimeError": {
     "line number": [
      181
     ]
    },
    "dict": {
     "line number": [
      193
     ]
    },
    "isinstance": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      190,
      190,
      191,
      191
     ]
    },
    "list": {
     "line number": [
      164,
      164,
      172
     ]
    },
    "make_dig_montage": {
     "line number": [
      192
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      174
     ]
    },
    "numpy.in1d": {
     "line number": [
      169
     ]
    },
    "numpy.where": {
     "line number": [
      169
     ]
    },
    "zip": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._process_channel_eeg": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "mne.io.fieldtrip.utils._unit_dict": {
     "line number": [
      299,
      303
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      293
     ]
    },
    "numpy.hstack": {
     "line number": [
      300
     ]
    },
    "numpy.log10": {
     "line number": [
      303
     ]
    },
    "numpy.squeeze": {
     "line number": [
      295
     ]
    },
    "numpy.where": {
     "line number": [
      294
     ]
    },
    "numpy.zeros": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._process_channel_meg": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      349
     ]
    },
    "RuntimeError": {
     "line number": [
      373
     ]
    },
    "mne.io.fieldtrip.utils._unit_dict": {
     "line number": [
      332,
      338,
      376
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      326
     ]
    },
    "numpy.average": {
     "line number": [
      344
     ]
    },
    "numpy.eye": {
     "line number": [
      350
     ]
    },
    "numpy.hstack": {
     "line number": [
      355
     ]
    },
    "numpy.log10": {
     "line number": [
      376
     ]
    },
    "numpy.squeeze": {
     "line number": [
      331,
      346
     ]
    },
    "numpy.where": {
     "line number": [
      327,
      336
     ]
    },
    "rotation3d_align_z_axis": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._remove_missing_channels_from_trial": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "isinstance": {
     "line number": [
      88,
      93
     ]
    },
    "len": {
     "line number": [
      89
     ]
    },
    "list": {
     "line number": [
      88
     ]
    },
    "numpy.delete": {
     "line number": [
      95
     ]
    },
    "numpy.ndarray": {
     "line number": [
      93
     ]
    },
    "range": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._set_sfreq": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      204,
      207
     ]
    },
    "TypeError": {
     "line number": [
      214
     ]
    },
    "ValueError": {
     "line number": [
      208
     ]
    },
    "float": {
     "line number": [
      210,
      210,
      213,
      217
     ]
    },
    "warn": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._set_tmin": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      229
     ]
    },
    "all": {
     "line number": [
      224
     ]
    },
    "enumerate": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._supported_megs": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils._unit_dict": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils._validate_ft_struct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      36
     ]
    },
    "isinstance": {
     "line number": [
      35
     ]
    },
    "list": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fiff": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.tests.test_raw_fiff": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      35
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.base_dir": {
     "line number": [
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.data_dir": {
     "line number": [
      37
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.testing_path": {
     "line number": [
      36,
      38,
      39
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      1706
     ]
    },
    "os.path.dirname": {
     "line number": [
      41
     ]
    },
    "os.path.join": {
     "line number": [
      36,
      37,
      38,
      39,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.fiff.tests.test_raw_fiff.Annotations": {
  "data": {
   "shadows": "mne.annotations.Annotations"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._compare_combo": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._err": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff._no_write_file_name": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "mne.io.constants.FIFF.FIFF_REF_FILE_NAME": {
     "line number": [
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff._read_tag_header": {
  "data": {
   "shadows": "mne.io.tag._read_tag_header"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._test_concat": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_concat"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_and_remove_boundary_annot": {
  "data": {
   "shadows": "mne.utils.assert_and_remove_boundary_annot"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_object_equal": {
  "data": {
   "shadows": "mne.utils.assert_object_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.bad_file_works": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.bad_file_wrong": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.base": {
  "data": {
   "shadows": "mne.io.base"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.base_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.concatenate_events": {
  "data": {
   "shadows": "mne.concatenate_events"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.concatenate_raws": {
  "data": {
   "shadows": "mne.io.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.ctf_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.data_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.fif_bad_marked_fname": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.hp_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.ms_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.skip_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_acq_skip": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      101
     ]
    },
    "dict": {
     "line number": [
      75
     ]
    },
    "int": {
     "line number": [
      90
     ]
    },
    "len": {
     "line number": [
      58,
      60,
      100
     ]
    },
    "list": {
     "line number": [
      69,
      71
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      53
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      78
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      98,
      101
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.skip_fname": {
     "line number": [
      56,
      88
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      56,
      92
     ]
    },
    "numpy.concatenate": {
     "line number": [
      69,
      72,
      80
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      61,
      62,
      70,
      72,
      80,
      94,
      95
     ]
    },
    "os.path.getsize": {
     "line number": [
      88,
      89
     ]
    },
    "zip": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_add_channels": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1335
     ]
    },
    "RuntimeError": {
     "line number": [
      1333,
      1334
     ]
    },
    "TypeError": {
     "line number": [
      1337
     ]
    },
    "ValueError": {
     "line number": [
      1310,
      1336
     ]
    },
    "all": {
     "line number": [
      1293,
      1301
     ]
    },
    "list": {
     "line number": [
      1294,
      1294
     ]
    },
    "mne.create_info": {
     "line number": [
      1304
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1307
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1310,
      1333,
      1334,
      1335,
      1336,
      1337
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1285,
      1286
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1285,
      1286
     ]
    },
    "mne.utils.assert_object_equal": {
     "line number": [
      1314
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      1284
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1324
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1299,
      1300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_annotation_crop": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1392
     ]
    },
    "mne.annotations.Annotations": {
     "line number": [
      1374,
      1391
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1371
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      1380
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1375
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1392
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1375,
      1400
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      1389
     ]
    },
    "mne.utils.assert_and_remove_boundary_annot": {
     "line number": [
      1381
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1394
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1385,
      1386
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_bad_acq": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": {
    "mne.datasets.testing._pytest_param": {
     "line number": [
      1690,
      1691
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1690
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.ms_fname": {
     "line number": [
      1691
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1688
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1689
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1696
     ]
    },
    "mne.io.tag._read_tag_header": {
     "line number": [
      1700
     ]
    },
    "open": {
     "line number": [
      1697
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1445
     ]
    },
    "ValueError": {
     "line number": [
      1441
     ]
    },
    "dict": {
     "line number": [
      1447,
      1496
     ]
    },
    "mne.compute_proj_raw": {
     "line number": [
      1443
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname": {
     "line number": [
      1414
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1441,
      1445
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1414,
      1478,
      1499
     ]
    },
    "numpy.abs": {
     "line number": [
      1434,
      1440,
      1452,
      1471
     ]
    },
    "numpy.mean": {
     "line number": [
      1434,
      1440,
      1452,
      1471
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1453,
      1457,
      1460,
      1472,
      1482,
      1486,
      1503,
      1507
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1426,
      1427,
      1433,
      1439,
      1451,
      1470,
      1481,
      1485,
      1502,
      1506
     ]
    },
    "range": {
     "line number": [
      1419
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw_mne": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": {
    "compensate_mne": {
     "line number": [
      1523
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname": {
     "line number": [
      1521,
      1523
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1521
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      1510
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1524,
      1531
     ]
    },
    "zip": {
     "line number": [
      1526
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw_mne.compensate_mne": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": {
    "mne.io.read_raw_fif": {
     "line number": [
      1518
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      1517
     ]
    },
    "str": {
     "line number": [
      1516
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_concat": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      137
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      132
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      132,
      137
     ]
    },
    "mne.io.tests.test_raw._test_concat": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_copy_append": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      194
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      197,
      198
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      197,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_crop": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1047
     ]
    },
    "enumerate": {
     "line number": [
      1008,
      1027
     ]
    },
    "len": {
     "line number": [
      1007,
      1010,
      1026
     ]
    },
    "mne.create_info": {
     "line number": [
      1040
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      991
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1041
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      995,
      1015,
      1030
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      996,
      996
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1047
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      995
     ]
    },
    "numpy.arange": {
     "line number": [
      1002,
      1020
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1004,
      1021
     ]
    },
    "numpy.r_": {
     "line number": [
      1002
     ]
    },
    "numpy.round": {
     "line number": [
      1002,
      1020
     ]
    },
    "numpy.sort": {
     "line number": [
      1003
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1011
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1018,
      1036
     ]
    },
    "numpy.zeros": {
     "line number": [
      1039
     ]
    },
    "range": {
     "line number": [
      1042
     ]
    },
    "zip": {
     "line number": [
      1008,
      1027
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_drop_channels_mixin": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1557
     ]
    },
    "len": {
     "line number": [
      1545,
      1549,
      1549,
      1550,
      1555,
      1560
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1534
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1537,
      1554
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1557
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1537,
      1554
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_equalize_channels": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1587
     ]
    },
    "mne.equalize_channels": {
     "line number": [
      1597
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1590
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1590
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fif_gz_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_file_like": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1671
     ]
    },
    "ValueError": {
     "line number": [
      1662
     ]
    },
    "dict": {
     "line number": [
      1668
     ]
    },
    "io.BytesIO": {
     "line number": [
      1659
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1662,
      1671,
      1644,
      1645,
      1646
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1651,
      1655
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1651,
      1663,
      1672,
      1674
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      1672,
      1674
     ]
    },
    "open": {
     "line number": [
      1658
     ]
    },
    "os.path.isfile": {
     "line number": [
      1652,
      1653
     ]
    },
    "str": {
     "line number": [
      1653,
      1656,
      1657,
      1658,
      1646
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_filter": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      865,
      880,
      885,
      886,
      948
     ]
    },
    "mne.create_info": {
     "line number": [
      935
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      854
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      934
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      857
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      853
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      857
     ]
    },
    "mne.pick_types": {
     "line number": [
      861
     ]
    },
    "numpy.arange": {
     "line number": [
      950,
      960
     ]
    },
    "numpy.may_share_memory": {
     "line number": [
      906,
      907
     ]
    },
    "numpy.random.randn": {
     "line number": [
      934
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      881,
      882,
      883
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      895,
      922,
      931
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      900,
      902,
      912
     ]
    },
    "print": {
     "line number": [
      938
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_filter_picks": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      988
     ]
    },
    "len": {
     "line number": [
      971
     ]
    },
    "mne.create_info": {
     "line number": [
      970
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      971
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      988
     ]
    },
    "numpy.zeros": {
     "line number": [
      971
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fix_types": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "len": {
     "line number": [
      111
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_VV_MAG_T2": {
     "line number": [
      116
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_VV_MAG_T3.all": {
     "line number": [
      126
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.ctf_fname": {
     "line number": [
      108
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname": {
     "line number": [
      107
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      107
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      109
     ]
    },
    "mne.pick_types": {
     "line number": [
      110
     ]
    },
    "numpy.arange": {
     "line number": [
      111
     ]
    },
    "numpy.array": {
     "line number": [
      117,
      119
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      111
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      121,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_getitem": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      731,
      733
     ]
    },
    "len": {
     "line number": [
      730,
      730,
      732
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      711
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      715
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      731,
      733
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      715
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      718,
      719,
      722,
      723,
      725,
      726,
      727,
      728
     ]
    },
    "slice": {
     "line number": [
      732,
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_hash_raw": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      144
     ]
    },
    "hash": {
     "line number": [
      152,
      152,
      157,
      157
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      140
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      143,
      145,
      150
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pickle": {
     "line number": [
      154,
      154
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      144
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      143,
      145,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_hilbert": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1216
     ]
    },
    "int": {
     "line number": [
      1211
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1191
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1194
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1216
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1194
     ]
    },
    "mne.pick_types": {
     "line number": [
      1195
     ]
    },
    "numpy.abs": {
     "line number": [
      1219
     ]
    },
    "numpy.ceil": {
     "line number": [
      1211
     ]
    },
    "numpy.log2": {
     "line number": [
      1211
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1214,
      1220
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_complex": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      696
     ]
    },
    "enumerate": {
     "line number": [
      689
     ]
    },
    "functools.partial": {
     "line number": [
      682
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      676
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      683
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      696
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      682,
      700,
      705
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      682
     ]
    },
    "numpy.arange": {
     "line number": [
      684
     ]
    },
    "numpy.array": {
     "line number": [
      690,
      694
     ]
    },
    "numpy.complex128": {
     "line number": [
      680
     ]
    },
    "numpy.complex64": {
     "line number": [
      680
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      679
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      703,
      708
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_raw": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      560
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      566,
      568,
      577
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      559
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      566,
      572,
      577,
      586
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      563
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      587,
      591
     ]
    },
    "os.path.basename": {
     "line number": [
      568
     ]
    },
    "repr": {
     "line number": [
      567,
      568
     ]
    },
    "slice": {
     "line number": [
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_raw_additional": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      670,
      672
     ]
    },
    "len": {
     "line number": [
      633
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE": {
     "line number": [
      654
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      658
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MNE_COORD_CTF_HEAD": {
     "line number": [
      656,
      660
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.ctf_fname": {
     "line number": [
      597
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      632,
      632,
      665,
      665
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      670,
      672,
      594
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      595
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_gz_fname": {
     "line number": [
      596
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      601,
      623,
      635,
      673
     ]
    },
    "mne.pick_channels": {
     "line number": [
      625,
      637
     ]
    },
    "mne.pick_types": {
     "line number": [
      616
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      640,
      641,
      642,
      666
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      649
     ]
    },
    "range": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_load_bad_channels": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      545
     ]
    },
    "ValueError": {
     "line number": [
      542
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.bad_file_works": {
     "line number": [
      533
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.bad_file_wrong": {
     "line number": [
      542,
      546
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_bad_marked_fname": {
     "line number": [
      526
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      542,
      545
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      528
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      526,
      528,
      536,
      549,
      555
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_maxshield": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      163
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      160
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.ms_fname": {
     "line number": [
      164
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      163
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_memmap": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1621
     ]
    },
    "isinstance": {
     "line number": [
      1634
     ]
    },
    "len": {
     "line number": [
      1617
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1618
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.sys": {
     "line number": [
      1620
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1606,
      1608,
      1630
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1606,
      1608,
      1630
     ]
    },
    "mne.pick_info": {
     "line number": [
      1614
     ]
    },
    "numpy.linspace": {
     "line number": [
      1617
     ]
    },
    "numpy.memmap": {
     "line number": [
      1634
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1617
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1624,
      1625
     ]
    },
    "range": {
     "line number": [
      1605
     ]
    },
    "str": {
     "line number": [
      1605
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_multiple_files": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      264,
      343
     ]
    },
    "events": {
     "line number": [
      259,
      264,
      266,
      276,
      347,
      351,
      351,
      353
     ]
    },
    "int": {
     "line number": [
      257
     ]
    },
    "len": {
     "line number": [
      248,
      251,
      252,
      256,
      356,
      357
     ]
    },
    "list": {
     "line number": [
      285
     ]
    },
    "mne.concatenate_events": {
     "line number": [
      276,
      351
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      234
     ]
    },
    "mne.find_events": {
     "line number": [
      259,
      277,
      315,
      316,
      347,
      348,
      352
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      264,
      265,
      272,
      289,
      293,
      297,
      312,
      320,
      326,
      331,
      336
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff._compare_combo": {
     "line number": [
      292,
      296,
      300,
      309,
      317,
      324,
      329,
      334,
      339
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      238,
      282,
      290,
      290,
      294,
      294,
      298,
      298,
      305,
      306,
      312,
      313,
      320,
      321,
      326,
      327,
      332,
      333,
      337,
      338,
      344
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      264,
      343,
      233
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      238,
      255,
      271,
      282,
      289,
      293,
      297,
      305,
      306,
      312,
      313,
      320,
      321,
      326,
      327,
      332,
      333,
      337,
      338,
      344
     ]
    },
    "numpy.arange": {
     "line number": [
      244
     ]
    },
    "numpy.concatenate": {
     "line number": [
      245
     ]
    },
    "numpy.round": {
     "line number": [
      244
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      267,
      270,
      273
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      278,
      279,
      315,
      353
     ]
    },
    "range": {
     "line number": [
      252,
      285
     ]
    },
    "round": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_output_formats": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      217
     ]
    },
    "enumerate": {
     "line number": [
      214
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      204
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      217
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      211
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      211,
      219
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      221
     ]
    },
    "zip": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_pick_channels_mixin": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1581
     ]
    },
    "len": {
     "line number": [
      1575,
      1579,
      1579,
      1580
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1563
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1567
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1581,
      1564
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1567
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1584
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_preload_modify": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      838
     ]
    },
    "len": {
     "line number": [
      834
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      824
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      829
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      825
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      829,
      847
     ]
    },
    "mne.pick_types": {
     "line number": [
      832
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      828
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      850
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_proj": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      753,
      755
     ]
    },
    "all": {
     "line number": [
      744,
      782,
      789
     ]
    },
    "copy.deepcopy": {
     "line number": [
      757
     ]
    },
    "len": {
     "line number": [
      758,
      760,
      763,
      765,
      799,
      801,
      805,
      807
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      737
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      741,
      769,
      775,
      785,
      798,
      804
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      753,
      755
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      812
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      741,
      769,
      775,
      779,
      785,
      798,
      804,
      812,
      819
     ]
    },
    "numpy.dot": {
     "line number": [
      772,
      795
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      781,
      788,
      794,
      795,
      821
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      748,
      749
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_raw_copy": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1223
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1226,
      1233
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1226,
      1233
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1230,
      1237
     ]
    },
    "sorted": {
     "line number": [
      1231,
      1231,
      1238,
      1238
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_resample": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1143,
      1149
     ]
    },
    "events": {
     "line number": [
      1161,
      1162,
      1162,
      1164,
      1169
     ]
    },
    "int": {
     "line number": [
      1165
     ]
    },
    "len": {
     "line number": [
      1072,
      1123,
      1128,
      1136,
      1142,
      1148,
      1156,
      1158,
      1177,
      1188
     ]
    },
    "mne.create_info": {
     "line number": [
      1123,
      1128,
      1136,
      1142,
      1148,
      1159,
      1177,
      1184
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1061
     ]
    },
    "mne.find_events": {
     "line number": [
      1161
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1123,
      1128,
      1136,
      1142,
      1148,
      1159,
      1177,
      1184
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      1103,
      1107
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1065
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1143,
      1149,
      1062
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1065,
      1074
     ]
    },
    "numpy.array": {
     "line number": [
      1170
     ]
    },
    "numpy.minimum": {
     "line number": [
      1172
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1184
     ]
    },
    "numpy.round": {
     "line number": [
      1170,
      1171,
      1172
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1090,
      1093,
      1124,
      1129,
      1137
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1108,
      1109,
      1110,
      1111,
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_resample_equiv": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1051
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1054
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1054
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1058
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_save": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      1348
     ]
    },
    "ValueError": {
     "line number": [
      1345,
      1358
     ]
    },
    "mne.annotations.Annotations": {
     "line number": [
      1352
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1340
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1343,
      1345,
      1346,
      1348
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1345,
      1348,
      1358
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1343,
      1346,
      1357,
      1367
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      1351
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1359
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1360,
      1361
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_split_files": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "FileExistsError": {
     "line number": [
      386,
      391
     ]
    },
    "RuntimeError": {
     "line number": [
      492
     ]
    },
    "ValueError": {
     "line number": [
      440,
      444,
      485
     ]
    },
    "mne.annotations.Annotations": {
     "line number": [
      378,
      410,
      438
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      360
     ]
    },
    "mne.io.base": {
     "line number": [
      491
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      368
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.os": {
     "line number": [
      388,
      395,
      396
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      386,
      391,
      440,
      444,
      485,
      492,
      361,
      363,
      363
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      368,
      414,
      427,
      453,
      461,
      466,
      473,
      479
     ]
    },
    "numpy.arange": {
     "line number": [
      410
     ]
    },
    "numpy.diff": {
     "line number": [
      462,
      467,
      474,
      480
     ]
    },
    "numpy.ones": {
     "line number": [
      410
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      372,
      415,
      416,
      417,
      454,
      463,
      468,
      475,
      481
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      419,
      424,
      425,
      429,
      430,
      462,
      467,
      474,
      480
     ]
    },
    "open": {
     "line number": [
      389
     ]
    },
    "os.path.isdir": {
     "line number": [
      484
     ]
    },
    "os.path.isfile": {
     "line number": [
      383,
      384,
      393,
      402,
      403,
      407,
      408,
      494,
      495
     ]
    },
    "os.path.join": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_split_numbers": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "mne.io.base": {
     "line number": [
      509
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff._no_write_file_name": {
     "line number": [
      509
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      510
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      510,
      518
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      519,
      520
     ]
    },
    "os.path.isfile": {
     "line number": [
      515,
      517
     ]
    },
    "str": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_str_like": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": {
    "mne.io.fiff.tests.test_raw_fiff.pathlib": {
     "line number": [
      1682
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1682,
      1684
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1683,
      1684
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1685
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_subject_info": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      177
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      168
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      171
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      171,
      183
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      190
     ]
    },
    "zip": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_to_data_frame": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1264
     ]
    },
    "ValueError": {
     "line number": [
      1260
     ]
    },
    "isinstance": {
     "line number": [
      1266
     ]
    },
    "len": {
     "line number": [
      1256
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1260,
      1264
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1245
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1245
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1241
     ]
    },
    "numpy.round": {
     "line number": [
      1249
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1249,
      1252,
      1253
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      1266
     ]
    },
    "set": {
     "line number": [
      1258,
      1258
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_to_data_frame_time_format": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1279
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.pytest": {
     "line number": [
      1270
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
     "line number": [
      1274
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1274
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1269
     ]
    },
    "numpy.float64": {
     "line number": [
      1277
     ]
    },
    "numpy.int64": {
     "line number": [
      1277
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      1277
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      1278
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_with_statement": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1404
     ]
    },
    "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
     "line number": [
      1408
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1408
     ]
    },
    "print": {
     "line number": [
      1409
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.testing_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.kit": {
  "data": {},
  "type": "module"
 },
 "mne.io.kit.constants": {
  "data": {
   "symbols_in_volume": {
    "BunchConst": {
     "line number": [
      12
     ]
    },
    "mne.io.kit.constants.KIT": {
     "line number": [
      15,
      16,
      17,
      20,
      21,
      22,
      23,
      25,
      31,
      37,
      44,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      80,
      81,
      82,
      83,
      84,
      86,
      87,
      88,
      89,
      90,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      100,
      102,
      103,
      109,
      110,
      111,
      112,
      113,
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      130,
      131,
      132,
      133,
      134,
      135,
      139,
      140,
      141,
      144,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      169,
      170,
      171,
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      183,
      184,
      185,
      186,
      190,
      191,
      192,
      193,
      194,
      195,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      211,
      212,
      213,
      214,
      215,
      216,
      217,
      218,
      219,
      220,
      221,
      222,
      223,
      224,
      225,
      226,
      227,
      231,
      232,
      233,
      234,
      238,
      239,
      240,
      241,
      243,
      244,
      245,
      248,
      253
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.kit.constants.KIT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_LAYOUT": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_NEIGHBORS": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_SYSNAMES": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "mne.io.kit.constants.LEGACY_AMP_PARAMS": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "mne.io.kit.coreg": {
  "data": {},
  "type": "module"
 },
 "mne.io.kit.coreg.SEEK_CUR": {
  "data": {
   "shadows": "os.SEEK_CUR"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.read_mrk": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      54
     ]
    },
    "ValueError": {
     "line number": [
      56,
      58,
      66
     ]
    },
    "_read_dig_points": {
     "line number": [
      48
     ]
    },
    "mne.io.kit.coreg.pickle": {
     "line number": [
      51
     ]
    },
    "numpy.array": {
     "line number": [
      46
     ]
    },
    "numpy.asarray": {
     "line number": [
      62
     ]
    },
    "numpy.fromfile": {
     "line number": [
      45
     ]
    },
    "open": {
     "line number": [
      34,
      50
     ]
    },
    "os.SEEK_CUR": {
     "line number": [
      39,
      44
     ]
    },
    "os.path.splitext": {
     "line number": [
      32
     ]
    },
    "range": {
     "line number": [
      42
     ]
    },
    "struct.unpack": {
     "line number": [
      36,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.coreg.read_sns": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "float": {
     "line number": [
      87
     ]
    },
    "mne.io.kit.coreg.re": {
     "line number": [
      83
     ]
    },
    "numpy.array": {
     "line number": [
      87
     ]
    },
    "open": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.coreg.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "mne.io.kit.tests": {
  "data": {
   "symbols_in_volume": {
    "os.path.dirname": {
     "line number": [
      3
     ]
    },
    "os.path.join": {
     "line number": [
      3
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.kit.tests.data_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.io.kit.tests.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg": {
  "data": {
   "symbols_in_volume": {
    "mne.io.kit.tests.test_coreg.FILE": {
     "line number": [
      18
     ]
    },
    "mne.io.kit.tests.test_coreg.data_dir": {
     "line number": [
      20
     ]
    },
    "mne.io.kit.tests.test_coreg.inspect": {
     "line number": [
      17,
      17
     ]
    },
    "mne.io.kit.tests.test_coreg.os": {
     "line number": [
      18,
      18,
      19,
      20
     ]
    },
    "mne.io.kit.tests.test_coreg.parent_dir": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.kit.tests.test_coreg.FILE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg._write_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._write_dig_points"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.data_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.mrk_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.parent_dir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.read_mrk": {
  "data": {
   "shadows": "mne.io.kit.read_mrk"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.test_io_mrk": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      42,
      45
     ]
    },
    "dict": {
     "line number": [
      37,
      41
     ]
    },
    "mne.io._digitization._write_dig_points": {
     "line number": [
      30
     ]
    },
    "mne.io.kit.read_mrk": {
     "line number": [
      26,
      31,
      38,
      42,
      45
     ]
    },
    "mne.io.kit.tests.test_coreg.mrk_fname": {
     "line number": [
      26
     ]
    },
    "mne.io.kit.tests.test_coreg.os": {
     "line number": [
      29,
      35
     ]
    },
    "mne.io.kit.tests.test_coreg.pickle": {
     "line number": [
      37,
      41
     ]
    },
    "mne.io.kit.tests.test_coreg.pytest": {
     "line number": [
      42,
      45
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      25
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      32,
      39
     ]
    },
    "open": {
     "line number": [
      36,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit": {
  "data": {
   "symbols_in_volume": {
    "mne.io.kit.__file__": {
     "line number": [
      27
     ]
    },
    "mne.io.kit.tests.test_kit.data_dir": {
     "line number": [
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38
     ]
    },
    "mne.io.kit.tests.test_kit.data_path": {
     "line number": [
      41,
      43,
      45,
      47,
      49,
      51
     ]
    },
    "mne.io.kit.tests.test_kit.mne": {
     "line number": [
      40
     ]
    },
    "mne.io.kit.tests.test_kit.ricoh_systems_paths": {
     "line number": [
      48,
      50
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      341
     ]
    },
    "os.path.dirname": {
     "line number": [
      27
     ]
    },
    "os.path.join": {
     "line number": [
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      41,
      42,
      44,
      46,
      48,
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.kit.tests.test_kit.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.KIT": {
  "data": {
   "shadows": "mne.io.kit.constants.KIT"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._KIT_INIT_FILE": {
  "data": {
   "shadows": "mne.io.kit.__file__"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._assert_sinusoid": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.angle": {
     "line number": [
      152
     ]
    },
    "numpy.cos": {
     "line number": [
      153
     ]
    },
    "numpy.dot": {
     "line number": [
      152
     ]
    },
    "numpy.exp": {
     "line number": [
      151
     ]
    },
    "numpy.pi": {
     "line number": [
      151,
      153
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit._get_ico_surface": {
  "data": {
   "shadows": "mne.surface._get_ico_surface"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_dig_allclose": {
  "data": {
   "shadows": "mne.utils.assert_dig_allclose"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.data_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.data_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.elp_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.elp_txt_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.epochs_path": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.events_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.hsp_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.hsp_txt_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.mrk2_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.mrk3_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.mrk_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_epochs_kit": {
  "data": {
   "shadows": "mne.io.read_epochs_kit"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_sns": {
  "data": {
   "shadows": "mne.io.kit.coreg.read_sns"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.ricoh_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.ricoh_systems_paths": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.sqd_as_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.sqd_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.sqd_umd_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.test_ch_loc": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "mne.io.kit.coreg.read_sns": {
     "line number": [
      254
     ]
    },
    "mne.io.kit.tests.test_kit.data_dir": {
     "line number": [
      248,
      254
     ]
    },
    "mne.io.kit.tests.test_kit.elp_txt_path": {
     "line number": [
      246,
      266
     ]
    },
    "mne.io.kit.tests.test_kit.hsp_txt_path": {
     "line number": [
      246,
      266
     ]
    },
    "mne.io.kit.tests.test_kit.mrk2_path": {
     "line number": [
      265
     ]
    },
    "mne.io.kit.tests.test_kit.mrk3_path": {
     "line number": [
      265
     ]
    },
    "mne.io.kit.tests.test_kit.mrk_path": {
     "line number": [
      246,
      265
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_path": {
     "line number": [
      246,
      266
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      248
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      246,
      266
     ]
    },
    "mne.utils.assert_dig_allclose": {
     "line number": [
      270
     ]
    },
    "numpy.array": {
     "line number": [
      250
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      255,
      257,
      262
     ]
    },
    "os.path.join": {
     "line number": [
      248,
      254
     ]
    },
    "zip": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_data": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      57,
      58
     ]
    },
    "ValueError": {
     "line number": [
      59,
      60,
      62
     ]
    },
    "len": {
     "line number": [
      77,
      125
     ]
    },
    "list": {
     "line number": [
      61,
      63,
      71
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      54
     ]
    },
    "mne.find_events": {
     "line number": [
      146
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      145
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_GRAD": {
     "line number": [
      80,
      138
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_REF_MAG": {
     "line number": [
      81,
      142
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_NONE": {
     "line number": [
      82
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EEG_CH": {
     "line number": [
      144
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MEG_CH": {
     "line number": [
      78,
      137
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MISC_CH": {
     "line number": [
      79
     ]
    },
    "mne.io.constants.FIFF.FIFFV_REF_MEG_CH": {
     "line number": [
      78,
      140
     ]
    },
    "mne.io.constants.FIFF.FIFFV_STIM_CH": {
     "line number": [
      79
     ]
    },
    "mne.io.kit.constants.KIT.SYSTEM_AS_2008": {
     "line number": [
      135
     ]
    },
    "mne.io.kit.constants.KIT.SYSTEM_NYU_2010": {
     "line number": [
      74
     ]
    },
    "mne.io.kit.constants.KIT.SYSTEM_UMD_2014_12": {
     "line number": [
      123
     ]
    },
    "mne.io.kit.tests.test_kit.data_dir": {
     "line number": [
      100,
      107
     ]
    },
    "mne.io.kit.tests.test_kit.elp_txt_path": {
     "line number": [
      59,
      65,
      70,
      89
     ]
    },
    "mne.io.kit.tests.test_kit.epochs_path": {
     "line number": [
      57
     ]
    },
    "mne.io.kit.tests.test_kit.hsp_txt_path": {
     "line number": [
      66,
      70,
      89
     ]
    },
    "mne.io.kit.tests.test_kit.mrk2_path": {
     "line number": [
      65
     ]
    },
    "mne.io.kit.tests.test_kit.mrk3_path": {
     "line number": [
      65
     ]
    },
    "mne.io.kit.tests.test_kit.mrk_path": {
     "line number": [
      59,
      69,
      89
     ]
    },
    "mne.io.kit.tests.test_kit.pytest": {
     "line number": [
      57,
      58,
      59,
      60,
      62
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_as_path": {
     "line number": [
      132
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_path": {
     "line number": [
      58,
      59,
      60,
      62,
      65,
      69,
      89
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_umd_path": {
     "line number": [
      119,
      120
     ]
    },
    "mne.io.read_epochs_kit": {
     "line number": [
      58
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      101
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      57,
      59,
      60,
      62,
      65,
      69,
      89,
      119,
      120,
      132
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      69,
      119
     ]
    },
    "mne.pick_types": {
     "line number": [
      92,
      99,
      102,
      113
     ]
    },
    "numpy.array": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      111,
      116
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      96,
      146
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      74,
      77,
      86,
      123,
      125,
      129,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      143,
      144,
      145
     ]
    },
    "os.path.join": {
     "line number": [
      100,
      107
     ]
    },
    "range": {
     "line number": [
      61,
      63,
      71
     ]
    },
    "repr": {
     "line number": [
      73
     ]
    },
    "sum": {
     "line number": [
      84,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_decimate": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      306
     ]
    },
    "len": {
     "line number": [
      315
     ]
    },
    "mne.io.kit.tests.test_kit.elp_txt_path": {
     "line number": [
      308
     ]
    },
    "mne.io.kit.tests.test_kit.mrk_path": {
     "line number": [
      308
     ]
    },
    "mne.io.kit.tests.test_kit.pytest": {
     "line number": [
      306
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_path": {
     "line number": [
      308
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      308
     ]
    },
    "mne.surface._get_ico_surface": {
     "line number": [
      297
     ]
    },
    "numpy.array": {
     "line number": [
      310
     ]
    },
    "numpy.mean": {
     "line number": [
      318,
      319,
      320,
      321
     ]
    },
    "numpy.savetxt": {
     "line number": [
      303
     ]
    },
    "numpy.sqrt": {
     "line number": [
      318,
      319
     ]
    },
    "numpy.sum": {
     "line number": [
      318,
      319
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      322
     ]
    },
    "os.path.join": {
     "line number": [
      302
     ]
    },
    "str": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_epochs": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "events": {
     "line number": [
      206,
      207
     ]
    },
    "mne.Epochs": {
     "line number": [
      207
     ]
    },
    "mne.io.kit.tests.test_kit.epochs_path": {
     "line number": [
      209
     ]
    },
    "mne.io.kit.tests.test_kit.events_path": {
     "line number": [
      206,
      209
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_path": {
     "line number": [
      205
     ]
    },
    "mne.io.read_epochs_kit": {
     "line number": [
      209
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      205
     ]
    },
    "mne.read_events": {
     "line number": [
      206
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_hsp_elp": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "mne.io.kit.tests.test_kit.elp_path": {
     "line number": [
      276
     ]
    },
    "mne.io.kit.tests.test_kit.elp_txt_path": {
     "line number": [
      275
     ]
    },
    "mne.io.kit.tests.test_kit.hsp_path": {
     "line number": [
      276
     ]
    },
    "mne.io.kit.tests.test_kit.hsp_txt_path": {
     "line number": [
      275
     ]
    },
    "mne.io.kit.tests.test_kit.mrk_path": {
     "line number": [
      275,
      276
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_path": {
     "line number": [
      275,
      276
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      275,
      276
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      289,
      290
     ]
    },
    "numpy.array": {
     "line number": [
      279,
      280
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      281,
      286,
      291
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      289,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_raw_events": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "evts": {
     "line number": [
      224,
      228,
      232,
      236,
      241
     ]
    },
    "mne.find_events": {
     "line number": [
      223,
      227,
      231,
      235,
      240
     ]
    },
    "mne.io.kit.tests.test_kit.sqd_path": {
     "line number": [
      222,
      226,
      230,
      234,
      238
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      222,
      226,
      230,
      234,
      238
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      223,
      227,
      231,
      235,
      240
     ]
    },
    "range": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_raw_events.evts": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_ricoh_data": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "any": {
     "line number": [
      177
     ]
    },
    "enumerate": {
     "line number": [
      174
     ]
    },
    "len": {
     "line number": [
      172,
      173,
      173
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      157
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      190,
      194
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_GRAD": {
     "line number": [
      186
     ]
    },
    "mne.io.kit.tests.test_kit._assert_sinusoid": {
     "line number": [
      187,
      191,
      198
     ]
    },
    "mne.io.kit.tests.test_kit.pytest": {
     "line number": [
      164,
      158
     ]
    },
    "mne.io.kit.tests.test_kit.ricoh_path": {
     "line number": [
      160
     ]
    },
    "mne.io.kit.tests.test_kit.yokogawa_path": {
     "line number": [
      159
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      165,
      167
     ]
    },
    "mne.pick_types": {
     "line number": [
      171
     ]
    },
    "numpy.allclose": {
     "line number": [
      177
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      169,
      178,
      188,
      192,
      196,
      199,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_ricoh_systems": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      325
     ]
    },
    "mne.io.kit.tests.test_kit.pytest": {
     "line number": [
      326
     ]
    },
    "mne.io.kit.tests.test_kit.ricoh_systems_paths": {
     "line number": [
      327,
      329,
      331
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.yokogawa_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.matrix": {
  "data": {},
  "type": "module"
 },
 "mne.io.matrix._read_named_matrix": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      60,
      67,
      72
     ]
    },
    "dict": {
     "line number": [
      81
     ]
    },
    "find_tag": {
     "line number": [
      58,
      65,
      70,
      75,
      78
     ]
    },
    "has_tag": {
     "line number": [
      44,
      52
     ]
    },
    "mne.io.matrix._transpose_named_matrix": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.matrix._transpose_named_matrix": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mne.io.matrix.write_named_matrix": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106,
      118,
      124
     ]
    },
    "end_block": {
     "line number": [
      128
     ]
    },
    "float": {
     "line number": [
      103
     ]
    },
    "len": {
     "line number": [
      115,
      117,
      121,
      123
     ]
    },
    "start_block": {
     "line number": [
      111
     ]
    },
    "write_float_matrix": {
     "line number": [
      127
     ]
    },
    "write_int": {
     "line number": [
      112,
      113
     ]
    },
    "write_name_list": {
     "line number": [
      119,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nicolet": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.nicolet": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.nicolet.RawNicolet": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "mne.io.nicolet.nicolet.RawNicolet.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "mne.io.nicolet.nicolet.RawNicolet": {
     "line number": [
      157
     ]
    },
    "mne.io.nicolet.nicolet._get_nicolet_info": {
     "line number": [
      154
     ]
    },
    "os.path.abspath": {
     "line number": [
      153
     ]
    },
    "super": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet.RawNicolet._read_segment_file": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "_read_segments_file": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet._get_nicolet_info": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      106
     ]
    },
    "_create_chs": {
     "line number": [
      109
     ]
    },
    "_empty_info": {
     "line number": [
      96
     ]
    },
    "_find_channels": {
     "line number": [
      84,
      86,
      88
     ]
    },
    "dict": {
     "line number": [
      70
     ]
    },
    "float": {
     "line number": [
      77
     ]
    },
    "int": {
     "line number": [
      79,
      94,
      94,
      94,
      95,
      95,
      95,
      95
     ]
    },
    "len": {
     "line number": [
      108
     ]
    },
    "mne.io.nicolet.nicolet.calendar": {
     "line number": [
      97
     ]
    },
    "mne.io.nicolet.nicolet.datetime": {
     "line number": [
      94
     ]
    },
    "numpy.repeat": {
     "line number": [
      108
     ]
    },
    "open": {
     "line number": [
      71
     ]
    },
    "os.path.splitext": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.read_raw_nicolet": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "mne.io.nicolet.nicolet.RawNicolet": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nicolet.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.tests.test_nicolet": {
  "data": {
   "symbols_in_volume": {
    "mne.io.nicolet.tests.test_nicolet.FILE": {
     "line number": [
      14
     ]
    },
    "mne.io.nicolet.tests.test_nicolet.base_dir": {
     "line number": [
      15
     ]
    },
    "mne.io.nicolet.tests.test_nicolet.inspect": {
     "line number": [
      13,
      13
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      24
     ]
    },
    "os.path.abspath": {
     "line number": [
      14
     ]
    },
    "os.path.dirname": {
     "line number": [
      14
     ]
    },
    "os.path.join": {
     "line number": [
      14,
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.nicolet.tests.test_nicolet.FILE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.base_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet.fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.read_raw_nicolet": {
  "data": {
   "shadows": "mne.io.read_raw_nicolet"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.test_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "mne.io.nicolet.tests.test_nicolet.fname": {
     "line number": [
      20
     ]
    },
    "mne.io.read_raw_nicolet": {
     "line number": [
      20
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon": {
  "data": {},
  "type": "module"
 },
 "mne.io.nihon.nihon": {
  "data": {
   "symbols_in_volume": {
    "mne.io.nihon.nihon._default_chan_labels": {
     "line number": [
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99
     ]
    },
    "range": {
     "line number": [
      92,
      93,
      94,
      96,
      98
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.nihon.nihon.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.io.nihon.nihon.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.io.nihon.nihon.RawNihon": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "mne.io.nihon.nihon.RawNihon.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "create_info": {
     "line number": [
      324
     ]
    },
    "dict": {
     "line number": [
      339
     ]
    },
    "enumerate": {
     "line number": [
      343
     ]
    },
    "float": {
     "line number": [
      333,
      335,
      337
     ]
    },
    "mne.io.nihon.nihon.RawNihon": {
     "line number": [
      348
     ]
    },
    "mne.io.nihon.nihon._ensure_path": {
     "line number": [
      311
     ]
    },
    "mne.io.nihon.nihon._map_ch_to_specs": {
     "line number": [
      329
     ]
    },
    "mne.io.nihon.nihon._map_ch_to_type": {
     "line number": [
      322
     ]
    },
    "mne.io.nihon.nihon._read_nihon_annotations": {
     "line number": [
      354
     ]
    },
    "mne.io.nihon.nihon._read_nihon_header": {
     "line number": [
      315
     ]
    },
    "mne.io.nihon.nihon._read_nihon_metadata": {
     "line number": [
      316
     ]
    },
    "numpy.array": {
     "line number": [
      332,
      334,
      336
     ]
    },
    "numpy.newaxis": {
     "line number": [
      333,
      335,
      337
     ]
    },
    "super": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon.RawNihon._read_segment_file": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      381
     ]
    },
    "numpy.fromfile": {
     "line number": [
      375
     ]
    },
    "numpy.int16": {
     "line number": [
      376
     ]
    },
    "open": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._default_chan_labels": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "mne.io.nihon.nihon._ensure_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      20
     ]
    },
    "pathlib.Path": {
     "line number": [
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._map_ch_to_specs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      287
     ]
    },
    "mne.io.nihon.nihon._default_chan_labels": {
     "line number": [
      277,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._map_ch_to_type": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "any": {
     "line number": [
      267
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._read_21e_file": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "int": {
     "line number": [
      119
     ]
    },
    "len": {
     "line number": [
      120,
      121
     ]
    },
    "mne.io.nihon.nihon._default_chan_labels": {
     "line number": [
      105
     ]
    },
    "mne.io.nihon.nihon._ensure_path": {
     "line number": [
      103
     ]
    },
    "open": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._read_nihon_annotations": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      259
     ]
    },
    "ValueError": {
     "line number": [
      236
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      253
     ]
    },
    "mne.io.nihon.nihon._ensure_path": {
     "line number": [
      226
     ]
    },
    "mne.io.nihon.nihon._valid_headers": {
     "line number": [
      235
     ]
    },
    "numpy.fromfile": {
     "line number": [
      234,
      240,
      245,
      247,
      249
     ]
    },
    "numpy.uint32": {
     "line number": [
      245
     ]
    },
    "numpy.uint8": {
     "line number": [
      240,
      247
     ]
    },
    "open": {
     "line number": [
      233
     ]
    },
    "range": {
     "line number": [
      243
     ]
    },
    "warn": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._read_nihon_header": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      216,
      219
     ]
    },
    "ValueError": {
     "line number": [
      136,
      142,
      148,
      207,
      209
     ]
    },
    "int": {
     "line number": [
      191
     ]
    },
    "len": {
     "line number": [
      205
     ]
    },
    "mne.io.nihon.nihon._ensure_path": {
     "line number": [
      129
     ]
    },
    "mne.io.nihon.nihon._read_21e_file": {
     "line number": [
      130
     ]
    },
    "mne.io.nihon.nihon._valid_headers": {
     "line number": [
      135,
      141
     ]
    },
    "numpy.fromfile": {
     "line number": [
      134,
      140,
      146,
      153,
      159,
      162,
      168,
      172,
      178,
      184,
      188
     ]
    },
    "numpy.sum": {
     "line number": [
      212
     ]
    },
    "numpy.uint16": {
     "line number": [
      188
     ]
    },
    "numpy.uint32": {
     "line number": [
      159,
      168,
      184
     ]
    },
    "numpy.uint8": {
     "line number": [
      146,
      153,
      162,
      172,
      178
     ]
    },
    "open": {
     "line number": [
      133
     ]
    },
    "range": {
     "line number": [
      156,
      165,
      176,
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._read_nihon_metadata": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      80
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      81
     ]
    },
    "mne.io.nihon.nihon._ensure_path": {
     "line number": [
      65
     ]
    },
    "mne.io.nihon.nihon._valid_headers": {
     "line number": [
      73
     ]
    },
    "numpy.fromfile": {
     "line number": [
      72,
      79
     ]
    },
    "open": {
     "line number": [
      71
     ]
    },
    "warn": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon._valid_headers": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.nihon.nihon.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.nihon.nihon.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.nihon.nihon.read_raw_nihon": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "mne.io.nihon.nihon.RawNihon": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nihon.nihon.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.nihon.tests.test_nihon.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon._read_nihon_annotations": {
  "data": {
   "shadows": "mne.io.nihon.nihon._read_nihon_annotations"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon._read_nihon_header": {
  "data": {
   "shadows": "mne.io.nihon.nihon._read_nihon_header"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon._read_nihon_metadata": {
  "data": {
   "shadows": "mne.io.nihon.nihon._read_nihon_metadata"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.read_raw_edf": {
  "data": {
   "shadows": "mne.io.read_raw_edf"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.read_raw_nihon": {
  "data": {
   "shadows": "mne.io.read_raw_nihon"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.nihon.tests.test_nihon.test_nihon_eeg": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      55,
      60
     ]
    },
    "ValueError": {
     "line number": [
      46,
      49
     ]
    },
    "enumerate": {
     "line number": [
      35
     ]
    },
    "len": {
     "line number": [
      57
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      20,
      24,
      52
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      17
     ]
    },
    "mne.io.nihon.nihon._read_nihon_annotations": {
     "line number": [
      61
     ]
    },
    "mne.io.nihon.nihon._read_nihon_header": {
     "line number": [
      50
     ]
    },
    "mne.io.nihon.nihon._read_nihon_metadata": {
     "line number": [
      56
     ]
    },
    "mne.io.nihon.tests.test_nihon.pytest": {
     "line number": [
      46,
      49,
      55,
      60
     ]
    },
    "mne.io.read_raw_edf": {
     "line number": [
      25
     ]
    },
    "mne.io.read_raw_nihon": {
     "line number": [
      21,
      23,
      47
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      23
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      44
     ]
    },
    "pathlib.Path": {
     "line number": [
      20,
      24,
      52
     ]
    },
    "repr": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx": {
  "data": {},
  "type": "module"
 },
 "mne.io.nirx.nirx": {
  "data": {},
  "type": "module"
 },
 "mne.io.nirx.nirx.ConfigParser": {
  "data": {
   "shadows": "configparser.ConfigParser"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.RawConfigParser": {
  "data": {
   "shadows": "configparser.RawConfigParser"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.RawNIRX": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "mne.io.nirx.nirx.RawNIRX.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      320
     ]
    },
    "FileNotFoundError": {
     "line number": [
      77
     ]
    },
    "RuntimeError": {
     "line number": [
      86,
      112
     ]
    },
    "ValueError": {
     "line number": [
      131
     ]
    },
    "_format_dig_points": {
     "line number": [
      225
     ]
    },
    "_get_trans": {
     "line number": [
      208
     ]
    },
    "apply_trans": {
     "line number": [
      209,
      210,
      211,
      216
     ]
    },
    "configparser.ConfigParser": {
     "line number": [
      161
     ]
    },
    "configparser.RawConfigParser": {
     "line number": [
      107
     ]
    },
    "create_info": {
     "line number": [
      253
     ]
    },
    "datetime.datetime": {
     "line number": [
      139
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      128
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      129,
      140
     ]
    },
    "dict": {
     "line number": [
      80,
      219,
      286
     ]
    },
    "enumerate": {
     "line number": [
      218
     ]
    },
    "float": {
     "line number": [
      158,
      311,
      312,
      316
     ]
    },
    "get_mni_fiducials": {
     "line number": [
      214
     ]
    },
    "int": {
     "line number": [
      143,
      149,
      151,
      152,
      155,
      189,
      232,
      237,
      267,
      271,
      319
     ]
    },
    "len": {
     "line number": [
      85,
      87,
      89,
      93,
      172,
      175,
      178,
      292,
      311,
      312,
      313,
      314
     ]
    },
    "mne.io.nirx.nirx.RawNIRX": {
     "line number": [
      303
     ]
    },
    "mne.io.nirx.nirx._open": {
     "line number": [
      97,
      104,
      309
     ]
    },
    "mne.io.nirx.nirx.glob": {
     "line number": [
      84,
      89,
      93
     ]
    },
    "mne.io.nirx.nirx.re": {
     "line number": [
      106,
      106,
      144,
      149,
      152,
      310
     ]
    },
    "numpy.array": {
     "line number": [
      232
     ]
    },
    "numpy.asarray": {
     "line number": [
      149,
      152
     ]
    },
    "numpy.concatenate": {
     "line number": [
      236
     ]
    },
    "numpy.where": {
     "line number": [
      234
     ]
    },
    "numpy.zeros": {
     "line number": [
      311,
      312
     ]
    },
    "open": {
     "line number": [
      290
     ]
    },
    "os.path.abspath": {
     "line number": [
      74
     ]
    },
    "os.path.dirname": {
     "line number": [
      74
     ]
    },
    "os.path.isdir": {
     "line number": [
      76
     ]
    },
    "os.path.isfile": {
     "line number": [
      308
     ]
    },
    "prepend": {
     "line number": [
      245,
      246
     ]
    },
    "range": {
     "line number": [
      233,
      265,
      314
     ]
    },
    "read_mat": {
     "line number": [
      200
     ]
    },
    "str": {
     "line number": [
      247,
      248,
      249
     ]
    },
    "super": {
     "line number": [
      303
     ]
    },
    "warn": {
     "line number": [
      90,
      115,
      134
     ]
    },
    "zip": {
     "line number": [
      247,
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.nirx.RawNIRX.__init__.prepend": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "str": {
     "line number": [
      241
     ]
    },
    "str.format": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.nirx.RawNIRX._read_segment_file": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      345
     ]
    },
    "len": {
     "line number": [
      342
     ]
    },
    "mne.io.nirx.nirx._read_csv_rows_cols": {
     "line number": [
      332
     ]
    },
    "numpy.zeros": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.nirx._open": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "open": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.nirx._read_csv_rows_cols": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "float": {
     "line number": [
      353
     ]
    },
    "numpy.fromstring": {
     "line number": [
      353
     ]
    },
    "open": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.nirx.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.read_raw_nirx": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "mne.io.nirx.nirx.RawNIRX": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.nirx.tests.test_nirx": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      24,
      26,
      28,
      31
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      381
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      26,
      28,
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.nirx.tests.test_nirx.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_0": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_3_short": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.short_channels": {
  "data": {
   "shadows": "mne.preprocessing.nirs.short_channels"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.source_detector_distances": {
  "data": {
   "shadows": "mne.preprocessing.nirs.source_detector_distances"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.test_encoding": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      266
     ]
    },
    "list": {
     "line number": [
      258
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      252
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2": {
     "line number": [
      256
     ]
    },
    "mne.io.nirx.tests.test_nirx.pytest": {
     "line number": [
      266
     ]
    },
    "mne.io.nirx.tests.test_nirx.shutil": {
     "line number": [
      256
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      267
     ]
    },
    "open": {
     "line number": [
      259,
      262
     ]
    },
    "os.path.join": {
     "line number": [
      257
     ]
    },
    "str": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_0": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      326
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      328
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      318
     ]
    },
    "mne.io.constants.FIFF.FIFFV_SUBJ_SEX_UNKNOWN": {
     "line number": [
      342
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_0": {
     "line number": [
      321
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      321
     ]
    },
    "mne.preprocessing.nirs.source_detector_distances": {
     "line number": [
      363
     ]
    },
    "mne.transforms._get_trans": {
     "line number": [
      350
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      351
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      354,
      358,
      364
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_2": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      278
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      279
     ]
    },
    "dict": {
     "line number": [
      286
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      270
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2": {
     "line number": [
      273
     ]
    },
    "mne.io.nirx.tests.test_nirx.pytest": {
     "line number": [
      309,
      313
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      273
     ]
    },
    "mne.pick_types": {
     "line number": [
      312,
      314
     ]
    },
    "mne.transforms._get_trans": {
     "line number": [
      296
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      297
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      300,
      304
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      290,
      315
     ]
    },
    "print": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_2_short": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      83
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      84
     ]
    },
    "dict": {
     "line number": [
      96
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      75
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
     "line number": [
      78
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      78
     ]
    },
    "mne.preprocessing.nirs.short_channels": {
     "line number": [
      114,
      116,
      118
     ]
    },
    "mne.preprocessing.nirs.source_detector_distances": {
     "line number": [
      105
     ]
    },
    "mne.transforms._get_trans": {
     "line number": [
      135
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      136
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      106,
      139,
      143,
      147,
      151,
      155,
      159,
      163
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      115,
      117,
      119,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_3_short": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      186
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      167
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_3_short": {
     "line number": [
      170
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      170
     ]
    },
    "mne.preprocessing.nirs.short_channels": {
     "line number": [
      203,
      205,
      207
     ]
    },
    "mne.preprocessing.nirs.source_detector_distances": {
     "line number": [
      194
     ]
    },
    "mne.transforms._get_trans": {
     "line number": [
      220
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      221
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      195,
      224,
      228,
      232,
      236,
      240,
      244,
      248
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      204,
      206,
      208,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_dat_warn": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      71
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      64
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
     "line number": [
      67
     ]
    },
    "mne.io.nirx.tests.test_nirx.os": {
     "line number": [
      68
     ]
    },
    "mne.io.nirx.tests.test_nirx.pytest": {
     "line number": [
      71
     ]
    },
    "mne.io.nirx.tests.test_nirx.shutil": {
     "line number": [
      67
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      72
     ]
    },
    "str": {
     "line number": [
      67,
      68,
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_hdr_load": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      35
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
     "line number": [
      38
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_missing_evt": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      53
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
     "line number": [
      56
     ]
    },
    "mne.io.nirx.tests.test_nirx.os": {
     "line number": [
      57
     ]
    },
    "mne.io.nirx.tests.test_nirx.shutil": {
     "line number": [
      56
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      56,
      57,
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_missing_warn": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      49
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      46
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
     "line number": [
      50
     ]
    },
    "mne.io.nirx.tests.test_nirx.pytest": {
     "line number": [
      49
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_standard": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      369
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_0": {
     "line number": [
      373
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2": {
     "line number": [
      372
     ]
    },
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
     "line number": [
      371
     ]
    },
    "mne.io.nirx.tests.test_nirx.pytest": {
     "line number": [
      370
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      377
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open": {
  "data": {},
  "type": "module"
 },
 "mne.io.open.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.open.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "mne.io.open.SEEK_SET": {
  "data": {
   "shadows": "io.SEEK_SET"
  },
  "type": "import"
 },
 "mne.io.open._NoCloseRead": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "object": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io.open._NoCloseRead.__enter__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.__exit__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.close": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.read": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.seek": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "io.SEEK_SET": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open._fiff_get_fid": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "_file_like": {
     "line number": [
      44
     ]
    },
    "gzip.GzipFile": {
     "line number": [
      51
     ]
    },
    "mne.io.open._NoCloseRead": {
     "line number": [
      45
     ]
    },
    "open": {
     "line number": [
      54
     ]
    },
    "os.path.splitext": {
     "line number": [
      49
     ]
    },
    "str": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open._fiff_open": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      145,
      148,
      151,
      156
     ]
    },
    "int": {
     "line number": [
      161
     ]
    },
    "io.BytesIO": {
     "line number": [
      139
     ]
    },
    "list": {
     "line number": [
      167
     ]
    },
    "make_dir_tree": {
     "line number": [
      177
     ]
    },
    "read_tag": {
     "line number": [
      153,
      163
     ]
    },
    "read_tag_info": {
     "line number": [
      141,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open._find_type": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "any": {
     "line number": [
      238,
      239
     ]
    },
    "int": {
     "line number": [
      236
     ]
    },
    "len": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open._get_next_fname": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "dir_tree_find": {
     "line number": [
      60
     ]
    },
    "int": {
     "line number": [
      67
     ]
    },
    "os.path.dirname": {
     "line number": [
      73
     ]
    },
    "os.path.join": {
     "line number": [
      73,
      89,
      94
     ]
    },
    "os.path.split": {
     "line number": [
      80
     ]
    },
    "read_tag": {
     "line number": [
      66,
      72,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open._show_tree": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      271
     ]
    },
    "Tag": {
     "line number": [
      267
     ]
    },
    "dict": {
     "line number": [
      289
     ]
    },
    "int": {
     "line number": [
      250
     ]
    },
    "isinstance": {
     "line number": [
      286,
      289,
      291,
      293
     ]
    },
    "len": {
     "line number": [
      290,
      292,
      294
     ]
    },
    "list": {
     "line number": [
      293
     ]
    },
    "mne.io.open._find_type": {
     "line number": [
      251,
      279
     ]
    },
    "numpy.ndarray": {
     "line number": [
      286
     ]
    },
    "read_tag": {
     "line number": [
      270
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      295
     ]
    },
    "str": {
     "line number": [
      250,
      253,
      281,
      285,
      288,
      290,
      291,
      292,
      294,
      299,
      302,
      304
     ]
    },
    "tuple": {
     "line number": [
      293
     ]
    },
    "type": {
     "line number": [
      299
     ]
    },
    "zip": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open.fiff_open": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      128
     ]
    },
    "mne.io.open._fiff_get_fid": {
     "line number": [
      125
     ]
    },
    "mne.io.open._fiff_open": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.open.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.open.show_fiff": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      219
     ]
    },
    "int": {
     "line number": [
      221
     ]
    },
    "isinstance": {
     "line number": [
      220
     ]
    },
    "list": {
     "line number": [
      218
     ]
    },
    "mne.io.open._show_tree": {
     "line number": [
      227
     ]
    },
    "mne.io.open.fiff_open": {
     "line number": [
      222
     ]
    },
    "numpy.inf": {
     "line number": [
      188
     ]
    },
    "str": {
     "line number": [
      189,
      218,
      220,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.open.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.persyst": {
  "data": {},
  "type": "module"
 },
 "mne.io.persyst.persyst": {
  "data": {},
  "type": "module"
 },
 "mne.io.persyst.persyst.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.io.persyst.persyst.RawPersyst": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "mne.io.persyst.persyst.RawPersyst.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      219
     ]
    },
    "FileNotFoundError": {
     "line number": [
      66,
      100,
      102
     ]
    },
    "RuntimeError": {
     "line number": [
      157,
      186
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      74,
      75,
      76,
      77
     ]
    },
    "create_info": {
     "line number": [
      166
     ]
    },
    "datetime.datetime": {
     "line number": [
      140,
      148
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      134,
      136,
      138,
      146
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      152
     ]
    },
    "enumerate": {
     "line number": [
      213
     ]
    },
    "float": {
     "line number": [
      117,
      209,
      210
     ]
    },
    "int": {
     "line number": [
      118,
      179,
      182
     ]
    },
    "isinstance": {
     "line number": [
      140
     ]
    },
    "len": {
     "line number": [
      156,
      208
     ]
    },
    "list": {
     "line number": [
      155
     ]
    },
    "mne.io.persyst.persyst.RawPersyst": {
     "line number": [
      202
     ]
    },
    "mne.io.persyst.persyst._get_subjectinfo": {
     "line number": [
      124
     ]
    },
    "mne.io.persyst.persyst._read_lay_contents": {
     "line number": [
      70
     ]
    },
    "mne.io.persyst.persyst.os": {
     "line number": [
      189
     ]
    },
    "numpy.dtype": {
     "line number": [
      181,
      184
     ]
    },
    "numpy.zeros": {
     "line number": [
      209,
      210
     ]
    },
    "open": {
     "line number": [
      177
     ]
    },
    "os.path.basename": {
     "line number": [
      64,
      94
     ]
    },
    "os.path.dirname": {
     "line number": [
      64,
      93
     ]
    },
    "os.path.exists": {
     "line number": [
      65,
      99,
      101
     ]
    },
    "os.path.isabs": {
     "line number": [
      99
     ]
    },
    "os.path.join": {
     "line number": [
      94
     ]
    },
    "range": {
     "line number": [
      168
     ]
    },
    "super": {
     "line number": [
      202
     ]
    },
    "warn": {
     "line number": [
      141
     ]
    },
    "zip": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.persyst.RawPersyst._read_segment_file": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      254
     ]
    },
    "numpy.float32": {
     "line number": [
      251
     ]
    },
    "numpy.fromfile": {
     "line number": [
      246
     ]
    },
    "numpy.reshape": {
     "line number": [
      251
     ]
    },
    "open": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.persyst._get_subjectinfo": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      307
     ]
    },
    "ValueError": {
     "line number": [
      264,
      270
     ]
    },
    "datetime.datetime.strptime": {
     "line number": [
      263,
      269
     ]
    },
    "dict": {
     "line number": [
      285,
      295
     ]
    },
    "print": {
     "line number": [
      266,
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.persyst._process_lay_line": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      398
     ]
    },
    "len": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.persyst._read_lay_contents": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "mne.io.persyst.persyst._process_lay_line": {
     "line number": [
      324
     ]
    },
    "open": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.persyst.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.persyst.persyst.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.persyst.persyst.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.persyst.persyst.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.persyst.persyst.read_raw_persyst": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "mne.io.persyst.persyst.RawPersyst": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.persyst.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.io.persyst.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.persyst.tests.test_persyst": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19,
      22
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      216
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      21
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.persyst.tests.test_persyst._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.fname_dat": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.persyst.tests.test_persyst.fname_lay": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.persyst.tests.test_persyst.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.read_raw_persyst": {
  "data": {
   "shadows": "mne.io.read_raw_persyst"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.persyst.tests.test_persyst.test_persyst_dates": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      93,
      109
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      79
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_dat": {
     "line number": [
      85,
      86
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_lay": {
     "line number": [
      84,
      90,
      106
     ]
    },
    "mne.io.persyst.tests.test_persyst.mne": {
     "line number": [
      83
     ]
    },
    "mne.io.persyst.tests.test_persyst.os": {
     "line number": [
      105
     ]
    },
    "mne.io.persyst.tests.test_persyst.shutil": {
     "line number": [
      86
     ]
    },
    "mne.io.read_raw_persyst": {
     "line number": [
      98,
      114
     ]
    },
    "open": {
     "line number": [
      90,
      91,
      106,
      107
     ]
    },
    "os.path.basename": {
     "line number": [
      84,
      85
     ]
    },
    "os.path.join": {
     "line number": [
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.tests.test_persyst.test_persyst_errors": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      195
     ]
    },
    "RuntimeError": {
     "line number": [
      168,
      181
     ]
    },
    "RuntimeWarning": {
     "line number": [
      210
     ]
    },
    "enumerate": {
     "line number": [
      163,
      176,
      190,
      205
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      151
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_dat": {
     "line number": [
      156,
      157,
      192
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_lay": {
     "line number": [
      155,
      160,
      173,
      187,
      202
     ]
    },
    "mne.io.persyst.tests.test_persyst.mne": {
     "line number": [
      154
     ]
    },
    "mne.io.persyst.tests.test_persyst.os": {
     "line number": [
      172,
      186,
      201
     ]
    },
    "mne.io.persyst.tests.test_persyst.pytest": {
     "line number": [
      168,
      181,
      195,
      210
     ]
    },
    "mne.io.persyst.tests.test_persyst.shutil": {
     "line number": [
      157
     ]
    },
    "mne.io.read_raw_persyst": {
     "line number": [
      169,
      183,
      197,
      212
     ]
    },
    "open": {
     "line number": [
      160,
      161,
      173,
      174,
      187,
      188,
      202,
      203
     ]
    },
    "os.path.basename": {
     "line number": [
      155,
      156,
      192
     ]
    },
    "os.path.join": {
     "line number": [
      155,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.tests.test_persyst.test_persyst_lay_load": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "all": {
     "line number": [
      45
     ]
    },
    "len": {
     "line number": [
      42
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      26
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_lay": {
     "line number": [
      29,
      49
     ]
    },
    "mne.io.read_raw_persyst": {
     "line number": [
      29,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.tests.test_persyst.test_persyst_raw": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      52
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_lay": {
     "line number": [
      55
     ]
    },
    "mne.io.read_raw_persyst": {
     "line number": [
      55
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.tests.test_persyst.test_persyst_standard": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      145
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_lay": {
     "line number": [
      148
     ]
    },
    "mne.io.read_raw_persyst": {
     "line number": [
      148
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.persyst.tests.test_persyst.test_persyst_wrong_file": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      123,
      137
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      120
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_dat": {
     "line number": [
      124,
      129,
      141
     ]
    },
    "mne.io.persyst.tests.test_persyst.fname_lay": {
     "line number": [
      128,
      130
     ]
    },
    "mne.io.persyst.tests.test_persyst.mne": {
     "line number": [
      126
     ]
    },
    "mne.io.persyst.tests.test_persyst.pytest": {
     "line number": [
      123,
      137
     ]
    },
    "mne.io.persyst.tests.test_persyst.shutil": {
     "line number": [
      130,
      141
     ]
    },
    "mne.io.read_raw_persyst": {
     "line number": [
      124,
      138,
      142
     ]
    },
    "os.path.basename": {
     "line number": [
      128,
      129
     ]
    },
    "os.path.join": {
     "line number": [
      128,
      129
     ]
    },
    "str": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj": {
  "data": {},
  "type": "module"
 },
 "mne.io.proj.ProjMixin": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "object": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io.proj.ProjMixin._reconstruct_proj": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "_map_meg_or_eeg_channels": {
     "line number": [
      321
     ]
    },
    "dict": {
     "line number": [
      310
     ]
    },
    "len": {
     "line number": [
      306,
      313
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      318
     ]
    },
    "mne.io.proj.make_eeg_average_ref_proj": {
     "line number": [
      320
     ]
    },
    "numpy.matmul": {
     "line number": [
      323
     ]
    },
    "pick_info": {
     "line number": [
      315
     ]
    },
    "pick_types": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.add_proj": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      137,
      145
     ]
    },
    "all": {
     "line number": [
      136
     ]
    },
    "any": {
     "line number": [
      144
     ]
    },
    "isinstance": {
     "line number": [
      132,
      135,
      136
     ]
    },
    "list": {
     "line number": [
      135
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      132,
      136
     ]
    },
    "mne.io.proj._uniquify_projs": {
     "line number": [
      151
     ]
    },
    "mne.io.proj.deactivate_proj": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.apply_proj": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "all": {
     "line number": [
      201
     ]
    },
    "copy.deepcopy": {
     "line number": [
      206
     ]
    },
    "enumerate": {
     "line number": [
      219
     ]
    },
    "isinstance": {
     "line number": [
      197,
      214
     ]
    },
    "len": {
     "line number": [
      191
     ]
    },
    "mne.io.proj.setup_proj": {
     "line number": [
      206
     ]
    },
    "numpy.dot": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.del_proj": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      255
     ]
    },
    "int": {
     "line number": [
      245
     ]
    },
    "isinstance": {
     "line number": [
      243
     ]
    },
    "len": {
     "line number": [
      244,
      257
     ]
    },
    "list": {
     "line number": [
      244
     ]
    },
    "numpy.array": {
     "line number": [
      245
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      245
     ]
    },
    "numpy.ones": {
     "line number": [
      257
     ]
    },
    "range": {
     "line number": [
      244
     ]
    },
    "set": {
     "line number": [
      250,
      251
     ]
    },
    "str": {
     "line number": [
      243
     ]
    },
    "zip": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.plot_projs_topomap": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      301
     ]
    },
    "len": {
     "line number": [
      291
     ]
    },
    "plot_projs_topomap": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.proj": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "all": {
     "line number": [
      113
     ]
    },
    "len": {
     "line number": [
      112
     ]
    },
    "property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.Projection": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io.proj.Projection.__deepcopy__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mne.io.proj.Projection.__repr__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "len": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.Projection.plot_topomap": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "plot_projs_topomap": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._check_projs": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      510,
      514
     ]
    },
    "copy.deepcopy": {
     "line number": [
      517
     ]
    },
    "enumerate": {
     "line number": [
      512
     ]
    },
    "isinstance": {
     "line number": [
      509,
      513
     ]
    },
    "list": {
     "line number": [
      509
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      513
     ]
    },
    "tuple": {
     "line number": [
      509
     ]
    },
    "type": {
     "line number": [
      511,
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._has_eeg_average_ref_proj": {
  "data": {
   "lineno": 795
  },
  "type": "function"
 },
 "mne.io.proj._make_projector": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      647
     ]
    },
    "ValueError": {
     "line number": [
      559,
      586
     ]
    },
    "enumerate": {
     "line number": [
      582,
      594
     ]
    },
    "len": {
     "line number": [
      557,
      584,
      585,
      602,
      611,
      613,
      621,
      630
     ]
    },
    "math.sqrt": {
     "line number": [
      607
     ]
    },
    "numpy.dot": {
     "line number": [
      645
     ]
    },
    "numpy.empty": {
     "line number": [
      561
     ]
    },
    "numpy.eye": {
     "line number": [
      561,
      645
     ]
    },
    "numpy.sum": {
     "line number": [
      607,
      641
     ]
    },
    "numpy.unique": {
     "line number": [
      585
     ]
    },
    "numpy.zeros": {
     "line number": [
      578
     ]
    },
    "range": {
     "line number": [
      606
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      638
     ]
    },
    "set": {
     "line number": [
      581,
      593
     ]
    },
    "warn": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._needs_eeg_average_ref_proj": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "len": {
     "line number": [
      817
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      819
     ]
    },
    "pick_types": {
     "line number": [
      815
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._normalize_proj": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "mne.io.proj._make_projector": {
     "line number": [
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._proj_equal": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._read_proj": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      391,
      397,
      403,
      409,
      415,
      434
     ]
    },
    "bool": {
     "line number": [
      419
     ]
    },
    "dict": {
     "line number": [
      442
     ]
    },
    "dir_tree_find": {
     "line number": [
      361,
      371
     ]
    },
    "find_tag": {
     "line number": [
      383,
      387,
      393,
      399,
      405,
      411,
      417,
      423
     ]
    },
    "int": {
     "line number": [
      395,
      401
     ]
    },
    "len": {
     "line number": [
      362,
      430,
      433,
      439,
      448,
      449,
      452
     ]
    },
    "list": {
     "line number": [
      358
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._uniquify_projs": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "any": {
     "line number": [
      871
     ]
    },
    "itertools.count": {
     "line number": [
      874
     ]
    },
    "len": {
     "line number": [
      874
     ]
    },
    "mne.io.proj._proj_equal": {
     "line number": [
      871
     ]
    },
    "sorted": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._uniquify_projs.sorter": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "int": {
     "line number": [
      880
     ]
    },
    "next": {
     "line number": [
      882
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj._write_proj": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      476,
      478
     ]
    },
    "end_block": {
     "line number": [
      499,
      501
     ]
    },
    "enumerate": {
     "line number": [
      477
     ]
    },
    "len": {
     "line number": [
      472,
      484
     ]
    },
    "list": {
     "line number": [
      476
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      478
     ]
    },
    "start_block": {
     "line number": [
      480,
      483
     ]
    },
    "tuple": {
     "line number": [
      476
     ]
    },
    "write_float": {
     "line number": [
      490,
      497
     ]
    },
    "write_float_matrix": {
     "line number": [
      494
     ]
    },
    "write_int": {
     "line number": [
      484,
      488,
      492,
      493
     ]
    },
    "write_name_list": {
     "line number": [
      485
     ]
    },
    "write_string": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.activate_proj": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      709
     ]
    },
    "len": {
     "line number": [
      715
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "mne.io.proj.deactivate_proj": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      740
     ]
    },
    "len": {
     "line number": [
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.proj.make_eeg_average_ref_proj": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      769
     ]
    },
    "ValueError": {
     "line number": [
      781
     ]
    },
    "dict": {
     "line number": [
      786
     ]
    },
    "len": {
     "line number": [
      779
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      788
     ]
    },
    "numpy.ones": {
     "line number": [
      783
     ]
    },
    "pick_types": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.make_projector": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "mne.io.proj._make_projector": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.make_projector_info": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "mne.io.proj.make_projector": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.proj.setup_proj": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": {
    "mne.io.proj._needs_eeg_average_ref_proj": {
     "line number": [
      845
     ]
    },
    "mne.io.proj.activate_proj": {
     "line number": [
      862
     ]
    },
    "mne.io.proj.make_eeg_average_ref_proj": {
     "line number": [
      846
     ]
    },
    "mne.io.proj.make_projector_info": {
     "line number": [
      850
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.proj.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.io.snirf": {
  "data": {},
  "type": "module"
 },
 "mne.io.snirf._snirf": {
  "data": {},
  "type": "module"
 },
 "mne.io.snirf._snirf.RawSNIRF": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "mne.io.snirf._snirf.RawSNIRF.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      264
     ]
    },
    "RuntimeError": {
     "line number": [
      82
     ]
    },
    "ValueError": {
     "line number": [
      237
     ]
    },
    "_import_h5py": {
     "line number": [
      70
     ]
    },
    "_make_dig_points": {
     "line number": [
      220
     ]
    },
    "_require_version": {
     "line number": [
      68
     ]
    },
    "create_info": {
     "line number": [
      151
     ]
    },
    "dict": {
     "line number": [
      210
     ]
    },
    "enumerate": {
     "line number": [
      185,
      211
     ]
    },
    "int": {
     "line number": [
      123,
      139,
      141,
      143,
      186,
      188,
      190,
      201,
      255,
      256,
      257
     ]
    },
    "len": {
     "line number": [
      100,
      118,
      119,
      219,
      273
     ]
    },
    "mne.io.snirf._snirf.RawSNIRF": {
     "line number": [
      259
     ]
    },
    "mne.io.snirf._snirf.datetime": {
     "line number": [
      235,
      245,
      246
     ]
    },
    "mne.io.snirf._snirf.re": {
     "line number": [
      252
     ]
    },
    "numpy.around": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      81,
      86,
      92,
      109,
      110,
      115,
      116,
      122,
      132,
      133,
      139,
      141,
      143,
      156,
      177,
      186,
      188,
      190,
      207,
      208,
      225,
      227,
      250,
      267
     ]
    },
    "numpy.diff": {
     "line number": [
      99
     ]
    },
    "numpy.unique": {
     "line number": [
      100,
      102
     ]
    },
    "range": {
     "line number": [
      275
     ]
    },
    "sorted": {
     "line number": [
      135
     ]
    },
    "str": {
     "line number": [
      147
     ]
    },
    "super": {
     "line number": [
      259
     ]
    },
    "warn": {
     "line number": [
      77,
      96,
      105,
      107,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf._snirf.RawSNIRF.__init__.atoi": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "int": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf._snirf.RawSNIRF.__init__.natural_keys": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "atoi": {
     "line number": [
      130
     ]
    },
    "mne.io.snirf._snirf.re": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf._snirf.RawSNIRF._read_segment_file": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "_mult_cal_one": {
     "line number": [
      287
     ]
    },
    "mne.io.snirf._snirf.h5py": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf._snirf._open": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "open": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf._snirf.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.snirf._snirf.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.io.snirf._snirf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.snirf._snirf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.snirf._snirf.read_raw_snirf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.io.snirf._snirf.RawSNIRF": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.snirf.tests.test_snirf": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      14,
      18
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      138
     ]
    },
    "os.path.join": {
     "line number": [
      14,
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.snirf.tests.test_snirf._import_h5py": {
  "data": {
   "shadows": "mne.externals.pymatreader.utils._import_h5py"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.fname_original": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.snirf.tests.test_snirf.fname_snirf_15_2_short": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.snirf.tests.test_snirf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.read_raw_snirf": {
  "data": {
   "shadows": "mne.io.read_raw_snirf"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.snirf.tests.test_snirf.test_snirf_against_nirx": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "float": {
     "line number": [
      75,
      76
     ]
    },
    "len": {
     "line number": [
      83
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      66
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      71
     ]
    },
    "mne.io.read_raw_snirf": {
     "line number": [
      70
     ]
    },
    "mne.io.snirf.tests.test_snirf.fname_original": {
     "line number": [
      71
     ]
    },
    "mne.io.snirf.tests.test_snirf.fname_snirf_15_2_short": {
     "line number": [
      70
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      67
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      74,
      75,
      77,
      86,
      90
     ]
    },
    "range": {
     "line number": [
      86,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf.tests.test_snirf.test_snirf_basic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      22
     ]
    },
    "mne.io.read_raw_snirf": {
     "line number": [
      26
     ]
    },
    "mne.io.snirf.tests.test_snirf.fname_snirf_15_2_short": {
     "line number": [
      26
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      23
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      42,
      44,
      46,
      48,
      50,
      54,
      56,
      58,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf.tests.test_snirf.test_snirf_nonstandard": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      94
     ]
    },
    "mne.externals.pymatreader.utils._import_h5py": {
     "line number": [
      98
     ]
    },
    "mne.io.read_raw_snirf": {
     "line number": [
      109,
      117,
      123
     ]
    },
    "mne.io.snirf.tests.test_snirf.fname_snirf_15_2_short": {
     "line number": [
      99
     ]
    },
    "mne.io.snirf.tests.test_snirf.shutil": {
     "line number": [
      99
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      93
     ]
    },
    "str": {
     "line number": [
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.snirf.tests.test_snirf.test_snirf_standard": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      130
     ]
    },
    "mne.io.read_raw_snirf": {
     "line number": [
      134
     ]
    },
    "mne.io.snirf.tests.test_snirf.fname_snirf_15_2_short": {
     "line number": [
      134
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      134
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      426
     ]
    },
    "mne.io.tag._call_dict": {
     "line number": [
      426
     ]
    },
    "mne.io.tag._call_dict_names": {
     "line number": [
      427
     ]
    },
    "mne.io.tag._read_ch_info_struct": {
     "line number": [
      395
     ]
    },
    "mne.io.tag._read_complex_double": {
     "line number": [
      391
     ]
    },
    "mne.io.tag._read_complex_float": {
     "line number": [
      390
     ]
    },
    "mne.io.tag._read_coord_trans_struct": {
     "line number": [
      394
     ]
    },
    "mne.io.tag._read_dig_point_struct": {
     "line number": [
      393
     ]
    },
    "mne.io.tag._read_dir_entry_struct": {
     "line number": [
      397
     ]
    },
    "mne.io.tag._read_id_struct": {
     "line number": [
      392
     ]
    },
    "mne.io.tag._read_julian": {
     "line number": [
      398
     ]
    },
    "mne.io.tag._read_old_pack": {
     "line number": [
      396
     ]
    },
    "mne.io.tag._read_simple": {
     "line number": [
      426
     ]
    },
    "mne.io.tag._read_string": {
     "line number": [
      389
     ]
    },
    "mne.io.tag._simple_dict": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tag.Tag": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "object": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io.tag.Tag.__eq__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "int": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag.Tag.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "int": {
     "line number": [
      39,
      40,
      41,
      42,
      44
     ]
    },
    "next": {
     "line number": [
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag.Tag.__repr__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._call_dict": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "mne.io.tag._call_dict_names": {
  "data": {
   "lineno": 400
  },
  "type": "constant"
 },
 "mne.io.tag._ch_coord_dict": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "mne.io.tag._coil_trans_to_loc": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      121
     ]
    },
    "numpy.roll": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._data_type": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "mne.io.tag._frombuffer_rows": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81,
      85,
      88,
      91
     ]
    },
    "int": {
     "line number": [
      94,
      95,
      96
     ]
    },
    "len": {
     "line number": [
      80,
      87
     ]
    },
    "numpy.dtype": {
     "line number": [
      79
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      100,
      104
     ]
    },
    "numpy.prod": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._is_matrix": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "mne.io.tag._loc_to_coil_trans": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.reshape": {
     "line number": [
      113
     ]
    },
    "numpy.zeros": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._loc_to_eeg_loc": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      128
     ]
    },
    "numpy.array": {
     "line number": [
      130
     ]
    },
    "numpy.isfinite": {
     "line number": [
      127,
      129
     ]
    },
    "numpy.newaxis.copy": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._matrix_bit_dtype": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_CCS": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_RCS": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_dense": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mne.io.tag._read_ch_info_struct": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      341
     ]
    },
    "float": {
     "line number": [
      345,
      346
     ]
    },
    "int": {
     "line number": [
      342,
      343,
      344,
      347,
      351,
      352
     ]
    },
    "mne.io.tag._ch_coord_dict": {
     "line number": [
      359
     ]
    },
    "numpy.argmax": {
     "line number": [
      356
     ]
    },
    "numpy.float64": {
     "line number": [
      349
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      342,
      343,
      344,
      345,
      346,
      347,
      349,
      351,
      352,
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_complex_double": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "mne.io.tag._frombuffer_rows": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_complex_float": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "mne.io.tag._frombuffer_rows": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_coord_trans_struct": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "Transform": {
     "line number": [
      327
     ]
    },
    "int": {
     "line number": [
      321,
      322
     ]
    },
    "numpy.array": {
     "line number": [
      326
     ]
    },
    "numpy.c_": {
     "line number": [
      325
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      321,
      322,
      323,
      324
     ]
    },
    "numpy.r_": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_dig_point_struct": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      312
     ]
    },
    "int": {
     "line number": [
      307,
      309
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      307,
      309,
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_dir_entry_struct": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "mne.io.tag._read_tag_header": {
     "line number": [
      379
     ]
    },
    "range": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_id_struct": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      298
     ]
    },
    "int": {
     "line number": [
      299,
      301,
      302
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      299,
      300,
      301,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_julian": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "_julian_to_cal": {
     "line number": [
      384
     ]
    },
    "int": {
     "line number": [
      384
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_matrix": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      193,
      218,
      258
     ]
    },
    "KeyError": {
     "line number": [
      199
     ]
    },
    "RuntimeError": {
     "line number": [
      200
     ]
    },
    "ValueError": {
     "line number": [
      176
     ]
    },
    "int": {
     "line number": [
      184,
      202,
      214,
      223,
      224,
      225
     ]
    },
    "len": {
     "line number": [
      234,
      248
     ]
    },
    "mne.io.tag._data_type": {
     "line number": [
      196
     ]
    },
    "mne.io.tag._matrix_bit_dtype": {
     "line number": [
      198
     ]
    },
    "mne.io.tag._matrix_coding_CCS": {
     "line number": [
      210,
      228
     ]
    },
    "mne.io.tag._matrix_coding_RCS": {
     "line number": [
      210
     ]
    },
    "mne.io.tag._matrix_coding_dense": {
     "line number": [
      180
     ]
    },
    "numpy.any": {
     "line number": [
      234,
      248
     ]
    },
    "numpy.concatenate": {
     "line number": [
      237,
      251
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      184,
      186,
      203,
      214,
      216,
      226,
      231,
      233,
      238,
      239,
      240,
      245,
      247,
      252,
      253,
      254
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      241
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_old_pack": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "float": {
     "line number": [
      369,
      370
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      369,
      370,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_simple": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "mne.io.tag._frombuffer_rows": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_string": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "mne.io.tag._frombuffer_rows": {
     "line number": [
      272
     ]
    },
    "str": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._read_tag_header": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "len": {
     "line number": [
      153
     ]
    },
    "mne.io.tag.Tag": {
     "line number": [
      156
     ]
    },
    "mne.io.tag.struct": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag._simple_dict": {
  "data": {
   "lineno": 415
  },
  "type": "constant"
 },
 "mne.io.tag.find_tag": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "mne.io.tag.read_tag": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag.has_tag": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "mne.io.tag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tag.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.tag.read_tag": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      465
     ]
    },
    "KeyError": {
     "line number": [
      464
     ]
    },
    "fun": {
     "line number": [
      466
     ]
    },
    "mne.io.tag._call_dict": {
     "line number": [
      463
     ]
    },
    "mne.io.tag._is_matrix": {
     "line number": [
      457
     ]
    },
    "mne.io.tag._read_matrix": {
     "line number": [
      459
     ]
    },
    "mne.io.tag._read_tag_header": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag.read_tag_info": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "mne.io.tag._read_tag_header": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tag.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.tag.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.io.tests": {
  "data": {
   "symbols_in_volume": {
    "os.path.dirname": {
     "line number": [
      3
     ]
    },
    "os.path.join": {
     "line number": [
      3
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.data_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.io.tests.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_apply_function.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.bad_1": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.bad_2": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.bad_3": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.printer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "mne.utils.logger.info": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.test_apply_function_verbose": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      43,
      47,
      54
     ]
    },
    "ValueError": {
     "line number": [
      45,
      49,
      56
     ]
    },
    "len": {
     "line number": [
      62
     ]
    },
    "mne.create_info": {
     "line number": [
      41
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      40
     ]
    },
    "mne.io.tests.test_apply_function.bad_1": {
     "line number": [
      44,
      48,
      55
     ]
    },
    "mne.io.tests.test_apply_function.bad_2": {
     "line number": [
      46,
      50
     ]
    },
    "mne.io.tests.test_apply_function.bad_3": {
     "line number": [
      57
     ]
    },
    "mne.io.tests.test_apply_function.printer": {
     "line number": [
      53,
      61,
      64
     ]
    },
    "mne.io.tests.test_apply_function.pytest": {
     "line number": [
      43,
      45,
      47,
      49,
      54,
      56,
      34
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      60
     ]
    },
    "numpy.zeros": {
     "line number": [
      40
     ]
    },
    "range": {
     "line number": [
      39
     ]
    },
    "str": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator": {
  "data": {
   "symbols_in_volume": {
    "mne.io.tests.test_compensator.base_dir": {
     "line number": [
      16
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      112
     ]
    },
    "os.path.dirname": {
     "line number": [
      15
     ]
    },
    "os.path.join": {
     "line number": [
      15,
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_compensator.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.base_dir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.tests.test_compensator.ctf_comp_fname": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.io.tests.test_compensator.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.make_compensator": {
  "data": {
   "shadows": "mne.io.compensator.make_compensator"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.test_compensation_apply": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "len": {
     "line number": [
      52,
      53,
      58
     ]
    },
    "list": {
     "line number": [
      52,
      53
     ]
    },
    "mne.io.compensator.get_current_comp": {
     "line number": [
      54
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      47,
      61
     ]
    },
    "mne.io.tests.test_compensator.ctf_comp_fname": {
     "line number": [
      47
     ]
    },
    "mne.io.tests.test_compensator.pytest": {
     "line number": [
      42,
      43
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      68
     ]
    },
    "os.path.join": {
     "line number": [
      59
     ]
    },
    "range": {
     "line number": [
      52,
      53
     ]
    },
    "zip": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_identity": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "mne.io.compensator.get_current_comp": {
     "line number": [
      22
     ]
    },
    "mne.io.compensator.make_compensator": {
     "line number": [
      23,
      25,
      34,
      35
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      21
     ]
    },
    "mne.io.tests.test_compensator.ctf_comp_fname": {
     "line number": [
      21
     ]
    },
    "numpy.dot": {
     "line number": [
      38,
      39
     ]
    },
    "numpy.eye": {
     "line number": [
      29
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      38,
      39
     ]
    },
    "range": {
     "line number": [
      30,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "compensate_mne": {
     "line number": [
      101
     ]
    },
    "make_evoked": {
     "line number": [
      97,
      100
     ]
    },
    "mne.io.tests.test_compensator.ctf_comp_fname": {
     "line number": [
      97,
      100
     ]
    },
    "mne.pick_types": {
     "line number": [
      102,
      103
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      73
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      104
     ]
    },
    "os.path.join": {
     "line number": [
      96
     ]
    },
    "zip": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne.compensate_mne": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "mne.read_evokeds": {
     "line number": [
      93
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne.make_evoked": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "events": {
     "line number": [
      82,
      83
     ]
    },
    "mne.Epochs": {
     "line number": [
      83
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      78
     ]
    },
    "mne.pick_types": {
     "line number": [
      81
     ]
    },
    "numpy.array": {
     "line number": [
      82
     ]
    },
    "numpy.int64": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_constants": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_constants.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.FWD": {
  "data": {
   "shadows": "mne.io.constants.FWD"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._aliases": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._ch_coil_type_named": {
  "data": {
   "shadows": "mne.io.constants._ch_coil_type_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._ch_kind_named": {
  "data": {
   "shadows": "mne.io.constants._ch_kind_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._ch_unit_mul_named": {
  "data": {
   "shadows": "mne.io.constants._ch_unit_mul_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._ch_unit_named": {
  "data": {
   "shadows": "mne.io.constants._ch_unit_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._coord_frame_named": {
  "data": {
   "shadows": "mne.io.constants._coord_frame_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._dig_cardinal_named": {
  "data": {
   "shadows": "mne.io.constants._dig_cardinal_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._dig_kind_named": {
  "data": {
   "shadows": "mne.io.constants._dig_kind_named"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._dir_ignore_names": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._fetch_file": {
  "data": {
   "shadows": "mne.utils._fetch_file"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._ignore_incomplete_enums": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._missing_coil_def": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._read_coil_defs": {
  "data": {
   "shadows": "mne.forward._make_forward._read_coil_defs"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._tag_ignore_names": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.commit": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.iod_dups": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.tag_dups": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.test_constants": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      267,
      270
     ]
    },
    "dict": {
     "line number": [
      99,
      99,
      99,
      99,
      99,
      100,
      100,
      100,
      100,
      100,
      197,
      198
     ]
    },
    "dir": {
     "line number": [
      229,
      230
     ]
    },
    "enumerate": {
     "line number": [
      145,
      181
     ]
    },
    "getattr": {
     "line number": [
      234
     ]
    },
    "int": {
     "line number": [
      122,
      139,
      165,
      189,
      202,
      213,
      304
     ]
    },
    "len": {
     "line number": [
      110,
      113,
      114,
      116,
      117,
      131,
      134,
      135,
      137,
      150,
      156,
      157,
      157,
      160,
      162,
      285,
      291,
      291,
      292,
      292,
      313,
      319
     ]
    },
    "list": {
     "line number": [
      86,
      177,
      226
     ]
    },
    "mne.forward._make_forward._read_coil_defs": {
     "line number": [
      301
     ]
    },
    "mne.io.constants.FIFF": {
     "line number": [
      229,
      230,
      234
     ]
    },
    "mne.io.constants.FIFF.FIFFC_MAJOR_VERSION": {
     "line number": [
      223
     ]
    },
    "mne.io.constants.FIFF.FIFFC_MINOR_VERSION": {
     "line number": [
      224
     ]
    },
    "mne.io.constants.FWD.COIL_ACCURACY_ACCURATE": {
     "line number": [
      305
     ]
    },
    "mne.io.tests.test_constants._aliases": {
     "line number": [
      281
     ]
    },
    "mne.io.tests.test_constants._dir_ignore_names": {
     "line number": [
      231
     ]
    },
    "mne.io.tests.test_constants._ignore_incomplete_enums": {
     "line number": [
      295
     ]
    },
    "mne.io.tests.test_constants._missing_coil_def": {
     "line number": [
      310
     ]
    },
    "mne.io.tests.test_constants._tag_ignore_names": {
     "line number": [
      266,
      277
     ]
    },
    "mne.io.tests.test_constants.commit": {
     "line number": [
      85
     ]
    },
    "mne.io.tests.test_constants.iod_dups": {
     "line number": [
      123
     ]
    },
    "mne.io.tests.test_constants.re": {
     "line number": [
      173,
      174,
      175,
      176
     ]
    },
    "mne.io.tests.test_constants.shutil": {
     "line number": [
      92
     ]
    },
    "mne.io.tests.test_constants.tag_dups": {
     "line number": [
      167
     ]
    },
    "mne.io.tests.test_constants.zipfile": {
     "line number": [
      87
     ]
    },
    "mne.utils._fetch_file": {
     "line number": [
      84
     ]
    },
    "mne.utils.requires_good_network": {
     "line number": [
      79
     ]
    },
    "numpy.array": {
     "line number": [
      302,
      303
     ]
    },
    "open": {
     "line number": [
      103,
      127,
      144,
      179
     ]
    },
    "os.path.basename": {
     "line number": [
      91
     ]
    },
    "os.path.join": {
     "line number": [
      83,
      92,
      92,
      103,
      127,
      144,
      179
     ]
    },
    "set": {
     "line number": [
      288,
      288,
      289,
      291,
      292,
      293,
      293,
      296,
      297
     ]
    },
    "sorted": {
     "line number": [
      93,
      230,
      289,
      293,
      296
     ]
    },
    "str": {
     "line number": [
      82
     ]
    },
    "zip": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_constants.test_dict_completion": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "mne.io.constants.FIFF": {
     "line number": [
      335,
      335
     ]
    },
    "mne.io.constants.FIFF.FIFFV_DIPOLE_WAVE": {
     "line number": [
      326
     ]
    },
    "mne.io.constants.FIFF.FIFFV_GOODNESS_FIT": {
     "line number": [
      326
     ]
    },
    "mne.io.constants._ch_coil_type_named": {
     "line number": [
      330
     ]
    },
    "mne.io.constants._ch_kind_named": {
     "line number": [
      325
     ]
    },
    "mne.io.constants._ch_unit_mul_named": {
     "line number": [
      329
     ]
    },
    "mne.io.constants._ch_unit_named": {
     "line number": [
      328
     ]
    },
    "mne.io.constants._coord_frame_named": {
     "line number": [
      327
     ]
    },
    "mne.io.constants._dig_cardinal_named": {
     "line number": [
      324
     ]
    },
    "mne.io.constants._dig_kind_named": {
     "line number": [
      324
     ]
    },
    "mne.io.tests.test_constants.pytest": {
     "line number": [
      323
     ]
    },
    "mne.io.tests.test_constants.re": {
     "line number": [
      334
     ]
    },
    "set": {
     "line number": [
      335,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_constants.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      46
     ]
    },
    "mne.io.tests.test_meas_info.base_dir": {
     "line number": [
      38,
      39,
      40
     ]
    },
    "mne.io.tests.test_meas_info.data_path": {
     "line number": [
      47,
      50,
      51
     ]
    },
    "mne.io.tests.test_meas_info.kit_data_dir": {
     "line number": [
      43,
      44
     ]
    },
    "mne.io.tests.test_meas_info.pre": {
     "line number": [
      49
     ]
    },
    "mne.io.tests.test_meas_info.sss_path": {
     "line number": [
      48
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      768
     ]
    },
    "os.path.dirname": {
     "line number": [
      35,
      37,
      42
     ]
    },
    "os.path.join": {
     "line number": [
      35,
      37,
      38,
      39,
      40,
      42,
      43,
      44,
      47,
      48,
      50,
      51
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_meas_info.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.DATE_NONE": {
  "data": {
   "shadows": "mne.io.write.DATE_NONE"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Info": {
  "data": {
   "shadows": "mne.io.meas_info.Info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.RAW_INFO_FIELDS": {
  "data": {
   "shadows": "mne.io.meas_info.RAW_INFO_FIELDS"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._add_timedelta_to_stamp": {
  "data": {
   "shadows": "mne.io.meas_info._add_timedelta_to_stamp"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._bad_chans_comp": {
  "data": {
   "shadows": "mne.io.meas_info._bad_chans_comp"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._coil_trans_to_loc": {
  "data": {
   "shadows": "mne.io._coil_trans_to_loc"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._dt_to_stamp": {
  "data": {
   "shadows": "mne.io.meas_info._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._force_update_info": {
  "data": {
   "shadows": "mne.io.meas_info._force_update_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._generate_meas_id": {
  "data": {
   "shadows": "mne.io.write._generate_meas_id"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._get_valid_units": {
  "data": {
   "shadows": "mne.io.meas_info._get_valid_units"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._make_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._make_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._merge_info": {
  "data": {
   "shadows": "mne.io.meas_info._merge_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._read_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._read_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._stamp_to_dt": {
  "data": {
   "shadows": "mne.io.meas_info._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._test_anonymize_info": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      585
     ]
    },
    "RuntimeWarning": {
     "line number": [
      599
     ]
    },
    "TypeError": {
     "line number": [
      501
     ]
    },
    "datetime.datetime": {
     "line number": [
      503,
      515
     ]
    },
    "datetime.timedelta": {
     "line number": [
      544,
      560,
      574
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      503,
      515
     ]
    },
    "dict": {
     "line number": [
      518
     ]
    },
    "mne.io.meas_info._add_timedelta_to_stamp": {
     "line number": [
      549,
      567
     ]
    },
    "mne.io.meas_info.anonymize_info": {
     "line number": [
      501,
      512,
      576,
      579,
      582,
      586,
      600,
      603,
      607
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      501,
      585,
      599,
      606
     ]
    },
    "mne.io.write.DATE_NONE": {
     "line number": [
      592,
      593,
      594,
      595
     ]
    },
    "mne.utils.assert_object_equal": {
     "line number": [
      577,
      580,
      583,
      604,
      608
     ]
    },
    "numpy.array": {
     "line number": [
      529
     ]
    },
    "str": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info._write_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._write_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.anonymize_info": {
  "data": {
   "shadows": "mne.io.meas_info.anonymize_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_object_equal": {
  "data": {
   "shadows": "mne.utils.assert_object_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.base_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.chpi_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.create_info": {
  "data": {
   "shadows": "mne.io.meas_info.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.ctf_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.data_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.elp_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.event_name": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.fiducials_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.hsp_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.kit_data_dir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.make_fixed_length_events": {
  "data": {
   "shadows": "mne.event.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.pre": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.raw_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.raw_invalid_bday_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_fiducials": {
  "data": {
   "shadows": "mne.io.read_fiducials"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.sss_ctc_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.sss_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.test_anonymize": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      661
     ]
    },
    "TypeError": {
     "line number": [
      632
     ]
    },
    "events": {
     "line number": [
      646,
      647
     ]
    },
    "mne.Annotations": {
     "line number": [
      636
     ]
    },
    "mne.Epochs": {
     "line number": [
      647
     ]
    },
    "mne.io.meas_info._dt_to_stamp": {
     "line number": [
      657
     ]
    },
    "mne.io.meas_info._stamp_to_dt": {
     "line number": [
      658
     ]
    },
    "mne.io.meas_info.anonymize_info": {
     "line number": [
      632
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      635
     ]
    },
    "mne.io.tests.test_meas_info._test_anonymize_info": {
     "line number": [
      649,
      650
     ]
    },
    "mne.io.tests.test_meas_info.event_name": {
     "line number": [
      646
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      632,
      661
     ]
    },
    "mne.io.tests.test_meas_info.raw_fname": {
     "line number": [
      635
     ]
    },
    "mne.read_events": {
     "line number": [
      646
     ]
    },
    "numpy.arange": {
     "line number": [
      641
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      643,
      655,
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_check_compensation_consistency": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": {
    "events": {
     "line number": [
      700,
      708,
      719
     ]
    },
    "len": {
     "line number": [
      707,
      717
     ]
    },
    "mne.Epochs": {
     "line number": [
      708,
      719
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      696
     ]
    },
    "mne.event.make_fixed_length_events": {
     "line number": [
      700
     ]
    },
    "mne.io.meas_info._bad_chans_comp": {
     "line number": [
      705,
      715
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      699
     ]
    },
    "mne.io.tests.test_meas_info.ctf_fname": {
     "line number": [
      699
     ]
    },
    "mne.pick_types": {
     "line number": [
      701,
      710
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      718
     ]
    },
    "zip": {
     "line number": [
      703,
      713
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_check_consistency": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      491,
      495
     ]
    },
    "RuntimeError": {
     "line number": [
      431,
      464
     ]
    },
    "RuntimeWarning": {
     "line number": [
      448,
      467
     ]
    },
    "TypeError": {
     "line number": [
      482
     ]
    },
    "ValueError": {
     "line number": [
      436,
      440,
      444
     ]
    },
    "float": {
     "line number": [
      457,
      458,
      459
     ]
    },
    "isinstance": {
     "line number": [
      457,
      458,
      459
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      419,
      425,
      468
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      431,
      436,
      440,
      444,
      448,
      464,
      467,
      482,
      491,
      495
     ]
    },
    "numpy.ones": {
     "line number": [
      476
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      469
     ]
    },
    "numpy.zeros": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_coil_trans": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "mne.io._coil_trans_to_loc": {
     "line number": [
      91,
      93
     ]
    },
    "mne.io._loc_to_coil_trans": {
     "line number": [
      91,
      93
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      88
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      91,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_create_info_grad": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_VV_PLANAR_T1": {
     "line number": [
      73
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      69
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      55
     ]
    },
    "mne.pick_types": {
     "line number": [
      74
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_csr_csc": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      676,
      681,
      685,
      692
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      668
     ]
    },
    "mne.io.read_info": {
     "line number": [
      671,
      679,
      690
     ]
    },
    "mne.io.tests.test_meas_info.sss_ctc_fname": {
     "line number": [
      671
     ]
    },
    "mne.io.write_info": {
     "line number": [
      678,
      689
     ]
    },
    "mne.pick_info": {
     "line number": [
      672
     ]
    },
    "mne.pick_types": {
     "line number": [
      672
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      682,
      686,
      693
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      676,
      681,
      692
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_duplicate_name_correction": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      132,
      137
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_equalize_channels": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "mne.channels.equalize_channels": {
     "line number": [
      744
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      742,
      743
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_fiducials_io": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      158
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_MRI": {
     "line number": [
      143
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL": {
     "line number": [
      144
     ]
    },
    "mne.io.read_fiducials": {
     "line number": [
      142,
      148
     ]
    },
    "mne.io.tests.test_meas_info.fiducials_fname": {
     "line number": [
      142
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      158
     ]
    },
    "mne.io.write_fiducials": {
     "line number": [
      147,
      158
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      154
     ]
    },
    "zip": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_field_round_trip": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      729,
      731
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      726
     ]
    },
    "mne.io.read_info": {
     "line number": [
      735
     ]
    },
    "mne.io.write._generate_meas_id": {
     "line number": [
      728
     ]
    },
    "mne.io.write_info": {
     "line number": [
      734
     ]
    },
    "mne.utils.assert_object_equal": {
     "line number": [
      737
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_get_valid_units": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "all": {
     "line number": [
      82
     ]
    },
    "isinstance": {
     "line number": [
      81,
      82
     ]
    },
    "mne.io.meas_info._get_valid_units": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      82
     ]
    },
    "tuple": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_info": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      215
     ]
    },
    "events": {
     "line number": [
      165,
      166,
      167
     ]
    },
    "func": {
     "line number": [
      191
     ]
    },
    "int": {
     "line number": [
      166
     ]
    },
    "isinstance": {
     "line number": [
      180
     ]
    },
    "len": {
     "line number": [
      195
     ]
    },
    "list": {
     "line number": [
      198,
      208
     ]
    },
    "mne.Epochs": {
     "line number": [
      167
     ]
    },
    "mne.io.meas_info.Info": {
     "line number": [
      172,
      180,
      216
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      163
     ]
    },
    "mne.io.tests.test_meas_info.event_name": {
     "line number": [
      165
     ]
    },
    "mne.io.tests.test_meas_info.raw_fname": {
     "line number": [
      163
     ]
    },
    "mne.read_events": {
     "line number": [
      165
     ]
    },
    "repr": {
     "line number": [
      181,
      184,
      189
     ]
    },
    "str": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_invalid_subject_birthday": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      763
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      760
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      764
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      763
     ]
    },
    "mne.io.tests.test_meas_info.raw_invalid_bday_fname": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_io_dig_points": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      296,
      298,
      307
     ]
    },
    "mne.io._digitization._read_dig_points": {
     "line number": [
      292,
      301,
      308
     ]
    },
    "mne.io._digitization._write_dig_points": {
     "line number": [
      297,
      299,
      300
     ]
    },
    "mne.io.tests.test_meas_info.hsp_fname": {
     "line number": [
      292
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      296,
      298,
      307
     ]
    },
    "numpy.array": {
     "line number": [
      305
     ]
    },
    "numpy.savetxt": {
     "line number": [
      306
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      303
     ]
    },
    "str": {
     "line number": [
      294,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_make_dig_points": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      331,
      332,
      333,
      334,
      336
     ]
    },
    "mne.io._digitization._make_dig_points": {
     "line number": [
      317,
      326,
      331,
      332,
      333,
      334,
      336
     ]
    },
    "mne.io._digitization._read_dig_points": {
     "line number": [
      313,
      321
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_NASION": {
     "line number": [
      328
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      314,
      323
     ]
    },
    "mne.io.tests.test_meas_info.elp_fname": {
     "line number": [
      321
     ]
    },
    "mne.io.tests.test_meas_info.hsp_fname": {
     "line number": [
      313
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      331,
      332,
      333,
      334,
      336
     ]
    },
    "numpy.array": {
     "line number": [
      330
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      319
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_make_info": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      111,
      113
     ]
    },
    "TypeError": {
     "line number": [
      105,
      109,
      115
     ]
    },
    "ValueError": {
     "line number": [
      106,
      107
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      117
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      103
     ]
    },
    "mne.io.meas_info.RAW_INFO_FIELDS": {
     "line number": [
      100
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      99,
      105,
      106,
      107,
      109,
      111,
      113,
      115,
      118
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      105,
      106,
      107,
      109,
      111,
      113,
      115
     ]
    },
    "numpy.array": {
     "line number": [
      109,
      112,
      116,
      122
     ]
    },
    "numpy.longlong": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      126
     ]
    },
    "set": {
     "line number": [
      100,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_meas_date_convert": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      623
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      623
     ]
    },
    "mne.io.meas_info._dt_to_stamp": {
     "line number": [
      621
     ]
    },
    "mne.io.meas_info._stamp_to_dt": {
     "line number": [
      620
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      625
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      611
     ]
    },
    "repr": {
     "line number": [
      627
     ]
    },
    "str": {
     "line number": [
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_merge_info": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      372
     ]
    },
    "ValueError": {
     "line number": [
      367,
      379,
      387,
      400
     ]
    },
    "dict": {
     "line number": [
      380
     ]
    },
    "len": {
     "line number": [
      404,
      405,
      409,
      410,
      411,
      412,
      413,
      414
     ]
    },
    "mne.io.meas_info._force_update_info": {
     "line number": [
      373,
      379
     ]
    },
    "mne.io.meas_info._merge_info": {
     "line number": [
      364,
      367,
      372,
      377,
      383,
      385,
      387,
      391,
      395,
      397,
      400,
      408
     ]
    },
    "mne.io.meas_info.create_info": {
     "line number": [
      362,
      363,
      370,
      390,
      406
     ]
    },
    "mne.io.read_info": {
     "line number": [
      402
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      367,
      372,
      379,
      387,
      400
     ]
    },
    "mne.io.tests.test_meas_info.raw_fname": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_read_write_info": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      286
     ]
    },
    "datetime.datetime": {
     "line number": [
      283
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      283
     ]
    },
    "len": {
     "line number": [
      230,
      230
     ]
    },
    "mne.io.meas_info.anonymize_info": {
     "line number": [
      274
     ]
    },
    "mne.io.read_info": {
     "line number": [
      222,
      228,
      234,
      247,
      272,
      279
     ]
    },
    "mne.io.tests.test_meas_info.chpi_fname": {
     "line number": [
      234
     ]
    },
    "mne.io.tests.test_meas_info.hashlib": {
     "line number": [
      259,
      266
     ]
    },
    "mne.io.tests.test_meas_info.pytest": {
     "line number": [
      286
     ]
    },
    "mne.io.tests.test_meas_info.raw_fname": {
     "line number": [
      222,
      272
     ]
    },
    "mne.io.write_info": {
     "line number": [
      227,
      246,
      265,
      277,
      287
     ]
    },
    "numpy.eye": {
     "line number": [
      225
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      231,
      256
     ]
    },
    "open": {
     "line number": [
      260,
      267
     ]
    },
    "str": {
     "line number": [
      223,
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_redundant": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "mne.io.meas_info.create_info": {
     "line number": [
      343,
      353,
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_repr": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": {
    "mne.io.meas_info.create_info": {
     "line number": [
      752
     ]
    },
    "mne.transforms.Transform": {
     "line number": [
      755
     ]
    },
    "numpy.ones": {
     "line number": [
      755
     ]
    },
    "repr": {
     "line number": [
      753,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.write_fiducials": {
  "data": {
   "shadows": "mne.io.write_fiducials"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.write_info": {
  "data": {
   "shadows": "mne.io.write_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick": {
  "data": {
   "symbols_in_volume": {
    "mne.__file__": {
     "line number": [
      28
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.io.tests.test_pick.data_path": {
     "line number": [
      24,
      26
     ]
    },
    "mne.io.tests.test_pick.io_dir": {
     "line number": [
      29,
      30
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      592
     ]
    },
    "os.path.dirname": {
     "line number": [
      28
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      26,
      28,
      29,
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_pick.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._assert_channel_types": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "mne.io.pick.channel_type": {
     "line number": [
      86
     ]
    },
    "mne.io.tests.test_pick._channel_type_old": {
     "line number": [
      86
     ]
    },
    "range": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._channel_type_old": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      73
     ]
    },
    "mne.io.pick.get_channel_type_constants": {
     "line number": [
      73
     ]
    },
    "numpy.array": {
     "line number": [
      76
     ]
    },
    "sorted": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._check_fwd_n_chan_consistent": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "len": {
     "line number": [
      299
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      301,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._contains_ch_type": {
  "data": {
   "shadows": "mne.io.pick._contains_ch_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._get_channel_types": {
  "data": {
   "shadows": "mne.io.pick._get_channel_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._picks_by_type_old": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      38
     ]
    },
    "mne.io.pick._DATA_CH_TYPES_SPLIT": {
     "line number": [
      37,
      38,
      54
     ]
    },
    "mne.io.pick._contains_ch_type": {
     "line number": [
      37
     ]
    },
    "mne.pick_types": {
     "line number": [
      41,
      46,
      51,
      59
     ]
    },
    "zip": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._picks_to_idx": {
  "data": {
   "shadows": "mne.io.pick._picks_to_idx"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._root_init_fname": {
  "data": {
   "shadows": "mne.__file__"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_indexing": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      205
     ]
    },
    "copy.deepcopy": {
     "line number": [
      213
     ]
    },
    "int": {
     "line number": [
      201
     ]
    },
    "len": {
     "line number": [
      196
     ]
    },
    "mne.io.pick._DATA_CH_TYPES_SPLIT": {
     "line number": [
      200
     ]
    },
    "mne.io.pick._picks_by_type": {
     "line number": [
      202,
      215
     ]
    },
    "mne.io.pick.channel_indices_by_type": {
     "line number": [
      189
     ]
    },
    "mne.io.tests.test_pick._assert_channel_types": {
     "line number": [
      186
     ]
    },
    "mne.io.tests.test_pick._picks_by_type_old": {
     "line number": [
      206,
      208
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      205
     ]
    },
    "mne.utils.assert_object_equal": {
     "line number": [
      203,
      209,
      216
     ]
    },
    "numpy.array": {
     "line number": [
      201
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.assert_object_equal": {
  "data": {
   "shadows": "mne.utils.assert_object_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.channel_type": {
  "data": {
   "shadows": "mne.io.pick.channel_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.ctf_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.fif_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.fname_mc": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.fname_meeg": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.get_channel_type_constants": {
  "data": {
   "shadows": "mne.io.pick.get_channel_type_constants"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.io_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels_cov": {
  "data": {
   "shadows": "mne.io.pick.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels_regexp": {
  "data": {
   "shadows": "mne.pick_channels_regexp"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_types_forward": {
  "data": {
   "shadows": "mne.io.pick.pick_types_forward"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.rename_channels": {
  "data": {
   "shadows": "mne.rename_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.test_clean_info_bads": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      441
     ]
    },
    "ValueError": {
     "line number": [
      442
     ]
    },
    "mne.__file__": {
     "line number": [
      407
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      409
     ]
    },
    "mne.io.tests.test_pick._assert_channel_types": {
     "line number": [
      410
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      441,
      442
     ]
    },
    "mne.pick_info": {
     "line number": [
      430,
      433,
      438,
      443
     ]
    },
    "mne.pick_types": {
     "line number": [
      413,
      420
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      435,
      436
     ]
    },
    "os.path.dirname": {
     "line number": [
      407
     ]
    },
    "os.path.join": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_get_channel_types_equiv": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      584
     ]
    },
    "mne.io.pick.channel_type": {
     "line number": [
      588
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      578
     ]
    },
    "mne.io.tests.test_pick.fif_fname": {
     "line number": [
      578
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      584,
      573,
      574,
      575
     ]
    },
    "mne.pick_types": {
     "line number": [
      579,
      580
     ]
    },
    "numpy.array": {
     "line number": [
      587,
      588
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      582
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_bio": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      268
     ]
    },
    "mne.io.tests.test_pick.assert_indexing": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_channels_cov": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      526
     ]
    },
    "mne.io.pick.pick_channels_cov": {
     "line number": [
      530,
      535,
      540,
      547
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      527
     ]
    },
    "numpy.array": {
     "line number": [
      528
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      532,
      537,
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_channels_regexp": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "mne.pick_channels_regexp": {
     "line number": [
      178,
      179,
      180
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      178,
      179,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_chpi": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "mne.io.pick._get_channel_types": {
     "line number": [
      248
     ]
    },
    "mne.io.read_info": {
     "line number": [
      246
     ]
    },
    "mne.io.tests.test_pick._assert_channel_types": {
     "line number": [
      247
     ]
    },
    "mne.io.tests.test_pick.io_dir": {
     "line number": [
      246
     ]
    },
    "os.path.join": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_csd": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      259
     ]
    },
    "mne.io.tests.test_pick.assert_indexing": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_fnirs": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      278
     ]
    },
    "mne.io.tests.test_pick.assert_indexing": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_forward_seeg_ecog": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      318,
      319
     ]
    },
    "len": {
     "line number": [
      311
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      305
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      328,
      331
     ]
    },
    "mne.io.constants.FIFF.FIFFV_ECOG_CH": {
     "line number": [
      330
     ]
    },
    "mne.io.constants.FIFF.FIFFV_SEEG_CH": {
     "line number": [
      327
     ]
    },
    "mne.io.pick.channel_indices_by_type": {
     "line number": [
      309
     ]
    },
    "mne.io.pick.pick_types_forward": {
     "line number": [
      313,
      315,
      318,
      319,
      338,
      342,
      344,
      346,
      348
     ]
    },
    "mne.io.tests.test_pick._check_fwd_n_chan_consistent": {
     "line number": [
      314,
      316,
      343,
      345,
      347,
      349
     ]
    },
    "mne.io.tests.test_pick.fname_meeg": {
     "line number": [
      308
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      318,
      319
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      308
     ]
    },
    "mne.rename_channels": {
     "line number": [
      323,
      324
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      339,
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_ref": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "mne.io.read_info": {
     "line number": [
      287
     ]
    },
    "mne.io.tests.test_pick.assert_indexing": {
     "line number": [
      292,
      295
     ]
    },
    "mne.io.tests.test_pick.ctf_fname": {
     "line number": [
      287
     ]
    },
    "numpy.arange": {
     "line number": [
      290,
      291
     ]
    },
    "numpy.concatenate": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_refs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      115,
      116
     ]
    },
    "len": {
     "line number": [
      145,
      158,
      162,
      165,
      169
     ]
    },
    "list": {
     "line number": [
      92
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      106
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      110
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      99
     ]
    },
    "mne.io.tests.test_pick._assert_channel_types": {
     "line number": [
      114
     ]
    },
    "mne.io.tests.test_pick.io_dir": {
     "line number": [
      94,
      102,
      109
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      115,
      116
     ]
    },
    "mne.pick_info": {
     "line number": [
      146,
      159,
      164
     ]
    },
    "mne.pick_types": {
     "line number": [
      115,
      116,
      117,
      118,
      119,
      122,
      123,
      124,
      128,
      129,
      130,
      151,
      152,
      153,
      154,
      155,
      156,
      167
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      163
     ]
    },
    "numpy.arange": {
     "line number": [
      170
     ]
    },
    "numpy.concatenate": {
     "line number": [
      121,
      126,
      132,
      135,
      137,
      139,
      171
     ]
    },
    "numpy.sort": {
     "line number": [
      121,
      126,
      132,
      135,
      137,
      139
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      120,
      125,
      131,
      134,
      136,
      139,
      171,
      172
     ]
    },
    "os.path.join": {
     "line number": [
      94,
      95,
      96,
      97,
      98,
      102,
      103,
      104,
      105,
      109
     ]
    },
    "set": {
     "line number": [
      168,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_seeg_ecog": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      228
     ]
    },
    "events": {
     "line number": [
      231,
      232
     ]
    },
    "len": {
     "line number": [
      230,
      240
     ]
    },
    "mne.Epochs": {
     "line number": [
      232
     ]
    },
    "mne.create_info": {
     "line number": [
      223
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      230
     ]
    },
    "mne.io.pick.channel_type": {
     "line number": [
      229
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      238
     ]
    },
    "mne.io.tests.test_pick.assert_indexing": {
     "line number": [
      226
     ]
    },
    "mne.io.tests.test_pick.io_dir": {
     "line number": [
      238
     ]
    },
    "mne.pick_types": {
     "line number": [
      227,
      233,
      240
     ]
    },
    "numpy.array": {
     "line number": [
      231
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      227
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      229,
      240
     ]
    },
    "numpy.zeros": {
     "line number": [
      230
     ]
    },
    "os.path.join": {
     "line number": [
      238
     ]
    },
    "zip": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_types_deprecation": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "list": {
     "line number": [
      558,
      559,
      561,
      562,
      563,
      564,
      569,
      570
     ]
    },
    "mne.create_info": {
     "line number": [
      555,
      567
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      557
     ]
    },
    "mne.pick_types": {
     "line number": [
      558,
      559,
      561,
      562,
      563,
      564,
      569,
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_picks_by_channels": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      386,
      387,
      397
     ]
    },
    "len": {
     "line number": [
      365,
      368,
      368,
      372,
      372,
      390,
      393,
      393,
      401,
      402
     ]
    },
    "mne.create_info": {
     "line number": [
      360,
      379
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      362,
      380
     ]
    },
    "mne.io.pick._picks_by_type": {
     "line number": [
      364,
      367,
      371,
      389,
      392
     ]
    },
    "mne.io.tests.test_pick._assert_channel_types": {
     "line number": [
      361
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      386,
      387,
      397
     ]
    },
    "mne.pick_channels": {
     "line number": [
      382,
      386,
      387,
      401
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      354
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      382
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      365,
      366,
      368,
      369,
      372,
      373,
      390,
      391,
      393,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_picks_to_idx": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      498
     ]
    },
    "TypeError": {
     "line number": [
      455
     ]
    },
    "ValueError": {
     "line number": [
      470,
      472,
      474,
      476,
      485,
      500
     ]
    },
    "dict": {
     "line number": [
      501
     ]
    },
    "len": {
     "line number": [
      463,
      463,
      464,
      465,
      471,
      473,
      507,
      515,
      519
     ]
    },
    "list": {
     "line number": [
      454,
      480
     ]
    },
    "mne.create_info": {
     "line number": [
      449,
      497,
      501,
      502,
      506,
      510,
      514,
      518
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      446
     ]
    },
    "mne.io.pick._picks_to_idx": {
     "line number": [
      453,
      454,
      456,
      458,
      460,
      461,
      463,
      464,
      465,
      467,
      469,
      471,
      473,
      475,
      477,
      481,
      482,
      484,
      486,
      492,
      493,
      494,
      495,
      499,
      503,
      504,
      505,
      508,
      509,
      511,
      512,
      513,
      516,
      517,
      520,
      521
     ]
    },
    "mne.io.read_info": {
     "line number": [
      488
     ]
    },
    "mne.io.tests.test_pick._assert_channel_types": {
     "line number": [
      450
     ]
    },
    "mne.io.tests.test_pick.fname_mc": {
     "line number": [
      488
     ]
    },
    "mne.io.tests.test_pick.pytest": {
     "line number": [
      455,
      470,
      472,
      474,
      476,
      485,
      498,
      500
     ]
    },
    "numpy.arange": {
     "line number": [
      451,
      468,
      489,
      490,
      503,
      507,
      511,
      515,
      519
     ]
    },
    "numpy.array": {
     "line number": [
      480
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      491
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      453,
      454,
      458,
      460,
      461,
      463,
      464,
      465,
      467,
      468,
      481,
      482,
      484,
      492,
      493,
      494,
      495,
      503,
      504,
      505,
      507,
      509,
      511,
      512,
      513,
      515,
      517,
      519,
      521
     ]
    },
    "range": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history": {
  "data": {
   "symbols_in_volume": {
    "mne.io.tests.test_proc_history.base_dir": {
     "line number": [
      14
     ]
    },
    "os.path.dirname": {
     "line number": [
      13
     ]
    },
    "os.path.join": {
     "line number": [
      13,
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_proc_history.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.base_dir": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.tests.test_proc_history.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.raw_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.tests.test_proc_history.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.test_maxfilter_io": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "all": {
     "line number": [
      38
     ]
    },
    "len": {
     "line number": [
      26
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      22
     ]
    },
    "mne.io.constants.FIFF.items": {
     "line number": [
      37
     ]
    },
    "mne.io.read_info": {
     "line number": [
      19
     ]
    },
    "mne.io.tests.test_proc_history.raw_fname": {
     "line number": [
      19
     ]
    },
    "numpy.array": {
     "line number": [
      34
     ]
    },
    "numpy.diag": {
     "line number": [
      33
     ]
    },
    "numpy.float32": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      32
     ]
    },
    "numpy.unique": {
     "line number": [
      33
     ]
    },
    "set": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw": {
  "data": {},
  "type": "module"
 },
 "mne.io.tests.test_raw.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.BaseRaw": {
  "data": {
   "shadows": "mne.io.BaseRaw"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.DigPoint": {
  "data": {
   "shadows": "mne.io._digitization.DigPoint"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.Info": {
  "data": {
   "shadows": "mne.io.Info"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.Projection": {
  "data": {
   "shadows": "mne.io.proj.Projection"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._RawArange": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "mne.io.BaseRaw": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.io.tests.test_raw._RawArange.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "len": {
     "line number": [
      525
     ]
    },
    "list": {
     "line number": [
      523
     ]
    },
    "mne.create_info": {
     "line number": [
      523
     ]
    },
    "range": {
     "line number": [
      523
     ]
    },
    "str": {
     "line number": [
      523
     ]
    },
    "super": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._RawArange._read_segment_file": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "mne.io.utils._mult_cal_one": {
     "line number": [
      530
     ]
    },
    "numpy.arange": {
     "line number": [
      529
     ]
    },
    "numpy.full": {
     "line number": [
      528
     ]
    },
    "numpy.nan": {
     "line number": [
      528
     ]
    },
    "numpy.newaxis": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._get_valid_units": {
  "data": {
   "shadows": "mne.io.meas_info._get_valid_units"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._mult_cal_one": {
  "data": {
   "shadows": "mne.io.utils._mult_cal_one"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._raw_annot": {
  "data": {
   "shadows": "mne.utils._raw_annot"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._read_raw_arange": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "mne.io.tests.test_raw._RawArange": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._test_concat": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      364
     ]
    },
    "numpy.argmin": {
     "line number": [
      364
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      357,
      375
     ]
    },
    "reader": {
     "line number": [
      351,
      352,
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._test_raw_reader": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      149
     ]
    },
    "cmp": {
     "line number": [
      203,
      204,
      205
     ]
    },
    "dict": {
     "line number": [
      134,
      207,
      302,
      308,
      308,
      310
     ]
    },
    "enumerate": {
     "line number": [
      243
     ]
    },
    "int": {
     "line number": [
      99
     ]
    },
    "isinstance": {
     "line number": [
      235,
      242,
      244,
      295,
      302,
      317
     ]
    },
    "len": {
     "line number": [
      97,
      98,
      131,
      135,
      137,
      139,
      156,
      174,
      203,
      204,
      205,
      220,
      311
     ]
    },
    "list": {
     "line number": [
      235,
      242
     ]
    },
    "min": {
     "line number": [
      99
     ]
    },
    "mne.Annotations": {
     "line number": [
      295
     ]
    },
    "mne.concatenate_raws": {
     "line number": [
      258,
      277
     ]
    },
    "mne.externals.h5io.read_hdf5": {
     "line number": [
      341
     ]
    },
    "mne.externals.h5io.write_hdf5": {
     "line number": [
      340
     ]
    },
    "mne.io.Info": {
     "line number": [
      341
     ]
    },
    "mne.io._digitization.DigPoint": {
     "line number": [
      244
     ]
    },
    "mne.io._writing_info_hdf5": {
     "line number": [
      339
     ]
    },
    "mne.io.meas_info._get_valid_units": {
     "line number": [
      299
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      133
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      260
     ]
    },
    "mne.io.tests.test_raw.assert_named_constants": {
     "line number": [
      230,
      261
     ]
    },
    "mne.io.tests.test_raw.math": {
     "line number": [
      267,
      268,
      269,
      270
     ]
    },
    "mne.io.tests.test_raw.pytest": {
     "line number": [
      149
     ]
    },
    "mne.pick_types": {
     "line number": [
      128
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      82
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      248
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      337
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      342
     ]
    },
    "numpy.abs": {
     "line number": [
      186
     ]
    },
    "numpy.append": {
     "line number": [
      98
     ]
    },
    "numpy.arange": {
     "line number": [
      97,
      156
     ]
    },
    "numpy.argsort": {
     "line number": [
      161
     ]
    },
    "numpy.concatenate": {
     "line number": [
      157
     ]
    },
    "numpy.equal": {
     "line number": [
      198
     ]
    },
    "numpy.less": {
     "line number": [
      196
     ]
    },
    "numpy.linalg.matrix_rank": {
     "line number": [
      199,
      200,
      201,
      202
     ]
    },
    "numpy.mean": {
     "line number": [
      185
     ]
    },
    "numpy.median": {
     "line number": [
      191,
      193
     ]
    },
    "numpy.ones": {
     "line number": [
      131
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      83
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      160
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      112,
      113,
      167,
      171,
      209,
      210,
      212,
      213,
      214,
      224,
      226,
      227,
      263
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      265,
      285
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      162,
      163,
      254,
      292,
      330,
      331,
      332,
      333
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      189,
      191
     ]
    },
    "numpy.where": {
     "line number": [
      281
     ]
    },
    "os.path.isfile": {
     "line number": [
      318
     ]
    },
    "os.path.join": {
     "line number": [
      96,
      257,
      338
     ]
    },
    "print": {
     "line number": [
      321
     ]
    },
    "reader": {
     "line number": [
      89,
      106,
      107,
      116,
      229,
      252,
      320
     ]
    },
    "repr": {
     "line number": [
      90,
      233,
      234
     ]
    },
    "round": {
     "line number": [
      99
     ]
    },
    "set": {
     "line number": [
      253,
      253,
      262,
      262
     ]
    },
    "slice": {
     "line number": [
      101,
      101,
      101,
      102,
      102,
      102,
      104,
      104,
      105
     ]
    },
    "str": {
     "line number": [
      317
     ]
    },
    "type": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._writing_info_hdf5": {
  "data": {
   "shadows": "mne.io._writing_info_hdf5"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_named_constants": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.io.tests.test_raw.re": {
     "line number": [
      36,
      36
     ]
    },
    "repr": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.read_hdf5": {
  "data": {
   "shadows": "mne.externals.h5io.read_hdf5"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.test_5839": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "mne.utils._stamp_to_dt": {
     "line number": [
      507
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      504,
      505,
      506
     ]
    },
    "raw_factory": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_5839.raw_factory": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "mne.Annotations": {
     "line number": [
      495
     ]
    },
    "mne.create_info": {
     "line number": [
      492
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      491
     ]
    },
    "numpy.empty": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_get_data_reject": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "len": {
     "line number": [
      448,
      457,
      463
     ]
    },
    "mne.Annotations": {
     "line number": [
      449
     ]
    },
    "mne.create_info": {
     "line number": [
      447
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      448
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      452,
      458
     ]
    },
    "numpy.isnan": {
     "line number": [
      464
     ]
    },
    "numpy.zeros": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_meas_date_orig_time": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      432
     ]
    },
    "mne.io.tests.test_raw.pytest": {
     "line number": [
      432
     ]
    },
    "mne.utils._raw_annot": {
     "line number": [
      417,
      424,
      433,
      437
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      418,
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_orig_units": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      47,
      52
     ]
    },
    "mne.create_info": {
     "line number": [
      42,
      48,
      53
     ]
    },
    "mne.io.BaseRaw": {
     "line number": [
      43,
      49,
      54
     ]
    },
    "mne.io.tests.test_raw.pytest": {
     "line number": [
      47,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_repr": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      513
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      514
     ]
    },
    "mne.io.tests.test_raw.re": {
     "line number": [
      515
     ]
    },
    "numpy.zeros": {
     "line number": [
      514
     ]
    },
    "repr": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_test_raw_reader": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "mne.io.tests.test_raw._read_raw_arange": {
     "line number": [
      539
     ]
    },
    "mne.io.tests.test_raw._test_raw_reader": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_time_as_index": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "len": {
     "line number": [
      387,
      387,
      391
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      378
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      383
     ]
    },
    "numpy.arange": {
     "line number": [
      391
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      391
     ]
    },
    "os.path.dirname": {
     "line number": [
      381
     ]
    },
    "os.path.join": {
     "line number": [
      381
     ]
    },
    "set": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_time_as_index_ref": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      401
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      402
     ]
    },
    "mne.io.tests.test_raw.pytest": {
     "line number": [
      394,
      395,
      396,
      397,
      398
     ]
    },
    "numpy.arange": {
     "line number": [
      409
     ]
    },
    "numpy.empty": {
     "line number": [
      402
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.write_hdf5": {
  "data": {
   "shadows": "mne.externals.h5io.write_hdf5"
  },
  "type": "import"
 },
 "mne.io.tests.test_read_raw": {
  "data": {
   "symbols_in_volume": {
    "pathlib.Path": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_read_raw.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.io.tests.test_read_raw.base": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.tests.test_read_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_read_raw.read_raw": {
  "data": {
   "shadows": "mne.io.read_raw"
  },
  "type": "import"
 },
 "mne.io.tests.test_read_raw.test_read_raw_suggested": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      25
     ]
    },
    "mne.io.read_raw": {
     "line number": [
      26
     ]
    },
    "mne.io.tests.test_read_raw.pytest": {
     "line number": [
      25,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_read_raw.test_read_raw_supported": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.io.read_raw": {
     "line number": [
      35,
      36,
      37
     ]
    },
    "mne.io.tests.test_read_raw.base": {
     "line number": [
      29,
      30,
      31,
      32
     ]
    },
    "mne.io.tests.test_read_raw.pytest": {
     "line number": [
      29
     ]
    },
    "str": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_read_raw.test_read_raw_unsupported": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      18
     ]
    },
    "mne.io.read_raw": {
     "line number": [
      19
     ]
    },
    "mne.io.tests.test_read_raw.pytest": {
     "line number": [
      18,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      31
     ]
    },
    "mne.io.tests.test_reference.base_dir": {
     "line number": [
      29
     ]
    },
    "mne.io.tests.test_reference.data_dir": {
     "line number": [
      32,
      33,
      34
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      645
     ]
    },
    "os.path.dirname": {
     "line number": [
      28
     ]
    },
    "os.path.join": {
     "line number": [
      28,
      29,
      31,
      32,
      33,
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_reference.BaseEpochs": {
  "data": {
   "shadows": "mne.epochs.BaseEpochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.Projection": {
  "data": {
   "shadows": "mne.io.proj.Projection"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._apply_reference": {
  "data": {
   "shadows": "mne.io.reference._apply_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._check_channel_names": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      404
     ]
    },
    "len": {
     "line number": [
      409,
      409
     ]
    },
    "mne.pick_channels": {
     "line number": [
      408
     ]
    },
    "str": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._test_reference": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      68
     ]
    },
    "mne.epochs.BaseEpochs": {
     "line number": [
      68
     ]
    },
    "mne.pick_types": {
     "line number": [
      40,
      41
     ]
    },
    "numpy.newaxis": {
     "line number": [
      69
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      64,
      72
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.add_reference_channels": {
  "data": {
   "shadows": "mne.add_reference_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.ave_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.base_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.data_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.eve_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.fif_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.nullcontext": {
  "data": {
   "shadows": "mne.fixes.nullcontext"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_channels_forward": {
  "data": {
   "shadows": "mne.pick_channels_forward"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.raw_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.set_bipolar_reference": {
  "data": {
   "shadows": "mne.set_bipolar_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.set_eeg_reference": {
  "data": {
   "shadows": "mne.set_eeg_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.test_add_reference": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      487,
      564
     ]
    },
    "RuntimeWarning": {
     "line number": [
      510,
      550
     ]
    },
    "TypeError": {
     "line number": [
      569
     ]
    },
    "ValueError": {
     "line number": [
      422,
      463,
      567
     ]
    },
    "events": {
     "line number": [
      482,
      484,
      490,
      505,
      508,
      526,
      529,
      544,
      547
     ]
    },
    "mne.Epochs": {
     "line number": [
      484,
      490,
      508,
      529,
      547
     ]
    },
    "mne.add_reference_channels": {
     "line number": [
      422,
      425,
      431,
      450,
      457,
      463,
      467,
      473,
      487,
      492,
      511,
      532,
      551,
      565,
      568,
      570
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      416
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      419,
      446,
      481,
      504,
      525,
      543,
      563
     ]
    },
    "mne.io.tests.test_reference._check_channel_names": {
     "line number": [
      428,
      434,
      454,
      460,
      468,
      474,
      495,
      513,
      534,
      553
     ]
    },
    "mne.io.tests.test_reference.eve_fname": {
     "line number": [
      482,
      505,
      526,
      544
     ]
    },
    "mne.io.tests.test_reference.fif_fname": {
     "line number": [
      419,
      446,
      481,
      504,
      525,
      543,
      563
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      422,
      463,
      487,
      510,
      550,
      564,
      567,
      569
     ]
    },
    "mne.pick_types": {
     "line number": [
      420,
      447,
      483,
      499,
      506,
      520,
      527,
      538,
      545,
      558
     ]
    },
    "mne.read_events": {
     "line number": [
      482,
      505,
      526,
      544
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      438
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      427,
      432,
      443,
      453,
      458,
      470,
      471,
      478,
      498,
      500,
      519,
      521,
      537,
      539,
      557,
      559
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      426,
      433,
      452,
      459,
      469,
      494,
      512,
      516,
      517,
      533,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_add_reorder": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      580
     ]
    },
    "RuntimeWarning": {
     "line number": [
      588
     ]
    },
    "len": {
     "line number": [
      578
     ]
    },
    "mne.add_reference_channels": {
     "line number": [
      582,
      590
     ]
    },
    "mne.fixes.nullcontext": {
     "line number": [
      585
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      577
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      580,
      581,
      588,
      573
     ]
    },
    "mne.io.tests.test_reference.raw_fname": {
     "line number": [
      577
     ]
    },
    "numpy.concatenate": {
     "line number": [
      597
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      598
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      592
     ]
    },
    "range": {
     "line number": [
      579,
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_apply_reference": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      117,
      137,
      145
     ]
    },
    "dict": {
     "line number": [
      125
     ]
    },
    "events": {
     "line number": [
      99,
      101
     ]
    },
    "mne.Epochs": {
     "line number": [
      101
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      75
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MNE_CUSTOM_REF_CSD": {
     "line number": [
      144
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      123
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      87
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      78,
      98,
      116,
      121
     ]
    },
    "mne.io.reference._apply_reference": {
     "line number": [
      81,
      90,
      94,
      103,
      110,
      117,
      138,
      141
     ]
    },
    "mne.io.tests.test_reference._test_reference": {
     "line number": [
      84,
      106,
      113
     ]
    },
    "mne.io.tests.test_reference.eve_fname": {
     "line number": [
      99
     ]
    },
    "mne.io.tests.test_reference.fif_fname": {
     "line number": [
      78,
      98,
      116,
      121
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      117,
      137,
      145
     ]
    },
    "mne.pick_types": {
     "line number": [
      100
     ]
    },
    "mne.read_events": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      128
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_bipolar_combinations": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "_check_bipolar": {
     "line number": [
      618,
      625,
      641,
      642
     ]
    },
    "enumerate": {
     "line number": [
      633
     ]
    },
    "len": {
     "line number": [
      605,
      606,
      627,
      627,
      632,
      632,
      632
     ]
    },
    "list": {
     "line number": [
      622,
      622
     ]
    },
    "mne.create_info": {
     "line number": [
      604
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      607
     ]
    },
    "mne.io.tests.test_reference.itertools": {
     "line number": [
      621
     ]
    },
    "mne.set_bipolar_reference": {
     "line number": [
      617,
      623,
      629,
      639
     ]
    },
    "numpy.random.randn": {
     "line number": [
      606
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      635
     ]
    },
    "range": {
     "line number": [
      603
     ]
    },
    "str": {
     "line number": [
      603
     ]
    },
    "zip": {
     "line number": [
      621,
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_bipolar_combinations._check_bipolar": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_bipolar_reference": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      323
     ]
    },
    "ValueError": {
     "line number": [
      389,
      391,
      393,
      395,
      398
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      316
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG_BIPOLAR": {
     "line number": [
      348
     ]
    },
    "mne.io.constants.FIFF.FIFFV_EOG_CH": {
     "line number": [
      322,
      350,
      371,
      372
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MEG_CH": {
     "line number": [
      383
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      319
     ]
    },
    "mne.io.tests.test_reference.fif_fname": {
     "line number": [
      319
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      323,
      389,
      391,
      393,
      395,
      398
     ]
    },
    "mne.set_bipolar_reference": {
     "line number": [
      324,
      326,
      355,
      359,
      366,
      382,
      389,
      391,
      393,
      395,
      398
     ]
    },
    "numpy.array": {
     "line number": [
      375
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      334,
      378
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      346
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      348,
      350,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_eeg_reference": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      168
     ]
    },
    "ValueError": {
     "line number": [
      200,
      234,
      236
     ]
    },
    "len": {
     "line number": [
      207
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      149
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MNE_CUSTOM_REF_ON": {
     "line number": [
      198,
      201,
      208
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      156,
      158,
      176,
      192,
      206,
      211,
      214,
      217,
      219
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      152,
      173
     ]
    },
    "mne.io.tests.test_reference._test_reference": {
     "line number": [
      164,
      182,
      232
     ]
    },
    "mne.io.tests.test_reference.fif_fname": {
     "line number": [
      152,
      173
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      168,
      200,
      234,
      236
     ]
    },
    "mne.pick_types": {
     "line number": [
      163
     ]
    },
    "mne.set_eeg_reference": {
     "line number": [
      157,
      169,
      175,
      180,
      185,
      190,
      191,
      200,
      204,
      205,
      212,
      218,
      224,
      226,
      230,
      235,
      237
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      227
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_eeg_reference_ch_type": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      253
     ]
    },
    "mne.create_info": {
     "line number": [
      246
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      246
     ]
    },
    "mne.io.tests.test_reference._test_reference": {
     "line number": [
      252
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      253,
      240
     ]
    },
    "mne.set_eeg_reference": {
     "line number": [
      248,
      254
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      247
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_eeg_reference_rest": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      286
     ]
    },
    "ValueError": {
     "line number": [
      289
     ]
    },
    "float": {
     "line number": [
      302
     ]
    },
    "len": {
     "line number": [
      264,
      295
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      257
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      260
     ]
    },
    "mne.io.tests.test_reference.ave_fname": {
     "line number": [
      292
     ]
    },
    "mne.io.tests.test_reference.fif_fname": {
     "line number": [
      260
     ]
    },
    "mne.io.tests.test_reference.pytest": {
     "line number": [
      286,
      289
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      269
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      266
     ]
    },
    "mne.pick_channels_forward": {
     "line number": [
      288
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      292
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      267
     ]
    },
    "numpy.abs": {
     "line number": [
      304
     ]
    },
    "numpy.arange": {
     "line number": [
      264
     ]
    },
    "numpy.argmin": {
     "line number": [
      304
     ]
    },
    "numpy.array": {
     "line number": [
      302
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      277,
      279
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      303,
      307,
      310,
      312
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      264
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      285
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      272,
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_show_fiff": {
  "data": {
   "symbols_in_volume": {
    "mne.io.tests.test_show_fiff.base_dir": {
     "line number": [
      11,
      12,
      13
     ]
    },
    "os.path.dirname": {
     "line number": [
      10
     ]
    },
    "os.path.join": {
     "line number": [
      10,
      11,
      12,
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_show_fiff.base_dir": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.fname_c_annot": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.fname_evoked": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.fname_raw": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_show_fiff.show_fiff": {
  "data": {
   "shadows": "mne.io.show_fiff"
  },
  "type": "import"
 },
 "mne.io.tests.test_show_fiff.test_show_fiff": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "all": {
     "line number": [
      24
     ]
    },
    "mne.io.show_fiff": {
     "line number": [
      19,
      25,
      27
     ]
    },
    "mne.io.tests.test_show_fiff.fname_c_annot": {
     "line number": [
      27
     ]
    },
    "mne.io.tests.test_show_fiff.fname_evoked": {
     "line number": [
      19
     ]
    },
    "mne.io.tests.test_show_fiff.fname_raw": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.tests.test_utils._check_orig_units": {
  "data": {
   "shadows": "mne.io.utils._check_orig_units"
  },
  "type": "import"
 },
 "mne.io.tests.test_utils.test_check_orig_units": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      12
     ]
    },
    "mne.io.utils._check_orig_units": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_what": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      16
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.io.tests.test_what.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.data_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.io.tests.test_what.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.test_what": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      39
     ]
    },
    "len": {
     "line number": [
      47
     ]
    },
    "mne.create_info": {
     "line number": [
      27
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      21
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      26
     ]
    },
    "mne.io.tests.test_what.data_path": {
     "line number": [
      35,
      37,
      51
     ]
    },
    "mne.io.tests.test_what.glob": {
     "line number": [
      34,
      36
     ]
    },
    "mne.io.tests.test_what.pytest": {
     "line number": [
      28,
      19
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      25
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      20
     ]
    },
    "mne.what": {
     "line number": [
      32,
      49,
      52
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      26
     ]
    },
    "os.path.join": {
     "line number": [
      30,
      35,
      37,
      51
     ]
    },
    "os.path.splitext": {
     "line number": [
      46
     ]
    },
    "sorted": {
     "line number": [
      38
     ]
    },
    "str": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tests.test_what.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.what": {
  "data": {
   "shadows": "mne.what"
  },
  "type": "import"
 },
 "mne.io.tree": {
  "data": {},
  "type": "module"
 },
 "mne.io.tree.copy_tree": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "Tag": {
     "line number": [
      146
     ]
    },
    "_write": {
     "line number": [
      148
     ]
    },
    "end_block": {
     "line number": [
      153
     ]
    },
    "isinstance": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      121
     ]
    },
    "list": {
     "line number": [
      124
     ]
    },
    "numpy.fromfile": {
     "line number": [
      146,
      147
     ]
    },
    "start_block": {
     "line number": [
      128
     ]
    },
    "write_id": {
     "line number": [
      131,
      133,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tree.dir_tree_find": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      32
     ]
    },
    "list": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tree.make_dir_tree": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "list": {
     "line number": [
      87
     ]
    },
    "read_tag": {
     "line number": [
      56,
      81,
      93,
      97,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.utils._blk_read_lims": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "all": {
     "line number": [
      162
     ]
    },
    "int": {
     "line number": [
      162,
      171,
      172
     ]
    },
    "isinstance": {
     "line number": [
      162
     ]
    },
    "numpy.empty": {
     "line number": [
      171,
      172
     ]
    },
    "range": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._check_orig_units": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_get_valid_units": {
     "line number": [
      43
     ]
    },
    "dict": {
     "line number": [
      45,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._construct_bids_filename": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      307
     ]
    },
    "len": {
     "line number": [
      306
     ]
    },
    "os.path.basename": {
     "line number": [
      304
     ]
    },
    "os.path.dirname": {
     "line number": [
      303
     ]
    },
    "os.path.join": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._create_chs": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      249
     ]
    },
    "list": {
     "line number": [
      248
     ]
    },
    "numpy.zeros": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._file_size": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "mne.io.utils.os": {
     "line number": [
      196
     ]
    },
    "open": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._find_channels": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "any": {
     "line number": [
      73
     ]
    },
    "enumerate": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._mult_cal_one": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      86
     ]
    },
    "numpy.asarray": {
     "line number": [
      79
     ]
    },
    "numpy.take": {
     "line number": [
      90
     ]
    },
    "slice": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._read_segments_file": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      222
     ]
    },
    "int": {
     "line number": [
      213
     ]
    },
    "min": {
     "line number": [
      214,
      219
     ]
    },
    "mne.io.utils._mult_cal_one": {
     "line number": [
      232
     ]
    },
    "numpy.arange": {
     "line number": [
      218
     ]
    },
    "numpy.dtype": {
     "line number": [
      206
     ]
    },
    "numpy.fromfile": {
     "line number": [
      220
     ]
    },
    "numpy.vstack": {
     "line number": [
      230
     ]
    },
    "open": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils._synthesize_stim_channel": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "events": {
     "line number": [
      291,
      292,
      292,
      295
     ]
    },
    "events.copy": {
     "line number": [
      291
     ]
    },
    "int": {
     "line number": [
      294
     ]
    },
    "numpy.zeros": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.utils.read_str": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      237
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      239
     ]
    },
    "str": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.io.what": {
  "data": {},
  "type": "module"
 },
 "mne.io.what.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.io.what.what": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      66
     ]
    },
    "_check_fname": {
     "line number": [
      42
     ]
    },
    "_get_args": {
     "line number": [
      59
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      43
     ]
    },
    "dict": {
     "line number": [
      61
     ]
    },
    "func": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm._eloreta": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm._eloreta._R_sqrt_mult": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "numpy.matmul": {
     "line number": [
      185
     ]
    },
    "numpy.prod": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta._compute_eloreta": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      36
     ]
    },
    "_compute_reginv": {
     "line number": [
      138
     ]
    },
    "_handle_default": {
     "line number": [
      29
     ]
    },
    "_safe_svd": {
     "line number": [
      135
     ]
    },
    "_this_normalize_R": {
     "line number": [
      82,
      109,
      126
     ]
    },
    "abs": {
     "line number": [
      89
     ]
    },
    "bool": {
     "line number": [
      31
     ]
    },
    "compute_rank_inverse": {
     "line number": [
      44
     ]
    },
    "eigh": {
     "line number": [
      88
     ]
    },
    "functools.partial": {
     "line number": [
      79
     ]
    },
    "mne.minimum_norm._eloreta._R_sqrt_mult": {
     "line number": [
      133,
      140
     ]
    },
    "mne.minimum_norm._eloreta._get_G_3": {
     "line number": [
      62,
      125
     ]
    },
    "numpy.argsort": {
     "line number": [
      90
     ]
    },
    "numpy.dot": {
     "line number": [
      38,
      94,
      100
     ]
    },
    "numpy.empty": {
     "line number": [
      76
     ]
    },
    "numpy.errstate": {
     "line number": [
      92
     ]
    },
    "numpy.eye": {
     "line number": [
      77
     ]
    },
    "numpy.float64": {
     "line number": [
      43
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      112,
      113
     ]
    },
    "numpy.matmul": {
     "line number": [
      102,
      102
     ]
    },
    "numpy.mean": {
     "line number": [
      105
     ]
    },
    "numpy.nan": {
     "line number": [
      150
     ]
    },
    "numpy.newaxis": {
     "line number": [
      77,
      102
     ]
    },
    "numpy.ones": {
     "line number": [
      47,
      73
     ]
    },
    "numpy.repeat": {
     "line number": [
      105
     ]
    },
    "numpy.sqrt": {
     "line number": [
      45,
      49,
      100,
      129
     ]
    },
    "numpy.where": {
     "line number": [
      93
     ]
    },
    "range": {
     "line number": [
      86
     ]
    },
    "sqrtm_sym": {
     "line number": [
      104,
      107,
      131
     ]
    },
    "warn": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta._get_G_3": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta._normalize_R": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.matmul": {
     "line number": [
      159
     ]
    },
    "numpy.newaxis": {
     "line number": [
      157
     ]
    },
    "numpy.trace": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm._eloreta.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.inverse.INVERSE_METHODS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.minimum_norm.inverse.InverseOperator": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.minimum_norm.inverse.InverseOperator.__repr__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "len": {
     "line number": [
      62,
      64
     ]
    },
    "pick_types": {
     "line number": [
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.InverseOperator.copy": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      56
     ]
    },
    "mne.minimum_norm.inverse.InverseOperator": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._apply_inverse": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      916
     ]
    },
    "_get_src_type": {
     "line number": [
      971
     ]
    },
    "_make_stc": {
     "line number": [
      972
     ]
    },
    "_validate_type": {
     "line number": [
      914
     ]
    },
    "float": {
     "line number": [
      969
     ]
    },
    "len": {
     "line number": [
      935
     ]
    },
    "mne.minimum_norm.inverse.INVERSE_METHODS": {
     "line number": [
      916
     ]
    },
    "mne.minimum_norm.inverse._assemble_kernel": {
     "line number": [
      937
     ]
    },
    "mne.minimum_norm.inverse._check_ch_names": {
     "line number": [
      924
     ]
    },
    "mne.minimum_norm.inverse._check_or_prepare": {
     "line number": [
      926
     ]
    },
    "mne.minimum_norm.inverse._check_ori": {
     "line number": [
      917
     ]
    },
    "mne.minimum_norm.inverse._check_reference": {
     "line number": [
      915
     ]
    },
    "mne.minimum_norm.inverse._log_exp_var": {
     "line number": [
      951
     ]
    },
    "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
     "line number": [
      933
     ]
    },
    "mne.minimum_norm.inverse._subject_from_inverse": {
     "line number": [
      970
     ]
    },
    "mne.minimum_norm.inverse.combine_xyz": {
     "line number": [
      960
     ]
    },
    "numpy.dot": {
     "line number": [
      939,
      944,
      945,
      946,
      947,
      948,
      950,
      950
     ]
    },
    "numpy.newaxis": {
     "line number": [
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._apply_inverse_epochs_gen": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1155
     ]
    },
    "_check_option": {
     "line number": [
      1119
     ]
    },
    "_get_src_type": {
     "line number": [
      1176
     ]
    },
    "_make_stc": {
     "line number": [
      1177
     ]
    },
    "_validate_type": {
     "line number": [
      1118
     ]
    },
    "enumerate": {
     "line number": [
      1157
     ]
    },
    "is_fixed_orient": {
     "line number": [
      1142
     ]
    },
    "len": {
     "line number": [
      1134,
      1154,
      1156,
      1171
     ]
    },
    "mne.minimum_norm.inverse.INVERSE_METHODS": {
     "line number": [
      1119
     ]
    },
    "mne.minimum_norm.inverse._assemble_kernel": {
     "line number": [
      1136
     ]
    },
    "mne.minimum_norm.inverse._check_ch_names": {
     "line number": [
      1122
     ]
    },
    "mne.minimum_norm.inverse._check_or_prepare": {
     "line number": [
      1127
     ]
    },
    "mne.minimum_norm.inverse._check_ori": {
     "line number": [
      1120
     ]
    },
    "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
     "line number": [
      1133
     ]
    },
    "mne.minimum_norm.inverse._subject_from_inverse": {
     "line number": [
      1152
     ]
    },
    "mne.minimum_norm.inverse.combine_xyz": {
     "line number": [
      1165
     ]
    },
    "numpy.dot": {
     "line number": [
      1161,
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._assemble_kernel": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      740,
      745
     ]
    },
    "_get_src_nn": {
     "line number": [
      730
     ]
    },
    "_get_vertno": {
     "line number": [
      702
     ]
    },
    "_normal_orth": {
     "line number": [
      730
     ]
    },
    "all": {
     "line number": [
      721
     ]
    },
    "label_src_vertno_sel": {
     "line number": [
      706
     ]
    },
    "len": {
     "line number": [
      729
     ]
    },
    "numpy.allclose": {
     "line number": [
      722
     ]
    },
    "numpy.c_": {
     "line number": [
      713
     ]
    },
    "numpy.dot": {
     "line number": [
      748,
      749,
      756
     ]
    },
    "numpy.eye": {
     "line number": [
      723
     ]
    },
    "numpy.matmul": {
     "line number": [
      731
     ]
    },
    "numpy.newaxis": {
     "line number": [
      697,
      767
     ]
    },
    "numpy.reshape": {
     "line number": [
      725,
      727
     ]
    },
    "numpy.sqrt": {
     "line number": [
      767
     ]
    },
    "slice": {
     "line number": [
      729
     ]
    },
    "zip": {
     "line number": [
      728
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_ch_names": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      474,
      481
     ]
    },
    "_check_compensation_grade": {
     "line number": [
      483
     ]
    },
    "len": {
     "line number": [
      479
     ]
    },
    "set": {
     "line number": [
      478,
      478
     ]
    },
    "sorted": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_or_prepare": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      493
     ]
    },
    "mne.minimum_norm.inverse.prepare_inverse_operator": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_ori": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      777
     ]
    },
    "_check_src_normal": {
     "line number": [
      778
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_reference": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      789,
      792
     ]
    },
    "_needs_eeg_average_ref_proj": {
     "line number": [
      788
     ]
    },
    "enumerate": {
     "line number": [
      785
     ]
    },
    "pick_info": {
     "line number": [
      787
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._compute_reginv": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": {
    "mne.minimum_norm.inverse.compute_rank_inverse": {
     "line number": [
      1598
     ]
    },
    "numpy.array": {
     "line number": [
      1596
     ]
    },
    "numpy.errstate": {
     "line number": [
      1600
     ]
    },
    "numpy.float64": {
     "line number": [
      1596
     ]
    },
    "numpy.where": {
     "line number": [
      1601
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      1597
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._log_exp_var": {
  "data": {
   "lineno": 903
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87,
      88
     ]
    },
    "list": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._prepare_forward": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1367,
      1382,
      1388
     ]
    },
    "_select_orient_forward": {
     "line number": [
      1397
     ]
    },
    "_triage_loose": {
     "line number": [
      1360
     ]
    },
    "compute_depth_prior": {
     "line number": [
      1404
     ]
    },
    "compute_orient_prior": {
     "line number": [
      1427
     ]
    },
    "compute_whitener": {
     "line number": [
      1432
     ]
    },
    "convert_forward_solution": {
     "line number": [
      1379,
      1394,
      1419
     ]
    },
    "float": {
     "line number": [
      1365
     ]
    },
    "is_fixed_orient": {
     "line number": [
      1375,
      1387,
      1412
     ]
    },
    "len": {
     "line number": [
      1374,
      1399,
      1410
     ]
    },
    "mne.minimum_norm.inverse.combine_xyz": {
     "line number": [
      1406
     ]
    },
    "numpy.dot": {
     "line number": [
      1435
     ]
    },
    "numpy.ones": {
     "line number": [
      1438
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1443,
      1450
     ]
    },
    "prepare_noise_cov": {
     "line number": [
      1430
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      1448
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._subject_from_inverse": {
  "data": {
   "lineno": 796
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": {
    "mne.minimum_norm.inverse._apply_inverse": {
     "line number": [
      896
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_cov": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": {
    "Covariance": {
     "line number": [
      1294
     ]
    },
    "EvokedArray": {
     "line number": [
      1300
     ]
    },
    "_check_option": {
     "line number": [
      1303
     ]
    },
    "_validate_type": {
     "line number": [
      1294,
      1295
     ]
    },
    "len": {
     "line number": [
      1301
     ]
    },
    "mne.minimum_norm.inverse.InverseOperator": {
     "line number": [
      1295
     ]
    },
    "mne.minimum_norm.inverse._apply_inverse": {
     "line number": [
      1310
     ]
    },
    "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
     "line number": [
      1296
     ]
    },
    "numpy.eye": {
     "line number": [
      1301
     ]
    },
    "numpy.reshape": {
     "line number": [
      1314
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1325
     ]
    },
    "numpy.sum": {
     "line number": [
      1318
     ]
    },
    "pick_channels": {
     "line number": [
      1299
     ]
    },
    "pick_info": {
     "line number": [
      1298
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_epochs": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": {
    "mne.minimum_norm.inverse._apply_inverse_epochs_gen": {
     "line number": [
      1234
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_raw": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      1041
     ]
    },
    "_get_src_type": {
     "line number": [
      1104
     ]
    },
    "_make_stc": {
     "line number": [
      1105
     ]
    },
    "_validate_type": {
     "line number": [
      1039
     ]
    },
    "float": {
     "line number": [
      1073,
      1101
     ]
    },
    "int": {
     "line number": [
      1073
     ]
    },
    "len": {
     "line number": [
      1057
     ]
    },
    "mne.minimum_norm.inverse.INVERSE_METHODS": {
     "line number": [
      1041
     ]
    },
    "mne.minimum_norm.inverse._assemble_kernel": {
     "line number": [
      1065
     ]
    },
    "mne.minimum_norm.inverse._check_ch_names": {
     "line number": [
      1044
     ]
    },
    "mne.minimum_norm.inverse._check_or_prepare": {
     "line number": [
      1049
     ]
    },
    "mne.minimum_norm.inverse._check_ori": {
     "line number": [
      1042
     ]
    },
    "mne.minimum_norm.inverse._check_reference": {
     "line number": [
      1040
     ]
    },
    "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
     "line number": [
      1055
     ]
    },
    "mne.minimum_norm.inverse._subject_from_inverse": {
     "line number": [
      1103
     ]
    },
    "mne.minimum_norm.inverse.combine_xyz": {
     "line number": [
      1086,
      1095
     ]
    },
    "numpy.ceil": {
     "line number": [
      1073
     ]
    },
    "numpy.dot": {
     "line number": [
      1084,
      1092
     ]
    },
    "numpy.empty": {
     "line number": [
      1081
     ]
    },
    "numpy.result_type": {
     "line number": [
      1081
     ]
    },
    "range": {
     "line number": [
      1083
     ]
    },
    "time_func": {
     "line number": [
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.combine_xyz": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      456,
      458
     ]
    },
    "numpy.abs": {
     "line number": [
      460
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      459
     ]
    },
    "numpy.sqrt": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.compute_rank_inverse": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": {
    "make_projector": {
     "line number": [
      1624
     ]
    },
    "numpy.sum": {
     "line number": [
      1622
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.estimate_snr": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1721
     ]
    },
    "len": {
     "line number": [
      1704
     ]
    },
    "mne.minimum_norm.inverse._check_ch_names": {
     "line number": [
      1700
     ]
    },
    "mne.minimum_norm.inverse._check_reference": {
     "line number": [
      1699
     ]
    },
    "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
     "line number": [
      1703
     ]
    },
    "mne.minimum_norm.inverse.compute_rank_inverse": {
     "line number": [
      1710
     ]
    },
    "mne.minimum_norm.inverse.prepare_inverse_operator": {
     "line number": [
      1701
     ]
    },
    "numpy.dot": {
     "line number": [
      1705,
      1705,
      1706
     ]
    },
    "numpy.empty": {
     "line number": [
      1719
     ]
    },
    "numpy.inf": {
     "line number": [
      1725
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1730,
      1735
     ]
    },
    "numpy.ones": {
     "line number": [
      1721
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1746,
      1747
     ]
    },
    "numpy.sum": {
     "line number": [
      1715,
      1739
     ]
    },
    "numpy.where": {
     "line number": [
      1740
     ]
    },
    "range": {
     "line number": [
      1732
     ]
    },
    "scipy.stats.chi2.isf": {
     "line number": [
      1731
     ]
    },
    "warn": {
     "line number": [
      1745
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.make_inverse_operator": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": {
    "_check_depth": {
     "line number": [
      1524
     ]
    },
    "_safe_svd": {
     "line number": [
      1544
     ]
    },
    "channel_type": {
     "line number": [
      1559
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1532,
      1536
     ]
    },
    "dict": {
     "line number": [
      1531,
      1550,
      1553,
      1572,
      1578,
      1583
     ]
    },
    "mne.minimum_norm.inverse.InverseOperator": {
     "line number": [
      1591
     ]
    },
    "mne.minimum_norm.inverse._prepare_forward": {
     "line number": [
      1526
     ]
    },
    "numpy.max": {
     "line number": [
      1546
     ]
    },
    "range": {
     "line number": [
      1558
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.prepare_inverse_operator": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      532
     ]
    },
    "_check_option": {
     "line number": [
      536
     ]
    },
    "_compute_eloreta": {
     "line number": [
      600
     ]
    },
    "_validate_type": {
     "line number": [
      534
     ]
    },
    "bool": {
     "line number": [
      534
     ]
    },
    "compute_whitener": {
     "line number": [
      592
     ]
    },
    "float": {
     "line number": [
      554
     ]
    },
    "isinstance": {
     "line number": [
      535
     ]
    },
    "len": {
     "line number": [
      560
     ]
    },
    "make_projector": {
     "line number": [
      579
     ]
    },
    "math.sqrt": {
     "line number": [
      566,
      630
     ]
    },
    "mne.minimum_norm.inverse.InverseOperator": {
     "line number": [
      652
     ]
    },
    "mne.minimum_norm.inverse._compute_reginv": {
     "line number": [
      574
     ]
    },
    "mne.minimum_norm.inverse.combine_xyz": {
     "line number": [
      646
     ]
    },
    "nrm2": {
     "line number": [
      627,
      632
     ]
    },
    "numpy.abs": {
     "line number": [
      647
     ]
    },
    "numpy.eye": {
     "line number": [
      560
     ]
    },
    "numpy.sqrt": {
     "line number": [
      620
     ]
    },
    "numpy.zeros": {
     "line number": [
      622
     ]
    },
    "range": {
     "line number": [
      625,
      629
     ]
    },
    "scipy.linalg.get_blas_funcs": {
     "line number": [
      623
     ]
    },
    "str": {
     "line number": [
      534,
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.read_inverse_operator": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Covariance": {
     "line number": [
      223
     ]
    },
    "Exception": {
     "line number": [
      130,
      138,
      147,
      154,
      160,
      169,
      187,
      197,
      260,
      276,
      303,
      304
     ]
    },
    "ValueError": {
     "line number": [
      213
     ]
    },
    "_ensure_trans": {
     "line number": [
      261
     ]
    },
    "_read_cov": {
     "line number": [
      224,
      227,
      232,
      237,
      242
     ]
    },
    "_read_forward_meas_info": {
     "line number": [
      268
     ]
    },
    "_read_named_matrix": {
     "line number": [
      205,
      209,
      217
     ]
    },
    "_read_proj": {
     "line number": [
      286
     ]
    },
    "_read_source_spaces_from_tree": {
     "line number": [
      249
     ]
    },
    "check_fname": {
     "line number": [
      115
     ]
    },
    "dict": {
     "line number": [
      149
     ]
    },
    "dir_tree_find": {
     "line number": [
      128,
      136
     ]
    },
    "fiff_open": {
     "line number": [
      123
     ]
    },
    "find_source_space_hemi": {
     "line number": [
      253
     ]
    },
    "find_tag": {
     "line number": [
      145,
      152,
      158,
      167,
      176,
      185,
      195,
      258
     ]
    },
    "getattr": {
     "line number": [
      180
     ]
    },
    "int": {
     "line number": [
      150,
      156,
      162,
      180
     ]
    },
    "len": {
     "line number": [
      129,
      137,
      200,
      298
     ]
    },
    "mne.minimum_norm.inverse.InverseOperator": {
     "line number": [
      314
     ]
    },
    "range": {
     "line number": [
      298
     ]
    },
    "transform_surface_to": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.write_inverse_operator": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "_transpose_named_matrix": {
     "line number": [
      422,
      424
     ]
    },
    "_validate_type": {
     "line number": [
      335
     ]
    },
    "_write_cov": {
     "line number": [
      397,
      400,
      407,
      409,
      411
     ]
    },
    "_write_proj": {
     "line number": [
      362
     ]
    },
    "_write_source_spaces_to_fid": {
     "line number": [
      368
     ]
    },
    "check_fname": {
     "line number": [
      333
     ]
    },
    "end_block": {
     "line number": [
      357,
      431,
      432
     ]
    },
    "end_file": {
     "line number": [
      433
     ]
    },
    "mne.minimum_norm.inverse.InverseOperator": {
     "line number": [
      335
     ]
    },
    "start_block": {
     "line number": [
      344,
      354,
      370
     ]
    },
    "start_file": {
     "line number": [
      343
     ]
    },
    "write_coord_trans": {
     "line number": [
      356
     ]
    },
    "write_float": {
     "line number": [
      391
     ]
    },
    "write_float_matrix": {
     "line number": [
      389
     ]
    },
    "write_forward_meas_info": {
     "line number": [
      349
     ]
    },
    "write_int": {
     "line number": [
      374,
      375,
      381,
      383,
      384,
      386,
      388
     ]
    },
    "write_named_matrix": {
     "line number": [
      413,
      423
     ]
    },
    "write_string": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.tests.test_inverse": {
  "data": {
   "symbols_in_volume": {
    "list": {
     "line number": [
      843
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      36
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      843
     ]
    },
    "mne.minimum_norm.tests.test_inverse._fast_methods": {
     "line number": [
      844,
      844
     ]
    },
    "mne.minimum_norm.tests.test_inverse.s_path": {
     "line number": [
      38,
      40,
      41,
      42,
      45,
      48,
      52,
      53,
      54,
      57,
      58,
      59,
      62
     ]
    },
    "mne.minimum_norm.tests.test_inverse.s_path_bem": {
     "line number": [
      65,
      66,
      67
     ]
    },
    "mne.minimum_norm.tests.test_inverse.snr": {
     "line number": [
      70
     ]
    },
    "mne.minimum_norm.tests.test_inverse.subjects_dir": {
     "line number": [
      64
     ]
    },
    "mne.minimum_norm.tests.test_inverse.test_path": {
     "line number": [
      37,
      55,
      56,
      63
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      1247
     ]
    },
    "os.path.join": {
     "line number": [
      37,
      38,
      40,
      41,
      42,
      45,
      48,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      62,
      63,
      64,
      65,
      66,
      67
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_inverse.Covariance": {
  "data": {
   "shadows": "mne.Covariance"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.EpochsArray": {
  "data": {
   "shadows": "mne.epochs.EpochsArray"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.INVERSE_METHODS": {
  "data": {
   "shadows": "mne.minimum_norm.INVERSE_METHODS"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._compare": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      124
     ]
    },
    "ValueError": {
     "line number": [
      102,
      110
     ]
    },
    "dict": {
     "line number": [
      98,
      99
     ]
    },
    "isinstance": {
     "line number": [
      98,
      99,
      112,
      116,
      120
     ]
    },
    "len": {
     "line number": [
      113,
      113
     ]
    },
    "list": {
     "line number": [
      112
     ]
    },
    "mne.minimum_norm.tests.test_inverse.last_keys": {
     "line number": [
      105,
      106,
      106,
      125
     ]
    },
    "numpy.ndarray": {
     "line number": [
      120
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      117,
      121
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      118,
      119
     ]
    },
    "print": {
     "line number": [
      125
     ]
    },
    "scipy.sparse.csr.csr_matrix": {
     "line number": [
      116
     ]
    },
    "sorted": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "float": {
     "line number": [
      151,
      153
     ]
    },
    "len": {
     "line number": [
      170
     ]
    },
    "mne.EvokedArray": {
     "line number": [
      170
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      172,
      173
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      172,
      173
     ]
    },
    "numpy.abs": {
     "line number": [
      167,
      167
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      181
     ]
    },
    "numpy.dot": {
     "line number": [
      151,
      153
     ]
    },
    "numpy.eye": {
     "line number": [
      170
     ]
    },
    "numpy.max": {
     "line number": [
      178
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      135,
      141,
      146,
      164,
      167,
      183
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      149,
      150,
      174,
      175
     ]
    },
    "slice": {
     "line number": [
      160,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._compare_io": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      195
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      200
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare": {
     "line number": [
      201,
      202
     ]
    },
    "mne.minimum_norm.tests.test_inverse.copy": {
     "line number": [
      198
     ]
    },
    "mne.minimum_norm.write_inverse_operator": {
     "line number": [
      199
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      189
     ]
    },
    "os.path.join": {
     "line number": [
      191,
      193
     ]
    },
    "pathlib.Path": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._fast_methods": {
  "data": {
   "lineno": 843
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse._get_src_nn": {
  "data": {
   "shadows": "mne.source_space._get_src_nn"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._normal_orth": {
  "data": {
   "shadows": "mne.surface._normal_orth"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_forward": {
  "data": {
   "shadows": "mne.forward.apply_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_cov": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_raw": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_raw"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_stc_res": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "mne.forward.apply_forward": {
     "line number": [
      584
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      583
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "float": {
     "line number": [
      603
     ]
    },
    "mne.minimum_norm.tests.test_inverse.re": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.compute_rank_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.compute_rank_inverse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.fname_bem": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_bem_homog": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_cov": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_data": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_event": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_full": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_fwd": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_nodepth": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_meeg_diag": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_label": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_raw": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_raw_ctf": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_sss": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_trans": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_vol_inv": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.is_fixed_orient": {
  "data": {
   "shadows": "mne.forward.is_fixed_orient"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.lambda2": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.last_keys": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_channels_forward": {
  "data": {
   "shadows": "mne.pick_channels_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.prepare_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.prepare_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution_eeg": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "mne.convert_forward_solution": {
     "line number": [
      85
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      87
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "mne.convert_forward_solution": {
     "line number": [
      77
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      79
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_source_estimate": {
  "data": {
   "shadows": "mne.source_estimate.read_source_estimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.restrict_forward_to_stc": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_stc"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.s_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.s_path_bem": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.snr": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.src_fname": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.subjects_dir": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_cov": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      864,
      887
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      862
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      847
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      852
     ]
    },
    "mne.label.read_label": {
     "line number": [
      857
     ]
    },
    "mne.minimum_norm.apply_inverse_cov": {
     "line number": [
      865,
      875,
      888
     ]
    },
    "mne.minimum_norm.apply_inverse_raw": {
     "line number": [
      872
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      868
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      860
     ]
    },
    "mne.minimum_norm.tests.test_inverse._fast_methods": {
     "line number": [
      848
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv": {
     "line number": [
      860
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_label": {
     "line number": [
      857
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_raw": {
     "line number": [
      852
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      866,
      869,
      873,
      877
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      864,
      887,
      848,
      849
     ]
    },
    "numpy.cov": {
     "line number": [
      880
     ]
    },
    "numpy.diag": {
     "line number": [
      880
     ]
    },
    "numpy.prod": {
     "line number": [
      878
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_eLORETA_MNE_equiv": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      436
     ]
    },
    "dict": {
     "line number": [
      428
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      434,
      437
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      431
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      434,
      437
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      436,
      424,
      425
     ]
    },
    "numpy.abs": {
     "line number": [
      440
     ]
    },
    "numpy.mean": {
     "line number": [
      440
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_operator": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      514,
      517
     ]
    },
    "ValueError": {
     "line number": [
      522,
      526
     ]
    },
    "abs": {
     "line number": [
      465,
      478,
      480,
      484,
      486,
      490,
      492
     ]
    },
    "mne.label.read_label": {
     "line number": [
      495
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      496
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      461,
      471,
      476,
      482,
      488,
      497,
      498,
      511,
      515,
      518,
      523,
      527,
      530
     ]
    },
    "mne.minimum_norm.compute_rank_inverse": {
     "line number": [
      456,
      459
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      508
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      469
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      453
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_cov": {
     "line number": [
      506
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      507
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv": {
     "line number": [
      447
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth": {
     "line number": [
      448
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_label": {
     "line number": [
      495
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      461,
      470,
      471,
      476,
      482,
      488,
      497,
      498,
      523,
      527
     ]
    },
    "mne.minimum_norm.tests.test_inverse.mne": {
     "line number": [
      516,
      518
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      514,
      517,
      522,
      526,
      445,
      446
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      507
     ]
    },
    "mne.read_cov": {
     "line number": [
      506
     ]
    },
    "numpy.newaxis": {
     "line number": [
      516
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      503
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      472,
      473
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_sphere": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      418
     ]
    },
    "len": {
     "line number": [
      402
     ]
    },
    "mne.EvokedArray": {
     "line number": [
      407
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      402
     ]
    },
    "mne.forward.restrict_forward_to_stc": {
     "line number": [
      404
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      397
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      405
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      398
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      417
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      413
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      416
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      399
     ]
    },
    "mne.minimum_norm.write_inverse_operator": {
     "line number": [
      415
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      399
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      411
     ]
    },
    "numpy.arange": {
     "line number": [
      421
     ]
    },
    "numpy.argmax": {
     "line number": [
      420
     ]
    },
    "numpy.repeat": {
     "line number": [
      421
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      420
     ]
    },
    "numpy.zeros": {
     "line number": [
      402
     ]
    },
    "os.path.join": {
     "line number": [
      412
     ]
    },
    "sum": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_epochs": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1044
     ]
    },
    "dict": {
     "line number": [
      984,
      985
     ]
    },
    "events": {
     "line number": [
      987,
      988
     ]
    },
    "len": {
     "line number": [
      1005,
      1012,
      1032
     ]
    },
    "mne.EvokedArray": {
     "line number": [
      1046
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      973
     ]
    },
    "mne.epochs.Epochs": {
     "line number": [
      988
     ]
    },
    "mne.event.read_events": {
     "line number": [
      987
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      980
     ]
    },
    "mne.label.label_sign_flip": {
     "line number": [
      1013
     ]
    },
    "mne.label.read_label": {
     "line number": [
      977,
      978
     ]
    },
    "mne.minimum_norm.apply_inverse_epochs": {
     "line number": [
      995,
      997,
      1010,
      1024,
      1027,
      1037,
      1045
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      991,
      1021
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      976,
      1008
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_event": {
     "line number": [
      987
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_full": {
     "line number": [
      976,
      1008
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_label": {
     "line number": [
      977,
      978
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_raw": {
     "line number": [
      980
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      992,
      995,
      997,
      1010,
      1022,
      1024,
      1027,
      1037
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      1044
     ]
    },
    "mne.pick_types": {
     "line number": [
      982
     ]
    },
    "numpy.mean": {
     "line number": [
      1015,
      1016
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1016
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1002,
      1003,
      1033,
      1034,
      1042
     ]
    },
    "sum": {
     "line number": [
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_fixed_raw": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      945
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      932
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      935
     ]
    },
    "mne.label.read_label": {
     "line number": [
      939
     ]
    },
    "mne.minimum_norm.apply_inverse_raw": {
     "line number": [
      952,
      956,
      960
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      945,
      947
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      950
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_cov": {
     "line number": [
      944
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      942
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_label": {
     "line number": [
      939
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_raw": {
     "line number": [
      935
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      951,
      952,
      956,
      960
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      945
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      942
     ]
    },
    "mne.read_cov": {
     "line number": [
      944
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      966,
      967,
      968,
      969,
      970
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_raw": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      926
     ]
    },
    "ValueError": {
     "line number": [
      901
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      892
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      928
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      897
     ]
    },
    "mne.label.read_label": {
     "line number": [
      898
     ]
    },
    "mne.minimum_norm.apply_inverse_raw": {
     "line number": [
      902,
      906,
      911,
      927
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      903
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      900
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_full": {
     "line number": [
      900
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_label": {
     "line number": [
      898
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_raw": {
     "line number": [
      897
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      902,
      904,
      906,
      911
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      901,
      926
     ]
    },
    "numpy.all": {
     "line number": [
      917,
      918
     ]
    },
    "numpy.newaxis": {
     "line number": [
      928
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      922,
      923,
      924
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_ctf_comp": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1078,
      1084
     ]
    },
    "dict": {
     "line number": [
      1075
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1067
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      1073
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      1076
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      1072
     ]
    },
    "mne.minimum_norm.apply_inverse_raw": {
     "line number": [
      1082,
      1085
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      1079,
      1081
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_raw_ctf": {
     "line number": [
      1070
     ]
    },
    "mne.minimum_norm.tests.test_inverse.mne": {
     "line number": [
      1070,
      1074
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      1078,
      1084
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_mixed": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1096,
      1099
     ]
    },
    "dict": {
     "line number": [
      1090
     ]
    },
    "getattr": {
     "line number": [
      1110,
      1112,
      1114
     ]
    },
    "isinstance": {
     "line number": [
      1098,
      1102
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1097,
      1100
     ]
    },
    "mne.minimum_norm.tests.test_inverse.mne": {
     "line number": [
      1092,
      1093,
      1094
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      1096,
      1099,
      1117
     ]
    },
    "numpy.allclose": {
     "line number": [
      1116
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1107
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1103,
      1110,
      1112,
      1114,
      1118
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_mixed_loose": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1170
     ]
    },
    "ValueError": {
     "line number": [
      1134
     ]
    },
    "abs": {
     "line number": [
      1181,
      1184
     ]
    },
    "dict": {
     "line number": [
      1129,
      1131,
      1131,
      1141,
      1144,
      1218
     ]
    },
    "enumerate": {
     "line number": [
      1223
     ]
    },
    "len": {
     "line number": [
      1192,
      1194,
      1221
     ]
    },
    "mne.EvokedArray": {
     "line number": [
      1197
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1164,
      1165,
      1171,
      1173,
      1206
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      1135,
      1139,
      1142
     ]
    },
    "mne.minimum_norm.tests.test_inverse.mne": {
     "line number": [
      1200,
      1201,
      1217
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      1134,
      1170
     ]
    },
    "numpy.arccos": {
     "line number": [
      1203,
      1214
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1156,
      1193,
      1195,
      1222
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      1166,
      1184
     ]
    },
    "numpy.dot": {
     "line number": [
      1191
     ]
    },
    "numpy.eye": {
     "line number": [
      1158
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1158
     ]
    },
    "numpy.ones": {
     "line number": [
      1150
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      1203,
      1214
     ]
    },
    "numpy.sum": {
     "line number": [
      1203,
      1214
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1154,
      1160,
      1162,
      1174,
      1178,
      1180,
      1202,
      1213,
      1225
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      1204,
      1215
     ]
    },
    "numpy.tile": {
     "line number": [
      1158
     ]
    },
    "sum": {
     "line number": [
      1146,
      1147
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_channel_ordering": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      257
     ]
    },
    "len": {
     "line number": [
      268
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      256,
      285
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      254,
      283
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      263,
      289,
      300
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      259,
      286
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_bem": {
     "line number": [
      255,
      284
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_cov": {
     "line number": [
      298
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_trans": {
     "line number": [
      254,
      283
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      263,
      289,
      300
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      249
     ]
    },
    "mne.minimum_norm.tests.test_inverse.src_fname": {
     "line number": [
      254,
      283
     ]
    },
    "mne.read_cov": {
     "line number": [
      298
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      258
     ]
    },
    "numpy.arange": {
     "line number": [
      268
     ]
    },
    "numpy.ix_": {
     "line number": [
      280
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      269
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      293,
      301
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      292
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_noise_cov_rank": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      774,
      777,
      782
     ]
    },
    "mne.minimum_norm.compute_rank_inverse": {
     "line number": [
      775,
      778,
      783
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      773,
      776,
      781
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      772,
      780
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_eeg": {
     "line number": [
      780
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      772
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_volume": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      805
     ]
    },
    "isinstance": {
     "line number": [
      792
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      791,
      802,
      806
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      789
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_vol_inv": {
     "line number": [
      789
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      791,
      802
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      805
     ]
    },
    "mne.source_estimate.VolSourceEstimate": {
     "line number": [
      792
     ]
    },
    "mne.source_estimate.read_source_estimate": {
     "line number": [
      796
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      788
     ]
    },
    "numpy.all": {
     "line number": [
      797,
      798
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      804
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      804
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      799,
      800
     ]
    },
    "os.path.join": {
     "line number": [
      795,
      796
     ]
    },
    "repr": {
     "line number": [
      790,
      803
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_residual": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "mne.convert_forward_solution": {
     "line number": [
      620
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      608
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      625,
      639
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      615,
      617
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_stc_res": {
     "line number": [
      635
     ]
    },
    "mne.minimum_norm.tests.test_inverse.assert_var_exp_log": {
     "line number": [
      633,
      641
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      618
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv": {
     "line number": [
      617
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth": {
     "line number": [
      615
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      608,
      609
     ]
    },
    "mne.pick_channels_forward": {
     "line number": [
      619
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      618
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      624,
      638
     ]
    },
    "numpy.abs": {
     "line number": [
      642
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      628
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      642
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_io_inverse_operator": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      823,
      825
     ]
    },
    "isinstance": {
     "line number": [
      817
     ]
    },
    "mne.Covariance": {
     "line number": [
      817
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      810
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      831,
      835,
      837
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      814,
      826,
      833
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare": {
     "line number": [
      834,
      836,
      838
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_io": {
     "line number": [
      819
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv": {
     "line number": [
      814
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      823,
      825,
      809
     ]
    },
    "mne.minimum_norm.write_inverse_operator": {
     "line number": [
      824,
      832
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      813
     ]
    },
    "os.path.join": {
     "line number": [
      822,
      829
     ]
    },
    "repr": {
     "line number": [
      815
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_localization_bias_fixed": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      305,
      306,
      308
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      318
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      321
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      319
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      321
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      304
     ]
    },
    "numpy.abs": {
     "line number": [
      321
     ]
    },
    "numpy.argmax": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_localization_bias_free": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      368,
      369,
      371,
      374,
      374
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      385
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      383
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      385
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      367
     ]
    },
    "numpy.argmax": {
     "line number": [
      389
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_localization_bias_loose": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      358
     ]
    },
    "dict": {
     "line number": [
      329,
      331
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      345
     ]
    },
    "mne.forward.is_fixed_orient": {
     "line number": [
      346
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      349
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      347
     ]
    },
    "mne.minimum_norm.tests.test_inverse.lambda2": {
     "line number": [
      350
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      328,
      338
     ]
    },
    "numpy.abs": {
     "line number": [
      355
     ]
    },
    "numpy.argmax": {
     "line number": [
      363
     ]
    },
    "numpy.percentile": {
     "line number": [
      357
     ]
    },
    "numpy.sum": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_bads": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1063,
      1064
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      1058
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      1052
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      1052
     ]
    },
    "set": {
     "line number": [
      1059,
      1059,
      1060,
      1060,
      1063,
      1064
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_diag": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": {
    "mne.convert_forward_solution": {
     "line number": [
      757
     ]
    },
    "mne.minimum_norm.compute_rank_inverse": {
     "line number": [
      767
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      759
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      762
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
     "line number": [
      764
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_io": {
     "line number": [
      761
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      757
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv_meeg_diag": {
     "line number": [
      762
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_fixed": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      652
     ]
    },
    "dict": {
     "line number": [
      677,
      677
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      650,
      676
     ]
    },
    "mne.minimum_norm.compute_rank_inverse": {
     "line number": [
      674
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      652,
      659,
      679
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      667,
      682
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
     "line number": [
      671,
      686
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      647
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth": {
     "line number": [
      682
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_nodepth": {
     "line number": [
      667
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      652
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      647
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      658
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      684
     ]
    },
    "repr": {
     "line number": [
      664,
      665,
      670
     ]
    },
    "zip": {
     "line number": [
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_free": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      698
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      693,
      694
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      709,
      710
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      699,
      702,
      704
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
     "line number": [
      706
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      692
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      698
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      692
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      711
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_loose": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      227
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      222
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      225,
      237
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      221
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
     "line number": [
      233,
      243
     ]
    },
    "mne.minimum_norm.tests.test_inverse._compare_io": {
     "line number": [
      231,
      242
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_cov": {
     "line number": [
      220
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      222
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_inv": {
     "line number": [
      221
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      216
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      222
     ]
    },
    "mne.read_cov": {
     "line number": [
      220
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      224,
      236
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_vector": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      727
     ]
    },
    "mne.combine_evoked": {
     "line number": [
      743
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      731,
      732,
      744,
      745,
      746,
      747
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      720,
      721,
      723
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_data": {
     "line number": [
      739,
      741
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      716,
      717
     ]
    },
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
     "line number": [
      716,
      717
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      739,
      741
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      734,
      748,
      750
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_orientation_prior": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "list": {
     "line number": [
      542
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      533
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      550,
      554
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      545
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      533,
      534
     ]
    },
    "mne.source_space._get_src_nn": {
     "line number": [
      558
     ]
    },
    "mne.surface._normal_orth": {
     "line number": [
      557
     ]
    },
    "numpy.concatenate": {
     "line number": [
      557
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      568,
      570,
      575,
      576
     ]
    },
    "numpy.matmul": {
     "line number": [
      559
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      562,
      564,
      565
     ]
    },
    "range": {
     "line number": [
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.test_sss_rank": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1237
     ]
    },
    "dict": {
     "line number": [
      1242
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1228
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      1238,
      1242
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_cov": {
     "line number": [
      1236
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      1235
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_sss": {
     "line number": [
      1232
     ]
    },
    "mne.minimum_norm.tests.test_inverse.mne": {
     "line number": [
      1232,
      1235,
      1236
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      1237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_warn_inverse_operator": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      212
     ]
    },
    "list": {
     "line number": [
      208
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      209
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      213
     ]
    },
    "mne.minimum_norm.tests.test_inverse.fname_fwd": {
     "line number": [
      209
     ]
    },
    "mne.minimum_norm.tests.test_inverse.pytest": {
     "line number": [
      212
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.write_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.write_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19
     ]
    },
    "mne.minimum_norm.tests.test_resolution_matrix.data_path": {
     "line number": [
      20,
      21,
      23,
      25,
      26,
      27,
      29,
      31,
      33,
      34,
      36,
      38,
      42,
      44
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      40
     ]
    },
    "os.path.join": {
     "line number": [
      20,
      21,
      23,
      25,
      26,
      27,
      29,
      31,
      33,
      34,
      36,
      38,
      42,
      44
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_cov": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_evoked": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_fwd": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_inv": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_inv_vol": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_raw": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_src": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_src_3": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_src_fs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_stc": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_t1": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_vol": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_vsrc": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.get_cross_talk": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.get_cross_talk"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.get_point_spread": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.get_point_spread"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.make_inverse_resolution_matrix": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.rng": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.subjects_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.test_resolution_matrix": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "len": {
     "line number": [
      106
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      47
     ]
    },
    "mne.minimum_norm.resolution_matrix.get_cross_talk": {
     "line number": [
      120
     ]
    },
    "mne.minimum_norm.resolution_matrix.get_point_spread": {
     "line number": [
      119
     ]
    },
    "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix": {
     "line number": [
      80,
      84,
      92,
      96
     ]
    },
    "mne.minimum_norm.tests.test_resolution_matrix.fname_cov": {
     "line number": [
      58
     ]
    },
    "mne.minimum_norm.tests.test_resolution_matrix.fname_evoked": {
     "line number": [
      61
     ]
    },
    "mne.minimum_norm.tests.test_resolution_matrix.fname_fwd": {
     "line number": [
      51
     ]
    },
    "mne.minimum_norm.tests.test_resolution_matrix.mne": {
     "line number": [
      51,
      54,
      58,
      61,
      65,
      69
     ]
    },
    "numpy.abs": {
     "line number": [
      100
     ]
    },
    "numpy.arange": {
     "line number": [
      106
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      114,
      115,
      122
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      111
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      27
     ]
    },
    "mne.minimum_norm.tests.test_resolution_metrics.data_path": {
     "line number": [
      28,
      29,
      31,
      33,
      35
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      159
     ]
    },
    "os.path.join": {
     "line number": [
      28,
      29,
      31,
      33,
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_resolution_metrics._rectify_resolution_matrix": {
  "data": {
   "shadows": "mne.minimum_norm.spatial_resolution._rectify_resolution_matrix"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.data_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_cov": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_evoked": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_fwd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_inv": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.make_inverse_resolution_matrix": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.resolution_metrics": {
  "data": {
   "shadows": "mne.minimum_norm.spatial_resolution.resolution_metrics"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.subjects_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.test_resolution_metrics": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      128,
      130
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      38
     ]
    },
    "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix": {
     "line number": [
      68,
      72,
      76
     ]
    },
    "mne.minimum_norm.spatial_resolution._rectify_resolution_matrix": {
     "line number": [
      154
     ]
    },
    "mne.minimum_norm.spatial_resolution.resolution_metrics": {
     "line number": [
      81,
      83,
      85,
      88,
      90,
      95,
      97,
      100,
      102,
      105,
      107,
      110,
      112,
      115,
      117,
      121,
      123,
      129,
      131
     ]
    },
    "mne.minimum_norm.tests.test_resolution_metrics.fname_cov": {
     "line number": [
      49
     ]
    },
    "mne.minimum_norm.tests.test_resolution_metrics.fname_evoked": {
     "line number": [
      52
     ]
    },
    "mne.minimum_norm.tests.test_resolution_metrics.fname_fwd": {
     "line number": [
      42
     ]
    },
    "mne.minimum_norm.tests.test_resolution_metrics.mne": {
     "line number": [
      42,
      45,
      49,
      52,
      55
     ]
    },
    "mne.minimum_norm.tests.test_resolution_metrics.pytest": {
     "line number": [
      128,
      130
     ]
    },
    "numpy.ones": {
     "line number": [
      153,
      156
     ]
    },
    "numpy.sqrt": {
     "line number": [
      156
     ]
    },
    "numpy.sum": {
     "line number": [
      149,
      149,
      150,
      150
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      140,
      144,
      149,
      150
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      135,
      136,
      138,
      139,
      142,
      146,
      147
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      156
     ]
    },
    "print": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      18
     ]
    },
    "mne.minimum_norm.tests.test_snr.s_path": {
     "line number": [
      19,
      20
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      19,
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_snr._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.estimate_snr": {
  "data": {
   "shadows": "mne.minimum_norm.estimate_snr"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.fname_evoked": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.fname_inv": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.s_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.test_snr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      37
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      23
     ]
    },
    "mne.minimum_norm.estimate_snr": {
     "line number": [
      30
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      28
     ]
    },
    "mne.minimum_norm.tests.test_snr.fname_evoked": {
     "line number": [
      29,
      34
     ]
    },
    "mne.minimum_norm.tests.test_snr.fname_inv": {
     "line number": [
      28,
      34
     ]
    },
    "mne.minimum_norm.tests.test_snr.os": {
     "line number": [
      31,
      32,
      40
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      29
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      27
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      24
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      36
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      41
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      42,
      43
     ]
    },
    "os.path.join": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_snr.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.data_path": {
     "line number": [
      24,
      26,
      28
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      211
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      26,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_time_frequency.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.INVERSE_METHODS": {
  "data": {
   "shadows": "mne.minimum_norm.INVERSE_METHODS"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.compute_source_psd": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.compute_source_psd"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.compute_source_psd_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.compute_source_psd_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_data": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_inv": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_label": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.prepare_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.prepare_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.psd_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.multitaper.psd_array_multitaper"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.source_band_induced_power": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.source_band_induced_power"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.source_induced_power": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.source_induced_power"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_source_psd": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "len": {
     "line number": [
      113,
      113
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      95
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MNE_FREE_ORI": {
     "line number": [
      106
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      100
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      96
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      102
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_data": {
     "line number": [
      100
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_inv": {
     "line number": [
      102
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.pytest": {
     "line number": [
      96,
      97
     ]
    },
    "mne.minimum_norm.time_frequency.compute_source_psd": {
     "line number": [
      108,
      127
     ]
    },
    "numpy.argmax": {
     "line number": [
      117,
      123
     ]
    },
    "numpy.sum": {
     "line number": [
      117,
      123
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_source_psd_epochs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      204
     ]
    },
    "dict": {
     "line number": [
      155
     ]
    },
    "events": {
     "line number": [
      157,
      158
     ]
    },
    "mne.Epochs": {
     "line number": [
      158
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      139
     ]
    },
    "mne.find_events": {
     "line number": [
      157
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      143
     ]
    },
    "mne.label.read_label": {
     "line number": [
      145
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      140
     ]
    },
    "mne.minimum_norm.apply_inverse_epochs": {
     "line number": [
      190
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      165
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      144
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_data": {
     "line number": [
      143
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_inv": {
     "line number": [
      144
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_label": {
     "line number": [
      145
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.pytest": {
     "line number": [
      204,
      140
     ]
    },
    "mne.minimum_norm.time_frequency.compute_source_psd_epochs": {
     "line number": [
      168,
      176,
      205
     ]
    },
    "mne.pick_types": {
     "line number": [
      152
     ]
    },
    "mne.time_frequency.multitaper.psd_array_multitaper": {
     "line number": [
      196
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      187,
      200,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_tfr_with_inverse_operator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      53,
      57,
      83
     ]
    },
    "events": {
     "line number": [
      39,
      51,
      82
     ]
    },
    "len": {
     "line number": [
      70,
      70
     ]
    },
    "list": {
     "line number": [
      70
     ]
    },
    "mne.Epochs": {
     "line number": [
      52,
      82
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      31
     ]
    },
    "mne.find_events": {
     "line number": [
      39
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      38
     ]
    },
    "mne.label.read_label": {
     "line number": [
      58
     ]
    },
    "mne.minimum_norm.INVERSE_METHODS": {
     "line number": [
      32
     ]
    },
    "mne.minimum_norm.prepare_inverse_operator": {
     "line number": [
      41
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      40
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_data": {
     "line number": [
      38
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_inv": {
     "line number": [
      40
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.fname_label": {
     "line number": [
      58
     ]
    },
    "mne.minimum_norm.tests.test_time_frequency.pytest": {
     "line number": [
      32
     ]
    },
    "mne.minimum_norm.time_frequency.source_band_induced_power": {
     "line number": [
      65,
      74
     ]
    },
    "mne.minimum_norm.time_frequency.source_induced_power": {
     "line number": [
      87
     ]
    },
    "mne.pick_types": {
     "line number": [
      46
     ]
    },
    "numpy.all": {
     "line number": [
      71,
      90,
      91
     ]
    },
    "numpy.arange": {
     "line number": [
      86
     ]
    },
    "numpy.max": {
     "line number": [
      92
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      72,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.time_frequency._compute_pow_plv": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "mne.minimum_norm.time_frequency._prepare_tfr": {
     "line number": [
      193
     ]
    },
    "mne.minimum_norm.time_frequency._single_epoch_tfr": {
     "line number": [
      204
     ]
    },
    "numpy.complex128": {
     "line number": [
      196
     ]
    },
    "numpy.dot": {
     "line number": [
      202
     ]
    },
    "numpy.float64": {
     "line number": [
      194
     ]
    },
    "numpy.zeros": {
     "line number": [
      194,
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._compute_source_psd_epochs": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      683
     ]
    },
    "ProgressBar": {
     "line number": [
      612
     ]
    },
    "RuntimeError": {
     "line number": [
      594
     ]
    },
    "_compute_mt_params": {
     "line number": [
      588
     ]
    },
    "_make_stc": {
     "line number": [
      678
     ]
    },
    "_mt_spectra": {
     "line number": [
      618
     ]
    },
    "_psd_from_mt": {
     "line number": [
      639,
      666
     ]
    },
    "_subject_from_inverse": {
     "line number": [
      611
     ]
    },
    "combine_xyz": {
     "line number": [
      673
     ]
    },
    "enumerate": {
     "line number": [
      614
     ]
    },
    "isinstance": {
     "line number": [
      599
     ]
    },
    "len": {
     "line number": [
      585,
      591,
      593,
      595,
      627,
      635,
      662
     ]
    },
    "min": {
     "line number": [
      634,
      661
     ]
    },
    "mne.minimum_norm.time_frequency._prepare_source_params": {
     "line number": [
      569
     ]
    },
    "my_psd_from_mt_adaptive": {
     "line number": [
      632,
      659
     ]
    },
    "numpy.array_split": {
     "line number": [
      580,
      633,
      660
     ]
    },
    "numpy.concatenate": {
     "line number": [
      636,
      663
     ]
    },
    "numpy.diff": {
     "line number": [
      622
     ]
    },
    "numpy.dot": {
     "line number": [
      615,
      630,
      655
     ]
    },
    "numpy.empty": {
     "line number": [
      627,
      642,
      650
     ]
    },
    "numpy.eye": {
     "line number": [
      576
     ]
    },
    "numpy.mean": {
     "line number": [
      622
     ]
    },
    "numpy.newaxis": {
     "line number": [
      609,
      609
     ]
    },
    "numpy.sqrt": {
     "line number": [
      609
     ]
    },
    "numpy.sum": {
     "line number": [
      642
     ]
    },
    "parallel": {
     "line number": [
      606,
      632,
      659
     ]
    },
    "parallel_func": {
     "line number": [
      607
     ]
    },
    "pick_info": {
     "line number": [
      613
     ]
    },
    "range": {
     "line number": [
      629,
      654
     ]
    },
    "str": {
     "line number": [
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._prepare_source_params": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "_assemble_kernel": {
     "line number": [
      47
     ]
    },
    "_check_or_prepare": {
     "line number": [
      31
     ]
    },
    "_pick_channels_inverse_operator": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      38,
      55
     ]
    },
    "numpy.sum": {
     "line number": [
      52
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._prepare_tfr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "len": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._single_epoch_tfr": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "combine_xyz": {
     "line number": [
      247
     ]
    },
    "cwt": {
     "line number": [
      223
     ]
    },
    "enumerate": {
     "line number": [
      222,
      232
     ]
    },
    "len": {
     "line number": [
      224
     ]
    },
    "numpy.abs": {
     "line number": [
      257
     ]
    },
    "numpy.asfortranarray": {
     "line number": [
      224
     ]
    },
    "numpy.complex128": {
     "line number": [
      220,
      228
     ]
    },
    "numpy.dot": {
     "line number": [
      233
     ]
    },
    "numpy.float64": {
     "line number": [
      218,
      230
     ]
    },
    "numpy.imag": {
     "line number": [
      232
     ]
    },
    "numpy.real": {
     "line number": [
      232
     ]
    },
    "numpy.zeros": {
     "line number": [
      218,
      220,
      228,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._source_induced_power": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "len": {
     "line number": [
      288,
      296,
      301
     ]
    },
    "min": {
     "line number": [
      288
     ]
    },
    "mne.minimum_norm.time_frequency._compute_pow_plv": {
     "line number": [
      281
     ]
    },
    "mne.minimum_norm.time_frequency._prepare_source_params": {
     "line number": [
      273
     ]
    },
    "morlet": {
     "line number": [
      286
     ]
    },
    "my_compute_source_tfrs": {
     "line number": [
      289
     ]
    },
    "numpy.abs": {
     "line number": [
      300
     ]
    },
    "numpy.array_split": {
     "line number": [
      294
     ]
    },
    "numpy.newaxis": {
     "line number": [
      306
     ]
    },
    "parallel": {
     "line number": [
      289
     ]
    },
    "parallel_func": {
     "line number": [
      280
     ]
    },
    "sum": {
     "line number": [
      295,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.compute_source_psd": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "Epochs": {
     "line number": [
      529
     ]
    },
    "ValueError": {
     "line number": [
      524
     ]
    },
    "events": {
     "line number": [
      528,
      529
     ]
    },
    "float": {
     "line number": [
      521,
      522
     ]
    },
    "int": {
     "line number": [
      526
     ]
    },
    "make_fixed_length_events": {
     "line number": [
      528
     ]
    },
    "mne.minimum_norm.time_frequency.compute_source_psd_epochs": {
     "line number": [
      531
     ]
    },
    "numpy.log10": {
     "line number": [
      546,
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.compute_source_psd_epochs": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "list": {
     "line number": [
      786
     ]
    },
    "mne.minimum_norm.time_frequency._compute_source_psd_epochs": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.source_band_induced_power": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      138
     ]
    },
    "_log_rescale": {
     "line number": [
      153
     ]
    },
    "_make_stc": {
     "line number": [
      166
     ]
    },
    "_subject_from_inverse": {
     "line number": [
      152
     ]
    },
    "dict": {
     "line number": [
      150
     ]
    },
    "enumerate": {
     "line number": [
      155
     ]
    },
    "float": {
     "line number": [
      165
     ]
    },
    "mne.minimum_norm.time_frequency._source_induced_power": {
     "line number": [
      143
     ]
    },
    "numpy.arange": {
     "line number": [
      140
     ]
    },
    "numpy.concatenate": {
     "line number": [
      140
     ]
    },
    "numpy.mean": {
     "line number": [
      158
     ]
    },
    "rescale": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.source_induced_power": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      392
     ]
    },
    "_check_ori": {
     "line number": [
      393
     ]
    },
    "mne.minimum_norm.time_frequency._source_induced_power": {
     "line number": [
      396
     ]
    },
    "rescale": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.misc": {
  "data": {},
  "type": "module"
 },
 "mne.misc.parse_config": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      40
     ]
    },
    "dict": {
     "line number": [
      30,
      41
     ]
    },
    "enumerate": {
     "line number": [
      29
     ]
    },
    "float": {
     "line number": [
      54
     ]
    },
    "int": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      34,
      44
     ]
    },
    "mne.misc.read_reject_parameters": {
     "line number": [
      24
     ]
    },
    "open": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      32,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.misc.read_flat_parameters": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      94
     ]
    },
    "float": {
     "line number": [
      99
     ]
    },
    "open": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.misc.read_reject_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      77
     ]
    },
    "float": {
     "line number": [
      82
     ]
    },
    "open": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.parallel": {
  "data": {
   "symbols_in_volume": {
    "mne.parallel.os": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.parallel.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "mne.parallel._check_wrapper": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "mne.parallel._check_wrapper.run": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      129,
      132
     ]
    },
    "fun": {
     "line number": [
      128
     ]
    },
    "str": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.parallel._force_serial": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.parallel.check_n_jobs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      176
     ]
    },
    "ValueError": {
     "line number": [
      159,
      161,
      173
     ]
    },
    "isinstance": {
     "line number": [
      157,
      160
     ]
    },
    "min": {
     "line number": [
      171
     ]
    },
    "mne.parallel._force_serial": {
     "line number": [
      163
     ]
    },
    "mne.parallel.multiprocessing": {
     "line number": [
      170
     ]
    },
    "str": {
     "line number": [
      160
     ]
    },
    "warn": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.parallel.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "mne.parallel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.parallel.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "mne.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.parallel.parallel_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      69,
      72
     ]
    },
    "_get_args": {
     "line number": [
      81
     ]
    },
    "get_config": {
     "line number": [
      84,
      86
     ]
    },
    "isinstance": {
     "line number": [
      85
     ]
    },
    "list": {
     "line number": [
      78
     ]
    },
    "mne.parallel._check_wrapper": {
     "line number": [
      113
     ]
    },
    "mne.parallel.check_n_jobs": {
     "line number": [
      112
     ]
    },
    "mne.parallel.logging": {
     "line number": [
      64
     ]
    },
    "parallel": {
     "line number": [
      121
     ]
    },
    "sklearn.externals.joblib.Parallel": {
     "line number": [
      113
     ]
    },
    "sklearn.externals.joblib.Parallel.__init__": {
     "line number": [
      81
     ]
    },
    "sklearn.externals.joblib.delayed": {
     "line number": [
      114
     ]
    },
    "str": {
     "line number": [
      85
     ]
    },
    "warn": {
     "line number": [
      73,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.parallel.parallel_func.parallel_progress": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "ProgressBar": {
     "line number": [
      118
     ]
    },
    "parallel": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._csd": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._csd._compute_csd": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      49,
      51,
      52
     ]
    },
    "numpy.eye": {
     "line number": [
      43
     ]
    },
    "numpy.newaxis": {
     "line number": [
      51,
      51
     ]
    },
    "numpy.sum": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._csd._prepare_G": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "len": {
     "line number": [
      30
     ]
    },
    "numpy.sum": {
     "line number": [
      35
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._csd.compute_current_source_density": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      101,
      108,
      114,
      118,
      122,
      126,
      137,
      145,
      152
     ]
    },
    "_calc_g": {
     "line number": [
      163
     ]
    },
    "_calc_h": {
     "line number": [
      165
     ]
    },
    "_check_preload": {
     "line number": [
      98
     ]
    },
    "_ensure_int": {
     "line number": [
      124
     ]
    },
    "_validate_type": {
     "line number": [
      97,
      116,
      120,
      140,
      141,
      142,
      143,
      148
     ]
    },
    "any": {
     "line number": [
      107
     ]
    },
    "bool": {
     "line number": [
      148
     ]
    },
    "fit_sphere_to_headshape": {
     "line number": [
      130
     ]
    },
    "float": {
     "line number": [
      134
     ]
    },
    "isinstance": {
     "line number": [
      129,
      173
     ]
    },
    "len": {
     "line number": [
      113
     ]
    },
    "mne.preprocessing._csd._compute_csd": {
     "line number": [
      170
     ]
    },
    "mne.preprocessing._csd._prepare_G": {
     "line number": [
      168
     ]
    },
    "numpy.array": {
     "line number": [
      107,
      134,
      150
     ]
    },
    "numpy.clip": {
     "line number": [
      157
     ]
    },
    "numpy.dot": {
     "line number": [
      157,
      175
     ]
    },
    "numpy.isclose": {
     "line number": [
      151
     ]
    },
    "numpy.isfinite": {
     "line number": [
      151
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      156
     ]
    },
    "pick_types": {
     "line number": [
      105
     ]
    },
    "str": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._csd.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing._csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._fine_cal._adjust_mag_normals": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "_pl": {
     "line number": [
      309
     ]
    },
    "_prep_mf_coils": {
     "line number": [
      235
     ]
    },
    "_trans_sss_basis": {
     "line number": [
      236,
      250,
      287
     ]
    },
    "bool": {
     "line number": [
      313
     ]
    },
    "collections.defaultdict": {
     "line number": [
      247
     ]
    },
    "dict": {
     "line number": [
      234,
      243
     ]
    },
    "enumerate": {
     "line number": [
      248
     ]
    },
    "functools.partial": {
     "line number": [
      270
     ]
    },
    "len": {
     "line number": [
      229,
      230,
      258,
      318,
      319,
      320
     ]
    },
    "list": {
     "line number": [
      256,
      302
     ]
    },
    "mne.preprocessing._fine_cal._data_err": {
     "line number": [
      237,
      252,
      291,
      300,
      306
     ]
    },
    "mne.preprocessing._fine_cal._matched_loc_idx": {
     "line number": [
      246
     ]
    },
    "mne.preprocessing._fine_cal._rotate_coil": {
     "line number": [
      284
     ]
    },
    "mne.preprocessing._fine_cal._vector_angle": {
     "line number": [
      292
     ]
    },
    "numpy.abs": {
     "line number": [
      292
     ]
    },
    "numpy.allclose": {
     "line number": [
      314
     ]
    },
    "numpy.argsort": {
     "line number": [
      256
     ]
    },
    "numpy.array": {
     "line number": [
      240,
      244
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      241,
      281,
      314
     ]
    },
    "numpy.max": {
     "line number": [
      303
     ]
    },
    "numpy.ones": {
     "line number": [
      229,
      320
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      292
     ]
    },
    "numpy.zeros": {
     "line number": [
      230
     ]
    },
    "pick_info": {
     "line number": [
      227
     ]
    },
    "pick_types": {
     "line number": [
      224,
      225,
      226,
      231
     ]
    },
    "scipy.optimize.fmin_cobyla": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._cal_sss_target": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "_trans_sss_basis": {
     "line number": [
      363
     ]
    },
    "dict": {
     "line number": [
      357
     ]
    },
    "mne.preprocessing._fine_cal._data_err": {
     "line number": [
      365
     ]
    },
    "mne.preprocessing._fine_cal._rotate_coil": {
     "line number": [
      361
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._data_err": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "_col_norm_pinv": {
     "line number": [
      330
     ]
    },
    "numpy.dot": {
     "line number": [
      329,
      330
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      331,
      332
     ]
    },
    "slice": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._estimate_imbalance": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "_col_norm_pinv": {
     "line number": [
      400
     ]
    },
    "_get_grad_point_coilsets": {
     "line number": [
      381
     ]
    },
    "_prep_mf_coils": {
     "line number": [
      380
     ]
    },
    "_reg_pinv": {
     "line number": [
      412
     ]
    },
    "_trans_sss_basis": {
     "line number": [
      383,
      387
     ]
    },
    "dict": {
     "line number": [
      379
     ]
    },
    "float": {
     "line number": [
      386
     ]
    },
    "len": {
     "line number": [
      378,
      405,
      407,
      409,
      411,
      413,
      422
     ]
    },
    "max": {
     "line number": [
      419
     ]
    },
    "numpy.array": {
     "line number": [
      386,
      387
     ]
    },
    "numpy.dot": {
     "line number": [
      400,
      404
     ]
    },
    "numpy.einsum": {
     "line number": [
      397
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      418,
      419,
      419
     ]
    },
    "numpy.newaxis": {
     "line number": [
      384,
      410,
      414
     ]
    },
    "numpy.zeros": {
     "line number": [
      378,
      422
     ]
    },
    "pick_types": {
     "line number": [
      372,
      373
     ]
    },
    "range": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._matched_loc_idx": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      194,
      195
     ]
    },
    "numpy.where": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._rotate_coil": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "_find_vector_rotation": {
     "line number": [
      341
     ]
    },
    "int": {
     "line number": [
      348
     ]
    },
    "numpy.dot": {
     "line number": [
      343,
      344
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      339,
      340
     ]
    },
    "numpy.zeros": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._rotate_locs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "_coil_trans_to_loc": {
     "line number": [
      206
     ]
    },
    "_find_vector_rotation": {
     "line number": [
      202
     ]
    },
    "_loc_to_coil_trans": {
     "line number": [
      204
     ]
    },
    "numpy.dot": {
     "line number": [
      205
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      199,
      201
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal._vector_angle": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      212
     ]
    },
    "numpy.arccos": {
     "line number": [
      212
     ]
    },
    "numpy.clip": {
     "line number": [
      213
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      214,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal.compute_fine_calibration": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      148
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    },
    "_check_option": {
     "line number": [
      91,
      95
     ]
    },
    "_check_origin": {
     "line number": [
      94
     ]
    },
    "_ensure_int": {
     "line number": [
      90,
      93
     ]
    },
    "_prep_fine_cal": {
     "line number": [
      125
     ]
    },
    "_read_cross_talk": {
     "line number": [
      106
     ]
    },
    "_validate_type": {
     "line number": [
      92,
      109
     ]
    },
    "dict": {
     "line number": [
      109,
      189
     ]
    },
    "enumerate": {
     "line number": [
      126,
      152,
      158
     ]
    },
    "int": {
     "line number": [
      118
     ]
    },
    "len": {
     "line number": [
      114,
      117,
      118,
      120,
      130,
      135,
      135,
      146,
      151,
      165,
      168,
      181,
      186,
      188
     ]
    },
    "list": {
     "line number": [
      131,
      132,
      169
     ]
    },
    "mne.preprocessing._fine_cal._adjust_mag_normals": {
     "line number": [
      142
     ]
    },
    "mne.preprocessing._fine_cal._estimate_imbalance": {
     "line number": [
      176
     ]
    },
    "mne.preprocessing._fine_cal._matched_loc_idx": {
     "line number": [
      155
     ]
    },
    "mne.preprocessing._fine_cal._rotate_locs": {
     "line number": [
      157
     ]
    },
    "numpy.arange": {
     "line number": [
      116
     ]
    },
    "numpy.array": {
     "line number": [
      118,
      122
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      186
     ]
    },
    "numpy.mean": {
     "line number": [
      149,
      150,
      179
     ]
    },
    "numpy.ones": {
     "line number": [
      114
     ]
    },
    "numpy.zeros": {
     "line number": [
      181
     ]
    },
    "pick_info": {
     "line number": [
      101
     ]
    },
    "pick_types": {
     "line number": [
      96,
      102,
      103
     ]
    },
    "range": {
     "line number": [
      188
     ]
    },
    "zip": {
     "line number": [
      136,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal.read_fine_calibration": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      461
     ]
    },
    "ValueError": {
     "line number": [
      470
     ]
    },
    "_check_fname": {
     "line number": [
      452
     ]
    },
    "check_fname": {
     "line number": [
      453
     ]
    },
    "dict": {
     "line number": [
      480
     ]
    },
    "float": {
     "line number": [
      477,
      478
     ]
    },
    "int": {
     "line number": [
      469
     ]
    },
    "len": {
     "line number": [
      460,
      464,
      467
     ]
    },
    "list": {
     "line number": [
      454,
      454,
      454
     ]
    },
    "numpy.array": {
     "line number": [
      477,
      478,
      479
     ]
    },
    "open": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal.write_fine_calibration": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      493
     ]
    },
    "check_fname": {
     "line number": [
      494
     ]
    },
    "numpy.concatenate": {
     "line number": [
      498
     ]
    },
    "open": {
     "line number": [
      496
     ]
    },
    "zip": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._peak_finder": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._peak_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._peak_finder.peak_finder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      52
     ]
    },
    "_pl": {
     "line number": [
      178
     ]
    },
    "float": {
     "line number": [
      65
     ]
    },
    "int": {
     "line number": [
      104
     ]
    },
    "isinstance": {
     "line number": [
      167,
      170
     ]
    },
    "len": {
     "line number": [
      174,
      178
     ]
    },
    "numpy.argmax": {
     "line number": [
      154
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      48
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      168,
      171
     ]
    },
    "numpy.ceil": {
     "line number": [
      104
     ]
    },
    "numpy.concatenate": {
     "line number": [
      70,
      71,
      92,
      93
     ]
    },
    "numpy.diff": {
     "line number": [
      63,
      88
     ]
    },
    "numpy.finfo": {
     "line number": [
      65
     ]
    },
    "numpy.int64": {
     "line number": [
      105
     ]
    },
    "numpy.max": {
     "line number": [
      55
     ]
    },
    "numpy.min": {
     "line number": [
      55,
      76
     ]
    },
    "numpy.ndarray": {
     "line number": [
      167,
      170
     ]
    },
    "numpy.sign": {
     "line number": [
      88
     ]
    },
    "numpy.where": {
     "line number": [
      67
     ]
    },
    "numpy.zeros": {
     "line number": [
      105,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing._regress": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._regress.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._regress.regress_artifact": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61
     ]
    },
    "_check_option": {
     "line number": [
      76
     ]
    },
    "_check_preload": {
     "line number": [
      56
     ]
    },
    "_picks_to_idx": {
     "line number": [
      58,
      59
     ]
    },
    "_validate_type": {
     "line number": [
      57
     ]
    },
    "enumerate": {
     "line number": [
      77
     ]
    },
    "float": {
     "line number": [
      75
     ]
    },
    "len": {
     "line number": [
      66,
      69,
      69
     ]
    },
    "numpy.asarray": {
     "line number": [
      75
     ]
    },
    "numpy.dot": {
     "line number": [
      67,
      84
     ]
    },
    "numpy.empty": {
     "line number": [
      71
     ]
    },
    "numpy.in1d": {
     "line number": [
      60
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      84
     ]
    },
    "numpy.mean": {
     "line number": [
      64,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.bads": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.bads._find_outliers": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43
     ]
    },
    "bool": {
     "line number": [
      33
     ]
    },
    "len": {
     "line number": [
      33
     ]
    },
    "numpy.abs": {
     "line number": [
      37
     ]
    },
    "numpy.any": {
     "line number": [
      46
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      35
     ]
    },
    "numpy.max": {
     "line number": [
      45
     ]
    },
    "numpy.where": {
     "line number": [
      49
     ]
    },
    "numpy.zeros": {
     "line number": [
      33
     ]
    },
    "range": {
     "line number": [
      34
     ]
    },
    "scipy.stats.zscore": {
     "line number": [
      37,
      39,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.bads.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.bads.zscore": {
  "data": {
   "shadows": "scipy.stats.zscore"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ctps_._compute_normalized_phase": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.angle": {
     "line number": [
      23
     ]
    },
    "numpy.pi": {
     "line number": [
      23,
      23
     ]
    },
    "scipy.signal.hilbert": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_._prob_kuiper": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "mne.preprocessing.ctps_.math": {
     "line number": [
      148
     ]
    },
    "numpy.arange": {
     "line number": [
      151
     ]
    },
    "numpy.size": {
     "line number": [
      145
     ]
    },
    "numpy.where": {
     "line number": [
      161,
      164
     ]
    },
    "scipy.special.logsumexp": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.ctps": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      60
     ]
    },
    "enumerate": {
     "line number": [
      72
     ]
    },
    "mne.preprocessing.ctps_._compute_normalized_phase": {
     "line number": [
      63
     ]
    },
    "mne.preprocessing.ctps_.kuiper": {
     "line number": [
      73
     ]
    },
    "numpy.transpose": {
     "line number": [
      72
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.kuiper": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "float": {
     "line number": [
      105,
      106
     ]
    },
    "len": {
     "line number": [
      101
     ]
    },
    "mne.preprocessing.ctps_._prob_kuiper": {
     "line number": [
      116
     ]
    },
    "numpy.arange": {
     "line number": [
      105,
      106
     ]
    },
    "numpy.float64": {
     "line number": [
      80
     ]
    },
    "numpy.newaxis": {
     "line number": [
      108,
      109
     ]
    },
    "numpy.sort": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.ecg": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ecg._get_ecg_channel_index": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      256
     ]
    },
    "len": {
     "line number": [
      260,
      265
     ]
    },
    "pick_channels": {
     "line number": [
      258
     ]
    },
    "pick_types": {
     "line number": [
      251
     ]
    },
    "warn": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ecg._make_ecg": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      396
     ]
    },
    "any": {
     "line number": [
      395
     ]
    },
    "isinstance": {
     "line number": [
      404,
      408,
      411
     ]
    },
    "numpy.hstack": {
     "line number": [
      409
     ]
    },
    "pick_types": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.create_ecg_epochs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "Epochs": {
     "line number": [
      367,
      383
     ]
    },
    "RawArray": {
     "line number": [
      375
     ]
    },
    "ValueError": {
     "line number": [
      357
     ]
    },
    "_picks_to_idx": {
     "line number": [
      364
     ]
    },
    "create_info": {
     "line number": [
      376
     ]
    },
    "events": {
     "line number": [
      360,
      367
     ]
    },
    "mne.preprocessing.ecg.find_ecg_events": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.find_ecg_events": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "_annotations_starts_stops": {
     "line number": [
      200
     ]
    },
    "enumerate": {
     "line number": [
      204
     ]
    },
    "filter_data": {
     "line number": [
      208
     ]
    },
    "int": {
     "line number": [
      222,
      239,
      240
     ]
    },
    "len": {
     "line number": [
      222,
      229,
      232,
      233
     ]
    },
    "list": {
     "line number": [
      202
     ]
    },
    "mne.preprocessing.ecg._get_ecg_channel_index": {
     "line number": [
      189
     ]
    },
    "mne.preprocessing.ecg._make_ecg": {
     "line number": [
      195
     ]
    },
    "mne.preprocessing.ecg.qrs_detector": {
     "line number": [
      217
     ]
    },
    "numpy.arange": {
     "line number": [
      227
     ]
    },
    "numpy.array": {
     "line number": [
      238
     ]
    },
    "numpy.concatenate": {
     "line number": [
      213
     ]
    },
    "numpy.empty": {
     "line number": [
      222
     ]
    },
    "numpy.newaxis": {
     "line number": [
      242
     ]
    },
    "numpy.ones": {
     "line number": [
      240
     ]
    },
    "numpy.zeros": {
     "line number": [
      239
     ]
    },
    "zip": {
     "line number": [
      204,
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.ecg.qrs_detector": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      80
     ]
    },
    "filter_data": {
     "line number": [
      58
     ]
    },
    "float": {
     "line number": [
      120
     ]
    },
    "int": {
     "line number": [
      56,
      63,
      65,
      98
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      68,
      105,
      120,
      120,
      125
     ]
    },
    "list": {
     "line number": [
      85,
      88,
      89,
      90
     ]
    },
    "numpy.abs": {
     "line number": [
      62,
      129
     ]
    },
    "numpy.arange": {
     "line number": [
      78
     ]
    },
    "numpy.argmax": {
     "line number": [
      95
     ]
    },
    "numpy.argmin": {
     "line number": [
      129
     ]
    },
    "numpy.array": {
     "line number": [
      108,
      113,
      120
     ]
    },
    "numpy.diff": {
     "line number": [
      97
     ]
    },
    "numpy.empty": {
     "line number": [
      70
     ]
    },
    "numpy.int64": {
     "line number": [
      97
     ]
    },
    "numpy.logical_and": {
     "line number": [
      124
     ]
    },
    "numpy.max": {
     "line number": [
      71,
      72,
      73
     ]
    },
    "numpy.mean": {
     "line number": [
      75,
      109
     ]
    },
    "numpy.median": {
     "line number": [
      126
     ]
    },
    "numpy.sqrt": {
     "line number": [
      100
     ]
    },
    "numpy.std": {
     "line number": [
      110
     ]
    },
    "numpy.sum": {
     "line number": [
      97
     ]
    },
    "numpy.where": {
     "line number": [
      112,
      124
     ]
    },
    "round": {
     "line number": [
      56
     ]
    },
    "str": {
     "line number": [
      79
     ]
    },
    "sum_squared": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.eog": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.eog._find_eog_events": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "filter_data": {
     "line number": [
      90,
      99
     ]
    },
    "int": {
     "line number": [
      109,
      121,
      122
     ]
    },
    "len": {
     "line number": [
      118
     ]
    },
    "numpy.abs": {
     "line number": [
      110,
      110
     ]
    },
    "numpy.argmax": {
     "line number": [
      96
     ]
    },
    "numpy.array": {
     "line number": [
      90,
      120
     ]
    },
    "numpy.max": {
     "line number": [
      110
     ]
    },
    "numpy.mean": {
     "line number": [
      108
     ]
    },
    "numpy.min": {
     "line number": [
      110
     ]
    },
    "numpy.minimum": {
     "line number": [
      89
     ]
    },
    "numpy.ones": {
     "line number": [
      122
     ]
    },
    "numpy.sqrt": {
     "line number": [
      94
     ]
    },
    "numpy.sum": {
     "line number": [
      94
     ]
    },
    "numpy.zeros": {
     "line number": [
      121
     ]
    },
    "peak_finder": {
     "line number": [
      111,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.eog._get_eog_channel_index": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      155
     ]
    },
    "ValueError": {
     "line number": [
      139,
      158
     ]
    },
    "_pl": {
     "line number": [
      142
     ]
    },
    "isinstance": {
     "line number": [
      129
     ]
    },
    "len": {
     "line number": [
      138,
      149,
      154
     ]
    },
    "pick_channels": {
     "line number": [
      136,
      152
     ]
    },
    "pick_types": {
     "line number": [
      145
     ]
    },
    "str": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.eog.create_eog_epochs": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "Epochs": {
     "line number": [
      245
     ]
    },
    "events": {
     "line number": [
      239,
      245
     ]
    },
    "mne.preprocessing.eog.find_eog_events": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.eog.find_eog_events": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "int": {
     "line number": [
      74
     ]
    },
    "mne.preprocessing.eog._find_eog_events": {
     "line number": [
      65
     ]
    },
    "mne.preprocessing.eog._get_eog_channel_index": {
     "line number": [
      55
     ]
    },
    "numpy.round": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.eog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.flat": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.flat.annotate_flat": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      152
     ]
    },
    "ProgressBar": {
     "line number": [
      120
     ]
    },
    "_annotations_starts_stops": {
     "line number": [
      116
     ]
    },
    "_mask_to_onsets_offsets": {
     "line number": [
      126,
      142
     ]
    },
    "_picks_to_idx": {
     "line number": [
      110
     ]
    },
    "_pl": {
     "line number": [
      145,
      146
     ]
    },
    "_validate_type": {
     "line number": [
      107
     ]
    },
    "bool": {
     "line number": [
      113
     ]
    },
    "float": {
     "line number": [
      108,
      109
     ]
    },
    "int": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      113,
      145,
      146,
      146,
      152
     ]
    },
    "list": {
     "line number": [
      114
     ]
    },
    "numpy.arange": {
     "line number": [
      117
     ]
    },
    "numpy.array": {
     "line number": [
      149,
      149
     ]
    },
    "numpy.concatenate": {
     "line number": [
      117,
      121,
      124
     ]
    },
    "numpy.diff": {
     "line number": [
      123
     ]
    },
    "numpy.round": {
     "line number": [
      115
     ]
    },
    "numpy.zeros": {
     "line number": [
      113
     ]
    },
    "zip": {
     "line number": [
      118,
      122,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.flat.mark_flat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      14
     ]
    },
    "mne.preprocessing.flat.annotate_flat": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.flat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.infomax_.infomax": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      309
     ]
    },
    "check_random_state": {
     "line number": [
      104
     ]
    },
    "int": {
     "line number": [
      128,
      216
     ]
    },
    "min": {
     "line number": [
      161
     ]
    },
    "mne.preprocessing.infomax_.math": {
     "line number": [
      125,
      128,
      128,
      251,
      252
     ]
    },
    "numpy.abs": {
     "line number": [
      202
     ]
    },
    "numpy.dot": {
     "line number": [
      175,
      176,
      181,
      183,
      184,
      193,
      194,
      216,
      218
     ]
    },
    "numpy.exp": {
     "line number": [
      192
     ]
    },
    "numpy.fix": {
     "line number": [
      239
     ]
    },
    "numpy.float64": {
     "line number": [
      138,
      142,
      143,
      144,
      162,
      187,
      198,
      249,
      292,
      293
     ]
    },
    "numpy.floor": {
     "line number": [
      214
     ]
    },
    "numpy.identity": {
     "line number": [
      138,
      142
     ]
    },
    "numpy.max": {
     "line number": [
      202
     ]
    },
    "numpy.ones": {
     "line number": [
      144,
      156,
      299
     ]
    },
    "numpy.pi": {
     "line number": [
      110
     ]
    },
    "numpy.reshape": {
     "line number": [
      186,
      197
     ]
    },
    "numpy.sign": {
     "line number": [
      229
     ]
    },
    "numpy.sum": {
     "line number": [
      186,
      197,
      249,
      251
     ]
    },
    "numpy.tanh": {
     "line number": [
      180
     ]
    },
    "numpy.zeros": {
     "line number": [
      143,
      162,
      163,
      292,
      293,
      302
     ]
    },
    "random_permutation": {
     "line number": [
      170
     ]
    },
    "range": {
     "line number": [
      158,
      174,
      300
     ]
    },
    "scipy.stats.kurtosis": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.infomax_.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.maxfilter": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.maxfilter._mxwarn": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "warn": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.maxfilter.apply_maxfilter": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      120,
      195
     ]
    },
    "fit_sphere_to_headshape": {
     "line number": [
      112
     ]
    },
    "isinstance": {
     "line number": [
      122,
      131,
      142
     ]
    },
    "list": {
     "line number": [
      131,
      142
     ]
    },
    "map": {
     "line number": [
      133
     ]
    },
    "mne.preprocessing.maxfilter._mxwarn": {
     "line number": [
      98,
      102,
      106
     ]
    },
    "mne.preprocessing.maxfilter.os": {
     "line number": [
      185,
      186,
      189,
      190
     ]
    },
    "print": {
     "line number": [
      192
     ]
    },
    "read_raw_fif": {
     "line number": [
      111
     ]
    },
    "str": {
     "line number": [
      122,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.maxfilter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._beer_lambert_law": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._beer_lambert_law._load_absorption": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "interp_hb": {
     "line number": [
      82,
      83
     ]
    },
    "interp_hbo": {
     "line number": [
      82,
      83
     ]
    },
    "numpy.array": {
     "line number": [
      82
     ]
    },
    "os.path.dirname": {
     "line number": [
      75
     ]
    },
    "os.path.join": {
     "line number": [
      75
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      79,
      80
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._beer_lambert_law.beer_lambert_law": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "_channel_frequencies": {
     "line number": [
      37
     ]
    },
    "_check_channels_ordered": {
     "line number": [
      38
     ]
    },
    "_validate_type": {
     "line number": [
      35
     ]
    },
    "dict": {
     "line number": [
      50
     ]
    },
    "enumerate": {
     "line number": [
      52
     ]
    },
    "mne.preprocessing.nirs._beer_lambert_law._load_absorption": {
     "line number": [
      39
     ]
    },
    "numpy.unique": {
     "line number": [
      37
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      45
     ]
    },
    "source_detector_distances": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._beer_lambert_law.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._optical_density": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._optical_density.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._optical_density.optical_density": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      30
     ]
    },
    "_validate_type": {
     "line number": [
      29
     ]
    },
    "numpy.abs": {
     "line number": [
      39
     ]
    },
    "numpy.any": {
     "line number": [
      37
     ]
    },
    "numpy.log": {
     "line number": [
      43
     ]
    },
    "numpy.mean": {
     "line number": [
      31
     ]
    },
    "warn": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._scalp_coupling_index": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._scalp_coupling_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._scalp_coupling_index.scalp_coupling_index": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      49
     ]
    },
    "_channel_frequencies": {
     "line number": [
      52
     ]
    },
    "_check_channels_ordered": {
     "line number": [
      53
     ]
    },
    "_validate_type": {
     "line number": [
      46
     ]
    },
    "filter_data": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      48
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      62
     ]
    },
    "numpy.unique": {
     "line number": [
      52
     ]
    },
    "numpy.zeros": {
     "line number": [
      60
     ]
    },
    "pick_types": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._tddr": {
  "data": {
   "symbols_in_volume": {
    "mne.preprocessing.nirs._tddr.temporal_derivative_distribution_repair": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.nirs._tddr._TDDR": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      138,
      138,
      138
     ]
    },
    "iter": {
     "line number": [
      107,
      116,
      118,
      118
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "max": {
     "line number": [
      138
     ]
    },
    "numpy.abs": {
     "line number": [
      125
     ]
    },
    "numpy.array": {
     "line number": [
      83
     ]
    },
    "numpy.cumsum": {
     "line number": [
      145
     ]
    },
    "numpy.diff": {
     "line number": [
      110
     ]
    },
    "numpy.finfo": {
     "line number": [
      105
     ]
    },
    "numpy.inf": {
     "line number": [
      106
     ]
    },
    "numpy.insert": {
     "line number": [
      145
     ]
    },
    "numpy.mean": {
     "line number": [
      93,
      148
     ]
    },
    "numpy.median": {
     "line number": [
      128
     ]
    },
    "numpy.ones": {
     "line number": [
      113
     ]
    },
    "numpy.sqrt": {
     "line number": [
      105
     ]
    },
    "numpy.sum": {
     "line number": [
      122,
      122
     ]
    },
    "range": {
     "line number": [
      85
     ]
    },
    "scipy.signal.butter": {
     "line number": [
      96
     ]
    },
    "scipy.signal.filtfilt": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._tddr.butter": {
  "data": {
   "shadows": "scipy.signal.butter"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._tddr.filtfilt": {
  "data": {
   "shadows": "scipy.signal.filtfilt"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._tddr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._tddr.tddr": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.preprocessing.nirs._tddr.temporal_derivative_distribution_repair": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      46
     ]
    },
    "_picks_to_idx": {
     "line number": [
      48
     ]
    },
    "_validate_type": {
     "line number": [
      43
     ]
    },
    "len": {
     "line number": [
      45
     ]
    },
    "mne.preprocessing.nirs._tddr._TDDR": {
     "line number": [
      50
     ]
    },
    "pick_types": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs.nirs._channel_frequencies": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      61
     ]
    },
    "int": {
     "line number": [
      62
     ]
    },
    "numpy.empty": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs._check_channels_ordered": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74,
      88,
      100
     ]
    },
    "_picks_to_idx": {
     "line number": [
      72
     ]
    },
    "float": {
     "line number": [
      85,
      87
     ]
    },
    "int": {
     "line number": [
      98,
      99
     ]
    },
    "len": {
     "line number": [
      73,
      77
     ]
    },
    "mne.preprocessing.nirs.nirs.re": {
     "line number": [
      79,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs._fnirs_check_bads": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      117
     ]
    },
    "_picks_to_idx": {
     "line number": [
      113
     ]
    },
    "len": {
     "line number": [
      116
     ]
    },
    "set": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs._fnirs_spread_bads": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      125
     ]
    },
    "len": {
     "line number": [
      129
     ]
    },
    "list": {
     "line number": [
      126
     ]
    },
    "set": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs.nirs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs.nirs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs.nirs.short_channels": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "mne.preprocessing.nirs.nirs.source_detector_distances": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs.source_detector_distances": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      33
     ]
    },
    "float": {
     "line number": [
      34
     ]
    },
    "numpy.array": {
     "line number": [
      34
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.otp": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.otp._otp": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      114
     ]
    },
    "_normalize_vectors": {
     "line number": [
      124
     ]
    },
    "enumerate": {
     "line number": [
      128
     ]
    },
    "len": {
     "line number": [
      126,
      130
     ]
    },
    "list": {
     "line number": [
      130,
      130
     ]
    },
    "mne.preprocessing.otp._svd_cov": {
     "line number": [
      127,
      132
     ]
    },
    "numpy.dot": {
     "line number": [
      125,
      133,
      133,
      138,
      138
     ]
    },
    "numpy.isfinite": {
     "line number": [
      113
     ]
    },
    "numpy.ix_": {
     "line number": [
      132
     ]
    },
    "numpy.mean": {
     "line number": [
      117
     ]
    },
    "range": {
     "line number": [
      130,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.otp._svd_cov": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "float": {
     "line number": [
      24
     ]
    },
    "numpy.dot": {
     "line number": [
      28
     ]
    },
    "numpy.finfo": {
     "line number": [
      24
     ]
    },
    "numpy.ones": {
     "line number": [
      23
     ]
    },
    "numpy.sqrt": {
     "line number": [
      25
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.otp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.otp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.otp.oversampled_temporal_projection": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93
     ]
    },
    "_COLA": {
     "line number": [
      99
     ]
    },
    "_Storer": {
     "line number": [
      101
     ]
    },
    "_picks_to_idx": {
     "line number": [
      81
     ]
    },
    "enumerate": {
     "line number": [
      83
     ]
    },
    "float": {
     "line number": [
      91
     ]
    },
    "functools.partial": {
     "line number": [
      100
     ]
    },
    "int": {
     "line number": [
      88,
      89,
      91
     ]
    },
    "len": {
     "line number": [
      92,
      96,
      102,
      103,
      103
     ]
    },
    "list": {
     "line number": [
      82,
      82,
      103
     ]
    },
    "numpy.array": {
     "line number": [
      88,
      89
     ]
    },
    "range": {
     "line number": [
      103
     ]
    },
    "round": {
     "line number": [
      91
     ]
    },
    "tuple": {
     "line number": [
      106
     ]
    },
    "zip": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.otp.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.preprocessing.ssp": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ssp._compute_exg_proj": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "Epochs": {
     "line number": [
      118
     ]
    },
    "compute_proj_epochs": {
     "line number": [
      131
     ]
    },
    "compute_proj_evoked": {
     "line number": [
      128
     ]
    },
    "copy": {
     "line number": [
      38,
      39
     ]
    },
    "copy.deepcopy": {
     "line number": [
      45,
      76
     ]
    },
    "events": {
     "line number": [
      59,
      65,
      73,
      118,
      124,
      139
     ]
    },
    "events.shape": {
     "line number": [
      71
     ]
    },
    "find_ecg_events": {
     "line number": [
      59
     ]
    },
    "find_eog_events": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      47,
      81,
      84,
      87,
      90,
      94,
      97,
      100,
      103,
      109
     ]
    },
    "make_eeg_average_ref_proj": {
     "line number": [
      50
     ]
    },
    "mne.preprocessing.ssp._safe_del_key": {
     "line number": [
      83,
      86,
      89,
      92,
      96,
      99,
      102,
      105
     ]
    },
    "pick_types": {
     "line number": [
      81,
      84,
      87,
      90,
      94,
      97,
      100,
      103,
      110
     ]
    },
    "warn": {
     "line number": [
      72,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ssp._safe_del_key": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.compute_proj_ecg": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "copy": {
     "line number": [
      252
     ]
    },
    "dict": {
     "line number": [
      146
     ]
    },
    "mne.preprocessing.ssp._compute_exg_proj": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.compute_proj_eog": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "copy": {
     "line number": [
      361
     ]
    },
    "dict": {
     "line number": [
      260
     ]
    },
    "mne.preprocessing.ssp._compute_exg_proj": {
     "line number": [
      357
     ]
    },
    "numpy.inf": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.preprocessing.ssp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.stim": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.stim._fix_artifact": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "f": {
     "line number": [
      31
     ]
    },
    "numpy.arange": {
     "line number": [
      30
     ]
    },
    "numpy.array": {
     "line number": [
      28
     ]
    },
    "numpy.newaxis": {
     "line number": [
      35
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.stim._get_window": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      19
     ]
    },
    "numpy.ones": {
     "line number": [
      19
     ]
    },
    "numpy.r_.T": {
     "line number": [
      18
     ]
    },
    "scipy.signal.hann": {
     "line number": [
      18,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.stim.fix_stim_artifact": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      99
     ]
    },
    "TypeError": {
     "line number": [
      115
     ]
    },
    "ValueError": {
     "line number": [
      74,
      86
     ]
    },
    "_check_option": {
     "line number": [
      70
     ]
    },
    "_check_preload": {
     "line number": [
      81
     ]
    },
    "_pick_data_channels": {
     "line number": [
      79
     ]
    },
    "events": {
     "line number": [
      83,
      84,
      85,
      88,
      90,
      91
     ]
    },
    "find_events": {
     "line number": [
      84
     ]
    },
    "int": {
     "line number": [
      71,
      72,
      94,
      95,
      101
     ]
    },
    "isinstance": {
     "line number": [
      82,
      97,
      108
     ]
    },
    "len": {
     "line number": [
      85,
      88
     ]
    },
    "mne.preprocessing.stim._fix_artifact": {
     "line number": [
      96,
      106,
      112
     ]
    },
    "mne.preprocessing.stim._get_window": {
     "line number": [
      78
     ]
    },
    "numpy.arange": {
     "line number": [
      88
     ]
    },
    "numpy.ceil": {
     "line number": [
      71,
      72,
      101
     ]
    },
    "type": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.stim.hann": {
  "data": {
   "shadows": "scipy.signal.hann"
  },
  "type": "import"
 },
 "mne.preprocessing.stim.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.preprocessing.stim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.tests.test_artifact_detection": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      17
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.data_path": {
     "line number": [
      18,
      21
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.pre": {
     "line number": [
      20
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.sss_path": {
     "line number": [
      19
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      19,
      21
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_artifact_detection.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.annotate_movement": {
  "data": {
   "shadows": "mne.preprocessing.annotate_movement"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.annotate_muscle_zscore": {
  "data": {
   "shadows": "mne.preprocessing.annotate_muscle_zscore"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.compute_average_dev_head_t": {
  "data": {
   "shadows": "mne.preprocessing.compute_average_dev_head_t"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.data_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.pos_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.pre": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.raw_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.sss_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.test_movement_annotation_head_correction": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "mne.Annotations": {
     "line number": [
      55
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      28
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      24
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      27
     ]
    },
    "mne.preprocessing.annotate_movement": {
     "line number": [
      31,
      35,
      39,
      56
     ]
    },
    "mne.preprocessing.compute_average_dev_head_t": {
     "line number": [
      44
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.pos_fname": {
     "line number": [
      28
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.raw_fname": {
     "line number": [
      27
     ]
    },
    "numpy.array": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_artifact_detection.test_muscle_annotation": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "int": {
     "line number": [
      69,
      70
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      60
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      63
     ]
    },
    "mne.preprocessing.annotate_muscle_zscore": {
     "line number": [
      66
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.raw_fname": {
     "line number": [
      63
     ]
    },
    "numpy.array": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_artifact_detection.test_muscle_annotation_without_meeg_data": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      75
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      78
     ]
    },
    "mne.preprocessing.annotate_muscle_zscore": {
     "line number": [
      82
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.pytest": {
     "line number": [
      81
     ]
    },
    "mne.preprocessing.tests.test_artifact_detection.raw_fname": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_artifact_detection.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      20,
      22,
      24
     ]
    },
    "os.path.join": {
     "line number": [
      20,
      22,
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.BaseRaw": {
  "data": {
   "shadows": "mne.io.BaseRaw"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law._validate_type": {
  "data": {
   "shadows": "mne.utils._validate_type"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2_short": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.test_beer_lambert": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      29
     ]
    },
    "mne.io.BaseRaw": {
     "line number": [
      45,
      52
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      39
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      36
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      51
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      44
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0": {
     "line number": [
      31
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2": {
     "line number": [
      30
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2_short": {
     "line number": [
      30
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.pytest": {
     "line number": [
      41,
      47,
      54,
      30,
      32
     ]
    },
    "mne.utils._validate_type": {
     "line number": [
      45,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.test_beer_lambert_unordered_errors": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67,
      74,
      79
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      61
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      64
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      68,
      75,
      80
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      65,
      72
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0": {
     "line number": [
      64
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.pytest": {
     "line number": [
      67,
      74,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.test_beer_lambert_v_matlab": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "int": {
     "line number": [
      101,
      102
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      91
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      83
     ]
    },
    "mne.externals.pymatreader.read_mat": {
     "line number": [
      94
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      86
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      88
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      87
     ]
    },
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0": {
     "line number": [
      86
     ]
    },
    "numpy.mean": {
     "line number": [
      98
     ]
    },
    "os.path.join": {
     "line number": [
      91
     ]
    },
    "range": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      101,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      28
     ]
    },
    "mne.preprocessing.tests.test_csd.data_path": {
     "line number": [
      29,
      30,
      31
     ]
    },
    "mne.preprocessing.tests.test_csd.io_path": {
     "line number": [
      34
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      187
     ]
    },
    "os.path.dirname": {
     "line number": [
      33
     ]
    },
    "os.path.join": {
     "line number": [
      28,
      29,
      30,
      31,
      33,
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_csd.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.compute_current_source_density": {
  "data": {
   "shadows": "mne.preprocessing.compute_current_source_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.coords_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.csd_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.data_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.eeg_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.evoked_csd_sphere": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "mne.EvokedArray": {
     "line number": [
      60
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      56
     ]
    },
    "mne.create_info": {
     "line number": [
      58
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      37
     ]
    },
    "mne.preprocessing.tests.test_csd.coords_fname": {
     "line number": [
      41
     ]
    },
    "mne.preprocessing.tests.test_csd.csd_fname": {
     "line number": [
      42
     ]
    },
    "mne.preprocessing.tests.test_csd.eeg_fname": {
     "line number": [
      40
     ]
    },
    "mne.preprocessing.tests.test_csd.pytest": {
     "line number": [
      37
     ]
    },
    "numpy.array": {
     "line number": [
      43
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      51
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      54
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      40,
      41,
      42
     ]
    },
    "str": {
     "line number": [
      54
     ]
    },
    "zip": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.io_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.raw_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.test_csd_degenerate": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      151
     ]
    },
    "TypeError": {
     "line number": [
      93,
      112,
      118,
      124,
      140
     ]
    },
    "ValueError": {
     "line number": [
      90,
      97,
      102,
      106,
      115,
      121,
      128,
      133,
      136
     ]
    },
    "len": {
     "line number": [
      149
     ]
    },
    "mne.Epochs": {
     "line number": [
      145
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      144
     ]
    },
    "mne.preprocessing.compute_current_source_density": {
     "line number": [
      91,
      94,
      100,
      104,
      110,
      113,
      116,
      119,
      122,
      125,
      130,
      134,
      138,
      141,
      152,
      154,
      156,
      158
     ]
    },
    "mne.preprocessing.tests.test_csd.evoked_csd_sphere": {
     "line number": [
      87
     ]
    },
    "mne.preprocessing.tests.test_csd.pytest": {
     "line number": [
      90,
      93,
      97,
      102,
      106,
      112,
      115,
      118,
      121,
      124,
      128,
      133,
      136,
      140,
      151
     ]
    },
    "numpy.allclose": {
     "line number": [
      155
     ]
    },
    "numpy.array": {
     "line number": [
      99
     ]
    },
    "numpy.inf": {
     "line number": [
      103
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      150,
      157,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.test_csd_fif": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "len": {
     "line number": [
      169
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      182
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG_CSD": {
     "line number": [
      180
     ]
    },
    "mne.io.constants.FIFF.FIFFV_MNE_CUSTOM_REF_CSD": {
     "line number": [
      176
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_V": {
     "line number": [
      182
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_V_M2": {
     "line number": [
      181
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      164
     ]
    },
    "mne.pick_types": {
     "line number": [
      166
     ]
    },
    "mne.preprocessing.compute_current_source_density": {
     "line number": [
      170
     ]
    },
    "mne.preprocessing.tests.test_csd.raw_fname": {
     "line number": [
      164
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.test_csd_matlab": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      77
     ]
    },
    "mne.preprocessing.compute_current_source_density": {
     "line number": [
      68,
      79
     ]
    },
    "mne.preprocessing.tests.test_csd.evoked_csd_sphere": {
     "line number": [
      67
     ]
    },
    "mne.preprocessing.tests.test_csd.pytest": {
     "line number": [
      77
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      69,
      75,
      82
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps": {
  "data": {
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      23,
      26
     ]
    },
    "mne.preprocessing.tests.test_ctps.Ws": {
     "line number": [
      26,
      26
     ]
    },
    "mne.preprocessing.tests.test_ctps.n_samples": {
     "line number": [
      20,
      20
     ]
    },
    "mne.preprocessing.tests.test_ctps.roll_to": {
     "line number": [
      28
     ]
    },
    "mne.preprocessing.tests.test_ctps.sfreq": {
     "line number": [
      18,
      24
     ]
    },
    "mne.preprocessing.tests.test_ctps.single_trial": {
     "line number": [
      26
     ]
    },
    "mne.preprocessing.tests.test_ctps.times": {
     "line number": [
      23
     ]
    },
    "mne.preprocessing.tests.test_ctps.tmin": {
     "line number": [
      20,
      20
     ]
    },
    "mne.preprocessing.tests.test_ctps.tstep": {
     "line number": [
      20
     ]
    },
    "mne.time_frequency.morlet": {
     "line number": [
      24
     ]
    },
    "numpy.linspace": {
     "line number": [
      20
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      29
     ]
    },
    "numpy.real": {
     "line number": [
      26
     ]
    },
    "numpy.roll": {
     "line number": [
      28
     ]
    },
    "numpy.zeros": {
     "line number": [
      23
     ]
    },
    "zip": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ctps.Ws": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps._compute_normalized_phase": {
  "data": {
   "shadows": "mne.preprocessing.ctps_._compute_normalized_phase"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps._prob_kuiper": {
  "data": {
   "shadows": "mne.preprocessing.ctps_._prob_kuiper"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.ctps": {
  "data": {
   "shadows": "mne.preprocessing.ctps_.ctps"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.get_data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "mne.preprocessing.tests.test_ctps.rng": {
     "line number": [
      36,
      37
     ]
    },
    "mne.preprocessing.tests.test_ctps.single_trial": {
     "line number": [
      34,
      38
     ]
    },
    "numpy.array": {
     "line number": [
      38
     ]
    },
    "numpy.concatenate": {
     "line number": [
      39
     ]
    },
    "numpy.roll": {
     "line number": [
      38
     ]
    },
    "numpy.tile": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ctps.iter_test_ctps": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.morlet": {
  "data": {
   "shadows": "mne.time_frequency.morlet"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.n_samples": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.rng": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.roll_to": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.sfreq": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.single_trial": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.test_ctps": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "mne.preprocessing.ctps_._compute_normalized_phase": {
     "line number": [
      57
     ]
    },
    "mne.preprocessing.ctps_._prob_kuiper": {
     "line number": [
      80,
      82,
      83,
      84
     ]
    },
    "mne.preprocessing.ctps_.ctps": {
     "line number": [
      56,
      58,
      78
     ]
    },
    "mne.preprocessing.tests.test_ctps.get_data": {
     "line number": [
      55
     ]
    },
    "mne.preprocessing.tests.test_ctps.iter_test_ctps": {
     "line number": [
      54
     ]
    },
    "mne.preprocessing.tests.test_ctps.pytest": {
     "line number": [
      78
     ]
    },
    "numpy.array": {
     "line number": [
      82,
      83
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      61,
      82
     ]
    },
    "numpy.unique": {
     "line number": [
      74
     ]
    },
    "zip": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ctps.times": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.tmin": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.tstep": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg": {
  "data": {
   "symbols_in_volume": {
    "mne.preprocessing.tests.test_ecg.data_path": {
     "line number": [
      10,
      11,
      12
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      82
     ]
    },
    "os.path.dirname": {
     "line number": [
      9
     ]
    },
    "os.path.join": {
     "line number": [
      9,
      10,
      11,
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ecg.create_ecg_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_ecg_epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.data_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.event_fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.find_ecg_events": {
  "data": {
   "shadows": "mne.preprocessing.find_ecg_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.proj_fname": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.raw_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.test_find_ecg": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      71
     ]
    },
    "events": {
     "line number": [
      28,
      31
     ]
    },
    "len": {
     "line number": [
      31,
      56,
      64,
      77
     ]
    },
    "list": {
     "line number": [
      70
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      18
     ]
    },
    "mne.pick_types": {
     "line number": [
      46,
      60
     ]
    },
    "mne.preprocessing.create_ecg_epochs": {
     "line number": [
      55,
      66,
      73,
      76
     ]
    },
    "mne.preprocessing.find_ecg_events": {
     "line number": [
      28,
      35,
      38,
      41
     ]
    },
    "mne.preprocessing.tests.test_ecg.pytest": {
     "line number": [
      71
     ]
    },
    "mne.preprocessing.tests.test_ecg.raw_fname": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      180
     ]
    },
    "os.path.dirname": {
     "line number": [
      16
     ]
    },
    "os.path.join": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.base_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.generate_data_for_comparing_against_eeglab_infomax": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      21
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      24
     ]
    },
    "mne.pick_types": {
     "line number": [
      27,
      29
     ]
    },
    "mne.utils.random_permutation": {
     "line number": [
      34
     ]
    },
    "numpy.dot": {
     "line number": [
      51,
      55,
      56
     ]
    },
    "numpy.sqrt": {
     "line number": [
      55
     ]
    },
    "numpy.std": {
     "line number": [
      48
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      22
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.infomax": {
  "data": {
   "shadows": "mne.preprocessing.infomax_.infomax"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pinv": {
  "data": {
   "shadows": "scipy.linalg.pinv"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.random_permutation": {
  "data": {
   "shadows": "mne.utils.random_permutation"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.test_mne_python_vs_eeglab": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      76
     ]
    },
    "int": {
     "line number": [
      132
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      62
     ]
    },
    "mne.preprocessing.infomax_.infomax": {
     "line number": [
      149
     ]
    },
    "mne.preprocessing.tests.test_eeglab_infomax.base_dir": {
     "line number": [
      171
     ]
    },
    "mne.preprocessing.tests.test_eeglab_infomax.generate_data_for_comparing_against_eeglab_infomax": {
     "line number": [
      70
     ]
    },
    "mne.preprocessing.tests.test_eeglab_infomax.pytest": {
     "line number": [
      61
     ]
    },
    "numpy.abs": {
     "line number": [
      174
     ]
    },
    "numpy.argsort": {
     "line number": [
      162
     ]
    },
    "numpy.ceil": {
     "line number": [
      132
     ]
    },
    "numpy.dot": {
     "line number": [
      157
     ]
    },
    "numpy.log": {
     "line number": [
      131,
      132
     ]
    },
    "numpy.max": {
     "line number": [
      174
     ]
    },
    "numpy.min": {
     "line number": [
      132
     ]
    },
    "numpy.sum": {
     "line number": [
      160,
      161
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      177
     ]
    },
    "os.path.join": {
     "line number": [
      171
     ]
    },
    "scipy.io.loadmat": {
     "line number": [
      171
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog": {
  "data": {
   "symbols_in_volume": {
    "mne.preprocessing.tests.test_eog.data_path": {
     "line number": [
      8,
      9,
      10
     ]
    },
    "os.path.dirname": {
     "line number": [
      7
     ]
    },
    "os.path.join": {
     "line number": [
      7,
      8,
      9,
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_eog.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.data_path": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.event_fname": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.find_eog_events": {
  "data": {
   "shadows": "mne.preprocessing.eog.find_eog_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.proj_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.raw_fname": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.test_find_eog": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "all": {
     "line number": [
      19,
      22
     ]
    },
    "events": {
     "line number": [
      17,
      18,
      19,
      21,
      22
     ]
    },
    "len": {
     "line number": [
      18,
      26
     ]
    },
    "mne.Annotations": {
     "line number": [
      16
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      15
     ]
    },
    "mne.preprocessing.eog.find_eog_events": {
     "line number": [
      17,
      21,
      25
     ]
    },
    "mne.preprocessing.tests.test_eog.raw_fname": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.data_path": {
     "line number": [
      24,
      25,
      26,
      27,
      28
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      26,
      27,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_fine_cal._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal._assert_shielding": {
  "data": {
   "shadows": "mne.preprocessing.tests.test_maxwell._assert_shielding"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io.tag._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.cal_mf_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.compute_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing.compute_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.ctc": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.erm_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.fine_cal_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.fine_cal_fname_3d": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.read_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing.read_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.test_compute_fine_cal": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      108
     ]
    },
    "float": {
     "line number": [
      63,
      64
     ]
    },
    "len": {
     "line number": [
      127
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      49
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      52
     ]
    },
    "mne.io.tag._loc_to_coil_trans": {
     "line number": [
      73,
      74,
      75
     ]
    },
    "mne.pick_types": {
     "line number": [
      88,
      126
     ]
    },
    "mne.preprocessing.compute_fine_calibration": {
     "line number": [
      54,
      117,
      131
     ]
    },
    "mne.preprocessing.maxwell_filter": {
     "line number": [
      109,
      110,
      111,
      139
     ]
    },
    "mne.preprocessing.read_fine_calibration": {
     "line number": [
      53
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.cal_mf_fname": {
     "line number": [
      53,
      110
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.ctc": {
     "line number": [
      55,
      108,
      118,
      132
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.erm_fname": {
     "line number": [
      52
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.pytest": {
     "line number": [
      48
     ]
    },
    "mne.preprocessing.tests.test_maxwell._assert_shielding": {
     "line number": [
      112,
      113,
      114,
      140
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      83,
      84,
      85
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      80,
      81,
      82
     ]
    },
    "numpy.array": {
     "line number": [
      63,
      64,
      68,
      128,
      134
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      137
     ]
    },
    "numpy.dot": {
     "line number": [
      89
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      76,
      78,
      90,
      90
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      83,
      84,
      85
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      77,
      79,
      121,
      122
     ]
    },
    "set": {
     "line number": [
      57,
      57
     ]
    },
    "sum": {
     "line number": [
      60,
      61,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal.test_fine_cal_io": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      33
     ]
    },
    "mne.preprocessing.read_fine_calibration": {
     "line number": [
      38,
      42
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.cal_mf_fname": {
     "line number": [
      31
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.fine_cal_fname": {
     "line number": [
      31
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.fine_cal_fname_3d": {
     "line number": [
      32
     ]
    },
    "mne.preprocessing.tests.test_fine_cal.pytest": {
     "line number": [
      31
     ]
    },
    "mne.preprocessing.write_fine_calibration": {
     "line number": [
      41
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      45
     ]
    },
    "os.path.join": {
     "line number": [
      36
     ]
    },
    "str": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.write_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing.write_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      15
     ]
    },
    "mne.preprocessing.tests.test_flat.data_path": {
     "line number": [
      16
     ]
    },
    "os.path.join": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_flat.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat._assert_annotations_equal": {
  "data": {
   "shadows": "mne.tests.test_annotations._assert_annotations_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.annotate_flat": {
  "data": {
   "shadows": "mne.preprocessing.annotate_flat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.data_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_flat.mark_flat": {
  "data": {
   "shadows": "mne.preprocessing.mark_flat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.skip_fname": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_flat.test_annotate_flat": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      74
     ]
    },
    "ValueError": {
     "line number": [
      76
     ]
    },
    "dict": {
     "line number": [
      39,
      40,
      41,
      62,
      63,
      64,
      65
     ]
    },
    "int": {
     "line number": [
      57
     ]
    },
    "mne.create_info": {
     "line number": [
      26
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      29
     ]
    },
    "mne.preprocessing.annotate_flat": {
     "line number": [
      43,
      66,
      75,
      77
     ]
    },
    "mne.preprocessing.mark_flat": {
     "line number": [
      50
     ]
    },
    "mne.preprocessing.tests.test_flat.pytest": {
     "line number": [
      49,
      74,
      76,
      19
     ]
    },
    "mne.tests.test_annotations._assert_annotations_equal": {
     "line number": [
      51
     ]
    },
    "numpy.diff": {
     "line number": [
      25
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      24
     ]
    },
    "round": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_flat.test_flat_acq_skip": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "int": {
     "line number": [
      87
     ]
    },
    "len": {
     "line number": [
      85
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      80
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      83
     ]
    },
    "mne.preprocessing.annotate_flat": {
     "line number": [
      84
     ]
    },
    "mne.preprocessing.tests.test_flat.skip_fname": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_flat.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      18,
      20,
      22
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      20,
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_nirs._fnirs_check_bads": {
  "data": {
   "shadows": "mne.preprocessing.nirs._fnirs_check_bads"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs._fnirs_spread_bads": {
  "data": {
   "shadows": "mne.preprocessing.nirs._fnirs_spread_bads"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.fname_nirx_15_0": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_nirs.fname_nirx_15_2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_nirs.fname_nirx_15_2_short": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_nirs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.test_fnirs_check_bads": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      52,
      54,
      56
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      27
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      33,
      41,
      50
     ]
    },
    "mne.preprocessing.nirs._fnirs_check_bads": {
     "line number": [
      34,
      36,
      38,
      43,
      45,
      47,
      52,
      54,
      56
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      37,
      46,
      55
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      35,
      44,
      53
     ]
    },
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_0": {
     "line number": [
      29
     ]
    },
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2": {
     "line number": [
      28
     ]
    },
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2_short": {
     "line number": [
      28
     ]
    },
    "mne.preprocessing.tests.test_nirs.pytest": {
     "line number": [
      52,
      54,
      56,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_nirs.test_fnirs_spread_bads": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      59
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      65
     ]
    },
    "mne.preprocessing.nirs._fnirs_spread_bads": {
     "line number": [
      67,
      73,
      80
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      77
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      71
     ]
    },
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_0": {
     "line number": [
      61
     ]
    },
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2": {
     "line number": [
      60
     ]
    },
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2_short": {
     "line number": [
      60
     ]
    },
    "mne.preprocessing.tests.test_nirs.pytest": {
     "line number": [
      60
     ]
    },
    "print": {
     "line number": [
      79,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_nirs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19
     ]
    },
    "os.path.join": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_optical_density.BaseRaw": {
  "data": {
   "shadows": "mne.io.BaseRaw"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density._validate_type": {
  "data": {
   "shadows": "mne.utils._validate_type"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.fname_nirx": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_optical_density.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.test_optical_density": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      23
     ]
    },
    "mne.io.BaseRaw": {
     "line number": [
      30
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      26
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      29
     ]
    },
    "mne.preprocessing.tests.test_optical_density.fname_nirx": {
     "line number": [
      26
     ]
    },
    "mne.utils._validate_type": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_optical_density.test_optical_density_manual": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      45
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      49
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      57
     ]
    },
    "mne.preprocessing.tests.test_optical_density.fname_nirx": {
     "line number": [
      49
     ]
    },
    "numpy.ones": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      58,
      59
     ]
    },
    "numpy.tile": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_optical_density.test_optical_density_zeromean": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      40
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      35
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      38
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      41
     ]
    },
    "mne.preprocessing.tests.test_optical_density.fname_nirx": {
     "line number": [
      38
     ]
    },
    "mne.preprocessing.tests.test_optical_density.pytest": {
     "line number": [
      40
     ]
    },
    "numpy.mean": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_optical_density.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19
     ]
    },
    "mne.preprocessing.tests.test_otp.data_path": {
     "line number": [
      20,
      21,
      22
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      104
     ]
    },
    "os.path.join": {
     "line number": [
      20,
      21,
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_otp.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp._pick_data_channels": {
  "data": {
   "shadows": "mne.io.pick._pick_data_channels"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_otp.erm_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_otp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.oversampled_temporal_projection": {
  "data": {
   "shadows": "mne.preprocessing.oversampled_temporal_projection"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.rfft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.rfftfreq": {
  "data": {
   "shadows": "numpy.fft.rfftfreq"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.skip_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_otp.test_otp_array": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      82
     ]
    },
    "ValueError": {
     "line number": [
      76,
      78
     ]
    },
    "mne.create_info": {
     "line number": [
      31,
      75
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      31,
      75
     ]
    },
    "mne.preprocessing.oversampled_temporal_projection": {
     "line number": [
      49,
      55,
      61,
      69,
      77,
      79,
      83
     ]
    },
    "mne.preprocessing.tests.test_otp.pytest": {
     "line number": [
      76,
      78,
      82
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      48,
      54,
      60
     ]
    },
    "numpy.inf": {
     "line number": [
      81
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      70,
      71
     ]
    },
    "numpy.pi": {
     "line number": [
      33
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      29
     ]
    },
    "numpy.sin": {
     "line number": [
      33
     ]
    },
    "numpy.zeros": {
     "line number": [
      75
     ]
    },
    "snr": {
     "line number": [
      47,
      51,
      57,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_otp.test_otp_array.snr": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "len": {
     "line number": [
      42
     ]
    },
    "list": {
     "line number": [
      42,
      42
     ]
    },
    "numpy.fft.rfft": {
     "line number": [
      39
     ]
    },
    "numpy.fft.rfftfreq": {
     "line number": [
      40
     ]
    },
    "numpy.where": {
     "line number": [
      41
     ]
    },
    "range": {
     "line number": [
      42,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_otp.test_otp_real": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      86
     ]
    },
    "mne.io.pick._pick_data_channels": {
     "line number": [
      93
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      90,
      99
     ]
    },
    "mne.preprocessing.oversampled_temporal_projection": {
     "line number": [
      92,
      101
     ]
    },
    "mne.preprocessing.tests.test_otp.erm_fname": {
     "line number": [
      89
     ]
    },
    "mne.preprocessing.tests.test_otp.skip_fname": {
     "line number": [
      99
     ]
    },
    "mne.preprocessing.tests.test_otp.triux_fname": {
     "line number": [
      89
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      94,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_otp.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.triux_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_peak_finder": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_peak_finder.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.peak_finder": {
  "data": {
   "shadows": "mne.preprocessing.peak_finder"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.test_peak_finder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      19,
      23
     ]
    },
    "mne.preprocessing.peak_finder": {
     "line number": [
      13,
      20,
      24,
      27,
      33,
      39
     ]
    },
    "mne.preprocessing.tests.test_peak_finder.pytest": {
     "line number": [
      19,
      23
     ]
    },
    "numpy.arange": {
     "line number": [
      20,
      27
     ]
    },
    "numpy.dtype": {
     "line number": [
      15,
      16,
      29,
      30,
      35,
      36
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      12
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      15,
      16,
      29,
      30,
      35,
      36
     ]
    },
    "numpy.zeros": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_regress": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      16
     ]
    },
    "mne.preprocessing.tests.test_regress.data_path": {
     "line number": [
      17
     ]
    },
    "os.path.join": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_regress.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.create_eog_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_eog_epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.data_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_regress.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.raw_fname": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_regress.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.regress_artifact": {
  "data": {
   "shadows": "mne.preprocessing.regress_artifact"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_regress.test_regress_artifact": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      35,
      37
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      20
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      23
     ]
    },
    "mne.preprocessing.create_eog_epochs": {
     "line number": [
      25
     ]
    },
    "mne.preprocessing.regress_artifact": {
     "line number": [
      29,
      30,
      36,
      38
     ]
    },
    "mne.preprocessing.tests.test_regress.pytest": {
     "line number": [
      35,
      37
     ]
    },
    "mne.preprocessing.tests.test_regress.raw_fname": {
     "line number": [
      23
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      28,
      33
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_regress.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19,
      21,
      23
     ]
    },
    "os.path.join": {
     "line number": [
      19,
      21,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_0": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2_short": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.scalp_coupling_index": {
  "data": {
   "shadows": "mne.preprocessing.nirs.scalp_coupling_index"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.test_scalp_coupling_index": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      36,
      69
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      28
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      35
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      68
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      39
     ]
    },
    "mne.preprocessing.nirs.scalp_coupling_index": {
     "line number": [
      37,
      40,
      62,
      70
     ]
    },
    "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_0": {
     "line number": [
      30
     ]
    },
    "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2": {
     "line number": [
      29
     ]
    },
    "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2_short": {
     "line number": [
      29
     ]
    },
    "mne.preprocessing.tests.test_scalp_coupling_index.pytest": {
     "line number": [
      36,
      69,
      29,
      31
     ]
    },
    "numpy.abs": {
     "line number": [
      64,
      65
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      19
     ]
    },
    "mne.preprocessing.tests.test_ssp.data_path": {
     "line number": [
      15
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      175
     ]
    },
    "numpy.array": {
     "line number": [
      17
     ]
    },
    "os.path.dirname": {
     "line number": [
      14
     ]
    },
    "os.path.join": {
     "line number": [
      14,
      15,
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ssp._check_projs_for_expected_channels": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "len": {
     "line number": [
      127,
      129,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.activate_proj": {
  "data": {
   "shadows": "mne.io.proj.activate_proj"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.compute_proj_ecg": {
  "data": {
   "shadows": "mne.preprocessing.ssp.compute_proj_ecg"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.compute_proj_eog": {
  "data": {
   "shadows": "mne.preprocessing.ssp.compute_proj_eog"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.ctf_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.data_path": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.dur_use": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.eog_times": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.raw_fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_ctf": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "events": {
     "line number": [
      154,
      164
     ]
    },
    "len": {
     "line number": [
      142,
      144,
      146,
      153,
      162,
      172
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      135
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      138
     ]
    },
    "mne.pick_types": {
     "line number": [
      142,
      144,
      146
     ]
    },
    "mne.preprocessing.ssp.compute_proj_ecg": {
     "line number": [
      164
     ]
    },
    "mne.preprocessing.ssp.compute_proj_eog": {
     "line number": [
      154
     ]
    },
    "mne.preprocessing.tests.test_ssp._check_projs_for_expected_channels": {
     "line number": [
      161,
      171
     ]
    },
    "mne.preprocessing.tests.test_ssp.ctf_fname": {
     "line number": [
      138
     ]
    },
    "mne.preprocessing.tests.test_ssp.dur_use": {
     "line number": [
      159,
      169
     ]
    },
    "mne.preprocessing.tests.test_ssp.pytest": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_ecg": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      52
     ]
    },
    "events": {
     "line number": [
      29,
      53,
      58
     ]
    },
    "events.shape": {
     "line number": [
      36,
      37
     ]
    },
    "len": {
     "line number": [
      34,
      58,
      58
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      25
     ]
    },
    "mne.preprocessing.ssp.compute_proj_ecg": {
     "line number": [
      29,
      53
     ]
    },
    "mne.preprocessing.tests.test_ssp.dur_use": {
     "line number": [
      32,
      36,
      37,
      56
     ]
    },
    "mne.preprocessing.tests.test_ssp.pytest": {
     "line number": [
      52
     ]
    },
    "mne.preprocessing.tests.test_ssp.raw_fname": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_eog": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      89
     ]
    },
    "events": {
     "line number": [
      67,
      90
     ]
    },
    "events.shape": {
     "line number": [
      74
     ]
    },
    "len": {
     "line number": [
      66,
      73
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      63
     ]
    },
    "mne.preprocessing.ssp.compute_proj_eog": {
     "line number": [
      67,
      90
     ]
    },
    "mne.preprocessing.tests.test_ssp.dur_use": {
     "line number": [
      71,
      75,
      94
     ]
    },
    "mne.preprocessing.tests.test_ssp.eog_times": {
     "line number": [
      75
     ]
    },
    "mne.preprocessing.tests.test_ssp.pytest": {
     "line number": [
      89
     ]
    },
    "mne.preprocessing.tests.test_ssp.raw_fname": {
     "line number": [
      63
     ]
    },
    "numpy.abs": {
     "line number": [
      74
     ]
    },
    "numpy.less": {
     "line number": [
      75
     ]
    },
    "numpy.sum": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_parallel": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "mne.io.proj.activate_proj": {
     "line number": [
      115,
      116
     ]
    },
    "mne.io.proj.make_projector": {
     "line number": [
      117,
      119
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      101
     ]
    },
    "mne.preprocessing.ssp.compute_proj_eog": {
     "line number": [
      104,
      110
     ]
    },
    "mne.preprocessing.tests.test_ssp.dur_use": {
     "line number": [
      108,
      114
     ]
    },
    "mne.preprocessing.tests.test_ssp.pytest": {
     "line number": [
      98
     ]
    },
    "mne.preprocessing.tests.test_ssp.raw_fname": {
     "line number": [
      101
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim": {
  "data": {
   "symbols_in_volume": {
    "mne.preprocessing.tests.test_stim.data_path": {
     "line number": [
      18,
      19
     ]
    },
    "os.path.dirname": {
     "line number": [
      17
     ]
    },
    "os.path.join": {
     "line number": [
      17,
      18,
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_stim.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.data_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.event_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.fix_stim_artifact": {
  "data": {
   "shadows": "mne.preprocessing.stim.fix_stim_artifact"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.pick_types": {
  "data": {
   "shadows": "mne.io.pick.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.raw_fname": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.test_fix_stim_artifact": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      27
     ]
    },
    "ValueError": {
     "line number": [
      60
     ]
    },
    "events": {
     "line number": [
      24,
      35,
      54,
      58,
      68,
      75
     ]
    },
    "int": {
     "line number": [
      37,
      39,
      40,
      56,
      57,
      58,
      77,
      78,
      79,
      86,
      87
     ]
    },
    "len": {
     "line number": [
      46,
      66,
      93
     ]
    },
    "mne.epochs.Epochs": {
     "line number": [
      35,
      75
     ]
    },
    "mne.event.read_events": {
     "line number": [
      24
     ]
    },
    "mne.io.pick.pick_types": {
     "line number": [
      33
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      26,
      29
     ]
    },
    "mne.preprocessing.stim.fix_stim_artifact": {
     "line number": [
      27,
      42,
      48,
      60,
      61,
      68,
      89,
      95
     ]
    },
    "mne.preprocessing.tests.test_stim.event_fname": {
     "line number": [
      24
     ]
    },
    "mne.preprocessing.tests.test_stim.pytest": {
     "line number": [
      27,
      60
     ]
    },
    "mne.preprocessing.tests.test_stim.raw_fname": {
     "line number": [
      26,
      29
     ]
    },
    "numpy.all": {
     "line number": [
      51,
      71,
      81,
      97
     ]
    },
    "numpy.array": {
     "line number": [
      60
     ]
    },
    "numpy.ceil": {
     "line number": [
      37,
      77
     ]
    },
    "numpy.diff": {
     "line number": [
      44,
      64,
      91
     ]
    },
    "numpy.mean": {
     "line number": [
      45,
      65,
      92
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      46,
      66,
      93
     ]
    },
    "numpy.where": {
     "line number": [
      54
     ]
    },
    "numpy.zeros": {
     "line number": [
      46,
      66,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      16
     ]
    },
    "os.path.join": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.fname_nirx_15_2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.tddr": {
  "data": {
   "shadows": "mne.preprocessing.nirs.tddr"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.test_temporal_derivative_distribution_repair": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      20
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      24
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      25
     ]
    },
    "mne.preprocessing.nirs.tddr": {
     "line number": [
      33
     ]
    },
    "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.fname_nirx_15_2": {
     "line number": [
      21
     ]
    },
    "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.pytest": {
     "line number": [
      21
     ]
    },
    "numpy.diff": {
     "line number": [
      28,
      31,
      34
     ]
    },
    "numpy.max": {
     "line number": [
      28,
      31,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_temporal_derivative_distribution_repair.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      26
     ]
    },
    "mne.preprocessing.tests.test_xdawn.base_dir": {
     "line number": [
      22,
      23
     ]
    },
    "os.path.dirname": {
     "line number": [
      21
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      22,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_xdawn.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.Vectorizer"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.Xdawn": {
  "data": {
   "shadows": "mne.preprocessing.xdawn.Xdawn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._XdawnTransformer": {
  "data": {
   "shadows": "mne.preprocessing.xdawn._XdawnTransformer"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._get_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "events": {
     "line number": [
      33,
      37
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      31
     ]
    },
    "mne.pick_types": {
     "line number": [
      34
     ]
    },
    "mne.preprocessing.tests.test_xdawn.event_name": {
     "line number": [
      33
     ]
    },
    "mne.preprocessing.tests.test_xdawn.raw_fname": {
     "line number": [
      31
     ]
    },
    "mne.read_events": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn._simulate_erplike_mixed_data": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "events": {
     "line number": [
      289,
      290,
      291,
      297
     ]
    },
    "int": {
     "line number": [
      274,
      289
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      297
     ]
    },
    "mne.create_info": {
     "line number": [
      293
     ]
    },
    "numpy.arange": {
     "line number": [
      290
     ]
    },
    "numpy.dot": {
     "line number": [
      287
     ]
    },
    "numpy.linspace": {
     "line number": [
      275
     ]
    },
    "numpy.pi": {
     "line number": [
      278,
      280
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      268
     ]
    },
    "numpy.sin": {
     "line number": [
      277,
      279
     ]
    },
    "numpy.zeros": {
     "line number": [
      289
     ]
    },
    "range": {
     "line number": [
      294
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.event_id": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.event_name": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.raw_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.test_XdawnTransformer": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      217,
      218,
      231,
      235,
      253,
      255,
      263,
      264
     ]
    },
    "events": {
     "line number": [
      208,
      210
     ]
    },
    "len": {
     "line number": [
      225,
      229
     ]
    },
    "mne.Epochs": {
     "line number": [
      210
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      221
     ]
    },
    "mne.preprocessing.tests.test_xdawn._get_data": {
     "line number": [
      208
     ]
    },
    "mne.preprocessing.tests.test_xdawn.event_id": {
     "line number": [
      210
     ]
    },
    "mne.preprocessing.tests.test_xdawn.pytest": {
     "line number": [
      217,
      218,
      231,
      235,
      253,
      255,
      263,
      264
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      242
     ]
    },
    "mne.preprocessing.xdawn._XdawnTransformer": {
     "line number": [
      215,
      222,
      226,
      230,
      234,
      238,
      245
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      204
     ]
    },
    "numpy.eye": {
     "line number": [
      225,
      229
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      45
     ]
    },
    "mne.preprocessing.tests.test_xdawn.pytest": {
     "line number": [
      45
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      43,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_apply_transform": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      128,
      138
     ]
    },
    "events": {
     "line number": [
      114,
      116
     ]
    },
    "len": {
     "line number": [
      142
     ]
    },
    "mne.Epochs": {
     "line number": [
      116
     ]
    },
    "mne.preprocessing.tests.test_xdawn._get_data": {
     "line number": [
      114
     ]
    },
    "mne.preprocessing.tests.test_xdawn.event_id": {
     "line number": [
      116
     ]
    },
    "mne.preprocessing.tests.test_xdawn.pytest": {
     "line number": [
      128,
      138
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      121
     ]
    },
    "numpy.arange": {
     "line number": [
      142
     ]
    },
    "numpy.random.seed": {
     "line number": [
      141
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      143
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_decoding_performance": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "float": {
     "line number": [
      335
     ]
    },
    "isinstance": {
     "line number": [
      345
     ]
    },
    "len": {
     "line number": [
      351
     ]
    },
    "mne.decoding.Vectorizer": {
     "line number": [
      322,
      327
     ]
    },
    "mne.preprocessing.tests.test_xdawn._simulate_erplike_mixed_data": {
     "line number": [
      316
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      321,
      345
     ]
    },
    "mne.preprocessing.xdawn._XdawnTransformer": {
     "line number": [
      326
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      304
     ]
    },
    "numpy.abs": {
     "line number": [
      353
     ]
    },
    "numpy.concatenate": {
     "line number": [
      346
     ]
    },
    "numpy.empty_like": {
     "line number": [
      335
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      341
     ]
    },
    "range": {
     "line number": [
      351
     ]
    },
    "scipy.stats.pearsonr": {
     "line number": [
      352
     ]
    },
    "sklearn.linear_model.LogisticRegression": {
     "line number": [
      324,
      329
     ]
    },
    "sklearn.metrics.accuracy_score": {
     "line number": [
      340
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      331
     ]
    },
    "sklearn.pipeline.make_pipeline": {
     "line number": [
      320,
      325
     ]
    },
    "sklearn.preprocessing.MinMaxScaler": {
     "line number": [
      323,
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_fit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      95,
      100,
      108
     ]
    },
    "events": {
     "line number": [
      64,
      66,
      104
     ]
    },
    "len": {
     "line number": [
      87,
      92
     ]
    },
    "mne.Epochs": {
     "line number": [
      66,
      104
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      82
     ]
    },
    "mne.preprocessing.tests.test_xdawn._get_data": {
     "line number": [
      64
     ]
    },
    "mne.preprocessing.tests.test_xdawn.event_id": {
     "line number": [
      66,
      104
     ]
    },
    "mne.preprocessing.tests.test_xdawn.pytest": {
     "line number": [
      95,
      100,
      108
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      70,
      83,
      88,
      93,
      98,
      107
     ]
    },
    "numpy.eye": {
     "line number": [
      87,
      92
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      78
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      78
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_picks": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "mne.EpochsArray": {
     "line number": [
      52
     ]
    },
    "mne.create_info": {
     "line number": [
      51
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      53
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      50
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_regularization": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      187,
      200
     ]
    },
    "events": {
     "line number": [
      155,
      162,
      167,
      168,
      169
     ]
    },
    "len": {
     "line number": [
      182,
      186
     ]
    },
    "mne.Epochs": {
     "line number": [
      162
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      154
     ]
    },
    "mne.pick_types": {
     "line number": [
      156
     ]
    },
    "mne.preprocessing.tests.test_xdawn.event_id": {
     "line number": [
      162
     ]
    },
    "mne.preprocessing.tests.test_xdawn.event_name": {
     "line number": [
      155
     ]
    },
    "mne.preprocessing.tests.test_xdawn.pytest": {
     "line number": [
      187,
      198,
      200
     ]
    },
    "mne.preprocessing.tests.test_xdawn.raw_fname": {
     "line number": [
      154
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      173,
      181,
      185,
      192,
      194,
      199
     ]
    },
    "mne.read_events": {
     "line number": [
      155
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      196
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      150
     ]
    },
    "numpy.abs": {
     "line number": [
      177
     ]
    },
    "numpy.eye": {
     "line number": [
      182,
      186
     ]
    },
    "numpy.sum": {
     "line number": [
      177
     ]
    },
    "numpy.where": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.xdawn.Xdawn": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "mne.preprocessing.xdawn._XdawnTransformer": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.preprocessing.xdawn.Xdawn.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      414
     ]
    },
    "mne.preprocessing.xdawn.Xdawn": {
     "line number": [
      412
     ]
    },
    "super": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_epochs": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      594
     ]
    },
    "dict": {
     "line number": [
      597
     ]
    },
    "len": {
     "line number": [
      603
     ]
    },
    "numpy.array": {
     "line number": [
      603
     ]
    },
    "numpy.hstack": {
     "line number": [
      598
     ]
    },
    "numpy.split": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_evoked": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_raw": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      577
     ]
    },
    "dict": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._pick_sources": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      633
     ]
    },
    "len": {
     "line number": [
      633,
      640
     ]
    },
    "list": {
     "line number": [
      632,
      637
     ]
    },
    "numpy.dot": {
     "line number": [
      630,
      642
     ]
    },
    "numpy.ones": {
     "line number": [
      633
     ]
    },
    "numpy.unique": {
     "line number": [
      634,
      638
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.apply": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      553
     ]
    },
    "_pick_data_channels": {
     "line number": [
      554
     ]
    },
    "isinstance": {
     "line number": [
      552,
      563,
      566,
      569
     ]
    },
    "len": {
     "line number": [
      557
     ]
    },
    "list": {
     "line number": [
      557,
      561,
      561,
      561
     ]
    },
    "range": {
     "line number": [
      557
     ]
    },
    "set": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.fit": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      482
     ]
    },
    "ValueError": {
     "line number": [
      435,
      452
     ]
    },
    "_pick_data_channels": {
     "line number": [
      436
     ]
    },
    "dict": {
     "line number": [
      475,
      475,
      475
     ]
    },
    "events": {
     "line number": [
      455,
      457,
      469
     ]
    },
    "int": {
     "line number": [
      448
     ]
    },
    "isinstance": {
     "line number": [
      434
     ]
    },
    "len": {
     "line number": [
      481
     ]
    },
    "mne.preprocessing.xdawn._fit_xdawn": {
     "line number": [
      467
     ]
    },
    "numpy.argsort": {
     "line number": [
      476
     ]
    },
    "numpy.diff": {
     "line number": [
      447
     ]
    },
    "numpy.sort": {
     "line number": [
      447
     ]
    },
    "pick_info": {
     "line number": [
      437
     ]
    },
    "zip": {
     "line number": [
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.inverse_transform": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.transform": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      507,
      509
     ]
    },
    "isinstance": {
     "line number": [
      500,
      502,
      504
     ]
    },
    "numpy.concatenate": {
     "line number": [
      513
     ]
    },
    "numpy.dot": {
     "line number": [
      514
     ]
    },
    "numpy.ndarray": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer._check_Xy": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      334,
      340
     ]
    },
    "isinstance": {
     "line number": [
      333
     ]
    },
    "len": {
     "line number": [
      337,
      339,
      339
     ]
    },
    "numpy.asarray": {
     "line number": [
      338
     ]
    },
    "numpy.ndarray": {
     "line number": [
      333
     ]
    },
    "numpy.ones": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.fit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "mne.preprocessing.xdawn._fit_xdawn": {
     "line number": [
      272
     ]
    },
    "numpy.unique": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.inverse_transform": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      324
     ]
    },
    "len": {
     "line number": [
      323,
      325
     ]
    },
    "numpy.dot": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      294
     ]
    },
    "numpy.dot": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._construct_signal_from_epochs": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "events": {
     "line number": [
      23,
      24,
      28,
      28
     ]
    },
    "float": {
     "line number": [
      22
     ]
    },
    "int": {
     "line number": [
      23,
      24
     ]
    },
    "numpy.max": {
     "line number": [
      24
     ]
    },
    "numpy.min": {
     "line number": [
      23
     ]
    },
    "numpy.zeros": {
     "line number": [
      30
     ]
    },
    "range": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._fit_xdawn": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      147,
      165,
      191
     ]
    },
    "_regularized_covariance": {
     "line number": [
      158,
      184
     ]
    },
    "events": {
     "line number": [
      169,
      171
     ]
    },
    "isinstance": {
     "line number": [
      146,
      160,
      162
     ]
    },
    "list": {
     "line number": [
      173,
      173,
      179,
      180
     ]
    },
    "mne.preprocessing.xdawn._least_square_evoked": {
     "line number": [
      170
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      194
     ]
    },
    "numpy.argsort": {
     "line number": [
      193
     ]
    },
    "numpy.array": {
     "line number": [
      201
     ]
    },
    "numpy.array_equal": {
     "line number": [
      163
     ]
    },
    "numpy.concatenate": {
     "line number": [
      199,
      200
     ]
    },
    "numpy.dot": {
     "line number": [
      183
     ]
    },
    "numpy.hstack": {
     "line number": [
      159
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      190
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      194
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      195
     ]
    },
    "numpy.mean": {
     "line number": [
      176
     ]
    },
    "numpy.ndarray": {
     "line number": [
      146,
      162
     ]
    },
    "numpy.tile": {
     "line number": [
      164
     ]
    },
    "numpy.unique": {
     "line number": [
      149
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      189
     ]
    },
    "zip": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._least_square_evoked": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      79
     ]
    },
    "events": {
     "line number": [
      66,
      67,
      67,
      70,
      78,
      81,
      85
     ]
    },
    "events.copy": {
     "line number": [
      66
     ]
    },
    "float": {
     "line number": [
      63
     ]
    },
    "int": {
     "line number": [
      67,
      74,
      74
     ]
    },
    "len": {
     "line number": [
      96
     ]
    },
    "list": {
     "line number": [
      77
     ]
    },
    "mne.preprocessing.xdawn._construct_signal_from_epochs": {
     "line number": [
      70
     ]
    },
    "numpy.array": {
     "line number": [
      90
     ]
    },
    "numpy.concatenate": {
     "line number": [
      91
     ]
    },
    "numpy.dot": {
     "line number": [
      94,
      94,
      95
     ]
    },
    "numpy.transpose": {
     "line number": [
      96
     ]
    },
    "numpy.unique": {
     "line number": [
      78
     ]
    },
    "numpy.vsplit": {
     "line number": [
      96
     ]
    },
    "numpy.zeros": {
     "line number": [
      84
     ]
    },
    "scipy.linalg.pinv": {
     "line number": [
      94
     ]
    },
    "scipy.linalg.toeplitz": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.xdawn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.proj": {
  "data": {},
  "type": "module"
 },
 "mne.proj._compute_cov_epochs": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      199
     ]
    },
    "_check_n_samples": {
     "line number": [
      202
     ]
    },
    "len": {
     "line number": [
      197,
      201
     ]
    },
    "numpy.dot": {
     "line number": [
      195
     ]
    },
    "p_fun": {
     "line number": [
      196
     ]
    },
    "parallel": {
     "line number": [
      196
     ]
    },
    "parallel_func": {
     "line number": [
      195
     ]
    },
    "sum": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj._compute_proj": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "Projection": {
     "line number": [
      133
     ]
    },
    "ValueError": {
     "line number": [
      87
     ]
    },
    "_check_option": {
     "line number": [
      84
     ]
    },
    "dict": {
     "line number": [
      129
     ]
    },
    "enumerate": {
     "line number": [
      128
     ]
    },
    "len": {
     "line number": [
      92,
      99,
      102,
      105
     ]
    },
    "numpy.newaxis": {
     "line number": [
      130
     ]
    },
    "pick_types": {
     "line number": [
      79,
      80,
      81,
      91
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      123
     ]
    },
    "zip": {
     "line number": [
      115,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj.compute_proj_epochs": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "len": {
     "line number": [
      181,
      183
     ]
    },
    "list": {
     "line number": [
      181,
      184
     ]
    },
    "mne.proj._compute_cov_epochs": {
     "line number": [
      179
     ]
    },
    "mne.proj._compute_proj": {
     "line number": [
      189
     ]
    },
    "str": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj.compute_proj_evoked": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "mne.proj._compute_proj": {
     "line number": [
      248
     ]
    },
    "numpy.dot": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj.compute_proj_raw": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "Epochs": {
     "line number": [
      305
     ]
    },
    "_check_n_samples": {
     "line number": [
      319
     ]
    },
    "events": {
     "line number": [
      302,
      305
     ]
    },
    "make_fixed_length_events": {
     "line number": [
      302
     ]
    },
    "max": {
     "line number": [
      315
     ]
    },
    "min": {
     "line number": [
      317
     ]
    },
    "mne.proj._compute_cov_epochs": {
     "line number": [
      309
     ]
    },
    "mne.proj._compute_proj": {
     "line number": [
      327
     ]
    },
    "numpy.dot": {
     "line number": [
      320
     ]
    },
    "numpy.round": {
     "line number": [
      301
     ]
    },
    "pick_types": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.proj.read_proj": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_read_proj": {
     "line number": [
      48
     ]
    },
    "check_fname": {
     "line number": [
      43
     ]
    },
    "fiff_open": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj.sensitivity_map": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      382,
      404
     ]
    },
    "ValueError": {
     "line number": [
      371,
      408,
      439
     ]
    },
    "_check_option": {
     "line number": [
      365,
      366
     ]
    },
    "_has_eeg_average_ref_proj": {
     "line number": [
      389
     ]
    },
    "_make_stc": {
     "line number": [
      447
     ]
    },
    "_subject_from_forward": {
     "line number": [
      445
     ]
    },
    "convert_forward_solution": {
     "line number": [
      379
     ]
    },
    "is_fixed_orient": {
     "line number": [
      370,
      381
     ]
    },
    "make_eeg_average_ref_proj": {
     "line number": [
      390
     ]
    },
    "make_projector": {
     "line number": [
      398
     ]
    },
    "numpy.dot": {
     "line number": [
      402,
      430,
      433
     ]
    },
    "numpy.empty": {
     "line number": [
      412
     ]
    },
    "numpy.max": {
     "line number": [
      443
     ]
    },
    "numpy.newaxis": {
     "line number": [
      447
     ]
    },
    "pick_types_forward": {
     "line number": [
      375,
      377
     ]
    },
    "range": {
     "line number": [
      414
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      421,
      430,
      433
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.proj.write_proj": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "_write_proj": {
     "line number": [
      72
     ]
    },
    "check_fname": {
     "line number": [
      68
     ]
    },
    "end_file": {
     "line number": [
      73
     ]
    },
    "start_file": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank": {
  "data": {},
  "type": "module"
 },
 "mne.rank._compute_rank_int": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "mne.rank.compute_rank": {
     "line number": [
      270
     ]
    },
    "sum": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_from_s": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86
     ]
    },
    "float": {
     "line number": [
      82,
      101
     ]
    },
    "isinstance": {
     "line number": [
      84,
      100
     ]
    },
    "len": {
     "line number": [
      99
     ]
    },
    "numpy.amax": {
     "line number": [
      83
     ]
    },
    "numpy.array": {
     "line number": [
      82
     ]
    },
    "numpy.finfo": {
     "line number": [
      93,
      95
     ]
    },
    "numpy.float32": {
     "line number": [
      93
     ]
    },
    "numpy.float64": {
     "line number": [
      95
     ]
    },
    "numpy.ndarray": {
     "line number": [
      100
     ]
    },
    "numpy.sum": {
     "line number": [
      105
     ]
    },
    "str": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_meeg_cov": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      204
     ]
    },
    "_apply_scaling_cov": {
     "line number": [
      202
     ]
    },
    "_handle_default": {
     "line number": [
      201
     ]
    },
    "_picks_by_type": {
     "line number": [
      200
     ]
    },
    "_undo_scaling_cov": {
     "line number": [
      211
     ]
    },
    "isinstance": {
     "line number": [
      208
     ]
    },
    "list": {
     "line number": [
      209
     ]
    },
    "mne.rank.estimate_rank": {
     "line number": [
      206
     ]
    },
    "tuple": {
     "line number": [
      208
     ]
    },
    "zip": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_meeg_signals": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156
     ]
    },
    "_picks_by_type": {
     "line number": [
      154
     ]
    },
    "_scaled_array": {
     "line number": [
      158
     ]
    },
    "isinstance": {
     "line number": [
      162
     ]
    },
    "list": {
     "line number": [
      163
     ]
    },
    "mne.rank.estimate_rank": {
     "line number": [
      159
     ]
    },
    "tuple": {
     "line number": [
      162
     ]
    },
    "zip": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_raw": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "_picks_to_idx": {
     "line number": [
      113
     ]
    },
    "mne.rank._estimate_rank_meeg_signals": {
     "line number": [
      115
     ]
    },
    "pick_info": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank._get_rank_sss": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      245
     ]
    },
    "isinstance": {
     "line number": [
      237
     ]
    },
    "len": {
     "line number": [
      241,
      243,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank._info_rank": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      260
     ]
    },
    "len": {
     "line number": [
      262
     ]
    },
    "mne.rank._get_rank_sss": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank.compute_rank": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      341
     ]
    },
    "_check_rank": {
     "line number": [
      335
     ]
    },
    "_handle_default": {
     "line number": [
      336
     ]
    },
    "_picks_by_type": {
     "line number": [
      363
     ]
    },
    "_pl": {
     "line number": [
      382,
      382,
      414,
      415
     ]
    },
    "_simplify_info": {
     "line number": [
      362
     ]
    },
    "_validate_type": {
     "line number": [
      352
     ]
    },
    "dict": {
     "line number": [
      352,
      356,
      360
     ]
    },
    "isinstance": {
     "line number": [
      338,
      353,
      389,
      390,
      402
     ]
    },
    "len": {
     "line number": [
      369
     ]
    },
    "make_projector": {
     "line number": [
      371
     ]
    },
    "mne.rank._estimate_rank_meeg_cov": {
     "line number": [
      409
     ]
    },
    "mne.rank._estimate_rank_meeg_signals": {
     "line number": [
      398
     ]
    },
    "mne.rank._info_rank": {
     "line number": [
      376,
      411
     ]
    },
    "numpy.concatenate": {
     "line number": [
      395
     ]
    },
    "numpy.dot": {
     "line number": [
      397,
      408,
      408
     ]
    },
    "pick_channels_cov": {
     "line number": [
      342
     ]
    },
    "pick_info": {
     "line number": [
      345,
      399,
      410
     ]
    },
    "set": {
     "line number": [
      343,
      343
     ]
    },
    "str": {
     "line number": [
      352,
      353
     ]
    },
    "warn": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank.estimate_rank": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "_compute_row_norms": {
     "line number": [
      52
     ]
    },
    "mne.rank._estimate_rank_from_s": {
     "line number": [
      55
     ]
    },
    "numpy.newaxis": {
     "line number": [
      53
     ]
    },
    "scipy.linalg.svdvals": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.rank.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.rank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.selection": {
  "data": {},
  "type": "module"
 },
 "mne.selection._EEG_SELECTIONS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.selection._SELECTIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.selection._divide_side": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "list": {
     "line number": [
      187,
      187
     ]
    },
    "numpy.asarray": {
     "line number": [
      178
     ]
    },
    "numpy.concatenate": {
     "line number": [
      185,
      186
     ]
    },
    "numpy.median": {
     "line number": [
      179
     ]
    },
    "numpy.sort": {
     "line number": [
      185,
      186
     ]
    },
    "numpy.where": {
     "line number": [
      181,
      182,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.selection._divide_to_regions": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "_get_stim_channel": {
     "line number": [
      167
     ]
    },
    "_pick_data_channels": {
     "line number": [
      126
     ]
    },
    "abs": {
     "line number": [
      161,
      161
     ]
    },
    "len": {
     "line number": [
      127,
      168
     ]
    },
    "list": {
     "line number": [
      151,
      156
     ]
    },
    "mne.selection._divide_side": {
     "line number": [
      140,
      141,
      142,
      143
     ]
    },
    "numpy.abs": {
     "line number": [
      149,
      154
     ]
    },
    "numpy.append": {
     "line number": [
      155
     ]
    },
    "numpy.argsort": {
     "line number": [
      131,
      134,
      137
     ]
    },
    "numpy.array": {
     "line number": [
      128,
      150,
      155
     ]
    },
    "numpy.errstate": {
     "line number": [
      148,
      153
     ]
    },
    "numpy.mean": {
     "line number": [
      158,
      159
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      132,
      135,
      138,
      151,
      156
     ]
    },
    "numpy.where": {
     "line number": [
      150,
      155
     ]
    },
    "scipy.stats.zscore": {
     "line number": [
      149,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.selection.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.selection.read_selection": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      75
     ]
    },
    "ValueError": {
     "line number": [
      85,
      113
     ]
    },
    "isinstance": {
     "line number": [
      66,
      68
     ]
    },
    "len": {
     "line number": [
      70,
      94
     ]
    },
    "list": {
     "line number": [
      66,
      116
     ]
    },
    "open": {
     "line number": [
      89
     ]
    },
    "os.path.dirname": {
     "line number": [
      82
     ]
    },
    "os.path.isfile": {
     "line number": [
      84
     ]
    },
    "os.path.join": {
     "line number": [
      82
     ]
    },
    "pick_types": {
     "line number": [
      69
     ]
    },
    "set": {
     "line number": [
      116
     ]
    },
    "tuple": {
     "line number": [
      66
     ]
    },
    "type": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.selection.zscore": {
  "data": {
   "shadows": "scipy.stats.zscore"
  },
  "type": "import"
 },
 "mne.simulation": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.metrics": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.metrics._check_stc": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      19,
      21
     ]
    },
    "numpy.all": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.metrics.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "mne.simulation.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.metrics.source_estimate_quantification": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      50
     ]
    },
    "mne.simulation.metrics._check_stc": {
     "line number": [
      54
     ]
    },
    "numpy.dot": {
     "line number": [
      63
     ]
    },
    "numpy.mean": {
     "line number": [
      59
     ]
    },
    "numpy.sqrt": {
     "line number": [
      59
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      64,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.source.SourceSimulator": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "object": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.simulation.source.SourceSimulator.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "int": {
     "line number": [
      344
     ]
    },
    "numpy.empty": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.__iter__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "min": {
     "line number": [
      515
     ]
    },
    "range": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.add_data": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      382,
      394
     ]
    },
    "enumerate": {
     "line number": [
      404
     ]
    },
    "events": {
     "line number": [
      391,
      393,
      396,
      398,
      400
     ]
    },
    "isinstance": {
     "line number": [
      381,
      386,
      388
     ]
    },
    "len": {
     "line number": [
      390,
      391,
      393,
      393,
      396,
      396,
      398,
      403
     ]
    },
    "list": {
     "line number": [
      386,
      387,
      388
     ]
    },
    "numpy.array": {
     "line number": [
      403
     ]
    },
    "numpy.ndim": {
     "line number": [
      386,
      388
     ]
    },
    "numpy.vstack": {
     "line number": [
      400
     ]
    },
    "type": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.duration": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      354
     ]
    },
    "property": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.get_stc": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      468
     ]
    },
    "enumerate": {
     "line number": [
      484
     ]
    },
    "len": {
     "line number": [
      467,
      476
     ]
    },
    "mne.simulation.source.simulate_stc": {
     "line number": [
      502
     ]
    },
    "numpy.arange": {
     "line number": [
      492,
      493,
      496,
      497
     ]
    },
    "numpy.in1d": {
     "line number": [
      492,
      496
     ]
    },
    "numpy.logical_and": {
     "line number": [
      479
     ]
    },
    "numpy.where": {
     "line number": [
      479
     ]
    },
    "numpy.zeros": {
     "line number": [
      476
     ]
    },
    "zip": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.get_stim_channel": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "int": {
     "line number": [
      432,
      440
     ]
    },
    "len": {
     "line number": [
      439
     ]
    },
    "numpy.logical_and": {
     "line number": [
      435
     ]
    },
    "numpy.where": {
     "line number": [
      435
     ]
    },
    "numpy.zeros": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.n_times": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "int": {
     "line number": [
      360
     ]
    },
    "property": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.source.select_source_in_label": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      65
     ]
    },
    "check_random_state": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      76
     ]
    },
    "list": {
     "line number": [
      63,
      64
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      74
     ]
    },
    "rng_uniform": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.simulate_sparse_stc": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156,
      171,
      193
     ]
    },
    "_ensure_src": {
     "line number": [
      151
     ]
    },
    "check_random_state": {
     "line number": [
      150
     ]
    },
    "cls": {
     "line number": [
      207
     ]
    },
    "data_fun": {
     "line number": [
      160
     ]
    },
    "enumerate": {
     "line number": [
      183
     ]
    },
    "int": {
     "line number": [
      164
     ]
    },
    "len": {
     "line number": [
      158,
      164,
      170,
      172,
      174,
      177,
      178,
      188,
      190,
      200,
      206
     ]
    },
    "min": {
     "line number": [
      177
     ]
    },
    "mne.simulation.source.select_source_in_label": {
     "line number": [
      184
     ]
    },
    "numpy.arange": {
     "line number": [
      167
     ]
    },
    "numpy.argsort": {
     "line number": [
      198
     ]
    },
    "numpy.array": {
     "line number": [
      194
     ]
    },
    "numpy.concatenate": {
     "line number": [
      195,
      202
     ]
    },
    "numpy.diff": {
     "line number": [
      165,
      204
     ]
    },
    "numpy.empty": {
     "line number": [
      181,
      182
     ]
    },
    "numpy.linspace": {
     "line number": [
      164
     ]
    },
    "numpy.newaxis": {
     "line number": [
      189,
      191
     ]
    },
    "numpy.pi": {
     "line number": [
      87
     ]
    },
    "numpy.sin": {
     "line number": [
      87
     ]
    },
    "numpy.sort": {
     "line number": [
      167
     ]
    },
    "numpy.zeros": {
     "line number": [
      158
     ]
    },
    "range": {
     "line number": [
      159,
      197
     ]
    },
    "warn": {
     "line number": [
      175
     ]
    },
    "zip": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.source.simulate_stc": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      300
     ]
    },
    "SourceEstimate": {
     "line number": [
      313
     ]
    },
    "ValueError": {
     "line number": [
      251
     ]
    },
    "_compute_nearest": {
     "line number": [
      264
     ]
    },
    "enumerate": {
     "line number": [
      256,
      280
     ]
    },
    "len": {
     "line number": [
      250,
      250,
      260,
      274,
      282,
      283,
      298,
      298,
      306
     ]
    },
    "list": {
     "line number": [
      289,
      304
     ]
    },
    "numpy.argsort": {
     "line number": [
      309
     ]
    },
    "numpy.array": {
     "line number": [
      269,
      289,
      295
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      293
     ]
    },
    "numpy.concatenate": {
     "line number": [
      313
     ]
    },
    "numpy.delete": {
     "line number": [
      288,
      289
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      258
     ]
    },
    "numpy.outer": {
     "line number": [
      272
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      268
     ]
    },
    "numpy.tile": {
     "line number": [
      274
     ]
    },
    "numpy.unique": {
     "line number": [
      265,
      298
     ]
    },
    "numpy.vstack": {
     "line number": [
      307
     ]
    },
    "numpy.where": {
     "line number": [
      281
     ]
    },
    "range": {
     "line number": [
      305
     ]
    },
    "value_fun": {
     "line number": [
      269
     ]
    },
    "zip": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.tests.test_evoked": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      22
     ]
    },
    "mne.simulation.tests.test_evoked.data_path": {
     "line number": [
      23
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      163
     ]
    },
    "os.path.dirname": {
     "line number": [
      25,
      27,
      29
     ]
    },
    "os.path.join": {
     "line number": [
      23,
      25,
      27,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.simulation.tests.test_evoked.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.add_noise": {
  "data": {
   "shadows": "mne.simulation.add_noise"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.ave_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.cov_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.fwd_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_channels_cov": {
  "data": {
   "shadows": "mne.io.pick.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.test_add_noise": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      102
     ]
    },
    "TypeError": {
     "line number": [
      105,
      107
     ]
    },
    "len": {
     "line number": [
      118,
      121,
      127,
      127
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      118,
      130
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      134
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      101,
      132
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      98
     ]
    },
    "mne.pick_types": {
     "line number": [
      100
     ]
    },
    "mne.simulation.add_noise": {
     "line number": [
      103,
      106,
      108,
      113,
      124
     ]
    },
    "mne.simulation.tests.test_evoked.pytest": {
     "line number": [
      102,
      105,
      107,
      89,
      90,
      91
     ]
    },
    "mne.simulation.tests.test_evoked.raw_fname": {
     "line number": [
      98
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      123
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      94
     ]
    },
    "numpy.arange": {
     "line number": [
      121
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      136
     ]
    },
    "numpy.newaxis": {
     "line number": [
      130
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      97
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      115
     ]
    },
    "numpy.zeros": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.test_rank_deficiency": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "mne.EpochsArray": {
     "line number": [
      157
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      156
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      152
     ]
    },
    "mne.io.pick.pick_channels_cov": {
     "line number": [
      153
     ]
    },
    "mne.pick_types": {
     "line number": [
      146
     ]
    },
    "mne.read_cov": {
     "line number": [
      150
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      143
     ]
    },
    "mne.simulation.add_noise": {
     "line number": [
      155
     ]
    },
    "mne.simulation.tests.test_evoked.ave_fname": {
     "line number": [
      143
     ]
    },
    "mne.simulation.tests.test_evoked.cov_fname": {
     "line number": [
      150
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      159
     ]
    },
    "numpy.newaxis": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.test_simulate_evoked": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      83
     ]
    },
    "ValueError": {
     "line number": [
      74
     ]
    },
    "abs": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      63,
      63,
      65,
      65
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      38
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      45
     ]
    },
    "mne.cov.whiten_evoked": {
     "line number": [
      66
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      33
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      36
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      39
     ]
    },
    "mne.read_cov": {
     "line number": [
      40
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      42
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      37
     ]
    },
    "mne.simulation.simulate_evoked": {
     "line number": [
      60,
      74,
      76,
      78,
      84
     ]
    },
    "mne.simulation.simulate_sparse_stc": {
     "line number": [
      55
     ]
    },
    "mne.simulation.tests.test_evoked.ave_fname": {
     "line number": [
      42
     ]
    },
    "mne.simulation.tests.test_evoked.cov_fname": {
     "line number": [
      40
     ]
    },
    "mne.simulation.tests.test_evoked.fwd_fname": {
     "line number": [
      37
     ]
    },
    "mne.simulation.tests.test_evoked.pytest": {
     "line number": [
      74,
      83
     ]
    },
    "mne.simulation.tests.test_evoked.raw_fname": {
     "line number": [
      36
     ]
    },
    "numpy.inf": {
     "line number": [
      77,
      79
     ]
    },
    "numpy.linspace": {
     "line number": [
      52
     ]
    },
    "numpy.max": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      62
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.whiten_evoked": {
  "data": {
   "shadows": "mne.cov.whiten_evoked"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      18
     ]
    },
    "mne.simulation.tests.test_metrics.data_path": {
     "line number": [
      19
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      50
     ]
    },
    "os.path.join": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.simulation.tests.test_metrics.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.data_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.source_estimate_quantification": {
  "data": {
   "shadows": "mne.simulation.source_estimate_quantification"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.src_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_metrics.test_metrics": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      42,
      45,
      46
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      23
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      26
     ]
    },
    "mne.simulation.simulate_sparse_stc": {
     "line number": [
      29,
      30
     ]
    },
    "mne.simulation.source_estimate_quantification": {
     "line number": [
      31,
      32,
      33,
      34,
      42,
      45,
      46
     ]
    },
    "mne.simulation.tests.test_metrics.pytest": {
     "line number": [
      42,
      45,
      46
     ]
    },
    "mne.simulation.tests.test_metrics.src_fname": {
     "line number": [
      26
     ]
    },
    "numpy.arange": {
     "line number": [
      27
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      28
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_metrics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      38
     ]
    },
    "mne.simulation.tests.test_raw.base_path": {
     "line number": [
      36
     ]
    },
    "mne.simulation.tests.test_raw.bem_path": {
     "line number": [
      46,
      47,
      48
     ]
    },
    "mne.simulation.tests.test_raw.data_path": {
     "line number": [
      39,
      40,
      42,
      44,
      50,
      51
     ]
    },
    "mne.simulation.tests.test_raw.subjects_dir": {
     "line number": [
      45
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      482
     ]
    },
    "os.path.dirname": {
     "line number": [
      35
     ]
    },
    "os.path.join": {
     "line number": [
      35,
      36,
      39,
      40,
      42,
      44,
      45,
      46,
      47,
      48,
      50,
      51
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.simulation.tests.test_raw.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._assert_iter_sim": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "events": {
     "line number": [
      55,
      57
     ]
    },
    "mne.find_events": {
     "line number": [
      55,
      56
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      57,
      58,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._assert_quats": {
  "data": {
   "shadows": "mne.tests.test_chpi._assert_quats"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._get_head_pos_sim": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      203
     ]
    },
    "dict": {
     "line number": [
      197
     ]
    },
    "enumerate": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._get_hpi_info": {
  "data": {
   "shadows": "mne.chpi._get_hpi_info"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._get_ico_surface": {
  "data": {
   "shadows": "mne.surface._get_ico_surface"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._make_stc": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "len": {
     "line number": [
      167
     ]
    },
    "mne.simulation.simulate_sparse_stc": {
     "line number": [
      169
     ]
    },
    "numpy.arange": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._surfaces_to_bem": {
  "data": {
   "shadows": "mne.bem._surfaces_to_bem"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.add_chpi": {
  "data": {
   "shadows": "mne.simulation.add_chpi"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.add_ecg": {
  "data": {
   "shadows": "mne.simulation.add_ecg"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.add_eog": {
  "data": {
   "shadows": "mne.simulation.add_eog"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.base_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_1_fname": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.compute_chpi_amplitudes": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_amplitudes"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.compute_chpi_locs": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_locs"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.compute_head_pos": {
  "data": {
   "shadows": "mne.chpi.compute_head_pos"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.cov_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.data_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.fit_dipole": {
  "data": {
   "shadows": "mne.fit_dipole"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_bem_solution": {
  "data": {
   "shadows": "mne.make_bem_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pos_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.psd_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_welch"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.raw_chpi_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.raw_data": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "len": {
     "line number": [
      183
     ]
    },
    "mne.create_info": {
     "line number": [
      184
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      173
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      183
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      177
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      191
     ]
    },
    "mne.pick_types": {
     "line number": [
      178,
      179
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      189
     ]
    },
    "mne.read_trans": {
     "line number": [
      190
     ]
    },
    "mne.simulation.tests.test_raw._make_stc": {
     "line number": [
      192
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      173
     ]
    },
    "mne.simulation.tests.test_raw.raw_fname": {
     "line number": [
      177
     ]
    },
    "mne.simulation.tests.test_raw.src_fname": {
     "line number": [
      189
     ]
    },
    "mne.simulation.tests.test_raw.trans_fname": {
     "line number": [
      190
     ]
    },
    "numpy.concatenate": {
     "line number": [
      180
     ]
    },
    "numpy.sort": {
     "line number": [
      180
     ]
    },
    "numpy.zeros": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.raw_fname_short": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.setup_source_space": {
  "data": {
   "shadows": "mne.setup_source_space"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.simulate_raw": {
  "data": {
   "shadows": "mne.simulation.simulate_raw"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.src_fname": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.subjects_dir": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.test_degenerate": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      295,
      316,
      321
     ]
    },
    "TypeError": {
     "line number": [
      298,
      300,
      304,
      312
     ]
    },
    "ValueError": {
     "line number": [
      302,
      308,
      310
     ]
    },
    "mne.simulation.add_eog": {
     "line number": [
      322
     ]
    },
    "mne.simulation.simulate_raw": {
     "line number": [
      296,
      299,
      301,
      303,
      305,
      309,
      311,
      313,
      317
     ]
    },
    "mne.simulation.tests.test_raw._get_head_pos_sim": {
     "line number": [
      293,
      314
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      295,
      298,
      300,
      302,
      304,
      308,
      310,
      312,
      316,
      321
     ]
    },
    "mne.simulation.tests.test_raw.raw_data": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_iterable": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      96,
      143
     ]
    },
    "RuntimeWarning": {
     "line number": [
      157
     ]
    },
    "ValueError": {
     "line number": [
      81,
      107,
      110,
      132
     ]
    },
    "dict": {
     "line number": [
      70
     ]
    },
    "events": {
     "line number": [
      91,
      92,
      93
     ]
    },
    "int": {
     "line number": [
      100
     ]
    },
    "isinstance": {
     "line number": [
      80,
      86,
      150
     ]
    },
    "len": {
     "line number": [
      84,
      92,
      100
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      79,
      85,
      149
     ]
    },
    "mne.bem._surfaces_to_bem": {
     "line number": [
      155
     ]
    },
    "mne.find_events": {
     "line number": [
      91
     ]
    },
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN": {
     "line number": [
      155
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      67
     ]
    },
    "mne.make_bem_solution": {
     "line number": [
      156
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      74
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      69
     ]
    },
    "mne.simulation.simulate_raw": {
     "line number": [
      82,
      87,
      98,
      102,
      108,
      111,
      122,
      133,
      144,
      159
     ]
    },
    "mne.simulation.tests.test_raw._assert_iter_sim": {
     "line number": [
      106,
      125,
      134
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      81,
      96,
      107,
      110,
      132,
      143,
      157,
      64
     ]
    },
    "mne.simulation.tests.test_raw.raw_fname_short": {
     "line number": [
      67
     ]
    },
    "mne.surface._get_ico_surface": {
     "line number": [
      153
     ]
    },
    "numpy.array": {
     "line number": [
      77,
      147
     ]
    },
    "numpy.ndarray": {
     "line number": [
      80,
      86,
      150
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      76
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      90
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      93
     ]
    },
    "numpy.zeros": {
     "line number": [
      100
     ]
    },
    "stc_iter": {
     "line number": [
      122
     ]
    },
    "stc_iter_bad": {
     "line number": [
      133,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_iterable.stc_iter": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "int": {
     "line number": [
      116
     ]
    },
    "len": {
     "line number": [
      116
     ]
    },
    "numpy.zeros": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_iterable.stc_iter_bad": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_bem": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "events": {
     "line number": [
      361,
      363
     ]
    },
    "len": {
     "line number": [
      337,
      346,
      355,
      362,
      364,
      364
     ]
    },
    "mne.Epochs": {
     "line number": [
      363
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      337
     ]
    },
    "mne.find_events": {
     "line number": [
      361
     ]
    },
    "mne.fit_dipole": {
     "line number": [
      365
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      356
     ]
    },
    "mne.pick_types": {
     "line number": [
      345
     ]
    },
    "mne.setup_source_space": {
     "line number": [
      329
     ]
    },
    "mne.simulation.simulate_raw": {
     "line number": [
      340,
      341
     ]
    },
    "mne.simulation.tests.test_raw.bem_fname": {
     "line number": [
      341,
      360
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      325
     ]
    },
    "mne.simulation.tests.test_raw.raw_data": {
     "line number": [
      328
     ]
    },
    "mne.simulation.tests.test_raw.subjects_dir": {
     "line number": [
      329
     ]
    },
    "mne.transform_surface_to": {
     "line number": [
      353
     ]
    },
    "numpy.concatenate": {
     "line number": [
      354
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      347
     ]
    },
    "numpy.diag": {
     "line number": [
      349
     ]
    },
    "numpy.eye": {
     "line number": [
      337
     ]
    },
    "numpy.median": {
     "line number": [
      349,
      367
     ]
    },
    "numpy.sqrt": {
     "line number": [
      366
     ]
    },
    "numpy.sum": {
     "line number": [
      366
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      344,
      348
     ]
    },
    "sum": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_chpi": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "len": {
     "line number": [
      436
     ]
    },
    "mne.chpi._get_hpi_info": {
     "line number": [
      453
     ]
    },
    "mne.chpi.compute_chpi_amplitudes": {
     "line number": [
      474
     ]
    },
    "mne.chpi.compute_chpi_locs": {
     "line number": [
      475
     ]
    },
    "mne.chpi.compute_head_pos": {
     "line number": [
      476
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      477
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      432
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      435
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      440
     ]
    },
    "mne.pick_types": {
     "line number": [
      437,
      457,
      458
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      443
     ]
    },
    "mne.simulation.add_chpi": {
     "line number": [
      451
     ]
    },
    "mne.simulation.simulate_raw": {
     "line number": [
      447
     ]
    },
    "mne.simulation.tests.test_raw._make_stc": {
     "line number": [
      445
     ]
    },
    "mne.simulation.tests.test_raw.pos_fname": {
     "line number": [
      448,
      451,
      477
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      431
     ]
    },
    "mne.simulation.tests.test_raw.raw_chpi_fname": {
     "line number": [
      435
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      478
     ]
    },
    "mne.time_frequency.psd_welch": {
     "line number": [
      461,
      462
     ]
    },
    "numpy.abs": {
     "line number": [
      465
     ]
    },
    "numpy.arange": {
     "line number": [
      436
     ]
    },
    "numpy.argmin": {
     "line number": [
      465
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      437
     ]
    },
    "numpy.sort": {
     "line number": [
      465
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      454,
      455,
      471
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      464
     ]
    },
    "tuple": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_sphere": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      252
     ]
    },
    "len": {
     "line number": [
      213,
      259,
      261,
      261,
      268
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      234
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      226
     ]
    },
    "mne.pick_types": {
     "line number": [
      213
     ]
    },
    "mne.read_cov": {
     "line number": [
      223
     ]
    },
    "mne.simulation.add_ecg": {
     "line number": [
      251,
      253,
      284
     ]
    },
    "mne.simulation.add_eog": {
     "line number": [
      249,
      285
     ]
    },
    "mne.simulation.simulate_raw": {
     "line number": [
      228,
      239,
      242,
      245,
      262,
      264,
      274,
      276
     ]
    },
    "mne.simulation.tests.test_raw._get_head_pos_sim": {
     "line number": [
      217
     ]
    },
    "mne.simulation.tests.test_raw.cov_fname": {
     "line number": [
      223
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      252
     ]
    },
    "mne.simulation.tests.test_raw.raw_data": {
     "line number": [
      212
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      263
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      282
     ]
    },
    "numpy.concatenate": {
     "line number": [
      254
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      283
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      235,
      254,
      269,
      278
     ]
    },
    "os.path.join": {
     "line number": [
      231
     ]
    },
    "str": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_round_trip": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      418,
      422
     ]
    },
    "TypeError": {
     "line number": [
      412
     ]
    },
    "ValueError": {
     "line number": [
      409,
      427
     ]
    },
    "len": {
     "line number": [
      382,
      383,
      391
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      392,
      417
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      406
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      380
     ]
    },
    "mne.read_bem_solution": {
     "line number": [
      376
     ]
    },
    "mne.simulation.simulate_raw": {
     "line number": [
      399,
      410,
      413,
      420,
      424,
      428
     ]
    },
    "mne.simulation.tests.test_raw.bem_1_fname": {
     "line number": [
      376
     ]
    },
    "mne.simulation.tests.test_raw.pytest": {
     "line number": [
      409,
      412,
      418,
      422,
      427
     ]
    },
    "mne.simulation.tests.test_raw.raw_data": {
     "line number": [
      374
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      389,
      405
     ]
    },
    "numpy.eye": {
     "line number": [
      390
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      407
     ]
    },
    "sum": {
     "line number": [
      382,
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.trans_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.transform_surface_to": {
  "data": {
   "shadows": "mne.transform_surface_to"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      22
     ]
    },
    "mne.simulation.tests.test_source.data_path": {
     "line number": [
      23,
      27
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      389
     ]
    },
    "os.path.join": {
     "line number": [
      23,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.simulation.tests.test_source.Label": {
  "data": {
   "shadows": "mne.label.Label"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.SourceSimulator": {
  "data": {
   "shadows": "mne.simulation.source.SourceSimulator"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source._get_fwd_labels": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "mne.convert_forward_solution": {
     "line number": [
      33
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      30
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      34
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      32
     ]
    },
    "mne.read_label": {
     "line number": [
      35
     ]
    },
    "mne.simulation.tests.test_source.data_path": {
     "line number": [
      35
     ]
    },
    "mne.simulation.tests.test_source.fname_fwd": {
     "line number": [
      32
     ]
    },
    "mne.simulation.tests.test_source.label_names": {
     "line number": [
      36
     ]
    },
    "mne.simulation.tests.test_source.pytest": {
     "line number": [
      30
     ]
    },
    "os.path.join": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source._get_idx_label_stc": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      41
     ]
    },
    "len": {
     "line number": [
      49
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      45
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.fname_fwd": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.label_names": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.read_label": {
  "data": {
   "shadows": "mne.read_label"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.source.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.simulate_stc": {
  "data": {
   "shadows": "mne.simulation.source.simulate_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.subjects_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.test_generate_stc_single_hemi": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      173,
      200
     ]
    },
    "len": {
     "line number": [
      176,
      185,
      210,
      212
     ]
    },
    "mne.label.Label": {
     "line number": [
      174
     ]
    },
    "mne.simulation.source.simulate_stc": {
     "line number": [
      186,
      196
     ]
    },
    "mne.simulation.tests.test_source._get_fwd_labels": {
     "line number": [
      169
     ]
    },
    "mne.simulation.tests.test_source._get_idx_label_stc": {
     "line number": [
      189
     ]
    },
    "numpy.all": {
     "line number": [
      190
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      206
     ]
    },
    "numpy.ones": {
     "line number": [
      176,
      185,
      212
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      207
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_generate_stc_single_hemi.fun": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_sparse_stc": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      118,
      149,
      153,
      157,
      160
     ]
    },
    "len": {
     "line number": [
      118,
      130,
      136,
      140,
      149,
      153,
      157,
      162
     ]
    },
    "mne.simulation.source.simulate_sparse_stc": {
     "line number": [
      118,
      130,
      140,
      149,
      153,
      157,
      161
     ]
    },
    "mne.simulation.tests.test_source._get_fwd_labels": {
     "line number": [
      112
     ]
    },
    "mne.simulation.tests.test_source.pytest": {
     "line number": [
      118,
      149,
      153,
      157,
      160
     ]
    },
    "mne.simulation.tests.test_source.subjects_dir": {
     "line number": [
      120,
      133,
      143,
      151,
      155,
      164
     ]
    },
    "numpy.arange": {
     "line number": [
      116
     ]
    },
    "numpy.float64": {
     "line number": [
      116
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      145,
      146
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_sparse_stc_single_hemi": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "len": {
     "line number": [
      226,
      229,
      233,
      241
     ]
    },
    "mne.simulation.source.simulate_sparse_stc": {
     "line number": [
      226,
      233,
      241
     ]
    },
    "mne.simulation.tests.test_source._get_fwd_labels": {
     "line number": [
      218
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      240
     ]
    },
    "numpy.arange": {
     "line number": [
      224
     ]
    },
    "numpy.float64": {
     "line number": [
      224
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      243
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      236,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      98
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "enumerate": {
     "line number": [
      57,
      86
     ]
    },
    "len": {
     "line number": [
      60,
      69,
      88,
      107
     ]
    },
    "mne.label.Label": {
     "line number": [
      58,
      102
     ]
    },
    "mne.simulation.source.simulate_stc": {
     "line number": [
      70,
      82,
      94,
      96,
      98,
      105
     ]
    },
    "mne.simulation.tests.test_source._get_fwd_labels": {
     "line number": [
      55
     ]
    },
    "mne.simulation.tests.test_source._get_idx_label_stc": {
     "line number": [
      74,
      87
     ]
    },
    "mne.simulation.tests.test_source.pytest": {
     "line number": [
      96,
      98
     ]
    },
    "numpy.all": {
     "line number": [
      75
     ]
    },
    "numpy.concatenate": {
     "line number": [
      99
     ]
    },
    "numpy.ones": {
     "line number": [
      60,
      69,
      88
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      89
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      71,
      107
     ]
    },
    "numpy.where": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc.fun": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc_labels_overlap": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      268
     ]
    },
    "enumerate": {
     "line number": [
      251
     ]
    },
    "len": {
     "line number": [
      254,
      265
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      246
     ]
    },
    "mne.label.Label": {
     "line number": [
      252
     ]
    },
    "mne.simulation.source.simulate_stc": {
     "line number": [
      269,
      272
     ]
    },
    "mne.simulation.tests.test_source._get_fwd_labels": {
     "line number": [
      249
     ]
    },
    "mne.simulation.tests.test_source.pytest": {
     "line number": [
      268
     ]
    },
    "numpy.ones": {
     "line number": [
      254,
      265
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_source_simulator": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      368,
      371,
      374
     ]
    },
    "enumerate": {
     "line number": [
      297
     ]
    },
    "events": {
     "line number": [
      311,
      312,
      313,
      314,
      337,
      362,
      372,
      376
     ]
    },
    "len": {
     "line number": [
      318,
      319,
      320,
      322,
      332,
      343,
      346,
      384
     ]
    },
    "mne.label.Label": {
     "line number": [
      298
     ]
    },
    "mne.simulation.source.SourceSimulator": {
     "line number": [
      335,
      360,
      366,
      379
     ]
    },
    "mne.simulation.tests.test_source._get_fwd_labels": {
     "line number": [
      282
     ]
    },
    "mne.simulation.tests.test_source.pytest": {
     "line number": [
      368,
      371,
      374
     ]
    },
    "numpy.all": {
     "line number": [
      348,
      349
     ]
    },
    "numpy.arange": {
     "line number": [
      289,
      290,
      291
     ]
    },
    "numpy.array": {
     "line number": [
      306,
      307,
      308,
      309,
      312,
      313,
      314,
      323,
      326,
      328,
      331,
      380
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      300,
      316,
      317,
      320
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      318,
      319
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      350,
      351,
      352,
      364
     ]
    },
    "numpy.tile": {
     "line number": [
      324,
      327,
      329,
      332
     ]
    },
    "numpy.vstack": {
     "line number": [
      333
     ]
    },
    "numpy.zeros": {
     "line number": [
      322
     ]
    },
    "range": {
     "line number": [
      316,
      317,
      336,
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.stats": {
  "data": {},
  "type": "module"
 },
 "mne.stats._adjacency": {
  "data": {},
  "type": "module"
 },
 "mne.stats._adjacency.combine_adjacency": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      50,
      59
     ]
    },
    "_check_option": {
     "line number": [
      48
     ]
    },
    "_validate_type": {
     "line number": [
      36
     ]
    },
    "all": {
     "line number": [
      62
     ]
    },
    "bool": {
     "line number": [
      71
     ]
    },
    "enumerate": {
     "line number": [
      34,
      74
     ]
    },
    "float": {
     "line number": [
      46,
      72
     ]
    },
    "int": {
     "line number": [
      38,
      63,
      65,
      66,
      70
     ]
    },
    "isinstance": {
     "line number": [
      37,
      52,
      62
     ]
    },
    "len": {
     "line number": [
      65,
      75,
      76
     ]
    },
    "list": {
     "line number": [
      33
     ]
    },
    "numpy.arange": {
     "line number": [
      43,
      43,
      69
     ]
    },
    "numpy.array": {
     "line number": [
      63,
      64,
      66
     ]
    },
    "numpy.concatenate": {
     "line number": [
      64
     ]
    },
    "numpy.empty": {
     "line number": [
      70,
      72
     ]
    },
    "numpy.hstack": {
     "line number": [
      44,
      44
     ]
    },
    "numpy.ndarray": {
     "line number": [
      36
     ]
    },
    "numpy.ones": {
     "line number": [
      46
     ]
    },
    "numpy.prod": {
     "line number": [
      64,
      68
     ]
    },
    "numpy.tile": {
     "line number": [
      83
     ]
    },
    "numpy.vstack": {
     "line number": [
      44
     ]
    },
    "numpy.zeros": {
     "line number": [
      71
     ]
    },
    "range": {
     "line number": [
      65
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      45,
      52,
      53,
      62,
      91
     ]
    },
    "scipy.sparse.spmatrix": {
     "line number": [
      36
     ]
    },
    "slice": {
     "line number": [
      75,
      76,
      80
     ]
    },
    "tuple": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats._adjacency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats._adjacency.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.multi_comp": {
  "data": {},
  "type": "module"
 },
 "mne.stats.multi_comp._ecdf": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "float": {
     "line number": [
      14
     ]
    },
    "len": {
     "line number": [
      13
     ]
    },
    "numpy.arange": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.multi_comp.bonferroni_correction": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "float": {
     "line number": [
      97
     ]
    },
    "numpy.asarray": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.multi_comp.fdr_correction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      62
     ]
    },
    "len": {
     "line number": [
      59
     ]
    },
    "max": {
     "line number": [
      66
     ]
    },
    "mne.stats.multi_comp._ecdf": {
     "line number": [
      57,
      60
     ]
    },
    "numpy.arange": {
     "line number": [
      59
     ]
    },
    "numpy.argsort": {
     "line number": [
      52
     ]
    },
    "numpy.asarray": {
     "line number": [
      48
     ]
    },
    "numpy.minimum.accumulate": {
     "line number": [
      72
     ]
    },
    "numpy.nonzero": {
     "line number": [
      66
     ]
    },
    "numpy.sum": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.multi_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.parametric": {
  "data": {},
  "type": "module"
 },
 "mne.stats.parametric._get_contrast_indices": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "int": {
     "line number": [
      246,
      246
     ]
    },
    "numpy.array": {
     "line number": [
      246
     ]
    },
    "numpy.binary_repr": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric._iter_contrasts": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "len": {
     "line number": [
      253
     ]
    },
    "mne.stats.parametric._get_contrast_indices": {
     "line number": [
      265
     ]
    },
    "numpy.eye": {
     "line number": [
      262
     ]
    },
    "numpy.kron": {
     "line number": [
      269
     ]
    },
    "numpy.linalg.matrix_rank": {
     "line number": [
      270
     ]
    },
    "numpy.ones": {
     "line number": [
      261
     ]
    },
    "range": {
     "line number": [
      267
     ]
    },
    "scipy.signal.detrend": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric._map_effects": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      187,
      193,
      195,
      206,
      211
     ]
    },
    "isinstance": {
     "line number": [
      191,
      208,
      224,
      232
     ]
    },
    "len": {
     "line number": [
      186,
      198,
      210
     ]
    },
    "list": {
     "line number": [
      189,
      208,
      215,
      216
     ]
    },
    "mne.stats.parametric._get_contrast_indices": {
     "line number": [
      218
     ]
    },
    "numpy.arange": {
     "line number": [
      215
     ]
    },
    "numpy.where": {
     "line number": [
      219
     ]
    },
    "str": {
     "line number": [
      191,
      224,
      232
     ]
    },
    "string.ascii_uppercase": {
     "line number": [
      186,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric._parametric_ci": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "len": {
     "line number": [
      432
     ]
    },
    "numpy.full_like": {
     "line number": [
      433
     ]
    },
    "numpy.nan": {
     "line number": [
      433
     ]
    },
    "scipy.stats.sem": {
     "line number": [
      436
     ]
    },
    "scipy.stats.t.interval": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric.ascii_uppercase": {
  "data": {
   "shadows": "string.ascii_uppercase"
  },
  "type": "import"
 },
 "mne.stats.parametric.detrend": {
  "data": {
   "shadows": "scipy.signal.detrend"
  },
  "type": "import"
 },
 "mne.stats.parametric.f": {
  "data": {
   "shadows": "scipy.stats.f"
  },
  "type": "import"
 },
 "mne.stats.parametric.f_mway_rm": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "len": {
     "line number": [
      389
     ]
    },
    "mne.stats.parametric._iter_contrasts": {
     "line number": [
      396
     ]
    },
    "mne.stats.parametric._map_effects": {
     "line number": [
      389
     ]
    },
    "numpy.array": {
     "line number": [
      407,
      408
     ]
    },
    "numpy.asarray": {
     "line number": [
      426
     ]
    },
    "numpy.dot": {
     "line number": [
      398,
      407
     ]
    },
    "numpy.empty": {
     "line number": [
      422
     ]
    },
    "numpy.maximum": {
     "line number": [
      417
     ]
    },
    "numpy.mean": {
     "line number": [
      399
     ]
    },
    "numpy.newaxis": {
     "line number": [
      384,
      399
     ]
    },
    "numpy.prod": {
     "line number": [
      387
     ]
    },
    "numpy.rollaxis": {
     "line number": [
      394
     ]
    },
    "numpy.squeeze": {
     "line number": [
      426
     ]
    },
    "numpy.sum": {
     "line number": [
      400,
      400,
      401,
      401,
      409,
      409
     ]
    },
    "numpy.trace": {
     "line number": [
      408
     ]
    },
    "numpy.zeros": {
     "line number": [
      412,
      412
     ]
    },
    "scipy.stats.f": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric.f_oneway": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      172
     ]
    },
    "float": {
     "line number": [
      170,
      174,
      178,
      179
     ]
    },
    "functools.reduce": {
     "line number": [
      165,
      168
     ]
    },
    "len": {
     "line number": [
      162,
      163
     ]
    },
    "numpy.array": {
     "line number": [
      163
     ]
    },
    "numpy.sum": {
     "line number": [
      164,
      166,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric.f_threshold_mway_rm": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "len": {
     "line number": [
      314,
      321
     ]
    },
    "mne.stats.parametric._iter_contrasts": {
     "line number": [
      317
     ]
    },
    "mne.stats.parametric._map_effects": {
     "line number": [
      314
     ]
    },
    "scipy.stats.f": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.parametric.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.stats.parametric.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.parametric.ttest_1samp_no_p": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      58
     ]
    },
    "numpy.max": {
     "line number": [
      61
     ]
    },
    "numpy.mean": {
     "line number": [
      63
     ]
    },
    "numpy.sqrt": {
     "line number": [
      63
     ]
    },
    "numpy.var": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.parametric.ttest_ind_no_p": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.divide": {
     "line number": [
      116
     ]
    },
    "numpy.errstate": {
     "line number": [
      104,
      115
     ]
    },
    "numpy.isnan": {
     "line number": [
      109
     ]
    },
    "numpy.max": {
     "line number": [
      112
     ]
    },
    "numpy.mean": {
     "line number": [
      114,
      114
     ]
    },
    "numpy.sqrt": {
     "line number": [
      113
     ]
    },
    "numpy.var": {
     "line number": [
      93,
      94
     ]
    },
    "numpy.where": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.permutations": {
  "data": {},
  "type": "module"
 },
 "mne.stats.permutations._ci": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "_parametric_ci": {
     "line number": [
      153
     ]
    },
    "mne.stats.permutations.bootstrap_confidence_interval": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.permutations._max_stat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "float": {
     "line number": [
      17
     ]
    },
    "len": {
     "line number": [
      16
     ]
    },
    "math.sqrt": {
     "line number": [
      19
     ]
    },
    "numpy.abs": {
     "line number": [
      19
     ]
    },
    "numpy.dot": {
     "line number": [
      17
     ]
    },
    "numpy.max": {
     "line number": [
      19
     ]
    },
    "numpy.sqrt": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.permutations.bootstrap_confidence_interval": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      133
     ]
    },
    "callable": {
     "line number": [
      132
     ]
    },
    "check_random_state": {
     "line number": [
      136
     ]
    },
    "int": {
     "line number": [
      135
     ]
    },
    "len": {
     "line number": [
      138
     ]
    },
    "numpy.arange": {
     "line number": [
      135
     ]
    },
    "numpy.array": {
     "line number": [
      139,
      142
     ]
    },
    "numpy.percentile": {
     "line number": [
      141
     ]
    },
    "stat_fun": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.permutations.bootstrap_confidence_interval.stat_fun": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.median": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.permutations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.permutations.permutation_t_test": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_get_1samp_orders": {
     "line number": [
      86
     ]
    },
    "check_random_state": {
     "line number": [
      85
     ]
    },
    "len": {
     "line number": [
      88
     ]
    },
    "math.sqrt": {
     "line number": [
      82,
      84
     ]
    },
    "mne.stats.permutations._max_stat": {
     "line number": [
      89
     ]
    },
    "my_max_stat": {
     "line number": [
      90
     ]
    },
    "numpy.abs": {
     "line number": [
      92,
      95
     ]
    },
    "numpy.array": {
     "line number": [
      87
     ]
    },
    "numpy.array_split": {
     "line number": [
      91
     ]
    },
    "numpy.concatenate": {
     "line number": [
      90,
      92
     ]
    },
    "numpy.mean": {
     "line number": [
      80,
      81,
      84
     ]
    },
    "numpy.newaxis": {
     "line number": [
      95
     ]
    },
    "numpy.newaxis.mean": {
     "line number": [
      97,
      99
     ]
    },
    "numpy.sort": {
     "line number": [
      93
     ]
    },
    "numpy.sqrt": {
     "line number": [
      83
     ]
    },
    "parallel": {
     "line number": [
      90
     ]
    },
    "parallel_func": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.permutations.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.stats.regression": {
  "data": {},
  "type": "module"
 },
 "mne.stats.regression._clean_rerp_input": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "_reject_data_segments": {
     "line number": [
      376
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      379
     ]
    },
    "numpy.unique": {
     "line number": [
      372
     ]
    },
    "range": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression._fit_lm": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107,
      111,
      114
     ]
    },
    "dict": {
     "line number": [
      125
     ]
    },
    "len": {
     "line number": [
      104,
      113
     ]
    },
    "numpy.abs": {
     "line number": [
      136
     ]
    },
    "numpy.clip": {
     "line number": [
      137
     ]
    },
    "numpy.diag": {
     "line number": [
      123
     ]
    },
    "numpy.dot": {
     "line number": [
      122
     ]
    },
    "numpy.empty_like": {
     "line number": [
      129,
      130
     ]
    },
    "numpy.finfo": {
     "line number": [
      124
     ]
    },
    "numpy.float64": {
     "line number": [
      124
     ]
    },
    "numpy.inf": {
     "line number": [
      140
     ]
    },
    "numpy.log10": {
     "line number": [
      146
     ]
    },
    "numpy.product": {
     "line number": [
      105
     ]
    },
    "numpy.reshape": {
     "line number": [
      117
     ]
    },
    "numpy.sign": {
     "line number": [
      140
     ]
    },
    "numpy.sqrt": {
     "line number": [
      121,
      123
     ]
    },
    "range": {
     "line number": [
      125
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      122
     ]
    },
    "scipy.linalg.lstsq": {
     "line number": [
      118
     ]
    },
    "scipy.stats.t.cdf": {
     "line number": [
      136
     ]
    },
    "zip": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression._make_evokeds": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      393
     ]
    },
    "dict": {
     "line number": [
      389
     ]
    },
    "float": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression._prepare_rerp_data": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      295,
      303
     ]
    },
    "_picks_to_idx": {
     "line number": [
      288
     ]
    },
    "events": {
     "line number": [
      294,
      294,
      299,
      300,
      301,
      302,
      302,
      309
     ]
    },
    "events.copy": {
     "line number": [
      299
     ]
    },
    "int": {
     "line number": [
      290
     ]
    },
    "len": {
     "line number": [
      294,
      294,
      302,
      302
     ]
    },
    "pick_info": {
     "line number": [
      289
     ]
    },
    "set": {
     "line number": [
      294,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression._prepare_rerp_preds": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      357
     ]
    },
    "dict": {
     "line number": [
      340
     ]
    },
    "events": {
     "line number": [
      349,
      349,
      354,
      358
     ]
    },
    "float": {
     "line number": [
      321,
      326,
      359
     ]
    },
    "int": {
     "line number": [
      321,
      322,
      324,
      326,
      328,
      330,
      344,
      347
     ]
    },
    "isinstance": {
     "line number": [
      321,
      326,
      347
     ]
    },
    "len": {
     "line number": [
      350,
      354,
      354,
      360,
      362
     ]
    },
    "list": {
     "line number": [
      315,
      317
     ]
    },
    "numpy.asarray": {
     "line number": [
      359
     ]
    },
    "numpy.in1d": {
     "line number": [
      349
     ]
    },
    "numpy.newaxis": {
     "line number": [
      360
     ]
    },
    "numpy.nonzero": {
     "line number": [
      359
     ]
    },
    "numpy.ones": {
     "line number": [
      350,
      360
     ]
    },
    "numpy.where": {
     "line number": [
      358
     ]
    },
    "round": {
     "line number": [
      322,
      324,
      328,
      330
     ]
    },
    "scipy.sparse.dia_matrix": {
     "line number": [
      363
     ]
    },
    "scipy.sparse.hstack": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "mne.stats.regression.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.stats.regression.linear_regression": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "EvokedArray": {
     "line number": [
      71
     ]
    },
    "RuntimeError": {
     "line number": [
      93
     ]
    },
    "ValueError": {
     "line number": [
      81
     ]
    },
    "collections.namedtuple": {
     "line number": [
      86
     ]
    },
    "enumerate": {
     "line number": [
      90
     ]
    },
    "inspect.isgenerator": {
     "line number": [
      72
     ]
    },
    "isinstance": {
     "line number": [
      62,
      76,
      76,
      92
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "list": {
     "line number": [
      76
     ]
    },
    "lm": {
     "line number": [
      96
     ]
    },
    "mne.stats.regression._fit_lm": {
     "line number": [
      85
     ]
    },
    "next": {
     "line number": [
      74
     ]
    },
    "numpy.array": {
     "line number": [
      75,
      79
     ]
    },
    "numpy.product": {
     "line number": [
      84
     ]
    },
    "numpy.zeros": {
     "line number": [
      71
     ]
    },
    "pick_types": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      60
     ]
    },
    "warn": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression.linear_regression_raw": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      256
     ]
    },
    "ValueError": {
     "line number": [
      247,
      276
     ]
    },
    "callable": {
     "line number": [
      253
     ]
    },
    "events": {
     "line number": [
      259,
      259,
      263,
      267
     ]
    },
    "isinstance": {
     "line number": [
      245
     ]
    },
    "mne.stats.regression._clean_rerp_input": {
     "line number": [
      271
     ]
    },
    "mne.stats.regression._make_evokeds": {
     "line number": [
      281
     ]
    },
    "mne.stats.regression._prepare_rerp_data": {
     "line number": [
      259
     ]
    },
    "mne.stats.regression._prepare_rerp_preds": {
     "line number": [
      266
     ]
    },
    "set": {
     "line number": [
      263
     ]
    },
    "solver": {
     "line number": [
      274
     ]
    },
    "str": {
     "line number": [
      245,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression.linear_regression_raw.solver": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "scipy.linalg.solve": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.regression.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.stats.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.regression.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.regression.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_adjacency": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_adjacency.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_adjacency.combine_adjacency": {
  "data": {
   "shadows": "mne.stats.combine_adjacency"
  },
  "type": "import"
 },
 "mne.stats.tests.test_adjacency.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.grid_to_graph"
  },
  "type": "import"
 },
 "mne.stats.tests.test_adjacency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_adjacency.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_adjacency.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.stats.tests.test_adjacency.test_adjacency_equiv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "len": {
     "line number": [
      31
     ]
    },
    "mne.stats.combine_adjacency": {
     "line number": [
      33
     ]
    },
    "mne.stats.tests.test_adjacency.pytest": {
     "line number": [
      16
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      15
     ]
    },
    "numpy.in1d": {
     "line number": [
      42
     ]
    },
    "numpy.prod": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      44
     ]
    },
    "sklearn.feature_extraction.grid_to_graph": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      696
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.stats.tests.test_cluster_level.MixedSourceEstimate": {
  "data": {
   "shadows": "mne.MixedSourceEstimate"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.SourceSpaces": {
  "data": {
   "shadows": "mne.SourceSpaces"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level._force_serial": {
  "data": {
   "shadows": "mne.parallel._force_serial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level._get_conditions": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "mne.stats.tests.test_cluster_level.n_space": {
     "line number": [
      54,
      58
     ]
    },
    "numpy.convolve": {
     "line number": [
      56,
      60
     ]
    },
    "numpy.hanning": {
     "line number": [
      52,
      56,
      60,
      62
     ]
    },
    "numpy.newaxis": {
     "line number": [
      66,
      67
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.cluster_level": {
  "data": {
   "shadows": "mne.stats.cluster_level"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.combine_adjacency": {
  "data": {
   "shadows": "mne.stats.combine_adjacency"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.f_oneway": {
  "data": {
   "shadows": "mne.stats.cluster_level.f_oneway"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.has_numba": {
  "data": {
   "shadows": "mne.fixes.has_numba"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.n_space": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.stats.tests.test_cluster_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.numba_conditional": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.fixes.has_numba": {
     "line number": [
      33,
      40
     ]
    },
    "mne.stats.cluster_level": {
     "line number": [
      35,
      37,
      39
     ]
    },
    "mne.stats.cluster_level._get_buddies_fallback": {
     "line number": [
      35
     ]
    },
    "mne.stats.cluster_level._get_selves_fallback": {
     "line number": [
      37
     ]
    },
    "mne.stats.cluster_level._where_first_fallback": {
     "line number": [
      39
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      41,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.permutation_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.permutation_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.permutation_cluster_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.permutation_cluster_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.spatio_temporal_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.spatio_temporal_cluster_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.spatio_temporal_cluster_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.summarize_clusters_stc": {
  "data": {
   "shadows": "mne.stats.cluster_level.summarize_clusters_stc"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.test_cache_dir": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      145
     ]
    },
    "functools.partial": {
     "line number": [
      140
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      135,
      146
     ]
    },
    "mne.stats.cluster_level.ttest_1samp_no_p": {
     "line number": [
      137,
      140
     ]
    },
    "mne.stats.tests.test_cluster_level.os": {
     "line number": [
      126,
      127,
      131,
      132,
      152,
      154,
      156,
      158
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      145
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      134
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      141
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      128
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      142
     ]
    },
    "str": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_t_test": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      286
     ]
    },
    "ValueError": {
     "line number": [
      290
     ]
    },
    "functools.partial": {
     "line number": [
      239
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      251,
      259,
      265,
      277,
      287,
      291
     ]
    },
    "mne.stats.cluster_level.ttest_1samp_no_p": {
     "line number": [
      238,
      239
     ]
    },
    "mne.stats.tests.test_cluster_level._get_conditions": {
     "line number": [
      244
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      275,
      286,
      290,
      237
     ]
    },
    "numpy.min": {
     "line number": [
      255
     ]
    },
    "numpy.sum": {
     "line number": [
      254
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      256
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      269,
      270,
      282,
      283
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      254
     ]
    },
    "stat_fun": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_test": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      232
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_test": {
     "line number": [
      208,
      218,
      226,
      233
     ]
    },
    "mne.stats.tests.test_cluster_level._get_conditions": {
     "line number": [
      205
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      225,
      232
     ]
    },
    "numpy.min": {
     "line number": [
      211
     ]
    },
    "numpy.sum": {
     "line number": [
      212
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      213
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      222
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      212
     ]
    },
    "zip": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_test.stat_fun": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "scipy.stats.f_oneway": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_with_adjacency": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      402
     ]
    },
    "RuntimeWarning": {
     "line number": [
      418,
      447
     ]
    },
    "TypeError": {
     "line number": [
      432
     ]
    },
    "ValueError": {
     "line number": [
      397,
      414,
      423,
      428,
      435,
      446
     ]
    },
    "bool": {
     "line number": [
      332,
      333
     ]
    },
    "dict": {
     "line number": [
      305,
      404,
      409,
      417,
      421,
      443
     ]
    },
    "func": {
     "line number": [
      318,
      320,
      340
     ]
    },
    "isinstance": {
     "line number": [
      335,
      357
     ]
    },
    "len": {
     "line number": [
      342,
      347,
      348,
      354,
      354,
      366,
      371,
      377,
      377,
      411
     ]
    },
    "list": {
     "line number": [
      335,
      357
     ]
    },
    "mne.parallel._force_serial": {
     "line number": [
      396
     ]
    },
    "mne.stats.cluster_level.f_oneway": {
     "line number": [
      450
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      312
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_test": {
     "line number": [
      316
     ]
    },
    "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test": {
     "line number": [
      313
     ]
    },
    "mne.stats.cluster_level.spatio_temporal_cluster_test": {
     "line number": [
      317
     ]
    },
    "mne.stats.combine_adjacency": {
     "line number": [
      331
     ]
    },
    "mne.stats.tests.test_cluster_level._get_conditions": {
     "line number": [
      301
     ]
    },
    "mne.stats.tests.test_cluster_level.n_space": {
     "line number": [
      358,
      360
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      397,
      402,
      407,
      414,
      418,
      423,
      428,
      432,
      435,
      436,
      446,
      447
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      296
     ]
    },
    "numpy.all": {
     "line number": [
      324
     ]
    },
    "numpy.concatenate": {
     "line number": [
      336,
      338
     ]
    },
    "numpy.eye": {
     "line number": [
      331
     ]
    },
    "numpy.min": {
     "line number": [
      444
     ]
    },
    "numpy.reshape": {
     "line number": [
      358,
      360
     ]
    },
    "numpy.sort": {
     "line number": [
      392,
      393
     ]
    },
    "numpy.sum": {
     "line number": [
      351,
      352,
      374,
      375,
      388,
      390
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      394
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      321,
      323,
      332,
      343,
      344,
      367,
      368
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      328
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      327
     ]
    },
    "sklearn.feature_extraction.image.grid_to_graph": {
     "line number": [
      319
     ]
    },
    "spatio_temporal_func": {
     "line number": [
      362,
      380,
      383,
      397,
      403,
      408,
      415,
      419,
      424,
      429,
      433,
      437,
      441,
      448
     ]
    },
    "zip": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_adjacency_equiv": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      528,
      542,
      545
     ]
    },
    "dict": {
     "line number": [
      514,
      536
     ]
    },
    "enumerate": {
     "line number": [
      543
     ]
    },
    "functools.partial": {
     "line number": [
      516
     ]
    },
    "isinstance": {
     "line number": [
      527,
      536,
      544
     ]
    },
    "len": {
     "line number": [
      534,
      537,
      558,
      558
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      523
     ]
    },
    "mne.stats.cluster_level.ttest_1samp_no_p": {
     "line number": [
      516
     ]
    },
    "mne.stats.tests.test_cluster_level.n_space": {
     "line number": [
      500,
      501,
      509,
      510,
      511,
      537,
      542,
      545
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      493
     ]
    },
    "numpy.all": {
     "line number": [
      538
     ]
    },
    "numpy.ndarray": {
     "line number": [
      527
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      497
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      535
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      529,
      557,
      560,
      561
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      534,
      537
     ]
    },
    "numpy.where": {
     "line number": [
      533
     ]
    },
    "numpy.zeros": {
     "line number": [
      542,
      545
     ]
    },
    "sklearn.feature_extraction.image.grid_to_graph": {
     "line number": [
      509,
      510,
      511
     ]
    },
    "stat_fun": {
     "line number": [
      516,
      525
     ]
    },
    "tuple": {
     "line number": [
      544
     ]
    },
    "zip": {
     "line number": [
      520,
      546,
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_cluster_signs": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      456
     ]
    },
    "float": {
     "line number": [
      464
     ]
    },
    "func": {
     "line number": [
      468,
      473,
      476
     ]
    },
    "len": {
     "line number": [
      481,
      481,
      484
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      468
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_test": {
     "line number": [
      473
     ]
    },
    "mne.stats.cluster_level.ttest_1samp_no_p": {
     "line number": [
      469
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      454,
      456,
      458
     ]
    },
    "mne.stats.ttest_ind_no_p": {
     "line number": [
      474
     ]
    },
    "numpy.array": {
     "line number": [
      462
     ]
    },
    "numpy.mean": {
     "line number": [
      465
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      475
     ]
    },
    "numpy.sign": {
     "line number": [
      465,
      484,
      485,
      489
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      489,
      490
     ]
    },
    "numpy.unique": {
     "line number": [
      484
     ]
    },
    "numpy.zeros": {
     "line number": [
      479,
      480
     ]
    },
    "stat_fun": {
     "line number": [
      469,
      474,
      478
     ]
    },
    "zip": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_large_n_samples": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "len": {
     "line number": [
      170
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      167
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      163
     ]
    },
    "numpy.unique": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_step_down_p": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      184,
      188,
      194
     ]
    },
    "numpy.all": {
     "line number": [
      197
     ]
    },
    "numpy.min": {
     "line number": [
      191
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      175
     ]
    },
    "numpy.sum": {
     "line number": [
      190,
      196
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      192,
      199
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      190,
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_test_H0": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      659
     ]
    },
    "isinstance": {
     "line number": [
      668,
      672
     ]
    },
    "len": {
     "line number": [
      662,
      667,
      674
     ]
    },
    "min": {
     "line number": [
      667
     ]
    },
    "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test": {
     "line number": [
      660,
      665,
      670
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      659
     ]
    },
    "numpy.ndarray": {
     "line number": [
      672
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      657
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      662,
      667,
      674
     ]
    },
    "tuple": {
     "line number": [
      668
     ]
    },
    "zip": {
     "line number": [
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_spatio_temporal_cluster_adjacency": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      602,
      604,
      606
     ]
    },
    "dict": {
     "line number": [
      580
     ]
    },
    "mne.stats.cluster_level.spatio_temporal_cluster_test": {
     "line number": [
      582,
      588,
      597,
      602,
      604,
      606
     ]
    },
    "mne.stats.tests.test_cluster_level._get_conditions": {
     "line number": [
      569
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      602,
      604,
      606
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      564
     ]
    },
    "numpy.dstack": {
     "line number": [
      573,
      576
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      571
     ]
    },
    "numpy.sum": {
     "line number": [
      593,
      593
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      601
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      593
     ]
    },
    "numpy.transpose": {
     "line number": [
      573,
      576
     ]
    },
    "sklearn.feature_extraction.image.grid_to_graph": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_summarize_clusters": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      651
     ]
    },
    "ValueError": {
     "line number": [
      641
     ]
    },
    "dict": {
     "line number": [
      619,
      622,
      639
     ]
    },
    "isinstance": {
     "line number": [
      648
     ]
    },
    "len": {
     "line number": [
      634,
      643
     ]
    },
    "mne.MixedSourceEstimate": {
     "line number": [
      633
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      626
     ]
    },
    "mne.SourceSpaces": {
     "line number": [
      618,
      621
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      629
     ]
    },
    "mne.stats.cluster_level.summarize_clusters_stc": {
     "line number": [
      642,
      647,
      652
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      641,
      651,
      615
     ]
    },
    "numpy.arange": {
     "line number": [
      619,
      622
     ]
    },
    "numpy.array": {
     "line number": [
      636,
      636,
      637,
      638
     ]
    },
    "numpy.random.random": {
     "line number": [
      635
     ]
    },
    "range": {
     "line number": [
      619
     ]
    },
    "sum": {
     "line number": [
      634
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_tfce_thresholds": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      683,
      691
     ]
    },
    "dict": {
     "line number": [
      685,
      688,
      693
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      684,
      687,
      692
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      683,
      691
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_thresholds": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      116
     ]
    },
    "RuntimeWarning": {
     "line number": [
      80,
      96,
      104,
      110
     ]
    },
    "dict": {
     "line number": [
      112,
      119
     ]
    },
    "functools.partial": {
     "line number": [
      78,
      94
     ]
    },
    "len": {
     "line number": [
      76,
      85,
      91,
      91,
      102
     ]
    },
    "mne.stats.cluster_level.f_oneway": {
     "line number": [
      94
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_1samp_test": {
     "line number": [
      81,
      111,
      118
     ]
    },
    "mne.stats.cluster_level.permutation_cluster_test": {
     "line number": [
      97,
      105
     ]
    },
    "mne.stats.cluster_level.ttest_1samp_no_p": {
     "line number": [
      78
     ]
    },
    "mne.stats.tests.test_cluster_level.pytest": {
     "line number": [
      80,
      96,
      104,
      110,
      116
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      79,
      95
     ]
    },
    "numpy.errstate": {
     "line number": [
      117
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      74
     ]
    },
    "numpy.repeat": {
     "line number": [
      108
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      86,
      103
     ]
    },
    "scipy.stats.f.ppf": {
     "line number": [
      91
     ]
    },
    "scipy.stats.f_oneway": {
     "line number": [
      92
     ]
    },
    "scipy.stats.t.ppf": {
     "line number": [
      76
     ]
    },
    "scipy.stats.ttest_1samp": {
     "line number": [
      77
     ]
    },
    "str": {
     "line number": [
      84,
      101
     ]
    },
    "sum": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.ttest_1samp": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "scipy.stats.ttest_1samp": {
     "line number": [
      612
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.ttest_1samp_no_p": {
  "data": {
   "shadows": "mne.stats.cluster_level.ttest_1samp_no_p"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.ttest_ind_no_p": {
  "data": {
   "shadows": "mne.stats.ttest_ind_no_p"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_multi_comp.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.bonferroni_correction": {
  "data": {
   "shadows": "mne.stats.bonferroni_correction"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.fdr_correction": {
  "data": {
   "shadows": "mne.stats.fdr_correction"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.test_bonferroni_pval_clip": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "mne.stats.bonferroni_correction": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_multi_comp.test_multi_pval_correction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      47
     ]
    },
    "mne.stats.bonferroni_correction": {
     "line number": [
      30
     ]
    },
    "mne.stats.fdr_correction": {
     "line number": [
      41,
      47,
      48,
      50
     ]
    },
    "mne.stats.tests.test_multi_comp.pytest": {
     "line number": [
      47
     ]
    },
    "numpy.abs": {
     "line number": [
      44,
      51
     ]
    },
    "numpy.all": {
     "line number": [
      48
     ]
    },
    "numpy.mean": {
     "line number": [
      38
     ]
    },
    "numpy.min": {
     "line number": [
      44,
      51
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      19
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      39
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      36
     ]
    },
    "scipy.stats.t.ppf": {
     "line number": [
      28,
      31
     ]
    },
    "scipy.stats.ttest_1samp": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric": {
  "data": {
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      17,
      18,
      19,
      22,
      23,
      25,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.stats.tests.test_parametric._map_effects": {
  "data": {
   "shadows": "mne.stats.parametric._map_effects"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.f_mway_rm": {
  "data": {
   "shadows": "mne.stats.parametric.f_mway_rm"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.f_threshold_mway_rm": {
  "data": {
   "shadows": "mne.stats.parametric.f_threshold_mway_rm"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.generate_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.random.RandomState": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.test_external": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.stats.tests.test_parametric.test_f_twoway_rm": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94
     ]
    },
    "itertools.product": {
     "line number": [
      68
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "mne.stats.parametric._map_effects": {
     "line number": [
      84
     ]
    },
    "mne.stats.parametric.f_mway_rm": {
     "line number": [
      79,
      94,
      98,
      102,
      110,
      114,
      117
     ]
    },
    "mne.stats.parametric.f_threshold_mway_rm": {
     "line number": [
      89
     ]
    },
    "mne.stats.tests.test_parametric.generate_data": {
     "line number": [
      101,
      113
     ]
    },
    "mne.stats.tests.test_parametric.pytest": {
     "line number": [
      94
     ]
    },
    "mne.stats.tests.test_parametric.test_external": {
     "line number": [
      104,
      105,
      107,
      108,
      111,
      115,
      118
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      67
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      104,
      105,
      107,
      108,
      111,
      115,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.test_map_effects": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      60,
      62
     ]
    },
    "mne.stats.parametric._map_effects": {
     "line number": [
      47,
      50,
      53,
      57,
      60,
      62
     ]
    },
    "mne.stats.tests.test_parametric.pytest": {
     "line number": [
      60,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.test_ttest_equiv": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      124,
      125
     ]
    },
    "functools.partial": {
     "line number": [
      141
     ]
    },
    "getattr": {
     "line number": [
      141
     ]
    },
    "mne.stats.tests.test_parametric.mne": {
     "line number": [
      141
     ]
    },
    "mne.stats.tests.test_parametric.pytest": {
     "line number": [
      121,
      127,
      128
     ]
    },
    "numpy.abs": {
     "line number": [
      159,
      159
     ]
    },
    "numpy.allclose": {
     "line number": [
      155
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      131
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      153,
      158
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      159
     ]
    },
    "ours": {
     "line number": [
      147,
      150
     ]
    },
    "theirs": {
     "line number": [
      148,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.test_ttest_equiv.theirs": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "func": {
     "line number": [
      139
     ]
    },
    "functools.partial": {
     "line number": [
      136,
      138
     ]
    },
    "getattr": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_permutations": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.stats.tests.test_permutations._ci": {
  "data": {
   "shadows": "mne.stats.permutations._ci"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.bootstrap_confidence_interval": {
  "data": {
   "shadows": "mne.stats.permutations.bootstrap_confidence_interval"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.permutation_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.permutation_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.permutation_t_test": {
  "data": {
   "shadows": "mne.stats.permutations.permutation_t_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.test_ci": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "mne.stats.permutations._ci": {
     "line number": [
      71,
      72
     ]
    },
    "mne.stats.permutations.bootstrap_confidence_interval": {
     "line number": [
      73,
      75,
      81
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      79
     ]
    },
    "numpy.linspace": {
     "line number": [
      70
     ]
    },
    "numpy.newaxis": {
     "line number": [
      70
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      71,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_permutations.test_permutation_t_test": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "len": {
     "line number": [
      26,
      33,
      46
     ]
    },
    "mne.stats.permutation_cluster_1samp_test": {
     "line number": [
      52
     ]
    },
    "mne.stats.permutations.permutation_t_test": {
     "line number": [
      23,
      30,
      37,
      43,
      61
     ]
    },
    "numpy.random.randn": {
     "line number": [
      20,
      60
     ]
    },
    "numpy.random.seed": {
     "line number": [
      18
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      57,
      58,
      63,
      64
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      28,
      35,
      40,
      48
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      51
     ]
    },
    "scipy.stats.ttest_1samp": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      22
     ]
    },
    "mne.stats.tests.test_regression.data_path": {
     "line number": [
      23,
      25,
      26
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      156
     ]
    },
    "os.path.join": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.stats.tests.test_regression.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.event_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.hann": {
  "data": {
   "shadows": "scipy.signal.hann"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.linear_regression": {
  "data": {
   "shadows": "mne.stats.regression.linear_regression"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.linear_regression_raw": {
  "data": {
   "shadows": "mne.stats.regression.linear_regression_raw"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.ridge_regression": {
  "data": {
   "shadows": "sklearn.linear_model.ridge_regression"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.stc_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_no_overlap": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      113,
      118
     ]
    },
    "dict": {
     "line number": [
      94
     ]
    },
    "events": {
     "line number": [
      93,
      98,
      101,
      111,
      112,
      112,
      114,
      116,
      117,
      117,
      119
     ]
    },
    "len": {
     "line number": [
      117
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      80
     ]
    },
    "mne.stats.regression.linear_regression_raw": {
     "line number": [
      101,
      113,
      118
     ]
    },
    "mne.stats.tests.test_regression.event_fname": {
     "line number": [
      93
     ]
    },
    "mne.stats.tests.test_regression.mne": {
     "line number": [
      85,
      93,
      98
     ]
    },
    "mne.stats.tests.test_regression.pytest": {
     "line number": [
      113,
      118
     ]
    },
    "mne.stats.tests.test_regression.raw_fname": {
     "line number": [
      85
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      107
     ]
    },
    "range": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      153
     ]
    },
    "ValueError": {
     "line number": [
      150,
      152
     ]
    },
    "events": {
     "line number": [
      128,
      129,
      130,
      131,
      137,
      145,
      150,
      152,
      153
     ]
    },
    "int": {
     "line number": [
      128
     ]
    },
    "len": {
     "line number": [
      128,
      133
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      123
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      134
     ]
    },
    "mne.stats.regression.linear_regression_raw": {
     "line number": [
      136,
      144,
      150,
      152,
      153
     ]
    },
    "mne.stats.tests.test_regression.mne": {
     "line number": [
      134
     ]
    },
    "mne.stats.tests.test_regression.pytest": {
     "line number": [
      150,
      152,
      153
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      122
     ]
    },
    "numpy.convolve": {
     "line number": [
      133
     ]
    },
    "numpy.newaxis": {
     "line number": [
      134
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      136,
      144
     ]
    },
    "numpy.zeros": {
     "line number": [
      126,
      128
     ]
    },
    "scipy.signal.hann": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap.solT": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "sklearn.linear_model.ridge_regression": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap.solver": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "sklearn.linear_model.ridge_regression": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_regression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      47
     ]
    },
    "ValueError": {
     "line number": [
      54
     ]
    },
    "dict": {
     "line number": [
      33
     ]
    },
    "events": {
     "line number": [
      37,
      38
     ]
    },
    "len": {
     "line number": [
      40,
      61,
      62
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      29
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      57
     ]
    },
    "mne.stats.regression.linear_regression": {
     "line number": [
      48,
      54,
      61,
      62
     ]
    },
    "mne.stats.tests.test_regression.event_fname": {
     "line number": [
      37
     ]
    },
    "mne.stats.tests.test_regression.mne": {
     "line number": [
      36,
      37,
      38
     ]
    },
    "mne.stats.tests.test_regression.pytest": {
     "line number": [
      47,
      54
     ]
    },
    "mne.stats.tests.test_regression.raw_fname": {
     "line number": [
      36
     ]
    },
    "mne.stats.tests.test_regression.stc_fname": {
     "line number": [
      57
     ]
    },
    "numpy.arange": {
     "line number": [
      40
     ]
    },
    "numpy.errstate": {
     "line number": [
      60
     ]
    },
    "numpy.float64": {
     "line number": [
      42
     ]
    },
    "numpy.isfinite": {
     "line number": [
      67,
      71
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      77
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      52
     ]
    },
    "zip": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_annotations": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      32
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      36
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      1235
     ]
    },
    "os.path.dirname": {
     "line number": [
      33
     ]
    },
    "os.path.join": {
     "line number": [
      32,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_annotations.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._assert_annotations_equal": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      787,
      788
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations._create_annotation_based_on_descr": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      725
     ]
    },
    "all": {
     "line number": [
      732,
      739,
      740
     ]
    },
    "len": {
     "line number": [
      734
     ]
    },
    "mne.Annotations": {
     "line number": [
      719
     ]
    },
    "mne.create_info": {
     "line number": [
      710
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      709
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      725
     ]
    },
    "numpy.empty": {
     "line number": [
      709
     ]
    },
    "numpy.float64": {
     "line number": [
      709
     ]
    },
    "numpy.full_like": {
     "line number": [
      716,
      717
     ]
    },
    "pytest.approx": {
     "line number": [
      738
     ]
    },
    "type": {
     "line number": [
      716,
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._handle_meas_date": {
  "data": {
   "shadows": "mne.annotations._handle_meas_date"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._raw_annot": {
  "data": {
   "shadows": "mne.utils._raw_annot"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._read_annotations_txt_parse_header": {
  "data": {
   "shadows": "mne.annotations._read_annotations_txt_parse_header"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._sync_onset": {
  "data": {
   "shadows": "mne.annotations._sync_onset"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._windows_datetime": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.tests.test_annotations._windows_datetime.fromtimestamp": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      45
     ]
    },
    "classmethod": {
     "line number": [
      42
     ]
    },
    "datetime.datetime.fromtimestamp": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.annotations_from_events": {
  "data": {
   "shadows": "mne.annotations_from_events"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_and_remove_boundary_annot": {
  "data": {
   "shadows": "mne.utils.assert_and_remove_boundary_annot"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.concatenate_raws": {
  "data": {
   "shadows": "mne.io.concatenate_raws"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.data_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.dummy_annotation_csv_file": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      795
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_file": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      849
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_file_empty": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      966
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_file_with_orig_time": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_header": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      884
     ]
    },
    "str": {
     "line number": [
      895
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_one_segment": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      946
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_broken_annotation_csv_file": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "mne.tests.test_annotations.pytest": {
     "line number": [
      807
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.fif_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.first_samps": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.read_annotations": {
  "data": {
   "shadows": "mne.read_annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.test_allow_nan_durations": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1140
     ]
    },
    "float": {
     "line number": [
      1135,
      1136
     ]
    },
    "mne.create_info": {
     "line number": [
      1128
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1127
     ]
    },
    "mne.tests.test_annotations.mne": {
     "line number": [
      1137
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      1140
     ]
    },
    "numpy.asarray": {
     "line number": [
      1135,
      1136
     ]
    },
    "numpy.empty": {
     "line number": [
      1127
     ]
    },
    "numpy.float64": {
     "line number": [
      1127
     ]
    },
    "numpy.nan": {
     "line number": [
      1133,
      1133
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annot_sanitizing": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      113
     ]
    },
    "mne.Annotations": {
     "line number": [
      106,
      114
     ]
    },
    "mne.read_annotations": {
     "line number": [
      109
     ]
    },
    "mne.tests.test_annotations._assert_annotations_equal": {
     "line number": [
      110
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      113
     ]
    },
    "str": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_concat": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      542
     ]
    },
    "len": {
     "line number": [
      528,
      529,
      530,
      537,
      538
     ]
    },
    "mne.Annotations": {
     "line number": [
      520,
      521
     ]
    },
    "mne.annotations._handle_meas_date": {
     "line number": [
      541
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      542
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      525,
      526,
      527,
      534,
      535,
      536
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      528,
      529,
      530,
      537,
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_epoching": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "events": {
     "line number": [
      510,
      511,
      513
     ]
    },
    "len": {
     "line number": [
      506,
      513,
      513,
      514
     ]
    },
    "mne.Epochs": {
     "line number": [
      511
     ]
    },
    "mne.create_info": {
     "line number": [
      503
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      504
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      504
     ]
    },
    "numpy.array": {
     "line number": [
      510
     ]
    },
    "numpy.in1d": {
     "line number": [
      507,
      508
     ]
    },
    "numpy.ones": {
     "line number": [
      502
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      509
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      513,
      514,
      515
     ]
    },
    "range": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_filtering": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      406,
      407
     ]
    },
    "mne.Annotations": {
     "line number": [
      449,
      461
     ]
    },
    "mne.create_info": {
     "line number": [
      403
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      404
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      413,
      415,
      416
     ]
    },
    "mne.tests.test_annotations.first_samps": {
     "line number": [
      398
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      431,
      437
     ]
    },
    "numpy.concatenate": {
     "line number": [
      443
     ]
    },
    "numpy.ones": {
     "line number": [
      402,
      443
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      418,
      419,
      423,
      426,
      445,
      452,
      458,
      464,
      470
     ]
    },
    "numpy.zeros": {
     "line number": [
      443,
      443
     ]
    },
    "range": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_omit": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      496
     ]
    },
    "mne.Annotations": {
     "line number": [
      479
     ]
    },
    "mne.create_info": {
     "line number": [
      477
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      478
     ]
    },
    "mne.tests.test_annotations.first_samps": {
     "line number": [
      473
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      496
     ]
    },
    "numpy.concatenate": {
     "line number": [
      476,
      485,
      492
     ]
    },
    "numpy.isfinite": {
     "line number": [
      490
     ]
    },
    "numpy.nan": {
     "line number": [
      483
     ]
    },
    "numpy.ones": {
     "line number": [
      476,
      476
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      481,
      484,
      488,
      491,
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_crop": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      593,
      595
     ]
    },
    "ValueError": {
     "line number": [
      589
     ]
    },
    "len": {
     "line number": [
      567,
      574,
      586
     ]
    },
    "mne.Annotations": {
     "line number": [
      552
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      563,
      570,
      582,
      589,
      593,
      595
     ]
    },
    "numpy.arange": {
     "line number": [
      548
     ]
    },
    "numpy.full_like": {
     "line number": [
      549
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      566,
      573
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      559,
      560,
      565,
      572,
      578,
      579,
      584,
      585
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_from_events": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1198,
      1204
     ]
    },
    "events": {
     "line number": [
      1148,
      1152,
      1160,
      1165,
      1176,
      1187,
      1199,
      1205,
      1211
     ]
    },
    "events.shape": {
     "line number": [
      1155,
      1171,
      1171,
      1182,
      1182,
      1193,
      1216,
      1216
     ]
    },
    "int": {
     "line number": [
      1159
     ]
    },
    "len": {
     "line number": [
      1155,
      1171,
      1182,
      1193,
      1216
     ]
    },
    "mne.annotations_from_events": {
     "line number": [
      1152,
      1165,
      1176,
      1187,
      1199,
      1205,
      1211
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1144
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      1159
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1147
     ]
    },
    "mne.tests.test_annotations.fif_fname": {
     "line number": [
      1147
     ]
    },
    "mne.tests.test_annotations.mne": {
     "line number": [
      1148
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      1198,
      1204
     ]
    },
    "numpy.all": {
     "line number": [
      1170,
      1181,
      1192,
      1215
     ]
    },
    "numpy.array": {
     "line number": [
      1197,
      1210
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_simple_iteration": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      998
     ]
    },
    "enumerate": {
     "line number": [
      997
     ]
    },
    "isinstance": {
     "line number": [
      998
     ]
    },
    "mne.Annotations": {
     "line number": [
      992
     ]
    },
    "numpy.float64": {
     "line number": [
      988,
      988
     ]
    },
    "numpy.isscalar": {
     "line number": [
      1003
     ]
    },
    "numpy.str_": {
     "line number": [
      988
     ]
    },
    "range": {
     "line number": [
      989,
      990
     ]
    },
    "str": {
     "line number": [
      999
     ]
    },
    "type": {
     "line number": [
      1004
     ]
    },
    "zip": {
     "line number": [
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_slices": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1048
     ]
    },
    "bool": {
     "line number": [
      1037
     ]
    },
    "dict": {
     "line number": [
      1031
     ]
    },
    "isinstance": {
     "line number": [
      1044
     ]
    },
    "len": {
     "line number": [
      1037,
      1045,
      1045,
      1047
     ]
    },
    "mne.Annotations": {
     "line number": [
      1015,
      1044
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      1048
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      1008
     ]
    },
    "numpy.array": {
     "line number": [
      1041
     ]
    },
    "range": {
     "line number": [
      1012,
      1013,
      1037
     ]
    },
    "slice": {
     "line number": [
      1036
     ]
    },
    "str": {
     "line number": [
      1033
     ]
    },
    "zip": {
     "line number": [
      1031
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_basics": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      62
     ]
    },
    "ValueError": {
     "line number": [
      78,
      79,
      80
     ]
    },
    "datetime.datetime": {
     "line number": [
      67,
      75
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      76
     ]
    },
    "isinstance": {
     "line number": [
      67,
      75
     ]
    },
    "len": {
     "line number": [
      61
     ]
    },
    "mne.Annotations": {
     "line number": [
      71,
      78,
      79,
      80,
      90
     ]
    },
    "mne.annotations._handle_meas_date": {
     "line number": [
      86
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      97
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      59
     ]
    },
    "mne.read_annotations": {
     "line number": [
      62
     ]
    },
    "mne.tests.test_annotations.fif_fname": {
     "line number": [
      59,
      62
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      62,
      78,
      79,
      80
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      68,
      86
     ]
    },
    "mne.utils.assert_and_remove_boundary_annot": {
     "line number": [
      98
     ]
    },
    "numpy.array": {
     "line number": [
      63
     ]
    },
    "numpy.ones": {
     "line number": [
      64
     ]
    },
    "numpy.repeat": {
     "line number": [
      65,
      101
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      89,
      94,
      99
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      100,
      101
     ]
    },
    "range": {
     "line number": [
      63
     ]
    },
    "repr": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_chunk_duration": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "events": {
     "line number": [
      269,
      271,
      277,
      278
     ]
    },
    "mne.Annotations": {
     "line number": [
      257
     ]
    },
    "mne.annotations._handle_meas_date": {
     "line number": [
      256
     ]
    },
    "mne.create_info": {
     "line number": [
      254
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      269,
      277
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      253
     ]
    },
    "mne.tests.test_annotations.first_samps": {
     "line number": [
      249
     ]
    },
    "numpy.arange": {
     "line number": [
      276
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      264
     ]
    },
    "numpy.empty": {
     "line number": [
      253
     ]
    },
    "numpy.float64": {
     "line number": [
      253
     ]
    },
    "numpy.insert": {
     "line number": [
      265,
      266
     ]
    },
    "numpy.repeat": {
     "line number": [
      264
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      260
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      271,
      278
     ]
    },
    "numpy.zeros": {
     "line number": [
      274
     ]
    },
    "range": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_crop": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      230
     ]
    },
    "events": {
     "line number": [
      170,
      171,
      171
     ]
    },
    "getattr": {
     "line number": [
      203,
      204,
      224,
      225
     ]
    },
    "isinstance": {
     "line number": [
      232,
      240
     ]
    },
    "len": {
     "line number": [
      173,
      179,
      233,
      241,
      246
     ]
    },
    "mne.Annotations": {
     "line number": [
      211,
      212,
      228,
      232,
      240
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      214
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      169,
      239,
      244
     ]
    },
    "mne.read_annotations": {
     "line number": [
      222,
      230,
      231
     ]
    },
    "mne.tests.test_annotations.fif_fname": {
     "line number": [
      169,
      230
     ]
    },
    "mne.tests.test_annotations.mne": {
     "line number": [
      170,
      174,
      194
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      230
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      219
     ]
    },
    "mne.utils.assert_and_remove_boundary_annot": {
     "line number": [
      198,
      215
     ]
    },
    "numpy.full_like": {
     "line number": [
      172
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      183,
      185,
      190,
      192,
      196,
      197,
      203,
      224
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      216
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      181,
      188,
      200,
      227
     ]
    },
    "os.path.join": {
     "line number": [
      220,
      236
     ]
    },
    "range": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_crop_more": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "len": {
     "line number": [
      316,
      327
     ]
    },
    "mne.tests.test_annotations.fif_fname": {
     "line number": [
      310
     ]
    },
    "mne.tests.test_annotations.mne": {
     "line number": [
      310,
      314,
      319
     ]
    },
    "mne.utils.assert_and_remove_boundary_annot": {
     "line number": [
      326
     ]
    },
    "numpy.array": {
     "line number": [
      312,
      313
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      311
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      323,
      324,
      330,
      331,
      332,
      333
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_crop_when_negative_orig_time": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1110,
      1114
     ]
    },
    "mne.Annotations": {
     "line number": [
      1104
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      1106
     ]
    },
    "mne.utils._stamp_to_dt": {
     "line number": [
      1121
     ]
    },
    "numpy.arange": {
     "line number": [
      1104
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1107,
      1120
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_date_none": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      1079
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1081
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1084
     ]
    },
    "numpy.random.random_sample": {
     "line number": [
      1076
     ]
    },
    "os.path.join": {
     "line number": [
      1082
     ]
    },
    "range": {
     "line number": [
      1077
     ]
    },
    "str": {
     "line number": [
      1082
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_event_id_function_default": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      753
     ]
    },
    "events": {
     "line number": [
      761,
      763
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      761
     ]
    },
    "mne.tests.test_annotations._create_annotation_based_on_descr": {
     "line number": [
      758
     ]
    },
    "numpy.array": {
     "line number": [
      754
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      763
     ]
    },
    "range": {
     "line number": [
      753
     ]
    },
    "zip": {
     "line number": [
      753
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_event_id_function_using_custom_function": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      773
     ]
    },
    "events": {
     "line number": [
      776,
      778
     ]
    },
    "itertools.repeat": {
     "line number": [
      773
     ]
    },
    "len": {
     "line number": [
      774
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      776
     ]
    },
    "mne.tests.test_annotations._create_annotation_based_on_descr": {
     "line number": [
      775
     ]
    },
    "numpy.repeat": {
     "line number": [
      774
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      778
     ]
    },
    "zip": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_event_id_function_using_custom_function._constant_id": {
  "data": {
   "lineno": 769
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_events_from_annot_in_raw_objects": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      661,
      664
     ]
    },
    "dict": {
     "line number": [
      670
     ]
    },
    "enumerate": {
     "line number": [
      632
     ]
    },
    "events": {
     "line number": [
      603,
      613,
      614,
      615,
      621,
      627,
      649,
      649,
      649,
      658,
      658,
      658
     ]
    },
    "int": {
     "line number": [
      680
     ]
    },
    "isinstance": {
     "line number": [
      670
     ]
    },
    "len": {
     "line number": [
      614,
      636,
      640,
      671
     ]
    },
    "list": {
     "line number": [
      639
     ]
    },
    "mne.Annotations": {
     "line number": [
      613
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      599
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      620,
      625,
      644,
      653,
      662,
      665,
      669,
      679
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      668
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      602
     ]
    },
    "mne.tests.test_annotations.fif_fname": {
     "line number": [
      602
     ]
    },
    "mne.tests.test_annotations.mne": {
     "line number": [
      603
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      661,
      664
     ]
    },
    "numpy.arange": {
     "line number": [
      636,
      640
     ]
    },
    "numpy.empty": {
     "line number": [
      680
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      621,
      627,
      637,
      641,
      650,
      659,
      680
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      622,
      647,
      656
     ]
    },
    "numpy.unique": {
     "line number": [
      635,
      639
     ]
    },
    "numpy.zeros": {
     "line number": [
      614
     ]
    },
    "set": {
     "line number": [
      628,
      628
     ]
    },
    "sorted": {
     "line number": [
      632
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_events_from_annot_onset_alingment": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "mne.annotations._handle_meas_date": {
     "line number": [
      693
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      696
     ]
    },
    "mne.utils._raw_annot": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_events_from_annotation_orig_time_none": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "events": {
     "line number": [
      300,
      302
     ]
    },
    "mne.tests.test_annotations.mne": {
     "line number": [
      286,
      287,
      293,
      300,
      301
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      285
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_handle_meas_date": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": {
    "datetime.datetime.fromtimestamp": {
     "line number": [
      912
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      912
     ]
    },
    "mne.annotations._handle_meas_date": {
     "line number": [
      913
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      898,
      899,
      900,
      901,
      902,
      903,
      904,
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_io_annotation_csv": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      843
     ]
    },
    "mne.annotations._handle_meas_date": {
     "line number": [
      825
     ]
    },
    "mne.read_annotations": {
     "line number": [
      824,
      833,
      839,
      844
     ]
    },
    "mne.tests.test_annotations._assert_annotations_equal": {
     "line number": [
      834,
      840
     ]
    },
    "mne.tests.test_annotations.dummy_annotation_csv_file": {
     "line number": [
      824
     ]
    },
    "mne.tests.test_annotations.dummy_broken_annotation_csv_file": {
     "line number": [
      844
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      843
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      819
     ]
    },
    "numpy.array": {
     "line number": [
      826
     ]
    },
    "numpy.float32": {
     "line number": [
      826
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      827
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      826,
      828
     ]
    },
    "str": {
     "line number": [
      824,
      831,
      844
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_io_annotation_txt": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "mne.annotations._handle_meas_date": {
     "line number": [
      876
     ]
    },
    "mne.read_annotations": {
     "line number": [
      862,
      871,
      879
     ]
    },
    "mne.tests.test_annotations._assert_annotations_equal": {
     "line number": [
      872,
      881
     ]
    },
    "mne.tests.test_annotations.dummy_annotation_txt_file": {
     "line number": [
      862
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      864,
      865,
      866
     ]
    },
    "str": {
     "line number": [
      862,
      869
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_negative_meas_dates": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1096,
      1097
     ]
    },
    "mne.Annotations": {
     "line number": [
      1094
     ]
    },
    "mne.create_info": {
     "line number": [
      1092
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      1096
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      1091
     ]
    },
    "numpy.empty": {
     "line number": [
      1091
     ]
    },
    "numpy.float64": {
     "line number": [
      1091
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_raw_array_orig_times": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      162
     ]
    },
    "len": {
     "line number": [
      133,
      163
     ]
    },
    "mne.Annotations": {
     "line number": [
      128,
      134,
      157,
      158,
      159,
      162
     ]
    },
    "mne.annotations._handle_meas_date": {
     "line number": [
      123,
      155
     ]
    },
    "mne.create_info": {
     "line number": [
      121
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      127,
      132
     ]
    },
    "mne.io.concatenate_raws": {
     "line number": [
      137
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      154
     ]
    },
    "mne.utils.assert_and_remove_boundary_annot": {
     "line number": [
      139
     ]
    },
    "numpy.pi": {
     "line number": [
      123,
      128
     ]
    },
    "numpy.random.randn": {
     "line number": [
      119
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      131,
      135
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      140,
      143,
      146,
      148,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_raw_reject": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      353
     ]
    },
    "int": {
     "line number": [
      372,
      373
     ]
    },
    "len": {
     "line number": [
      374
     ]
    },
    "mne.Annotations": {
     "line number": [
      354,
      366
     ]
    },
    "mne.annotations._sync_onset": {
     "line number": [
      392,
      395
     ]
    },
    "mne.create_info": {
     "line number": [
      351
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      352
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      365
     ]
    },
    "mne.tests.test_annotations.fif_fname": {
     "line number": [
      365
     ]
    },
    "mne.tests.test_annotations.first_samps": {
     "line number": [
      347
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      353
     ]
    },
    "numpy.arange": {
     "line number": [
      358,
      359,
      360,
      361
     ]
    },
    "numpy.concatenate": {
     "line number": [
      358
     ]
    },
    "numpy.isnan": {
     "line number": [
      384,
      385,
      386
     ]
    },
    "numpy.ones": {
     "line number": [
      352
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      361
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      362
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      393,
      395
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      378,
      381,
      387,
      388
     ]
    },
    "range": {
     "line number": [
      375,
      380
     ]
    },
    "round": {
     "line number": [
      372,
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_empty": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "mne.read_annotations": {
     "line number": [
      979
     ]
    },
    "mne.tests.test_annotations.dummy_annotation_txt_file_empty": {
     "line number": [
      979
     ]
    },
    "numpy.array": {
     "line number": [
      980,
      981,
      982
     ]
    },
    "numpy.float64": {
     "line number": [
      980,
      981
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      980,
      981,
      982
     ]
    },
    "str": {
     "line number": [
      979
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_header": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": {
    "datetime.datetime.fromtimestamp": {
     "line number": [
      919
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      919
     ]
    },
    "mne.annotations._read_annotations_txt_parse_header": {
     "line number": [
      918
     ]
    },
    "mne.tests.test_annotations.dummy_annotation_txt_header": {
     "line number": [
      918
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_one_segment": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": {
    "mne.read_annotations": {
     "line number": [
      960
     ]
    },
    "mne.tests.test_annotations.dummy_annotation_txt_one_segment": {
     "line number": [
      960
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      961,
      962,
      963
     ]
    },
    "str": {
     "line number": [
      960
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_orig_time": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": {
    "datetime.datetime.fromtimestamp": {
     "line number": [
      941
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      941
     ]
    },
    "mne.Annotations": {
     "line number": [
      942
     ]
    },
    "mne.read_annotations": {
     "line number": [
      940
     ]
    },
    "mne.tests.test_annotations.dummy_annotation_txt_file_with_orig_time": {
     "line number": [
      940
     ]
    },
    "str": {
     "line number": [
      940
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_brainstorm_annotations": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "len": {
     "line number": [
      342
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      337
     ]
    },
    "mne.read_annotations": {
     "line number": [
      341
     ]
    },
    "mne.tests.test_annotations.data_dir": {
     "line number": [
      340
     ]
    },
    "numpy.unique": {
     "line number": [
      344
     ]
    },
    "os.path.join": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_repr": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1222,
      1226
     ]
    },
    "mne.Annotations": {
     "line number": [
      1222,
      1226,
      1231
     ]
    },
    "range": {
     "line number": [
      1222,
      1226
     ]
    },
    "repr": {
     "line number": [
      1222,
      1226,
      1231
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_sorting": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1057,
      1058
     ]
    },
    "mne.Annotations": {
     "line number": [
      1054
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1059,
      1060,
      1067,
      1068
     ]
    },
    "range": {
     "line number": [
      1057
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_annotations.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.windows_like_datetime": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "mne.tests.test_annotations._windows_datetime": {
     "line number": [
      53
     ]
    },
    "mne.tests.test_annotations.pytest": {
     "line number": [
      49
     ]
    },
    "mne.tests.test_annotations.sys": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      31
     ]
    },
    "mne.tests.test_bem.subjects_dir": {
     "line number": [
      32,
      34,
      36,
      38
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      389
     ]
    },
    "os.path.dirname": {
     "line number": [
      29
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      31,
      32,
      34,
      36,
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_bem.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_bem.Info": {
  "data": {
   "shadows": "mne.Info"
  },
  "type": "import"
 },
 "mne.tests.test_bem.Transform": {
  "data": {
   "shadows": "mne.Transform"
  },
  "type": "import"
 },
 "mne.tests.test_bem._assert_complete_surface": {
  "data": {
   "shadows": "mne.bem._assert_complete_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem._assert_inside": {
  "data": {
   "shadows": "mne.bem._assert_inside"
  },
  "type": "import"
 },
 "mne.tests.test_bem._bem_find_surface": {
  "data": {
   "shadows": "mne.bem._bem_find_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem._check_surface_size": {
  "data": {
   "shadows": "mne.bem._check_surface_size"
  },
  "type": "import"
 },
 "mne.tests.test_bem._compare_bem_solutions": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "mne.tests.test_bem._compare_bem_surfaces": {
     "line number": [
      57
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      64
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      61,
      62
     ]
    },
    "set": {
     "line number": [
      61,
      61,
      62,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem._compare_bem_surfaces": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      50
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      47,
      48
     ]
    },
    "set": {
     "line number": [
      47,
      47,
      47,
      48,
      48,
      48
     ]
    },
    "zip": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem._get_ico_map": {
  "data": {
   "shadows": "mne.bem._get_ico_map"
  },
  "type": "import"
 },
 "mne.tests.test_bem._ico_downsample": {
  "data": {
   "shadows": "mne.bem._ico_downsample"
  },
  "type": "import"
 },
 "mne.tests.test_bem._order_surfaces": {
  "data": {
   "shadows": "mne.bem._order_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_bem.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_bem.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.fit_sphere_to_headshape": {
  "data": {
   "shadows": "mne.preprocessing.maxfilter.fit_sphere_to_headshape"
  },
  "type": "import"
 },
 "mne.tests.test_bem.fname_bem_1": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_3": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_sol_1": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_sol_3": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_raw": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_bem.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_bem_model": {
  "data": {
   "shadows": "mne.make_bem_model"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_bem_solution": {
  "data": {
   "shadows": "mne.make_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_bem.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "mne.tests.test_bem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_bem.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_bem.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_surface": {
  "data": {
   "shadows": "mne.surface.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_bem.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_bem.subjects_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_bem.test_bem_model_topology": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      177,
      182
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      164
     ]
    },
    "mne.make_bem_model": {
     "line number": [
      178,
      183
     ]
    },
    "mne.surface.read_surface": {
     "line number": [
      174
     ]
    },
    "mne.tests.test_bem.pytest": {
     "line number": [
      177,
      182
     ]
    },
    "mne.tests.test_bem.subjects_dir": {
     "line number": [
      171
     ]
    },
    "mne.write_surface": {
     "line number": [
      176,
      181
     ]
    },
    "numpy.concatenate": {
     "line number": [
      180
     ]
    },
    "numpy.mean": {
     "line number": [
      180
     ]
    },
    "os.makedirs": {
     "line number": [
      168
     ]
    },
    "os.path.join": {
     "line number": [
      171
     ]
    },
    "shutil.copy": {
     "line number": [
      171
     ]
    },
    "str": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_bem_solution": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      196,
      198,
      202,
      204,
      207,
      210,
      212,
      214
     ]
    },
    "dict": {
     "line number": [
      197,
      199,
      205
     ]
    },
    "len": {
     "line number": [
      224
     ]
    },
    "mne.bem._assert_complete_surface": {
     "line number": [
      204
     ]
    },
    "mne.bem._assert_inside": {
     "line number": [
      210
     ]
    },
    "mne.bem._check_surface_size": {
     "line number": [
      214
     ]
    },
    "mne.bem._get_ico_map": {
     "line number": [
      207
     ]
    },
    "mne.bem._ico_downsample": {
     "line number": [
      196,
      198,
      202
     ]
    },
    "mne.bem._order_surfaces": {
     "line number": [
      212
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      187
     ]
    },
    "mne.make_bem_model": {
     "line number": [
      221
     ]
    },
    "mne.make_bem_solution": {
     "line number": [
      225
     ]
    },
    "mne.read_bem_solution": {
     "line number": [
      226,
      229
     ]
    },
    "mne.read_bem_surfaces": {
     "line number": [
      195,
      209
     ]
    },
    "mne.tests.test_bem._compare_bem_solutions": {
     "line number": [
      227,
      230,
      231
     ]
    },
    "mne.tests.test_bem.fname_bem_1": {
     "line number": [
      195,
      224
     ]
    },
    "mne.tests.test_bem.fname_bem_3": {
     "line number": [
      209,
      224
     ]
    },
    "mne.tests.test_bem.fname_bem_sol_1": {
     "line number": [
      189
     ]
    },
    "mne.tests.test_bem.fname_bem_sol_3": {
     "line number": [
      190
     ]
    },
    "mne.tests.test_bem.pytest": {
     "line number": [
      196,
      198,
      202,
      204,
      207,
      210,
      212,
      214,
      186,
      188
     ]
    },
    "mne.tests.test_bem.subjects_dir": {
     "line number": [
      222
     ]
    },
    "mne.write_bem_solution": {
     "line number": [
      228
     ]
    },
    "os.path.join": {
     "line number": [
      217
     ]
    },
    "str": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_fit_sphere_to_headshape": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      306
     ]
    },
    "RuntimeWarning": {
     "line number": [
      311,
      322,
      331,
      346,
      360,
      368,
      374,
      381
     ]
    },
    "TypeError": {
     "line number": [
      386
     ]
    },
    "ValueError": {
     "line number": [
      301,
      303,
      385
     ]
    },
    "copy.deepcopy": {
     "line number": [
      341,
      355
     ]
    },
    "dict": {
     "line number": [
      314,
      321,
      334,
      370
     ]
    },
    "mne.Info": {
     "line number": [
      298,
      380,
      384
     ]
    },
    "mne.Transform": {
     "line number": [
      297
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE": {
     "line number": [
      305
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      244,
      249,
      254,
      260,
      267,
      272,
      277,
      282,
      287,
      307
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL": {
     "line number": [
      246,
      251,
      256,
      310
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_EEG": {
     "line number": [
      268,
      273,
      278,
      283,
      288
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_EXTRA": {
     "line number": [
      261,
      310,
      320
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_HPI": {
     "line number": [
      302
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_LPA": {
     "line number": [
      245
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_NASION": {
     "line number": [
      250
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_RPA": {
     "line number": [
      255
     ]
    },
    "mne.preprocessing.maxfilter.fit_sphere_to_headshape": {
     "line number": [
      301,
      303,
      306,
      312,
      323,
      332,
      347,
      361,
      369,
      375,
      382,
      385,
      386
     ]
    },
    "mne.tests.test_bem.pytest": {
     "line number": [
      301,
      303,
      306,
      311,
      322,
      331,
      346,
      360,
      368,
      374,
      381,
      385,
      386
     ]
    },
    "mne.transforms.translation": {
     "line number": [
      297
     ]
    },
    "numpy.array": {
     "line number": [
      239,
      240,
      247,
      252,
      257,
      263,
      270,
      275,
      280,
      285,
      290,
      356
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      315,
      316,
      317,
      325,
      326,
      327,
      335,
      336,
      337,
      349,
      350,
      363,
      364,
      371,
      372,
      373,
      376,
      377,
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_io_bem": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      92,
      101
     ]
    },
    "ValueError": {
     "line number": [
      76,
      78
     ]
    },
    "mne.bem._bem_find_surface": {
     "line number": [
      102
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      68
     ]
    },
    "mne.read_bem_solution": {
     "line number": [
      93,
      95,
      98,
      100
     ]
    },
    "mne.read_bem_surfaces": {
     "line number": [
      77,
      79,
      80,
      81,
      88
     ]
    },
    "mne.tests.test_bem._compare_bem_solutions": {
     "line number": [
      99
     ]
    },
    "mne.tests.test_bem._compare_bem_surfaces": {
     "line number": [
      89
     ]
    },
    "mne.tests.test_bem.fname_bem_3": {
     "line number": [
      79,
      80,
      81,
      93
     ]
    },
    "mne.tests.test_bem.fname_bem_sol_1": {
     "line number": [
      100
     ]
    },
    "mne.tests.test_bem.fname_bem_sol_3": {
     "line number": [
      95
     ]
    },
    "mne.tests.test_bem.fname_raw": {
     "line number": [
      77
     ]
    },
    "mne.tests.test_bem.h5py": {
     "line number": [
      86
     ]
    },
    "mne.tests.test_bem.pytest": {
     "line number": [
      76,
      78,
      83,
      92,
      101,
      70
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      69
     ]
    },
    "mne.write_bem_solution": {
     "line number": [
      97
     ]
    },
    "mne.write_bem_surfaces": {
     "line number": [
      82,
      84
     ]
    },
    "os.path.join": {
     "line number": [
      74,
      94
     ]
    },
    "repr": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      74,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_bem_model": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      160
     ]
    },
    "dict": {
     "line number": [
      137,
      138
     ]
    },
    "len": {
     "line number": [
      147
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      135
     ]
    },
    "mne.make_bem_model": {
     "line number": [
      144,
      161
     ]
    },
    "mne.read_bem_surfaces": {
     "line number": [
      153,
      156
     ]
    },
    "mne.tests.test_bem._compare_bem_surfaces": {
     "line number": [
      154,
      157,
      158
     ]
    },
    "mne.tests.test_bem.fname_bem_1": {
     "line number": [
      138
     ]
    },
    "mne.tests.test_bem.fname_bem_3": {
     "line number": [
      137
     ]
    },
    "mne.tests.test_bem.pytest": {
     "line number": [
      160,
      136
     ]
    },
    "mne.tests.test_bem.re": {
     "line number": [
      150,
      151
     ]
    },
    "mne.tests.test_bem.subjects_dir": {
     "line number": [
      144,
      161
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      143
     ]
    },
    "mne.write_bem_surfaces": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_sphere_model": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108,
      109,
      110,
      112,
      131
     ]
    },
    "float": {
     "line number": [
      122
     ]
    },
    "mne.io.read_info": {
     "line number": [
      107
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      108,
      109,
      110,
      113,
      117,
      128,
      132
     ]
    },
    "mne.tests.test_bem.fname_raw": {
     "line number": [
      107
     ]
    },
    "mne.tests.test_bem.pytest": {
     "line number": [
      108,
      109,
      110,
      112,
      131
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      116
     ]
    },
    "repr": {
     "line number": [
      125,
      126,
      127,
      129,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_bem.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_bem.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_bem_solution": {
  "data": {
   "shadows": "mne.write_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_bem_surfaces": {
  "data": {
   "shadows": "mne.write_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_surface": {
  "data": {
   "shadows": "mne.write_surface"
  },
  "type": "import"
 },
 "mne.tests.test_chpi": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      35
     ]
    },
    "mne.tests.test_chpi.base_dir": {
     "line number": [
      30,
      31,
      32,
      33
     ]
    },
    "mne.tests.test_chpi.data_path": {
     "line number": [
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      47,
      49
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      616
     ]
    },
    "os.path.dirname": {
     "line number": [
      29
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      30,
      31,
      32,
      33,
      36,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      47,
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_chpi.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._MAG_FACTOR": {
  "data": {
   "shadows": "mne.forward._compute_forward._MAG_FACTOR"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._assert_quats": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      137
     ]
    },
    "mne.chpi.head_pos_to_trans_rot_t": {
     "line number": [
      128,
      129
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      148,
      163
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      130,
      142
     ]
    },
    "numpy.argmax": {
     "line number": [
      155,
      164
     ]
    },
    "numpy.isclose": {
     "line number": [
      136
     ]
    },
    "numpy.isfinite": {
     "line number": [
      154
     ]
    },
    "numpy.pi": {
     "line number": [
      163
     ]
    },
    "numpy.sqrt": {
     "line number": [
      153
     ]
    },
    "numpy.sum": {
     "line number": [
      153
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      149,
      171,
      176,
      181
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      152,
      162,
      170,
      175,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi._calculate_chpi_coil_locs": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "mne.chpi._chpi_locs_to_times_dig": {
     "line number": [
      440
     ]
    },
    "mne.chpi.compute_chpi_amplitudes": {
     "line number": [
      438
     ]
    },
    "mne.chpi.compute_chpi_locs": {
     "line number": [
      439
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      438,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi._calculate_chpi_positions": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "mne.chpi.compute_chpi_amplitudes": {
     "line number": [
      205
     ]
    },
    "mne.chpi.compute_chpi_locs": {
     "line number": [
      208
     ]
    },
    "mne.chpi.compute_head_pos": {
     "line number": [
      211
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      207,
      210,
      213,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi._check_dists": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "len": {
     "line number": [
      450,
      451,
      452,
      458
     ]
    },
    "mne.chpi._compute_good_distances": {
     "line number": [
      448
     ]
    },
    "mne.chpi._get_hpi_initial_fit": {
     "line number": [
      445
     ]
    },
    "numpy.array": {
     "line number": [
      447,
      455
     ]
    },
    "numpy.empty": {
     "line number": [
      451
     ]
    },
    "numpy.median": {
     "line number": [
      454
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      453
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      456,
      460,
      461
     ]
    },
    "numpy.where": {
     "line number": [
      449,
      457
     ]
    },
    "range": {
     "line number": [
      452
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi._chpi_locs_to_times_dig": {
  "data": {
   "shadows": "mne.chpi._chpi_locs_to_times_dig"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._compute_good_distances": {
  "data": {
   "shadows": "mne.chpi._compute_good_distances"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._decimate_chpi": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "mne.io.RawArray": {
     "line number": [
      187
     ]
    },
    "numpy.mod": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi._get_hpi_info": {
  "data": {
   "shadows": "mne.chpi._get_hpi_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._get_hpi_initial_fit": {
  "data": {
   "shadows": "mne.chpi._get_hpi_initial_fit"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._setup_ext_proj": {
  "data": {
   "shadows": "mne.chpi._setup_ext_proj"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.add_chpi": {
  "data": {
   "shadows": "mne.simulation.add_chpi"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.art_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.art_mc_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_meg_snr": {
  "data": {
   "shadows": "mne.utils.assert_meg_snr"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_suppressed": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "mne.pick_types": {
     "line number": [
      510
     ]
    },
    "numpy.abs": {
     "line number": [
      520
     ]
    },
    "numpy.argmin": {
     "line number": [
      520
     ]
    },
    "numpy.log10": {
     "line number": [
      523
     ]
    },
    "numpy.median": {
     "line number": [
      516,
      517,
      521,
      522
     ]
    },
    "scipy.signal.welch": {
     "line number": [
      514,
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.base_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.calculate_head_pos_ctf": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "mne.chpi.compute_head_pos": {
     "line number": [
      598
     ]
    },
    "mne.chpi.extract_chpi_locs_ctf": {
     "line number": [
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.chpi5_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.chpi5_pos_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.chpi_fif_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.compute_chpi_amplitudes": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_amplitudes"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.compute_chpi_locs": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_locs"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.compute_head_pos": {
  "data": {
   "shadows": "mne.chpi.compute_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.ctf_chpi_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.ctf_chpi_pos_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.ctf_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.data_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.extract_chpi_locs_ctf": {
  "data": {
   "shadows": "mne.chpi.extract_chpi_locs_ctf"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.filter_chpi": {
  "data": {
   "shadows": "mne.chpi.filter_chpi"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.head_pos_to_trans_rot_t": {
  "data": {
   "shadows": "mne.chpi.head_pos_to_trans_rot_t"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.hp_fif_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.hp_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pos_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.raw_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_artemis123": {
  "data": {
   "shadows": "mne.io.read_raw_artemis123"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.sample_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.sss_fif_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.sss_hpisubt_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.test_calculate_chpi_coil_locs_artemis": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      496
     ]
    },
    "len": {
     "line number": [
      501
     ]
    },
    "mne.chpi.compute_chpi_amplitudes": {
     "line number": [
      495
     ]
    },
    "mne.chpi.compute_chpi_locs": {
     "line number": [
      497
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      465
     ]
    },
    "mne.io.read_raw_artemis123": {
     "line number": [
      487
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      468
     ]
    },
    "mne.tests.test_chpi._calculate_chpi_coil_locs": {
     "line number": [
      473,
      488
     ]
    },
    "mne.tests.test_chpi._check_dists": {
     "line number": [
      484,
      494
     ]
    },
    "mne.tests.test_chpi._decimate_chpi": {
     "line number": [
      472
     ]
    },
    "mne.tests.test_chpi.art_fname": {
     "line number": [
      487
     ]
    },
    "mne.tests.test_chpi.chpi_fif_fname": {
     "line number": [
      468
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      496,
      464
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      499
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      476,
      477,
      479,
      481,
      483,
      490,
      491,
      492
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      502,
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions_artemis": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "mne.chpi.read_head_pos": {
     "line number": [
      282
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      277
     ]
    },
    "mne.io.read_raw_artemis123": {
     "line number": [
      281
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      285
     ]
    },
    "mne.tests.test_chpi._calculate_chpi_positions": {
     "line number": [
      284
     ]
    },
    "mne.tests.test_chpi.art_fname": {
     "line number": [
      281
     ]
    },
    "mne.tests.test_chpi.art_mc_fname": {
     "line number": [
      282
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions_vv": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      244,
      248,
      255,
      273
     ]
    },
    "RuntimeWarning": {
     "line number": [
      235,
      265
     ]
    },
    "len": {
     "line number": [
      262
     ]
    },
    "mne.chpi.compute_chpi_amplitudes": {
     "line number": [
      227
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      222
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      218
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      259
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_UNKNOWN": {
     "line number": [
      253
     ]
    },
    "mne.io.constants.FIFF.FIFFV_POINT_HPI": {
     "line number": [
      252,
      258
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      223,
      243
     ]
    },
    "mne.pick_types": {
     "line number": [
      263
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      241
     ]
    },
    "mne.tests.test_chpi._calculate_chpi_positions": {
     "line number": [
      236,
      245,
      249,
      256,
      267,
      274
     ]
    },
    "mne.tests.test_chpi._decimate_chpi": {
     "line number": [
      233
     ]
    },
    "mne.tests.test_chpi.chpi_fif_fname": {
     "line number": [
      223
     ]
    },
    "mne.tests.test_chpi.pos_fname": {
     "line number": [
      222
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      235,
      244,
      248,
      255,
      265,
      273,
      217
     ]
    },
    "mne.tests.test_chpi.sample_fname": {
     "line number": [
      243
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      226,
      234,
      266
     ]
    },
    "numpy.arange": {
     "line number": [
      262
     ]
    },
    "numpy.concatenate": {
     "line number": [
      262
     ]
    },
    "numpy.ones": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_head_pos_chpi_on_chpi5_in_one_second_steps": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "mne.chpi.read_head_pos": {
     "line number": [
      337
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      333
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      338
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      346
     ]
    },
    "mne.tests.test_chpi._calculate_chpi_positions": {
     "line number": [
      344
     ]
    },
    "mne.tests.test_chpi._decimate_chpi": {
     "line number": [
      342
     ]
    },
    "mne.tests.test_chpi.chpi5_fif_fname": {
     "line number": [
      338
     ]
    },
    "mne.tests.test_chpi.chpi5_pos_fname": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_head_pos_chpi_on_chpi5_in_shorter_steps": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      358
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      355
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      351
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      356
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      362
     ]
    },
    "mne.tests.test_chpi._calculate_chpi_positions": {
     "line number": [
      359
     ]
    },
    "mne.tests.test_chpi._decimate_chpi": {
     "line number": [
      357
     ]
    },
    "mne.tests.test_chpi.chpi5_fif_fname": {
     "line number": [
      356
     ]
    },
    "mne.tests.test_chpi.chpi5_pos_fname": {
     "line number": [
      355
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      358,
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_head_pos_ctf": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      612
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      606
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      601
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      604
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      611
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      608
     ]
    },
    "mne.tests.test_chpi.calculate_head_pos_ctf": {
     "line number": [
      605,
      613
     ]
    },
    "mne.tests.test_chpi.ctf_chpi_fname": {
     "line number": [
      604
     ]
    },
    "mne.tests.test_chpi.ctf_chpi_pos_fname": {
     "line number": [
      606
     ]
    },
    "mne.tests.test_chpi.ctf_fname": {
     "line number": [
      611
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      612
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_chpi_adjust": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "mne.chpi._get_hpi_info": {
     "line number": [
      59,
      87
     ]
    },
    "mne.chpi._get_hpi_initial_fit": {
     "line number": [
      58,
      86
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      53
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      56
     ]
    },
    "mne.tests.test_chpi.chpi_fif_fname": {
     "line number": [
      56
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      57,
      85
     ]
    },
    "set": {
     "line number": [
      76,
      76,
      76,
      76,
      89,
      89,
      89,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_chpi_subtraction_filter_chpi": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      564,
      567
     ]
    },
    "ValueError": {
     "line number": [
      590
     ]
    },
    "mne.chpi.filter_chpi": {
     "line number": [
      535,
      550,
      565,
      568,
      571,
      589,
      591
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      527
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      530,
      542,
      561,
      582
     ]
    },
    "mne.tests.test_chpi.assert_suppressed": {
     "line number": [
      547,
      558,
      576
     ]
    },
    "mne.tests.test_chpi.chpi_fif_fname": {
     "line number": [
      530,
      582
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      564,
      567,
      590
     ]
    },
    "mne.tests.test_chpi.sample_fname": {
     "line number": [
      561
     ]
    },
    "mne.tests.test_chpi.sss_hpisubt_fname": {
     "line number": [
      542
     ]
    },
    "mne.utils.assert_meg_snr": {
     "line number": [
      545
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      534,
      549,
      570,
      588
     ]
    },
    "numpy.arange": {
     "line number": [
      547,
      556,
      556
     ]
    },
    "numpy.concatenate": {
     "line number": [
      555
     ]
    },
    "numpy.sort": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_hpi_info": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "len": {
     "line number": [
      118,
      121,
      121
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      112
     ]
    },
    "mne.io.read_info": {
     "line number": [
      120
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      117
     ]
    },
    "mne.tests.test_chpi.chpi_fif_fname": {
     "line number": [
      116
     ]
    },
    "mne.tests.test_chpi.sss_fif_fname": {
     "line number": [
      116
     ]
    },
    "os.path.join": {
     "line number": [
      115
     ]
    },
    "str": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_initial_fit_redo": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      301
     ]
    },
    "mne.chpi._setup_ext_proj": {
     "line number": [
      300
     ]
    },
    "mne.chpi.compute_chpi_locs": {
     "line number": [
      302
     ]
    },
    "mne.chpi.compute_head_pos": {
     "line number": [
      321
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      290
     ]
    },
    "mne.forward._compute_forward._MAG_FACTOR": {
     "line number": [
      310
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      293
     ]
    },
    "mne.tests.test_chpi.chpi_fif_fname": {
     "line number": [
      293
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      326
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      327
     ]
    },
    "numpy.abs": {
     "line number": [
      317
     ]
    },
    "numpy.arccos": {
     "line number": [
      317
     ]
    },
    "numpy.array": {
     "line number": [
      294
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      296,
      312,
      313,
      324
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      317,
      326
     ]
    },
    "numpy.sum": {
     "line number": [
      317
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      306,
      314,
      330
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      298,
      299,
      318
     ]
    },
    "numpy.zeros": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_read_write_head_pos": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      109
     ]
    },
    "TypeError": {
     "line number": [
      105,
      108
     ]
    },
    "ValueError": {
     "line number": [
      106,
      107
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      99,
      102,
      108,
      109
     ]
    },
    "mne.chpi.write_head_pos": {
     "line number": [
      101,
      105,
      106,
      107
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      92
     ]
    },
    "mne.tests.test_chpi.pos_fname": {
     "line number": [
      99
     ]
    },
    "mne.tests.test_chpi.pytest": {
     "line number": [
      105,
      106,
      107,
      108,
      109
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      97
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      103
     ]
    },
    "os.path.join": {
     "line number": [
      95
     ]
    },
    "str": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_simulate_calculate_head_pos_chpi": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      388
     ]
    },
    "int": {
     "line number": [
      411,
      426
     ]
    },
    "len": {
     "line number": [
      372,
      426
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      427
     ]
    },
    "mne.io.read_info": {
     "line number": [
      369
     ]
    },
    "mne.pick_info": {
     "line number": [
      392
     ]
    },
    "mne.pick_types": {
     "line number": [
      390
     ]
    },
    "mne.simulation.add_chpi": {
     "line number": [
      428
     ]
    },
    "mne.tests.test_chpi._assert_quats": {
     "line number": [
      432
     ]
    },
    "mne.tests.test_chpi._calculate_chpi_positions": {
     "line number": [
      429
     ]
    },
    "mne.tests.test_chpi.raw_fname": {
     "line number": [
      369
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      399
     ]
    },
    "numpy.arange": {
     "line number": [
      373,
      416,
      419
     ]
    },
    "numpy.array": {
     "line number": [
      375,
      377,
      380,
      383,
      401
     ]
    },
    "numpy.concatenate": {
     "line number": [
      399
     ]
    },
    "numpy.int32": {
     "line number": [
      376,
      378,
      381,
      384
     ]
    },
    "numpy.outer": {
     "line number": [
      419
     ]
    },
    "numpy.zeros": {
     "line number": [
      415,
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_chpi.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.welch": {
  "data": {
   "shadows": "scipy.signal.welch"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.write_head_pos": {
  "data": {
   "shadows": "mne.chpi.write_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_coreg": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      25
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_coreg.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.tests.test_coreg._is_mri_subject": {
  "data": {
   "shadows": "mne.coreg._is_mri_subject"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.copytree": {
  "data": {
   "shadows": "shutil.copytree"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.coregister_fiducials": {
  "data": {
   "shadows": "mne.coreg.coregister_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.create_default_subject": {
  "data": {
   "shadows": "mne.coreg.create_default_subject"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_coreg.few_surfaces": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "mne.tests.test_coreg.pytest": {
     "line number": [
      28
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_coreg.fit_matched_points": {
  "data": {
   "shadows": "mne.coreg.fit_matched_points"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.get_mni_fiducials": {
  "data": {
   "shadows": "mne.coreg.get_mni_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.read_fiducials": {
  "data": {
   "shadows": "mne.io.read_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.rotation": {
  "data": {
   "shadows": "mne.transforms.rotation"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_labels": {
  "data": {
   "shadows": "mne.coreg.scale_labels"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_mri": {
  "data": {
   "shadows": "mne.coreg.scale_mri"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_source_space": {
  "data": {
   "shadows": "mne.coreg.scale_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scaling": {
  "data": {
   "shadows": "mne.transforms.scaling"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.test_coregister_fiducials": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "make_dig": {
     "line number": [
      50,
      51
     ]
    },
    "mne.coreg.coregister_fiducials": {
     "line number": [
      54
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      51
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_MRI": {
     "line number": [
      50
     ]
    },
    "mne.transforms.Transform": {
     "line number": [
      38
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      43
     ]
    },
    "mne.transforms.rotation": {
     "line number": [
      39
     ]
    },
    "mne.transforms.translation": {
     "line number": [
      39
     ]
    },
    "numpy.array": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_coregister_fiducials.make_dig": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_fit_matched_points": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      264
     ]
    },
    "functools.reduce": {
     "line number": [
      254
     ]
    },
    "mne.coreg.fit_matched_points": {
     "line number": [
      239,
      248,
      257,
      264
     ]
    },
    "mne.tests.test_coreg.pytest": {
     "line number": [
      264
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      238,
      241,
      247,
      249,
      256,
      258
     ]
    },
    "mne.transforms.rotation": {
     "line number": [
      237,
      246,
      254
     ]
    },
    "mne.transforms.scaling": {
     "line number": [
      255
     ]
    },
    "mne.transforms.translation": {
     "line number": [
      246,
      254
     ]
    },
    "numpy.dot": {
     "line number": [
      246,
      254
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      234
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      242,
      250,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_get_mni_fiducials": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "list": {
     "line number": [
      276
     ]
    },
    "mne.coreg.get_mni_fiducials": {
     "line number": [
      278
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      267
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_MRI": {
     "line number": [
      275
     ]
    },
    "mne.io.read_fiducials": {
     "line number": [
      274
     ]
    },
    "mne.tests.test_coreg.data_path": {
     "line number": [
      271
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      268
     ]
    },
    "numpy.array": {
     "line number": [
      277,
      279
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      280
     ]
    },
    "os.path.join": {
     "line number": [
      271,
      272
     ]
    },
    "range": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_scale_mri": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "glob.glob": {
     "line number": [
      88
     ]
    },
    "int": {
     "line number": [
      133
     ]
    },
    "len": {
     "line number": [
      131,
      131,
      132,
      133
     ]
    },
    "mne.coreg._is_mri_subject": {
     "line number": [
      71,
      109
     ]
    },
    "mne.coreg.create_default_subject": {
     "line number": [
      69,
      75
     ]
    },
    "mne.coreg.scale_labels": {
     "line number": [
      123
     ]
    },
    "mne.coreg.scale_mri": {
     "line number": [
      107
     ]
    },
    "mne.coreg.scale_source_space": {
     "line number": [
      139,
      153
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      68,
      81
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      61
     ]
    },
    "mne.source_space.write_source_spaces": {
     "line number": [
      102,
      105,
      135,
      149
     ]
    },
    "mne.tests.test_coreg.mne": {
     "line number": [
      95,
      99,
      115,
      134,
      140,
      154
     ]
    },
    "mne.tests.test_coreg.os": {
     "line number": [
      74,
      90,
      113,
      113,
      138,
      152
     ]
    },
    "mne.tests.test_coreg.pytest": {
     "line number": [
      106,
      60,
      62
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      119,
      121
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      145
     ]
    },
    "numpy.arange": {
     "line number": [
      132
     ]
    },
    "numpy.ones": {
     "line number": [
      133
     ]
    },
    "numpy.ravel_multi_index": {
     "line number": [
      117
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      119,
      121
     ]
    },
    "os.path.exists": {
     "line number": [
      77,
      112
     ]
    },
    "os.path.join": {
     "line number": [
      73,
      81,
      83,
      87,
      94,
      97,
      110
     ]
    },
    "print": {
     "line number": [
      93,
      98
     ]
    },
    "shutil.copyfile": {
     "line number": [
      84
     ]
    },
    "str": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_scale_mri_xfm": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      202,
      206
     ]
    },
    "len": {
     "line number": [
      190,
      191,
      192
     ]
    },
    "mne.coreg._is_mri_subject": {
     "line number": [
      216
     ]
    },
    "mne.coreg.create_default_subject": {
     "line number": [
      168
     ]
    },
    "mne.coreg.scale_mri": {
     "line number": [
      203,
      207,
      212
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      166
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      160
     ]
    },
    "mne.source_space.write_source_spaces": {
     "line number": [
      188
     ]
    },
    "mne.tests.test_coreg.mne": {
     "line number": [
      186,
      193,
      224,
      227
     ]
    },
    "mne.tests.test_coreg.os": {
     "line number": [
      172,
      173,
      211
     ]
    },
    "mne.tests.test_coreg.pytest": {
     "line number": [
      202,
      206,
      159
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      161
     ]
    },
    "numpy.concatenate": {
     "line number": [
      189,
      196,
      225
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      198,
      229
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      226
     ]
    },
    "os.path.exists": {
     "line number": [
      219,
      222
     ]
    },
    "os.path.join": {
     "line number": [
      171,
      173,
      175,
      176,
      184,
      211,
      217,
      221
     ]
    },
    "shutil.copytree": {
     "line number": [
      175
     ]
    },
    "str": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_coreg.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.write_source_spaces": {
  "data": {
   "shadows": "mne.source_space.write_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_cov": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      44
     ]
    },
    "mne.tests.test_cov.base_dir": {
     "line number": [
      36,
      37,
      38,
      39,
      40,
      41,
      42
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      787
     ]
    },
    "os.path.dirname": {
     "line number": [
      35
     ]
    },
    "os.path.join": {
     "line number": [
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      44
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_cov.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_cov.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_cov._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.tests.test_cov._assert_cov": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      331,
      336
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      332,
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov._assert_reorder": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.argsort": {
     "line number": [
      168
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      171
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov._auto_low_rank_model": {
  "data": {
   "shadows": "mne.cov._auto_low_rank_model"
  },
  "type": "import"
 },
 "mne.tests.test_cov._compute_rank_int": {
  "data": {
   "shadows": "mne.rank._compute_rank_int"
  },
  "type": "import"
 },
 "mne.tests.test_cov._cov_rank": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": {
    "mne.rank._compute_rank_int": {
     "line number": [
      622
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      621
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.tests.test_cov._regularized_covariance": {
  "data": {
   "shadows": "mne.cov._regularized_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_snr": {
  "data": {
   "shadows": "mne.utils.assert_snr"
  },
  "type": "import"
 },
 "mne.tests.test_cov.ave_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_cov.base_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_cov.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_whitener": {
  "data": {
   "shadows": "mne.cov.compute_whitener"
  },
  "type": "import"
 },
 "mne.tests.test_cov.cov_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_cov.cov_gz_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_cov.cov_km_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_cov.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_cov.ctf_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_cov.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_cov.erm_cov_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_cov.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.hp_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_cov.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.tests.test_cov.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.tests.test_cov.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_cov.merge_events": {
  "data": {
   "shadows": "mne.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_cov.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_channels_cov": {
  "data": {
   "shadows": "mne.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_cov.prepare_noise_cov": {
  "data": {
   "shadows": "mne.cov.prepare_noise_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_cov.raw_epochs_events": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "events": {
     "line number": [
      631,
      632,
      633
     ]
    },
    "mne.Epochs": {
     "line number": [
      632
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      628
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      631
     ]
    },
    "mne.preprocessing.maxwell_filter": {
     "line number": [
      629
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      625
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_cov.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_cov.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.tests.test_cov.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_cov.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_cov.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_cov.test_ad_hoc_cov": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      191,
      196
     ]
    },
    "dict": {
     "line number": [
      184
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      179,
      185
     ]
    },
    "mne.read_cov": {
     "line number": [
      182,
      188
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      178
     ]
    },
    "mne.tests.test_cov.ave_fname": {
     "line number": [
      178
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      191,
      196
     ]
    },
    "numpy.diag": {
     "line number": [
      190,
      195
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      183,
      189
     ]
    },
    "repr": {
     "line number": [
      181,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_arithmetic_cov": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "mne.read_cov": {
     "line number": [
      419
     ]
    },
    "mne.tests.test_cov.cov_fname": {
     "line number": [
      419
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      421,
      422,
      426,
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_auto_low_rank": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      517
     ]
    },
    "get_data": {
     "line number": [
      499,
      512
     ]
    },
    "mne.cov._auto_low_rank_model": {
     "line number": [
      507,
      518
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      517
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      482
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_auto_low_rank.get_data": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      493
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      489
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_compute_covariance_auto_reg": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      610,
      613
     ]
    },
    "bool": {
     "line number": [
      551
     ]
    },
    "dict": {
     "line number": [
      531,
      544,
      544,
      545,
      614
     ]
    },
    "events": {
     "line number": [
      529,
      534
     ]
    },
    "itertools.combinations": {
     "line number": [
      553
     ]
    },
    "len": {
     "line number": [
      551
     ]
    },
    "mne.Epochs": {
     "line number": [
      539
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      547,
      580,
      604,
      610,
      613
     ]
    },
    "mne.find_events": {
     "line number": [
      529
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      527
     ]
    },
    "mne.merge_events": {
     "line number": [
      534
     ]
    },
    "mne.pick_types": {
     "line number": [
      536
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      610,
      613,
      522,
      523
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      527
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      579
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      524
     ]
    },
    "numpy.any": {
     "line number": [
      558,
      567,
      570
     ]
    },
    "numpy.diff": {
     "line number": [
      574
     ]
    },
    "numpy.eye": {
     "line number": [
      551
     ]
    },
    "numpy.invert": {
     "line number": [
      552
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      562
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      602
     ]
    },
    "set": {
     "line number": [
      593,
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_compute_whitener": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      58
     ]
    },
    "len": {
     "line number": [
      62,
      63,
      64
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      59
     ]
    },
    "mne.cov.compute_whitener": {
     "line number": [
      60
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      52
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      58,
      48,
      49
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      52
     ]
    },
    "numpy.dot": {
     "line number": [
      68
     ]
    },
    "numpy.eye": {
     "line number": [
      70,
      74,
      77
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      70,
      73,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_ctf": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      758,
      765
     ]
    },
    "events": {
     "line number": [
      749,
      750,
      757,
      764
     ]
    },
    "len": {
     "line number": [
      750
     ]
    },
    "mne.Epochs": {
     "line number": [
      757,
      764
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      759,
      766
     ]
    },
    "mne.cov.prepare_noise_cov": {
     "line number": [
      761,
      770
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      744
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      748
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      749
     ]
    },
    "mne.pick_types": {
     "line number": [
      752
     ]
    },
    "mne.tests.test_cov.ctf_fname": {
     "line number": [
      748
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      758,
      765
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      745
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_on_raw": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      244
     ]
    },
    "RuntimeWarning": {
     "line number": [
      301
     ]
    },
    "ValueError": {
     "line number": [
      305
     ]
    },
    "dict": {
     "line number": [
      248,
      248,
      306,
      311
     ]
    },
    "len": {
     "line number": [
      268
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      254,
      277,
      292,
      296,
      302,
      305,
      309
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      246,
      300
     ]
    },
    "mne.pick_types": {
     "line number": [
      268
     ]
    },
    "mne.read_cov": {
     "line number": [
      247,
      284
     ]
    },
    "mne.tests.test_cov.erm_cov_fname": {
     "line number": [
      247
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      245,
      253,
      276,
      301,
      305,
      308,
      238
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      246,
      300
     ]
    },
    "mne.utils.assert_snr": {
     "line number": [
      259,
      273,
      280,
      295,
      298
     ]
    },
    "numpy.cov": {
     "line number": [
      262
     ]
    },
    "numpy.diag": {
     "line number": [
      271,
      271
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      271,
      272
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      287
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      257,
      258,
      279
     ]
    },
    "numpy.triu_indices": {
     "line number": [
      264,
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_on_raw_reg": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      323
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      326
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      321
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      319
     ]
    },
    "mne.read_cov": {
     "line number": [
      322
     ]
    },
    "mne.tests.test_cov.erm_cov_fname": {
     "line number": [
      322
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      323,
      315
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      319
     ]
    },
    "mne.utils.assert_snr": {
     "line number": [
      327
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_with_triggers": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      401,
      403,
      409,
      411
     ]
    },
    "TypeError": {
     "line number": [
      413,
      414
     ]
    },
    "ValueError": {
     "line number": [
      382,
      384,
      398,
      399
     ]
    },
    "dict": {
     "line number": [
      347,
      407
     ]
    },
    "events": {
     "line number": [
      345,
      350,
      369,
      393,
      395,
      407
     ]
    },
    "mne.Epochs": {
     "line number": [
      351,
      369,
      393,
      395,
      407
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      355,
      362,
      372,
      377,
      382,
      384,
      398,
      399,
      402,
      404,
      410,
      412,
      413,
      414
     ]
    },
    "mne.find_events": {
     "line number": [
      345
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      343
     ]
    },
    "mne.merge_events": {
     "line number": [
      350
     ]
    },
    "mne.read_cov": {
     "line number": [
      356,
      379,
      389
     ]
    },
    "mne.tests.test_cov._assert_cov": {
     "line number": [
      359,
      379,
      390
     ]
    },
    "mne.tests.test_cov.cov_fname": {
     "line number": [
      379
     ]
    },
    "mne.tests.test_cov.cov_km_fname": {
     "line number": [
      356
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      382,
      384,
      398,
      399,
      401,
      403,
      409,
      411,
      413,
      414,
      339,
      340
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      343
     ]
    },
    "numpy.all": {
     "line number": [
      363
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      373
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      364,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_mismatch": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      97
     ]
    },
    "ValueError": {
     "line number": [
      95,
      99
     ]
    },
    "events": {
     "line number": [
      83,
      86
     ]
    },
    "mne.Epochs": {
     "line number": [
      86
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      90,
      95,
      96,
      98,
      99,
      104
     ]
    },
    "mne.find_events": {
     "line number": [
      83
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      82
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      95,
      97,
      99
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_order": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      131,
      133
     ]
    },
    "ValueError": {
     "line number": [
      129
     ]
    },
    "len": {
     "line number": [
      122,
      142,
      158
     ]
    },
    "mne.cov.compute_whitener": {
     "line number": [
      144,
      147,
      154
     ]
    },
    "mne.cov.prepare_noise_cov": {
     "line number": [
      119,
      139,
      140
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      130,
      132,
      134,
      135,
      136
     ]
    },
    "mne.cov.whiten_evoked": {
     "line number": [
      161,
      162
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      109
     ]
    },
    "mne.pick_types": {
     "line number": [
      116
     ]
    },
    "mne.read_cov": {
     "line number": [
      117
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      160
     ]
    },
    "mne.tests.test_cov._assert_reorder": {
     "line number": [
      126,
      137,
      141
     ]
    },
    "mne.tests.test_cov.ave_fname": {
     "line number": [
      160
     ]
    },
    "mne.tests.test_cov.cov_fname": {
     "line number": [
      117
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      129,
      131,
      133
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      109
     ]
    },
    "numpy.arange": {
     "line number": [
      122,
      142
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      122
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      150,
      163
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      149,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_equalize_channels": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": {
    "mne.channels.equalize_channels": {
     "line number": [
      782
     ]
    },
    "mne.create_info": {
     "line number": [
      778,
      780
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      778,
      780
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_io_cov": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      232,
      234
     ]
    },
    "len": {
     "line number": [
      220,
      220
     ]
    },
    "mne.pick_channels_cov": {
     "line number": [
      219
     ]
    },
    "mne.read_cov": {
     "line number": [
      202,
      206,
      212,
      215,
      224,
      227,
      235
     ]
    },
    "mne.tests.test_cov.cov_fname": {
     "line number": [
      202
     ]
    },
    "mne.tests.test_cov.cov_gz_fname": {
     "line number": [
      212,
      224
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      232,
      234
     ]
    },
    "mne.write_cov": {
     "line number": [
      233
     ]
    },
    "numpy.inf": {
     "line number": [
      204
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      207,
      213,
      216,
      225,
      228
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      208,
      209
     ]
    },
    "repr": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_low_rank_cov": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      678,
      686,
      707
     ]
    },
    "ValueError": {
     "line number": [
      681,
      738,
      740
     ]
    },
    "dict": {
     "line number": [
      709,
      713
     ]
    },
    "events": {
     "line number": [
      674,
      724
     ]
    },
    "len": {
     "line number": [
      702,
      721,
      723,
      725
     ]
    },
    "mne.Epochs": {
     "line number": [
      724
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      679,
      704,
      708,
      712,
      726,
      732,
      739,
      741
     ]
    },
    "mne.compute_proj_raw": {
     "line number": [
      720
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      682,
      684,
      690,
      695,
      728,
      730
     ]
    },
    "mne.rank._compute_rank_int": {
     "line number": [
      687
     ]
    },
    "mne.tests.test_cov._cov_rank": {
     "line number": [
      683,
      685,
      694,
      696,
      706,
      710,
      714,
      727,
      729,
      731,
      734
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      678,
      681,
      686,
      707,
      738,
      740
     ]
    },
    "mne.tests.test_cov.raw_epochs_events": {
     "line number": [
      674
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      689
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      671
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      697,
      711,
      715,
      735
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_low_rank_methods": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      655
     ]
    },
    "dict": {
     "line number": [
      645,
      648,
      651
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      656
     ]
    },
    "mne.tests.test_cov._cov_rank": {
     "line number": [
      662
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      655,
      637
     ]
    },
    "mne.tests.test_cov.raw_epochs_events": {
     "line number": [
      640
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      636
     ]
    },
    "str": {
     "line number": [
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_regularize_cov": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "mne.cov.regularize": {
     "line number": [
      437,
      444
     ]
    },
    "mne.fixes._get_args": {
     "line number": [
      444
     ]
    },
    "mne.io.pick._DATA_CH_TYPES_SPLIT": {
     "line number": [
      444
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      433
     ]
    },
    "mne.read_cov": {
     "line number": [
      435
     ]
    },
    "mne.tests.test_cov.cov_fname": {
     "line number": [
      435
     ]
    },
    "mne.tests.test_cov.raw_fname": {
     "line number": [
      433
     ]
    },
    "numpy.mean": {
     "line number": [
      442
     ]
    },
    "set": {
     "line number": [
      444,
      444,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_regularized_covariance": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "mne.cov._regularized_covariance": {
     "line number": [
      478
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      474
     ]
    },
    "mne.tests.test_cov.ave_fname": {
     "line number": [
      474
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_whiten_evoked": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      469
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      458
     ]
    },
    "mne.cov.whiten_evoked": {
     "line number": [
      461,
      469
     ]
    },
    "mne.pick_channels_cov": {
     "line number": [
      468
     ]
    },
    "mne.pick_types": {
     "line number": [
      455
     ]
    },
    "mne.read_cov": {
     "line number": [
      451
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      449
     ]
    },
    "mne.tests.test_cov.ave_fname": {
     "line number": [
      449
     ]
    },
    "mne.tests.test_cov.cov_fname": {
     "line number": [
      451
     ]
    },
    "mne.tests.test_cov.pytest": {
     "line number": [
      469
     ]
    },
    "numpy.abs": {
     "line number": [
      463
     ]
    },
    "numpy.all": {
     "line number": [
      464,
      465
     ]
    },
    "numpy.mean": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_cov.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_cov.whiten_evoked": {
  "data": {
   "shadows": "mne.cov.whiten_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_cov.write_cov": {
  "data": {
   "shadows": "mne.write_cov"
  },
  "type": "import"
 },
 "mne.tests.test_defaults": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_defaults._handle_default": {
  "data": {
   "shadows": "mne.defaults._handle_default"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.test_handle_default": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      10
     ]
    },
    "dict": {
     "line number": [
      12
     ]
    },
    "mne.defaults._handle_default": {
     "line number": [
      10,
      11,
      12,
      13
     ]
    },
    "set": {
     "line number": [
      14,
      14,
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_defaults.test_si_units": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    },
    "_split_si": {
     "line number": [
      70,
      73
     ]
    },
    "mne.defaults._handle_default": {
     "line number": [
      27,
      28
     ]
    },
    "numpy.isclose": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      82
     ]
    },
    "set": {
     "line number": [
      33,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_defaults.test_si_units._split_si": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "len": {
     "line number": [
      53,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      96
     ]
    },
    "list": {
     "line number": [
      98
     ]
    },
    "mne.tests.test_docstring_parameters.mne": {
     "line number": [
      100
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_docstring_parameters.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters._func_name": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "mne.tests.test_docstring_parameters.inspect": {
     "line number": [
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters._pl": {
  "data": {
   "shadows": "mne.utils._pl"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.char_limit": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.check_parameters_match": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "any": {
     "line number": [
      109
     ]
    },
    "getattr": {
     "line number": [
      110,
      111
     ]
    },
    "issubclass": {
     "line number": [
      116
     ]
    },
    "list": {
     "line number": [
      113,
      117
     ]
    },
    "mne.tests.test_docstring_parameters._func_name": {
     "line number": [
      107
     ]
    },
    "mne.tests.test_docstring_parameters.docstring_ignores": {
     "line number": [
      109
     ]
    },
    "mne.tests.test_docstring_parameters.error_ignores": {
     "line number": [
      120
     ]
    },
    "mne.tests.test_docstring_parameters.error_ignores_specific": {
     "line number": [
      121
     ]
    },
    "mne.tests.test_docstring_parameters.re": {
     "line number": [
      109
     ]
    },
    "mne.tests.test_docstring_parameters.subclass_name_ignores": {
     "line number": [
      115
     ]
    },
    "numpydoc.validate.validate": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.docscrape": {
  "data": {
   "shadows": "numpydoc.docscrape"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.docstring_ignores": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.documented_ignored_mods": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.documented_ignored_names": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.error_ignores": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.error_ignores_specific": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.getsource": {
  "data": {
   "shadows": "inspect.getsource"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.mayavi": {
  "data": {
   "shadows": "mayavi"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.public_modules": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.requires_numpydoc": {
  "data": {
   "shadows": "mne.utils.requires_numpydoc"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.subclass_name_ignores": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.tab_ignores": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.test_docstring_parameters": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      169
     ]
    },
    "ImportError": {
     "line number": [
      135
     ]
    },
    "__import__": {
     "line number": [
      145
     ]
    },
    "getattr": {
     "line number": [
      147,
      155
     ]
    },
    "globals": {
     "line number": [
      145
     ]
    },
    "hasattr": {
     "line number": [
      143,
      157
     ]
    },
    "len": {
     "line number": [
      167,
      168
     ]
    },
    "list": {
     "line number": [
      165
     ]
    },
    "mne.tests.test_docstring_parameters.check_parameters_match": {
     "line number": [
      152,
      156,
      159,
      164
     ]
    },
    "mne.tests.test_docstring_parameters.inspect": {
     "line number": [
      148,
      148,
      160,
      160
     ]
    },
    "mne.tests.test_docstring_parameters.mne": {
     "line number": [
      143
     ]
    },
    "mne.tests.test_docstring_parameters.public_modules": {
     "line number": [
      131
     ]
    },
    "mne.tests.test_docstring_parameters.pytest": {
     "line number": [
      144,
      125
     ]
    },
    "mne.utils._pl": {
     "line number": [
      167
     ]
    },
    "mne.utils.requires_numpydoc": {
     "line number": [
      126
     ]
    },
    "numpydoc.docscrape.ClassDoc": {
     "line number": [
      153
     ]
    },
    "set": {
     "line number": [
      165
     ]
    },
    "sorted": {
     "line number": [
      165
     ]
    },
    "str": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.test_documented": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      312
     ]
    },
    "ImportError": {
     "line number": [
      273
     ]
    },
    "__import__": {
     "line number": [
      296
     ]
    },
    "any": {
     "line number": [
      307
     ]
    },
    "getattr": {
     "line number": [
      298
     ]
    },
    "globals": {
     "line number": [
      296
     ]
    },
    "len": {
     "line number": [
      289,
      311
     ]
    },
    "list": {
     "line number": [
      282,
      301,
      301
     ]
    },
    "mne.tests.test_docstring_parameters.documented_ignored_mods": {
     "line number": [
      308
     ]
    },
    "mne.tests.test_docstring_parameters.documented_ignored_names": {
     "line number": [
      309
     ]
    },
    "mne.tests.test_docstring_parameters.inspect": {
     "line number": [
      299,
      299,
      300,
      300,
      304
     ]
    },
    "mne.tests.test_docstring_parameters.public_modules": {
     "line number": [
      270
     ]
    },
    "mne.tests.test_docstring_parameters.pytest": {
     "line number": [
      295
     ]
    },
    "open": {
     "line number": [
      283
     ]
    },
    "os.path.abspath": {
     "line number": [
      278
     ]
    },
    "os.path.dirname": {
     "line number": [
      278
     ]
    },
    "os.path.isfile": {
     "line number": [
      280
     ]
    },
    "os.path.join": {
     "line number": [
      278
     ]
    },
    "set": {
     "line number": [
      291,
      314
     ]
    },
    "sorted": {
     "line number": [
      314
     ]
    },
    "unittest.SkipTest": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.test_tabs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      190
     ]
    },
    "IOError": {
     "line number": [
      195
     ]
    },
    "ImportError": {
     "line number": [
      178
     ]
    },
    "__import__": {
     "line number": [
      189
     ]
    },
    "inspect.getsource": {
     "line number": [
      194
     ]
    },
    "mne.tests.test_docstring_parameters.mne": {
     "line number": [
      183
     ]
    },
    "mne.tests.test_docstring_parameters.pytest": {
     "line number": [
      188
     ]
    },
    "mne.tests.test_docstring_parameters.sys": {
     "line number": [
      192
     ]
    },
    "mne.tests.test_docstring_parameters.tab_ignores": {
     "line number": [
      175
     ]
    },
    "pkgutil.walk_packages": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.validate": {
  "data": {
   "shadows": "numpydoc.validate.validate"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.walk_packages": {
  "data": {
   "shadows": "pkgutil.walk_packages"
  },
  "type": "import"
 },
 "mne.tests.test_epochs": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      170,
      171
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      45
     ]
    },
    "mne.tests.test_epochs.base_dir": {
     "line number": [
      54,
      55,
      56
     ]
    },
    "mne.tests.test_epochs.data_path": {
     "line number": [
      46,
      48,
      50,
      51
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      3048
     ]
    },
    "numpy.int64": {
     "line number": [
      59
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      60
     ]
    },
    "os.path.dirname": {
     "line number": [
      53
     ]
    },
    "os.path.join": {
     "line number": [
      46,
      48,
      49,
      51,
      53,
      54,
      55,
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_epochs.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.BaseEpochs": {
  "data": {
   "shadows": "mne.epochs.BaseEpochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.EpochsArray": {
  "data": {
   "shadows": "mne.epochs.EpochsArray"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._FakeNoPandas": {
  "data": {
   "shadows": "mne.utils._FakeNoPandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._assert_drop_log_types": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "all": {
     "line number": [
      293,
      295
     ]
    },
    "isinstance": {
     "line number": [
      292,
      293,
      295
     ]
    },
    "str": {
     "line number": [
      295
     ]
    },
    "tuple": {
     "line number": [
      292,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._get_data": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "events": {
     "line number": [
      163,
      167
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      162
     ]
    },
    "mne.pick_types": {
     "line number": [
      164
     ]
    },
    "mne.read_events": {
     "line number": [
      163
     ]
    },
    "mne.tests.test_epochs.event_name": {
     "line number": [
      163
     ]
    },
    "mne.tests.test_epochs.raw_fname": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs._get_split_size": {
  "data": {
   "shadows": "mne.io.write._get_split_size"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._handle_event_repeated": {
  "data": {
   "shadows": "mne.epochs._handle_event_repeated"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.add_channels_epochs": {
  "data": {
   "shadows": "mne.epochs.add_channels_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_meg_snr": {
  "data": {
   "shadows": "mne.utils.assert_meg_snr"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_metadata_equal": {
  "data": {
   "lineno": 2734,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      2750,
      2750
     ]
    },
    "enumerate": {
     "line number": [
      2741
     ]
    },
    "isinstance": {
     "line number": [
      2738,
      2739,
      2747,
      2748
     ]
    },
    "len": {
     "line number": [
      2740,
      2740
     ]
    },
    "list": {
     "line number": [
      2738,
      2739,
      2742,
      2742
     ]
    },
    "mne.tests.test_epochs.pandas": {
     "line number": [
      2747,
      2748,
      2750
     ]
    },
    "set": {
     "line number": [
      2749,
      2749
     ]
    },
    "zip": {
     "line number": [
      2741
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.average_movements": {
  "data": {
   "shadows": "mne.epochs.average_movements"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.base_dir": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.bootstrap": {
  "data": {
   "shadows": "mne.epochs.bootstrap"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.combine_event_ids": {
  "data": {
   "shadows": "mne.epochs.combine_event_ids"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.concatenate_epochs": {
  "data": {
   "shadows": "mne.epochs.concatenate_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.data_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.equalize_epoch_counts": {
  "data": {
   "shadows": "mne.epochs.equalize_epoch_counts"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.event_id_2": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.event_name": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.evoked_nf_name": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.flat": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_move": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_move_pos": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_movecomp_sss": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_testing": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.head_pos_to_trans_rot_t": {
  "data": {
   "shadows": "mne.chpi.head_pos_to_trans_rot_t"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.make_fixed_length_epochs": {
  "data": {
   "shadows": "mne.make_fixed_length_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.merge_events": {
  "data": {
   "shadows": "mne.event.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.raw_fname": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.read_epochs": {
  "data": {
   "shadows": "mne.read_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.reject": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rescale": {
  "data": {
   "shadows": "mne.baseline.rescale"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rfft": {
  "data": {
   "shadows": "mne.fixes.rfft"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rfftfreq": {
  "data": {
   "shadows": "mne.fixes.rfftfreq"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rng": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.test_access_by_name": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1818,
      1826
     ]
    },
    "RuntimeWarning": {
     "line number": [
      1808
     ]
    },
    "TypeError": {
     "line number": [
      1790,
      1792,
      1794,
      1796,
      1798
     ]
    },
    "ValueError": {
     "line number": [
      1803,
      1806
     ]
    },
    "all": {
     "line number": [
      1848
     ]
    },
    "dict": {
     "line number": [
      1802
     ]
    },
    "events": {
     "line number": [
      1787,
      1790,
      1792,
      1794,
      1796,
      1798,
      1803,
      1806,
      1809,
      1810,
      1813,
      1817,
      1821,
      1821,
      1824,
      1833,
      1833,
      1838
     ]
    },
    "int": {
     "line number": [
      1815
     ]
    },
    "len": {
     "line number": [
      1822,
      1822,
      1834,
      1834
     ]
    },
    "list": {
     "line number": [
      1840
     ]
    },
    "mne.Epochs": {
     "line number": [
      1790,
      1792,
      1794,
      1796,
      1798,
      1803,
      1806,
      1809,
      1810,
      1813,
      1817,
      1824,
      1838
     ]
    },
    "mne.read_epochs": {
     "line number": [
      1829
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1787
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1790,
      1792,
      1794,
      1796,
      1798,
      1803,
      1806,
      1808,
      1818,
      1826
     ]
    },
    "numpy.logical_or": {
     "line number": [
      1848
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1846,
      1851
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1836,
      1844,
      1850
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1815,
      1840,
      1854,
      1855
     ]
    },
    "os.path.join": {
     "line number": [
      1827
     ]
    },
    "sorted": {
     "line number": [
      1840
     ]
    },
    "str": {
     "line number": [
      1786
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels": {
  "data": {
   "lineno": 2496,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      2527
     ]
    },
    "RuntimeError": {
     "line number": [
      2525,
      2526
     ]
    },
    "TypeError": {
     "line number": [
      2529
     ]
    },
    "ValueError": {
     "line number": [
      2528
     ]
    },
    "all": {
     "line number": [
      2510,
      2516
     ]
    },
    "events": {
     "line number": [
      2498,
      2500,
      2503
     ]
    },
    "mne.Epochs": {
     "line number": [
      2499,
      2502
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2498
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2525,
      2526,
      2527,
      2528,
      2529
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2515
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels_epochs": {
  "data": {
   "lineno": 2220,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      2310,
      2316,
      2321,
      2326
     ]
    },
    "RuntimeError": {
     "line number": [
      2275,
      2279,
      2283,
      2289,
      2302
     ]
    },
    "RuntimeWarning": {
     "line number": [
      2288
     ]
    },
    "ValueError": {
     "line number": [
      2268,
      2270,
      2294,
      2298,
      2306
     ]
    },
    "events": {
     "line number": [
      2222
     ]
    },
    "len": {
     "line number": [
      2243,
      2243,
      2244,
      2244,
      2245,
      2245,
      2246,
      2246
     ]
    },
    "make_epochs": {
     "line number": [
      2233,
      2234,
      2236
     ]
    },
    "mne.epochs.add_channels_epochs": {
     "line number": [
      2241,
      2261,
      2264,
      2268,
      2270,
      2275,
      2279,
      2283,
      2289,
      2294,
      2298,
      2302,
      2306,
      2310,
      2316,
      2321,
      2326
     ]
    },
    "mne.pick_types": {
     "line number": [
      2228,
      2229,
      2230
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2222
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2268,
      2270,
      2275,
      2279,
      2283,
      2288,
      2289,
      2294,
      2298,
      2302,
      2306,
      2310,
      2316,
      2321,
      2326
     ]
    },
    "numpy.concatenate": {
     "line number": [
      2250
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      2253,
      2254
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2252
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2243,
      2244,
      2245,
      2246
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels_epochs.make_epochs": {
  "data": {
   "lineno": 2224,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2225
     ]
    },
    "mne.Epochs": {
     "line number": [
      2225
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_array_epochs": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2347,
      2349,
      2351
     ]
    },
    "dict": {
     "line number": [
      2350,
      2378,
      2378
     ]
    },
    "events": {
     "line number": [
      2340,
      2344,
      2347,
      2349,
      2351,
      2354,
      2354,
      2377,
      2380,
      2387,
      2393,
      2403,
      2405
     ]
    },
    "int": {
     "line number": [
      2341,
      2411,
      2412
     ]
    },
    "len": {
     "line number": [
      2354,
      2372,
      2380,
      2380,
      2382,
      2383,
      2383,
      2410,
      2411,
      2412
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      2368
     ]
    },
    "mne.create_info": {
     "line number": [
      2339
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      2344,
      2347,
      2349,
      2351,
      2354,
      2377,
      2387,
      2393,
      2406,
      2409
     ]
    },
    "mne.read_epochs": {
     "line number": [
      2359,
      2398
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2347,
      2349,
      2351
     ]
    },
    "mne.tests.test_epochs.rng": {
     "line number": [
      2335
     ]
    },
    "numpy.arange": {
     "line number": [
      2340,
      2354,
      2410
     ]
    },
    "numpy.array": {
     "line number": [
      2371
     ]
    },
    "numpy.c_": {
     "line number": [
      2340
     ]
    },
    "numpy.ones": {
     "line number": [
      2386,
      2412
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      2361,
      2362,
      2395,
      2396,
      2399,
      2400
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2364,
      2371,
      2390,
      2410,
      2411,
      2412
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2363,
      2372,
      2380,
      2381,
      2382,
      2383
     ]
    },
    "numpy.unique": {
     "line number": [
      2371
     ]
    },
    "numpy.zeros": {
     "line number": [
      2341,
      2411
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      2390
     ]
    },
    "os.path.join": {
     "line number": [
      2357
     ]
    },
    "range": {
     "line number": [
      2337
     ]
    },
    "str": {
     "line number": [
      2332,
      2345
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_methods": {
  "data": {
   "lineno": 2868,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2873,
      2875
     ]
    },
    "fun": {
     "line number": [
      2886
     ]
    },
    "mne.create_info": {
     "line number": [
      2874
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      2875
     ]
    },
    "mne.tests.test_epochs.rng": {
     "line number": [
      2872
     ]
    },
    "numpy.arange": {
     "line number": [
      2873
     ]
    },
    "numpy.array": {
     "line number": [
      2873
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2886
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_methods.fun": {
  "data": {
   "lineno": 2882,
   "symbols_in_volume": {
    "numpy.median": {
     "line number": [
      2883
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_movements": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      242,
      259,
      271
     ]
    },
    "RuntimeError": {
     "line number": [
      283,
      286
     ]
    },
    "TypeError": {
     "line number": [
      228,
      285
     ]
    },
    "copy.deepcopy": {
     "line number": [
      267
     ]
    },
    "events": {
     "line number": [
      207,
      210,
      212,
      217,
      254
     ]
    },
    "len": {
     "line number": [
      238
     ]
    },
    "mne.Epochs": {
     "line number": [
      210,
      212,
      217,
      254
     ]
    },
    "mne.chpi.head_pos_to_trans_rot_t": {
     "line number": [
      268
     ]
    },
    "mne.chpi.read_head_pos": {
     "line number": [
      221
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      197
     ]
    },
    "mne.epochs.average_movements": {
     "line number": [
      228,
      229,
      231,
      233,
      274,
      283,
      285,
      286
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      203,
      248
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      207
     ]
    },
    "mne.pick_types": {
     "line number": [
      208,
      244,
      251
     ]
    },
    "mne.preprocessing.maxwell_filter": {
     "line number": [
      214
     ]
    },
    "mne.tests.test_epochs.fname_raw_move": {
     "line number": [
      203
     ]
    },
    "mne.tests.test_epochs.fname_raw_move_pos": {
     "line number": [
      221
     ]
    },
    "mne.tests.test_epochs.fname_raw_movecomp_sss": {
     "line number": [
      248
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      228,
      242,
      259,
      271,
      283,
      285,
      286,
      196
     ]
    },
    "mne.utils.assert_meg_snr": {
     "line number": [
      241,
      242,
      259,
      261,
      262
     ]
    },
    "numpy.array": {
     "line number": [
      223,
      224,
      225
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      245,
      264,
      271,
      276,
      278
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      253
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      237,
      238,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_base_epochs": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      591
     ]
    },
    "TypeError": {
     "line number": [
      593,
      601
     ]
    },
    "ValueError": {
     "line number": [
      597
     ]
    },
    "float": {
     "line number": [
      594
     ]
    },
    "int": {
     "line number": [
      589,
      598,
      602
     ]
    },
    "mne.epochs.BaseEpochs": {
     "line number": [
      589,
      594,
      598,
      602
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      588
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      591,
      593,
      597,
      601
     ]
    },
    "numpy.ones": {
     "line number": [
      589,
      594,
      598,
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_bootstrap": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1610,
      1611
     ]
    },
    "len": {
     "line number": [
      1618,
      1618
     ]
    },
    "mne.Epochs": {
     "line number": [
      1611
     ]
    },
    "mne.epochs.bootstrap": {
     "line number": [
      1617
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1610
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1612
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1612
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      1614
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      1615
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_channel_types_mixin": {
  "data": {
   "lineno": 2859,
   "symbols_in_volume": {
    "all": {
     "line number": [
      2865
     ]
    },
    "events": {
     "line number": [
      2861,
      2862
     ]
    },
    "len": {
     "line number": [
      2864,
      2864
     ]
    },
    "mne.Epochs": {
     "line number": [
      2862
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2861
     ]
    },
    "numpy.in1d": {
     "line number": [
      2865
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_comparision_with_c": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1427,
      1429
     ]
    },
    "mne.Epochs": {
     "line number": [
      1429
     ]
    },
    "mne.pick_channels": {
     "line number": [
      1432
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      1428
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1427
     ]
    },
    "mne.tests.test_epochs.evoked_nf_name": {
     "line number": [
      1428
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1437,
      1438
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_concatenate_epochs": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2456,
      2458
     ]
    },
    "ValueError": {
     "line number": [
      2434,
      2439,
      2447,
      2454,
      2461,
      2471
     ]
    },
    "dict": {
     "line number": [
      2469,
      2470
     ]
    },
    "events": {
     "line number": [
      2417,
      2418
     ]
    },
    "list": {
     "line number": [
      2426
     ]
    },
    "mne.Epochs": {
     "line number": [
      2418
     ]
    },
    "mne.epochs.concatenate_epochs": {
     "line number": [
      2422,
      2435,
      2440,
      2448,
      2452,
      2455,
      2457,
      2459,
      2462,
      2464,
      2472
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2417
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2434,
      2439,
      2447,
      2454,
      2456,
      2458,
      2461,
      2471
     ]
    },
    "numpy.delete": {
     "line number": [
      2438
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2423
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2430,
      2431,
      2442
     ]
    },
    "numpy.unique": {
     "line number": [
      2424
     ]
    },
    "tuple": {
     "line number": [
      2428
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_concatenate_epochs_large": {
  "data": {
   "lineno": 2475,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2477,
      2478
     ]
    },
    "len": {
     "line number": [
      2485,
      2485
     ]
    },
    "mne.Epochs": {
     "line number": [
      2478
     ]
    },
    "mne.epochs.concatenate_epochs": {
     "line number": [
      2483,
      2491
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2477
     ]
    },
    "numpy.max": {
     "line number": [
      2492,
      2493
     ]
    },
    "range": {
     "line number": [
      2482,
      2484,
      2490
     ]
    },
    "sum": {
     "line number": [
      2487
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_contains": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2150
     ]
    },
    "ValueError": {
     "line number": [
      2149
     ]
    },
    "any": {
     "line number": [
      2147
     ]
    },
    "events": {
     "line number": [
      2122,
      2138
     ]
    },
    "len": {
     "line number": [
      2124
     ]
    },
    "mne.Epochs": {
     "line number": [
      2138
     ]
    },
    "mne.create_info": {
     "line number": [
      2125
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      2124
     ]
    },
    "mne.pick_types": {
     "line number": [
      2137
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2122
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2149,
      2150
     ]
    },
    "numpy.zeros": {
     "line number": [
      2124
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_crop": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1446
     ]
    },
    "RuntimeWarning": {
     "line number": [
      1451,
      1477,
      1492
     ]
    },
    "ValueError": {
     "line number": [
      1493,
      1494
     ]
    },
    "events": {
     "line number": [
      1443,
      1444,
      1449,
      1484
     ]
    },
    "int": {
     "line number": [
      1474
     ]
    },
    "len": {
     "line number": [
      1467,
      1470
     ]
    },
    "mne.Epochs": {
     "line number": [
      1444,
      1449,
      1484
     ]
    },
    "mne.create_info": {
     "line number": [
      1473
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      1473
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1443
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1445,
      1450,
      1485
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1446,
      1451,
      1477,
      1492,
      1493,
      1494
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1445,
      1450,
      1485
     ]
    },
    "numpy.ones": {
     "line number": [
      1474
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1479,
      1482,
      1487,
      1488,
      1490
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1464,
      1465,
      1466,
      1468
     ]
    },
    "numpy.zeros": {
     "line number": [
      1473
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_decim": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      498,
      499,
      500
     ]
    },
    "events": {
     "line number": [
      479,
      482,
      491,
      492,
      492,
      492,
      502,
      518,
      523,
      531,
      537,
      545,
      553,
      563,
      571
     ]
    },
    "float": {
     "line number": [
      481,
      509
     ]
    },
    "mne.Epochs": {
     "line number": [
      502,
      518,
      523,
      531,
      537,
      545,
      553,
      563,
      571
     ]
    },
    "mne.create_info": {
     "line number": [
      480
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      482
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      491
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      498,
      499,
      500
     ]
    },
    "mne.tests.test_epochs.rng": {
     "line number": [
      478
     ]
    },
    "numpy.arange": {
     "line number": [
      479,
      505,
      506
     ]
    },
    "numpy.array": {
     "line number": [
      479
     ]
    },
    "numpy.isclose": {
     "line number": [
      510,
      512
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      513,
      514,
      525,
      526,
      533,
      534,
      539,
      540,
      549,
      550,
      557,
      558,
      565,
      566,
      574,
      575
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      486,
      487,
      488,
      528,
      536,
      542,
      552,
      560,
      568,
      577,
      583
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      515,
      527,
      535,
      541,
      551,
      559,
      567,
      576
     ]
    },
    "range": {
     "line number": [
      501
     ]
    },
    "zip": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_default_values": {
  "data": {
   "lineno": 2547,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2549,
      2550,
      2551
     ]
    },
    "hash": {
     "line number": [
      2552,
      2552
     ]
    },
    "mne.Epochs": {
     "line number": [
      2550,
      2551
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2549
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2552
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_delayed_epochs": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2000,
      2001,
      2001,
      2012,
      2016,
      2026
     ]
    },
    "int": {
     "line number": [
      2030
     ]
    },
    "len": {
     "line number": [
      2030,
      2031,
      2037
     ]
    },
    "mne.Epochs": {
     "line number": [
      2012,
      2016,
      2026
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      2033
     ]
    },
    "mne.pick_types": {
     "line number": [
      2002,
      2003,
      2043
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2000
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      2013,
      2017,
      2027
     ]
    },
    "numpy.arange": {
     "line number": [
      2031
     ]
    },
    "numpy.array": {
     "line number": [
      2051
     ]
    },
    "numpy.concatenate": {
     "line number": [
      2002
     ]
    },
    "numpy.sort": {
     "line number": [
      2005
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      2052,
      2054,
      2057
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2050
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2018,
      2019,
      2037,
      2045
     ]
    },
    "numpy.zeros": {
     "line number": [
      2030
     ]
    },
    "print": {
     "line number": [
      2023
     ]
    },
    "range": {
     "line number": [
      2022
     ]
    },
    "str": {
     "line number": [
      2045
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_detrend": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1604
     ]
    },
    "events": {
     "line number": [
      1574,
      1577,
      1579,
      1591,
      1593,
      1604
     ]
    },
    "mne.Epochs": {
     "line number": [
      1577,
      1579,
      1591,
      1593,
      1604
     ]
    },
    "mne.pick_types": {
     "line number": [
      1581
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1574
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1604
     ]
    },
    "numpy.allclose": {
     "line number": [
      1601
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1587,
      1598
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_channels_mixin": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2155,
      2157
     ]
    },
    "len": {
     "line number": [
      2165,
      2169
     ]
    },
    "mne.Epochs": {
     "line number": [
      2157
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2155
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2163,
      2164,
      2165,
      2168,
      2169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_epochs": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      2067,
      2068
     ]
    },
    "ValueError": {
     "line number": [
      2069
     ]
    },
    "all": {
     "line number": [
      2075
     ]
    },
    "events": {
     "line number": [
      2062,
      2063,
      2064,
      2064,
      2073,
      2074,
      2076,
      2082,
      2085,
      2086,
      2087
     ]
    },
    "len": {
     "line number": [
      2067,
      2068,
      2074,
      2074,
      2076,
      2079,
      2082,
      2082
     ]
    },
    "mne.Epochs": {
     "line number": [
      2063
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2062
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2067,
      2068,
      2069
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2072,
      2085,
      2086,
      2087
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2074,
      2081,
      2082,
      2083
     ]
    },
    "numpy.where": {
     "line number": [
      2073
     ]
    },
    "range": {
     "line number": [
      2076
     ]
    },
    "set": {
     "line number": [
      2076,
      2076
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_epochs_mult": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2092,
      2094,
      2097
     ]
    },
    "len": {
     "line number": [
      2103,
      2103
     ]
    },
    "mne.Epochs": {
     "line number": [
      2094,
      2097
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2092
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      2095,
      2098
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2111,
      2112,
      2116,
      2117
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2103,
      2115
     ]
    },
    "zip": {
     "line number": [
      2104
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_combine_ids": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": {
    "events": {
     "line number": [
      782,
      783,
      786
     ]
    },
    "mne.Epochs": {
     "line number": [
      783
     ]
    },
    "mne.epochs.combine_event_ids": {
     "line number": [
      787
     ]
    },
    "mne.event.merge_events": {
     "line number": [
      786
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      782
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      789
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_eq": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1737,
      1752,
      1773
     ]
    },
    "ValueError": {
     "line number": [
      1745,
      1772
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1717
     ]
    },
    "events": {
     "line number": [
      1690,
      1692,
      1692,
      1694,
      1694,
      1705,
      1706,
      1712,
      1764
     ]
    },
    "len": {
     "line number": [
      1697,
      1698,
      1699,
      1700,
      1701,
      1715,
      1716,
      1725,
      1726,
      1777,
      1778,
      1780,
      1781
     ]
    },
    "mne.Epochs": {
     "line number": [
      1693,
      1695,
      1705,
      1706,
      1712,
      1764
     ]
    },
    "mne.epochs.combine_event_ids": {
     "line number": [
      1745,
      1747,
      1757
     ]
    },
    "mne.epochs.equalize_epoch_counts": {
     "line number": [
      1703,
      1707
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1690
     ]
    },
    "mne.tests.test_epochs.event_id_2": {
     "line number": [
      1694,
      1695,
      1706
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1737,
      1745,
      1772,
      1773
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1713,
      1765
     ]
    },
    "numpy.all": {
     "line number": [
      1758
     ]
    },
    "numpy.any": {
     "line number": [
      1755,
      1756
     ]
    },
    "numpy.arange": {
     "line number": [
      1776
     ]
    },
    "numpy.int32": {
     "line number": [
      1747
     ]
    },
    "numpy.logical_or": {
     "line number": [
      1758
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1769
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1697,
      1700,
      1704,
      1708,
      1709,
      1715,
      1723,
      1725,
      1728,
      1729,
      1730,
      1735,
      1736,
      1743,
      1744,
      1754,
      1760,
      1761,
      1777,
      1780,
      1781
     ]
    },
    "tuple": {
     "line number": [
      1721
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_multi_ids": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "events": {
     "line number": [
      795,
      796
     ]
    },
    "mne.Epochs": {
     "line number": [
      796
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      795
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      804,
      805
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      802,
      803
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_bad_baseline": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      763,
      764,
      765,
      766,
      767,
      770,
      771,
      774,
      776,
      777
     ]
    },
    "events": {
     "line number": [
      762,
      763,
      764,
      765,
      766,
      767,
      768
     ]
    },
    "float": {
     "line number": [
      773
     ]
    },
    "mne.Epochs": {
     "line number": [
      763,
      764,
      765,
      766,
      767,
      768
     ]
    },
    "mne.baseline.rescale": {
     "line number": [
      774,
      775,
      776,
      777
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      762
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      763,
      764,
      765,
      766,
      767,
      770,
      771,
      774,
      776,
      777
     ]
    },
    "numpy.arange": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_baseline": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      752
     ]
    },
    "events": {
     "line number": [
      726,
      728
     ]
    },
    "float": {
     "line number": [
      723
     ]
    },
    "mne.create_info": {
     "line number": [
      724
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      725
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      728
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      752,
      720
     ]
    },
    "numpy.array": {
     "line number": [
      723,
      726
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      739,
      741,
      742,
      746
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_copy": {
  "data": {
   "lineno": 1622,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1624,
      1625,
      1630
     ]
    },
    "mne.Epochs": {
     "line number": [
      1625,
      1630
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1624
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1626,
      1631
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1626,
      1631
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1628,
      1635
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_drop_selection": {
  "data": {
   "lineno": 2915,
   "symbols_in_volume": {
    "_get_selection": {
     "line number": [
      2943,
      2952,
      2963
     ]
    },
    "dict": {
     "line number": [
      2924,
      2925
     ]
    },
    "events": {
     "line number": [
      2922,
      2923,
      2930,
      2931,
      2939,
      2942,
      2944,
      2948,
      2951,
      2957,
      2960,
      2967,
      2970,
      2972
     ]
    },
    "int": {
     "line number": [
      2976
     ]
    },
    "len": {
     "line number": [
      2923,
      2930,
      2942,
      2942,
      2944,
      2951,
      2951,
      2960,
      2960,
      2970,
      2972
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      2915
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      2920
     ]
    },
    "mne.tests.test_epochs.fname_raw_testing": {
     "line number": [
      2917
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      2922,
      2939,
      2948,
      2957,
      2967
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2916,
      2917
     ]
    },
    "mne.tests.test_epochs.raw_fname": {
     "line number": [
      2917
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      2925,
      2948,
      2961
     ]
    },
    "numpy.arange": {
     "line number": [
      2930,
      2944,
      2970,
      2972
     ]
    },
    "numpy.round": {
     "line number": [
      2975
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      2972
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2944,
      2945,
      2953,
      2962,
      2964,
      2970,
      2974,
      2977
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_drop_selection._get_selection": {
  "data": {
   "lineno": 2933,
   "symbols_in_volume": {
    "int": {
     "line number": [
      2936
     ]
    },
    "numpy.round": {
     "line number": [
      2935
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_get_data_item": {
  "data": {
   "lineno": 3003,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3009
     ]
    },
    "events": {
     "line number": [
      3006,
      3007
     ]
    },
    "mne.Epochs": {
     "line number": [
      3007
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      3006
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      3009,
      3003
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      3014
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_hash": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      666
     ]
    },
    "events": {
     "line number": [
      664,
      665,
      667,
      669
     ]
    },
    "hash": {
     "line number": [
      668,
      668,
      670,
      670,
      675,
      675
     ]
    },
    "mne.Epochs": {
     "line number": [
      665,
      667,
      669
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      664
     ]
    },
    "mne.tests.test_epochs.pickle": {
     "line number": [
      672,
      672
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      666
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      668,
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_io_preload": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      994,
      1034,
      1036,
      1079
     ]
    },
    "ValueError": {
     "line number": [
      956
     ]
    },
    "dict": {
     "line number": [
      935,
      1040
     ]
    },
    "events": {
     "line number": [
      937,
      942,
      947,
      1006,
      1040
     ]
    },
    "isinstance": {
     "line number": [
      958
     ]
    },
    "len": {
     "line number": [
      1025,
      1025,
      1082,
      1086
     ]
    },
    "mne.Epochs": {
     "line number": [
      942,
      947,
      1006,
      1040
     ]
    },
    "mne.epochs.BaseEpochs": {
     "line number": [
      958
     ]
    },
    "mne.io.write._get_split_size": {
     "line number": [
      1057
     ]
    },
    "mne.read_epochs": {
     "line number": [
      952,
      954,
      955,
      986,
      999,
      1010,
      1023,
      1037,
      1047,
      1065,
      1085
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      937
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      956,
      994,
      1034,
      1036,
      1079,
      930
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1007
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1001,
      1048,
      1072
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      965,
      966,
      969,
      977,
      978,
      979,
      1017
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      964,
      968,
      1011,
      1024,
      1049,
      1073,
      1074
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      970,
      980,
      987,
      988,
      1025,
      1050,
      1082,
      1083,
      1086,
      1087
     ]
    },
    "open": {
     "line number": [
      1068
     ]
    },
    "os.path.isfile": {
     "line number": [
      1045,
      1046,
      1062,
      1063,
      1064
     ]
    },
    "os.path.join": {
     "line number": [
      939,
      940,
      984,
      1033
     ]
    },
    "set": {
     "line number": [
      1050
     ]
    },
    "str": {
     "line number": [
      938,
      961,
      1051
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_io_proj": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      892,
      897,
      901
     ]
    },
    "events": {
     "line number": [
      894,
      895,
      896,
      900
     ]
    },
    "mne.Epochs": {
     "line number": [
      900
     ]
    },
    "mne.read_epochs": {
     "line number": [
      910,
      923
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      894
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      885
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      901,
      917
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      917
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      908,
      911,
      912,
      914
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      903,
      906
     ]
    },
    "os.path.join": {
     "line number": [
      898
     ]
    },
    "str": {
     "line number": [
      898
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_proj": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1196
     ]
    },
    "all": {
     "line number": [
      1128,
      1130,
      1138,
      1140
     ]
    },
    "events": {
     "line number": [
      1122,
      1126,
      1134,
      1148,
      1152,
      1158,
      1165,
      1184
     ]
    },
    "len": {
     "line number": [
      1187
     ]
    },
    "mne.Epochs": {
     "line number": [
      1126,
      1134,
      1148,
      1152,
      1158,
      1165,
      1184
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      1151,
      1154,
      1160
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1133,
      1179
     ]
    },
    "mne.pick_types": {
     "line number": [
      1124,
      1146,
      1182
     ]
    },
    "mne.read_epochs": {
     "line number": [
      1172,
      1191,
      1194
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1122
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1196
     ]
    },
    "mne.tests.test_epochs.raw_fname": {
     "line number": [
      1133,
      1179
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1176,
      1193,
      1196,
      1199
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1143
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1187
     ]
    },
    "os.path.join": {
     "line number": [
      1170,
      1188
     ]
    },
    "str": {
     "line number": [
      1121
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_proj_mixin": {
  "data": {
   "lineno": 1921,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1934,
      1936,
      1937,
      1951
     ]
    },
    "all": {
     "line number": [
      1928,
      1933
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1939
     ]
    },
    "events": {
     "line number": [
      1923,
      1925,
      1951,
      1955,
      1959,
      1963,
      1990
     ]
    },
    "len": {
     "line number": [
      1940,
      1942,
      1945,
      1947
     ]
    },
    "mne.Epochs": {
     "line number": [
      1925,
      1951,
      1955,
      1958,
      1963,
      1990
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1923
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1934,
      1936,
      1937,
      1951
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1957,
      1961,
      1965
     ]
    },
    "numpy.array": {
     "line number": [
      1981
     ]
    },
    "numpy.dot": {
     "line number": [
      1995
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1968,
      1970,
      1987,
      1995
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1975,
      1976,
      1977,
      1982,
      1986
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_equalize_channels": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2198,
      2199
     ]
    },
    "mne.Epochs": {
     "line number": [
      2199
     ]
    },
    "mne.equalize_channels": {
     "line number": [
      2206
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2198
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2208
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_event_ordering": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      688
     ]
    },
    "RuntimeWarning": {
     "line number": [
      683
     ]
    },
    "dict": {
     "line number": [
      690
     ]
    },
    "events": {
     "line number": [
      680,
      682,
      686
     ]
    },
    "events.copy": {
     "line number": [
      681
     ]
    },
    "len": {
     "line number": [
      690
     ]
    },
    "mne.Epochs": {
     "line number": [
      682,
      684,
      688,
      690
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      680
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      682,
      684
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      683,
      688
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      682,
      684
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_event_repeated": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "events": {
     "line number": [
      72,
      73,
      76
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      68,
      70,
      73,
      76
     ]
    },
    "numpy.array": {
     "line number": [
      72
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      75,
      78
     ]
    },
    "numpy.zeros": {
     "line number": [
      69
     ]
    },
    "range": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_events_list": {
  "data": {
   "lineno": 2757,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2759,
      2762,
      2763
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      2760,
      2760,
      2761
     ]
    },
    "numpy.array": {
     "line number": [
      2763
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2760
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2763
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_events_type": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      699
     ]
    },
    "events": {
     "line number": [
      696,
      698,
      698,
      700
     ]
    },
    "mne.Epochs": {
     "line number": [
      700
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      696
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_arithmetic": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1204,
      1205,
      1207,
      1209
     ]
    },
    "mne.Epochs": {
     "line number": [
      1205,
      1207,
      1209
     ]
    },
    "mne.combine_evoked": {
     "line number": [
      1211
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1204
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1212,
      1213
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1214
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_io_from_epochs": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1256
     ]
    },
    "ValueError": {
     "line number": [
      1268
     ]
    },
    "events": {
     "line number": [
      1220,
      1223,
      1236,
      1245,
      1254
     ]
    },
    "list": {
     "line number": [
      1258
     ]
    },
    "mne.Epochs": {
     "line number": [
      1223,
      1236,
      1245,
      1254
     ]
    },
    "mne.pick_types": {
     "line number": [
      1253
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      1229,
      1240,
      1263
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1220
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1256,
      1268
     ]
    },
    "mne.write_evokeds": {
     "line number": [
      1269
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1231,
      1232,
      1241,
      1242,
      1249,
      1250,
      1267
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1230
     ]
    },
    "os.path.join": {
     "line number": [
      1227
     ]
    },
    "str": {
     "line number": [
      1219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_standard_error": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1274,
      1276
     ]
    },
    "mne.Epochs": {
     "line number": [
      1276
     ]
    },
    "mne.io.constants.FIFF.FIFFV_ASPECT_AVERAGE": {
     "line number": [
      1285
     ]
    },
    "mne.io.constants.FIFF.FIFFV_ASPECT_STD_ERR": {
     "line number": [
      1288
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      1279,
      1280,
      1281
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1274
     ]
    },
    "mne.write_evokeds": {
     "line number": [
      1278
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1291,
      1292
     ]
    },
    "os.path.join": {
     "line number": [
      1278,
      1279,
      1280,
      1281
     ]
    },
    "str": {
     "line number": [
      1275
     ]
    },
    "zip": {
     "line number": [
      1290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_file_like": {
  "data": {
   "lineno": 2980,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2996
     ]
    },
    "events": {
     "line number": [
      2987,
      2988
     ]
    },
    "io.BytesIO": {
     "line number": [
      2993
     ]
    },
    "mne.read_epochs": {
     "line number": [
      2997
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      2985,
      2986,
      2987,
      2988
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2996,
      2980,
      2981
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      2985
     ]
    },
    "open": {
     "line number": [
      2992
     ]
    },
    "os.path.join": {
     "line number": [
      2989
     ]
    },
    "str": {
     "line number": [
      2984
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_filter": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      634
     ]
    },
    "events": {
     "line number": [
      631,
      632,
      635
     ]
    },
    "len": {
     "line number": [
      637
     ]
    },
    "mne.Epochs": {
     "line number": [
      632,
      635
     ]
    },
    "mne.fixes.rfft": {
     "line number": [
      638,
      645
     ]
    },
    "mne.fixes.rfftfreq": {
     "line number": [
      637
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      631
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      657
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      634
     ]
    },
    "numpy.abs": {
     "line number": [
      638,
      645
     ]
    },
    "numpy.mean": {
     "line number": [
      647,
      648,
      651,
      652
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      647,
      659
     ]
    },
    "os.path.join": {
     "line number": [
      655
     ]
    },
    "round": {
     "line number": [
      633
     ]
    },
    "str": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_handle_event_repeated": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      91
     ]
    },
    "all": {
     "line number": [
      101,
      110
     ]
    },
    "copy.deepcopy": {
     "line number": [
      130,
      143,
      153
     ]
    },
    "events": {
     "line number": [
      96,
      98,
      99,
      104,
      106,
      106,
      107,
      108,
      116,
      121,
      129,
      135,
      141,
      145,
      152,
      154
     ]
    },
    "len": {
     "line number": [
      89,
      90
     ]
    },
    "mne.epochs._handle_event_repeated": {
     "line number": [
      92,
      96,
      104,
      116,
      129,
      141,
      152
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      91
     ]
    },
    "numpy.arange": {
     "line number": [
      89
     ]
    },
    "numpy.array": {
     "line number": [
      85,
      115,
      128,
      135,
      139,
      145,
      151,
      154
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      100,
      109
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      98,
      99,
      106,
      107,
      108,
      119,
      121,
      133,
      135,
      145,
      146,
      154,
      155
     ]
    },
    "set": {
     "line number": [
      111,
      111,
      131,
      131,
      144,
      144,
      157,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_hierarchical": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "events": {
     "line number": [
      176,
      178
     ]
    },
    "len": {
     "line number": [
      184,
      184,
      184,
      186,
      186,
      186,
      188,
      188,
      188,
      190,
      190,
      190,
      192,
      192
     ]
    },
    "mne.Epochs": {
     "line number": [
      178
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      176
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      193
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      184,
      186,
      188,
      190,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_illegal_event_id": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2216
     ]
    },
    "dict": {
     "line number": [
      2214
     ]
    },
    "events": {
     "line number": [
      2213,
      2216
     ]
    },
    "mne.Epochs": {
     "line number": [
      2216
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2213
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_indexing_slicing": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1372,
      1373,
      1387
     ]
    },
    "mne.Epochs": {
     "line number": [
      1373,
      1387
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1372
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1374,
      1388
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1374,
      1388
     ]
    },
    "mne.tests.test_epochs.rng": {
     "line number": [
      1412
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1397,
      1404,
      1409,
      1414,
      1419,
      1422
     ]
    },
    "range": {
     "line number": [
      1402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_io_epochs_basic": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      861,
      867
     ]
    },
    "ValueError": {
     "line number": [
      844
     ]
    },
    "events": {
     "line number": [
      836,
      838,
      844,
      847,
      862
     ]
    },
    "len": {
     "line number": [
      855,
      855,
      858
     ]
    },
    "mne.Epochs": {
     "line number": [
      838,
      844,
      847,
      862
     ]
    },
    "mne.pick_events": {
     "line number": [
      847
     ]
    },
    "mne.pick_types": {
     "line number": [
      851
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      836
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      844,
      861,
      867
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      871,
      875
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      849
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_iter_evoked": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1643
     ]
    },
    "events": {
     "line number": [
      1640,
      1641
     ]
    },
    "mne.Epochs": {
     "line number": [
      1641
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1640
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1646
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_make_fixed_length_epochs": {
  "data": {
   "lineno": 3033,
   "symbols_in_volume": {
    "len": {
     "line number": [
      3043,
      3044,
      3045,
      3045
     ]
    },
    "mne.Annotations": {
     "line number": [
      3039
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      3033
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      3036
     ]
    },
    "mne.make_fixed_length_epochs": {
     "line number": [
      3037,
      3041
     ]
    },
    "mne.tests.test_epochs.raw_fname": {
     "line number": [
      3036
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_metadata": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      2608,
      2666,
      2671
     ]
    },
    "TypeError": {
     "line number": [
      2636
     ]
    },
    "ValueError": {
     "line number": [
      2581,
      2587,
      2593,
      2597,
      2702,
      2717
     ]
    },
    "dict": {
     "line number": [
      2650,
      2655,
      2689,
      2710
     ]
    },
    "events": {
     "line number": [
      2567,
      2568,
      2568,
      2568,
      2569,
      2572,
      2688,
      2689,
      2690,
      2711,
      2712,
      2713,
      2718,
      2722,
      2723,
      2726,
      2728
     ]
    },
    "float": {
     "line number": [
      2566
     ]
    },
    "int": {
     "line number": [
      2568
     ]
    },
    "isinstance": {
     "line number": [
      2649,
      2650,
      2654,
      2655
     ]
    },
    "len": {
     "line number": [
      2568,
      2573,
      2576,
      2576,
      2578,
      2603,
      2604,
      2605,
      2606,
      2606,
      2618,
      2689,
      2693,
      2693,
      2701,
      2701,
      2715,
      2716,
      2725,
      2730,
      2731
     ]
    },
    "list": {
     "line number": [
      2649,
      2654
     ]
    },
    "mne.Epochs": {
     "line number": [
      2713,
      2718,
      2723,
      2727
     ]
    },
    "mne.create_info": {
     "line number": [
      2562
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      2571,
      2583,
      2589,
      2594,
      2600,
      2630
     ]
    },
    "mne.read_epochs": {
     "line number": [
      2628,
      2644,
      2648,
      2653,
      2676,
      2680
     ]
    },
    "mne.tests.test_epochs.assert_metadata_equal": {
     "line number": [
      2629,
      2634,
      2645,
      2662,
      2677,
      2681
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      2686,
      2687,
      2690,
      2708,
      2709
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2581,
      2587,
      2593,
      2597,
      2608,
      2636,
      2666,
      2671,
      2702,
      2717
     ]
    },
    "mne.utils._FakeNoPandas": {
     "line number": [
      2647
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      2625
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      2555
     ]
    },
    "numpy.arange": {
     "line number": [
      2567,
      2573
     ]
    },
    "numpy.array": {
     "line number": [
      2563,
      2566,
      2599,
      2637
     ]
    },
    "numpy.column_stack": {
     "line number": [
      2568
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2560,
      2685,
      2707
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2574,
      2577,
      2611,
      2613,
      2614,
      2616,
      2617,
      2618,
      2697
     ]
    },
    "numpy.zeros": {
     "line number": [
      2568
     ]
    },
    "os.path.join": {
     "line number": [
      2623,
      2624
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      2565,
      2689,
      2712
     ]
    },
    "range": {
     "line number": [
      2689
     ]
    },
    "str": {
     "line number": [
      2622
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_no_epochs": {
  "data": {
   "lineno": 2829,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      2842
     ]
    },
    "dict": {
     "line number": [
      2833
     ]
    },
    "events": {
     "line number": [
      2832,
      2835,
      2841
     ]
    },
    "len": {
     "line number": [
      2838,
      2844
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2832
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      2835,
      2841
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2842
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      2833,
      2835,
      2841
     ]
    },
    "os.path.join": {
     "line number": [
      2836,
      2843
     ]
    },
    "str": {
     "line number": [
      2836,
      2843
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_own_data": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      457,
      466
     ]
    },
    "events": {
     "line number": [
      444,
      446,
      446,
      447
     ]
    },
    "len": {
     "line number": [
      452,
      452,
      453,
      458,
      460,
      460,
      467
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      444
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_pick_channels_mixin": {
  "data": {
   "lineno": 2172,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      2179
     ]
    },
    "ValueError": {
     "line number": [
      2192
     ]
    },
    "events": {
     "line number": [
      2174,
      2175,
      2192
     ]
    },
    "len": {
     "line number": [
      2185,
      2189
     ]
    },
    "mne.Epochs": {
     "line number": [
      2175,
      2192
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2174
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2179,
      2192
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2183,
      2184,
      2185,
      2188,
      2189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_pick_types_reject_flat_keys": {
  "data": {
   "lineno": 3017,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      3023,
      3024
     ]
    },
    "events": {
     "line number": [
      3019,
      3022
     ]
    },
    "mne.Epochs": {
     "line number": [
      3022
     ]
    },
    "mne.pick_types": {
     "line number": [
      3021
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      3019
     ]
    },
    "sorted": {
     "line number": [
      3026,
      3027,
      3029,
      3030
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_preload_epochs": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1356,
      1357,
      1362
     ]
    },
    "mne.Epochs": {
     "line number": [
      1357,
      1362
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1356
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1359,
      1363
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1359,
      1363
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1366
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1365
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_read_epochs_bad_events": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      814,
      822,
      829
     ]
    },
    "events": {
     "line number": [
      810
     ]
    },
    "mne.Epochs": {
     "line number": [
      812,
      817,
      826
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      810
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      814,
      822,
      829
     ]
    },
    "numpy.array": {
     "line number": [
      812,
      817,
      826
     ]
    },
    "repr": {
     "line number": [
      819,
      821
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_readonly_times": {
  "data": {
   "lineno": 2847,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2851,
      2853,
      2855
     ]
    },
    "events": {
     "line number": [
      2849,
      2850
     ]
    },
    "mne.Epochs": {
     "line number": [
      2850
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2849
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2851,
      2853,
      2855
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      321
     ]
    },
    "TypeError": {
     "line number": [
      307,
      309
     ]
    },
    "ValueError": {
     "line number": [
      311,
      318,
      332,
      378,
      383
     ]
    },
    "dict": {
     "line number": [
      312,
      315,
      320,
      322,
      324,
      366,
      381,
      384,
      387
     ]
    },
    "events": {
     "line number": [
      301,
      303,
      303,
      303,
      309,
      311,
      314,
      318,
      321,
      329,
      334,
      335,
      342,
      347,
      353,
      356,
      359,
      367,
      370,
      372,
      379,
      388,
      392,
      398,
      406,
      409
     ]
    },
    "len": {
     "line number": [
      334,
      334,
      335,
      347,
      347,
      356,
      356,
      359,
      359,
      360,
      360,
      370,
      370,
      372,
      372,
      379,
      379,
      382,
      392,
      392,
      409,
      409
     ]
    },
    "mne.Annotations": {
     "line number": [
      404
     ]
    },
    "mne.Epochs": {
     "line number": [
      309,
      311,
      314,
      318,
      321,
      329,
      342,
      353,
      367,
      388,
      406
     ]
    },
    "mne.pick_types": {
     "line number": [
      307,
      308
     ]
    },
    "mne.tests.test_epochs._assert_drop_log_types": {
     "line number": [
      306,
      331,
      344,
      346
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      301
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      307,
      309,
      311,
      318,
      321,
      332,
      378,
      383
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      343,
      358,
      371,
      391
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      401
     ]
    },
    "numpy.arange": {
     "line number": [
      304,
      335
     ]
    },
    "numpy.inf": {
     "line number": [
      315
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      335,
      339,
      348,
      350,
      357,
      361,
      363,
      373,
      375,
      380,
      393
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      334,
      347,
      356,
      359,
      360,
      370,
      372,
      379,
      382,
      392,
      409,
      410,
      411,
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject_by_annotations_reject_tmin_reject_tmax": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "events": {
     "line number": [
      421,
      426,
      431,
      437
     ]
    },
    "len": {
     "line number": [
      428,
      433,
      439
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      419,
      420,
      422,
      426,
      431,
      436,
      437
     ]
    },
    "numpy.arange": {
     "line number": [
      420
     ]
    },
    "numpy.array": {
     "line number": [
      421
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject_epochs": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1306
     ]
    },
    "ValueError": {
     "line number": [
      1330,
      1332,
      1334
     ]
    },
    "all": {
     "line number": [
      1326,
      1327
     ]
    },
    "dict": {
     "line number": [
      1321
     ]
    },
    "events": {
     "line number": [
      1302,
      1303,
      1303
     ]
    },
    "len": {
     "line number": [
      1306,
      1307,
      1309,
      1340,
      1342
     ]
    },
    "mne.Epochs": {
     "line number": [
      1304,
      1322,
      1330,
      1332,
      1334,
      1337,
      1347
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1302
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1305,
      1323,
      1338
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1306,
      1330,
      1332,
      1334
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1305,
      1338
     ]
    },
    "numpy.zeros": {
     "line number": [
      1349
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_resample": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1502
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1508,
      1509,
      1514,
      1515,
      1519,
      1520,
      1547,
      1548,
      1558
     ]
    },
    "events": {
     "line number": [
      1499,
      1500,
      1504,
      1545,
      1547,
      1548,
      1558
     ]
    },
    "int": {
     "line number": [
      1545
     ]
    },
    "len": {
     "line number": [
      1525,
      1525
     ]
    },
    "mne.Epochs": {
     "line number": [
      1500,
      1504
     ]
    },
    "mne.create_info": {
     "line number": [
      1546
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      1547,
      1548,
      1558
     ]
    },
    "mne.epochs.concatenate_epochs": {
     "line number": [
      1549,
      1552
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1499
     ]
    },
    "mne.tests.test_epochs.flat": {
     "line number": [
      1501,
      1505
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1502
     ]
    },
    "mne.tests.test_epochs.reject": {
     "line number": [
      1501,
      1505
     ]
    },
    "numpy.allclose": {
     "line number": [
      1533
     ]
    },
    "numpy.arange": {
     "line number": [
      1560,
      1563,
      1566,
      1569
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1560,
      1563,
      1566,
      1569
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1526,
      1528
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1554,
      1555
     ]
    },
    "numpy.zeros": {
     "line number": [
      1544,
      1545
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_rescale": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": {
    "float": {
     "line number": [
      705,
      706
     ]
    },
    "functools.partial": {
     "line number": [
      708
     ]
    },
    "mne.baseline.rescale": {
     "line number": [
      708
     ]
    },
    "numpy.array": {
     "line number": [
      705,
      706
     ]
    },
    "numpy.log10": {
     "line number": [
      711,
      715
     ]
    },
    "numpy.std": {
     "line number": [
      713,
      716
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      709,
      710,
      711,
      712,
      713,
      717
     ]
    },
    "tester": {
     "line number": [
      709,
      710,
      711,
      712,
      713,
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_save_complex_data": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2809,
      2813
     ]
    },
    "mne.Epochs": {
     "line number": [
      2813
     ]
    },
    "mne.read_epochs": {
     "line number": [
      2817
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2809
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2804,
      2805,
      2806
     ]
    },
    "numpy.complex128": {
     "line number": [
      2819
     ]
    },
    "numpy.float64": {
     "line number": [
      2819
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      2826
     ]
    },
    "os.path.join": {
     "line number": [
      2814
     ]
    },
    "str": {
     "line number": [
      2814
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_save_overwrite": {
  "data": {
   "lineno": 2766,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      2785,
      2795
     ]
    },
    "events": {
     "line number": [
      2772,
      2773
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      2769,
      2770,
      2772,
      2773
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2785,
      2795
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      2769
     ]
    },
    "os.path.isfile": {
     "line number": [
      2781,
      2794
     ]
    },
    "os.path.join": {
     "line number": [
      2777,
      2790
     ]
    },
    "str": {
     "line number": [
      2768
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_savgol_filter": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      610
     ]
    },
    "events": {
     "line number": [
      608,
      609,
      611
     ]
    },
    "len": {
     "line number": [
      613
     ]
    },
    "mne.Epochs": {
     "line number": [
      609,
      611
     ]
    },
    "mne.fixes.rfft": {
     "line number": [
      614,
      618
     ]
    },
    "mne.fixes.rfftfreq": {
     "line number": [
      613
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      608
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      610
     ]
    },
    "numpy.abs": {
     "line number": [
      614,
      618
     ]
    },
    "numpy.mean": {
     "line number": [
      620,
      621,
      624,
      625
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_seeg_ecog": {
  "data": {
   "lineno": 2532,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      2537
     ]
    },
    "events": {
     "line number": [
      2536,
      2540
     ]
    },
    "len": {
     "line number": [
      2544
     ]
    },
    "mne.create_info": {
     "line number": [
      2539
     ]
    },
    "mne.epochs.EpochsArray": {
     "line number": [
      2540
     ]
    },
    "mne.pick_types": {
     "line number": [
      2542
     ]
    },
    "numpy.arange": {
     "line number": [
      2536
     ]
    },
    "numpy.array": {
     "line number": [
      2536
     ]
    },
    "numpy.ones": {
     "line number": [
      2535
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2544
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_shift_time": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": {
    "events": {
     "line number": [
      2893,
      2894
     ]
    },
    "mne.Epochs": {
     "line number": [
      2894
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2893
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2889
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2897,
      2900
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2898,
      2899
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_shift_time_raises_when_not_loaded": {
  "data": {
   "lineno": 2903,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      2910
     ]
    },
    "events": {
     "line number": [
      2907,
      2908
     ]
    },
    "mne.Epochs": {
     "line number": [
      2908
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      2907
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      2910,
      2903
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_split_saving": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1096,
      1097
     ]
    },
    "len": {
     "line number": [
      1099
     ]
    },
    "mne.io.write._get_split_size": {
     "line number": [
      1102
     ]
    },
    "mne.tests.test_epochs.mne": {
     "line number": [
      1094,
      1095,
      1096,
      1097,
      1114
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      1094
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1115
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1116
     ]
    },
    "open": {
     "line number": [
      1108
     ]
    },
    "os.path.isfile": {
     "line number": [
      1107,
      1112
     ]
    },
    "os.path.join": {
     "line number": [
      1100
     ]
    },
    "range": {
     "line number": [
      1105
     ]
    },
    "str": {
     "line number": [
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_subtract_evoked": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1655
     ]
    },
    "events": {
     "line number": [
      1651,
      1652,
      1665,
      1680
     ]
    },
    "mne.Epochs": {
     "line number": [
      1652,
      1665,
      1680
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1651
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1655
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1672,
      1677,
      1684,
      1685
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      1677
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1868
     ]
    },
    "ValueError": {
     "line number": [
      1864,
      1866
     ]
    },
    "all": {
     "line number": [
      1872,
      1873
     ]
    },
    "events": {
     "line number": [
      1861,
      1862
     ]
    },
    "len": {
     "line number": [
      1879
     ]
    },
    "mne.Epochs": {
     "line number": [
      1862
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1861
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1864,
      1866,
      1868
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1858
     ]
    },
    "numpy.arange": {
     "line number": [
      1869
     ]
    },
    "numpy.hstack": {
     "line number": [
      1885
     ]
    },
    "numpy.in1d": {
     "line number": [
      1872,
      1873
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1886,
      1887
     ]
    },
    "set": {
     "line number": [
      1877,
      1877,
      1878,
      1878
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame_index": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1905
     ]
    },
    "events": {
     "line number": [
      1895,
      1896
     ]
    },
    "isinstance": {
     "line number": [
      1899
     ]
    },
    "len": {
     "line number": [
      1904
     ]
    },
    "list": {
     "line number": [
      1899,
      1903
     ]
    },
    "mne.Epochs": {
     "line number": [
      1896
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1895
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1891
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1890
     ]
    },
    "numpy.in1d": {
     "line number": [
      1905
     ]
    },
    "set": {
     "line number": [
      1903,
      1903
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame_time_format": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": {
    "events": {
     "line number": [
      1913,
      1914
     ]
    },
    "isinstance": {
     "line number": [
      1918
     ]
    },
    "mne.Epochs": {
     "line number": [
      1914
     ]
    },
    "mne.tests.test_epochs._get_data": {
     "line number": [
      1913
     ]
    },
    "mne.tests.test_epochs.pytest": {
     "line number": [
      1909
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1908
     ]
    },
    "numpy.float64": {
     "line number": [
      1917
     ]
    },
    "numpy.int64": {
     "line number": [
      1917
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      1917
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_epochs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.write_evokeds": {
  "data": {
   "shadows": "mne.write_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_event": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      34
     ]
    },
    "mne.tests.test_event.base_dir": {
     "line number": [
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      39,
      40,
      41
     ]
    },
    "mne.tests.test_event.elekta_base_dir": {
     "line number": [
      35,
      36
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      597
     ]
    },
    "os.path.dirname": {
     "line number": [
      24
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      34,
      35,
      36,
      39,
      40,
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_event.AcqParserFIF": {
  "data": {
   "shadows": "mne.event.AcqParserFIF"
  },
  "type": "import"
 },
 "mne.tests.test_event.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_event.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_event.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.base_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_event.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_event.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_event.define_target_events": {
  "data": {
   "shadows": "mne.event.define_target_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.elekta_base_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_event.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.find_stim_steps": {
  "data": {
   "shadows": "mne.find_stim_steps"
  },
  "type": "import"
 },
 "mne.tests.test_event.fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_1": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_ave_elekta": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_c_annot": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_gz": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_old_txt": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_raw": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_raw_elekta": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt_1": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt_mpr": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_event.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.merge_events": {
  "data": {
   "shadows": "mne.event.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_event.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_event.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_event.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.tests.test_event.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_event.raw_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_event.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_event.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_event.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_event.shift_time_events": {
  "data": {
   "shadows": "mne.event.shift_time_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.test_acqparser": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      541,
      542
     ]
    },
    "TypeError": {
     "line number": [
      544
     ]
    },
    "ValueError": {
     "line number": [
      514,
      516,
      517
     ]
    },
    "len": {
     "line number": [
      526,
      527,
      528,
      529,
      546,
      547,
      548,
      549,
      550
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      510
     ]
    },
    "mne.event.AcqParserFIF": {
     "line number": [
      514,
      516,
      517,
      520
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      519,
      533
     ]
    },
    "mne.tests.test_event.fname_raw_elekta": {
     "line number": [
      533
     ]
    },
    "mne.tests.test_event.pytest": {
     "line number": [
      514,
      516,
      517,
      541,
      542,
      544
     ]
    },
    "mne.tests.test_event.raw_fname": {
     "line number": [
      519
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      526,
      527,
      528,
      529,
      546,
      547,
      548,
      549,
      550
     ]
    },
    "repr": {
     "line number": [
      522,
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_acqparser_averaging": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "mne.Epochs": {
     "line number": [
      564
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      555
     ]
    },
    "mne.event.AcqParserFIF": {
     "line number": [
      559
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      558
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      566
     ]
    },
    "mne.tests.test_event.fname_ave_elekta": {
     "line number": [
      566
     ]
    },
    "mne.tests.test_event.fname_raw_elekta": {
     "line number": [
      558
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      576,
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_add_events": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      61
     ]
    },
    "ValueError": {
     "line number": [
      66,
      69,
      71,
      73
     ]
    },
    "events": {
     "line number": [
      60,
      61,
      65,
      66,
      67,
      68,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      76,
      77,
      79
     ]
    },
    "mne.find_events": {
     "line number": [
      63,
      75,
      78
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      59,
      62
     ]
    },
    "mne.tests.test_event.pytest": {
     "line number": [
      61,
      66,
      69,
      71,
      73
     ]
    },
    "mne.tests.test_event.raw_fname": {
     "line number": [
      59,
      62
     ]
    },
    "numpy.array": {
     "line number": [
      60,
      65
     ]
    },
    "numpy.concatenate": {
     "line number": [
      76
     ]
    },
    "numpy.newaxis": {
     "line number": [
      68
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      76,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_define_events": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "events": {
     "line number": [
      481,
      483,
      491,
      503,
      504
     ]
    },
    "events.shape": {
     "line number": [
      485,
      485
     ]
    },
    "mne.event.define_target_events": {
     "line number": [
      483,
      503,
      504
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      482
     ]
    },
    "mne.read_events": {
     "line number": [
      481
     ]
    },
    "mne.tests.test_event.fname": {
     "line number": [
      481
     ]
    },
    "mne.tests.test_event.raw_fname": {
     "line number": [
      482
     ]
    },
    "numpy.array": {
     "line number": [
      491
     ]
    },
    "numpy.nan": {
     "line number": [
      502,
      502
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      506,
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_find_events": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      215
     ]
    },
    "TypeError": {
     "line number": [
      233
     ]
    },
    "ValueError": {
     "line number": [
      234,
      303,
      396,
      400
     ]
    },
    "events": {
     "line number": [
      203,
      212,
      378,
      379,
      380
     ]
    },
    "mne.Annotations": {
     "line number": [
      399
     ]
    },
    "mne.create_info": {
     "line number": [
      383
     ]
    },
    "mne.find_events": {
     "line number": [
      211,
      214,
      233,
      234,
      236,
      239,
      242,
      245,
      249,
      252,
      255,
      258,
      264,
      267,
      270,
      278,
      282,
      288,
      293,
      297,
      303,
      305,
      315,
      320,
      322,
      326,
      329,
      334,
      375,
      378,
      388,
      389,
      397,
      401
     ]
    },
    "mne.find_stim_steps": {
     "line number": [
      343,
      350,
      355
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      385
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      204,
      393
     ]
    },
    "mne.pick_channels": {
     "line number": [
      225,
      371
     ]
    },
    "mne.read_events": {
     "line number": [
      203,
      216
     ]
    },
    "mne.tests.test_event.fname": {
     "line number": [
      203,
      216
     ]
    },
    "mne.tests.test_event.os": {
     "line number": [
      207,
      208,
      209,
      210,
      364
     ]
    },
    "mne.tests.test_event.pytest": {
     "line number": [
      215,
      233,
      234,
      303,
      396,
      400
     ]
    },
    "mne.tests.test_event.raw_fname": {
     "line number": [
      204,
      393
     ]
    },
    "numpy.arange": {
     "line number": [
      229
     ]
    },
    "numpy.empty": {
     "line number": [
      264,
      267
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      212
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      217,
      236,
      239,
      242,
      245,
      249,
      252,
      255,
      258,
      264,
      267,
      270,
      278,
      282,
      288,
      293,
      297,
      305,
      315,
      320,
      322,
      326,
      329,
      334,
      343,
      350,
      355,
      379,
      380,
      388,
      389
     ]
    },
    "numpy.zeros": {
     "line number": [
      367,
      384
     ]
    },
    "zip": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_fix_stim": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      49
     ]
    },
    "events": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    },
    "mne.find_events": {
     "line number": [
      50,
      52
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      46
     ]
    },
    "mne.tests.test_event.pytest": {
     "line number": [
      49
     ]
    },
    "mne.tests.test_event.raw_fname": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      51,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_io_c_annot": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "events": {
     "line number": [
      192,
      194,
      196
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      190
     ]
    },
    "mne.read_events": {
     "line number": [
      192,
      193
     ]
    },
    "mne.tests.test_event.fname_c_annot": {
     "line number": [
      192,
      193
     ]
    },
    "mne.tests.test_event.fname_raw": {
     "line number": [
      190
     ]
    },
    "numpy.arange": {
     "line number": [
      195
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      196
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_io_events": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      184
     ]
    },
    "RuntimeWarning": {
     "line number": [
      136,
      178,
      180
     ]
    },
    "events": {
     "line number": [
      117,
      119,
      121,
      125,
      129,
      133,
      135,
      138,
      142,
      143,
      145,
      165,
      166,
      168,
      172,
      174,
      179
     ]
    },
    "events.copy": {
     "line number": [
      158
     ]
    },
    "mne.read_events": {
     "line number": [
      117,
      120,
      124,
      128,
      134,
      137,
      141,
      144,
      149,
      150,
      151,
      152,
      161,
      165,
      167,
      173,
      181,
      185
     ]
    },
    "mne.tests.test_event.fname": {
     "line number": [
      117,
      185
     ]
    },
    "mne.tests.test_event.fname_1": {
     "line number": [
      165
     ]
    },
    "mne.tests.test_event.fname_gz": {
     "line number": [
      124
     ]
    },
    "mne.tests.test_event.fname_old_txt": {
     "line number": [
      141
     ]
    },
    "mne.tests.test_event.fname_txt_mpr": {
     "line number": [
      137
     ]
    },
    "mne.tests.test_event.pytest": {
     "line number": [
      136,
      178,
      180,
      184
     ]
    },
    "mne.write_events": {
     "line number": [
      119,
      127,
      133,
      143,
      160,
      166,
      172,
      179
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      121,
      125,
      129,
      135,
      138,
      142,
      145,
      162,
      168,
      174
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      153,
      154,
      155
     ]
    },
    "range": {
     "line number": [
      159
     ]
    },
    "str": {
     "line number": [
      132,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_make_fixed_length_events": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      441,
      442,
      443
     ]
    },
    "ValueError": {
     "line number": [
      438,
      475
     ]
    },
    "events": {
     "line number": [
      427,
      431,
      435,
      452,
      453,
      454,
      458,
      459,
      460,
      468,
      469
     ]
    },
    "events.shape": {
     "line number": [
      428,
      436
     ]
    },
    "len": {
     "line number": [
      454,
      460,
      469,
      471,
      473
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      463
     ]
    },
    "mne.create_info": {
     "line number": [
      450
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      451,
      457
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      426
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      427,
      429,
      435,
      438,
      441,
      442,
      443,
      452,
      458,
      468,
      470,
      472,
      476
     ]
    },
    "mne.tests.test_event.pytest": {
     "line number": [
      438,
      441,
      442,
      443,
      475
     ]
    },
    "mne.tests.test_event.raw_fname": {
     "line number": [
      426
     ]
    },
    "numpy.cov": {
     "line number": [
      464
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      447
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      465
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      431,
      474
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      430,
      436
     ]
    },
    "numpy.unique": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_merge_events": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "events": {
     "line number": [
      108,
      109,
      109,
      110,
      110,
      111
     ]
    },
    "mne.event.merge_events": {
     "line number": [
      108,
      109,
      110
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_pick_events": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "events": {
     "line number": [
      406,
      411,
      414,
      417
     ]
    },
    "mne.pick_events": {
     "line number": [
      411,
      414,
      417
     ]
    },
    "numpy.array": {
     "line number": [
      406
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      411,
      414,
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.test_shift_time_events": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "all": {
     "line number": [
      589,
      594
     ]
    },
    "events": {
     "line number": [
      586,
      588,
      591,
      593
     ]
    },
    "mne.event.shift_time_events": {
     "line number": [
      588,
      593
     ]
    },
    "numpy.array": {
     "line number": [
      586,
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_event.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_event.write_events": {
  "data": {
   "shadows": "mne.write_events"
  },
  "type": "import"
 },
 "mne.tests.test_evoked": {
  "data": {
   "symbols_in_volume": {
    "mne.tests.test_evoked.base_dir": {
     "line number": [
      28,
      29,
      30,
      31
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      761
     ]
    },
    "os.path.dirname": {
     "line number": [
      27
     ]
    },
    "os.path.join": {
     "line number": [
      27,
      28,
      29,
      30,
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_evoked.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.Evoked": {
  "data": {
   "shadows": "mne.evoked.Evoked"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.EvokedArray": {
  "data": {
   "shadows": "mne.evoked.EvokedArray"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "mne.tests.test_evoked._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_evoked._aspect_kinds": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      134
     ]
    },
    "list": {
     "line number": [
      130
     ]
    },
    "mne.io.constants.FIFF": {
     "line number": [
      131,
      134
     ]
    },
    "str": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked._get_peak": {
  "data": {
   "shadows": "mne.evoked._get_peak"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.event_name": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.fname_gz": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.test_add_channels": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      715
     ]
    },
    "RuntimeError": {
     "line number": [
      714
     ]
    },
    "TypeError": {
     "line number": [
      717
     ]
    },
    "ValueError": {
     "line number": [
      716
     ]
    },
    "all": {
     "line number": [
      700,
      706
     ]
    },
    "dict": {
     "line number": [
      694
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      690
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      690
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      714,
      715,
      716,
      717
     ]
    },
    "numpy.array": {
     "line number": [
      692,
      693
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_arithmetic": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      619
     ]
    },
    "TypeError": {
     "line number": [
      608
     ]
    },
    "ValueError": {
     "line number": [
      593,
      595
     ]
    },
    "dict": {
     "line number": [
      558
     ]
    },
    "len": {
     "line number": [
      605
     ]
    },
    "mne.combine_evoked": {
     "line number": [
      560,
      561,
      566,
      571,
      576,
      580,
      587,
      594,
      596,
      620
     ]
    },
    "mne.evoked.EvokedArray": {
     "line number": [
      555,
      556
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      554,
      599,
      614
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      554,
      599,
      614
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      593,
      595,
      608,
      619
     ]
    },
    "mne.utils.grand_average": {
     "line number": [
      604,
      609,
      610
     ]
    },
    "numpy.allclose": {
     "line number": [
      562,
      563,
      567,
      568,
      572,
      573,
      577,
      578,
      582,
      618,
      621
     ]
    },
    "numpy.full_like": {
     "line number": [
      611
     ]
    },
    "numpy.mean": {
     "line number": [
      578
     ]
    },
    "numpy.ones_like": {
     "line number": [
      555,
      556,
      568
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      611
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      588,
      605,
      606,
      607
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      562,
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_array_epochs": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      663,
      665,
      672
     ]
    },
    "events": {
     "line number": [
      653,
      654
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      654
     ]
    },
    "mne.create_info": {
     "line number": [
      636,
      671
     ]
    },
    "mne.evoked.EvokedArray": {
     "line number": [
      637,
      664,
      666,
      672
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      642
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      663,
      665,
      672
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      628
     ]
    },
    "numpy.c_": {
     "line number": [
      653
     ]
    },
    "numpy.newaxis": {
     "line number": [
      652
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      631
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      644,
      655,
      656
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      645
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      646,
      647,
      648,
      649,
      657,
      658,
      659,
      660
     ]
    },
    "os.path.join": {
     "line number": [
      640
     ]
    },
    "range": {
     "line number": [
      634,
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_decim": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "events": {
     "line number": [
      75,
      79
     ]
    },
    "float": {
     "line number": [
      44
     ]
    },
    "len": {
     "line number": [
      71
     ]
    },
    "mne.Epochs": {
     "line number": [
      79
     ]
    },
    "mne.create_info": {
     "line number": [
      43
     ]
    },
    "mne.evoked.EvokedArray": {
     "line number": [
      45
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      74
     ]
    },
    "mne.pick_types": {
     "line number": [
      78
     ]
    },
    "mne.read_events": {
     "line number": [
      75
     ]
    },
    "mne.tests.test_evoked.event_name": {
     "line number": [
      75
     ]
    },
    "mne.tests.test_evoked.raw_fname": {
     "line number": [
      74
     ]
    },
    "numpy.abs": {
     "line number": [
      66,
      68,
      68
     ]
    },
    "numpy.arange": {
     "line number": [
      66
     ]
    },
    "numpy.argmin": {
     "line number": [
      66
     ]
    },
    "numpy.min": {
     "line number": [
      68
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      84,
      85,
      87,
      88
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      49,
      50,
      51,
      56,
      59,
      62,
      90
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      89
     ]
    },
    "numpy.where": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_drop_channels_mixin": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      512
     ]
    },
    "len": {
     "line number": [
      503,
      503,
      509,
      509
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      495
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      495
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      512
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      501,
      502,
      503,
      505,
      508,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_equalize_channels": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "mne.equalize_channels": {
     "line number": [
      547
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      541
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      541
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_aspects": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "mne.read_evokeds": {
     "line number": [
      142,
      148
     ]
    },
    "mne.tests.test_evoked._aspect_kinds": {
     "line number": [
      138
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      142
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      138
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      149
     ]
    },
    "os.path.join": {
     "line number": [
      146
     ]
    },
    "repr": {
     "line number": [
      144
     ]
    },
    "str": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_baseline": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "mne.evoked.EvokedArray": {
     "line number": [
      725
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      722
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      722
     ]
    },
    "numpy.ones_like": {
     "line number": [
      725
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      732
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_detrend": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "mne.pick_types": {
     "line number": [
      366
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      362,
      363
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      362,
      363
     ]
    },
    "numpy.mean": {
     "line number": [
      365
     ]
    },
    "numpy.newaxis": {
     "line number": [
      365
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_filter": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "mne.read_evokeds": {
     "line number": [
      352
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      352
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      357
     ]
    },
    "round": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_proj": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      422,
      424
     ]
    },
    "all": {
     "line number": [
      418
     ]
    },
    "copy.deepcopy": {
     "line number": [
      426
     ]
    },
    "len": {
     "line number": [
      427,
      429,
      432,
      434
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      417,
      436
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      417,
      436
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      422,
      424
     ]
    },
    "numpy.dot": {
     "line number": [
      439
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_resample": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "len": {
     "line number": [
      341,
      341
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      315,
      321,
      324,
      327
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      315,
      324
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      313
     ]
    },
    "mne.write_evokeds": {
     "line number": [
      320
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      331,
      332
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      333,
      334,
      335,
      336,
      337
     ]
    },
    "os.path.join": {
     "line number": [
      320,
      321,
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_get_peak": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      450
     ]
    },
    "ValueError": {
     "line number": [
      445,
      446,
      447,
      449,
      451,
      464,
      489,
      490
     ]
    },
    "len": {
     "line number": [
      460
     ]
    },
    "mne.evoked._get_peak": {
     "line number": [
      474,
      479,
      484,
      489,
      490
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      444
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      444
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      445,
      446,
      447,
      449,
      450,
      451,
      464,
      489,
      490
     ]
    },
    "numpy.array": {
     "line number": [
      469,
      472
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      462,
      477,
      482,
      487
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      461,
      467,
      475,
      476,
      480,
      481,
      485,
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_hash_evoked": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      119,
      119,
      125,
      125
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      117,
      118
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      117,
      118
     ]
    },
    "mne.tests.test_evoked.pickle": {
     "line number": [
      122,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_hilbert": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      742
     ]
    },
    "events": {
     "line number": [
      740,
      741,
      752
     ]
    },
    "mne.Epochs": {
     "line number": [
      741,
      752
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      737
     ]
    },
    "mne.read_events": {
     "line number": [
      740
     ]
    },
    "mne.tests.test_evoked.event_name": {
     "line number": [
      740
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      742
     ]
    },
    "mne.tests.test_evoked.raw_fname": {
     "line number": [
      737
     ]
    },
    "numpy.abs": {
     "line number": [
      753,
      754,
      758
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      753
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      750,
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_io_evoked": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      214,
      216,
      237
     ]
    },
    "TypeError": {
     "line number": [
      229
     ]
    },
    "ValueError": {
     "line number": [
      181,
      182,
      236
     ]
    },
    "all": {
     "line number": [
      239,
      241
     ]
    },
    "mne.evoked.Evoked": {
     "line number": [
      229
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      156,
      162,
      176,
      181,
      182,
      184,
      188,
      189,
      190,
      192,
      209,
      217,
      222,
      236,
      238,
      240
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      156,
      181,
      182,
      184,
      188,
      189,
      190,
      222,
      229
     ]
    },
    "mne.tests.test_evoked.fname_gz": {
     "line number": [
      176
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      181,
      182,
      214,
      216,
      229,
      236,
      237,
      153
     ]
    },
    "mne.write_evokeds": {
     "line number": [
      161,
      191,
      215,
      226
     ]
    },
    "numpy.allclose": {
     "line number": [
      166,
      177
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      210
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      167,
      185,
      195,
      196
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      168,
      169,
      170,
      171,
      172,
      197,
      198,
      199,
      200,
      201,
      202
     ]
    },
    "os.path.join": {
     "line number": [
      162
     ]
    },
    "repr": {
     "line number": [
      173
     ]
    },
    "str": {
     "line number": [
      207
     ]
    },
    "zip": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_pick_channels_mixin": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "len": {
     "line number": [
      524,
      524,
      528,
      528,
      536
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      517,
      530
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      517,
      530
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      522,
      523,
      524,
      527,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_savgol_filter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      97
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      96
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      96
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      101
     ]
    },
    "numpy.abs": {
     "line number": [
      98,
      103,
      112
     ]
    },
    "numpy.logical_and": {
     "line number": [
      99,
      100
     ]
    },
    "numpy.mean": {
     "line number": [
      105,
      106,
      109,
      110
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      105,
      112
     ]
    },
    "scipy.fftpack.fft": {
     "line number": [
      98,
      103,
      112
     ]
    },
    "scipy.fftpack.fftfreq": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_shift_time_evoked": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "int": {
     "line number": [
      278
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      248,
      252,
      257,
      261,
      262,
      271,
      275,
      282,
      288,
      294,
      300
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      248,
      261,
      271,
      282,
      288
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      246
     ]
    },
    "mne.write_evokeds": {
     "line number": [
      249,
      254,
      259,
      273,
      293,
      299
     ]
    },
    "numpy.array": {
     "line number": [
      289,
      292,
      298
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      264,
      277,
      285
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      265,
      295,
      301
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      292,
      298
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      267,
      268,
      278
     ]
    },
    "os.path.join": {
     "line number": [
      249,
      252,
      254,
      257,
      259,
      262,
      273,
      275,
      293,
      294,
      299,
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_time_as_index_and_crop": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "len": {
     "line number": [
      683
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      678
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      678
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      681,
      685
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      682
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_tmin_tmax": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "mne.read_evokeds": {
     "line number": [
      306
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_to_data_frame": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      380
     ]
    },
    "ValueError": {
     "line number": [
      376,
      378
     ]
    },
    "all": {
     "line number": [
      388
     ]
    },
    "len": {
     "line number": [
      393
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      374
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      374
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      376,
      378,
      380
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      371
     ]
    },
    "numpy.arange": {
     "line number": [
      381
     ]
    },
    "numpy.in1d": {
     "line number": [
      388
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      398,
      399
     ]
    },
    "set": {
     "line number": [
      391,
      391,
      392,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_to_data_frame_time_format": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      411
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      407
     ]
    },
    "mne.tests.test_evoked.fname": {
     "line number": [
      407
     ]
    },
    "mne.tests.test_evoked.pytest": {
     "line number": [
      403
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      402
     ]
    },
    "numpy.float64": {
     "line number": [
      410
     ]
    },
    "numpy.int64": {
     "line number": [
      410
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_evoked.write_evokeds": {
  "data": {
   "shadows": "mne.write_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_filter": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      769
     ]
    },
    "range": {
     "line number": [
      201
     ]
    },
    "tuple": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_filter.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_filter._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.tests.test_filter._cuda_capable": {
  "data": {
   "shadows": "mne.cuda._cuda_capable"
  },
  "type": "import"
 },
 "mne.tests.test_filter._length_factors": {
  "data": {
   "shadows": "mne.filter._length_factors"
  },
  "type": "import"
 },
 "mne.tests.test_filter._overlap_add_filter": {
  "data": {
   "shadows": "mne.filter._overlap_add_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter._resample_stim_channels": {
  "data": {
   "shadows": "mne.filter._resample_stim_channels"
  },
  "type": "import"
 },
 "mne.tests.test_filter._smart_pad": {
  "data": {
   "shadows": "mne.filter._smart_pad"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_filter.butter": {
  "data": {
   "shadows": "scipy.signal.butter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_filter.construct_iir_filter": {
  "data": {
   "shadows": "mne.filter.construct_iir_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.create_filter": {
  "data": {
   "shadows": "mne.filter.create_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_filter.design_mne_c_filter": {
  "data": {
   "shadows": "mne.filter.design_mne_c_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.detrend": {
  "data": {
   "shadows": "mne.filter.detrend"
  },
  "type": "import"
 },
 "mne.tests.test_filter.estimate_ringing_samples": {
  "data": {
   "shadows": "mne.filter.estimate_ringing_samples"
  },
  "type": "import"
 },
 "mne.tests.test_filter.fft": {
  "data": {
   "shadows": "mne.fixes.fft"
  },
  "type": "import"
 },
 "mne.tests.test_filter.fftfreq": {
  "data": {
   "shadows": "mne.fixes.fftfreq"
  },
  "type": "import"
 },
 "mne.tests.test_filter.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.tests.test_filter.freqz": {
  "data": {
   "shadows": "scipy.signal.freqz"
  },
  "type": "import"
 },
 "mne.tests.test_filter.line_freqs": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "mne.tests.test_filter.notch_filter": {
  "data": {
   "shadows": "mne.filter.notch_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_filter.nullcontext": {
  "data": {
   "shadows": "mne.fixes.nullcontext"
  },
  "type": "import"
 },
 "mne.tests.test_filter.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_filter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_filter.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_filter.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.tests.test_filter.resample": {
  "data": {
   "shadows": "mne.filter.resample"
  },
  "type": "import"
 },
 "mne.tests.test_filter.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_filter.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sosfreqz": {
  "data": {
   "shadows": "scipy.signal.sosfreqz"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sp_resample": {
  "data": {
   "shadows": "scipy.signal.resample"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.tests.test_filter.test_1d_filter": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      98
     ]
    },
    "ValueError": {
     "line number": [
      137
     ]
    },
    "len": {
     "line number": [
      101,
      103,
      105,
      108,
      113,
      113,
      116,
      117,
      117,
      122,
      123,
      124,
      125,
      125,
      127,
      127
     ]
    },
    "max": {
     "line number": [
      123
     ]
    },
    "mne.filter._overlap_add_filter": {
     "line number": [
      98,
      137,
      140
     ]
    },
    "mne.filter._smart_pad": {
     "line number": [
      92
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      98,
      137
     ]
    },
    "numpy.concatenate": {
     "line number": [
      89,
      123
     ]
    },
    "numpy.convolve": {
     "line number": [
      102,
      106,
      107,
      112
     ]
    },
    "numpy.newaxis": {
     "line number": [
      99
     ]
    },
    "numpy.newaxis.copy": {
     "line number": [
      132
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      81
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      126,
      142
     ]
    },
    "numpy.zeros": {
     "line number": [
      89,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_cuda_fir": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      532
     ]
    },
    "mne.cuda._cuda_capable": {
     "line number": [
      560,
      562
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      537,
      538,
      542,
      543,
      547,
      548,
      552,
      553
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      563
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      534
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      528
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      539,
      544,
      549,
      554
     ]
    },
    "sum": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_cuda_resampling": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "mne.filter.resample": {
     "line number": [
      573,
      575,
      579
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      568
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      577
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      578
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      579
     ]
    },
    "numpy.zeros": {
     "line number": [
      579,
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_detrend": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "mne.filter.detrend": {
     "line number": [
      585,
      587
     ]
    },
    "numpy.arange": {
     "line number": [
      584
     ]
    },
    "numpy.ones": {
     "line number": [
      586
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      585,
      587
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      585,
      587
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_estimate_ringing": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      74
     ]
    },
    "mne.filter.estimate_ringing_samples": {
     "line number": [
      70,
      75
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      74
     ]
    },
    "scipy.signal.butter": {
     "line number": [
      70,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_array": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      28
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      27
     ]
    },
    "numpy.zeros": {
     "line number": [
      26,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_auto": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      516,
      517,
      518,
      520
     ]
    },
    "dict": {
     "line number": [
      498
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      500,
      505,
      508,
      511,
      516,
      517,
      519,
      521
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      516,
      517,
      518,
      520
     ]
    },
    "numpy.arange": {
     "line number": [
      493
     ]
    },
    "numpy.float32": {
     "line number": [
      519
     ]
    },
    "numpy.ones": {
     "line number": [
      492
     ]
    },
    "numpy.pi": {
     "line number": [
      494
     ]
    },
    "numpy.sin": {
     "line number": [
      494
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      503
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      501,
      505,
      507,
      508,
      510,
      511,
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_picks": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      761
     ]
    },
    "dict": {
     "line number": [
      738
     ]
    },
    "mne.create_info": {
     "line number": [
      745,
      758
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      739
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      746,
      759
     ]
    },
    "mne.io.pick._DATA_CH_TYPES_SPLIT": {
     "line number": [
      749,
      760
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      761
     ]
    },
    "numpy.concatenate": {
     "line number": [
      750,
      752,
      754
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      736
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      755,
      766
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filters": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      367,
      370,
      459
     ]
    },
    "TypeError": {
     "line number": [
      346
     ]
    },
    "ValueError": {
     "line number": [
      346,
      350,
      352,
      354,
      357,
      359,
      460
     ]
    },
    "dict": {
     "line number": [
      377,
      429,
      434,
      438,
      442
     ]
    },
    "float": {
     "line number": [
      421
     ]
    },
    "int": {
     "line number": [
      464
     ]
    },
    "len": {
     "line number": [
      471,
      476,
      481
     ]
    },
    "list": {
     "line number": [
      421
     ]
    },
    "mne.filter._length_factors": {
     "line number": [
      464
     ]
    },
    "mne.filter.construct_iir_filter": {
     "line number": [
      430,
      435,
      439,
      443
     ]
    },
    "mne.filter.create_filter": {
     "line number": [
      362,
      363,
      364,
      467,
      472,
      477
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      347,
      350,
      352,
      354,
      357,
      359,
      369,
      372,
      379,
      380,
      382,
      384,
      394,
      396,
      450,
      452,
      460
     ]
    },
    "mne.filter.resample": {
     "line number": [
      405,
      405,
      410,
      410,
      425
     ]
    },
    "mne.fixes.fft": {
     "line number": [
      376,
      389,
      391,
      398,
      400
     ]
    },
    "mne.fixes.fftfreq": {
     "line number": [
      375
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      346,
      350,
      352,
      354,
      357,
      359,
      367,
      370,
      459,
      460,
      335
     ]
    },
    "numpy.abs": {
     "line number": [
      376,
      389,
      391,
      398,
      400
     ]
    },
    "numpy.array": {
     "line number": [
      421,
      461
     ]
    },
    "numpy.empty": {
     "line number": [
      468,
      473,
      478
     ]
    },
    "numpy.mean": {
     "line number": [
      389,
      391,
      398,
      400
     ]
    },
    "numpy.pi": {
     "line number": [
      423
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      338
     ]
    },
    "numpy.sin": {
     "line number": [
      423
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      385,
      386,
      389,
      391,
      398,
      400
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      406,
      411,
      417,
      426
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      455
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      426
     ]
    },
    "range": {
     "line number": [
      421
     ]
    },
    "round": {
     "line number": [
      464
     ]
    },
    "scipy.signal.resample": {
     "line number": [
      414,
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_iir_stability": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      150,
      160,
      163,
      167
     ]
    },
    "TypeError": {
     "line number": [
      174,
      180
     ]
    },
    "ValueError": {
     "line number": [
      157,
      170,
      177,
      182
     ]
    },
    "dict": {
     "line number": [
      151,
      155,
      158,
      161,
      165,
      168,
      171,
      183,
      186,
      195
     ]
    },
    "mne.filter.construct_iir_filter": {
     "line number": [
      189
     ]
    },
    "mne.filter.filter_data": {
     "line number": [
      150,
      154,
      157,
      160,
      163,
      167,
      170,
      174,
      177,
      180,
      182,
      187,
      191,
      194
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      150,
      157,
      160,
      163,
      167,
      170,
      174,
      177,
      180,
      182
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      193,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_mne_c_design": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      43
     ]
    },
    "mne.create_info": {
     "line number": [
      41
     ]
    },
    "mne.filter.design_mne_c_filter": {
     "line number": [
      47,
      52,
      57
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      41
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      48,
      53,
      58
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      31
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      46,
      51,
      56
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      49,
      54,
      59
     ]
    },
    "numpy.zeros": {
     "line number": [
      37
     ]
    },
    "os.path.join": {
     "line number": [
      35,
      36
     ]
    },
    "slice": {
     "line number": [
      39
     ]
    },
    "str": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_n_jobs": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "mne.filter.filter_data": {
     "line number": [
      293,
      294
     ]
    },
    "mne.filter.resample": {
     "line number": [
      290,
      291
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      286
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      289
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      292,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_notch_filters": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      227,
      228
     ]
    },
    "float": {
     "line number": [
      242
     ]
    },
    "int": {
     "line number": [
      218,
      221
     ]
    },
    "len": {
     "line number": [
      241
     ]
    },
    "mne.filter.notch_filter": {
     "line number": [
      227,
      228,
      235
     ]
    },
    "mne.fixes.nullcontext": {
     "line number": [
      232
     ]
    },
    "mne.tests.test_filter.line_freqs": {
     "line number": [
      224,
      243,
      208,
      209,
      210
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      227,
      228,
      230,
      204
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      233
     ]
    },
    "mne.utils.sum_squared": {
     "line number": [
      244
     ]
    },
    "numpy.arange": {
     "line number": [
      218
     ]
    },
    "numpy.array": {
     "line number": [
      242
     ]
    },
    "numpy.mean": {
     "line number": [
      222
     ]
    },
    "numpy.pi": {
     "line number": [
      224
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      215
     ]
    },
    "numpy.sin": {
     "line number": [
      224
     ]
    },
    "numpy.sqrt": {
     "line number": [
      222,
      244
     ]
    },
    "numpy.sum": {
     "line number": [
      224
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      245
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      243
     ]
    },
    "round": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_reporting_fir": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "len": {
     "line number": [
      679
     ]
    },
    "mne.filter.create_filter": {
     "line number": [
      677
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      669,
      670,
      671
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      676
     ]
    },
    "numpy.abs": {
     "line number": [
      710,
      712,
      714,
      716,
      720
     ]
    },
    "numpy.argmin": {
     "line number": [
      712,
      714,
      716,
      720
     ]
    },
    "numpy.convolve": {
     "line number": [
      707
     ]
    },
    "numpy.pi": {
     "line number": [
      709
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      726,
      728,
      731
     ]
    },
    "scipy.signal.freqz": {
     "line number": [
      708
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_reporting_iir": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      598
     ]
    },
    "len": {
     "line number": [
      611
     ]
    },
    "mne.filter.create_filter": {
     "line number": [
      607
     ]
    },
    "mne.tests.test_filter.pytest": {
     "line number": [
      590,
      591,
      592,
      593
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      606
     ]
    },
    "numpy.abs": {
     "line number": [
      642,
      644,
      646,
      648,
      651,
      652
     ]
    },
    "numpy.argmin": {
     "line number": [
      644,
      646,
      648,
      651,
      652
     ]
    },
    "numpy.log10": {
     "line number": [
      603
     ]
    },
    "numpy.pi": {
     "line number": [
      641
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      660,
      661,
      664
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      666
     ]
    },
    "scipy.signal.freqz": {
     "line number": [
      638
     ]
    },
    "scipy.signal.sosfreqz": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resamp_stim_channel": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "mne.filter._resample_stim_channels": {
     "line number": [
      302,
      305,
      308,
      313,
      315,
      320
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      301,
      304,
      307,
      312,
      314
     ]
    },
    "numpy.zeros": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "mne.filter.resample": {
     "line number": [
      252,
      257,
      261,
      265
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      250
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      258,
      262,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample_raw": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "mne.create_info": {
     "line number": [
      329
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      329
     ]
    },
    "numpy.zeros": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample_scipy": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "float": {
     "line number": [
      273
     ]
    },
    "int": {
     "line number": [
      279
     ]
    },
    "len": {
     "line number": [
      279
     ]
    },
    "mne.filter.resample": {
     "line number": [
      277,
      282
     ]
    },
    "numpy.arange": {
     "line number": [
      273
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      278,
      283
     ]
    },
    "round": {
     "line number": [
      279
     ]
    },
    "scipy.signal.resample": {
     "line number": [
      275,
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_import_nesting": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_import_nesting.run_script": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.tests.test_import_nesting.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.test_module_nesting": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "mne.tests.test_import_nesting.run_script": {
     "line number": [
      41
     ]
    },
    "mne.tests.test_import_nesting.sys": {
     "line number": [
      41
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      31
     ]
    },
    "mne.tests.test_label.data_path": {
     "line number": [
      32,
      34,
      36,
      38,
      42,
      44
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      33,
      40,
      46
     ]
    },
    "mne.tests.test_label.test_path": {
     "line number": [
      49,
      50
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      944
     ]
    },
    "os.path.join": {
     "line number": [
      32,
      33,
      34,
      36,
      38,
      40,
      42,
      44,
      46,
      48,
      49,
      50
     ]
    },
    "os.path.split": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_label.Label": {
  "data": {
   "shadows": "mne.label.Label"
  },
  "type": "import"
 },
 "mne.tests.test_label.SourceSpaces": {
  "data": {
   "shadows": "mne.source_space.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_label._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_label._assert_labels_equal": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      336,
      340
     ]
    },
    "zip": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label._blend_colors": {
  "data": {
   "shadows": "mne.label._blend_colors"
  },
  "type": "import"
 },
 "mne.tests.test_label._load_vert_pos": {
  "data": {
   "shadows": "mne.label._load_vert_pos"
  },
  "type": "import"
 },
 "mne.tests.test_label._n_colors": {
  "data": {
   "shadows": "mne.label._n_colors"
  },
  "type": "import"
 },
 "mne.tests.test_label._stc_to_label": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      102
     ]
    },
    "ValueError": {
     "line number": [
      104
     ]
    },
    "enumerate": {
     "line number": [
      110
     ]
    },
    "isinstance": {
     "line number": [
      88,
      93,
      101
     ]
    },
    "len": {
     "line number": [
      103,
      112,
      120,
      122,
      124,
      128,
      133
     ]
    },
    "mne.label.Label": {
     "line number": [
      136
     ]
    },
    "mne.label._n_colors": {
     "line number": [
      128
     ]
    },
    "mne.read_surface": {
     "line number": [
      96,
      97
     ]
    },
    "mne.source_estimate.mesh_edges": {
     "line number": [
      113
     ]
    },
    "mne.source_space.SourceSpaces": {
     "line number": [
      101
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      94,
      94,
      95
     ]
    },
    "mne.utils.get_subjects_dir": {
     "line number": [
      94
     ]
    },
    "numpy.any": {
     "line number": [
      118
     ]
    },
    "numpy.ones": {
     "line number": [
      133
     ]
    },
    "numpy.where": {
     "line number": [
      134
     ]
    },
    "os.path.join": {
     "line number": [
      95,
      96,
      97
     ]
    },
    "range": {
     "line number": [
      131
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      116
     ]
    },
    "str": {
     "line number": [
      88,
      93
     ]
    },
    "zip": {
     "line number": [
      111,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_labels_equal": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      157,
      158,
      162,
      163
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      164
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      152,
      154,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_label.data_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_label.fwd_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_label.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.tests.test_label.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.tests.test_label.grow_labels": {
  "data": {
   "shadows": "mne.grow_labels"
  },
  "type": "import"
 },
 "mne.tests.test_label.label_dir": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_rh_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.tests.test_label.labels_to_stc": {
  "data": {
   "shadows": "mne.labels_to_stc"
  },
  "type": "import"
 },
 "mne.tests.test_label.mesh_edges": {
  "data": {
   "shadows": "mne.source_estimate.mesh_edges"
  },
  "type": "import"
 },
 "mne.tests.test_label.morph_labels": {
  "data": {
   "shadows": "mne.morph_labels"
  },
  "type": "import"
 },
 "mne.tests.test_label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_label.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_label.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_label.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.tests.test_label.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.tests.test_label.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_label.random_parcellation": {
  "data": {
   "shadows": "mne.random_parcellation"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_label": {
  "data": {
   "shadows": "mne.read_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_labels_from_annot": {
  "data": {
   "shadows": "mne.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_label.real_label_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_label.real_label_rh_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_label.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_label.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_label.select_sources": {
  "data": {
   "shadows": "mne.label.select_sources"
  },
  "type": "import"
 },
 "mne.tests.test_label.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.tests.test_label.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_label.spatial_tris_adjacency": {
  "data": {
   "shadows": "mne.spatial_tris_adjacency"
  },
  "type": "import"
 },
 "mne.tests.test_label.split_label": {
  "data": {
   "shadows": "mne.split_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.src_bad_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_label.src_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_label.stc_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_label.stc_to_label": {
  "data": {
   "shadows": "mne.stc_to_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_label.test_annot_io": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      361
     ]
    },
    "len": {
     "line number": [
      372,
      372,
      393
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      343
     ]
    },
    "mne.label.Label": {
     "line number": [
      392
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      362,
      364,
      370,
      383
     ]
    },
    "mne.read_surface": {
     "line number": [
      391
     ]
    },
    "mne.tests.test_label.assert_labels_equal": {
     "line number": [
      374,
      388
     ]
    },
    "mne.tests.test_label.label_dir": {
     "line number": [
      351,
      353,
      355,
      356
     ]
    },
    "mne.tests.test_label.os": {
     "line number": [
      349,
      350,
      351,
      352,
      353,
      354,
      355,
      356,
      357,
      358,
      380,
      381,
      382
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      361
     ]
    },
    "mne.tests.test_label.shutil": {
     "line number": [
      355,
      356,
      357,
      358
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      349,
      350
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      347
     ]
    },
    "mne.write_labels_to_annot": {
     "line number": [
      369,
      378
     ]
    },
    "numpy.arange": {
     "line number": [
      393
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      393
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      372
     ]
    },
    "os.path.join": {
     "line number": [
      391
     ]
    },
    "sum": {
     "line number": [
      392
     ]
    },
    "zip": {
     "line number": [
      373,
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_copy": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "mne.read_label": {
     "line number": [
      169
     ]
    },
    "mne.tests.test_label.label_fname": {
     "line number": [
      169
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_grow_labels": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      782
     ]
    },
    "mne.grow_labels": {
     "line number": [
      790,
      803,
      805
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      790,
      803,
      805
     ]
    },
    "numpy.all": {
     "line number": [
      797
     ]
    },
    "numpy.any": {
     "line number": [
      796
     ]
    },
    "numpy.in1d": {
     "line number": [
      797
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      815
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      816,
      821
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      798,
      799,
      809,
      810,
      811,
      812
     ]
    },
    "zip": {
     "line number": [
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_addition": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      203,
      205,
      242
     ]
    },
    "ValueError": {
     "line number": [
      202,
      204
     ]
    },
    "len": {
     "line number": [
      196,
      196,
      209,
      209,
      209,
      210,
      230,
      230,
      230
     ]
    },
    "list": {
     "line number": [
      189,
      190,
      191
     ]
    },
    "mne.label.Label": {
     "line number": [
      192,
      193,
      194
     ]
    },
    "mne.label._blend_colors": {
     "line number": [
      224,
      239
     ]
    },
    "mne.tests.test_label.assert_labels_equal": {
     "line number": [
      213,
      214,
      234,
      235,
      238,
      246,
      247,
      248,
      249
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      202,
      203,
      204,
      205,
      242
     ]
    },
    "numpy.arange": {
     "line number": [
      188
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      187
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      210,
      223,
      240,
      241,
      251
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      196,
      209,
      211,
      221,
      222,
      224,
      229,
      230,
      231,
      239
     ]
    },
    "numpy.unique": {
     "line number": [
      223,
      223
     ]
    },
    "numpy.where": {
     "line number": [
      218,
      219,
      220
     ]
    },
    "range": {
     "line number": [
      189,
      190,
      191
     ]
    },
    "repr": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_center_of_mass": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      940
     ]
    },
    "TypeError": {
     "line number": [
      938
     ]
    },
    "ValueError": {
     "line number": [
      909,
      912,
      936
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      889
     ]
    },
    "mne.label.Label": {
     "line number": [
      896
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      901
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      892
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      903
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      909,
      912,
      936,
      938,
      940
     ]
    },
    "mne.tests.test_label.src_fname": {
     "line number": [
      903
     ]
    },
    "mne.tests.test_label.stc_fname": {
     "line number": [
      892
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      894,
      898,
      902,
      910,
      913,
      915,
      916,
      929,
      932,
      936,
      938,
      940
     ]
    },
    "numpy.argmin": {
     "line number": [
      925
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      928
     ]
    },
    "numpy.sum": {
     "line number": [
      925
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      895,
      899,
      915,
      916,
      929,
      932
     ]
    },
    "numpy.where": {
     "line number": [
      923
     ]
    },
    "zip": {
     "line number": [
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_fill_restrict": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      288
     ]
    },
    "int": {
     "line number": [
      294
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      254
     ]
    },
    "mne.label.Label": {
     "line number": [
      289,
      292
     ]
    },
    "mne.read_label": {
     "line number": [
      259
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      258
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      269,
      288,
      255
     ]
    },
    "mne.tests.test_label.real_label_fname": {
     "line number": [
      265,
      255
     ]
    },
    "mne.tests.test_label.src_fname": {
     "line number": [
      258
     ]
    },
    "mne.tests.test_label.v1_label_fname": {
     "line number": [
      255
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      265
     ]
    },
    "numpy.append": {
     "line number": [
      287
     ]
    },
    "numpy.array": {
     "line number": [
      294
     ]
    },
    "numpy.digitize": {
     "line number": [
      283
     ]
    },
    "numpy.in1d": {
     "line number": [
      276,
      280
     ]
    },
    "numpy.logical_not": {
     "line number": [
      278
     ]
    },
    "numpy.nonzero": {
     "line number": [
      277,
      278
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      279,
      280,
      284,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_io": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      308
     ]
    },
    "mne.read_label": {
     "line number": [
      312,
      321
     ]
    },
    "mne.tests.test_label.assert_labels_equal": {
     "line number": [
      322,
      330
     ]
    },
    "mne.tests.test_label.label_fname": {
     "line number": [
      312
     ]
    },
    "mne.tests.test_label.pickle": {
     "line number": [
      327,
      327,
      329
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      311
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      315
     ]
    },
    "open": {
     "line number": [
      326,
      328
     ]
    },
    "os.path.join": {
     "line number": [
      320,
      321,
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_io_and_time_course_estimates": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "len": {
     "line number": [
      304,
      305
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      297
     ]
    },
    "mne.read_label": {
     "line number": [
      301
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      300
     ]
    },
    "mne.tests.test_label.real_label_fname": {
     "line number": [
      301
     ]
    },
    "mne.tests.test_label.stc_fname": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_sign_flip": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": {
    "len": {
     "line number": [
      877,
      886
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      863
     ]
    },
    "mne.label.Label": {
     "line number": [
      867,
      878
     ]
    },
    "mne.label.label_sign_flip": {
     "line number": [
      876,
      880,
      885
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      866
     ]
    },
    "mne.tests.test_label.src_fname": {
     "line number": [
      866
     ]
    },
    "numpy.array": {
     "line number": [
      868,
      874,
      881
     ]
    },
    "numpy.dot": {
     "line number": [
      877,
      883,
      886
     ]
    },
    "numpy.nan": {
     "line number": [
      874,
      881,
      881
     ]
    },
    "numpy.sqrt": {
     "line number": [
      872,
      872,
      873,
      873
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      877,
      883,
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_subject": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "mne.read_label": {
     "line number": [
      177,
      180
     ]
    },
    "mne.tests.test_label.label_fname": {
     "line number": [
      177,
      180
     ]
    },
    "repr": {
     "line number": [
      179,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_labels_to_stc": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      432,
      434
     ]
    },
    "len": {
     "line number": [
      431
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      426
     ]
    },
    "mne.labels_to_stc": {
     "line number": [
      433,
      435,
      436
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      429
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      440
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      432,
      434
     ]
    },
    "mne.tests.test_label.stc_fname": {
     "line number": [
      440
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      430
     ]
    },
    "numpy.newaxis": {
     "line number": [
      433,
      433,
      435
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      431
     ]
    },
    "zip": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_morph": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      774,
      776
     ]
    },
    "ValueError": {
     "line number": [
      759
     ]
    },
    "len": {
     "line number": [
      764,
      764
     ]
    },
    "list": {
     "line number": [
      755
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      748
     ]
    },
    "mne.read_label": {
     "line number": [
      751
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      759,
      772,
      774,
      776,
      778,
      747
     ]
    },
    "mne.tests.test_label.real_label_fname": {
     "line number": [
      751
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      761,
      762,
      773,
      775,
      777,
      779
     ]
    },
    "numpy.arange": {
     "line number": [
      756,
      756,
      756,
      769,
      769
     ]
    },
    "numpy.in1d": {
     "line number": [
      763
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      766
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      768
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_morph_labels": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      418
     ]
    },
    "ValueError": {
     "line number": [
      415,
      422
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      396
     ]
    },
    "mne.label._load_vert_pos": {
     "line number": [
      419
     ]
    },
    "mne.morph_labels": {
     "line number": [
      404,
      416,
      423
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      400,
      402
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      415,
      418,
      422
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      401,
      403,
      405,
      416,
      419,
      423
     ]
    },
    "numpy.in1d": {
     "line number": [
      409,
      410
     ]
    },
    "zip": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_path": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_label.test_random_parcellation": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": {
    "len": {
     "line number": [
      838,
      847,
      853,
      853,
      860
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      824
     ]
    },
    "mne.random_parcellation": {
     "line number": [
      834
     ]
    },
    "mne.read_surface": {
     "line number": [
      857
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      834,
      855
     ]
    },
    "numpy.append": {
     "line number": [
      850
     ]
    },
    "numpy.arange": {
     "line number": [
      860
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      841
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      831
     ]
    },
    "numpy.sort": {
     "line number": [
      860
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      860
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      838,
      853
     ]
    },
    "numpy.unique": {
     "line number": [
      853
     ]
    },
    "os.path.join": {
     "line number": [
      855
     ]
    },
    "set": {
     "line number": [
      842
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_read_labels_from_annot": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      495
     ]
    },
    "ValueError": {
     "line number": [
      447,
      449
     ]
    },
    "len": {
     "line number": [
      484
     ]
    },
    "list": {
     "line number": [
      470
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      443
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      447,
      449,
      453,
      462,
      478,
      487,
      491,
      495
     ]
    },
    "mne.tests.test_label._assert_labels_equal": {
     "line number": [
      481
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      447,
      449,
      495
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      448,
      450,
      454,
      461,
      463,
      478,
      488,
      493,
      497
     ]
    },
    "os.path.join": {
     "line number": [
      461
     ]
    },
    "sorted": {
     "line number": [
      475
     ]
    },
    "zip": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_read_labels_from_annot_annot2labels": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      500
     ]
    },
    "mne.read_label": {
     "line number": [
      505
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      506
     ]
    },
    "mne.tests.test_label._assert_labels_equal": {
     "line number": [
      509
     ]
    },
    "mne.tests.test_label.glob": {
     "line number": [
      503
     ]
    },
    "mne.tests.test_label.label_dir": {
     "line number": [
      503
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_select_sources": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      960
     ]
    },
    "len": {
     "line number": [
      963
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      947
     ]
    },
    "mne.label.select_sources": {
     "line number": [
      961,
      967,
      970,
      978,
      983,
      988
     ]
    },
    "mne.read_label": {
     "line number": [
      956
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      951,
      962,
      968,
      971,
      979,
      984,
      989
     ]
    },
    "os.path.join": {
     "line number": [
      951
     ]
    },
    "range": {
     "line number": [
      969
     ]
    },
    "set": {
     "line number": [
      972,
      972,
      980,
      980,
      985,
      985
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_split_label": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      647
     ]
    },
    "len": {
     "line number": [
      687
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      639
     ]
    },
    "mne.read_label": {
     "line number": [
      682
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      642
     ]
    },
    "mne.split_label": {
     "line number": [
      651,
      670
     ]
    },
    "mne.tests.test_label.assert_labels_equal": {
     "line number": [
      662,
      666,
      667
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      647
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      643,
      651,
      665,
      670,
      682,
      686
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      638
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      676
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      654,
      655,
      679,
      687
     ]
    },
    "os.path.join": {
     "line number": [
      682
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_stc_to_label": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      712
     ]
    },
    "RuntimeWarning": {
     "line number": [
      706,
      740
     ]
    },
    "TypeError": {
     "line number": [
      725
     ]
    },
    "ValueError": {
     "line number": [
      710,
      719,
      727,
      729,
      731
     ]
    },
    "len": {
     "line number": [
      702,
      702,
      714,
      715,
      722,
      736,
      737,
      742,
      742
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      692
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      698
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      696,
      697
     ]
    },
    "mne.source_space.SourceSpaces": {
     "line number": [
      727
     ]
    },
    "mne.spatial_tris_adjacency": {
     "line number": [
      719,
      721
     ]
    },
    "mne.stc_to_label": {
     "line number": [
      707,
      710,
      712,
      725,
      727,
      729,
      731,
      733,
      741
     ]
    },
    "mne.tests.test_label._stc_to_label": {
     "line number": [
      700,
      701
     ]
    },
    "mne.tests.test_label.assert_labels_equal": {
     "line number": [
      704,
      744
     ]
    },
    "mne.tests.test_label.data_path": {
     "line number": [
      699
     ]
    },
    "mne.tests.test_label.fwd_fname": {
     "line number": [
      696
     ]
    },
    "mne.tests.test_label.os": {
     "line number": [
      699
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      706,
      710,
      712,
      719,
      725,
      727,
      729,
      731,
      740,
      691
     ]
    },
    "mne.tests.test_label.src_bad_fname": {
     "line number": [
      697
     ]
    },
    "mne.tests.test_label.stc_fname": {
     "line number": [
      698
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      726,
      728,
      730,
      732,
      735
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      693
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      702,
      714,
      715
     ]
    },
    "os.path.join": {
     "line number": [
      699
     ]
    },
    "zip": {
     "line number": [
      703,
      743
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.test_write_labels_to_annot": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      553
     ]
    },
    "TypeError": {
     "line number": [
      547
     ]
    },
    "ValueError": {
     "line number": [
      584,
      600,
      606,
      615,
      634
     ]
    },
    "len": {
     "line number": [
      625,
      625
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      512
     ]
    },
    "mne.read_labels_from_annot": {
     "line number": [
      517,
      557,
      559,
      573,
      575,
      623
     ]
    },
    "mne.tests.test_label.assert_labels_equal": {
     "line number": [
      567,
      581
     ]
    },
    "mne.tests.test_label.os": {
     "line number": [
      522,
      525
     ]
    },
    "mne.tests.test_label.pytest": {
     "line number": [
      547,
      553,
      584,
      600,
      606,
      615,
      634
     ]
    },
    "mne.tests.test_label.shutil": {
     "line number": [
      523,
      524
     ]
    },
    "mne.tests.test_label.subjects_dir": {
     "line number": [
      517,
      520,
      557,
      559,
      572,
      573,
      575,
      585,
      589,
      596,
      602,
      608,
      617,
      622,
      624
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      515
     ]
    },
    "mne.write_labels_to_annot": {
     "line number": [
      529,
      536,
      543,
      547,
      554,
      571,
      584,
      588,
      595,
      600,
      606,
      615,
      621,
      634
     ]
    },
    "numpy.all": {
     "line number": [
      629
     ]
    },
    "numpy.in1d": {
     "line number": [
      629
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      625,
      628
     ]
    },
    "os.path.exists": {
     "line number": [
      530,
      531,
      537,
      538,
      544,
      545
     ]
    },
    "os.path.join": {
     "line number": [
      520,
      521,
      523,
      524,
      525,
      528,
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_label.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_label.v1_label_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_label.write_labels_to_annot": {
  "data": {
   "shadows": "mne.write_labels_to_annot"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_line_endings.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings._assert_line_endings": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      55
     ]
    },
    "UnicodeDecodeError": {
     "line number": [
      47
     ]
    },
    "len": {
     "line number": [
      54,
      56
     ]
    },
    "list": {
     "line number": [
      34
     ]
    },
    "mne.tests.test_line_endings.os": {
     "line number": [
      38
     ]
    },
    "mne.tests.test_line_endings.skip_files": {
     "line number": [
      40
     ]
    },
    "mne.tests.test_line_endings.sys": {
     "line number": [
      32
     ]
    },
    "open": {
     "line number": [
      45
     ]
    },
    "os.path.join": {
     "line number": [
      42
     ]
    },
    "os.path.relpath": {
     "line number": [
      43
     ]
    },
    "os.path.splitext": {
     "line number": [
      40
     ]
    },
    "unittest.SkipTest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_line_endings._get_root_dir": {
  "data": {
   "shadows": "mne.utils._get_root_dir"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.skip_files": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.tests.test_line_endings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.test_line_endings": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      67,
      70
     ]
    },
    "mne.tests.test_line_endings._assert_line_endings": {
     "line number": [
      64,
      67,
      70,
      72
     ]
    },
    "mne.tests.test_line_endings.pytest": {
     "line number": [
      67,
      70
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      61
     ]
    },
    "mne.utils._get_root_dir": {
     "line number": [
      72
     ]
    },
    "open": {
     "line number": [
      62,
      65,
      68
     ]
    },
    "os.path.join": {
     "line number": [
      62,
      65,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_misc": {
  "data": {
   "symbols_in_volume": {
    "os.path.dirname": {
     "line number": [
      5
     ]
    },
    "os.path.join": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_misc.ave_fname": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mne.tests.test_misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_misc.parse_config": {
  "data": {
   "shadows": "mne.misc.parse_config"
  },
  "type": "import"
 },
 "mne.tests.test_misc.test_parse_ave": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "len": {
     "line number": [
      12
     ]
    },
    "mne.misc.parse_config": {
     "line number": [
      11
     ]
    },
    "mne.tests.test_misc.ave_fname": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      33
     ]
    },
    "mne.tests.test_morph.data_path": {
     "line number": [
      34,
      35,
      46
     ]
    },
    "mne.tests.test_morph.sample_dir": {
     "line number": [
      36,
      37,
      38,
      40,
      42,
      44,
      48,
      56
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      49,
      50,
      51,
      52,
      53,
      55
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      814
     ]
    },
    "os.path.join": {
     "line number": [
      34,
      35,
      36,
      37,
      38,
      40,
      42,
      44,
      46,
      48,
      49,
      50,
      51,
      52,
      53,
      55,
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_morph.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.SourceMorph": {
  "data": {
   "shadows": "mne.SourceMorph"
  },
  "type": "import"
 },
 "mne.tests.test_morph.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph._add_interpolator": {
  "data": {
   "shadows": "mne.source_space._add_interpolator"
  },
  "type": "import"
 },
 "mne.tests.test_morph._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.tests.test_morph._get_atlas_values": {
  "data": {
   "shadows": "mne.source_space._get_atlas_values"
  },
  "type": "import"
 },
 "mne.tests.test_morph._get_img_fdata": {
  "data": {
   "shadows": "mne.fixes._get_img_fdata"
  },
  "type": "import"
 },
 "mne.tests.test_morph._get_mri_info_data": {
  "data": {
   "shadows": "mne.source_space._get_mri_info_data"
  },
  "type": "import"
 },
 "mne.tests.test_morph._mixed_morph_srcs": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      751
     ]
    },
    "ValueError": {
     "line number": [
      746
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      728
     ]
    },
    "mne.tests.test_morph.fname_aseg": {
     "line number": [
      735
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      732,
      734,
      739,
      741,
      747,
      752
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      746,
      751,
      728
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      733,
      736,
      740,
      743,
      749,
      754
     ]
    },
    "os.path.join": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph._real_vec_stc": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      62
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      60
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      61
     ]
    },
    "mne.tests.test_morph.fname_evoked": {
     "line number": [
      61
     ]
    },
    "mne.tests.test_morph.fname_inv_surf": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_power_preserved": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      213,
      214
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      213,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.tests.test_morph.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_morph.compute_source_morph": {
  "data": {
   "shadows": "mne.compute_source_morph"
  },
  "type": "import"
 },
 "mne.tests.test_morph.data_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_aseg": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_aseg_fs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_brain": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_evoked": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_fmorph": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_fs_vol": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_fwd_vol": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_inv_surf": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_inv_vol": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_smorph": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_stc": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_t1": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_trans": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_vol": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_vol_w": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_morph.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.tests.test_morph.grade_to_vertices": {
  "data": {
   "shadows": "mne.grade_to_vertices"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_morph.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_morph.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_morph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_morph.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_morph.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_freesurfer_lut": {
  "data": {
   "shadows": "mne.read_freesurfer_lut"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_source_morph": {
  "data": {
   "shadows": "mne.read_source_morph"
  },
  "type": "import"
 },
 "mne.tests.test_morph.requires_dipy": {
  "data": {
   "shadows": "mne.utils.requires_dipy"
  },
  "type": "import"
 },
 "mne.tests.test_morph.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_morph.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_morph.resample_from_to": {
  "data": {
   "shadows": "nibabel.processing.resample_from_to"
  },
  "type": "import"
 },
 "mne.tests.test_morph.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_morph.sample_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_morph.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_morph.subjects_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_morph.test_mixed_source_morph": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      789
     ]
    },
    "ValueError": {
     "line number": [
      798
     ]
    },
    "bool": {
     "line number": [
      783,
      787,
      802
     ]
    },
    "klass": {
     "line number": [
      778
     ]
    },
    "len": {
     "line number": [
      771
     ]
    },
    "mne.fixes._get_img_fdata": {
     "line number": [
      782,
      785,
      786,
      800
     ]
    },
    "mne.read_freesurfer_lut": {
     "line number": [
      767
     ]
    },
    "mne.source_space._get_atlas_values": {
     "line number": [
      781,
      797
     ]
    },
    "mne.source_space._get_mri_info_data": {
     "line number": [
      779,
      795
     ]
    },
    "mne.tests.test_morph._mixed_morph_srcs": {
     "line number": [
      765
     ]
    },
    "mne.tests.test_morph.fname_aseg": {
     "line number": [
      779,
      784
     ]
    },
    "mne.tests.test_morph.fname_aseg_fs": {
     "line number": [
      795
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      774
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      789,
      798,
      761
     ]
    },
    "mne.utils.requires_dipy": {
     "line number": [
      760
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      759
     ]
    },
    "nibabel.load": {
     "line number": [
      784
     ]
    },
    "numpy.concatenate": {
     "line number": [
      780,
      796,
      808
     ]
    },
    "numpy.in1d": {
     "line number": [
      781,
      785,
      797
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      811
     ]
    },
    "numpy.zeros": {
     "line number": [
      772
     ]
    },
    "sum": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_morph_stc_dense": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      569
     ]
    },
    "ValueError": {
     "line number": [
      592,
      598,
      604,
      609
     ]
    },
    "len": {
     "line number": [
      553,
      584,
      585
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      556,
      570,
      578,
      593,
      599,
      605,
      610
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      542
     ]
    },
    "mne.grade_to_vertices": {
     "line number": [
      565
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      547,
      548
     ]
    },
    "mne.tests.test_morph._real_vec_stc": {
     "line number": [
      577
     ]
    },
    "mne.tests.test_morph.fname_fmorph": {
     "line number": [
      548
     ]
    },
    "mne.tests.test_morph.fname_smorph": {
     "line number": [
      547
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      569,
      592,
      598,
      604,
      609,
      541
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      558,
      566,
      572,
      579,
      595,
      601,
      606,
      612
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      563
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      559
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_morph_stc_sparse": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      655,
      659
     ]
    },
    "len": {
     "line number": [
      633,
      633,
      634,
      634,
      648,
      648,
      649,
      649
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      627,
      642,
      656,
      660
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      615
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      622
     ]
    },
    "mne.tests.test_morph.fname_smorph": {
     "line number": [
      622
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      655,
      659
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      629,
      644,
      658,
      662
     ]
    },
    "numpy.array": {
     "line number": [
      639
     ]
    },
    "numpy.int64": {
     "line number": [
      639
     ]
    },
    "numpy.sort": {
     "line number": [
      631,
      632,
      646,
      647
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      631,
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_sourcemorph_consistency": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "mne.SourceMorph.__init__": {
     "line number": [
      67
     ]
    },
    "mne.fixes._get_args": {
     "line number": [
      67
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_sparse_morph": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "len": {
     "line number": [
      95,
      97,
      109,
      111
     ]
    },
    "list": {
     "line number": [
      90,
      105
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      78
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      85,
      100
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      71
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      79,
      82
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      80,
      83,
      87,
      102
     ]
    },
    "numpy.arange": {
     "line number": [
      75,
      76,
      95,
      109
     ]
    },
    "numpy.argmin": {
     "line number": [
      94,
      108
     ]
    },
    "numpy.concatenate": {
     "line number": [
      98,
      112
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      74
     ]
    },
    "numpy.sort": {
     "line number": [
      75,
      76
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      98,
      112
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      95,
      109
     ]
    },
    "os.path.join": {
     "line number": [
      79,
      82
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      93,
      107
     ]
    },
    "zip": {
     "line number": [
      91,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_surface_source_morph_round_trip": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      190
     ]
    },
    "complex": {
     "line number": [
      186,
      179
     ]
    },
    "dict": {
     "line number": [
      184
     ]
    },
    "float": {
     "line number": [
      178,
      180
     ]
    },
    "len": {
     "line number": [
      196,
      197,
      201
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      191,
      194,
      199
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      176
     ]
    },
    "mne.tests.test_morph.assert_power_preserved": {
     "line number": [
      206
     ]
    },
    "mne.tests.test_morph.fname_smorph": {
     "line number": [
      185
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      185
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      190,
      193,
      177
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      184
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      189
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      203
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      188
     ]
    },
    "str": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_surface_vector_source_morph": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      270
     ]
    },
    "ValueError": {
     "line number": [
      245
     ]
    },
    "all": {
     "line number": [
      260
     ]
    },
    "dict": {
     "line number": [
      239
     ]
    },
    "isinstance": {
     "line number": [
      239,
      240,
      241,
      243,
      249,
      250,
      266
     ]
    },
    "list": {
     "line number": [
      240
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      243,
      249,
      266
     ]
    },
    "mne.SourceMorph": {
     "line number": [
      241
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      250
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      233
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      223
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      226
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      228,
      269
     ]
    },
    "mne.read_source_morph": {
     "line number": [
      258
     ]
    },
    "mne.tests.test_morph._real_vec_stc": {
     "line number": [
      231
     ]
    },
    "mne.tests.test_morph.fname_inv_surf": {
     "line number": [
      226
     ]
    },
    "mne.tests.test_morph.fname_smorph": {
     "line number": [
      228
     ]
    },
    "mne.tests.test_morph.fname_vol_w": {
     "line number": [
      269
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      245,
      270
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      234
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      222
     ]
    },
    "repr": {
     "line number": [
      253
     ]
    },
    "sorted": {
     "line number": [
      261,
      262
     ]
    },
    "zip": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_volume_labels_morph": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      724
     ]
    },
    "bool": {
     "line number": [
      701,
      718
     ]
    },
    "len": {
     "line number": [
      681,
      689
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      666
     ]
    },
    "mne.fixes._get_img_fdata": {
     "line number": [
      702
     ]
    },
    "mne.make_ad_hoc_cov": {
     "line number": [
      695
     ]
    },
    "mne.make_forward_solution": {
     "line number": [
      693
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      692
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      697
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      695
     ]
    },
    "mne.read_freesurfer_lut": {
     "line number": [
      683
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      686
     ]
    },
    "mne.source_space.get_volume_labels_from_aseg": {
     "line number": [
      684
     ]
    },
    "mne.tests.test_morph.fname_aseg": {
     "line number": [
      702
     ]
    },
    "mne.tests.test_morph.fname_evoked": {
     "line number": [
      678
     ]
    },
    "mne.tests.test_morph.fname_trans": {
     "line number": [
      693
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      678
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      724,
      667
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      682,
      687
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      665
     ]
    },
    "nibabel.load": {
     "line number": [
      702
     ]
    },
    "numpy.array": {
     "line number": [
      701,
      718
     ]
    },
    "numpy.in1d": {
     "line number": [
      703
     ]
    },
    "os.path.join": {
     "line number": [
      682
     ]
    },
    "range": {
     "line number": [
      713
     ]
    },
    "slice": {
     "line number": [
      669,
      670,
      671
     ]
    },
    "sorted": {
     "line number": [
      684
     ]
    },
    "sum": {
     "line number": [
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_volume_source_morph": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      337,
      348
     ]
    },
    "RuntimeWarning": {
     "line number": [
      296
     ]
    },
    "TypeError": {
     "line number": [
      286,
      413,
      429
     ]
    },
    "ValueError": {
     "line number": [
      295,
      302,
      305,
      371,
      415,
      417,
      419,
      425,
      434,
      453
     ]
    },
    "all": {
     "line number": [
      399
     ]
    },
    "dict": {
     "line number": [
      310
     ]
    },
    "isinstance": {
     "line number": [
      361,
      366,
      378,
      384,
      392,
      396,
      407
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      396,
      446
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      357,
      361
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      287,
      297,
      303,
      306,
      311,
      332,
      338,
      416,
      420,
      435,
      440
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      278
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      282
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      330
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      283,
      428
     ]
    },
    "mne.read_source_morph": {
     "line number": [
      345,
      349
     ]
    },
    "mne.tests.test_morph.fname_fwd_vol": {
     "line number": [
      330
     ]
    },
    "mne.tests.test_morph.fname_inv_vol": {
     "line number": [
      282,
      312
     ]
    },
    "mne.tests.test_morph.fname_stc": {
     "line number": [
      428
     ]
    },
    "mne.tests.test_morph.fname_vol_w": {
     "line number": [
      283
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      286,
      295,
      296,
      302,
      305,
      337,
      348,
      371,
      413,
      415,
      417,
      419,
      425,
      429,
      434,
      453,
      277
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      297,
      303,
      306,
      312,
      333,
      339,
      421,
      437,
      442
     ]
    },
    "mne.utils.requires_dipy": {
     "line number": [
      276
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      274
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      275
     ]
    },
    "nibabel.Nifti1Image": {
     "line number": [
      378,
      384,
      392
     ]
    },
    "nibabel.Nifti2Image": {
     "line number": [
      367,
      410
     ]
    },
    "numpy.array_equal": {
     "line number": [
      354
     ]
    },
    "numpy.eye": {
     "line number": [
      439
     ]
    },
    "numpy.newaxis": {
     "line number": [
      358
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      363
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      324,
      445
     ]
    },
    "numpy.tile": {
     "line number": [
      358
     ]
    },
    "range": {
     "line number": [
      362
     ]
    },
    "repr": {
     "line number": [
      404
     ]
    },
    "sorted": {
     "line number": [
      400,
      401
     ]
    },
    "tuple": {
     "line number": [
      319,
      321
     ]
    },
    "zip": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_volume_source_morph_round_trip": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      535,
      536
     ]
    },
    "complex": {
     "line number": [
      504,
      465
     ]
    },
    "dict": {
     "line number": [
      472,
      496
     ]
    },
    "float": {
     "line number": [
      463,
      464
     ]
    },
    "int": {
     "line number": [
      502
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      506
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      498,
      500
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      461
     ]
    },
    "mne.fixes._get_img_fdata": {
     "line number": [
      527,
      532,
      533
     ]
    },
    "mne.source_space._add_interpolator": {
     "line number": [
      491
     ]
    },
    "mne.tests.test_morph.assert_power_preserved": {
     "line number": [
      523
     ]
    },
    "mne.tests.test_morph.fname_fs_vol": {
     "line number": [
      488
     ]
    },
    "mne.tests.test_morph.fname_vol": {
     "line number": [
      474
     ]
    },
    "mne.tests.test_morph.mne": {
     "line number": [
      474,
      488
     ]
    },
    "mne.tests.test_morph.pytest": {
     "line number": [
      460,
      462
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      497,
      526
     ]
    },
    "mne.utils.requires_dipy": {
     "line number": [
      459
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      457
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      458
     ]
    },
    "nibabel.Nifti1Image": {
     "line number": [
      531
     ]
    },
    "nibabel.load": {
     "line number": [
      526
     ]
    },
    "nibabel.processing.resample_from_to": {
     "line number": [
      533
     ]
    },
    "numpy.abs": {
     "line number": [
      532
     ]
    },
    "numpy.argmax": {
     "line number": [
      508
     ]
    },
    "numpy.array": {
     "line number": [
      490,
      520
     ]
    },
    "numpy.eye": {
     "line number": [
      503,
      517
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      510
     ]
    },
    "numpy.linspace": {
     "line number": [
      502
     ]
    },
    "numpy.mean": {
     "line number": [
      511
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      516
     ]
    },
    "os.path.join": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_xhemi_morph": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "len": {
     "line number": [
      133,
      135,
      149
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      123,
      126,
      137,
      154,
      165
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      115
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      118
     ]
    },
    "mne.tests.test_morph.fname_stc": {
     "line number": [
      118
     ]
    },
    "mne.tests.test_morph.subjects_dir": {
     "line number": [
      125,
      129,
      139,
      156,
      168
     ]
    },
    "numpy.arange": {
     "line number": [
      148
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      172
     ]
    },
    "numpy.in1d": {
     "line number": [
      153
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      171
     ]
    },
    "range": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_morph.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_ola": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_ola._COLA": {
  "data": {
   "shadows": "mne._ola._COLA"
  },
  "type": "import"
 },
 "mne.tests.test_ola._Interp2": {
  "data": {
   "shadows": "mne._ola._Interp2"
  },
  "type": "import"
 },
 "mne.tests.test_ola._Storer": {
  "data": {
   "shadows": "mne._ola._Storer"
  },
  "type": "import"
 },
 "mne.tests.test_ola.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_ola.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_ola.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_ola.test_cola": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "min": {
     "line number": [
      113
     ]
    },
    "mne._ola._COLA": {
     "line number": [
      108
     ]
    },
    "mne._ola._Storer": {
     "line number": [
      107
     ]
    },
    "mne.tests.test_ola.pytest": {
     "line number": [
      81
     ]
    },
    "numpy.newaxis": {
     "line number": [
      94,
      95
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      85
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      117
     ]
    },
    "range": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_ola.test_cola.processor": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.tests.test_ola.test_interp_2pt": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "mne._ola._Interp2": {
     "line number": [
      26,
      29,
      40,
      55,
      67,
      74
     ]
    },
    "numpy.arange": {
     "line number": [
      35
     ]
    },
    "numpy.array": {
     "line number": [
      22,
      35,
      48,
      64,
      65,
      72
     ]
    },
    "numpy.concatenate": {
     "line number": [
      27,
      31,
      42,
      43,
      56,
      68
     ]
    },
    "numpy.cos": {
     "line number": [
      51
     ]
    },
    "numpy.full": {
     "line number": [
      23,
      49,
      77
     ]
    },
    "numpy.hanning": {
     "line number": [
      63
     ]
    },
    "numpy.linspace": {
     "line number": [
      37,
      38,
      51
     ]
    },
    "numpy.newaxis": {
     "line number": [
      35,
      35,
      37,
      37
     ]
    },
    "numpy.pi": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      28,
      32,
      44,
      45,
      57,
      59,
      69,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      32
     ]
    },
    "mne.tests.test_proj.base_dir": {
     "line number": [
      26,
      27,
      28,
      29,
      30
     ]
    },
    "mne.tests.test_proj.sample_path": {
     "line number": [
      33,
      34,
      37,
      38
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      408
     ]
    },
    "os.path.dirname": {
     "line number": [
      25
     ]
    },
    "os.path.join": {
     "line number": [
      25,
      26,
      27,
      28,
      29,
      30,
      32,
      33,
      34,
      37,
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_proj.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_proj.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_proj._check_warnings": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "all": {
     "line number": [
      95
     ]
    },
    "dict": {
     "line number": [
      92
     ]
    },
    "events": {
     "line number": [
      92
     ]
    },
    "len": {
     "line number": [
      94
     ]
    },
    "mne.Epochs": {
     "line number": [
      92
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      91
     ]
    },
    "str": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj._compute_rank_int": {
  "data": {
   "shadows": "mne.rank._compute_rank_int"
  },
  "type": "import"
 },
 "mne.tests.test_proj._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj._needs_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._needs_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.activate_proj": {
  "data": {
   "shadows": "mne.io.proj.activate_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_proj.bads_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_proj.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_proj.compute_proj_epochs": {
  "data": {
   "shadows": "mne.compute_proj_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_whitener": {
  "data": {
   "shadows": "mne.cov.compute_whitener"
  },
  "type": "import"
 },
 "mne.tests.test_proj.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_proj.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.tests.test_proj.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_proj.ecg_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_proj.eog_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_proj.event_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_proj.fwd_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.tests.test_proj.make_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.proj.make_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.tests.test_proj.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_proj.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_proj.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_proj.proj_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_proj.proj_gz_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_proj.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_proj.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_proj.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_proj": {
  "data": {
   "shadows": "mne.proj.read_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_proj.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.tests.test_proj.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_proj.sample_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_proj.sensitivity_map": {
  "data": {
   "shadows": "mne.sensitivity_map"
  },
  "type": "import"
 },
 "mne.tests.test_proj.sensmap_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_proj.test_bad_proj": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      63
     ]
    },
    "events": {
     "line number": [
      44,
      48,
      51,
      54,
      58,
      60
     ]
    },
    "len": {
     "line number": [
      64,
      66,
      68,
      81,
      84
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      86
     ]
    },
    "mne.cov.regularize": {
     "line number": [
      86
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      43,
      56,
      62,
      75
     ]
    },
    "mne.pick_types": {
     "line number": [
      45,
      78
     ]
    },
    "mne.read_events": {
     "line number": [
      44
     ]
    },
    "mne.tests.test_proj._check_warnings": {
     "line number": [
      48,
      51,
      54,
      58,
      60
     ]
    },
    "mne.tests.test_proj.event_fname": {
     "line number": [
      44
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      63
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      43,
      56,
      62,
      75
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      66,
      68
     ]
    },
    "numpy.zeros": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_compute_proj_epochs": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      216,
      218
     ]
    },
    "TypeError": {
     "line number": [
      223,
      225
     ]
    },
    "all": {
     "line number": [
      209
     ]
    },
    "bool": {
     "line number": [
      178
     ]
    },
    "events": {
     "line number": [
      153,
      157
     ]
    },
    "len": {
     "line number": [
      167,
      167,
      203
     ]
    },
    "mne.Epochs": {
     "line number": [
      157
     ]
    },
    "mne.compute_proj_epochs": {
     "line number": [
      161,
      207
     ]
    },
    "mne.compute_proj_evoked": {
     "line number": [
      202
     ]
    },
    "mne.io.proj.activate_proj": {
     "line number": [
      189,
      210
     ]
    },
    "mne.io.proj.make_projector": {
     "line number": [
      190,
      211
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      152
     ]
    },
    "mne.pick_types": {
     "line number": [
      155
     ]
    },
    "mne.proj.read_proj": {
     "line number": [
      165,
      200,
      219
     ]
    },
    "mne.proj.write_proj": {
     "line number": [
      162,
      217,
      224,
      226
     ]
    },
    "mne.read_events": {
     "line number": [
      153
     ]
    },
    "mne.tests.test_proj.event_fname": {
     "line number": [
      153
     ]
    },
    "mne.tests.test_proj.proj_fname": {
     "line number": [
      163,
      200
     ]
    },
    "mne.tests.test_proj.proj_gz_fname": {
     "line number": [
      163
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      216,
      218,
      223,
      225
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      152
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      182
     ]
    },
    "numpy.ones": {
     "line number": [
      178
     ]
    },
    "numpy.sign": {
     "line number": [
      174,
      175
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      212
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      183,
      185
     ]
    },
    "os.path.join": {
     "line number": [
      162,
      164,
      198,
      215,
      222
     ]
    },
    "str": {
     "line number": [
      149
     ]
    },
    "zip": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_compute_proj_raw": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      238,
      254,
      281
     ]
    },
    "copy.deepcopy": {
     "line number": [
      271
     ]
    },
    "len": {
     "line number": [
      283,
      289,
      291
     ]
    },
    "mne.compute_proj_raw": {
     "line number": [
      239,
      255,
      273,
      282
     ]
    },
    "mne.io.proj.activate_proj": {
     "line number": [
      243,
      259,
      275
     ]
    },
    "mne.io.proj.make_projector": {
     "line number": [
      244,
      260,
      276,
      287
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      235
     ]
    },
    "mne.tests.test_proj.bads_fname": {
     "line number": [
      280
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      238,
      254,
      281,
      229
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      235
     ]
    },
    "numpy.eye": {
     "line number": [
      289
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      277,
      289
     ]
    },
    "os.path.join": {
     "line number": [
      251,
      267
     ]
    },
    "str": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_has_eeg_average_ref_proj": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "mne.io.read_raw_fif": {
     "line number": [
      356
     ]
    },
    "mne.proj._has_eeg_average_ref_proj": {
     "line number": [
      354,
      358
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_make_eeg_average_ref_proj": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      341
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      326
     ]
    },
    "mne.pick_types": {
     "line number": [
      327
     ]
    },
    "mne.proj._has_eeg_average_ref_proj": {
     "line number": [
      345,
      347,
      349
     ]
    },
    "mne.proj.make_eeg_average_ref_proj": {
     "line number": [
      333,
      341
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      341
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      326
     ]
    },
    "numpy.all": {
     "line number": [
      330
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_needs_eeg_average_ref_proj": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "mne.io.proj._needs_eeg_average_ref_proj": {
     "line number": [
      364,
      367,
      373,
      378
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      363,
      370,
      376
     ]
    },
    "mne.pick_types": {
     "line number": [
      371
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      363,
      370,
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_proj_raw_duration": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "int": {
     "line number": [
      305
     ]
    },
    "len": {
     "line number": [
      307,
      312,
      312,
      312
     ]
    },
    "mne.compute_proj_raw": {
     "line number": [
      309,
      310,
      311
     ]
    },
    "mne.create_info": {
     "line number": [
      303
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      303
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      294,
      295
     ]
    },
    "numpy.concatenate": {
     "line number": [
      319
     ]
    },
    "numpy.dot": {
     "line number": [
      302
     ]
    },
    "numpy.pi": {
     "line number": [
      294
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      320
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      299
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      316
     ]
    },
    "round": {
     "line number": [
      305
     ]
    },
    "scipy.linalg.subspace_angles": {
     "line number": [
      320
     ]
    },
    "zip": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_sensitivity_maps": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      140
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      102
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      98
     ]
    },
    "mne.proj.make_eeg_average_ref_proj": {
     "line number": [
      136
     ]
    },
    "mne.proj.read_proj": {
     "line number": [
      103,
      104
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      101,
      143
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      107,
      115,
      121,
      130
     ]
    },
    "mne.sensitivity_map": {
     "line number": [
      108,
      116,
      122,
      131,
      136,
      139,
      140,
      144
     ]
    },
    "mne.tests.test_proj.ecg_fname": {
     "line number": [
      104
     ]
    },
    "mne.tests.test_proj.eog_fname": {
     "line number": [
      103
     ]
    },
    "mne.tests.test_proj.fwd_fname": {
     "line number": [
      101
     ]
    },
    "mne.tests.test_proj.pytest": {
     "line number": [
      139,
      140
     ]
    },
    "mne.tests.test_proj.sample_path": {
     "line number": [
      142
     ]
    },
    "mne.tests.test_proj.sensmap_fname": {
     "line number": [
      107,
      115,
      121,
      130
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      110,
      118,
      124,
      133
     ]
    },
    "os.path.join": {
     "line number": [
      142
     ]
    },
    "zip": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_sss_proj": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "len": {
     "line number": [
      388,
      394
     ]
    },
    "mne.compute_proj_raw": {
     "line number": [
      391
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      396
     ]
    },
    "mne.cov.compute_whitener": {
     "line number": [
      397
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      383
     ]
    },
    "mne.preprocessing.maxwell_filter": {
     "line number": [
      386
     ]
    },
    "mne.rank._compute_rank_int": {
     "line number": [
      395
     ]
    },
    "mne.tests.test_proj.raw_fname": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_proj.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_proj.write_proj": {
  "data": {
   "shadows": "mne.proj.write_proj"
  },
  "type": "import"
 },
 "mne.tests.test_rank": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      28
     ]
    },
    "mne.tests.test_rank.base_dir": {
     "line number": [
      22,
      23,
      24,
      25,
      26
     ]
    },
    "mne.tests.test_rank.testing_path": {
     "line number": [
      29,
      30
     ]
    },
    "os.path.dirname": {
     "line number": [
      21
     ]
    },
    "os.path.join": {
     "line number": [
      21,
      22,
      23,
      24,
      25,
      26,
      29,
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_rank._compute_rank_int": {
  "data": {
   "shadows": "mne.rank._compute_rank_int"
  },
  "type": "import"
 },
 "mne.tests.test_rank._estimate_rank_raw": {
  "data": {
   "shadows": "mne.rank._estimate_rank_raw"
  },
  "type": "import"
 },
 "mne.tests.test_rank._get_channel_types": {
  "data": {
   "shadows": "mne.io.pick._get_channel_types"
  },
  "type": "import"
 },
 "mne.tests.test_rank._get_rank_sss": {
  "data": {
   "shadows": "mne.rank._get_rank_sss"
  },
  "type": "import"
 },
 "mne.tests.test_rank._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_rank._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.tests.test_rank.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_rank.ave_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_rank.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.tests.test_rank.compute_proj_raw": {
  "data": {
   "shadows": "mne.proj.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_rank.compute_rank": {
  "data": {
   "shadows": "mne.rank.compute_rank"
  },
  "type": "import"
 },
 "mne.tests.test_rank.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_rank.cov_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.tests.test_rank.ctf_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_rank.data_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_rank.estimate_rank": {
  "data": {
   "shadows": "mne.rank.estimate_rank"
  },
  "type": "import"
 },
 "mne.tests.test_rank.hp_fif_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_rank.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.tests.test_rank.mf_fif_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_rank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_rank.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_rank.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.tests.test_rank.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_rank.prepare_noise_cov": {
  "data": {
   "shadows": "mne.cov.prepare_noise_cov"
  },
  "type": "import"
 },
 "mne.tests.test_rank.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_rank.raw_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.tests.test_rank.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_rank.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_rank.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_rank.test_cov_rank_estimation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      145
     ]
    },
    "itertools.product": {
     "line number": [
      140
     ]
    },
    "len": {
     "line number": [
      158,
      161,
      170
     ]
    },
    "list": {
     "line number": [
      140
     ]
    },
    "mne.compute_raw_covariance": {
     "line number": [
      118,
      119,
      121,
      122
     ]
    },
    "mne.cov.prepare_noise_cov": {
     "line number": [
      106
     ]
    },
    "mne.io.pick._get_channel_types": {
     "line number": [
      166
     ]
    },
    "mne.io.proj._has_eeg_average_ref_proj": {
     "line number": [
      112,
      115
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      111,
      114
     ]
    },
    "mne.pick_info": {
     "line number": [
      127,
      134,
      154
     ]
    },
    "mne.pick_types": {
     "line number": [
      124,
      125,
      128,
      130,
      132,
      135,
      136,
      138
     ]
    },
    "mne.proj.compute_proj_raw": {
     "line number": [
      116
     ]
    },
    "mne.rank._get_rank_sss": {
     "line number": [
      172
     ]
    },
    "mne.rank.compute_rank": {
     "line number": [
      149
     ]
    },
    "mne.read_cov": {
     "line number": [
      103
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      101
     ]
    },
    "mne.tests.test_rank.ave_fname": {
     "line number": [
      101
     ]
    },
    "mne.tests.test_rank.cov_fname": {
     "line number": [
      103
     ]
    },
    "mne.tests.test_rank.hp_fif_fname": {
     "line number": [
      114
     ]
    },
    "mne.tests.test_rank.pytest": {
     "line number": [
      92,
      93,
      94
     ]
    },
    "mne.tests.test_rank.raw_fname": {
     "line number": [
      111
     ]
    },
    "set": {
     "line number": [
      158,
      159,
      161,
      162
     ]
    },
    "sum": {
     "line number": [
      151,
      157,
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_rank.test_estimate_rank": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      40
     ]
    },
    "mne.rank.estimate_rank": {
     "line number": [
      36,
      39,
      40
     ]
    },
    "mne.tests.test_rank.pytest": {
     "line number": [
      40
     ]
    },
    "numpy.eye": {
     "line number": [
      35
     ]
    },
    "numpy.ones": {
     "line number": [
      37
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_rank.test_maxfilter_get_rank": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      220
     ]
    },
    "ValueError": {
     "line number": [
      218
     ]
    },
    "dict": {
     "line number": [
      242,
      244
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      190
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      203
     ]
    },
    "mne.proj.compute_proj_raw": {
     "line number": [
      212
     ]
    },
    "mne.rank._compute_rank_int": {
     "line number": [
      245,
      252,
      257
     ]
    },
    "mne.rank._estimate_rank_raw": {
     "line number": [
      219,
      221,
      232,
      235,
      241
     ]
    },
    "mne.rank._get_rank_sss": {
     "line number": [
      207
     ]
    },
    "mne.tests.test_rank.hp_fif_fname": {
     "line number": [
      250,
      191
     ]
    },
    "mne.tests.test_rank.mf_fif_fname": {
     "line number": [
      224,
      237,
      192
     ]
    },
    "mne.tests.test_rank.pytest": {
     "line number": [
      218,
      220,
      191,
      193,
      196
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_rank.test_raw_rank_estimation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      60,
      62,
      50
     ]
    },
    "len": {
     "line number": [
      72,
      73,
      75,
      85
     ]
    },
    "min": {
     "line number": [
      64
     ]
    },
    "mne.io.pick._picks_by_type": {
     "line number": [
      65
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      63
     ]
    },
    "mne.proj.compute_proj_raw": {
     "line number": [
      83
     ]
    },
    "mne.rank._estimate_rank_raw": {
     "line number": [
      79,
      87
     ]
    },
    "mne.rank._get_rank_sss": {
     "line number": [
      78
     ]
    },
    "mne.tests.test_rank.ctf_fname": {
     "line number": [
      47,
      48
     ]
    },
    "mne.tests.test_rank.hp_fif_fname": {
     "line number": [
      46
     ]
    },
    "mne.tests.test_rank.pytest": {
     "line number": [
      43,
      44,
      49,
      51
     ]
    },
    "mne.tests.test_rank.raw_fname": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_rank.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_rank.testing_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_report": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      28
     ]
    },
    "mne.tests.test_report.base_dir": {
     "line number": [
      44
     ]
    },
    "mne.tests.test_report.data_dir": {
     "line number": [
      29,
      30,
      32
     ]
    },
    "mne.tests.test_report.report_dir": {
     "line number": [
      31,
      33,
      34,
      35,
      36,
      37,
      38
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      40
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      498
     ]
    },
    "os.path.dirname": {
     "line number": [
      42
     ]
    },
    "os.path.join": {
     "line number": [
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      40,
      42,
      44
     ]
    },
    "os.path.realpath": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_report.Bunch": {
  "data": {
   "shadows": "mne.utils.Bunch"
  },
  "type": "import"
 },
 "mne.tests.test_report.DATE_NONE": {
  "data": {
   "shadows": "mne.io.write.DATE_NONE"
  },
  "type": "import"
 },
 "mne.tests.test_report.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_report.Report": {
  "data": {
   "shadows": "mne.report.Report"
  },
  "type": "import"
 },
 "mne.tests.test_report._ReportScraper": {
  "data": {
   "shadows": "mne.report._ReportScraper"
  },
  "type": "import"
 },
 "mne.tests.test_report._get_example_figures": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "matplotlib.pyplot.plot": {
     "line number": [
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_report.base_dir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_report.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.tests.test_report.cov_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_report.data_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_report.event_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_report.evoked_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_report.fwd_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_report.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.tests.test_report.inv_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_report.mri_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_report.ms_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_report.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_report.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_report.open_report": {
  "data": {
   "shadows": "mne.report.open_report"
  },
  "type": "import"
 },
 "mne.tests.test_report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_report.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "mne.tests.test_report.plot_alignment": {
  "data": {
   "shadows": "mne.viz.plot_alignment"
  },
  "type": "import"
 },
 "mne.tests.test_report.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_report.proj_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_report.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_report.raw_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_report.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_report.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_report.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_report.report_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_report.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_report.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_report.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_report.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.tests.test_report.subjects_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_report.test_add_htmls_to_section": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      306
     ]
    },
    "mne.report.Report": {
     "line number": [
      310
     ]
    },
    "mne.tests.test_report.raw_fname": {
     "line number": [
      310
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      311
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      307
     ]
    },
    "repr": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_add_or_replace": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "len": {
     "line number": [
      442,
      449
     ]
    },
    "mne.report.Report": {
     "line number": [
      435
     ]
    },
    "mne.tests.test_report._get_example_figures": {
     "line number": [
      436
     ]
    },
    "mne.tests.test_report.copy": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_add_slider_to_section": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      332
     ]
    },
    "TypeError": {
     "line number": [
      335
     ]
    },
    "ValueError": {
     "line number": [
      334,
      337
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      341
     ]
    },
    "mne.report.Report": {
     "line number": [
      324,
      340
     ]
    },
    "mne.tests.test_report._get_example_figures": {
     "line number": [
      327
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      332,
      334,
      335,
      337
     ]
    },
    "mne.tests.test_report.raw_fname": {
     "line number": [
      324
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      325
     ]
    },
    "os.path.join": {
     "line number": [
      330
     ]
    },
    "str": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_open_report": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      388,
      389
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      393
     ]
    },
    "mne.report.open_report": {
     "line number": [
      372,
      380,
      388,
      389,
      390,
      394
     ]
    },
    "mne.tests.test_report._get_example_figures": {
     "line number": [
      371
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      388,
      389,
      393
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      372,
      373,
      390,
      394
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      364
     ]
    },
    "os.path.exists": {
     "line number": [
      377
     ]
    },
    "os.path.join": {
     "line number": [
      368
     ]
    },
    "str": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_remove": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "len": {
     "line number": [
      412,
      421
     ]
    },
    "mne.report.Report": {
     "line number": [
      400
     ]
    },
    "mne.tests.test_report._get_example_figures": {
     "line number": [
      401
     ]
    },
    "mne.tests.test_report.copy": {
     "line number": [
      409,
      418,
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_add_sections": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      223,
      225,
      227,
      241,
      244
     ]
    },
    "matplotlib.pyplot.plot": {
     "line number": [
      219,
      230
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      213
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      247
     ]
    },
    "mne.report.Report": {
     "line number": [
      217
     ]
    },
    "mne.tests.test_report.evoked_fname": {
     "line number": [
      247
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      223,
      225,
      227,
      241,
      244
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      217,
      250
     ]
    },
    "mne.tests.test_report.trans_fname": {
     "line number": [
      249
     ]
    },
    "mne.viz.plot_alignment": {
     "line number": [
      249
     ]
    },
    "open": {
     "line number": [
      257
     ]
    },
    "os.path.join": {
     "line number": [
      233,
      255
     ]
    },
    "repr": {
     "line number": [
      254
     ]
    },
    "str": {
     "line number": [
      216,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_mri": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      263
     ]
    },
    "mne.report.Report": {
     "line number": [
      271
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      262
     ]
    },
    "mne.tests.test_report.raw_fname": {
     "line number": [
      271
     ]
    },
    "mne.tests.test_report.shutil": {
     "line number": [
      270
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      272,
      281
     ]
    },
    "mne.tests.test_report.trans_fname": {
     "line number": [
      269
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      264
     ]
    },
    "open": {
     "line number": [
      276,
      283
     ]
    },
    "os.path.join": {
     "line number": [
      268,
      274
     ]
    },
    "repr": {
     "line number": [
      279
     ]
    },
    "str": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_mri_without_bem": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      300
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      289
     ]
    },
    "mne.report.Report": {
     "line number": [
      297
     ]
    },
    "mne.tests.test_report.mri_fname": {
     "line number": [
      296
     ]
    },
    "mne.tests.test_report.os": {
     "line number": [
      294,
      295
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      300
     ]
    },
    "mne.tests.test_report.raw_fname": {
     "line number": [
      297
     ]
    },
    "mne.tests.test_report.shutil": {
     "line number": [
      296
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      290
     ]
    },
    "os.path.join": {
     "line number": [
      294,
      295,
      296,
      303
     ]
    },
    "str": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_report": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      94,
      140,
      158
     ]
    },
    "TypeError": {
     "line number": [
      164,
      166
     ]
    },
    "ValueError": {
     "line number": [
      151,
      152
     ]
    },
    "len": {
     "line number": [
      105,
      105,
      106,
      106,
      107,
      107,
      126,
      126,
      127,
      127
     ]
    },
    "mne.Epochs": {
     "line number": [
      85
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      55
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      81
     ]
    },
    "mne.read_events": {
     "line number": [
      85
     ]
    },
    "mne.report.Report": {
     "line number": [
      92,
      151,
      152,
      155
     ]
    },
    "mne.tests.test_report.cov_fname": {
     "line number": [
      71
     ]
    },
    "mne.tests.test_report.event_fname": {
     "line number": [
      70,
      85
     ]
    },
    "mne.tests.test_report.evoked_fname": {
     "line number": [
      79,
      90,
      122,
      124
     ]
    },
    "mne.tests.test_report.fwd_fname": {
     "line number": [
      73
     ]
    },
    "mne.tests.test_report.glob": {
     "line number": [
      99,
      144,
      145
     ]
    },
    "mne.tests.test_report.inv_fname": {
     "line number": [
      74
     ]
    },
    "mne.tests.test_report.ms_fname": {
     "line number": [
      69
     ]
    },
    "mne.tests.test_report.pathlib": {
     "line number": [
      157
     ]
    },
    "mne.tests.test_report.proj_fname": {
     "line number": [
      72
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      94,
      140,
      151,
      152,
      158,
      164,
      166,
      54
     ]
    },
    "mne.tests.test_report.raw_fname": {
     "line number": [
      67,
      68
     ]
    },
    "mne.tests.test_report.shutil": {
     "line number": [
      75
     ]
    },
    "mne.tests.test_report.subjects_dir": {
     "line number": [
      92,
      155
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      105,
      106,
      107,
      126,
      127
     ]
    },
    "numpy.zeros": {
     "line number": [
      162
     ]
    },
    "open": {
     "line number": [
      114
     ]
    },
    "os.path.basename": {
     "line number": [
      101,
      102,
      103,
      120,
      122,
      124,
      147,
      148,
      149
     ]
    },
    "os.path.isfile": {
     "line number": [
      113,
      131,
      136
     ]
    },
    "os.path.join": {
     "line number": [
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      78,
      79,
      99,
      111,
      130,
      131,
      134,
      136,
      144,
      145
     ]
    },
    "repr": {
     "line number": [
      96,
      142
     ]
    },
    "str": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_report_raw_psd_and_date": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      173
     ]
    },
    "isinstance": {
     "line number": [
      183,
      193,
      209
     ]
    },
    "list": {
     "line number": [
      183,
      193,
      209
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      170
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      177
     ]
    },
    "mne.io.write.DATE_NONE": {
     "line number": [
      204,
      205
     ]
    },
    "mne.report.Report": {
     "line number": [
      174,
      180,
      188,
      197
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      173
     ]
    },
    "mne.tests.test_report.raw_fname": {
     "line number": [
      177
     ]
    },
    "os.path.join": {
     "line number": [
      178
     ]
    },
    "str": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_scraper": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      468,
      474,
      475
     ]
    },
    "mne.report.Report": {
     "line number": [
      459
     ]
    },
    "mne.report._ReportScraper": {
     "line number": [
      466
     ]
    },
    "mne.tests.test_report._get_example_figures": {
     "line number": [
      460
     ]
    },
    "mne.tests.test_report.os": {
     "line number": [
      472,
      473,
      490
     ]
    },
    "mne.utils.Bunch": {
     "line number": [
      464,
      464
     ]
    },
    "os.path.dirname": {
     "line number": [
      472
     ]
    },
    "os.path.isfile": {
     "line number": [
      489,
      492,
      495
     ]
    },
    "os.path.join": {
     "line number": [
      465,
      469,
      471,
      485,
      488,
      490
     ]
    },
    "scraper": {
     "line number": [
      478,
      482,
      487
     ]
    },
    "scraper.copyfiles": {
     "line number": [
      491
     ]
    },
    "str": {
     "line number": [
      464,
      465,
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.test_validate_input": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      355,
      357
     ]
    },
    "len": {
     "line number": [
      361,
      361
     ]
    },
    "mne.report.Report": {
     "line number": [
      348
     ]
    },
    "mne.tests.test_report.pytest": {
     "line number": [
      355,
      357
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_report.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_report.trans_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_selection": {
  "data": {
   "symbols_in_volume": {
    "mne.tests.test_selection.test_path": {
     "line number": [
      10,
      11
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      51
     ]
    },
    "os.path.join": {
     "line number": [
      9,
      10,
      11
     ]
    },
    "os.path.split": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_selection.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_selection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_selection.raw_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.tests.test_selection.raw_new_fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.tests.test_selection.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_selection.read_selection": {
  "data": {
   "shadows": "mne.read_selection"
  },
  "type": "import"
 },
 "mne.tests.test_selection.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_selection.test_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.tests.test_selection.test_read_selection": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      48
     ]
    },
    "enumerate": {
     "line number": [
      24,
      44
     ]
    },
    "len": {
     "line number": [
      35,
      35,
      35,
      36,
      40
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      23,
      43
     ]
    },
    "mne.read_selection": {
     "line number": [
      25,
      27,
      31,
      32,
      33,
      38,
      39,
      45,
      48
     ]
    },
    "mne.tests.test_selection.pytest": {
     "line number": [
      48
     ]
    },
    "mne.tests.test_selection.raw_fname": {
     "line number": [
      23
     ]
    },
    "mne.tests.test_selection.raw_new_fname": {
     "line number": [
      43
     ]
    },
    "set": {
     "line number": [
      36,
      36,
      40,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate": {
  "data": {
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1326
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      41
     ]
    },
    "mne.tests.test_source_estimate.bem_path": {
     "line number": [
      63,
      64
     ]
    },
    "mne.tests.test_source_estimate.data_path": {
     "line number": [
      42,
      43,
      46,
      49,
      51,
      52,
      54,
      55,
      56,
      57,
      58,
      60,
      62,
      65,
      66,
      68,
      70
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1325,
      1326
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      1467
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      72
     ]
    },
    "os.path.join": {
     "line number": [
      42,
      43,
      45,
      48,
      50,
      52,
      54,
      55,
      56,
      57,
      58,
      60,
      62,
      63,
      64,
      65,
      66,
      68,
      70
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_source_estimate.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.Label": {
  "data": {
   "shadows": "mne.Label"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.MixedSourceEstimate": {
  "data": {
   "shadows": "mne.MixedSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.MixedVectorSourceEstimate": {
  "data": {
   "shadows": "mne.MixedVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.SourceSpaces": {
  "data": {
   "shadows": "mne.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._fake_stc": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      271
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      272
     ]
    },
    "numpy.arange": {
     "line number": [
      268,
      268
     ]
    },
    "numpy.random.rand": {
     "line number": [
      269
     ]
    },
    "numpy.random.seed": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._fake_vec_stc": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      280
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      281
     ]
    },
    "numpy.arange": {
     "line number": [
      277,
      277
     ]
    },
    "numpy.random.rand": {
     "line number": [
      278
     ]
    },
    "numpy.random.seed": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._get_img_fdata": {
  "data": {
   "shadows": "mne.fixes._get_img_fdata"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._get_src_nn": {
  "data": {
   "shadows": "mne.source_space._get_src_nn"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._get_vol_mask": {
  "data": {
   "shadows": "mne.source_estimate._get_vol_mask"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._my_trans": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": {
    "mne.fixes.fft": {
     "line number": [
      860
     ]
    },
    "numpy.concatenate": {
     "line number": [
      861
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.bad_normal": {
  "data": {
   "lineno": 1325
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.bem_path": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.data_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.extract_label_time_course": {
  "data": {
   "shadows": "mne.extract_label_time_course"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fft": {
  "data": {
   "shadows": "mne.fixes.fft"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fname_aseg": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_cov": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_evoked": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_fs_t1": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_fwd": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv_fixed": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv_vol": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_raw": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src_3": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src_fs": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src_vol": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_stc": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_t1": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_vol": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_vsrc": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.grade_to_tris": {
  "data": {
   "shadows": "mne.source_estimate.grade_to_tris"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.invs": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": {
    "mne.convert_forward_solution": {
     "line number": [
      1295
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      1290
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      1298,
      1300,
      1302,
      1304,
      1306
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      1294
     ]
    },
    "mne.read_cov": {
     "line number": [
      1297
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      1296
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      1293
     ]
    },
    "mne.source_space._get_src_nn": {
     "line number": [
      1320
     ]
    },
    "mne.tests.test_source_estimate.fname_cov": {
     "line number": [
      1297
     ]
    },
    "mne.tests.test_source_estimate.fname_evoked": {
     "line number": [
      1296
     ]
    },
    "mne.tests.test_source_estimate.fname_fwd": {
     "line number": [
      1293
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1290
     ]
    },
    "numpy.allclose": {
     "line number": [
      1312
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1320
     ]
    },
    "numpy.eye": {
     "line number": [
      1309,
      1314
     ]
    },
    "numpy.kron": {
     "line number": [
      1309
     ]
    },
    "numpy.ones": {
     "line number": [
      1309
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1308,
      1313,
      1317,
      1318,
      1321
     ]
    },
    "numpy.tile": {
     "line number": [
      1314
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_labels_from_annot": {
  "data": {
   "shadows": "mne.label.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.rng": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_inter_hemi_adjacency": {
  "data": {
   "shadows": "mne.spatial_inter_hemi_adjacency"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_src_adjacency": {
  "data": {
   "shadows": "mne.spatial_src_adjacency"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_tris_adjacency": {
  "data": {
   "shadows": "mne.spatial_tris_adjacency"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatio_temporal_src_adjacency": {
  "data": {
   "shadows": "mne.spatio_temporal_src_adjacency"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatio_temporal_tris_adjacency": {
  "data": {
   "shadows": "mne.spatio_temporal_tris_adjacency"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.stats": {
  "data": {
   "shadows": "mne.stats"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.subjects_dir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.test_center_of_mass": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      539
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      535
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      538
     ]
    },
    "mne.tests.test_source_estimate.fname_stc": {
     "line number": [
      538
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      539
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      541
     ]
    },
    "numpy.round": {
     "line number": [
      546
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      545,
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_epochs_vector_inverse": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1375
     ]
    },
    "events": {
     "line number": [
      1374,
      1377
     ]
    },
    "len": {
     "line number": [
      1380,
      1382
     ]
    },
    "mne.Epochs": {
     "line number": [
      1377
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1370
     ]
    },
    "mne.find_events": {
     "line number": [
      1374
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      1373
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1394
     ]
    },
    "mne.minimum_norm.apply_inverse_epochs": {
     "line number": [
      1390
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      1384
     ]
    },
    "mne.tests.test_source_estimate.fname_inv": {
     "line number": [
      1384
     ]
    },
    "mne.tests.test_source_estimate.fname_raw": {
     "line number": [
      1373
     ]
    },
    "numpy.mean": {
     "line number": [
      1392
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1397
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1380
     ]
    },
    "range": {
     "line number": [
      1382
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_expand": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      260
     ]
    },
    "ValueError": {
     "line number": [
      261,
      263
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      245
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      241
     ]
    },
    "mne.label.read_labels_from_annot": {
     "line number": [
      252
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      244
     ]
    },
    "mne.tests.test_source_estimate.fname_stc": {
     "line number": [
      244
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      260,
      261,
      263
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      253
     ]
    },
    "numpy.zeros": {
     "line number": [
      245
     ]
    },
    "repr": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      636
     ]
    },
    "ValueError": {
     "line number": [
      626,
      632,
      651
     ]
    },
    "dict": {
     "line number": [
      586
     ]
    },
    "enumerate": {
     "line number": [
      592,
      602
     ]
    },
    "klass": {
     "line number": [
      617
     ]
    },
    "len": {
     "line number": [
      571,
      572,
      584,
      608,
      610,
      641,
      643,
      658,
      659,
      661,
      662,
      676
     ]
    },
    "list": {
     "line number": [
      580,
      597
     ]
    },
    "mne.Label": {
     "line number": [
      674,
      677
     ]
    },
    "mne.MixedVectorSourceEstimate": {
     "line number": [
      565
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      567
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      549
     ]
    },
    "mne.extract_label_time_course": {
     "line number": [
      627,
      633,
      637,
      652,
      654
     ]
    },
    "mne.label.label_sign_flip": {
     "line number": [
      594,
      675,
      678
     ]
    },
    "mne.label.read_labels_from_annot": {
     "line number": [
      576,
      578
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      557
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      562
     ]
    },
    "mne.tests.test_source_estimate.fname_inv": {
     "line number": [
      557
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      559,
      626,
      632,
      636,
      651,
      550,
      551
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      564,
      577,
      579
     ]
    },
    "numpy.arange": {
     "line number": [
      572,
      587
     ]
    },
    "numpy.array": {
     "line number": [
      571
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      604,
      607
     ]
    },
    "numpy.mean": {
     "line number": [
      593
     ]
    },
    "numpy.newaxis": {
     "line number": [
      573,
      616,
      622,
      623
     ]
    },
    "numpy.ones": {
     "line number": [
      587
     ]
    },
    "numpy.pad": {
     "line number": [
      616,
      622,
      623
     ]
    },
    "numpy.repeat": {
     "line number": [
      573
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      605,
      608
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      663
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      670,
      671
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      642,
      644
     ]
    },
    "numpy.zeros": {
     "line number": [
      600,
      642
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      591
     ]
    },
    "range": {
     "line number": [
      599,
      610
     ]
    },
    "zip": {
     "line number": [
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course_equiv": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      854
     ]
    },
    "int": {
     "line number": [
      852
     ]
    },
    "len": {
     "line number": [
      842,
      853
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      837
     ]
    },
    "mne.label.read_labels_from_annot": {
     "line number": [
      840
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      846,
      847
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      844
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      845
     ]
    },
    "mne.tests.test_source_estimate.fname_evoked": {
     "line number": [
      845
     ]
    },
    "mne.tests.test_source_estimate.fname_inv": {
     "line number": [
      844
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      854
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      841
     ]
    },
    "numpy.array": {
     "line number": [
      852
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      851
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course_volume": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      732
     ]
    },
    "TypeError": {
     "line number": [
      774
     ]
    },
    "dict": {
     "line number": [
      761,
      805,
      689
     ]
    },
    "eltc": {
     "line number": [
      733,
      775,
      778
     ]
    },
    "enumerate": {
     "line number": [
      804
     ]
    },
    "float": {
     "line number": [
      723
     ]
    },
    "func": {
     "line number": [
      817,
      833
     ]
    },
    "int": {
     "line number": [
      822,
      686
     ]
    },
    "klass": {
     "line number": [
      711,
      713,
      723
     ]
    },
    "klass._scalar_class": {
     "line number": [
      713
     ]
    },
    "len": {
     "line number": [
      696,
      710,
      715,
      734,
      741,
      755,
      764,
      770,
      782,
      789,
      807
     ]
    },
    "list": {
     "line number": [
      758,
      688
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      711
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      682
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      701
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_MRI": {
     "line number": [
      706
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      697
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      705
     ]
    },
    "mne.tests.test_source_estimate.fname_aseg": {
     "line number": [
      757,
      759,
      762,
      825
     ]
    },
    "mne.tests.test_source_estimate.fname_fs_t1": {
     "line number": [
      733
     ]
    },
    "mne.tests.test_source_estimate.fname_inv_vol": {
     "line number": [
      697
     ]
    },
    "mne.tests.test_source_estimate.fname_src_vol": {
     "line number": [
      705
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      732,
      774,
      683
     ]
    },
    "mne.tests.test_source_estimate.re": {
     "line number": [
      781
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      702
     ]
    },
    "mne.transforms.invert_transform": {
     "line number": [
      702
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      777
     ]
    },
    "numpy.arange": {
     "line number": [
      717
     ]
    },
    "numpy.concatenate": {
     "line number": [
      737
     ]
    },
    "numpy.in1d": {
     "line number": [
      745,
      806
     ]
    },
    "numpy.max": {
     "line number": [
      805
     ]
    },
    "numpy.mean": {
     "line number": [
      805
     ]
    },
    "numpy.newaxis": {
     "line number": [
      721,
      722
     ]
    },
    "numpy.pad": {
     "line number": [
      721
     ]
    },
    "numpy.repeat": {
     "line number": [
      722
     ]
    },
    "numpy.sort": {
     "line number": [
      737
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      709,
      818,
      834
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      735,
      743,
      744,
      793,
      828
     ]
    },
    "numpy.where": {
     "line number": [
      745
     ]
    },
    "repr": {
     "line number": [
      785
     ]
    },
    "str": {
     "line number": [
      756,
      684,
      685,
      685,
      686,
      687
     ]
    },
    "sum": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course_volume.eltc": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "mne.extract_label_time_course": {
     "line number": [
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_get_peak": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1097
     ]
    },
    "ValueError": {
     "line number": [
      1071,
      1073,
      1075
     ]
    },
    "int": {
     "line number": [
      1056,
      1059,
      1059
     ]
    },
    "klass": {
     "line number": [
      1055,
      1058,
      1062,
      1068,
      1069
     ]
    },
    "klass._scalar_class": {
     "line number": [
      1068
     ]
    },
    "mne.MixedVectorSourceEstimate": {
     "line number": [
      1058
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      1055
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      1062
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1071,
      1073,
      1075,
      1097,
      1047,
      1048,
      1049
     ]
    },
    "numpy.abs": {
     "line number": [
      1090,
      1091
     ]
    },
    "numpy.arange": {
     "line number": [
      1053
     ]
    },
    "numpy.argmax": {
     "line number": [
      1090,
      1091
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1080
     ]
    },
    "numpy.empty": {
     "line number": [
      1056,
      1059,
      1059
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1066
     ]
    },
    "numpy.repeat": {
     "line number": [
      1066
     ]
    },
    "numpy.zeros": {
     "line number": [
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_stc": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      387
     ]
    },
    "len": {
     "line number": [
      381,
      381
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      377
     ]
    },
    "mne.tests.test_source_estimate._fake_stc": {
     "line number": [
      375
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      387
     ]
    },
    "numpy.complex128": {
     "line number": [
      386
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      379,
      380,
      383,
      384
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      381
     ]
    },
    "zip": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_stc_h5": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      408
     ]
    },
    "ValueError": {
     "line number": [
      400
     ]
    },
    "len": {
     "line number": [
      415,
      415
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      405,
      406,
      407,
      408
     ]
    },
    "mne.tests.test_source_estimate._fake_stc": {
     "line number": [
      399
     ]
    },
    "mne.tests.test_source_estimate._fake_vec_stc": {
     "line number": [
      397
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      400,
      408,
      392,
      393
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      391
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      412,
      413,
      414,
      417
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      411,
      415
     ]
    },
    "zip": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_w": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "mne.read_source_estimate": {
     "line number": [
      425,
      427
     ]
    },
    "mne.tests.test_source_estimate._fake_stc": {
     "line number": [
      422
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      428,
      429,
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_mixed_stc": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1113,
      1122
     ]
    },
    "isinstance": {
     "line number": [
      1131
     ]
    },
    "mne.MixedSourceEstimate": {
     "line number": [
      1113,
      1116,
      1131
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1102
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      1126
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      1118
     ]
    },
    "mne.tests.test_source_estimate.fname_vsrc": {
     "line number": [
      1118
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1113,
      1121,
      1122
     ]
    },
    "mne.tests.test_source_estimate.rng": {
     "line number": [
      1109
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      1101
     ]
    },
    "numpy.arange": {
     "line number": [
      1110,
      1114
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1127,
      1128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_save_vol_stc_as_nifti": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      211
     ]
    },
    "len": {
     "line number": [
      217,
      225,
      230,
      238
     ]
    },
    "mne.SourceSpaces": {
     "line number": [
      233
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      211,
      234
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      201
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      210
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      206
     ]
    },
    "mne.tests.test_source_estimate.fname_t1": {
     "line number": [
      220
     ]
    },
    "mne.tests.test_source_estimate.fname_vol": {
     "line number": [
      210
     ]
    },
    "mne.tests.test_source_estimate.fname_vsrc": {
     "line number": [
      206
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      215,
      219,
      223
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      202
     ]
    },
    "nibabel.load": {
     "line number": [
      216,
      220,
      224
     ]
    },
    "numpy.r_": {
     "line number": [
      234
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      226,
      231
     ]
    },
    "str": {
     "line number": [
      216,
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_source_estime_project": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": {
    "mne.VolVectorSourceEstimate": {
     "line number": [
      1258
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1234
     ]
    },
    "mne.tests.test_source_estimate.rng": {
     "line number": [
      1238,
      1239,
      1241
     ]
    },
    "numpy.arange": {
     "line number": [
      1258
     ]
    },
    "numpy.complex128": {
     "line number": [
      1242
     ]
    },
    "numpy.empty": {
     "line number": [
      1248
     ]
    },
    "numpy.float64": {
     "line number": [
      1244
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1256
     ]
    },
    "numpy.ones": {
     "line number": [
      1250
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      1238
     ]
    },
    "numpy.sign": {
     "line number": [
      1260
     ]
    },
    "numpy.sum": {
     "line number": [
      1260
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1262
     ]
    },
    "range": {
     "line number": [
      1249
     ]
    },
    "scipy.optimize.fmin_cobyla": {
     "line number": [
      1255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_source_estime_project.objective": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      1254
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1253,
      1254
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_source_estime_project_label": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1265
     ]
    },
    "mne.label.read_labels_from_annot": {
     "line number": [
      1279
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1275
     ]
    },
    "mne.minimum_norm.make_inverse_operator": {
     "line number": [
      1273
     ]
    },
    "mne.pick_types_forward": {
     "line number": [
      1269
     ]
    },
    "mne.read_cov": {
     "line number": [
      1272
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      1271
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      1268
     ]
    },
    "mne.tests.test_source_estimate.fname_cov": {
     "line number": [
      1272
     ]
    },
    "mne.tests.test_source_estimate.fname_evoked": {
     "line number": [
      1271
     ]
    },
    "mne.tests.test_source_estimate.fname_fwd": {
     "line number": [
      1268
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      1280
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1287
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatial_inter_hemi_adjacency": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      99
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      75
     ]
    },
    "mne.label.read_labels_from_annot": {
     "line number": [
      102
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      84
     ]
    },
    "mne.spatial_inter_hemi_adjacency": {
     "line number": [
      79,
      81,
      85
     ]
    },
    "mne.tests.test_source_estimate.fname_src_3": {
     "line number": [
      79,
      81,
      84
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      103
     ]
    },
    "numpy.any": {
     "line number": [
      100
     ]
    },
    "numpy.in1d": {
     "line number": [
      105
     ]
    },
    "numpy.prod": {
     "line number": [
      82
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      80,
      82,
      89,
      90,
      93,
      96
     ]
    },
    "numpy.where": {
     "line number": [
      100
     ]
    },
    "set": {
     "line number": [
      106,
      106,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatial_src_adjacency": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1425
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1419
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      1423,
      1430
     ]
    },
    "mne.source_estimate.grade_to_tris": {
     "line number": [
      1432,
      1439
     ]
    },
    "mne.spatial_src_adjacency": {
     "line number": [
      1426,
      1427,
      1431,
      1438
     ]
    },
    "mne.spatial_tris_adjacency": {
     "line number": [
      1432,
      1439
     ]
    },
    "mne.tests.test_source_estimate.fname_src": {
     "line number": [
      1423
     ]
    },
    "mne.tests.test_source_estimate.fname_src_fs": {
     "line number": [
      1430
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1425
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1434,
      1435,
      1436,
      1441,
      1442,
      1443
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatio_temporal_src_adjacency": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      997
     ]
    },
    "dict": {
     "line number": [
      974,
      974
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      970
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      995
     ]
    },
    "mne.source_estimate.grade_to_tris": {
     "line number": [
      1003
     ]
    },
    "mne.spatio_temporal_src_adjacency": {
     "line number": [
      983,
      992,
      998
     ]
    },
    "mne.spatio_temporal_tris_adjacency": {
     "line number": [
      975
     ]
    },
    "mne.tests.test_source_estimate.fname_inv": {
     "line number": [
      995
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      997
     ]
    },
    "numpy.array": {
     "line number": [
      973,
      977,
      978,
      979,
      980
     ]
    },
    "numpy.diag": {
     "line number": [
      976
     ]
    },
    "numpy.eye": {
     "line number": [
      986,
      987
     ]
    },
    "numpy.ones": {
     "line number": [
      986,
      987
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      976
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      984,
      993
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1003
     ]
    },
    "sum": {
     "line number": [
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatio_temporal_tris_adjacency": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": {
    "len": {
     "line number": [
      965,
      965
     ]
    },
    "mne.spatio_temporal_tris_adjacency": {
     "line number": [
      957
     ]
    },
    "mne.stats.cluster_level._get_components": {
     "line number": [
      959
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      953
     ]
    },
    "numpy.array": {
     "line number": [
      956,
      959,
      962
     ]
    },
    "numpy.nonzero": {
     "line number": [
      963
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      967
     ]
    },
    "numpy.unique": {
     "line number": [
      964
     ]
    },
    "zip": {
     "line number": [
      966
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_arithmetic": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      466,
      466,
      467,
      467
     ]
    },
    "list": {
     "line number": [
      440
     ]
    },
    "mne.tests.test_source_estimate._fake_stc": {
     "line number": [
      435
     ]
    },
    "mne.tests.test_source_estimate._fake_vec_stc": {
     "line number": [
      437
     ]
    },
    "numpy.errstate": {
     "line number": [
      446,
      458
     ]
    },
    "numpy.sqrt": {
     "line number": [
      464,
      465
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      457,
      462,
      463,
      464,
      465,
      466,
      467,
      470,
      472,
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_as_volume": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      197
     ]
    },
    "isinstance": {
     "line number": [
      189,
      194
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      176
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      180
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      183
     ]
    },
    "mne.tests.test_source_estimate.fname_inv_vol": {
     "line number": [
      180
     ]
    },
    "mne.tests.test_source_estimate.fname_t1": {
     "line number": [
      187
     ]
    },
    "mne.tests.test_source_estimate.fname_vol": {
     "line number": [
      183
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      197
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      175
     ]
    },
    "nibabel.Nifti1Image": {
     "line number": [
      189,
      194
     ]
    },
    "nibabel.load": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      324,
      325,
      339,
      340,
      348,
      349,
      352,
      353,
      355,
      367
     ]
    },
    "float": {
     "line number": [
      329,
      334
     ]
    },
    "len": {
     "line number": [
      311,
      370
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      368,
      369
     ]
    },
    "mne.tests.test_source_estimate._fake_stc": {
     "line number": [
      308,
      365
     ]
    },
    "mne.tests.test_source_estimate._fake_vec_stc": {
     "line number": [
      309
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      324,
      325,
      339,
      340,
      348,
      349,
      352,
      353,
      355,
      367
     ]
    },
    "numpy.arange": {
     "line number": [
      313,
      352,
      354,
      356
     ]
    },
    "numpy.newaxis": {
     "line number": [
      366
     ]
    },
    "numpy.random.rand": {
     "line number": [
      343
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      314,
      330,
      335,
      344
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      313
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      312,
      362
     ]
    },
    "numpy.zeros": {
     "line number": [
      359,
      360
     ]
    },
    "type": {
     "line number": [
      329,
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes.attempt_assignment": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes.attempt_times_mutation": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_methods": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      521
     ]
    },
    "ValueError": {
     "line number": [
      519
     ]
    },
    "copy.deepcopy": {
     "line number": [
      523
     ]
    },
    "isinstance": {
     "line number": [
      509
     ]
    },
    "len": {
     "line number": [
      493,
      494,
      509,
      516,
      517
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      486
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      478
     ]
    },
    "mne.label.read_labels_from_annot": {
     "line number": [
      503,
      505
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      481,
      501
     ]
    },
    "mne.tests.test_source_estimate.fname_stc": {
     "line number": [
      481,
      501
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      519,
      521,
      477
     ]
    },
    "mne.tests.test_source_estimate.subjects_dir": {
     "line number": [
      504,
      506
     ]
    },
    "numpy.concatenate": {
     "line number": [
      487
     ]
    },
    "numpy.mean": {
     "line number": [
      498
     ]
    },
    "numpy.newaxis": {
     "line number": [
      484
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      498
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      532
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      493,
      494,
      499
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      517
     ]
    },
    "numpy.zeros": {
     "line number": [
      485
     ]
    },
    "tuple": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_snr": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      294,
      296
     ]
    },
    "abs": {
     "line number": [
      297
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      285
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      292,
      298
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      288
     ]
    },
    "mne.read_cov": {
     "line number": [
      290
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      291
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      289
     ]
    },
    "mne.tests.test_source_estimate.fname_cov": {
     "line number": [
      290
     ]
    },
    "mne.tests.test_source_estimate.fname_evoked": {
     "line number": [
      291
     ]
    },
    "mne.tests.test_source_estimate.fname_fwd": {
     "line number": [
      289
     ]
    },
    "mne.tests.test_source_estimate.fname_inv_fixed": {
     "line number": [
      288
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      294,
      296
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_to_data_frame": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1022
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      1012
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      1014
     ]
    },
    "mne.tests.test_source_estimate.rng": {
     "line number": [
      1011
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1006
     ]
    },
    "numpy.arange": {
     "line number": [
      1010
     ]
    },
    "numpy.empty": {
     "line number": [
      1010
     ]
    },
    "numpy.int64": {
     "line number": [
      1010,
      1010
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1019
     ]
    },
    "set": {
     "line number": [
      1024,
      1024
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_to_data_frame_index": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1044
     ]
    },
    "isinstance": {
     "line number": [
      1038
     ]
    },
    "len": {
     "line number": [
      1043
     ]
    },
    "list": {
     "line number": [
      1038,
      1042
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      1034
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1028
     ]
    },
    "mne.tests.test_source_estimate.rng": {
     "line number": [
      1033
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      1027
     ]
    },
    "numpy.arange": {
     "line number": [
      1032
     ]
    },
    "numpy.empty": {
     "line number": [
      1032
     ]
    },
    "numpy.in1d": {
     "line number": [
      1044
     ]
    },
    "numpy.int64": {
     "line number": [
      1032,
      1032
     ]
    },
    "set": {
     "line number": [
      1042,
      1042
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_transform": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      919
     ]
    },
    "copy.deepcopy": {
     "line number": [
      922
     ]
    },
    "isinstance": {
     "line number": [
      909,
      924,
      937
     ]
    },
    "len": {
     "line number": [
      929,
      930,
      930,
      940
     ]
    },
    "list": {
     "line number": [
      909
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      905,
      924,
      937
     ]
    },
    "mne.tests.test_source_estimate._my_trans": {
     "line number": [
      908,
      915,
      919
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      919
     ]
    },
    "mne.tests.test_source_estimate.rng": {
     "line number": [
      904
     ]
    },
    "numpy.abs": {
     "line number": [
      923,
      934,
      936,
      946,
      947
     ]
    },
    "numpy.arange": {
     "line number": [
      903,
      903,
      929
     ]
    },
    "numpy.concatenate": {
     "line number": [
      913
     ]
    },
    "numpy.round": {
     "line number": [
      928,
      944
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      932,
      933,
      945,
      945
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      910,
      916,
      925,
      942,
      950
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      911,
      938,
      939,
      940,
      941,
      948,
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_transform_data": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      895
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      887,
      896
     ]
    },
    "mne.tests.test_source_estimate._my_trans": {
     "line number": [
      884,
      889
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      895
     ]
    },
    "mne.tests.test_source_estimate.rng": {
     "line number": [
      869,
      870
     ]
    },
    "numpy.arange": {
     "line number": [
      872,
      876
     ]
    },
    "numpy.dot": {
     "line number": [
      873
     ]
    },
    "numpy.newaxis": {
     "line number": [
      894
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      892
     ]
    },
    "slice": {
     "line number": [
      880
     ]
    },
    "zip": {
     "line number": [
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_basic": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1199
     ]
    },
    "ValueError": {
     "line number": [
      1227,
      1230
     ]
    },
    "dict": {
     "line number": [
      1168,
      1169,
      1171,
      1172
     ]
    },
    "klass": {
     "line number": [
      1175,
      1178,
      1181,
      1190,
      1211,
      1224,
      1228,
      1231
     ]
    },
    "len": {
     "line number": [
      1220,
      1220,
      1225
     ]
    },
    "mne.MixedVectorSourceEstimate": {
     "line number": [
      1181,
      1211,
      1139
     ]
    },
    "mne.SourceSpaces": {
     "line number": [
      1168,
      1171
     ]
    },
    "mne.VectorSourceEstimate": {
     "line number": [
      1178,
      1136
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      1175,
      1137,
      1138
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      1218
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1199,
      1227,
      1230,
      1135,
      1141
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      1134
     ]
    },
    "numpy.arange": {
     "line number": [
      1170
     ]
    },
    "numpy.array": {
     "line number": [
      1145,
      1152,
      1158,
      1160,
      1165,
      1174,
      1174,
      1210
     ]
    },
    "numpy.complex128": {
     "line number": [
      1161,
      1142
     ]
    },
    "numpy.complex64": {
     "line number": [
      1161,
      1142
     ]
    },
    "numpy.float32": {
     "line number": [
      1150,
      1142
     ]
    },
    "numpy.float64": {
     "line number": [
      1142
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1157,
      1191,
      1192,
      1229
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1148,
      1148,
      1149,
      1158,
      1160,
      1160,
      1166
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1203,
      1207,
      1208,
      1213,
      1214,
      1219
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1195,
      1222
     ]
    },
    "numpy.tile": {
     "line number": [
      1185,
      1186,
      1187,
      1188,
      1189,
      1212
     ]
    },
    "zip": {
     "line number": [
      1221
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_inv_fixed": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1360,
      1364
     ]
    },
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1351,
      1352,
      1355
     ]
    },
    "mne.tests.test_source_estimate.invs": {
     "line number": [
      1350
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1347
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1353,
      1357,
      1359,
      1367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_inv_free": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": {
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1333,
      1334
     ]
    },
    "mne.tests.test_source_estimate.invs": {
     "line number": [
      1332
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1329
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1335
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_inv_free_surf": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": {
    "mne.minimum_norm.apply_inverse": {
     "line number": [
      1342,
      1343
     ]
    },
    "mne.tests.test_source_estimate.invs": {
     "line number": [
      1341
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1338
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1344
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vol_adjacency": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1406
     ]
    },
    "isinstance": {
     "line number": [
      1412
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1401
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      1404
     ]
    },
    "mne.spatial_src_adjacency": {
     "line number": [
      1406,
      1408
     ]
    },
    "mne.spatio_temporal_src_adjacency": {
     "line number": [
      1414
     ]
    },
    "mne.tests.test_source_estimate.fname_vsrc": {
     "line number": [
      1404
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      1406
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      1400
     ]
    },
    "numpy.all": {
     "line number": [
      1411,
      1416
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1410,
      1415
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      1412
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vol_mask": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1455
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      1457
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      1448
     ]
    },
    "mne.fixes._get_img_fdata": {
     "line number": [
      1459
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      1451
     ]
    },
    "mne.source_estimate._get_vol_mask": {
     "line number": [
      1452
     ]
    },
    "mne.tests.test_source_estimate.fname_vsrc": {
     "line number": [
      1451
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      1447
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      1446
     ]
    },
    "numpy.arange": {
     "line number": [
      1456
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1456
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1461,
      1462,
      1463,
      1464
     ]
    },
    "numpy.where": {
     "line number": [
      1462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_volume_stc": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      164
     ]
    },
    "dict": {
     "line number": [
      146
     ]
    },
    "isinstance": {
     "line number": [
      152,
      158,
      170
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      128,
      130,
      158,
      170
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      133,
      135
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      110
     ]
    },
    "mne.externals.h5io.write_hdf5": {
     "line number": [
      145
     ]
    },
    "mne.read_source_estimate": {
     "line number": [
      151,
      157,
      169
     ]
    },
    "mne.tests.test_source_estimate.fname_vol": {
     "line number": [
      157,
      164
     ]
    },
    "mne.tests.test_source_estimate.pytest": {
     "line number": [
      164,
      109
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      111
     ]
    },
    "numpy.arange": {
     "line number": [
      115,
      118,
      119,
      120,
      123,
      124,
      125,
      125
     ]
    },
    "numpy.newaxis": {
     "line number": [
      115,
      118,
      122,
      123
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      154,
      172
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      153,
      171
     ]
    },
    "range": {
     "line number": [
      139,
      166
     ]
    },
    "repr": {
     "line number": [
      160,
      161
     ]
    },
    "str": {
     "line number": [
      146
     ]
    },
    "zip": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.write_hdf5": {
  "data": {
   "shadows": "mne.externals.h5io.write_hdf5"
  },
  "type": "import"
 },
 "mne.tests.test_source_space": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      35
     ]
    },
    "mne.tests.test_source_space.base_dir": {
     "line number": [
      57
     ]
    },
    "mne.tests.test_source_space.data_path": {
     "line number": [
      36,
      37,
      38,
      42,
      44,
      46,
      48,
      53
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      39,
      40,
      50,
      51
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      941
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      58
     ]
    },
    "os.path.dirname": {
     "line number": [
      56
     ]
    },
    "os.path.join": {
     "line number": [
      36,
      37,
      38,
      39,
      40,
      42,
      44,
      46,
      48,
      50,
      51,
      53,
      56,
      57
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_source_space.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._accumulate_normals": {
  "data": {
   "shadows": "mne.surface._accumulate_normals"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_img_fdata": {
  "data": {
   "shadows": "mne.fixes._get_img_fdata"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_mgz_header": {
  "data": {
   "shadows": "mne.source_space._get_mgz_header"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_src_type": {
  "data": {
   "shadows": "mne.source_estimate._get_src_type"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._read_small_src": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "mne.read_source_spaces": {
     "line number": [
      74
     ]
    },
    "mne.tests.test_source_space.fname_small": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space._read_talxfm": {
  "data": {
   "shadows": "mne.source_space._read_talxfm"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._triangle_neighbors": {
  "data": {
   "shadows": "mne.surface._triangle_neighbors"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.add_source_space_distances": {
  "data": {
   "shadows": "mne.add_source_space_distances"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.aseg_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.base_dir": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.compute_source_morph": {
  "data": {
   "shadows": "mne.compute_source_morph"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.copytree": {
  "data": {
   "shadows": "shutil.copytree"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.data_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem_3": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem_3_sol": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem_sol": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_fs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_morph": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_mri": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_small": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_vol": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.get_volume_labels_from_src": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_src"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.head_to_mni": {
  "data": {
   "shadows": "mne.head_to_mni"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.morph_source_spaces": {
  "data": {
   "shadows": "mne.morph_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_freesurfer_lut": {
  "data": {
   "shadows": "mne.read_freesurfer_lut"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.rng": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.setup_source_space": {
  "data": {
   "shadows": "mne.setup_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.subjects_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.test_accumulate_normals": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      362
     ]
    },
    "int": {
     "line number": [
      355,
      356,
      359
     ]
    },
    "mne.surface._accumulate_normals": {
     "line number": [
      371
     ]
    },
    "mne.tests.test_source_space.rng": {
     "line number": [
      359,
      361
     ]
    },
    "numpy.c_": {
     "line number": [
      360
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      374
     ]
    },
    "numpy.zeros": {
     "line number": [
      366
     ]
    },
    "range": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_patch_info": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      106
     ]
    },
    "RuntimeWarning": {
     "line number": [
      98
     ]
    },
    "all": {
     "line number": [
      91,
      92,
      93
     ]
    },
    "mne.add_source_space_distances": {
     "line number": [
      90,
      99,
      107,
      115
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      100,
      116
     ]
    },
    "mne.tests.test_source_space._read_small_src": {
     "line number": [
      86,
      87,
      103
     ]
    },
    "mne.tests.test_source_space.mne": {
     "line number": [
      97
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      98,
      106
     ]
    },
    "mne.tests.test_source_space.scipy": {
     "line number": [
      105
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_source_space_distances": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      166
     ]
    },
    "list": {
     "line number": [
      181
     ]
    },
    "mne.add_source_space_distances": {
     "line number": [
      167,
      168
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      153
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      156,
      157,
      170
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      156,
      157
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      166,
      152
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      169
     ]
    },
    "numpy.array": {
     "line number": [
      175,
      176
     ]
    },
    "numpy.float32": {
     "line number": [
      175,
      176
     ]
    },
    "numpy.inf": {
     "line number": [
      176
     ]
    },
    "numpy.sum": {
     "line number": [
      189
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      193
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      175,
      176
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      193
     ]
    },
    "zip": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_source_space_distances_limited": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "mne.add_source_space_distances": {
     "line number": [
      130
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      119
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      122,
      123,
      132
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      122,
      123
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      131
     ]
    },
    "numpy.array": {
     "line number": [
      135,
      136
     ]
    },
    "numpy.float32": {
     "line number": [
      135,
      136
     ]
    },
    "numpy.sum": {
     "line number": [
      145
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      149
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      135,
      136
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      149
     ]
    },
    "zip": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_combine_source_spaces": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      827
     ]
    },
    "ValueError": {
     "line number": [
      777,
      783,
      790,
      797
     ]
    },
    "bool": {
     "line number": [
      810
     ]
    },
    "len": {
     "line number": [
      759
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      722
     ]
    },
    "mne.fixes._get_img_fdata": {
     "line number": [
      809
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_MRI.all": {
     "line number": [
      771
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      764
     ]
    },
    "mne.setup_source_space": {
     "line number": [
      732
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      736,
      745
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      765
     ]
    },
    "mne.tests.test_source_space.aseg_fname": {
     "line number": [
      738,
      818
     ]
    },
    "mne.tests.test_source_space.mne": {
     "line number": [
      823
     ]
    },
    "mne.tests.test_source_space.nibabel": {
     "line number": [
      809,
      818,
      821,
      822
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      777,
      783,
      790,
      797,
      827
     ]
    },
    "mne.tests.test_source_space.rng": {
     "line number": [
      727,
      741
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      733,
      736,
      745,
      825
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      723
     ]
    },
    "numpy.array": {
     "line number": [
      770
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      727
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      767
     ]
    },
    "numpy.zeros": {
     "line number": [
      742
     ]
    },
    "repr": {
     "line number": [
      766,
      766
     ]
    },
    "str": {
     "line number": [
      809,
      822
     ]
    },
    "sum": {
     "line number": [
      811
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_discrete_source_space": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      227
     ]
    },
    "dict": {
     "line number": [
      212
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      196
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      200,
      211,
      223
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      213,
      227
     ]
    },
    "mne.source_estimate._get_src_type": {
     "line number": [
      232
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      215,
      224
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      200
     ]
    },
    "mne.tests.test_source_space.fname_mri": {
     "line number": [
      228
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      227
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      197
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      209
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      222
     ]
    },
    "numpy.c_": {
     "line number": [
      207
     ]
    },
    "numpy.savetxt": {
     "line number": [
      207
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      216,
      218
     ]
    },
    "repr": {
     "line number": [
      229,
      229,
      230
     ]
    },
    "str": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_head_to_mni": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      512
     ]
    },
    "mne.head_to_mni": {
     "line number": [
      530
     ]
    },
    "mne.read_trans": {
     "line number": [
      522
     ]
    },
    "mne.source_space._read_talxfm": {
     "line number": [
      519
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      519,
      531
     ]
    },
    "mne.tests.test_source_space.trans_fname": {
     "line number": [
      522
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      520
     ]
    },
    "mne.transforms.invert_transform": {
     "line number": [
      523
     ]
    },
    "numpy.array": {
     "line number": [
      516,
      526
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_mgz_header": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      61
     ]
    },
    "mne.source_space._get_mgz_header": {
     "line number": [
      66
     ]
    },
    "mne.tests.test_source_space.fname_mri": {
     "line number": [
      66,
      67
     ]
    },
    "mne.tests.test_source_space.nibabel": {
     "line number": [
      67
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      62
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      68,
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_morph_source_spaces": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      831
     ]
    },
    "mne.morph_source_spaces": {
     "line number": [
      836
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      834,
      835
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      838
     ]
    },
    "mne.tests.test_source_space.fname_fs": {
     "line number": [
      834
     ]
    },
    "mne.tests.test_source_space.fname_morph": {
     "line number": [
      835
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      837
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_morphed_source_space_return": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      937
     ]
    },
    "RuntimeWarning": {
     "line number": [
      882,
      891
     ]
    },
    "ValueError": {
     "line number": [
      887,
      926,
      930,
      933
     ]
    },
    "len": {
     "line number": [
      852,
      857,
      869,
      869
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      850,
      871
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      861,
      883,
      892
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      843
     ]
    },
    "mne.morph_source_spaces": {
     "line number": [
      855
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      849,
      936
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      936
     ]
    },
    "mne.tests.test_source_space.fname_fs": {
     "line number": [
      849
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      882,
      887,
      891,
      926,
      930,
      933,
      937,
      841,
      842
     ]
    },
    "mne.tests.test_source_space.rng": {
     "line number": [
      847,
      869
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      856,
      864,
      879,
      886,
      895,
      912,
      927,
      931,
      934,
      938
     ]
    },
    "numpy.arange": {
     "line number": [
      869
     ]
    },
    "numpy.concatenate": {
     "line number": [
      872
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      902,
      920
     ]
    },
    "numpy.sort": {
     "line number": [
      869
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      899,
      916
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      897
     ]
    },
    "range": {
     "line number": [
      898,
      915
     ]
    },
    "sum": {
     "line number": [
      852,
      857
     ]
    },
    "zip": {
     "line number": [
      874
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_other_volume_source_spaces": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      321,
      330
     ]
    },
    "len": {
     "line number": [
      307,
      308,
      309,
      314,
      315
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      287
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      300,
      330
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      302,
      321
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      317
     ]
    },
    "mne.tests.test_source_space.fname_mri": {
     "line number": [
      299,
      302,
      322
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      321,
      330
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      303,
      323
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      288
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      296,
      327
     ]
    },
    "numpy.in1d": {
     "line number": [
      310
     ]
    },
    "repr": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_freesurfer_lut": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      601
     ]
    },
    "ValueError": {
     "line number": [
      570
     ]
    },
    "isinstance": {
     "line number": [
      563,
      564,
      567
     ]
    },
    "len": {
     "line number": [
      560,
      560,
      569,
      569,
      582,
      590,
      590,
      590,
      590
     ]
    },
    "list": {
     "line number": [
      559,
      563,
      564
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      550
     ]
    },
    "mne.read_freesurfer_lut": {
     "line number": [
      558,
      589,
      602
     ]
    },
    "mne.source_space.get_volume_labels_from_aseg": {
     "line number": [
      561,
      571,
      573
     ]
    },
    "mne.tests.test_source_space.aseg_fname": {
     "line number": [
      562,
      572,
      574
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      558,
      577,
      579,
      584,
      589,
      596,
      602
     ]
    },
    "mne.tests.test_source_space.mne": {
     "line number": [
      554
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      570,
      601,
      552
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      551
     ]
    },
    "numpy.arange": {
     "line number": [
      582
     ]
    },
    "numpy.ndarray": {
     "line number": [
      567
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      594
     ]
    },
    "open": {
     "line number": [
      584,
      596
     ]
    },
    "os.path.dirname": {
     "line number": [
      554
     ]
    },
    "os.path.join": {
     "line number": [
      554
     ]
    },
    "str": {
     "line number": [
      579
     ]
    },
    "zip": {
     "line number": [
      585,
      591,
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_source_spaces": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      459
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      462
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_volume_from_src": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      709
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      684
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      692
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      695
     ]
    },
    "mne.source_space.get_volume_labels_from_src": {
     "line number": [
      712
     ]
    },
    "mne.tests.test_source_space.aseg_fname": {
     "line number": [
      695
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      692
     ]
    },
    "mne.tests.test_source_space.fname_bem": {
     "line number": [
      697
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      709,
      682,
      683
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      699,
      712
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      685
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      717,
      719
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_setup_source_space": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      432
     ]
    },
    "ValueError": {
     "line number": [
      385,
      389,
      392,
      395,
      398
     ]
    },
    "len": {
     "line number": [
      428,
      429
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      378
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      403,
      414,
      422
     ]
    },
    "mne.setup_source_space": {
     "line number": [
      386,
      390,
      393,
      396,
      399,
      405,
      417,
      426,
      432
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      407,
      421,
      423
     ]
    },
    "mne.tests.test_source_space.data_path": {
     "line number": [
      381
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      414
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      385,
      389,
      392,
      395,
      398,
      404,
      416,
      432,
      377
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      387,
      391,
      394,
      397,
      400,
      406,
      418,
      427,
      433
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      419
     ]
    },
    "numpy.arange": {
     "line number": [
      410,
      411
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      410,
      411
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      420
     ]
    },
    "os.path.join": {
     "line number": [
      381
     ]
    },
    "repr": {
     "line number": [
      408,
      408,
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_setup_source_space_spacing": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      453
     ]
    },
    "ValueError": {
     "line number": [
      455
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      436
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      447
     ]
    },
    "mne.setup_source_space": {
     "line number": [
      449,
      454,
      456
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      451
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      453,
      455,
      438,
      439,
      440
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      443,
      450,
      454,
      456
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      445
     ]
    },
    "mne.utils.requires_mne": {
     "line number": [
      437
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      446
     ]
    },
    "os.path.join": {
     "line number": [
      443
     ]
    },
    "shutil.copytree": {
     "line number": [
      443
     ]
    },
    "str": {
     "line number": [
      443,
      444,
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_source_space_exclusive_complete": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      670
     ]
    },
    "len": {
     "line number": [
      677
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      654
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      665
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      673
     ]
    },
    "mne.tests.test_source_space.fname_bem": {
     "line number": [
      674
     ]
    },
    "mne.tests.test_source_space.fname_vol": {
     "line number": [
      665
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      676
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      655
     ]
    },
    "numpy.concatenate": {
     "line number": [
      669
     ]
    },
    "numpy.sort": {
     "line number": [
      669
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      671
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      668,
      679
     ]
    },
    "repr": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_source_space_from_label": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      622
     ]
    },
    "ValueError": {
     "line number": [
      616,
      629
     ]
    },
    "dict": {
     "line number": [
      615
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      605
     ]
    },
    "mne.read_freesurfer_lut": {
     "line number": [
      611
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      650
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      617,
      623,
      630,
      641
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      651
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      616,
      622,
      629,
      607
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      619,
      625,
      632,
      643
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      606
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      649
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_triangle_neighbors": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "all": {
     "line number": [
      348
     ]
    },
    "int": {
     "line number": [
      345
     ]
    },
    "list": {
     "line number": [
      339
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      335
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      338
     ]
    },
    "mne.surface._triangle_neighbors": {
     "line number": [
      347
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      338
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      333,
      334
     ]
    },
    "numpy.array": {
     "line number": [
      345
     ]
    },
    "numpy.array_equal": {
     "line number": [
      348
     ]
    },
    "range": {
     "line number": [
      339,
      340
     ]
    },
    "zip": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_vertex_to_mni": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      499
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      507
     ]
    },
    "mne.vertex_to_mni": {
     "line number": [
      507
     ]
    },
    "numpy.array": {
     "line number": [
      504
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_vertex_to_mni_fs_nibabel": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      536
     ]
    },
    "mne.tests.test_source_space.mne": {
     "line number": [
      544
     ]
    },
    "mne.tests.test_source_space.rng": {
     "line number": [
      541,
      542
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      543,
      545
     ]
    },
    "mne.vertex_to_mni": {
     "line number": [
      543,
      545
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_volume_source_space": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      258
     ]
    },
    "ValueError": {
     "line number": [
      262,
      266,
      279,
      283
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      236
     ]
    },
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN": {
     "line number": [
      241
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD": {
     "line number": [
      261
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      274,
      282
     ]
    },
    "mne.read_bem_solution": {
     "line number": [
      243,
      244
     ]
    },
    "mne.read_bem_surfaces": {
     "line number": [
      241
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      239,
      256
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      249,
      259,
      263,
      267,
      276,
      277,
      280,
      284
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      254,
      257,
      278
     ]
    },
    "mne.tests.test_source_space.fname_bem": {
     "line number": [
      241,
      247
     ]
    },
    "mne.tests.test_source_space.fname_bem_3": {
     "line number": [
      247
     ]
    },
    "mne.tests.test_source_space.fname_bem_3_sol": {
     "line number": [
      243,
      247
     ]
    },
    "mne.tests.test_source_space.fname_bem_sol": {
     "line number": [
      244
     ]
    },
    "mne.tests.test_source_space.fname_mri": {
     "line number": [
      260,
      264,
      268
     ]
    },
    "mne.tests.test_source_space.fname_vol": {
     "line number": [
      239
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      258,
      262,
      266,
      279,
      283,
      235
     ]
    },
    "mne.tests.test_source_space.subjects_dir": {
     "line number": [
      251,
      260,
      264,
      268
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      252
     ]
    },
    "repr": {
     "line number": [
      270,
      270,
      271
     ]
    },
    "zip": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_write_source_space": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      493,
      495
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      482
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      485,
      488,
      496
     ]
    },
    "mne.source_space._compare_source_spaces": {
     "line number": [
      489
     ]
    },
    "mne.tests.test_source_space.fname": {
     "line number": [
      485
     ]
    },
    "mne.tests.test_source_space.pytest": {
     "line number": [
      493,
      495,
      481
     ]
    },
    "mne.write_source_spaces": {
     "line number": [
      487,
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_source_space.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.trans_fname": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.vertex_to_mni": {
  "data": {
   "shadows": "mne.vertex_to_mni"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.write_source_spaces": {
  "data": {
   "shadows": "mne.write_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_surface": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.tests.test_surface.data_path": {
     "line number": [
      24,
      27,
      29
     ]
    },
    "mne.tests.test_surface.subjects_dir": {
     "line number": [
      25
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      263
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      31
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      27,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_surface.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_surface._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_surface._compute_nearest": {
  "data": {
   "shadows": "mne.surface._compute_nearest"
  },
  "type": "import"
 },
 "mne.tests.test_surface._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.tests.test_surface._normal_orth": {
  "data": {
   "shadows": "mne.surface._normal_orth"
  },
  "type": "import"
 },
 "mne.tests.test_surface._read_patch": {
  "data": {
   "shadows": "mne.surface._read_patch"
  },
  "type": "import"
 },
 "mne.tests.test_surface._tessellate_sphere": {
  "data": {
   "shadows": "mne.surface._tessellate_sphere"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_surface.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_surface.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.tests.test_surface.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.tests.test_surface.decimate_surface": {
  "data": {
   "shadows": "mne.decimate_surface"
  },
  "type": "import"
 },
 "mne.tests.test_surface.dig_mri_distances": {
  "data": {
   "shadows": "mne.dig_mri_distances"
  },
  "type": "import"
 },
 "mne.tests.test_surface.fast_cross_3d": {
  "data": {
   "shadows": "mne.surface.fast_cross_3d"
  },
  "type": "import"
 },
 "mne.tests.test_surface.fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_surface.fname_raw": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_surface.fname_trans": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_surface.get_head_surf": {
  "data": {
   "shadows": "mne.surface.get_head_surf"
  },
  "type": "import"
 },
 "mne.tests.test_surface.get_meg_helmet_surf": {
  "data": {
   "shadows": "mne.surface.get_meg_helmet_surf"
  },
  "type": "import"
 },
 "mne.tests.test_surface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_surface.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.tests.test_surface.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_surface.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_surface.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_surface.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_curvature": {
  "data": {
   "shadows": "mne.surface.read_curvature"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_morph_map": {
  "data": {
   "shadows": "mne.surface.read_morph_map"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_surface.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.tests.test_surface.requires_vtk": {
  "data": {
   "shadows": "mne.utils.requires_vtk"
  },
  "type": "import"
 },
 "mne.tests.test_surface.rng": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_surface.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_surface.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_surface.subjects_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_surface.test_compute_nearest": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "len": {
     "line number": [
      109,
      109
     ]
    },
    "mne.surface._compute_nearest": {
     "line number": [
      96,
      97,
      98,
      104,
      105,
      106
     ]
    },
    "mne.tests.test_surface.rng": {
     "line number": [
      91,
      93
     ]
    },
    "numpy.arange": {
     "line number": [
      93
     ]
    },
    "numpy.int64": {
     "line number": [
      93
     ]
    },
    "numpy.sqrt": {
     "line number": [
      92
     ]
    },
    "numpy.sum": {
     "line number": [
      92
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      99,
      100,
      101,
      107,
      108,
      111,
      112
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      109
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      108
     ]
    },
    "zip": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_decimate_surface_sphere": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "len": {
     "line number": [
      227,
      228,
      236
     ]
    },
    "mne.decimate_surface": {
     "line number": [
      231
     ]
    },
    "mne.surface._tessellate_sphere": {
     "line number": [
      226
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      230
     ]
    },
    "mne.utils.requires_freesurfer": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_decimate_surface_vtk": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      216,
      220
     ]
    },
    "len": {
     "line number": [
      215,
      217
     ]
    },
    "mne.decimate_surface": {
     "line number": [
      214,
      217,
      220
     ]
    },
    "mne.tests.test_surface.pytest": {
     "line number": [
      216,
      220
     ]
    },
    "mne.utils.requires_vtk": {
     "line number": [
      205
     ]
    },
    "numpy.array": {
     "line number": [
      208,
      212,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_dig_mri_distances": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      244
     ]
    },
    "mne.dig_mri_distances": {
     "line number": [
      248
     ]
    },
    "mne.io.read_info": {
     "line number": [
      247
     ]
    },
    "mne.tests.test_surface.fname_raw": {
     "line number": [
      247
     ]
    },
    "mne.tests.test_surface.fname_trans": {
     "line number": [
      248
     ]
    },
    "mne.tests.test_surface.pytest": {
     "line number": [
      239
     ]
    },
    "mne.tests.test_surface.subjects_dir": {
     "line number": [
      248
     ]
    },
    "numpy.mean": {
     "line number": [
      251
     ]
    },
    "numpy.sum": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_fast_cross_3d": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "mne.surface.fast_cross_3d": {
     "line number": [
      82,
      85
     ]
    },
    "mne.tests.test_surface.rng": {
     "line number": [
      79,
      80
     ]
    },
    "numpy.cross": {
     "line number": [
      81
     ]
    },
    "numpy.newaxis": {
     "line number": [
      85
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      83,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_head": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      73
     ]
    },
    "len": {
     "line number": [
      72,
      72
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      67
     ]
    },
    "mne.surface.get_head_surf": {
     "line number": [
      70,
      71,
      73
     ]
    },
    "mne.tests.test_surface.pytest": {
     "line number": [
      73
     ]
    },
    "mne.tests.test_surface.subjects_dir": {
     "line number": [
      70,
      71,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_helmet": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "len": {
     "line number": [
      63,
      64,
      64
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_ARTEMIS123_GRAD": {
     "line number": [
      51
     ]
    },
    "mne.io.read_info": {
     "line number": [
      46,
      52,
      53,
      54,
      55
     ]
    },
    "mne.pick_types": {
     "line number": [
      48
     ]
    },
    "mne.surface.get_meg_helmet_surf": {
     "line number": [
      60
     ]
    },
    "mne.tests.test_surface.fname_raw": {
     "line number": [
      37,
      46,
      52
     ]
    },
    "mne.tests.test_surface.fname_trans": {
     "line number": [
      43,
      45
     ]
    },
    "mne.transforms._get_trans": {
     "line number": [
      45
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      63,
      64
     ]
    },
    "os.path.dirname": {
     "line number": [
      36
     ]
    },
    "os.path.join": {
     "line number": [
      36,
      37,
      38,
      40,
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_io_surface": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      156
     ]
    },
    "mne.read_surface": {
     "line number": [
      166,
      170,
      181
     ]
    },
    "mne.surface._read_patch": {
     "line number": [
      190
     ]
    },
    "mne.tests.test_surface.data_path": {
     "line number": [
      160,
      162,
      189
     ]
    },
    "mne.tests.test_surface.fname": {
     "line number": [
      164,
      166,
      175
     ]
    },
    "mne.tests.test_surface.pytest": {
     "line number": [
      165,
      169
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      159
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      174
     ]
    },
    "mne.write_surface": {
     "line number": [
      167,
      179
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      172,
      173,
      183,
      184
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      174
     ]
    },
    "os.path.join": {
     "line number": [
      160,
      162,
      167,
      170,
      179,
      181,
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_make_morph_maps": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "len": {
     "line number": [
      143,
      143
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      116
     ]
    },
    "mne.surface.read_morph_map": {
     "line number": [
      136,
      141,
      151
     ]
    },
    "mne.tests.test_surface.os": {
     "line number": [
      122,
      123
     ]
    },
    "mne.tests.test_surface.pytest": {
     "line number": [
      150,
      115
     ]
    },
    "mne.tests.test_surface.subjects_dir": {
     "line number": [
      128,
      141
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      120
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      135
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      143
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      147
     ]
    },
    "os.path.join": {
     "line number": [
      122,
      123,
      128,
      129
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      153
     ]
    },
    "shutil.copyfile": {
     "line number": [
      128
     ]
    },
    "zip": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_normal_orth": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "mne.surface._normal_orth": {
     "line number": [
      259
     ]
    },
    "numpy.eye": {
     "line number": [
      257
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_read_curv": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "len": {
     "line number": [
      201,
      201
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      193
     ]
    },
    "mne.read_surface": {
     "line number": [
      200
     ]
    },
    "mne.surface.read_curvature": {
     "line number": [
      199
     ]
    },
    "mne.tests.test_surface.data_path": {
     "line number": [
      196,
      197
     ]
    },
    "numpy.logical_or": {
     "line number": [
      202
     ]
    },
    "os.path.join": {
     "line number": [
      196,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_surface.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_surface.write_surface": {
  "data": {
   "shadows": "mne.write_surface"
  },
  "type": "import"
 },
 "mne.tests.test_transforms": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      27
     ]
    },
    "mne.tests.test_transforms.base_dir": {
     "line number": [
      33,
      34,
      35,
      36
     ]
    },
    "mne.tests.test_transforms.data_path": {
     "line number": [
      28,
      29
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      513
     ]
    },
    "os.path.dirname": {
     "line number": [
      32
     ]
    },
    "os.path.join": {
     "line number": [
      28,
      29,
      32,
      33,
      34,
      35,
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.tests.test_transforms.SphericalSurfaceWarp": {
  "data": {
   "shadows": "mne.transforms._SphericalSurfaceWarp"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._average_quats": {
  "data": {
   "shadows": "mne.transforms._average_quats"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._cart_to_sph": {
  "data": {
   "shadows": "mne.transforms._cart_to_sph"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._cartesian_to_sphere": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.arctan2": {
     "line number": [
      121,
      122
     ]
    },
    "numpy.hypot": {
     "line number": [
      119,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms._check_fit_matched_points": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "int": {
     "line number": [
      419
     ]
    },
    "len": {
     "line number": [
      419
     ]
    },
    "mne.tests.test_transforms.mne": {
     "line number": [
      412,
      414,
      417,
      435
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      422
     ]
    },
    "mne.transforms._euler_to_quat": {
     "line number": [
      420
     ]
    },
    "mne.transforms._fit_matched_points": {
     "line number": [
      418
     ]
    },
    "mne.transforms._quat_to_affine": {
     "line number": [
      430
     ]
    },
    "mne.transforms.apply_trans": {
     "line number": [
      434,
      437
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      423,
      433,
      436
     ]
    },
    "numpy.newaxis": {
     "line number": [
      434,
      437
     ]
    },
    "numpy.ones": {
     "line number": [
      432
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      422
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms._euler_to_quat": {
  "data": {
   "shadows": "mne.transforms._euler_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._find_trans": {
  "data": {
   "shadows": "mne.transforms._find_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._find_vector_rotation": {
  "data": {
   "shadows": "mne.transforms._find_vector_rotation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._fit_matched_points": {
  "data": {
   "shadows": "mne.transforms._fit_matched_points"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._pol_to_cart": {
  "data": {
   "shadows": "mne.transforms._pol_to_cart"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._polar_to_cartesian": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      164
     ]
    },
    "numpy.sin": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms._quat_real": {
  "data": {
   "shadows": "mne.transforms._quat_real"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._quat_to_affine": {
  "data": {
   "shadows": "mne.transforms._quat_to_affine"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._quat_to_euler": {
  "data": {
   "shadows": "mne.transforms._quat_to_euler"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._read_fs_xfm": {
  "data": {
   "shadows": "mne.transforms._read_fs_xfm"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._sph_to_cart": {
  "data": {
   "shadows": "mne.transforms._sph_to_cart"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._sphere_to_cartesian": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      129,
      130
     ]
    },
    "numpy.sin": {
     "line number": [
      128,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms._topo_to_phi_theta": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "mne.tests.test_transforms._topo_to_sph": {
  "data": {
   "shadows": "mne.transforms._topo_to_sph"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._write_fs_xfm": {
  "data": {
   "shadows": "mne.transforms._write_fs_xfm"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.base_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.combine_transforms": {
  "data": {
   "shadows": "mne.transforms.combine_transforms"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.ctf_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.data_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname_eve": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname_trans": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.get_ras_to_neuromag_trans": {
  "data": {
   "shadows": "mne.transforms.get_ras_to_neuromag_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.hp_fif_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.quat_to_rot": {
  "data": {
   "shadows": "mne.transforms.quat_to_rot"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.quats": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "mne.tests.test_transforms.pytest": {
     "line number": [
      400
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      405
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation": {
  "data": {
   "shadows": "mne.transforms.rotation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation3d": {
  "data": {
   "shadows": "mne.transforms.rotation3d"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation3d_align_z_axis": {
  "data": {
   "shadows": "mne.transforms.rotation3d_align_z_axis"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation_angles": {
  "data": {
   "shadows": "mne.transforms.rotation_angles"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.test_average_quats": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      348,
      353
     ]
    },
    "float": {
     "line number": [
      338
     ]
    },
    "len": {
     "line number": [
      365
     ]
    },
    "list": {
     "line number": [
      357
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      361
     ]
    },
    "mne.transforms._average_quats": {
     "line number": [
      349,
      354
     ]
    },
    "mne.transforms._quat_real": {
     "line number": [
      359
     ]
    },
    "mne.transforms.quat_to_rot": {
     "line number": [
      351,
      363
     ]
    },
    "numpy.array": {
     "line number": [
      334,
      363
     ]
    },
    "numpy.concatenate": {
     "line number": [
      358
     ]
    },
    "numpy.eye": {
     "line number": [
      357
     ]
    },
    "numpy.isclose": {
     "line number": [
      359
     ]
    },
    "numpy.sqrt": {
     "line number": [
      333
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      349,
      352,
      354,
      362,
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_combine": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      265,
      267,
      269
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      259
     ]
    },
    "mne.read_trans": {
     "line number": [
      262
     ]
    },
    "mne.tests.test_transforms.fname": {
     "line number": [
      262
     ]
    },
    "mne.tests.test_transforms.pytest": {
     "line number": [
      265,
      267,
      269
     ]
    },
    "mne.transforms.combine_transforms": {
     "line number": [
      264,
      265,
      267,
      269
     ]
    },
    "mne.transforms.invert_transform": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_euler": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "mne.tests.test_transforms.quats": {
     "line number": [
      505,
      507,
      508
     ]
    },
    "mne.transforms._euler_to_quat": {
     "line number": [
      506
     ]
    },
    "mne.transforms._quat_to_euler": {
     "line number": [
      505
     ]
    },
    "mne.transforms.quat_to_rot": {
     "line number": [
      508
     ]
    },
    "mne.transforms.rotation": {
     "line number": [
      509
     ]
    },
    "numpy.array": {
     "line number": [
      509
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      507,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_fif_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.test_fit_matched_points": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      452
     ]
    },
    "len": {
     "line number": [
      458,
      480
     ]
    },
    "mne.tests.test_transforms._check_fit_matched_points": {
     "line number": [
      462,
      490
     ]
    },
    "mne.tests.test_transforms.pytest": {
     "line number": [
      443,
      444
     ]
    },
    "mne.tests.test_transforms.quats": {
     "line number": [
      452
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      495
     ]
    },
    "mne.transforms.quat_to_rot": {
     "line number": [
      453
     ]
    },
    "mne.transforms.translation": {
     "line number": [
      451,
      453,
      466,
      494,
      498
     ]
    },
    "numpy.allclose": {
     "line number": [
      493,
      494
     ]
    },
    "numpy.dot": {
     "line number": [
      453
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      498
     ]
    },
    "numpy.ones": {
     "line number": [
      458,
      480
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      495
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      449
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      464,
      465,
      466
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      496,
      497,
      499,
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_fs_xfm": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      393,
      396
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      368
     ]
    },
    "mne.tests.test_transforms.data_path": {
     "line number": [
      372
     ]
    },
    "mne.tests.test_transforms.fname": {
     "line number": [
      372,
      374
     ]
    },
    "mne.tests.test_transforms.pytest": {
     "line number": [
      393,
      396
     ]
    },
    "mne.transforms._read_fs_xfm": {
     "line number": [
      374,
      381,
      387,
      394,
      397
     ]
    },
    "mne.transforms._write_fs_xfm": {
     "line number": [
      380,
      386,
      395
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      378
     ]
    },
    "numpy.eye": {
     "line number": [
      376
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      385
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      376,
      383,
      389
     ]
    },
    "open": {
     "line number": [
      391
     ]
    },
    "os.path.join": {
     "line number": [
      372,
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_get_ras_to_neuromag_trans": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "mne.transforms.apply_trans": {
     "line number": [
      106,
      111
     ]
    },
    "mne.transforms.get_ras_to_neuromag_trans": {
     "line number": [
      110
     ]
    },
    "mne.transforms.rotation": {
     "line number": [
      105
     ]
    },
    "mne.transforms.translation": {
     "line number": [
      105
     ]
    },
    "numpy.dot": {
     "line number": [
      105
     ]
    },
    "numpy.pi": {
     "line number": [
      104,
      104
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      114
     ]
    },
    "numpy.vstack": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_get_trans": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      59
     ]
    },
    "mne.read_trans": {
     "line number": [
      62
     ]
    },
    "mne.tests.test_transforms.fname": {
     "line number": [
      62
     ]
    },
    "mne.tests.test_transforms.fname_trans": {
     "line number": [
      64
     ]
    },
    "mne.transforms._get_trans": {
     "line number": [
      64
     ]
    },
    "mne.transforms.invert_transform": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_io_trans": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      84
     ]
    },
    "RuntimeError": {
     "line number": [
      73
     ]
    },
    "RuntimeWarning": {
     "line number": [
      88
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      68
     ]
    },
    "mne.read_trans": {
     "line number": [
      74,
      78,
      84
     ]
    },
    "mne.tests.test_transforms.fname": {
     "line number": [
      74
     ]
    },
    "mne.tests.test_transforms.fname_eve": {
     "line number": [
      84
     ]
    },
    "mne.tests.test_transforms.os": {
     "line number": [
      72
     ]
    },
    "mne.tests.test_transforms.pytest": {
     "line number": [
      73,
      84,
      88
     ]
    },
    "mne.transforms._find_trans": {
     "line number": [
      73,
      77
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      71
     ]
    },
    "mne.write_trans": {
     "line number": [
      89
     ]
    },
    "os.path.join": {
     "line number": [
      72,
      75,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_polar_to_cartesian": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "mne.tests.test_transforms._polar_to_cartesian": {
     "line number": [
      180,
      185
     ]
    },
    "mne.transforms._pol_to_cart": {
     "line number": [
      176,
      186
     ]
    },
    "numpy.array": {
     "line number": [
      176,
      184
     ]
    },
    "numpy.cos": {
     "line number": [
      174
     ]
    },
    "numpy.pi": {
     "line number": [
      172,
      183
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      181
     ]
    },
    "numpy.sin": {
     "line number": [
      175
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      178,
      179,
      180,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_quaternions": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "mne.io.read_info": {
     "line number": [
      277
     ]
    },
    "mne.tests.test_transforms.ctf_fname": {
     "line number": [
      276
     ]
    },
    "mne.tests.test_transforms.fname": {
     "line number": [
      276,
      277
     ]
    },
    "mne.tests.test_transforms.hp_fif_fname": {
     "line number": [
      276
     ]
    },
    "mne.tests.test_transforms.test_fif_fname": {
     "line number": [
      276
     ]
    },
    "mne.transforms._angle_between_quats": {
     "line number": [
      309,
      312,
      315
     ]
    },
    "mne.transforms.quat_to_rot": {
     "line number": [
      295,
      298
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      295,
      298,
      312,
      315
     ]
    },
    "numpy.array": {
     "line number": [
      279,
      284,
      289,
      311,
      314
     ]
    },
    "numpy.eye": {
     "line number": [
      275
     ]
    },
    "numpy.newaxis": {
     "line number": [
      297,
      297
     ]
    },
    "numpy.pi": {
     "line number": [
      308,
      313,
      316
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      295,
      298,
      309,
      312,
      315
     ]
    },
    "numpy.zeros": {
     "line number": [
      304,
      305,
      313,
      316
     ]
    },
    "range": {
     "line number": [
      302,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_rotation": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "mne.transforms.rotation": {
     "line number": [
      232
     ]
    },
    "mne.transforms.rotation3d": {
     "line number": [
      231
     ]
    },
    "mne.transforms.rotation_angles": {
     "line number": [
      234,
      236
     ]
    },
    "numpy.pi": {
     "line number": [
      228
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      233
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      235,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_rotation3d_align_z_axis": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "mne.transforms.rotation3d_align_z_axis": {
     "line number": [
      256
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      256
     ]
    },
    "zip": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_sph_to_cart": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "mne.tests.test_transforms._cartesian_to_sphere": {
     "line number": [
      154
     ]
    },
    "mne.tests.test_transforms._sphere_to_cartesian": {
     "line number": [
      155
     ]
    },
    "mne.transforms._cart_to_sph": {
     "line number": [
      149,
      152
     ]
    },
    "mne.transforms._sph_to_cart": {
     "line number": [
      143,
      149,
      153
     ]
    },
    "numpy.array": {
     "line number": [
      143,
      154
     ]
    },
    "numpy.cos": {
     "line number": [
      139,
      141
     ]
    },
    "numpy.newaxis": {
     "line number": [
      152
     ]
    },
    "numpy.pi": {
     "line number": [
      138,
      156
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      146
     ]
    },
    "numpy.sin": {
     "line number": [
      140,
      142
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      144,
      145,
      149,
      157,
      158,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_topo_to_sph": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      208
     ]
    },
    "mne.tests.test_transforms._sphere_to_cartesian": {
     "line number": [
      217
     ]
    },
    "mne.tests.test_transforms._topo_to_phi_theta": {
     "line number": [
      209,
      211
     ]
    },
    "mne.transforms._sph_to_cart": {
     "line number": [
      205
     ]
    },
    "mne.transforms._topo_to_sph": {
     "line number": [
      204
     ]
    },
    "numpy.array": {
     "line number": [
      204,
      220
     ]
    },
    "numpy.ones_like": {
     "line number": [
      216
     ]
    },
    "numpy.pi": {
     "line number": [
      212,
      213,
      214
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      198
     ]
    },
    "numpy.sqrt": {
     "line number": [
      220,
      221
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      211,
      214,
      222,
      223
     ]
    },
    "zip": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_tps": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "mne.transforms._SphericalSurfaceWarp": {
     "line number": [
      51
     ]
    },
    "mne.transforms._sph_to_cart": {
     "line number": [
      46
     ]
    },
    "numpy.array": {
     "line number": [
      43
     ]
    },
    "numpy.linspace": {
     "line number": [
      41,
      42
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      43
     ]
    },
    "numpy.pi": {
     "line number": [
      41,
      42
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      56
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      45
     ]
    },
    "repr": {
     "line number": [
      52,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_vector_rotation": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "mne.transforms._angle_between_quats": {
     "line number": [
      328
     ]
    },
    "mne.transforms._find_vector_rotation": {
     "line number": [
      323
     ]
    },
    "mne.transforms.rot_to_quat": {
     "line number": [
      326,
      327
     ]
    },
    "numpy.array": {
     "line number": [
      321,
      322
     ]
    },
    "numpy.eye": {
     "line number": [
      327
     ]
    },
    "numpy.pi": {
     "line number": [
      328
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      328
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.tests.test_transforms.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.write_trans": {
  "data": {
   "shadows": "mne.write_trans"
  },
  "type": "import"
 },
 "mne.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stft": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stft.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "mne.time_frequency._stft.istft": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      124,
      131,
      135,
      138
     ]
    },
    "ifft": {
     "line number": [
      166
     ]
    },
    "numpy.arange": {
     "line number": [
      152
     ]
    },
    "numpy.conj": {
     "line number": [
      165,
      169
     ]
    },
    "numpy.empty": {
     "line number": [
      161
     ]
    },
    "numpy.float64": {
     "line number": [
      146,
      156
     ]
    },
    "numpy.pi": {
     "line number": [
      152
     ]
    },
    "numpy.real": {
     "line number": [
      169
     ]
    },
    "numpy.sin": {
     "line number": [
      152
     ]
    },
    "numpy.sqrt": {
     "line number": [
      159
     ]
    },
    "numpy.zeros": {
     "line number": [
      146,
      156
     ]
    },
    "range": {
     "line number": [
      157,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency._stft.stft": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      38,
      48,
      56,
      60
     ]
    },
    "fft": {
     "line number": [
      93
     ]
    },
    "float": {
     "line number": [
      63
     ]
    },
    "int": {
     "line number": [
      44,
      53,
      63
     ]
    },
    "math.ceil": {
     "line number": [
      63
     ]
    },
    "numpy.arange": {
     "line number": [
      74
     ]
    },
    "numpy.complex128": {
     "line number": [
      68
     ]
    },
    "numpy.isrealobj": {
     "line number": [
      37
     ]
    },
    "numpy.pi": {
     "line number": [
      74
     ]
    },
    "numpy.sin": {
     "line number": [
      74
     ]
    },
    "numpy.sqrt": {
     "line number": [
      80
     ]
    },
    "numpy.zeros": {
     "line number": [
      68,
      77,
      83
     ]
    },
    "range": {
     "line number": [
      78,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stft.stft_norm1": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      243
     ]
    },
    "numpy.sum": {
     "line number": [
      246,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stft.stft_norm2": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      223,
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stft.stftfreq": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "fftfreq": {
     "line number": [
      198
     ]
    },
    "float": {
     "line number": [
      201
     ]
    },
    "numpy.abs": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stockwell._check_input_st": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      30
     ]
    },
    "_is_power_of_two": {
     "line number": [
      26
     ]
    },
    "int": {
     "line number": [
      28
     ]
    },
    "mne.time_frequency._stockwell.math": {
     "line number": [
      28,
      28
     ]
    },
    "numpy.concatenate": {
     "line number": [
      37
     ]
    },
    "numpy.zeros": {
     "line number": [
      36
     ]
    },
    "warn": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._check_input_st._is_power_of_two": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._precompute_st_windows": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      51
     ]
    },
    "len": {
     "line number": [
      50,
      50,
      53
     ]
    },
    "numpy.arange": {
     "line number": [
      49
     ]
    },
    "numpy.complex128": {
     "line number": [
      50
     ]
    },
    "numpy.empty": {
     "line number": [
      50
     ]
    },
    "numpy.exp": {
     "line number": [
      56
     ]
    },
    "numpy.ones": {
     "line number": [
      53
     ]
    },
    "numpy.pi": {
     "line number": [
      55
     ]
    },
    "numpy.r_": {
     "line number": [
      46
     ]
    },
    "numpy.sqrt": {
     "line number": [
      55
     ]
    },
    "scipy.fftpack.fft": {
     "line number": [
      58
     ]
    },
    "scipy.fftpack.fftfreq": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._st": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      69
     ]
    },
    "len": {
     "line number": [
      65
     ]
    },
    "numpy.complex128": {
     "line number": [
      65
     ]
    },
    "numpy.concatenate": {
     "line number": [
      68
     ]
    },
    "numpy.empty": {
     "line number": [
      65
     ]
    },
    "scipy.fftpack.fft": {
     "line number": [
      67
     ]
    },
    "scipy.fftpack.ifft": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._st_power_itc": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      79
     ]
    },
    "enumerate": {
     "line number": [
      84
     ]
    },
    "len": {
     "line number": [
      80
     ]
    },
    "numpy.abs": {
     "line number": [
      91,
      95
     ]
    },
    "numpy.concatenate": {
     "line number": [
      83
     ]
    },
    "numpy.empty": {
     "line number": [
      80
     ]
    },
    "numpy.empty_like": {
     "line number": [
      81
     ]
    },
    "numpy.mean": {
     "line number": [
      95,
      97
     ]
    },
    "scipy.fftpack.fft": {
     "line number": [
      82
     ]
    },
    "scipy.fftpack.ifft": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.tfr_array_stockwell": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      160
     ]
    },
    "_validate_type": {
     "line number": [
      158
     ]
    },
    "bool": {
     "line number": [
      164
     ]
    },
    "enumerate": {
     "line number": [
      186
     ]
    },
    "iter": {
     "line number": [
      186
     ]
    },
    "mne.time_frequency._stockwell._check_input_st": {
     "line number": [
      165
     ]
    },
    "mne.time_frequency._stockwell._precompute_st_windows": {
     "line number": [
      177
     ]
    },
    "mne.time_frequency._stockwell._st_power_itc": {
     "line number": [
      182
     ]
    },
    "my_st": {
     "line number": [
      183
     ]
    },
    "numpy.abs": {
     "line number": [
      173,
      174
     ]
    },
    "numpy.empty": {
     "line number": [
      179,
      180
     ]
    },
    "numpy.ndarray": {
     "line number": [
      158
     ]
    },
    "parallel": {
     "line number": [
      183
     ]
    },
    "parallel_func": {
     "line number": [
      182
     ]
    },
    "range": {
     "line number": [
      185
     ]
    },
    "scipy.fftpack.fftfreq": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell.tfr_stockwell": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "AverageTFR": {
     "line number": [
      266,
      268
     ]
    },
    "_get_data": {
     "line number": [
      254
     ]
    },
    "_pick_data_channels": {
     "line number": [
      255
     ]
    },
    "check_n_jobs": {
     "line number": [
      258
     ]
    },
    "copy.deepcopy": {
     "line number": [
      268
     ]
    },
    "len": {
     "line number": [
      265
     ]
    },
    "mne.time_frequency._stockwell.tfr_array_stockwell": {
     "line number": [
      259
     ]
    },
    "pick_info": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.ar": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.ar._yule_walker": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      22
     ]
    },
    "len": {
     "line number": [
      27
     ]
    },
    "numpy.arange": {
     "line number": [
      20
     ]
    },
    "numpy.dot": {
     "line number": [
      24,
      26
     ]
    },
    "numpy.float64": {
     "line number": [
      21
     ]
    },
    "numpy.sqrt": {
     "line number": [
      30
     ]
    },
    "numpy.zeros": {
     "line number": [
      21
     ]
    },
    "range": {
     "line number": [
      25
     ]
    },
    "scipy.linalg.solve": {
     "line number": [
      28
     ]
    },
    "scipy.linalg.toeplitz": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.ar.fit_iir_model_raw": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "_apply_scaling_array": {
     "line number": [
      75
     ]
    },
    "_handle_default": {
     "line number": [
      74
     ]
    },
    "_picks_by_type": {
     "line number": [
      73
     ]
    },
    "_picks_to_idx": {
     "line number": [
      70
     ]
    },
    "mne.time_frequency.ar._yule_walker": {
     "line number": [
      77
     ]
    },
    "numpy.array": {
     "line number": [
      78
     ]
    },
    "numpy.concatenate": {
     "line number": [
      78
     ]
    },
    "pick_info": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.ar.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.ar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.multitaper._compute_mt_params": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      341
     ]
    },
    "float": {
     "line number": [
      337
     ]
    },
    "int": {
     "line number": [
      347
     ]
    },
    "isinstance": {
     "line number": [
      330
     ]
    },
    "len": {
     "line number": [
      352,
      354,
      356
     ]
    },
    "mne.time_frequency.multitaper.dpss_windows": {
     "line number": [
      348
     ]
    },
    "numpy.newaxis": {
     "line number": [
      333
     ]
    },
    "numpy.ones": {
     "line number": [
      334
     ]
    },
    "scipy.signal.get_window": {
     "line number": [
      333
     ]
    },
    "str": {
     "line number": [
      330
     ]
    },
    "warn": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._csd_from_mt": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      273,
      274
     ]
    },
    "numpy.sum": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._mt_spectra": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      315
     ]
    },
    "len": {
     "line number": [
      313
     ]
    },
    "numpy.complex128": {
     "line number": [
      314
     ]
    },
    "numpy.mean": {
     "line number": [
      305
     ]
    },
    "numpy.newaxis": {
     "line number": [
      316
     ]
    },
    "numpy.sqrt": {
     "line number": [
      318,
      320
     ]
    },
    "numpy.zeros": {
     "line number": [
      313
     ]
    },
    "rfft": {
     "line number": [
      316
     ]
    },
    "rfftfreq": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._psd_from_mt": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._psd_from_mt_adaptive": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156,
      159
     ]
    },
    "enumerate": {
     "line number": [
      177
     ]
    },
    "len": {
     "line number": [
      155
     ]
    },
    "mne.time_frequency.multitaper._psd_from_mt": {
     "line number": [
      164,
      195,
      214
     ]
    },
    "numpy.empty": {
     "line number": [
      169,
      175
     ]
    },
    "numpy.max": {
     "line number": [
      210
     ]
    },
    "numpy.mean": {
     "line number": [
      210
     ]
    },
    "numpy.newaxis": {
     "line number": [
      164,
      164,
      195,
      199,
      200,
      201
     ]
    },
    "numpy.pi": {
     "line number": [
      165,
      165
     ]
    },
    "numpy.sqrt": {
     "line number": [
      161
     ]
    },
    "numpy.sum": {
     "line number": [
      169
     ]
    },
    "numpy.trapz": {
     "line number": [
      165
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      197
     ]
    },
    "range": {
     "line number": [
      198
     ]
    },
    "warn": {
     "line number": [
      218
     ]
    },
    "zip": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.dpss_windows": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78
     ]
    },
    "_get_dpss": {
     "line number": [
      95
     ]
    },
    "float": {
     "line number": [
      68
     ]
    },
    "irfft": {
     "line number": [
      104
     ]
    },
    "len": {
     "line number": [
      117
     ]
    },
    "mne.time_frequency.multitaper.operator": {
     "line number": [
      66,
      67
     ]
    },
    "next_fast_len": {
     "line number": [
      102
     ]
    },
    "numpy.arange": {
     "line number": [
      69,
      82
     ]
    },
    "numpy.argmax": {
     "line number": [
      115
     ]
    },
    "numpy.array": {
     "line number": [
      92
     ]
    },
    "numpy.dot": {
     "line number": [
      109
     ]
    },
    "numpy.int32": {
     "line number": [
      66,
      67
     ]
    },
    "numpy.linspace": {
     "line number": [
      84
     ]
    },
    "numpy.sinc": {
     "line number": [
      107
     ]
    },
    "numpy.sqrt": {
     "line number": [
      88
     ]
    },
    "rfft": {
     "line number": [
      103
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      83
     ]
    },
    "sum_squared": {
     "line number": [
      88
     ]
    },
    "tmp": {
     "line number": [
      84
     ]
    },
    "warn": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.get_window": {
  "data": {
   "shadows": "scipy.signal.get_window"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.psd_array_multitaper": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      412
     ]
    },
    "len": {
     "line number": [
      431,
      431
     ]
    },
    "max": {
     "line number": [
      431
     ]
    },
    "min": {
     "line number": [
      439
     ]
    },
    "mne.time_frequency.multitaper._compute_mt_params": {
     "line number": [
      421
     ]
    },
    "mne.time_frequency.multitaper._mt_spectra": {
     "line number": [
      434
     ]
    },
    "mne.time_frequency.multitaper._psd_from_mt": {
     "line number": [
      437
     ]
    },
    "mne.time_frequency.multitaper._psd_from_mt_adaptive": {
     "line number": [
      441
     ]
    },
    "my_psd_from_mt_adaptive": {
     "line number": [
      442
     ]
    },
    "numpy.arange": {
     "line number": [
      432
     ]
    },
    "numpy.array_split": {
     "line number": [
      443
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      416
     ]
    },
    "numpy.concatenate": {
     "line number": [
      432,
      444
     ]
    },
    "numpy.inf": {
     "line number": [
      363
     ]
    },
    "numpy.newaxis": {
     "line number": [
      436,
      436
     ]
    },
    "numpy.sqrt": {
     "line number": [
      436
     ]
    },
    "numpy.zeros": {
     "line number": [
      429
     ]
    },
    "parallel": {
     "line number": [
      442
     ]
    },
    "parallel_func": {
     "line number": [
      441
     ]
    },
    "rfftfreq": {
     "line number": [
      425
     ]
    },
    "zip": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.tfr_array_multitaper": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "_compute_tfr": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.psd._check_nfft": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      44,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd._check_psd_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      63
     ]
    },
    "_picks_to_idx": {
     "line number": [
      67
     ]
    },
    "_time_mask": {
     "line number": [
      66
     ]
    },
    "isinstance": {
     "line number": [
      62,
      73,
      77
     ]
    },
    "numpy.where": {
     "line number": [
      74
     ]
    },
    "type": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd._decomp_aggregate_mask": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "func": {
     "line number": [
      15
     ]
    },
    "numpy.nanmean": {
     "line number": [
      19
     ]
    },
    "numpy.nanmedian": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd._spect_func": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      32
     ]
    },
    "func": {
     "line number": [
      32
     ]
    },
    "mne.time_frequency.psd._decomp_aggregate_mask": {
     "line number": [
      35,
      37
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.psd.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.time_frequency.psd.psd_array_welch": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      149
     ]
    },
    "_check_option": {
     "line number": [
      135
     ]
    },
    "float": {
     "line number": [
      144,
      146
     ]
    },
    "func": {
     "line number": [
      160,
      162
     ]
    },
    "functools.partial": {
     "line number": [
      160
     ]
    },
    "len": {
     "line number": [
      166
     ]
    },
    "mne.time_frequency.psd._check_nfft": {
     "line number": [
      142
     ]
    },
    "mne.time_frequency.psd._spect_func": {
     "line number": [
      159
     ]
    },
    "my_spect_func": {
     "line number": [
      162
     ]
    },
    "numpy.arange": {
     "line number": [
      146
     ]
    },
    "numpy.array_split": {
     "line number": [
      156
     ]
    },
    "numpy.concatenate": {
     "line number": [
      165
     ]
    },
    "numpy.inf": {
     "line number": [
      86
     ]
    },
    "numpy.where": {
     "line number": [
      151
     ]
    },
    "parallel": {
     "line number": [
      162
     ]
    },
    "parallel_func": {
     "line number": [
      159
     ]
    },
    "scipy.signal.spectrogram": {
     "line number": [
      160
     ]
    },
    "slice": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd.psd_multitaper": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "mne.time_frequency.psd._check_psd_data": {
     "line number": [
      326
     ]
    },
    "numpy.inf": {
     "line number": [
      253
     ]
    },
    "psd_array_multitaper": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd.psd_welch": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "mne.time_frequency.psd._check_psd_data": {
     "line number": [
      245
     ]
    },
    "mne.time_frequency.psd.psd_array_welch": {
     "line number": [
      247
     ]
    },
    "numpy.inf": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.psd.spectrogram": {
  "data": {
   "shadows": "scipy.signal.spectrogram"
  },
  "type": "import"
 },
 "mne.time_frequency.tests": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_ar": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      53
     ]
    },
    "os.path.dirname": {
     "line number": [
      12
     ]
    },
    "os.path.join": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_ar._yule_walker": {
  "data": {
   "shadows": "mne.time_frequency.ar._yule_walker"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.fit_iir_model_raw": {
  "data": {
   "shadows": "mne.time_frequency.ar.fit_iir_model_raw"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.raw_fname": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_ar.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.sm_yw": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.yule_walker"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.test_ar_raw": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.io.read_raw_fif": {
     "line number": [
      31
     ]
    },
    "mne.time_frequency.ar.fit_iir_model_raw": {
     "line number": [
      35,
      43,
      49
     ]
    },
    "mne.time_frequency.tests.test_ar.raw_fname": {
     "line number": [
      31
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      39
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      37,
      44,
      50
     ]
    },
    "scipy.signal.lfilter": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_ar.test_yule_walker": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "mne.time_frequency.ar._yule_walker": {
     "line number": [
      24
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      17,
      18
     ]
    },
    "numpy.newaxis": {
     "line number": [
      24
     ]
    },
    "numpy.random.randn": {
     "line number": [
      22
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      25,
      26
     ]
    },
    "statsmodels.regression.linear_model.yule_walker": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd": {
  "data": {
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_csd.base_dir": {
     "line number": [
      21,
      22
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      554
     ]
    },
    "os.path.dirname": {
     "line number": [
      20
     ]
    },
    "os.path.join": {
     "line number": [
      20,
      21,
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_csd.CrossSpectralDensity": {
  "data": {
   "shadows": "mne.time_frequency.CrossSpectralDensity"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd._generate_coherence_data": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "events": {
     "line number": [
      309,
      326
     ]
    },
    "int": {
     "line number": [
      307
     ]
    },
    "mne.time_frequency.tests.test_csd.mne": {
     "line number": [
      305,
      326
     ]
    },
    "numpy.arange": {
     "line number": [
      308,
      312
     ]
    },
    "numpy.array": {
     "line number": [
      309
     ]
    },
    "numpy.pi": {
     "line number": [
      312,
      315,
      323
     ]
    },
    "numpy.sin": {
     "line number": [
      315,
      323
     ]
    },
    "numpy.vstack": {
     "line number": [
      315
     ]
    },
    "numpy.zeros": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._make_csd": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "len": {
     "line number": [
      28
     ]
    },
    "mne.time_frequency.CrossSpectralDensity": {
     "line number": [
      32
     ]
    },
    "numpy.arange": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._sym_mat_to_vector": {
  "data": {
   "shadows": "mne.time_frequency.csd._sym_mat_to_vector"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd._test_csd_matrix": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "len": {
     "line number": [
      332,
      335
     ]
    },
    "numpy.abs": {
     "line number": [
      350,
      351,
      352,
      355,
      359,
      359,
      360,
      360
     ]
    },
    "numpy.all": {
     "line number": [
      346,
      347,
      355,
      365,
      366
     ]
    },
    "numpy.diag": {
     "line number": [
      342,
      343,
      364
     ]
    },
    "numpy.tril": {
     "line number": [
      346,
      347
     ]
    },
    "numpy.triu": {
     "line number": [
      346,
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._test_fourier_multitaper_parameters": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      371,
      372,
      374,
      375,
      377,
      378,
      380,
      381,
      383,
      384,
      390,
      391,
      392
     ]
    },
    "numpy.random.randn": {
     "line number": [
      388,
      389,
      389,
      392
     ]
    },
    "pytest.raises": {
     "line number": [
      371,
      372,
      374,
      375,
      377,
      378,
      380,
      381,
      383,
      384,
      390,
      391,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._vector_to_sym_mat": {
  "data": {
   "shadows": "mne.time_frequency.csd._vector_to_sym_mat"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.base_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.csd_array_fourier": {
  "data": {
   "shadows": "mne.time_frequency.csd_array_fourier"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_array_morlet": {
  "data": {
   "shadows": "mne.time_frequency.csd_array_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.csd_array_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_fourier": {
  "data": {
   "shadows": "mne.time_frequency.csd_fourier"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_morlet": {
  "data": {
   "shadows": "mne.time_frequency.csd_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.csd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.event_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.pick_channels_csd": {
  "data": {
   "shadows": "mne.time_frequency.pick_channels_csd"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.raw_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.read_csd": {
  "data": {
   "shadows": "mne.time_frequency.read_csd"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.test_csd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43,
      45,
      49,
      54
     ]
    },
    "mne.time_frequency.CrossSpectralDensity": {
     "line number": [
      37,
      43,
      45,
      49,
      54
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      39,
      40
     ]
    },
    "pytest.raises": {
     "line number": [
      43,
      45,
      49,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_fourier": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      437
     ]
    },
    "itertools.product": {
     "line number": [
      404
     ]
    },
    "len": {
     "line number": [
      423
     ]
    },
    "mne.time_frequency.csd_array_fourier": {
     "line number": [
      399,
      407,
      433
     ]
    },
    "mne.time_frequency.csd_fourier": {
     "line number": [
      399,
      411
     ]
    },
    "mne.time_frequency.tests.test_csd._generate_coherence_data": {
     "line number": [
      397
     ]
    },
    "mne.time_frequency.tests.test_csd._test_csd_matrix": {
     "line number": [
      418
     ]
    },
    "mne.time_frequency.tests.test_csd._test_fourier_multitaper_parameters": {
     "line number": [
      399
     ]
    },
    "mne.utils.sum_squared": {
     "line number": [
      423
     ]
    },
    "numpy.abs": {
     "line number": [
      436
     ]
    },
    "numpy.arange": {
     "line number": [
      421
     ]
    },
    "numpy.pi": {
     "line number": [
      422
     ]
    },
    "numpy.sin": {
     "line number": [
      422
     ]
    },
    "sum": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_get_data": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      218,
      220
     ]
    },
    "ValueError": {
     "line number": [
      216,
      217,
      219
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      189
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      192,
      200,
      208
     ]
    },
    "pytest.raises": {
     "line number": [
      216,
      217,
      218,
      219,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_get_frequency_index": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      151
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      140
     ]
    },
    "pytest.raises": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_mean": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      135
     ]
    },
    "ValueError": {
     "line number": [
      130,
      131,
      132
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      88
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      92,
      93,
      94,
      95,
      96,
      100,
      111
     ]
    },
    "pytest.raises": {
     "line number": [
      130,
      131,
      132,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_morlet": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      540
     ]
    },
    "itertools.product": {
     "line number": [
      509
     ]
    },
    "mne.time_frequency.csd_array_morlet": {
     "line number": [
      512
     ]
    },
    "mne.time_frequency.csd_morlet": {
     "line number": [
      517,
      528,
      532,
      541
     ]
    },
    "mne.time_frequency.tests.test_csd._generate_coherence_data": {
     "line number": [
      501
     ]
    },
    "mne.time_frequency.tests.test_csd._test_csd_matrix": {
     "line number": [
      523
     ]
    },
    "mne.time_frequency.tests.test_csd.pytest": {
     "line number": [
      540
     ]
    },
    "mne.time_frequency.tfr_morlet": {
     "line number": [
      526
     ]
    },
    "numpy.mean": {
     "line number": [
      527
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      529,
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_multitaper": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      496
     ]
    },
    "float": {
     "line number": [
      491
     ]
    },
    "itertools.product": {
     "line number": [
      452
     ]
    },
    "len": {
     "line number": [
      475,
      481,
      487
     ]
    },
    "mne.time_frequency.csd_array_multitaper": {
     "line number": [
      446,
      455,
      492
     ]
    },
    "mne.time_frequency.csd_multitaper": {
     "line number": [
      445,
      460,
      472
     ]
    },
    "mne.time_frequency.psd_multitaper": {
     "line number": [
      470
     ]
    },
    "mne.time_frequency.tests.test_csd._generate_coherence_data": {
     "line number": [
      443
     ]
    },
    "mne.time_frequency.tests.test_csd._test_csd_matrix": {
     "line number": [
      467
     ]
    },
    "mne.time_frequency.tests.test_csd._test_fourier_multitaper_parameters": {
     "line number": [
      445
     ]
    },
    "mne.utils.sum_squared": {
     "line number": [
      481
     ]
    },
    "numpy.abs": {
     "line number": [
      495
     ]
    },
    "numpy.arange": {
     "line number": [
      479
     ]
    },
    "numpy.array": {
     "line number": [
      474
     ]
    },
    "numpy.diag": {
     "line number": [
      474
     ]
    },
    "numpy.pi": {
     "line number": [
      480
     ]
    },
    "numpy.sin": {
     "line number": [
      480
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      473,
      476
     ]
    },
    "range": {
     "line number": [
      475
     ]
    },
    "sum": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_pick_frequency": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      177,
      180
     ]
    },
    "ValueError": {
     "line number": [
      183,
      184
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      156
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      160,
      169
     ]
    },
    "pytest.raises": {
     "line number": [
      177,
      180,
      183,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_pickle": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      241
     ]
    },
    "mne.time_frequency.tests.test_csd.pickle": {
     "line number": [
      245,
      247
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      242
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      248
     ]
    },
    "open": {
     "line number": [
      244,
      246
     ]
    },
    "os.path.join": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_repr": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      61,
      64,
      68,
      73,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_save": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "mne.time_frequency.read_csd": {
     "line number": [
      230
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      226
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      227
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      223
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      231
     ]
    },
    "os.path.join": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_equalize_channels": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "mne.channels.equalize_channels": {
     "line number": [
      548
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_pick_channels_csd": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "mne.time_frequency.pick_channels_csd": {
     "line number": [
      259
     ]
    },
    "mne.time_frequency.tests.test_csd._make_csd": {
     "line number": [
      258
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_sym_mat_to_vector": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "mne.time_frequency.csd._sym_mat_to_vector": {
     "line number": [
      272,
      289,
      291
     ]
    },
    "mne.time_frequency.csd._vector_to_sym_mat": {
     "line number": [
      276,
      284,
      290,
      292
     ]
    },
    "numpy.arange": {
     "line number": [
      275,
      283
     ]
    },
    "numpy.array": {
     "line number": [
      268
     ]
    },
    "numpy.float16": {
     "line number": [
      291,
      291,
      292,
      292
     ]
    },
    "numpy.int8": {
     "line number": [
      289,
      289,
      290,
      290
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      272,
      276,
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_multitaper.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.dpss_windows": {
  "data": {
   "shadows": "mne.time_frequency.multitaper.dpss_windows"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.ni": {
  "data": {
   "shadows": "nitime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.requires_nitime": {
  "data": {
   "shadows": "mne.utils.requires_nitime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.test_dpss_windows": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "int": {
     "line number": [
      20
     ]
    },
    "mne.time_frequency.multitaper.dpss_windows": {
     "line number": [
      22,
      29
     ]
    },
    "mne.time_frequency.tests.test_multitaper.pytest": {
     "line number": [
      23,
      31
     ]
    },
    "mne.utils.requires_nitime": {
     "line number": [
      14
     ]
    },
    "nitime.algorithms.dpss_windows": {
     "line number": [
      24,
      32
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      26,
      27,
      35,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_multitaper.test_multitaper_psd": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      49,
      65
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      51,
      51
     ]
    },
    "mne.create_info": {
     "line number": [
      47
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      48
     ]
    },
    "mne.time_frequency.psd_multitaper": {
     "line number": [
      49,
      54,
      66
     ]
    },
    "mne.time_frequency.tests.test_multitaper.pytest": {
     "line number": [
      49,
      57,
      65
     ]
    },
    "mne.utils.requires_nitime": {
     "line number": [
      39
     ]
    },
    "nitime.__version__": {
     "line number": [
      51
     ]
    },
    "nitime.algorithms.spectral.multi_taper_psd": {
     "line number": [
      58
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      45
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      60,
      64
     ]
    },
    "zip": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd": {
  "data": {
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_psd.base_dir": {
     "line number": [
      13,
      14
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      269
     ]
    },
    "os.path.dirname": {
     "line number": [
      12
     ]
    },
    "os.path.join": {
     "line number": [
      12,
      13,
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_psd.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.base_dir": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.event_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_array_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_array_welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.raw_fname": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.test_compares_psd": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "len": {
     "line number": [
      259,
      259,
      260,
      260
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      227
     ]
    },
    "mne.pick_types": {
     "line number": [
      232
     ]
    },
    "mne.time_frequency.psd_welch": {
     "line number": [
      240
     ]
    },
    "mne.time_frequency.tests.test_psd.pytest": {
     "line number": [
      224
     ]
    },
    "mne.time_frequency.tests.test_psd.raw_fname": {
     "line number": [
      227
     ]
    },
    "numpy.array": {
     "line number": [
      250
     ]
    },
    "numpy.sum": {
     "line number": [
      262,
      263,
      265,
      266
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      256,
      257
     ]
    },
    "scipy.signal.welch": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81,
      92,
      96,
      98,
      145
     ]
    },
    "dict": {
     "line number": [
      54,
      56,
      57,
      91,
      95,
      113
     ]
    },
    "events": {
     "line number": [
      102,
      103,
      105,
      110
     ]
    },
    "func": {
     "line number": [
      64,
      65,
      81,
      118,
      122,
      124,
      126,
      145,
      148,
      150
     ]
    },
    "len": {
     "line number": [
      42,
      67,
      67,
      88,
      88,
      140,
      140,
      162,
      162
     ]
    },
    "mne.Epochs": {
     "line number": [
      105,
      110
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      47
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      37
     ]
    },
    "mne.read_events": {
     "line number": [
      102
     ]
    },
    "mne.time_frequency.psd_array_welch": {
     "line number": [
      99
     ]
    },
    "mne.time_frequency.psd_multitaper": {
     "line number": [
      59,
      116
     ]
    },
    "mne.time_frequency.psd_welch": {
     "line number": [
      58,
      84,
      86,
      93,
      97,
      115
     ]
    },
    "mne.time_frequency.tests.test_psd.event_fname": {
     "line number": [
      102
     ]
    },
    "mne.time_frequency.tests.test_psd.pytest": {
     "line number": [
      81,
      92,
      96,
      98,
      145
     ]
    },
    "mne.time_frequency.tests.test_psd.raw_fname": {
     "line number": [
      37
     ]
    },
    "numpy.abs": {
     "line number": [
      75,
      76,
      138,
      139,
      157,
      158
     ]
    },
    "numpy.argmax": {
     "line number": [
      72,
      135,
      154
     ]
    },
    "numpy.argmin": {
     "line number": [
      75,
      138,
      157
     ]
    },
    "numpy.floor": {
     "line number": [
      88,
      89
     ]
    },
    "numpy.pi": {
     "line number": [
      45
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      41
     ]
    },
    "numpy.sin": {
     "line number": [
      45
     ]
    },
    "numpy.sum": {
     "line number": [
      68,
      69,
      141,
      142
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      79,
      130,
      132,
      161
     ]
    },
    "numpy.zeros": {
     "line number": [
      99
     ]
    },
    "zip": {
     "line number": [
      44,
      73,
      136,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd_nan": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "float": {
     "line number": [
      21,
      24,
      30
     ]
    },
    "mne.time_frequency.psd_array_welch": {
     "line number": [
      21,
      24,
      29
     ]
    },
    "numpy.nan": {
     "line number": [
      23
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      20
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      26,
      27,
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd_welch_average_kwarg": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      202
     ]
    },
    "dict": {
     "line number": [
      190
     ]
    },
    "events": {
     "line number": [
      187,
      188,
      196,
      199
     ]
    },
    "len": {
     "line number": [
      173
     ]
    },
    "mne.Epochs": {
     "line number": [
      196,
      199
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      178
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      168
     ]
    },
    "mne.read_events": {
     "line number": [
      187
     ]
    },
    "mne.time_frequency.psd_welch": {
     "line number": [
      205,
      206,
      207
     ]
    },
    "mne.time_frequency.tests.test_psd.event_fname": {
     "line number": [
      187
     ]
    },
    "mne.time_frequency.tests.test_psd.pytest": {
     "line number": [
      165
     ]
    },
    "mne.time_frequency.tests.test_psd.raw_fname": {
     "line number": [
      168
     ]
    },
    "numpy.inf": {
     "line number": [
      181
     ]
    },
    "numpy.median": {
     "line number": [
      221
     ]
    },
    "numpy.pi": {
     "line number": [
      176
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      172
     ]
    },
    "numpy.sin": {
     "line number": [
      176
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      211,
      212,
      218,
      221
     ]
    },
    "zip": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.welch": {
  "data": {
   "shadows": "scipy.signal.welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_stft.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.istft": {
  "data": {
   "shadows": "mne.time_frequency.istft"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stft": {
  "data": {
   "shadows": "mne.time_frequency.stft"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stft_norm2": {
  "data": {
   "shadows": "mne.time_frequency._stft.stft_norm2"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stftfreq": {
  "data": {
   "shadows": "mne.time_frequency.stftfreq"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.test_stft": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "len": {
     "line number": [
      27,
      47
     ]
    },
    "mne.time_frequency._stft.stft_norm2": {
     "line number": [
      33,
      52
     ]
    },
    "mne.time_frequency.istft": {
     "line number": [
      21,
      41,
      59
     ]
    },
    "mne.time_frequency.stft": {
     "line number": [
      20,
      40,
      58
     ]
    },
    "mne.time_frequency.stftfreq": {
     "line number": [
      23,
      43
     ]
    },
    "numpy.abs": {
     "line number": [
      25,
      29,
      45
     ]
    },
    "numpy.all": {
     "line number": [
      28,
      48
     ]
    },
    "numpy.arange": {
     "line number": [
      15
     ]
    },
    "numpy.argmax": {
     "line number": [
      25,
      45
     ]
    },
    "numpy.array": {
     "line number": [
      17
     ]
    },
    "numpy.float64": {
     "line number": [
      15
     ]
    },
    "numpy.pi": {
     "line number": [
      16
     ]
    },
    "numpy.random.randn": {
     "line number": [
      37
     ]
    },
    "numpy.sin": {
     "line number": [
      16
     ]
    },
    "numpy.sqrt": {
     "line number": [
      33,
      52
     ]
    },
    "numpy.sum": {
     "line number": [
      25,
      45
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      33,
      52
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      30,
      49
     ]
    },
    "numpy.zeros": {
     "line number": [
      57
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      34,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell": {
  "data": {
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_stockwell.base_dir": {
     "line number": [
      26,
      27
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      146
     ]
    },
    "os.path.dirname": {
     "line number": [
      25
     ]
    },
    "os.path.join": {
     "line number": [
      25,
      26,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_stockwell.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.AverageTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._check_input_st": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._check_input_st"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._precompute_st_windows": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._precompute_st_windows"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._st": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._st"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._st_power_itc": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._st_power_itc"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.raw_ctf_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_api": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      115,
      120
     ]
    },
    "TypeError": {
     "line number": [
      134
     ]
    },
    "ValueError": {
     "line number": [
      137
     ]
    },
    "events": {
     "line number": [
      111,
      112
     ]
    },
    "isinstance": {
     "line number": [
      127,
      128
     ]
    },
    "len": {
     "line number": [
      142
     ]
    },
    "mne.Epochs": {
     "line number": [
      112
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      108
     ]
    },
    "mne.read_events": {
     "line number": [
      111
     ]
    },
    "mne.time_frequency.AverageTFR": {
     "line number": [
      127,
      128
     ]
    },
    "mne.time_frequency._stockwell.tfr_stockwell": {
     "line number": [
      116,
      121
     ]
    },
    "mne.time_frequency.tests.test_stockwell.base_dir": {
     "line number": [
      110
     ]
    },
    "mne.time_frequency.tests.test_stockwell.pytest": {
     "line number": [
      115,
      120,
      134,
      137
     ]
    },
    "mne.time_frequency.tests.test_stockwell.raw_fname": {
     "line number": [
      108
     ]
    },
    "mne.time_frequency.tfr_array_stockwell": {
     "line number": [
      135,
      138,
      140
     ]
    },
    "numpy.log": {
     "line number": [
      132,
      133
     ]
    },
    "numpy.newaxis": {
     "line number": [
      139
     ]
    },
    "numpy.ones_like": {
     "line number": [
      141
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      136
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      141
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      126
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      143
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      129
     ]
    },
    "os.path.join": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_check_input": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "mne.time_frequency._stockwell._check_input_st": {
     "line number": [
      47
     ]
    },
    "mne.time_frequency.tests.test_stockwell.pytest": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      49,
      50,
      51
     ]
    },
    "numpy.zeros": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_core": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "int": {
     "line number": [
      72,
      76,
      77
     ]
    },
    "len": {
     "line number": [
      80,
      87,
      98
     ]
    },
    "mne.time_frequency._stockwell._precompute_st_windows": {
     "line number": [
      83,
      99
     ]
    },
    "mne.time_frequency._stockwell._st": {
     "line number": [
      85,
      100
     ]
    },
    "numpy.abs": {
     "line number": [
      82,
      86
     ]
    },
    "numpy.arange": {
     "line number": [
      73
     ]
    },
    "numpy.cos": {
     "line number": [
      75
     ]
    },
    "numpy.pi": {
     "line number": [
      75
     ]
    },
    "numpy.sum": {
     "line number": [
      102
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      89
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      103
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      87
     ]
    },
    "scipy.fftpack.fftfreq": {
     "line number": [
      80
     ]
    },
    "scipy.fftpack.ifft": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_ctf": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "events": {
     "line number": [
      34,
      35
     ]
    },
    "mne.Epochs": {
     "line number": [
      35
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      32
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      34
     ]
    },
    "mne.time_frequency._stockwell.tfr_stockwell": {
     "line number": [
      37
     ]
    },
    "mne.time_frequency.tests.test_stockwell.raw_ctf_fname": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_st_no_zero_pad": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "mne.time_frequency._stockwell._precompute_st_windows": {
     "line number": [
      61
     ]
    },
    "mne.time_frequency._stockwell._st_power_itc": {
     "line number": [
      62
     ]
    },
    "numpy.zeros": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.tfr_array_stockwell": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_stockwell"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.tfr_stockwell": {
  "data": {
   "shadows": "mne.time_frequency._stockwell.tfr_stockwell"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr": {
  "data": {
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_tfr.data_path": {
     "line number": [
      25,
      26,
      27
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      810
     ]
    },
    "os.path.dirname": {
     "line number": [
      24
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      26,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_tfr.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.EpochsTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.EpochsTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Info": {
  "data": {
   "shadows": "mne.Info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Transform": {
  "data": {
   "shadows": "mne.Transform"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._compute_tfr": {
  "data": {
   "shadows": "mne.time_frequency.tfr._compute_tfr"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._make_dpss": {
  "data": {
   "shadows": "mne.time_frequency.tfr._make_dpss"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_metadata_equal": {
  "data": {
   "shadows": "mne.tests.test_epochs.assert_metadata_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.combine_tfr": {
  "data": {
   "shadows": "mne.time_frequency.tfr.combine_tfr"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.cwt": {
  "data": {
   "shadows": "mne.time_frequency.tfr.cwt"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.data_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.event_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr.morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.raw_ctf_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.read_tfrs": {
  "data": {
   "shadows": "mne.time_frequency.tfr.read_tfrs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.test_add_channels": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      618
     ]
    },
    "RuntimeError": {
     "line number": [
      617
     ]
    },
    "TypeError": {
     "line number": [
      620
     ]
    },
    "ValueError": {
     "line number": [
      619
     ]
    },
    "all": {
     "line number": [
      602,
      606,
      610
     ]
    },
    "mne.time_frequency.tests.test_tfr.mne": {
     "line number": [
      592
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      617,
      618,
      619,
      620
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      595
     ]
    },
    "numpy.array": {
     "line number": [
      590,
      591
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      609
     ]
    },
    "numpy.zeros": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_compute_tfr": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      653,
      693
     ]
    },
    "ValueError": {
     "line number": [
      676,
      678,
      680,
      684,
      686,
      690
     ]
    },
    "events": {
     "line number": [
      632,
      641
     ]
    },
    "float": {
     "line number": [
      644
     ]
    },
    "func": {
     "line number": [
      658
     ]
    },
    "int": {
     "line number": [
      707
     ]
    },
    "isinstance": {
     "line number": [
      707
     ]
    },
    "itertools.product": {
     "line number": [
      647
     ]
    },
    "len": {
     "line number": [
      661,
      708,
      709
     ]
    },
    "method": {
     "line number": [
      710,
      712,
      716
     ]
    },
    "mne.Epochs": {
     "line number": [
      641
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      631
     ]
    },
    "mne.pick_types": {
     "line number": [
      637
     ]
    },
    "mne.read_events": {
     "line number": [
      632
     ]
    },
    "mne.time_frequency.tests.test_tfr.event_fname": {
     "line number": [
      632
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      653,
      676,
      678,
      680,
      684,
      686,
      690,
      693
     ]
    },
    "mne.time_frequency.tests.test_tfr.raw_fname": {
     "line number": [
      631
     ]
    },
    "mne.time_frequency.tfr._compute_tfr": {
     "line number": [
      676,
      678,
      680,
      684,
      687,
      690,
      693,
      697,
      712,
      716
     ]
    },
    "mne.time_frequency.tfr_array_morlet": {
     "line number": [
      648
     ]
    },
    "mne.time_frequency.tfr_array_multitaper": {
     "line number": [
      648,
      652
     ]
    },
    "numpy.all": {
     "line number": [
      672
     ]
    },
    "numpy.arange": {
     "line number": [
      644,
      708
     ]
    },
    "numpy.complex128": {
     "line number": [
      669
     ]
    },
    "numpy.float64": {
     "line number": [
      671
     ]
    },
    "numpy.isfinite": {
     "line number": [
      672
     ]
    },
    "numpy.r_": {
     "line number": [
      661,
      709
     ]
    },
    "numpy.sum": {
     "line number": [
      698,
      699
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      663,
      665,
      714,
      718
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      669,
      671
     ]
    },
    "slice": {
     "line number": [
      706,
      706,
      706,
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_compute_tfr_correct": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": {
    "method": {
     "line number": [
      733
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      721,
      722
     ]
    },
    "mne.time_frequency.tfr._compute_tfr": {
     "line number": [
      733
     ]
    },
    "numpy.abs": {
     "line number": [
      735
     ]
    },
    "numpy.arange": {
     "line number": [
      726,
      731
     ]
    },
    "numpy.argmax": {
     "line number": [
      735
     ]
    },
    "numpy.hanning": {
     "line number": [
      729
     ]
    },
    "numpy.newaxis": {
     "line number": [
      730,
      730
     ]
    },
    "numpy.pi": {
     "line number": [
      728
     ]
    },
    "numpy.sin": {
     "line number": [
      728
     ]
    },
    "slice": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_crop": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "mne.time_frequency.tests.test_tfr.mne": {
     "line number": [
      383
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      385
     ]
    },
    "numpy.array": {
     "line number": [
      381,
      382
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      389,
      394,
      399,
      402
     ]
    },
    "numpy.zeros": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_dpsswavelet": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "len": {
     "line number": [
      274,
      279,
      279
     ]
    },
    "mne.time_frequency.tfr._make_dpss": {
     "line number": [
      271
     ]
    },
    "numpy.abs": {
     "line number": [
      277
     ]
    },
    "numpy.arange": {
     "line number": [
      270
     ]
    },
    "numpy.mean": {
     "line number": [
      277
     ]
    },
    "numpy.real": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_getitem_epochsTFR": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      784
     ]
    },
    "KeyError": {
     "line number": [
      793
     ]
    },
    "dict": {
     "line number": [
      752,
      753,
      762
     ]
    },
    "enumerate": {
     "line number": [
      801
     ]
    },
    "events": {
     "line number": [
      744,
      754
     ]
    },
    "int": {
     "line number": [
      751
     ]
    },
    "len": {
     "line number": [
      797,
      798
     ]
    },
    "mne.Epochs": {
     "line number": [
      754
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      743
     ]
    },
    "mne.read_events": {
     "line number": [
      744
     ]
    },
    "mne.tests.test_epochs.assert_metadata_equal": {
     "line number": [
      772,
      773,
      774
     ]
    },
    "mne.time_frequency.tests.test_tfr.event_fname": {
     "line number": [
      744
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      793
     ]
    },
    "mne.time_frequency.tests.test_tfr.raw_fname": {
     "line number": [
      743
     ]
    },
    "mne.time_frequency.tfr.tfr_multitaper": {
     "line number": [
      765,
      768
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      738
     ]
    },
    "numpy.arange": {
     "line number": [
      757
     ]
    },
    "numpy.array": {
     "line number": [
      750
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      748
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      778,
      779,
      787,
      789,
      802,
      807
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_io": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      435
     ]
    },
    "ValueError": {
     "line number": [
      457
     ]
    },
    "dict": {
     "line number": [
      467
     ]
    },
    "events": {
     "line number": [
      469,
      470,
      471,
      475
     ]
    },
    "int": {
     "line number": [
      466
     ]
    },
    "isinstance": {
     "line number": [
      426,
      427,
      450
     ]
    },
    "len": {
     "line number": [
      453
     ]
    },
    "mne.Info": {
     "line number": [
      426
     ]
    },
    "mne.Transform": {
     "line number": [
      427
     ]
    },
    "mne.tests.test_epochs.assert_metadata_equal": {
     "line number": [
      480
     ]
    },
    "mne.time_frequency.tests.test_tfr.datetime": {
     "line number": [
      419,
      420
     ]
    },
    "mne.time_frequency.tests.test_tfr.mne": {
     "line number": [
      417,
      450
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      435,
      457
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      422
     ]
    },
    "mne.time_frequency.tfr.EpochsTFR": {
     "line number": [
      474
     ]
    },
    "mne.time_frequency.tfr.read_tfrs": {
     "line number": [
      425,
      441,
      447,
      452,
      457,
      478
     ]
    },
    "mne.time_frequency.tfr.write_tfrs": {
     "line number": [
      446
     ]
    },
    "mne.utils._TempDir": {
     "line number": [
      411
     ]
    },
    "mne.utils.requires_h5py": {
     "line number": [
      406
     ]
    },
    "mne.utils.requires_pandas": {
     "line number": [
      407
     ]
    },
    "numpy.arange": {
     "line number": [
      470
     ]
    },
    "numpy.array": {
     "line number": [
      414,
      415,
      465
     ]
    },
    "numpy.ones": {
     "line number": [
      471
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      463
     ]
    },
    "numpy.round": {
     "line number": [
      464
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      429,
      430,
      431,
      479,
      481
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      432,
      433,
      441,
      448,
      453,
      455
     ]
    },
    "numpy.zeros": {
     "line number": [
      413,
      460,
      469
     ]
    },
    "os.path.join": {
     "line number": [
      412,
      445
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_morlet": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "mne.time_frequency.tfr.morlet": {
     "line number": [
      42,
      43
     ]
    },
    "numpy.abs": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.mean": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.real": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_plot": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      495
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      496,
      501,
      504,
      507,
      535
     ]
    },
    "matplotlib.pyplot.subplot2grid": {
     "line number": [
      497,
      498,
      499
     ]
    },
    "mne.time_frequency.tests.test_tfr.mne": {
     "line number": [
      490
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      492
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      524,
      525,
      526,
      528,
      529,
      530
     ]
    },
    "numpy.array": {
     "line number": [
      488,
      489
     ]
    },
    "numpy.ones": {
     "line number": [
      495
     ]
    },
    "numpy.zeros": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_plot_joint": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      571
     ]
    },
    "len": {
     "line number": [
      545,
      545
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      555,
      565,
      577
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      540
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      571
     ]
    },
    "mne.time_frequency.tests.test_tfr.raw_fname": {
     "line number": [
      540
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      546
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      551
     ]
    },
    "numpy.arange": {
     "line number": [
      546
     ]
    },
    "numpy.linspace": {
     "line number": [
      541
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      544
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      578
     ]
    },
    "set": {
     "line number": [
      579,
      579,
      580,
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_tfr_ctf": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "events": {
     "line number": [
      34,
      35
     ]
    },
    "method": {
     "line number": [
      37
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      32
     ]
    },
    "mne.time_frequency.tests.test_tfr.mne": {
     "line number": [
      34,
      35
     ]
    },
    "mne.time_frequency.tests.test_tfr.raw_ctf_fname": {
     "line number": [
      32
     ]
    },
    "mne.time_frequency.tfr.tfr_morlet": {
     "line number": [
      36
     ]
    },
    "mne.time_frequency.tfr.tfr_multitaper": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_tfr_multitaper": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      353
     ]
    },
    "TypeError": {
     "line number": [
      366
     ]
    },
    "ValueError": {
     "line number": [
      337,
      368,
      372,
      374
     ]
    },
    "dict": {
     "line number": [
      302,
      305
     ]
    },
    "events": {
     "line number": [
      303,
      307,
      309
     ]
    },
    "int": {
     "line number": [
      290,
      303
     ]
    },
    "len": {
     "line number": [
      294,
      318,
      361,
      361
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      309
     ]
    },
    "mne.create_info": {
     "line number": [
      288
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      337,
      353,
      366,
      368,
      372,
      374,
      282
     ]
    },
    "mne.time_frequency.tfr.tfr_multitaper": {
     "line number": [
      314,
      316,
      319,
      322,
      326,
      337,
      366,
      368,
      373,
      375
     ]
    },
    "numpy.any": {
     "line number": [
      359
     ]
    },
    "numpy.arange": {
     "line number": [
      295,
      312,
      318,
      373,
      375
     ]
    },
    "numpy.argmax": {
     "line number": [
      356,
      357
     ]
    },
    "numpy.empty": {
     "line number": [
      303
     ]
    },
    "numpy.float64": {
     "line number": [
      295,
      312
     ]
    },
    "numpy.hanning": {
     "line number": [
      299
     ]
    },
    "numpy.logical_and": {
     "line number": [
      298
     ]
    },
    "numpy.logical_or": {
     "line number": [
      297
     ]
    },
    "numpy.pi": {
     "line number": [
      296
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      293
     ]
    },
    "numpy.sin": {
     "line number": [
      296
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      342,
      343,
      344,
      345,
      348,
      353
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      352
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      334,
      335,
      346,
      347
     ]
    },
    "print": {
     "line number": [
      330
     ]
    },
    "range": {
     "line number": [
      306
     ]
    },
    "slice": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_time_frequency": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      114
     ]
    },
    "TypeError": {
     "line number": [
      252
     ]
    },
    "UserWarning": {
     "line number": [
      259
     ]
    },
    "ValueError": {
     "line number": [
      83,
      89,
      118,
      120,
      240,
      246,
      248,
      257
     ]
    },
    "abs": {
     "line number": [
      125
     ]
    },
    "events": {
     "line number": [
      58,
      68,
      73
     ]
    },
    "float": {
     "line number": [
      230
     ]
    },
    "len": {
     "line number": [
      71,
      149,
      149,
      149,
      151,
      151,
      180,
      180,
      180,
      188,
      188,
      188,
      192,
      192,
      209,
      209,
      210,
      213,
      230,
      236
     ]
    },
    "list": {
     "line number": [
      231
     ]
    },
    "mne.Epochs": {
     "line number": [
      68,
      73
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      57
     ]
    },
    "mne.pick_types": {
     "line number": [
      64
     ]
    },
    "mne.read_events": {
     "line number": [
      58
     ]
    },
    "mne.time_frequency.tests.test_tfr.event_fname": {
     "line number": [
      58
     ]
    },
    "mne.time_frequency.tests.test_tfr.mne": {
     "line number": [
      215
     ]
    },
    "mne.time_frequency.tests.test_tfr.pytest": {
     "line number": [
      83,
      89,
      114,
      118,
      120,
      240,
      246,
      248,
      252,
      257,
      259
     ]
    },
    "mne.time_frequency.tests.test_tfr.raw_fname": {
     "line number": [
      57
     ]
    },
    "mne.time_frequency.tfr.combine_tfr": {
     "line number": [
      172
     ]
    },
    "mne.time_frequency.tfr.cwt": {
     "line number": [
      240,
      243,
      257,
      260,
      264
     ]
    },
    "mne.time_frequency.tfr.morlet": {
     "line number": [
      239
     ]
    },
    "mne.time_frequency.tfr.tfr_morlet": {
     "line number": [
      79,
      83,
      84,
      86,
      89,
      93,
      98,
      108,
      118,
      120,
      122,
      177,
      185,
      189,
      194,
      196,
      198,
      200,
      226,
      234,
      247,
      249,
      252
     ]
    },
    "mne.utils.grand_average": {
     "line number": [
      159
     ]
    },
    "numpy.arange": {
     "line number": [
      75,
      247,
      249
     ]
    },
    "numpy.ceil": {
     "line number": [
      230
     ]
    },
    "numpy.inf": {
     "line number": [
      127
     ]
    },
    "numpy.mean": {
     "line number": [
      203,
      204,
      205,
      206
     ]
    },
    "numpy.ones": {
     "line number": [
      167,
      174
     ]
    },
    "numpy.sum": {
     "line number": [
      153,
      154,
      182,
      183
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      103,
      104,
      105,
      114,
      131,
      166,
      173,
      203,
      204,
      205,
      206
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      113
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      209,
      210,
      212,
      213,
      216,
      217,
      229,
      236,
      265
     ]
    },
    "numpy.zeros": {
     "line number": [
      168
     ]
    },
    "print": {
     "line number": [
      133,
      134
     ]
    },
    "range": {
     "line number": [
      231
     ]
    },
    "slice": {
     "line number": [
      87,
      190,
      196,
      198,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.tfr_array_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr.tfr_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.tfr.tfr_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.write_tfrs": {
  "data": {
   "shadows": "mne.time_frequency.tfr.write_tfrs"
  },
  "type": "import"
 },
 "mne.utils": {
  "data": {},
  "type": "module"
 },
 "mne.utils._doc_special_members": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.utils._testing": {
  "data": {
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      145,
      146,
      147,
      148,
      149,
      169,
      172,
      173,
      177,
      181,
      182
     ]
    },
    "mne.utils._testing._mayavi_call": {
     "line number": [
      148
     ]
    },
    "mne.utils._testing._mne_call": {
     "line number": [
      149
     ]
    },
    "mne.utils._testing._n2ft_call": {
     "line number": [
      170
     ]
    },
    "mne.utils._testing._pandas_call": {
     "line number": [
      145
     ]
    },
    "mne.utils._testing.requires_module": {
     "line number": [
      145,
      146,
      147,
      148,
      149,
      169,
      172,
      173,
      178,
      181,
      182
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils._testing.AffineMap": {
  "data": {
   "shadows": "dipy.align.imaffine.AffineMap"
  },
  "type": "import"
 },
 "mne.utils._testing.ArgvSetter": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "object": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils._testing.ArgvSetter.__enter__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "mne.utils._testing.sys": {
     "line number": [
      284,
      285,
      286,
      287,
      288,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.ArgvSetter.__exit__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "mne.utils._testing.sys": {
     "line number": [
      293,
      294,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.ArgvSetter.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "ClosingStringIO": {
     "line number": [
      280,
      281
     ]
    },
    "list": {
     "line number": [
      279
     ]
    },
    "mne.utils._testing.sys": {
     "line number": [
      280,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.DiffeomorphicMap": {
  "data": {
   "shadows": "dipy.align.imwarp.DiffeomorphicMap"
  },
  "type": "import"
 },
 "mne.utils._testing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.utils._testing.SilenceStdout": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "object": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils._testing.SilenceStdout.__enter__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      306
     ]
    },
    "mne.utils._testing.sys": {
     "line number": [
      305,
      306,
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.SilenceStdout.__exit__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "mne.utils._testing.sys": {
     "line number": [
      311,
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.SilenceStdout.__init__": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "mne.utils._testing.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.utils._testing.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.utils._testing._TempDir": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "str": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils._testing._TempDir.__del__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "shutil.rmtree": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._TempDir.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "mne.utils._testing._TempDir.__new__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "mne.utils._testing.tempfile": {
     "line number": [
      58
     ]
    },
    "str.__new__": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._check_mayavi_version": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      224
     ]
    },
    "mne.utils._testing.check_version": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._check_snr": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "len": {
     "line number": [
      413
     ]
    },
    "mne.utils._testing._get_data": {
     "line number": [
      400,
      401
     ]
    },
    "numpy.clip": {
     "line number": [
      405
     ]
    },
    "numpy.inf": {
     "line number": [
      405
     ]
    },
    "numpy.mean": {
     "line number": [
      402,
      404
     ]
    },
    "numpy.median": {
     "line number": [
      415
     ]
    },
    "numpy.sqrt": {
     "line number": [
      402,
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._dig_sort_key": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "mne.utils._testing._explain_exception": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "mne.utils._testing.sys": {
     "line number": [
      37
     ]
    },
    "mne.utils._testing.traceback": {
     "line number": [
      38,
      38,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._fs_call": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mne.utils._testing._get_data": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      392,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._import_mlab": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "mayavi.mlab": {
     "line number": [
      231
     ]
    },
    "mne.utils._testing.warnings": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing._mayavi_call": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "mne.utils._testing._mne_call": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mne.utils._testing._n2ft_call": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mne.utils._testing._pandas_call": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "mne.utils._testing._raw_annot": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Annotations": {
     "line number": [
      383
     ]
    },
    "RawArray": {
     "line number": [
      378
     ]
    },
    "_handle_meas_date": {
     "line number": [
      380
     ]
    },
    "create_info": {
     "line number": [
      377
     ]
    },
    "numpy.empty": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.utils._testing.assert_and_remove_boundary_annot": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      359
     ]
    },
    "len": {
     "line number": [
      363
     ]
    },
    "numpy.where": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils._testing.assert_dig_allclose": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "any": {
     "line number": [
      487
     ]
    },
    "enumerate": {
     "line number": [
      481
     ]
    },
    "fit_sphere_to_headshape": {
     "line number": [
      488,
      490
     ]
    },
    "len": {
     "line number": [
      480,
      480
     ]
    },
    "mne.utils._testing._dig_sort_key": {
     "line number": [
      478,
      479
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      484,
      492,
      493,
      494
     ]
    },
    "sorted": {
     "line number": [
      478,
      479
     ]
    },
    "zip": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.assert_meg_snr": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "len": {
     "line number": [
      435,
      437,
      441,
      446
     ]
    },
    "mne.utils._testing._check_snr": {
     "line number": [
      445,
      447
     ]
    },
    "mne.utils._testing._get_data": {
     "line number": [
      442,
      443
     ]
    },
    "numpy.arange": {
     "line number": [
      435,
      437
     ]
    },
    "numpy.concatenate": {
     "line number": [
      436,
      438
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      435,
      437
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      442
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      430,
      434,
      440
     ]
    },
    "pick_types": {
     "line number": [
      428,
      429,
      431,
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.assert_object_equal": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "object_diff": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.assert_snr": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "numpy.errstate": {
     "line number": [
      452
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      453,
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.assert_stcs_equal": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      460,
      461,
      464,
      465
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      462,
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.buggy_mkl_svd": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "mne.utils._testing.buggy_mkl_svd.dec": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "function": {
     "line number": [
      346,
      343
     ]
    },
    "functools.wraps": {
     "line number": [
      343
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      347
     ]
    },
    "str": {
     "line number": [
      348
     ]
    },
    "unittest.SkipTest": {
     "line number": [
      351
     ]
    },
    "warn": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.check_version": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      210
     ]
    },
    "__import__": {
     "line number": [
      209
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      214
     ]
    },
    "getattr": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.utils._testing.has_freesurfer": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "mne.utils._testing.os": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.has_mne_c": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "mne.utils._testing.os": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.has_nibabel": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.imaffine": {
  "data": {
   "shadows": "dipy.align.imaffine"
  },
  "type": "import"
 },
 "mne.utils._testing.imwarp": {
  "data": {
   "shadows": "dipy.align.imwarp"
  },
  "type": "import"
 },
 "mne.utils._testing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.utils._testing.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.utils._testing.metrics": {
  "data": {
   "shadows": "dipy.align.metrics"
  },
  "type": "import"
 },
 "mne.utils._testing.mlab": {
  "data": {
   "shadows": "mayavi.mlab"
  },
  "type": "import"
 },
 "mne.utils._testing.modified_env": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      497
     ]
    },
    "dict": {
     "line number": [
      506
     ]
    },
    "isinstance": {
     "line number": [
      510
     ]
    },
    "mne.utils._testing.os": {
     "line number": [
      508,
      511,
      512,
      513,
      519,
      520,
      521
     ]
    },
    "str": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.utils._testing.nottest": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mne.utils._testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils._testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils._testing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.utils._testing.push_exception_handler": {
  "data": {
   "shadows": "traits.api.push_exception_handler"
  },
  "type": "import"
 },
 "mne.utils._testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils._testing.requires_dipy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      87
     ]
    },
    "mne.utils._testing.pytest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.requires_freesurfer": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      161
     ]
    },
    "isinstance": {
     "line number": [
      154
     ]
    },
    "mne.utils._testing._fs_call": {
     "line number": [
      166
     ]
    },
    "mne.utils._testing.requires_module": {
     "line number": [
      162,
      166
     ]
    },
    "str": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.requires_good_network": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_h5py": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_mayavi": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_mne": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_module": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      109
     ]
    },
    "exec": {
     "line number": [
      108
     ]
    },
    "globals": {
     "line number": [
      108
     ]
    },
    "len": {
     "line number": [
      110
     ]
    },
    "locals": {
     "line number": [
      108
     ]
    },
    "mne.utils._testing.pytest": {
     "line number": [
      115
     ]
    },
    "str": {
     "line number": [
      110,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.requires_neuromag2ft": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_nibabel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.requires_nitime": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_numpydoc": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "mne.utils._testing.requires_version": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.requires_pandas": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_pylsl": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_pysurfer": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_sklearn": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_version": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "mne.utils._testing.check_version": {
     "line number": [
      97
     ]
    },
    "mne.utils._testing.pytest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.requires_vtk": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "mne.utils._testing.reslice": {
  "data": {
   "shadows": "dipy.align.reslice.reslice"
  },
  "type": "import"
 },
 "mne.utils._testing.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "mne.utils._testing.run_command_if_main": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "mne.utils._testing.inspect": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.run_tests_if_main": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      264
     ]
    },
    "mne.utils._testing.inspect": {
     "line number": [
      258
     ]
    },
    "mne.utils._testing.nottest": {
     "line number": [
      255
     ]
    },
    "mne.utils._testing.pytest": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils._testing.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.utils._testing.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.utils._testing.traits_test": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "mne.utils._testing.traits_test.dec": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "functools.wraps": {
     "line number": [
      248
     ]
    },
    "mne.utils._testing.traits_test_context": {
     "line number": [
      250
     ]
    },
    "test_func": {
     "line number": [
      251,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.traits_test_context": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      234
     ]
    },
    "traits.api.push_exception_handler": {
     "line number": [
      239,
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils._testing.transforms": {
  "data": {
   "shadows": "dipy.align.transforms"
  },
  "type": "import"
 },
 "mne.utils._testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.utils._testing.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mne.utils.dataframe": {
  "data": {},
  "type": "module"
 },
 "mne.utils.dataframe.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.utils.dataframe._build_data_frame": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      75
     ]
    },
    "enumerate": {
     "line number": [
      59
     ]
    },
    "isinstance": {
     "line number": [
      74
     ]
    },
    "len": {
     "line number": [
      78
     ]
    },
    "mne.utils.dataframe._set_pandas_dtype": {
     "line number": [
      87
     ]
    },
    "numpy.array": {
     "line number": [
      75,
      76
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      58
     ]
    },
    "set": {
     "line number": [
      67,
      67
     ]
    },
    "zip": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.dataframe._convert_times": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      40
     ]
    },
    "numpy.round": {
     "line number": [
      40
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      42,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.dataframe._scale_dataframe_data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "_handle_default": {
     "line number": [
      23
     ]
    },
    "len": {
     "line number": [
      29,
      30
     ]
    },
    "list": {
     "line number": [
      22
     ]
    },
    "range": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.dataframe._set_pandas_dtype": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mne.utils.dataframe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.dataframe.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "mne.utils.docs": {
  "data": {
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      2099
     ]
    },
    "dict": {
     "line number": [
      24,
      1533,
      1535,
      1537,
      1538
     ]
    },
    "filldoc": {
     "line number": [
      1777
     ]
    },
    "mne.utils.docs._on_missing_base": {
     "line number": [
      973,
      1207,
      1212
     ]
    },
    "mne.utils.docs._pick_ori_novec": {
     "line number": [
      879,
      882
     ]
    },
    "mne.utils.docs._trans_base": {
     "line number": [
      994,
      1002
     ]
    },
    "mne.utils.docs.ch_type": {
     "line number": [
      1654,
      1655
     ]
    },
    "mne.utils.docs.datetime": {
     "line number": [
      1616
     ]
    },
    "mne.utils.docs.docdict": {
     "line number": [
      27,
      32,
      32,
      35,
      42,
      54,
      61,
      67,
      71,
      77,
      85,
      91,
      97,
      97,
      102,
      106,
      110,
      121,
      127,
      137,
      154,
      160,
      164,
      169,
      174,
      178,
      182,
      186,
      191,
      199,
      211,
      221,
      226,
      233,
      240,
      264,
      271,
      282,
      295,
      302,
      312,
      326,
      331,
      336,
      348,
      354,
      359,
      373,
      380,
      381,
      381,
      389,
      389,
      390,
      390,
      391,
      391,
      393,
      393,
      394,
      394,
      396,
      403,
      408,
      413,
      429,
      429,
      438,
      448,
      458,
      471,
      480,
      487,
      494,
      499,
      504,
      509,
      515,
      521,
      526,
      536,
      544,
      565,
      570,
      579,
      584,
      589,
      596,
      607,
      618,
      626,
      632,
      684,
      695,
      699,
      703,
      709,
      713,
      720,
      726,
      732,
      737,
      743,
      753,
      774,
      783,
      794,
      803,
      808,
      808,
      809,
      809,
      810,
      818,
      838,
      851,
      877,
      880,
      888,
      899,
      930,
      944,
      957,
      962,
      962,
      971,
      974,
      982,
      991,
      995,
      1003,
      1010,
      1016,
      1027,
      1034,
      1043,
      1053,
      1060,
      1070,
      1078,
      1078,
      1083,
      1088,
      1092,
      1099,
      1103,
      1113,
      1119,
      1126,
      1131,
      1137,
      1184,
      1187,
      1194,
      1200,
      1208,
      1213,
      1224,
      1242,
      1255,
      1261,
      1268,
      1274,
      1279,
      1292,
      1299,
      1308,
      1313,
      1318,
      1348,
      1353,
      1358,
      1370,
      1386,
      1390,
      1394,
      1405,
      1406,
      1411,
      1412,
      1422,
      1426,
      1461,
      1480,
      1492,
      1492,
      1493,
      1493,
      1494,
      1499,
      1499,
      1500,
      1500,
      1501,
      1508,
      1514,
      1514,
      1515,
      1515,
      1516,
      1539,
      1539,
      1540,
      1540,
      1541,
      1541,
      1542,
      1542,
      1543,
      1547,
      1553,
      1561,
      1568,
      1568,
      1569,
      1569,
      1570,
      1579,
      1589,
      1595,
      1605,
      1619,
      1619,
      1620,
      1620,
      1621,
      1621,
      1622,
      1633,
      1633,
      1634,
      1634,
      1635,
      1641,
      1646,
      1657,
      1657,
      1658,
      1658,
      1659,
      1659,
      1660,
      1667,
      1675,
      1690,
      1703,
      1730,
      1743,
      1750,
      1751,
      1758,
      1759,
      1766,
      1770,
      1777
     ]
    },
    "mne.utils.docs.epo": {
     "line number": [
      1620,
      1658
     ]
    },
    "mne.utils.docs.evk": {
     "line number": [
      1621
     ]
    },
    "mne.utils.docs.f_test": {
     "line number": [
      1492
     ]
    },
    "mne.utils.docs.groups": {
     "line number": [
      1540,
      1542
     ]
    },
    "mne.utils.docs.mem": {
     "line number": [
      1534
     ]
    },
    "mne.utils.docs.multiindex": {
     "line number": [
      1617
     ]
    },
    "mne.utils.docs.nogroups": {
     "line number": [
      1539,
      1541
     ]
    },
    "mne.utils.docs.nperm_all": {
     "line number": [
      1499
     ]
    },
    "mne.utils.docs.raw": {
     "line number": [
      1619,
      1657
     ]
    },
    "mne.utils.docs.raw_tf": {
     "line number": [
      1633
     ]
    },
    "mne.utils.docs.st": {
     "line number": [
      1539,
      1540
     ]
    },
    "mne.utils.docs.stc": {
     "line number": [
      1659
     ]
    },
    "mne.utils.docs.t_test": {
     "line number": [
      1493
     ]
    },
    "mne.utils.docs.tf": {
     "line number": [
      1541,
      1542
     ]
    },
    "mne.utils.docs.warnings": {
     "line number": [
      2099
     ]
    },
    "unindent_dict": {
     "line number": [
      1776
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.docs._on_missing_base": {
  "data": {
   "lineno": 968
  },
  "type": "constant"
 },
 "mne.utils.docs._pick_ori_novec": {
  "data": {
   "lineno": 866
  },
  "type": "constant"
 },
 "mne.utils.docs._trans_base": {
  "data": {
   "lineno": 987
  },
  "type": "constant"
 },
 "mne.utils.docs.ch_type": {
  "data": {
   "lineno": 1652
  },
  "type": "constant"
 },
 "mne.utils.docs.copy_base_doc_to_subclass_doc": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      1980
     ]
    },
    "dir": {
     "line number": [
      1979
     ]
    },
    "getattr": {
     "line number": [
      1980,
      1985,
      1986
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.copy_doc": {
  "data": {
   "lineno": 1783
  },
  "type": "function"
 },
 "mne.utils.docs.copy_doc.wrapper": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1818
     ]
    },
    "len": {
     "line number": [
      1817
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.copy_function_doc_to_method_doc": {
  "data": {
   "lineno": 1827
  },
  "type": "function"
 },
 "mne.utils.docs.copy_function_doc_to_method_doc.wrapper": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1912,
      1923
     ]
    },
    "enumerate": {
     "line number": [
      1905,
      1917,
      1928
     ]
    },
    "len": {
     "line number": [
      1897,
      1920,
      1920,
      1931,
      1934,
      1934
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.datetime": {
  "data": {
   "lineno": 1613
  },
  "type": "constant"
 },
 "mne.utils.docs.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.utils.docs.deprecated": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": {
    "object": {
     "line number": [
      2102
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.docs.deprecated.__call__": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2140
     ]
    },
    "type": {
     "line number": [
      2140
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated.__init__": {
  "data": {
   "lineno": 2129
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_class": {
  "data": {
   "lineno": 2145,
   "symbols_in_volume": {
    "init": {
     "line number": [
      2160
     ]
    },
    "init.__doc__": {
     "line number": [
      2159
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_class.deprecation_wrapped": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      2154
     ]
    },
    "init": {
     "line number": [
      2155
     ]
    },
    "mne.utils.docs.warnings": {
     "line number": [
      2154
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_fun": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": {
    "fun.__dict__": {
     "line number": [
      2175
     ]
    },
    "fun.__doc__": {
     "line number": [
      2176
     ]
    },
    "fun.__name__": {
     "line number": [
      2174
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_fun.deprecation_wrapped": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      2171
     ]
    },
    "fun": {
     "line number": [
      2172
     ]
    },
    "mne.utils.docs.warnings": {
     "line number": [
      2171
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._update_doc": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      2187
     ]
    },
    "len": {
     "line number": [
      2188,
      2189,
      2189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated_alias": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      2207
     ]
    },
    "int": {
     "line number": [
      2201
     ]
    },
    "mne.utils.docs.deprecated": {
     "line number": [
      2204
     ]
    },
    "mne.utils.docs.inspect": {
     "line number": [
      2204
     ]
    },
    "str": {
     "line number": [
      2201
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.docdict": {
  "data": {
   "lineno": 1776
  },
  "type": "constant"
 },
 "mne.utils.docs.epo": {
  "data": {
   "lineno": 1655
  },
  "type": "constant"
 },
 "mne.utils.docs.evk": {
  "data": {
   "lineno": 1618
  },
  "type": "constant"
 },
 "mne.utils.docs.f_test": {
  "data": {
   "lineno": 1490
  },
  "type": "constant"
 },
 "mne.utils.docs.fill_doc": {
  "data": {
   "lineno": 1777
  },
  "type": "constant"
 },
 "mne.utils.docs.groups": {
  "data": {
   "lineno": 1538
  },
  "type": "constant"
 },
 "mne.utils.docs.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.utils.docs.linkcode_resolve": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      2032,
      2040,
      2045,
      2054
     ]
    },
    "getattr": {
     "line number": [
      2031
     ]
    },
    "hasattr": {
     "line number": [
      2035
     ]
    },
    "len": {
     "line number": [
      2058
     ]
    },
    "mne.utils.docs.inspect": {
     "line number": [
      2039,
      2044,
      2053
     ]
    },
    "mne.utils.docs.mne": {
     "line number": [
      2049,
      2062,
      2065
     ]
    },
    "mne.utils.docs.os": {
     "line number": [
      2050
     ]
    },
    "mne.utils.docs.sys": {
     "line number": [
      2024,
      2044
     ]
    },
    "os.path.dirname": {
     "line number": [
      2049
     ]
    },
    "os.path.normpath": {
     "line number": [
      2050
     ]
    },
    "os.path.relpath": {
     "line number": [
      2049
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.mem": {
  "data": {
   "lineno": 1529
  },
  "type": "constant"
 },
 "mne.utils.docs.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.utils.docs.multiindex": {
  "data": {
   "lineno": 1614
  },
  "type": "constant"
 },
 "mne.utils.docs.nogroups": {
  "data": {
   "lineno": 1537
  },
  "type": "constant"
 },
 "mne.utils.docs.nperm_all": {
  "data": {
   "lineno": 1498
  },
  "type": "constant"
 },
 "mne.utils.docs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.docs.open_docs": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      2088,
      2092
     ]
    },
    "dict": {
     "line number": [
      2086
     ]
    },
    "get_config": {
     "line number": [
      2085,
      2091
     ]
    },
    "mne.utils.docs.webbrowser": {
     "line number": [
      2093
     ]
    },
    "sorted": {
     "line number": [
      2088
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.docs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.docs.raw": {
  "data": {
   "lineno": 1654
  },
  "type": "constant"
 },
 "mne.utils.docs.raw_tf": {
  "data": {
   "lineno": 1630
  },
  "type": "constant"
 },
 "mne.utils.docs.st": {
  "data": {
   "lineno": 1533
  },
  "type": "constant"
 },
 "mne.utils.docs.stc": {
  "data": {
   "lineno": 1656
  },
  "type": "constant"
 },
 "mne.utils.docs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils.docs.t_test": {
  "data": {
   "lineno": 1491
  },
  "type": "constant"
 },
 "mne.utils.docs.tf": {
  "data": {
   "lineno": 1535
  },
  "type": "constant"
 },
 "mne.utils.docs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.utils.docs.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.utils.fetching": {
  "data": {},
  "type": "module"
 },
 "mne.utils.fetching.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "mne.utils.fetching.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "mne.utils.fetching._fetch_file": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      130
     ]
    },
    "NotImplementedError": {
     "line number": [
      105
     ]
    },
    "RuntimeError": {
     "line number": [
      124
     ]
    },
    "ValueError": {
     "line number": [
      99
     ]
    },
    "hashfunc": {
     "line number": [
      122
     ]
    },
    "isinstance": {
     "line number": [
      97
     ]
    },
    "len": {
     "line number": [
      98
     ]
    },
    "mne.utils.fetching._get_http": {
     "line number": [
      117
     ]
    },
    "mne.utils.fetching.os": {
     "line number": [
      108
     ]
    },
    "mne.utils.fetching.shutil": {
     "line number": [
      127
     ]
    },
    "open": {
     "line number": [
      111
     ]
    },
    "str": {
     "line number": [
      97
     ]
    },
    "urllib.parse.urlparse": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.fetching._get_http": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      36,
      37
     ]
    },
    "KeyError": {
     "line number": [
      37
     ]
    },
    "ProgressBar": {
     "line number": [
      50
     ]
    },
    "int": {
     "line number": [
      44
     ]
    },
    "len": {
     "line number": [
      67
     ]
    },
    "mne.utils.fetching.time": {
     "line number": [
      57,
      59
     ]
    },
    "open": {
     "line number": [
      55
     ]
    },
    "sizeof_fmt": {
     "line number": [
      41,
      47
     ]
    },
    "urllib.error.HTTPError": {
     "line number": [
      37
     ]
    },
    "urllib.error.URLError": {
     "line number": [
      37
     ]
    },
    "urllib.request.Request": {
     "line number": [
      29,
      43
     ]
    },
    "urllib.request.urlopen": {
     "line number": [
      32,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.fetching._url_to_local_path": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141
     ]
    },
    "len": {
     "line number": [
      140
     ]
    },
    "mne.utils.fetching.os": {
     "line number": [
      142
     ]
    },
    "urllib.parse.urlparse": {
     "line number": [
      138
     ]
    },
    "urllib.request.url2pathname": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.fetching.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.fetching.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "mne.utils.fetching.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "mne.utils.fetching.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.utils.fetching.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.utils.linalg": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.linalg._d": {
     "line number": [
      32,
      34,
      35,
      41,
      43,
      86
     ]
    },
    "mne.utils.linalg._z": {
     "line number": [
      33,
      42,
      44,
      87
     ]
    },
    "numpy.cast": {
     "line number": [
      36
     ]
    },
    "numpy.complex128": {
     "line number": [
      31
     ]
    },
    "numpy.empty": {
     "line number": [
      30,
      31
     ]
    },
    "numpy.float64": {
     "line number": [
      30
     ]
    },
    "scipy.linalg.get_blas_funcs": {
     "line number": [
      32,
      33,
      34,
      35
     ]
    },
    "scipy.linalg.get_lapack_funcs": {
     "line number": [
      41,
      42,
      43,
      44,
      86,
      87
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.linalg.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "mne.utils.linalg._I": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.utils.linalg._asarray_validated": {
  "data": {
   "shadows": "scipy._lib._util._asarray_validated"
  },
  "type": "import"
 },
 "mne.utils.linalg._d": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.utils.linalg._repeated_svd": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78
     ]
    },
    "gesdd": {
     "line number": [
      69
     ]
    },
    "gesvd": {
     "line number": [
      73
     ]
    },
    "numpy.complex128": {
     "line number": [
      66
     ]
    },
    "numpy.float64": {
     "line number": [
      63
     ]
    },
    "scipy.linalg.LinAlgError": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.linalg._svd_lwork": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.complex128": {
     "line number": [
      52
     ]
    },
    "numpy.float64": {
     "line number": [
      47,
      49
     ]
    },
    "scipy.linalg.decomp_svd._compute_lwork": {
     "line number": [
      54,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.linalg._sym_mat_pow": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      163
     ]
    },
    "numpy.inf": {
     "line number": [
      164,
      168
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      159
     ]
    },
    "numpy.matmul": {
     "line number": [
      172
     ]
    },
    "numpy.newaxis": {
     "line number": [
      172
     ]
    },
    "numpy.sqrt": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.linalg._z": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.utils.linalg.ddot": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.utils.linalg.dgemm": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.utils.linalg.dgemv": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.utils.linalg.eigh": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      123
     ]
    },
    "evr": {
     "line number": [
      119
     ]
    },
    "numpy.complex128": {
     "line number": [
      117
     ]
    },
    "numpy.float64": {
     "line number": [
      114
     ]
    },
    "scipy._lib._util._asarray_validated": {
     "line number": [
      113
     ]
    },
    "scipy.linalg.LinAlgError": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.linalg.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.utils.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.linalg.sqrtm_sym": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "mne.utils.linalg._sym_mat_pow": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.linalg.zgemm": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.utils.misc": {
  "data": {},
  "type": "module"
 },
 "mne.utils.misc.Empty": {
  "data": {
   "shadows": "queue.Empty"
  },
  "type": "import"
 },
 "mne.utils.misc.Formatter": {
  "data": {
   "shadows": "string.Formatter"
  },
  "type": "import"
 },
 "mne.utils.misc.Queue": {
  "data": {
   "shadows": "queue.Queue"
  },
  "type": "import"
 },
 "mne.utils.misc.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.utils.misc._DefaultEventParser": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "mne.utils.misc._DefaultEventParser.__call__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "len": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._DefaultEventParser.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._FormatDict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.misc._FormatDict.__missing__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mne.utils.misc._clean_names": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "mne.utils.misc._enqueue_output": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._explain_exception": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "mne.utils.misc.sys": {
     "line number": [
      35
     ]
    },
    "mne.utils.misc.traceback": {
     "line number": [
      36,
      36,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._file_like": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "all": {
     "line number": [
      321
     ]
    },
    "callable": {
     "line number": [
      321
     ]
    },
    "getattr": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._get_argvalues": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      279
     ]
    },
    "mne.utils.misc.fnmatch": {
     "line number": [
      274
     ]
    },
    "mne.utils.misc.inspect": {
     "line number": [
      269,
      276
     ]
    },
    "range": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._pl": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "int": {
     "line number": [
      28
     ]
    },
    "isinstance": {
     "line number": [
      28
     ]
    },
    "len": {
     "line number": [
      28
     ]
    },
    "numpy.generic": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc._sort_keys": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "list": {
     "line number": [
      45
     ]
    },
    "numpy.argsort": {
     "line number": [
      46
     ]
    },
    "str": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.utils.misc.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.utils.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.utils.misc.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "mne.utils.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.misc.pformat": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "mne.utils.misc._FormatDict": {
     "line number": [
      80
     ]
    },
    "string.Formatter": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc.run_subprocess": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "_get_args": {
     "line number": [
      164
     ]
    },
    "mne.utils.misc._enqueue_output": {
     "line number": [
      126,
      127
     ]
    },
    "mne.utils.misc.running_subprocess": {
     "line number": [
      125
     ]
    },
    "mne.utils.misc.subprocess": {
     "line number": [
      163,
      165,
      167
     ]
    },
    "print": {
     "line number": [
      162
     ]
    },
    "queue.Empty": {
     "line number": [
      138,
      147
     ]
    },
    "queue.Queue": {
     "line number": [
      123,
      124
     ]
    },
    "threading.Thread": {
     "line number": [
      126,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc.running_subprocess": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      219
     ]
    },
    "_check_option": {
     "line number": [
      198
     ]
    },
    "_validate_type": {
     "line number": [
      197
     ]
    },
    "any": {
     "line number": [
      206
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      172
     ]
    },
    "getattr": {
     "line number": [
      229
     ]
    },
    "isinstance": {
     "line number": [
      211,
      220
     ]
    },
    "mne.utils.misc.os": {
     "line number": [
      205,
      206
     ]
    },
    "mne.utils.misc.subprocess": {
     "line number": [
      201,
      218
     ]
    },
    "mne.utils.misc.sys": {
     "line number": [
      199,
      199
     ]
    },
    "str": {
     "line number": [
      197,
      211,
      214,
      220
     ]
    },
    "warn": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc.sizeof_fmt": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "float": {
     "line number": [
      303
     ]
    },
    "int": {
     "line number": [
      302
     ]
    },
    "len": {
     "line number": [
      302
     ]
    },
    "math.log": {
     "line number": [
      302
     ]
    },
    "min": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.misc.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mne.utils.misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils.misc.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.utils.mixin": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.mixin.logger": {
     "line number": [
      20
     ]
    },
    "mne.utils.mixin.logging": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.mixin.GetEpochsMixin": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "next": {
     "line number": [
      343
     ]
    },
    "object": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.mixin.GetEpochsMixin.__getitem__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.__iter__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.__len__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      278
     ]
    },
    "isinstance": {
     "line number": [
      277
     ]
    },
    "len": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.__next__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      321,
      328
     ]
    },
    "len": {
     "line number": [
      320,
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._check_metadata": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      356
     ]
    },
    "_check_pandas_installed": {
     "line number": [
      351
     ]
    },
    "_validate_type": {
     "line number": [
      353,
      367
     ]
    },
    "copy.deepcopy": {
     "line number": [
      365,
      370
     ]
    },
    "hasattr": {
     "line number": [
      360
     ]
    },
    "len": {
     "line number": [
      355,
      355,
      358,
      358
     ]
    },
    "list": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._getitem": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "_check_pandas_installed": {
     "line number": [
      195
     ]
    },
    "hasattr": {
     "line number": [
      182
     ]
    },
    "list": {
     "line number": [
      185
     ]
    },
    "mne.utils.mixin.GetEpochsMixin": {
     "line number": [
      204
     ]
    },
    "numpy.array": {
     "line number": [
      201
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      193
     ]
    },
    "numpy.require": {
     "line number": [
      208
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      187
     ]
    },
    "tuple": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._item_to_select": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "int": {
     "line number": [
      145
     ]
    },
    "isinstance": {
     "line number": [
      133,
      137,
      138,
      140
     ]
    },
    "len": {
     "line number": [
      137,
      144
     ]
    },
    "list": {
     "line number": [
      137
     ]
    },
    "numpy.array": {
     "line number": [
      145
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      143
     ]
    },
    "slice": {
     "line number": [
      140
     ]
    },
    "str": {
     "line number": [
      133,
      138
     ]
    },
    "tuple": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._keys_to_idx": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      242
     ]
    },
    "KeyError": {
     "line number": [
      228,
      251
     ]
    },
    "_check_pandas_installed": {
     "line number": [
      234
     ]
    },
    "hasattr": {
     "line number": [
      237
     ]
    },
    "isinstance": {
     "line number": [
      221
     ]
    },
    "len": {
     "line number": [
      230
     ]
    },
    "list": {
     "line number": [
      221
     ]
    },
    "mne.utils.mixin._hid_match": {
     "line number": [
      226
     ]
    },
    "numpy.any": {
     "line number": [
      224
     ]
    },
    "numpy.array": {
     "line number": [
      225
     ]
    },
    "numpy.where": {
     "line number": [
      224,
      246
     ]
    },
    "str": {
     "line number": [
      233
     ]
    },
    "tuple": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.metadata": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "_check_pandas_installed": {
     "line number": [
      383
     ]
    },
    "hasattr": {
     "line number": [
      390
     ]
    },
    "len": {
     "line number": [
      386
     ]
    },
    "mne.utils.mixin.logger": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.utils.mixin.ShiftTimeMixin": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "object": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.mixin.ShiftTimeMixin._update_first_last": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "int": {
     "line number": [
      515
     ]
    },
    "len": {
     "line number": [
      516
     ]
    },
    "round": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.ShiftTimeMixin.shift_time": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "_check_preload": {
     "line number": [
      503
     ]
    },
    "isinstance": {
     "line number": [
      506
     ]
    },
    "len": {
     "line number": [
      505
     ]
    },
    "numpy.arange": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.SizeMixin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "object": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.mixin.SizeMixin.__eq__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      39,
      39
     ]
    },
    "isinstance": {
     "line number": [
      39
     ]
    },
    "type": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.SizeMixin.__hash__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      72
     ]
    },
    "_check_preload": {
     "line number": [
      69
     ]
    },
    "dict": {
     "line number": [
      67,
      70
     ]
    },
    "isinstance": {
     "line number": [
      66,
      68
     ]
    },
    "object_hash": {
     "line number": [
      67,
      70
     ]
    },
    "type": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.SizeMixin._size": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      46
     ]
    },
    "hasattr": {
     "line number": [
      49,
      51
     ]
    },
    "object_size": {
     "line number": [
      45,
      50,
      52
     ]
    },
    "property": {
     "line number": [
      41
     ]
    },
    "warn": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin._FakeNoPandas": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "object": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.mixin._FakeNoPandas.__enter__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "_check_pandas_installed": {
     "line number": [
      464
     ]
    },
    "mne.utils.mixin.mne": {
     "line number": [
      465,
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin._FakeNoPandas.__enter__._check": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin._FakeNoPandas.__exit__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "mne.utils.mixin.mne": {
     "line number": [
      470,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin._hid_match": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      443,
      448
     ]
    },
    "isinstance": {
     "line number": [
      442
     ]
    },
    "len": {
     "line number": [
      447
     ]
    },
    "list": {
     "line number": [
      450
     ]
    },
    "set": {
     "line number": [
      446,
      450
     ]
    },
    "str": {
     "line number": [
      442
     ]
    },
    "type": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin._prepare_read_metadata": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "_check_pandas_installed": {
     "line number": [
      413
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      416
     ]
    },
    "isinstance": {
     "line number": [
      417,
      420
     ]
    },
    "list": {
     "line number": [
      417
     ]
    },
    "mne.utils.mixin.json": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin._prepare_write_metadata": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      402,
      406
     ]
    },
    "list": {
     "line number": [
      402
     ]
    },
    "mne.utils.mixin.json": {
     "line number": [
      405
     ]
    },
    "str": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.mixin.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.utils.mixin.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.utils.mixin.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.utils.mixin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.utils.mixin.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.utils.mixin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.progressbar": {
  "data": {},
  "type": "module"
 },
 "mne.utils.progressbar.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "mne.utils.progressbar.ProgressBar": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "object": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.progressbar.ProgressBar.__del__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__enter__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      134
     ]
    },
    "max": {
     "line number": [
      135
     ]
    },
    "mne.utils.progressbar._UpdateThread": {
     "line number": [
      139
     ]
    },
    "mne.utils.progressbar.os": {
     "line number": [
      132
     ]
    },
    "numpy.memmap": {
     "line number": [
      134
     ]
    },
    "os.path.isfile": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__exit__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "mne.utils.progressbar.os": {
     "line number": [
      151
     ]
    },
    "os.path.isfile": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      51
     ]
    },
    "collections.abc.Iterable": {
     "line number": [
      64
     ]
    },
    "dict": {
     "line number": [
      57
     ]
    },
    "get_config": {
     "line number": [
      50
     ]
    },
    "getattr": {
     "line number": [
      55
     ]
    },
    "int": {
     "line number": [
      71
     ]
    },
    "isinstance": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      67
     ]
    },
    "mne.utils.progressbar.logging": {
     "line number": [
      79
     ]
    },
    "mne.utils.progressbar.tempfile": {
     "line number": [
      75
     ]
    },
    "tqdm": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__iter__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.subset": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "mne.utils.progressbar._PBSubsetUpdater": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.update": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.update_with_increment_value": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "mne.utils.progressbar.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.utils.progressbar._PBSubsetUpdater": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "object": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.progressbar._PBSubsetUpdater.__init__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "mne.utils.progressbar._PBSubsetUpdater.update": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "mne.utils.progressbar._UpdateThread": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "threading.Thread": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.progressbar._UpdateThread.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "mne.utils.progressbar._UpdateThread": {
     "line number": [
      162
     ]
    },
    "super": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar._UpdateThread.run": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "mne.utils.progressbar.time": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.progressbar.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.utils.progressbar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.progressbar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.progressbar.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.progressbar.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.utils.progressbar.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_bunch.BunchConstNamed": {
  "data": {
   "shadows": "mne.utils.BunchConstNamed"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.NamedFloat": {
  "data": {
   "shadows": "mne.utils._bunch.NamedFloat"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.NamedInt": {
  "data": {
   "shadows": "mne.utils._bunch.NamedInt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.test_pickle": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "float": {
     "line number": [
      20
     ]
    },
    "int": {
     "line number": [
      17
     ]
    },
    "isinstance": {
     "line number": [
      17,
      18,
      20,
      21
     ]
    },
    "mne.utils.BunchConstNamed": {
     "line number": [
      14
     ]
    },
    "mne.utils._bunch.NamedFloat": {
     "line number": [
      21
     ]
    },
    "mne.utils._bunch.NamedInt": {
     "line number": [
      18
     ]
    },
    "mne.utils.tests.test_bunch.pickle": {
     "line number": [
      24,
      24
     ]
    },
    "repr": {
     "line number": [
      19,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      29
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.utils.tests.test_check.base_dir": {
     "line number": [
      26,
      27
     ]
    },
    "mne.utils.tests.test_check.data_path": {
     "line number": [
      24,
      25,
      28
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25,
      26,
      27,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.tests.test_check.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_fname": {
  "data": {
   "shadows": "mne.utils._check_fname"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_info_inv": {
  "data": {
   "shadows": "mne.utils._check_info_inv"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_mayavi_version": {
  "data": {
   "shadows": "mne.utils._check_mayavi_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_option": {
  "data": {
   "shadows": "mne.utils._check_option"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_path_like": {
  "data": {
   "shadows": "mne.utils._check_path_like"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_subject": {
  "data": {
   "shadows": "mne.utils._check_subject"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._get_data": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "events": {
     "line number": [
      82,
      95
     ]
    },
    "mne.utils.tests.test_check.fname_event": {
     "line number": [
      82
     ]
    },
    "mne.utils.tests.test_check.fname_fwd": {
     "line number": [
      79
     ]
    },
    "mne.utils.tests.test_check.fname_raw": {
     "line number": [
      81
     ]
    },
    "mne.utils.tests.test_check.mne": {
     "line number": [
      79,
      81,
      82,
      86,
      87,
      95,
      98,
      100
     ]
    },
    "mne.utils.tests.test_check.reject": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check._matlab_input": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check._on_missing": {
  "data": {
   "shadows": "mne.utils._on_missing"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._safe_input": {
  "data": {
   "shadows": "mne.utils._safe_input"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._suggest": {
  "data": {
   "shadows": "mne.utils._suggest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._validate_type": {
  "data": {
   "shadows": "mne.utils._validate_type"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.base_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.check_fname": {
  "data": {
   "shadows": "mne.utils.check_fname"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.check_random_state": {
  "data": {
   "shadows": "mne.utils.check_random_state"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_event": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_fwd": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_mgz": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_raw": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.pick_channels_cov": {
  "data": {
   "shadows": "mne.io.pick.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.reject": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.test_check": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      51
     ]
    },
    "PermissionError": {
     "line number": [
      46
     ]
    },
    "TypeError": {
     "line number": [
      36,
      53,
      54
     ]
    },
    "ValueError": {
     "line number": [
      35,
      52
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      32
     ]
    },
    "mne.utils._check_fname": {
     "line number": [
      36,
      37,
      42,
      47
     ]
    },
    "mne.utils._check_subject": {
     "line number": [
      52,
      53,
      54
     ]
    },
    "mne.utils.check_fname": {
     "line number": [
      51
     ]
    },
    "mne.utils.check_random_state": {
     "line number": [
      35,
      56,
      57,
      58,
      60
     ]
    },
    "mne.utils.check_version": {
     "line number": [
      59
     ]
    },
    "mne.utils.tests.test_check.fname_raw": {
     "line number": [
      64,
      65
     ]
    },
    "mne.utils.tests.test_check.mne": {
     "line number": [
      66
     ]
    },
    "mne.utils.tests.test_check.os": {
     "line number": [
      43,
      44,
      48,
      49
     ]
    },
    "mne.utils.tests.test_check.pytest": {
     "line number": [
      35,
      36,
      46,
      51,
      52,
      53,
      54
     ]
    },
    "mne.utils.tests.test_check.shutil": {
     "line number": [
      65
     ]
    },
    "mne.utils.tests.test_check.sys": {
     "line number": [
      45
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      58
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      60
     ]
    },
    "open": {
     "line number": [
      39
     ]
    },
    "os.path.basename": {
     "line number": [
      64
     ]
    },
    "os.path.isfile": {
     "line number": [
      41,
      50
     ]
    },
    "pathlib.Path": {
     "line number": [
      37
     ]
    },
    "str": {
     "line number": [
      38,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_info_inv": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "list": {
     "line number": [
      145
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      105
     ]
    },
    "mne.io.pick.pick_channels_cov": {
     "line number": [
      139,
      141
     ]
    },
    "mne.utils._check_info_inv": {
     "line number": [
      118,
      123,
      128,
      134,
      143
     ]
    },
    "mne.utils.tests.test_check._get_data": {
     "line number": [
      108
     ]
    },
    "range": {
     "line number": [
      138,
      140,
      142,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_mayavi": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      73
     ]
    },
    "mne.utils._check_mayavi_version": {
     "line number": [
      73
     ]
    },
    "mne.utils.requires_mayavi": {
     "line number": [
      69
     ]
    },
    "mne.utils.tests.test_check.pytest": {
     "line number": [
      73
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_option": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      161,
      167
     ]
    },
    "mne.utils._check_option": {
     "line number": [
      153,
      154,
      155,
      156,
      162,
      168
     ]
    },
    "mne.utils.tests.test_check.pytest": {
     "line number": [
      161,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_path_like": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      175
     ]
    },
    "mne.utils._check_path_like": {
     "line number": [
      177,
      178,
      179
     ]
    },
    "mne.utils.tests.test_check.base_dir": {
     "line number": [
      173,
      174
     ]
    },
    "pathlib.Path": {
     "line number": [
      174
     ]
    },
    "str": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_on_missing": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      207
     ]
    },
    "ValueError": {
     "line number": [
      205,
      211
     ]
    },
    "mne.utils._on_missing": {
     "line number": [
      206,
      208,
      209,
      213
     ]
    },
    "mne.utils.tests.test_check.pytest": {
     "line number": [
      205,
      207,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_safe_input": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      223
     ]
    },
    "mne.utils._safe_input": {
     "line number": [
      224,
      225
     ]
    },
    "mne.utils.tests.test_check._matlab_input": {
     "line number": [
      222
     ]
    },
    "mne.utils.tests.test_check.mne": {
     "line number": [
      222
     ]
    },
    "mne.utils.tests.test_check.pytest": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_suggest": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      190
     ]
    },
    "mne.utils._suggest": {
     "line number": [
      194,
      196,
      198
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      189
     ]
    },
    "mne.utils.tests.test_check.fname_mgz": {
     "line number": [
      193
     ]
    },
    "mne.utils.tests.test_check.mne": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_validate_type": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      185
     ]
    },
    "mne.utils._validate_type": {
     "line number": [
      184,
      186
     ]
    },
    "mne.utils.tests.test_check.pytest": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_config.ClosingStringIO": {
  "data": {
   "shadows": "mne.utils.ClosingStringIO"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config._get_stim_channel": {
  "data": {
   "shadows": "mne.utils._get_stim_channel"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.get_config": {
  "data": {
   "shadows": "mne.utils.get_config"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.get_config_path": {
  "data": {
   "shadows": "mne.utils.get_config_path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.set_config": {
  "data": {
   "shadows": "mne.utils.set_config"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.set_memmap_min_size": {
  "data": {
   "shadows": "mne.utils.set_memmap_min_size"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.sys_info": {
  "data": {
   "shadows": "mne.utils.sys_info"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.test_config": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      28
     ]
    },
    "RuntimeError": {
     "line number": [
      69
     ]
    },
    "RuntimeWarning": {
     "line number": [
      25,
      30,
      34,
      37,
      44,
      50,
      66,
      68
     ]
    },
    "TypeError": {
     "line number": [
      74,
      75,
      76,
      77,
      78
     ]
    },
    "ValueError": {
     "line number": [
      72,
      73
     ]
    },
    "len": {
     "line number": [
      24
     ]
    },
    "mne.utils._get_stim_channel": {
     "line number": [
      77,
      78
     ]
    },
    "mne.utils.get_config": {
     "line number": [
      21,
      24,
      27,
      28,
      33,
      49,
      52,
      56,
      67,
      74
     ]
    },
    "mne.utils.get_config_path": {
     "line number": [
      63
     ]
    },
    "mne.utils.set_config": {
     "line number": [
      26,
      31,
      35,
      38,
      45,
      51,
      69,
      75,
      76
     ]
    },
    "mne.utils.set_memmap_min_size": {
     "line number": [
      72,
      73
     ]
    },
    "mne.utils.tests.test_config.os": {
     "line number": [
      19,
      20,
      22,
      29,
      32,
      36,
      39,
      41,
      53,
      55,
      59,
      61
     ]
    },
    "mne.utils.tests.test_config.pytest": {
     "line number": [
      25,
      28,
      30,
      34,
      37,
      44,
      50,
      66,
      68,
      69,
      72,
      73,
      74,
      75,
      76,
      77,
      78
     ]
    },
    "open": {
     "line number": [
      64
     ]
    },
    "pathlib.Path": {
     "line number": [
      17
     ]
    },
    "str": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_config.test_sys_info": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "mne.utils.ClosingStringIO": {
     "line number": [
      83
     ]
    },
    "mne.utils.sys_info": {
     "line number": [
      84
     ]
    },
    "mne.utils.tests.test_config.platform": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_docs.add_channels_epochs": {
  "data": {
   "shadows": "mne.epochs.add_channels_epochs"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.copy_doc": {
  "data": {
   "shadows": "mne.utils.copy_doc"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.copy_function_doc_to_method_doc": {
  "data": {
   "shadows": "mne.utils.copy_function_doc_to_method_doc"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.deprecated": {
  "data": {
   "shadows": "mne.utils.deprecated"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.deprecated_alias": {
  "data": {
   "shadows": "mne.utils.deprecated_alias"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.deprecated_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "mne.utils.deprecated": {
     "line number": [
      37
     ]
    },
    "object": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.deprecated_class.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.deprecated_func": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "mne.utils.deprecated": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.grade_to_tris": {
  "data": {
   "shadows": "mne.grade_to_tris"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.linkcode_resolve": {
  "data": {
   "shadows": "mne.utils.linkcode_resolve"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.myfun": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.open_docs": {
  "data": {
   "shadows": "mne.open_docs"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.test_copy_doc": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    },
    "mne.utils.copy_doc": {
     "line number": [
      67
     ]
    },
    "mne.utils.tests.test_docs.pytest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_doc.A": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_doc.A.m1": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_doc.B": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_doc.B.m1": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_doc.C": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_doc.C.m1": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "mne.utils.copy_doc": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      159
     ]
    },
    "mne.utils.copy_function_doc_to_method_doc": {
     "line number": [
      159
     ]
    },
    "mne.utils.tests.test_docs.pytest": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A": {
  "data": {
   "lineno": 127
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A.method_f1": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "mne.utils.copy_function_doc_to_method_doc": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A.method_f2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "mne.utils.copy_function_doc_to_method_doc": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A.method_f3": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "mne.utils.copy_function_doc_to_method_doc": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f1": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f2": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f3": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f4": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f5": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_deprecated": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "mne.utils.tests.test_docs.deprecated_class": {
     "line number": [
      47
     ]
    },
    "mne.utils.tests.test_docs.deprecated_func": {
     "line number": [
      46
     ]
    },
    "mne.utils.tests.test_docs.pytest": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_deprecated_alias": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "mne.utils.deprecated_alias": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_deprecated_alias.new_func": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_doc_filling": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "mne.epochs.add_channels_epochs": {
     "line number": [
      15,
      10
     ]
    },
    "mne.grade_to_tris": {
     "line number": [
      10
     ]
    },
    "mne.utils.tests.test_docs.pytest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_linkcode_resolve": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      185,
      187,
      190,
      193
     ]
    },
    "mne.utils.linkcode_resolve": {
     "line number": [
      185,
      187,
      190,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_open_docs": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      176,
      177
     ]
    },
    "mne.open_docs": {
     "line number": [
      173,
      174,
      175,
      176,
      177
     ]
    },
    "mne.utils.tests.test_docs.myfun": {
     "line number": [
      172
     ]
    },
    "mne.utils.tests.test_docs.pytest": {
     "line number": [
      176,
      177
     ]
    },
    "mne.utils.tests.test_docs.webbrowser": {
     "line number": [
      169,
      172,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_fetching._fetch_file": {
  "data": {
   "shadows": "mne.utils._fetch_file"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.sizeof_fmt": {
  "data": {
   "shadows": "mne.utils.sizeof_fmt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.test_fetch_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      33
     ]
    },
    "RuntimeError": {
     "line number": [
      43
     ]
    },
    "ValueError": {
     "line number": [
      41
     ]
    },
    "len": {
     "line number": [
      25,
      26
     ]
    },
    "mne.utils._fetch_file": {
     "line number": [
      20,
      30,
      34,
      39,
      42,
      44
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      19,
      29
     ]
    },
    "mne.utils.requires_good_network": {
     "line number": [
      11
     ]
    },
    "mne.utils.sizeof_fmt": {
     "line number": [
      32
     ]
    },
    "mne.utils.tests.test_fetching.os": {
     "line number": [
      38
     ]
    },
    "mne.utils.tests.test_fetching.pytest": {
     "line number": [
      33,
      41,
      43,
      10,
      12
     ]
    },
    "open": {
     "line number": [
      23,
      27,
      37
     ]
    },
    "os.path.join": {
     "line number": [
      18,
      34,
      35
     ]
    },
    "str": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_linalg": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_linalg.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg._reg_pinv": {
  "data": {
   "shadows": "mne.utils._reg_pinv"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg._sym_mat_pow": {
  "data": {
   "shadows": "mne.utils._sym_mat_pow"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.svd": {
  "data": {
   "shadows": "mne.fixes.svd"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.test_pos_semidef_inv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      80
     ]
    },
    "dict": {
     "line number": [
      58
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      31,
      31
     ]
    },
    "func": {
     "line number": [
      81,
      83,
      84,
      90,
      94,
      95
     ]
    },
    "mne.fixes.svd": {
     "line number": [
      52
     ]
    },
    "mne.utils._reg_pinv": {
     "line number": [
      94,
      27
     ]
    },
    "mne.utils._sym_mat_pow": {
     "line number": [
      78,
      26
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      15
     ]
    },
    "mne.utils.tests.test_linalg.pytest": {
     "line number": [
      44,
      80,
      16,
      17,
      18,
      19,
      20,
      25
     ]
    },
    "numpy.__version__": {
     "line number": [
      31
     ]
    },
    "numpy.allclose": {
     "line number": [
      59,
      61
     ]
    },
    "numpy.complex128": {
     "line number": [
      16
     ]
    },
    "numpy.dot": {
     "line number": [
      97
     ]
    },
    "numpy.eye": {
     "line number": [
      40,
      97
     ]
    },
    "numpy.float64": {
     "line number": [
      16
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      63
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      77
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      32,
      71
     ]
    },
    "numpy.matmul": {
     "line number": [
      48,
      56,
      56,
      88,
      91,
      102,
      103
     ]
    },
    "numpy.newaxis": {
     "line number": [
      101
     ]
    },
    "numpy.ones": {
     "line number": [
      42
     ]
    },
    "numpy.outer": {
     "line number": [
      43
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      37
     ]
    },
    "numpy.repeat": {
     "line number": [
      101
     ]
    },
    "numpy.sqrt": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      51,
      87,
      89,
      92,
      96,
      102,
      103
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      75
     ]
    },
    "range": {
     "line number": [
      100
     ]
    },
    "scipy.linalg.sqrtm": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.tests.test_logging.base_dir": {
     "line number": [
      15,
      16,
      17
     ]
    },
    "os.path.dirname": {
     "line number": [
      14
     ]
    },
    "os.path.join": {
     "line number": [
      14,
      15,
      16,
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.tests.test_logging._frame_info": {
  "data": {
   "shadows": "mne.utils._logging._frame_info"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging._fun": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.utils.logger.debug": {
     "line number": [
      22
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging._get_call_line": {
  "data": {
   "shadows": "mne.utils._get_call_line"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.base_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.clean_lines": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.filter_out_warnings": {
  "data": {
   "shadows": "mne.utils.filter_out_warnings"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.fname_evoked": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.fname_log": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.fname_log_2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.set_log_file": {
  "data": {
   "shadows": "mne.utils.set_log_file"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.set_log_level": {
  "data": {
   "shadows": "mne.utils.set_log_level"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.test_frame_info": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "len": {
     "line number": [
      28
     ]
    },
    "mne.utils._logging._frame_info": {
     "line number": [
      27,
      42
     ]
    },
    "mne.utils.tests.test_logging._fun": {
     "line number": [
      34
     ]
    },
    "mne.utils.tests.test_logging.re": {
     "line number": [
      30,
      37
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_get_call_line": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "bar": {
     "line number": [
      164
     ]
    },
    "foo": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_get_call_line.bar": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "mne.utils._get_call_line": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_get_call_line.foo": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "mne.utils._get_call_line": {
     "line number": [
      155
     ]
    },
    "mne.utils.verbose": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_how_to_deal_with_warnings": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      50,
      53
     ]
    },
    "UserWarning": {
     "line number": [
      47,
      48,
      49,
      51,
      52
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "mne.utils.filter_out_warnings": {
     "line number": [
      52,
      53
     ]
    },
    "mne.utils.tests.test_logging.pytest": {
     "line number": [
      47
     ]
    },
    "mne.utils.tests.test_logging.warnings": {
     "line number": [
      48,
      49,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_logging_options": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      122
     ]
    },
    "ValueError": {
     "line number": [
      66
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      85,
      89,
      93,
      97,
      108,
      112,
      116,
      124,
      132
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      137
     ]
    },
    "mne.utils.set_log_file": {
     "line number": [
      82,
      101,
      105,
      121,
      123,
      130
     ]
    },
    "mne.utils.set_log_level": {
     "line number": [
      67,
      83,
      106
     ]
    },
    "mne.utils.tests.test_logging.clean_lines": {
     "line number": [
      72,
      75,
      99,
      118,
      126,
      135
     ]
    },
    "mne.utils.tests.test_logging.fname_evoked": {
     "line number": [
      85,
      89,
      93,
      97,
      108,
      112,
      116,
      124,
      132
     ]
    },
    "mne.utils.tests.test_logging.fname_log": {
     "line number": [
      70
     ]
    },
    "mne.utils.tests.test_logging.fname_log_2": {
     "line number": [
      74
     ]
    },
    "mne.utils.tests.test_logging.os": {
     "line number": [
      80,
      102
     ]
    },
    "mne.utils.tests.test_logging.pytest": {
     "line number": [
      66,
      122
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      65
     ]
    },
    "open": {
     "line number": [
      70,
      74,
      86,
      90,
      94,
      98,
      109,
      113,
      117,
      125,
      134
     ]
    },
    "os.path.isfile": {
     "line number": [
      79
     ]
    },
    "os.path.join": {
     "line number": [
      69
     ]
    },
    "str": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Okay": {
     "line number": [
      183
     ]
    },
    "RuntimeError": {
     "line number": [
      174,
      184
     ]
    },
    "bad_verbose": {
     "line number": [
      175
     ]
    },
    "mne.utils.tests.test_logging.pytest": {
     "line number": [
      174,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness.Okay": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness.Okay.meth": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "mne.utils.verbose": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness.bad_verbose": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "mne.utils.verbose": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_warn": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      144
     ]
    },
    "mne.utils.tests.test_logging.pytest": {
     "line number": [
      144
     ]
    },
    "mne.utils.warn": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.use_log_level": {
  "data": {
   "shadows": "mne.utils.use_log_level"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.warn": {
  "data": {
   "shadows": "mne.utils.warn"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.utils.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_misc.sizeof_fmt": {
  "data": {
   "shadows": "mne.utils.sizeof_fmt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_misc.test_sizeof_fmt": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "mne.utils.sizeof_fmt": {
     "line number": [
      6,
      7,
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_mixin": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_numerics": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.tests.test_numerics.base_dir": {
     "line number": [
      28,
      29,
      30
     ]
    },
    "os.path.dirname": {
     "line number": [
      27
     ]
    },
    "os.path.join": {
     "line number": [
      27,
      28,
      29,
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.tests.test_numerics.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._PCA": {
  "data": {
   "shadows": "mne.utils._PCA"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._ReuseCycle": {
  "data": {
   "shadows": "mne.utils._ReuseCycle"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._apply_scaling_array": {
  "data": {
   "shadows": "mne.utils._apply_scaling_array"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._apply_scaling_cov": {
  "data": {
   "shadows": "mne.utils._apply_scaling_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._array_equal_nan": {
  "data": {
   "shadows": "mne.utils._array_equal_nan"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._cal_to_julian": {
  "data": {
   "shadows": "mne.utils._cal_to_julian"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._dt_to_julian": {
  "data": {
   "shadows": "mne.utils._dt_to_julian"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._freq_mask": {
  "data": {
   "shadows": "mne.utils._freq_mask"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._get_inst_data": {
  "data": {
   "shadows": "mne.utils._get_inst_data"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._julian_to_cal": {
  "data": {
   "shadows": "mne.utils._julian_to_cal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._julian_to_dt": {
  "data": {
   "shadows": "mne.utils._julian_to_dt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._reg_pinv": {
  "data": {
   "shadows": "mne.utils._reg_pinv"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._time_mask": {
  "data": {
   "shadows": "mne.utils._time_mask"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._undo_scaling_array": {
  "data": {
   "shadows": "mne.utils._undo_scaling_array"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._undo_scaling_cov": {
  "data": {
   "shadows": "mne.utils._undo_scaling_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.ave_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.compute_corr": {
  "data": {
   "shadows": "mne.utils.compute_corr"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.cov_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.create_slices": {
  "data": {
   "shadows": "mne.utils.create_slices"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.fname_raw": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.hashfunc": {
  "data": {
   "shadows": "mne.utils.hashfunc"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.make_fixed_length_epochs": {
  "data": {
   "shadows": "mne.epochs.make_fixed_length_epochs"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.object_hash": {
  "data": {
   "shadows": "mne.utils.object_hash"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.object_size": {
  "data": {
   "shadows": "mne.utils.object_size"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.random_permutation": {
  "data": {
   "shadows": "mne.utils.random_permutation"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.test_array_equal_nan": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "mne.utils._array_equal_nan": {
     "line number": [
      443,
      445,
      447
     ]
    },
    "numpy.array_equal": {
     "line number": [
      442
     ]
    },
    "numpy.nan": {
     "line number": [
      441,
      444,
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_compute_corr": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      99
     ]
    },
    "mne.utils.compute_corr": {
     "line number": [
      97,
      101
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      101
     ]
    },
    "numpy.array": {
     "line number": [
      86,
      87,
      98
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      100
     ]
    },
    "range": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_cov_scaling": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      221
     ]
    },
    "mne.io.pick._picks_by_type": {
     "line number": [
      220
     ]
    },
    "mne.pick_types": {
     "line number": [
      217
     ]
    },
    "mne.read_cov": {
     "line number": [
      213,
      214
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      211
     ]
    },
    "mne.utils._apply_scaling_array": {
     "line number": [
      234
     ]
    },
    "mne.utils._apply_scaling_cov": {
     "line number": [
      223,
      224
     ]
    },
    "mne.utils._undo_scaling_array": {
     "line number": [
      235
     ]
    },
    "mne.utils._undo_scaling_cov": {
     "line number": [
      228,
      229
     ]
    },
    "mne.utils.tests.test_numerics.ave_fname": {
     "line number": [
      211
     ]
    },
    "mne.utils.tests.test_numerics.cov_fname": {
     "line number": [
      213,
      214
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      236
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      216,
      225,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_create_slices": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "len": {
     "line number": [
      109,
      111,
      113,
      115,
      117,
      132
     ]
    },
    "mne.utils.create_slices": {
     "line number": [
      107,
      109,
      111,
      113,
      115,
      117,
      119,
      125,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_freq_mask": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      189,
      191,
      193
     ]
    },
    "float": {
     "line number": [
      170
     ]
    },
    "mne.utils._freq_mask": {
     "line number": [
      171,
      172,
      173,
      174,
      175,
      176,
      179,
      180,
      182,
      183,
      184,
      185,
      186,
      187,
      190,
      192,
      194
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      189,
      191,
      193
     ]
    },
    "numpy.arange": {
     "line number": [
      170
     ]
    },
    "numpy.array": {
     "line number": [
      178
     ]
    },
    "numpy.inf": {
     "line number": [
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_get_inst_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      53
     ]
    },
    "list": {
     "line number": [
      47
     ]
    },
    "mne.epochs.make_fixed_length_epochs": {
     "line number": [
      40
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      35
     ]
    },
    "mne.time_frequency.tfr_morlet": {
     "line number": [
      50
     ]
    },
    "mne.utils._get_inst_data": {
     "line number": [
      37,
      41,
      44,
      51,
      53
     ]
    },
    "mne.utils.tests.test_numerics.fname_raw": {
     "line number": [
      35
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      37,
      41,
      44,
      51
     ]
    },
    "range": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_grand_average_empty_sequence": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      472
     ]
    },
    "mne.utils.grand_average": {
     "line number": [
      473
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_grand_average_len_1": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      481
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      479
     ]
    },
    "mne.utils.grand_average": {
     "line number": [
      482
     ]
    },
    "mne.utils.tests.test_numerics.ave_fname": {
     "line number": [
      479
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      481
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_hash": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      387,
      388
     ]
    },
    "copy.deepcopy": {
     "line number": [
      330,
      340,
      347,
      354,
      361,
      368,
      369,
      376,
      383,
      384
     ]
    },
    "dict": {
     "line number": [
      325,
      325
     ]
    },
    "int": {
     "line number": [
      336
     ]
    },
    "io.StringIO": {
     "line number": [
      370,
      371
     ]
    },
    "len": {
     "line number": [
      331,
      332,
      343,
      344,
      350,
      351,
      357,
      358,
      364,
      365,
      373,
      374,
      378,
      379,
      394
     ]
    },
    "mne.utils.object_diff": {
     "line number": [
      331,
      332,
      343,
      344,
      350,
      351,
      357,
      358,
      364,
      365,
      373,
      374,
      378,
      379,
      387,
      392,
      394,
      396,
      398,
      400
     ]
    },
    "mne.utils.object_hash": {
     "line number": [
      333,
      333,
      338,
      338,
      341,
      341,
      345,
      345,
      348,
      348,
      352,
      352,
      355,
      355,
      359,
      359,
      362,
      362,
      366,
      366,
      380,
      380,
      388,
      403,
      404
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      387,
      388
     ]
    },
    "numpy.bool_": {
     "line number": [
      404
     ]
    },
    "numpy.int64": {
     "line number": [
      403
     ]
    },
    "numpy.ones": {
     "line number": [
      325,
      336
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      390,
      391,
      393,
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_hashfunc": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "mne.utils.hashfunc": {
     "line number": [
      67,
      68,
      70,
      71
     ]
    },
    "open": {
     "line number": [
      61,
      63
     ]
    },
    "os.path.join": {
     "line number": [
      59,
      60
     ]
    },
    "str": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_julian_conversions": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      457,
      458,
      459
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      457,
      458,
      459
     ]
    },
    "mne.utils._cal_to_julian": {
     "line number": [
      467
     ]
    },
    "mne.utils._dt_to_julian": {
     "line number": [
      466
     ]
    },
    "mne.utils._julian_to_cal": {
     "line number": [
      464
     ]
    },
    "mne.utils._julian_to_dt": {
     "line number": [
      463
     ]
    },
    "zip": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_object_diff_with_nan": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "mne.utils.object_diff": {
     "line number": [
      315,
      316,
      317,
      318
     ]
    },
    "numpy.array": {
     "line number": [
      311,
      312,
      313
     ]
    },
    "numpy.nan": {
     "line number": [
      311,
      312,
      313,
      317,
      317,
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_object_size": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      300,
      301
     ]
    },
    "mne.utils.object_size": {
     "line number": [
      291,
      292,
      304
     ]
    },
    "numpy.float32": {
     "line number": [
      291
     ]
    },
    "numpy.float64": {
     "line number": [
      292
     ]
    },
    "numpy.int32": {
     "line number": [
      298
     ]
    },
    "numpy.ones": {
     "line number": [
      291,
      292,
      297,
      299,
      301
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      302,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_pca": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "float": {
     "line number": [
      428
     ]
    },
    "getattr": {
     "line number": [
      426,
      426
     ]
    },
    "int": {
     "line number": [
      430
     ]
    },
    "isinstance": {
     "line number": [
      428,
      430
     ]
    },
    "mne.utils._PCA": {
     "line number": [
      418
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      407
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      408,
      409
     ]
    },
    "numpy.mean": {
     "line number": [
      415
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      414
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      423,
      427
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      420,
      422
     ]
    },
    "sklearn.decomposition.PCA": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_random_permutation": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "mne.utils.random_permutation": {
     "line number": [
      201
     ]
    },
    "numpy.array": {
     "line number": [
      204
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_reg_pinv": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      250
     ]
    },
    "mne.utils._reg_pinv": {
     "line number": [
      251,
      255,
      261,
      266,
      278,
      283
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      239
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      250,
      240
     ]
    },
    "numpy.array": {
     "line number": [
      244
     ]
    },
    "numpy.eye": {
     "line number": [
      273
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      254,
      273,
      277
     ]
    },
    "numpy.newaxis": {
     "line number": [
      246
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      258,
      262,
      274,
      279
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      284
     ]
    },
    "numpy.zeros": {
     "line number": [
      283
     ]
    },
    "range": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_reuse_cycle": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      513
     ]
    },
    "len": {
     "line number": [
      491
     ]
    },
    "mne.utils._ReuseCycle": {
     "line number": [
      490
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      513
     ]
    },
    "next": {
     "line number": [
      491,
      493,
      495,
      496,
      498,
      502,
      504,
      507,
      508,
      510,
      515,
      516
     ]
    },
    "range": {
     "line number": [
      491,
      493,
      495,
      496,
      498,
      502,
      504,
      507,
      508,
      510,
      515,
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_sum_squared": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "mne.utils.sum_squared": {
     "line number": [
      81
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      80
     ]
    },
    "numpy.sum": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_time_mask": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      161,
      163
     ]
    },
    "float": {
     "line number": [
      142
     ]
    },
    "mne.utils._time_mask": {
     "line number": [
      143,
      144,
      145,
      146,
      147,
      148,
      151,
      152,
      154,
      155,
      156,
      157,
      158,
      159,
      162,
      164
     ]
    },
    "mne.utils.tests.test_numerics.pytest": {
     "line number": [
      161,
      163
     ]
    },
    "numpy.arange": {
     "line number": [
      142
     ]
    },
    "numpy.array": {
     "line number": [
      150
     ]
    },
    "numpy.inf": {
     "line number": [
      147,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_morlet"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_progressbar.ProgressBar": {
  "data": {
   "shadows": "mne.utils.ProgressBar"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar._identity": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar._identity_block": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "len": {
     "line number": [
      67
     ]
    },
    "range": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar._identity_block_wide": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "len": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.array_split_idx": {
  "data": {
   "shadows": "mne.utils.array_split_idx"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.parallel_func": {
  "data": {
   "shadows": "mne.parallel.parallel_func"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.test_progressbar": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      38
     ]
    },
    "Exception": {
     "line number": [
      27
     ]
    },
    "ValueError": {
     "line number": [
      36
     ]
    },
    "mne.utils.ProgressBar": {
     "line number": [
      15,
      19,
      27,
      31,
      37,
      39,
      42
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      30,
      41
     ]
    },
    "mne.utils.modified_env": {
     "line number": [
      30,
      36,
      38,
      41
     ]
    },
    "mne.utils.tests.test_progressbar.pytest": {
     "line number": [
      27,
      36,
      38
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      31,
      42
     ]
    },
    "numpy.arange": {
     "line number": [
      14,
      31,
      37,
      39,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar.iter_func": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar_parallel_advanced": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "len": {
     "line number": [
      80,
      86
     ]
    },
    "mne.parallel.parallel_func": {
     "line number": [
      76
     ]
    },
    "mne.utils.ProgressBar": {
     "line number": [
      80
     ]
    },
    "mne.utils.array_split_idx": {
     "line number": [
      82
     ]
    },
    "mne.utils.tests.test_progressbar._identity_block": {
     "line number": [
      76
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      79
     ]
    },
    "numpy.arange": {
     "line number": [
      78
     ]
    },
    "numpy.concatenate": {
     "line number": [
      88
     ]
    },
    "numpy.memmap": {
     "line number": [
      84
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      89
     ]
    },
    "os.path.isfile": {
     "line number": [
      83,
      87
     ]
    },
    "p_fun": {
     "line number": [
      76,
      81
     ]
    },
    "parallel": {
     "line number": [
      76,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar_parallel_basic": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "list": {
     "line number": [
      60
     ]
    },
    "mne.parallel.parallel_func": {
     "line number": [
      56
     ]
    },
    "mne.utils.tests.test_progressbar._identity": {
     "line number": [
      56
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      58
     ]
    },
    "p_fun": {
     "line number": [
      59
     ]
    },
    "parallel": {
     "line number": [
      59
     ]
    },
    "range": {
     "line number": [
      59,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar_parallel_more": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "len": {
     "line number": [
      110,
      115,
      119,
      120
     ]
    },
    "mne.parallel.parallel_func": {
     "line number": [
      106
     ]
    },
    "mne.utils.ProgressBar": {
     "line number": [
      110
     ]
    },
    "mne.utils.array_split_idx": {
     "line number": [
      112
     ]
    },
    "mne.utils.tests.test_progressbar._identity_block_wide": {
     "line number": [
      106
     ]
    },
    "mne.utils.use_log_level": {
     "line number": [
      109
     ]
    },
    "numpy.arange": {
     "line number": [
      108,
      115
     ]
    },
    "numpy.concatenate": {
     "line number": [
      114,
      116
     ]
    },
    "numpy.memmap": {
     "line number": [
      118
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      115
     ]
    },
    "os.path.isfile": {
     "line number": [
      117,
      121
     ]
    },
    "p_fun": {
     "line number": [
      106,
      111
     ]
    },
    "parallel": {
     "line number": [
      106,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.use_log_level": {
  "data": {
   "shadows": "mne.utils.use_log_level"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.utils.tests.test_testing.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing._url_to_local_path": {
  "data": {
   "shadows": "mne.utils._url_to_local_path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.buggy_mkl_svd": {
  "data": {
   "shadows": "mne.utils.buggy_mkl_svd"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.test_buggy_mkl": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      26
     ]
    },
    "RuntimeWarning": {
     "line number": [
      20
     ]
    },
    "mne.utils.tests.test_testing.pytest": {
     "line number": [
      20,
      21,
      26
     ]
    },
    "unittest.SkipTest": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_buggy_mkl.bar": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      25
     ]
    },
    "mne.utils.buggy_mkl_svd": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_buggy_mkl.foo": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "mne.utils.buggy_mkl_svd": {
     "line number": [
      17
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_datasets": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      41,
      43
     ]
    },
    "mne.utils.tests.test_testing.os": {
     "line number": [
      42
     ]
    },
    "os.path.dirname": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_tempdir": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.utils._TempDir": {
     "line number": [
      31
     ]
    },
    "os.path.isdir": {
     "line number": [
      32,
      35
     ]
    },
    "str": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_url_to_local_path": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "mne.utils._url_to_local_path": {
     "line number": [
      48
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      48
     ]
    },
    "os.path.join": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz": {
  "data": {},
  "type": "module"
 },
 "mne.viz._3d": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      3269,
      3270
     ]
    },
    "mne.viz._3d.RAS_AFFINE": {
     "line number": [
      3059
     ]
    },
    "numpy.eye": {
     "line number": [
      3058
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz._3d.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "mne.viz._3d.Brain": {
  "data": {
   "shadows": "surfer.Brain"
  },
  "type": "import"
 },
 "mne.viz._3d.ColorConverter": {
  "data": {
   "shadows": "matplotlib.colors.ColorConverter"
  },
  "type": "import"
 },
 "mne.viz._3d.ColorbarBase": {
  "data": {
   "shadows": "matplotlib.colorbar.ColorbarBase"
  },
  "type": "import"
 },
 "mne.viz._3d.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "mne.viz._3d.ConvexHull": {
  "data": {
   "shadows": "scipy.spatial.ConvexHull"
  },
  "type": "import"
 },
 "mne.viz._3d.FIDUCIAL_ORDER": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.viz._3d.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "mne.viz._3d.Line3DCollection": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.art3d.Line3DCollection"
  },
  "type": "import"
 },
 "mne.viz._3d.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz._3d.Normalize": {
  "data": {
   "shadows": "matplotlib.colors.Normalize"
  },
  "type": "import"
 },
 "mne.viz._3d.RAS_AFFINE": {
  "data": {
   "lineno": 3058
  },
  "type": "constant"
 },
 "mne.viz._3d.RAS_SHAPE": {
  "data": {
   "lineno": 3060
  },
  "type": "constant"
 },
 "mne.viz._3d.Slider": {
  "data": {
   "shadows": "matplotlib.widgets.Slider"
  },
  "type": "import"
 },
 "mne.viz._3d.SpatialImage": {
  "data": {
   "shadows": "nibabel.spatialimages.SpatialImage"
  },
  "type": "import"
 },
 "mne.viz._3d.TimeViewer": {
  "data": {
   "shadows": "_TimeViewer"
  },
  "type": "import"
 },
 "mne.viz._3d._3d_default": {
  "data": {
   "lineno": 3270
  },
  "type": "constant"
 },
 "mne.viz._3d._3d_options": {
  "data": {
   "lineno": 3269
  },
  "type": "constant"
 },
 "mne.viz._3d._check_pysurfer_antialias": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2408
     ]
    },
    "_get_args": {
     "line number": [
      2407
     ]
    },
    "dict": {
     "line number": [
      2405
     ]
    },
    "mne.viz._3d._get_3d_option": {
     "line number": [
      2404
     ]
    },
    "surfer.Brain": {
     "line number": [
      2407
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._check_views": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      2429
     ]
    },
    "ValueError": {
     "line number": [
      2432
     ]
    },
    "_check_option": {
     "line number": [
      2419
     ]
    },
    "_validate_type": {
     "line number": [
      2416,
      2425
     ]
    },
    "isinstance": {
     "line number": [
      2417
     ]
    },
    "len": {
     "line number": [
      2421
     ]
    },
    "list": {
     "line number": [
      2416,
      2417
     ]
    },
    "repr": {
     "line number": [
      2432,
      2432
     ]
    },
    "str": {
     "line number": [
      2416,
      2417
     ]
    },
    "tuple": {
     "line number": [
      2416
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._cut_coords_to_ijk": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      1978
     ]
    },
    "int": {
     "line number": [
      1979
     ]
    },
    "numpy.array": {
     "line number": [
      1979
     ]
    },
    "numpy.clip": {
     "line number": [
      1979
     ]
    },
    "numpy.round": {
     "line number": [
      1979
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      1978
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._dipole_changed": {
  "data": {
   "lineno": 3192,
   "symbols_in_volume": {
    "len": {
     "line number": [
      3205
     ]
    },
    "max": {
     "line number": [
      3205
     ]
    },
    "min": {
     "line number": [
      3205
     ]
    },
    "mne.viz._3d._plot_dipole": {
     "line number": [
      3207
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._fiducial_coords": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "mne.viz._3d.FIDUCIAL_ORDER": {
     "line number": [
      64
     ]
    },
    "numpy.array": {
     "line number": [
      64,
      79
     ]
    },
    "numpy.empty": {
     "line number": [
      69
     ]
    },
    "numpy.isclose": {
     "line number": [
      73,
      75
     ]
    },
    "numpy.isfinite": {
     "line number": [
      77
     ]
    },
    "numpy.nan": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._get_3d_option": {
  "data": {
   "lineno": 3292,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      3295
     ]
    },
    "_check_option": {
     "line number": [
      3298
     ]
    },
    "get_config": {
     "line number": [
      3296
     ]
    },
    "mne.viz._3d._3d_default": {
     "line number": [
      3296
     ]
    },
    "mne.viz._3d._3d_options": {
     "line number": [
      3294
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._get_dipole_loc": {
  "data": {
   "lineno": 3063,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      3067
     ]
    },
    "_get_img_fdata": {
     "line number": [
      3109
     ]
    },
    "_get_trans": {
     "line number": [
      3076
     ]
    },
    "_read_mri_info": {
     "line number": [
      3074
     ]
    },
    "apply_trans": {
     "line number": [
      3095,
      3096,
      3108
     ]
    },
    "combine_transforms": {
     "line number": [
      3092
     ]
    },
    "get_subjects_dir": {
     "line number": [
      3069
     ]
    },
    "mne.viz._3d.RAS_AFFINE": {
     "line number": [
      3089,
      3108
     ]
    },
    "mne.viz._3d.RAS_SHAPE": {
     "line number": [
      3101
     ]
    },
    "nibabel.load": {
     "line number": [
      3072
     ]
    },
    "nibabel.processing.resample_from_to": {
     "line number": [
      3101
     ]
    },
    "numpy.dot": {
     "line number": [
      3100,
      3100
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      3108
     ]
    },
    "numpy.linalg.solve": {
     "line number": [
      3089
     ]
    },
    "os.path.join": {
     "line number": [
      3071
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._get_map_ticks": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1318
     ]
    },
    "list": {
     "line number": [
      1319,
      1319
     ]
    },
    "numpy.array": {
     "line number": [
      1319,
      1320
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._glass_brain_crosshairs": {
  "data": {
   "lineno": 1969
  },
  "type": "function"
 },
 "mne.viz._3d._handle_time": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": {
    "_check_time_unit": {
     "line number": [
      1345
     ]
    },
    "_validate_type": {
     "line number": [
      1325
     ]
    },
    "callable": {
     "line number": [
      1343
     ]
    },
    "isinstance": {
     "line number": [
      1335
     ]
    },
    "len": {
     "line number": [
      1327
     ]
    },
    "str": {
     "line number": [
      1325,
      1335
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._handle_time.time_label": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1341
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._ijk_to_cut_coords": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      1984
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._key_pressed_slider": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1366
     ]
    },
    "numpy.abs": {
     "line number": [
      1362
     ]
    },
    "numpy.argmin": {
     "line number": [
      1362
     ]
    },
    "numpy.max": {
     "line number": [
      1364
     ]
    },
    "numpy.min": {
     "line number": [
      1366
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._linearize_map": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": {
    "matplotlib.colors.ListedColormap": {
     "line number": [
      1305
     ]
    },
    "numpy.array": {
     "line number": [
      1300,
      1304
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1287
     ]
    },
    "numpy.interp": {
     "line number": [
      1301,
      1303
     ]
    },
    "numpy.linspace": {
     "line number": [
      1299
     ]
    },
    "numpy.mean": {
     "line number": [
      1304
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._load_subject_mri": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": {
    "_check_mri": {
     "line number": [
      1993
     ]
    },
    "_check_subject": {
     "line number": [
      1992
     ]
    },
    "_validate_type": {
     "line number": [
      1990
     ]
    },
    "isinstance": {
     "line number": [
      1991
     ]
    },
    "nibabel.load": {
     "line number": [
      1993
     ]
    },
    "nibabel.spatialimages.SpatialImage": {
     "line number": [
      1990
     ]
    },
    "str": {
     "line number": [
      1991
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._make_tris_fan": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1095
     ]
    },
    "numpy.arange": {
     "line number": [
      1096
     ]
    },
    "numpy.zeros": {
     "line number": [
      1095
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._plot_dipole": {
  "data": {
   "lineno": 3113,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      3154
     ]
    },
    "int": {
     "line number": [
      3119
     ]
    },
    "len": {
     "line number": [
      3130,
      3132,
      3134,
      3147,
      3149,
      3151,
      3152,
      3157,
      3157,
      3179
     ]
    },
    "list": {
     "line number": [
      3169,
      3169
     ]
    },
    "matplotlib.colors": {
     "line number": [
      3130,
      3131,
      3136,
      3143
     ]
    },
    "matplotlib.colors.ColorConverter": {
     "line number": [
      3118
     ]
    },
    "matplotlib.pyplot.draw": {
     "line number": [
      3189
     ]
    },
    "numpy.arange": {
     "line number": [
      3134
     ]
    },
    "numpy.array": {
     "line number": [
      3127,
      3128,
      3157,
      3169
     ]
    },
    "numpy.linspace": {
     "line number": [
      3144,
      3145,
      3146
     ]
    },
    "numpy.min": {
     "line number": [
      3140
     ]
    },
    "numpy.newaxis": {
     "line number": [
      3130
     ]
    },
    "numpy.repeat": {
     "line number": [
      3130,
      3132,
      3147,
      3149,
      3151,
      3152
     ]
    },
    "numpy.round": {
     "line number": [
      3119
     ]
    },
    "range": {
     "line number": [
      3170
     ]
    },
    "tuple": {
     "line number": [
      3181
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._plot_dipole_mri_orthoview": {
  "data": {
   "lineno": 3004,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      3013
     ]
    },
    "_check_option": {
     "line number": [
      3015
     ]
    },
    "_concatenate_dipoles": {
     "line number": [
      3019
     ]
    },
    "_ensure_int": {
     "line number": [
      3025
     ]
    },
    "_validate_type": {
     "line number": [
      3036
     ]
    },
    "functools.partial": {
     "line number": [
      3050
     ]
    },
    "has_nibabel": {
     "line number": [
      3012
     ]
    },
    "isinstance": {
     "line number": [
      3017
     ]
    },
    "len": {
     "line number": [
      3030
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      3033
     ]
    },
    "mne.viz._3d._get_dipole_loc": {
     "line number": [
      3027
     ]
    },
    "mne.viz._3d._plot_dipole": {
     "line number": [
      3047
     ]
    },
    "mpl_toolkits.mplot3d.Axes3D": {
     "line number": [
      3036
     ]
    },
    "numpy.abs": {
     "line number": [
      3023
     ]
    },
    "numpy.argmax": {
     "line number": [
      3021,
      3023
     ]
    },
    "numpy.linspace": {
     "line number": [
      3039,
      3040
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      3039
     ]
    },
    "plt_show": {
     "line number": [
      3054
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._plot_mpl_stc": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1504
     ]
    },
    "ValueError": {
     "line number": [
      1432
     ]
    },
    "_check_option": {
     "line number": [
      1453
     ]
    },
    "_check_spacing": {
     "line number": [
      1468
     ]
    },
    "_create_surf_spacing": {
     "line number": [
      1469
     ]
    },
    "_get_subject_sphere_tris": {
     "line number": [
      1480
     ]
    },
    "cmap": {
     "line number": [
      1486,
      1495,
      1527
     ]
    },
    "dict": {
     "line number": [
      1451,
      1492
     ]
    },
    "figure_nobar": {
     "line number": [
      1508
     ]
    },
    "functools.partial": {
     "line number": [
      1516,
      1518
     ]
    },
    "greymap": {
     "line number": [
      1487,
      1496
     ]
    },
    "int": {
     "line number": [
      1476
     ]
    },
    "len": {
     "line number": [
      1479
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      1486,
      1487
     ]
    },
    "matplotlib.pyplot.Normalize": {
     "line number": [
      1528
     ]
    },
    "matplotlib.pyplot.axes": {
     "line number": [
      1510
     ]
    },
    "matplotlib.pyplot.cm.ScalarMappable": {
     "line number": [
      1527
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      1533
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      1460
     ]
    },
    "matplotlib.pyplot.getp": {
     "line number": [
      1530,
      1534
     ]
    },
    "matplotlib.pyplot.setp": {
     "line number": [
      1530,
      1535
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      1539
     ]
    },
    "matplotlib.widgets.Slider": {
     "line number": [
      1513
     ]
    },
    "mesh_edges": {
     "line number": [
      1481
     ]
    },
    "mne.viz._3d._handle_time": {
     "line number": [
      1459
     ]
    },
    "mne.viz._3d._key_pressed_slider": {
     "line number": [
      1518
     ]
    },
    "mne.viz._3d._linearize_map": {
     "line number": [
      1456
     ]
    },
    "mne.viz._3d._process_clim": {
     "line number": [
      1454
     ]
    },
    "mne.viz._3d._separate_map": {
     "line number": [
      1455
     ]
    },
    "mne.viz._3d._smooth_plot": {
     "line number": [
      1498,
      1516
     ]
    },
    "mpl_toolkits.axes_grid1.inset_locator.inset_axes": {
     "line number": [
      1529
     ]
    },
    "nibabel.freesurfer.read_geometry": {
     "line number": [
      1465
     ]
    },
    "nibabel.freesurfer.read_morph_data": {
     "line number": [
      1489
     ]
    },
    "numpy.array": {
     "line number": [
      1491
     ]
    },
    "numpy.clip": {
     "line number": [
      1491
     ]
    },
    "numpy.int64": {
     "line number": [
      1491
     ]
    },
    "numpy.linspace": {
     "line number": [
      1531
     ]
    },
    "numpy.round": {
     "line number": [
      1476
     ]
    },
    "os.path.join": {
     "line number": [
      1463,
      1490
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      1485
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      1484
     ]
    },
    "scipy.stats.rankdata": {
     "line number": [
      1475
     ]
    },
    "slice": {
     "line number": [
      1466
     ]
    },
    "sorted": {
     "line number": [
      1453
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._plot_stc": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1953
     ]
    },
    "ValueError": {
     "line number": [
      1855,
      1951
     ]
    },
    "_TimeViewer": {
     "line number": [
      1961
     ]
    },
    "_check_option": {
     "line number": [
      1803,
      1804,
      1936,
      1939
     ]
    },
    "_check_subject": {
     "line number": [
      1792
     ]
    },
    "_get_3d_backend": {
     "line number": [
      1794,
      1795
     ]
    },
    "_require_version": {
     "line number": [
      1799
     ]
    },
    "_validate_type": {
     "line number": [
      1937
     ]
    },
    "bool": {
     "line number": [
      1937
     ]
    },
    "dict": {
     "line number": [
      1868
     ]
    },
    "get_subjects_dir": {
     "line number": [
      1790
     ]
    },
    "getattr": {
     "line number": [
      1877
     ]
    },
    "isinstance": {
     "line number": [
      1938
     ]
    },
    "len": {
     "line number": [
      1841,
      1879,
      1948
     ]
    },
    "mne.viz._3d._check_pysurfer_antialias": {
     "line number": [
      1853
     ]
    },
    "mne.viz._3d._check_views": {
     "line number": [
      1802
     ]
    },
    "mne.viz._3d._handle_time": {
     "line number": [
      1805
     ]
    },
    "mne.viz._3d._process_clim": {
     "line number": [
      1809
     ]
    },
    "mne.viz._3d._separate_map": {
     "line number": [
      1822
     ]
    },
    "mne.viz._3d._triage_stc": {
     "line number": [
      1812
     ]
    },
    "mne.viz._3d.sys": {
     "line number": [
      1913,
      1930
     ]
    },
    "mne.viz._3d.warnings": {
     "line number": [
      1857,
      1907
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1873
     ]
    },
    "numpy.mean": {
     "line number": [
      1862
     ]
    },
    "numpy.ptp": {
     "line number": [
      1862
     ]
    },
    "str": {
     "line number": [
      1937,
      1938
     ]
    },
    "surfer.Brain": {
     "line number": [
      1853,
      1858
     ]
    },
    "surfer.TimeViewer": {
     "line number": [
      1958
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._process_clim": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1230,
      1233,
      1236,
      1242,
      1245
     ]
    },
    "_check_option": {
     "line number": [
      1248
     ]
    },
    "_validate_type": {
     "line number": [
      1198
     ]
    },
    "dict": {
     "line number": [
      1229,
      1254,
      1256
     ]
    },
    "float": {
     "line number": [
      1239,
      1240
     ]
    },
    "isinstance": {
     "line number": [
      1200,
      1216,
      1229
     ]
    },
    "len": {
     "line number": [
      1253
     ]
    },
    "matplotlib.colors.Colormap": {
     "line number": [
      1198,
      1216
     ]
    },
    "matplotlib.pyplot.get_cmap": {
     "line number": [
      1215
     ]
    },
    "mne_analyze_colormap": {
     "line number": [
      1213
     ]
    },
    "numpy.abs": {
     "line number": [
      1250
     ]
    },
    "numpy.array": {
     "line number": [
      1239,
      1240
     ]
    },
    "numpy.asarray": {
     "line number": [
      1199
     ]
    },
    "numpy.diff": {
     "line number": [
      1244
     ]
    },
    "numpy.percentile": {
     "line number": [
      1251
     ]
    },
    "str": {
     "line number": [
      1198,
      1200
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._sensor_shape": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": {
    "_reorder_ccw": {
     "line number": [
      1180
     ]
    },
    "float": {
     "line number": [
      1146,
      1167
     ]
    },
    "mne.viz._3d._make_tris_fan": {
     "line number": [
      1124,
      1125,
      1136,
      1150,
      1174,
      1175
     ]
    },
    "numpy.arange": {
     "line number": [
      1146,
      1167
     ]
    },
    "numpy.array": {
     "line number": [
      1115,
      1135,
      1149,
      1170
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1124,
      1147,
      1171,
      1173,
      1174
     ]
    },
    "numpy.exp": {
     "line number": [
      1146,
      1167
     ]
    },
    "numpy.pad": {
     "line number": [
      1184
     ]
    },
    "numpy.pi": {
     "line number": [
      1146,
      1167
     ]
    },
    "scipy.spatial.ConvexHull": {
     "line number": [
      1180
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._separate_map": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1269
     ]
    },
    "len": {
     "line number": [
      1266,
      1272
     ]
    },
    "numpy.arange": {
     "line number": [
      1269
     ]
    },
    "numpy.array": {
     "line number": [
      1264
     ]
    },
    "set": {
     "line number": [
      1266,
      1272
     ]
    },
    "warn": {
     "line number": [
      1268
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._set_aspect_equal": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._smooth_plot": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": {
    "_morph_buffer": {
     "line number": [
      1389
     ]
    },
    "cmap": {
     "line number": [
      1403
     ]
    },
    "greymap": {
     "line number": [
      1406
     ]
    },
    "len": {
     "line number": [
      1385,
      1387
     ]
    },
    "mne.viz._3d._set_aspect_equal": {
     "line number": [
      1412
     ]
    },
    "numpy.abs": {
     "line number": [
      1382
     ]
    },
    "numpy.argmin": {
     "line number": [
      1382
     ]
    },
    "numpy.mean": {
     "line number": [
      1401,
      1402
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._triage_stc": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1598
     ]
    },
    "_check_option": {
     "line number": [
      1608
     ]
    },
    "_validate_type": {
     "line number": [
      1601
     ]
    },
    "isinstance": {
     "line number": [
      1594,
      1603
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d._update_coord_frame": {
  "data": {
   "lineno": 3210,
   "symbols_in_volume": {
    "apply_trans": {
     "line number": [
      3212,
      3213,
      3215,
      3216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.axes3d": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.axes3d"
  },
  "type": "import"
 },
 "mne.viz._3d.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.viz._3d.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz._3d.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "mne.viz._3d.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz._3d.index_img": {
  "data": {
   "shadows": "nilearn.image.index_img"
  },
  "type": "import"
 },
 "mne.viz._3d.inset_axes": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.inset_locator.inset_axes"
  },
  "type": "import"
 },
 "mne.viz._3d.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.viz._3d.link_brains": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1562
     ]
    },
    "RuntimeError": {
     "line number": [
      1579
     ]
    },
    "TypeError": {
     "line number": [
      1575
     ]
    },
    "ValueError": {
     "line number": [
      1568
     ]
    },
    "_LinkViewer": {
     "line number": [
      1582
     ]
    },
    "_TimeViewer": {
     "line number": [
      1573
     ]
    },
    "_get_3d_backend": {
     "line number": [
      1561,
      1563
     ]
    },
    "collections.abc.Iterable": {
     "line number": [
      1565
     ]
    },
    "hasattr": {
     "line number": [
      1572
     ]
    },
    "isinstance": {
     "line number": [
      1565,
      1570
     ]
    },
    "len": {
     "line number": [
      1567,
      1578
     ]
    },
    "type": {
     "line number": [
      1576
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.mplDeprecation": {
  "data": {
   "shadows": "matplotlib.cbook.mplDeprecation"
  },
  "type": "import"
 },
 "mne.viz._3d.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.viz._3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._3d.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz._3d.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz._3d.plot_alignment": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      742,
      856
     ]
    },
    "RuntimeError": {
     "line number": [
      695
     ]
    },
    "Transform": {
     "line number": [
      655,
      661,
      663
     ]
    },
    "TypeError": {
     "line number": [
      581
     ]
    },
    "ValueError": {
     "line number": [
      603,
      613,
      676,
      709,
      758,
      768,
      782,
      789,
      796,
      809,
      833,
      926
     ]
    },
    "_bem_find_surface": {
     "line number": [
      693,
      775
     ]
    },
    "_check_option": {
     "line number": [
      577,
      584,
      586,
      588,
      607
     ]
    },
    "_complete_sphere_surf": {
     "line number": [
      689,
      771,
      819,
      848
     ]
    },
    "_create_meg_coils": {
     "line number": [
      906
     ]
    },
    "_ensure_src": {
     "line number": [
      609
     ]
    },
    "_find_trans": {
     "line number": [
      647
     ]
    },
    "_get_renderer": {
     "line number": [
      978
     ]
    },
    "_get_trans": {
     "line number": [
      648,
      649
     ]
    },
    "_loc_to_coil_trans": {
     "line number": [
      904
     ]
    },
    "_pl": {
     "line number": [
      834,
      955,
      964,
      971,
      1084
     ]
    },
    "_project_onto_surface": {
     "line number": [
      897
     ]
    },
    "_validate_type": {
     "line number": [
      592,
      598,
      623
     ]
    },
    "all": {
     "line number": [
      580
     ]
    },
    "any": {
     "line number": [
      839
     ]
    },
    "apply_trans": {
     "line number": [
      798,
      894,
      911,
      919,
      941,
      944,
      973,
      995,
      1080,
      1082
     ]
    },
    "bool": {
     "line number": [
      615,
      617
     ]
    },
    "combine_transforms": {
     "line number": [
      656,
      660
     ]
    },
    "create_info": {
     "line number": [
      591
     ]
    },
    "dict": {
     "line number": [
      635,
      668,
      836,
      837,
      843,
      890,
      983,
      985,
      1056
     ]
    },
    "enumerate": {
     "line number": [
      583,
      585,
      587,
      842
     ]
    },
    "get_meg_helmet_surf": {
     "line number": [
      803
     ]
    },
    "get_subjects_dir": {
     "line number": [
      646,
      714,
      755,
      787,
      822
     ]
    },
    "invert_transform": {
     "line number": [
      654,
      656,
      665,
      941
     ]
    },
    "isinstance": {
     "line number": [
      565,
      567,
      574,
      579,
      580,
      594,
      601,
      687,
      765,
      793,
      843
     ]
    },
    "len": {
     "line number": [
      602,
      602,
      767,
      802,
      808,
      811,
      818,
      832,
      841,
      866,
      891,
      893,
      914,
      915,
      945,
      945,
      945,
      949,
      955,
      963,
      970,
      1002,
      1025,
      1030,
      1030,
      1030,
      1030,
      1032,
      1041,
      1044,
      1054,
      1059,
      1079
     ]
    },
    "list": {
     "line number": [
      551,
      564,
      573,
      579,
      596,
      748,
      884,
      884,
      885,
      886,
      887,
      888,
      889,
      901,
      1018
     ]
    },
    "mne.viz._3d._fiducial_coords": {
     "line number": [
      797,
      937
     ]
    },
    "mne.viz._3d._sensor_shape": {
     "line number": [
      910
     ]
    },
    "mne.viz._3d._update_coord_frame": {
     "line number": [
      877,
      880
     ]
    },
    "numpy.allclose": {
     "line number": [
      1000
     ]
    },
    "numpy.arange": {
     "line number": [
      841
     ]
    },
    "numpy.array": {
     "line number": [
      892,
      929,
      933,
      952,
      959,
      966,
      1080,
      1082
     ]
    },
    "numpy.column_stack": {
     "line number": [
      1007
     ]
    },
    "numpy.concatenate": {
     "line number": [
      615,
      617,
      919,
      920
     ]
    },
    "numpy.empty": {
     "line number": [
      620
     ]
    },
    "numpy.eye": {
     "line number": [
      1000
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      807
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1033
     ]
    },
    "numpy.tile": {
     "line number": [
      1005
     ]
    },
    "os.path.basename": {
     "line number": [
      732
     ]
    },
    "os.path.exists": {
     "line number": [
      730,
      852,
      855
     ]
    },
    "os.path.isfile": {
     "line number": [
      757
     ]
    },
    "os.path.join": {
     "line number": [
      713,
      717,
      719,
      723,
      724,
      726,
      754,
      791,
      824,
      850,
      853
     ]
    },
    "os.path.splitext": {
     "line number": [
      733
     ]
    },
    "pick_types": {
     "line number": [
      631,
      632,
      633,
      641
     ]
    },
    "range": {
     "line number": [
      1071
     ]
    },
    "read_bem_surfaces": {
     "line number": [
      734
     ]
    },
    "read_fiducials": {
     "line number": [
      794
     ]
    },
    "read_surface": {
     "line number": [
      736,
      760,
      826,
      859
     ]
    },
    "repr": {
     "line number": [
      927
     ]
    },
    "sorted": {
     "line number": [
      640,
      974
     ]
    },
    "str": {
     "line number": [
      565,
      567,
      574,
      580,
      594,
      793
     ]
    },
    "transform_surface_to": {
     "line number": [
      873
     ]
    },
    "tuple": {
     "line number": [
      579
     ]
    },
    "type": {
     "line number": [
      582
     ]
    },
    "warn": {
     "line number": [
      917,
      946
     ]
    },
    "zip": {
     "line number": [
      578,
      909,
      1040,
      1071
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_brain_colorbar": {
  "data": {
   "lineno": 3220,
   "symbols_in_volume": {
    "colormap": {
     "line number": [
      3251,
      3253,
      3256
     ]
    },
    "matplotlib.colorbar.ColorbarBase": {
     "line number": [
      3256
     ]
    },
    "matplotlib.colors.Normalize": {
     "line number": [
      3255
     ]
    },
    "mne.viz._3d._get_map_ticks": {
     "line number": [
      3252
     ]
    },
    "mne.viz._3d._linearize_map": {
     "line number": [
      3253
     ]
    },
    "mne.viz._3d._process_clim": {
     "line number": [
      3251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_dipole_locations": {
  "data": {
   "lineno": 2728,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2853
     ]
    },
    "_get_renderer": {
     "line number": [
      2836
     ]
    },
    "_get_trans": {
     "line number": [
      2840
     ]
    },
    "apply_trans": {
     "line number": [
      2841,
      2842
     ]
    },
    "mne.viz._3d._plot_dipole_mri_orthoview": {
     "line number": [
      2828
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_evoked_field": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      391
     ]
    },
    "ValueError": {
     "line number": [
      355
     ]
    },
    "_ensure_int": {
     "line number": [
      347
     ]
    },
    "_get_renderer": {
     "line number": [
      366
     ]
    },
    "_validate_type": {
     "line number": [
      346
     ]
    },
    "enumerate": {
     "line number": [
      368
     ]
    },
    "float": {
     "line number": [
      398
     ]
    },
    "len": {
     "line number": [
      386,
      389
     ]
    },
    "list": {
     "line number": [
      387,
      390
     ]
    },
    "mne_analyze_colormap": {
     "line number": [
      361
     ]
    },
    "numpy.abs": {
     "line number": [
      356,
      397
     ]
    },
    "numpy.argmin": {
     "line number": [
      356
     ]
    },
    "numpy.concatenate": {
     "line number": [
      362
     ]
    },
    "numpy.dot": {
     "line number": [
      393
     ]
    },
    "numpy.max": {
     "line number": [
      397
     ]
    },
    "numpy.mean": {
     "line number": [
      351
     ]
    },
    "numpy.tile": {
     "line number": [
      362,
      363,
      364
     ]
    },
    "pick_types": {
     "line number": [
      375,
      377
     ]
    },
    "set": {
     "line number": [
      381,
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_glass_brain": {
  "data": {
   "shadows": "nilearn.plotting.plot_glass_brain"
  },
  "type": "import"
 },
 "mne.viz._3d.plot_head_positions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      146,
      180
     ]
    },
    "_check_destination": {
     "line number": [
      135
     ]
    },
    "_check_option": {
     "line number": [
      133
     ]
    },
    "_ensure_trans": {
     "line number": [
      137
     ]
    },
    "dict": {
     "line number": [
      134,
      249,
      260,
      261
     ]
    },
    "einsum": {
     "line number": [
      156
     ]
    },
    "enumerate": {
     "line number": [
      143,
      185,
      193
     ]
    },
    "float": {
     "line number": [
      144,
      165
     ]
    },
    "get_meg_helmet_surf": {
     "line number": [
      169
     ]
    },
    "head_pos_to_trans_rot_t": {
     "line number": [
      153
     ]
    },
    "isinstance": {
     "line number": [
      141
     ]
    },
    "len": {
     "line number": [
      151,
      163,
      215,
      228
     ]
    },
    "list": {
     "line number": [
      141,
      201,
      201
     ]
    },
    "matplotlib.colors.Normalize": {
     "line number": [
      255
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      176,
      249
     ]
    },
    "mne.viz._3d._set_aspect_equal": {
     "line number": [
      289
     ]
    },
    "mpl_toolkits.mplot3d.art3d.Line3DCollection": {
     "line number": [
      256
     ]
    },
    "numpy.any": {
     "line number": [
      197
     ]
    },
    "numpy.arange": {
     "line number": [
      215,
      228
     ]
    },
    "numpy.argmin": {
     "line number": [
      212,
      225
     ]
    },
    "numpy.array": {
     "line number": [
      144,
      164,
      167,
      178,
      240
     ]
    },
    "numpy.concatenate": {
     "line number": [
      152,
      254,
      265
     ]
    },
    "numpy.cumsum": {
     "line number": [
      151
     ]
    },
    "numpy.inf": {
     "line number": [
      209,
      223
     ]
    },
    "numpy.isfinite": {
     "line number": [
      211,
      214,
      224,
      227
     ]
    },
    "numpy.maximum": {
     "line number": [
      284
     ]
    },
    "numpy.minimum": {
     "line number": [
      283
     ]
    },
    "numpy.nan": {
     "line number": [
      216,
      229
     ]
    },
    "numpy.newaxis": {
     "line number": [
      253,
      286
     ]
    },
    "numpy.repeat": {
     "line number": [
      265
     ]
    },
    "pick_types": {
     "line number": [
      162
     ]
    },
    "plt_show": {
     "line number": [
      292
     ]
    },
    "range": {
     "line number": [
      191,
      199,
      200,
      201,
      201,
      236
     ]
    },
    "rot_to_quat": {
     "line number": [
      241
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      206
     ]
    },
    "tight_layout": {
     "line number": [
      291
     ]
    },
    "transform_surface_to": {
     "line number": [
      170
     ]
    },
    "tuple": {
     "line number": [
      141
     ]
    },
    "zip": {
     "line number": [
      185,
      242,
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_sensors_connectivity": {
  "data": {
   "lineno": 2920,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2946
     ]
    },
    "_get_renderer": {
     "line number": [
      2942
     ]
    },
    "_picks_to_idx": {
     "line number": [
      2944
     ]
    },
    "_validate_type": {
     "line number": [
      2938
     ]
    },
    "len": {
     "line number": [
      2945,
      2945,
      2948,
      2948
     ]
    },
    "list": {
     "line number": [
      2964,
      2965,
      2988
     ]
    },
    "numpy.array": {
     "line number": [
      2952,
      2971,
      2999
     ]
    },
    "numpy.c_": {
     "line number": [
      2954,
      2979,
      2980,
      2981
     ]
    },
    "numpy.max": {
     "line number": [
      2974
     ]
    },
    "numpy.min": {
     "line number": [
      2975
     ]
    },
    "numpy.sort": {
     "line number": [
      2960
     ]
    },
    "numpy.where": {
     "line number": [
      2961
     ]
    },
    "scipy.linalg.norm": {
     "line number": [
      2967
     ]
    },
    "set": {
     "line number": [
      2988
     ]
    },
    "zip": {
     "line number": [
      2966,
      2976
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_source_estimates": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      1758
     ]
    },
    "ModuleNotFoundError": {
     "line number": [
      1758
     ]
    },
    "_check_option": {
     "line number": [
      1749
     ]
    },
    "_check_subject": {
     "line number": [
      1748
     ]
    },
    "_get_3d_backend": {
     "line number": [
      1755,
      1765
     ]
    },
    "_validate_type": {
     "line number": [
      1745
     ]
    },
    "dict": {
     "line number": [
      1766
     ]
    },
    "get_subjects_dir": {
     "line number": [
      1746
     ]
    },
    "mne.viz._3d._plot_mpl_stc": {
     "line number": [
      1774
     ]
    },
    "mne.viz._3d._plot_stc": {
     "line number": [
      1775
     ]
    },
    "set_3d_backend": {
     "line number": [
      1755,
      1757
     ]
    },
    "warn": {
     "line number": [
      1760
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_sparse_source_estimates": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2627
     ]
    },
    "_get_color_list": {
     "line number": [
      2635
     ]
    },
    "_get_renderer": {
     "line number": [
      2665
     ]
    },
    "all": {
     "line number": [
      2626
     ]
    },
    "enumerate": {
     "line number": [
      2685,
      2687
     ]
    },
    "isinstance": {
     "line number": [
      2625,
      2629,
      2631,
      2699
     ]
    },
    "itertools.cycle": {
     "line number": [
      2677
     ]
    },
    "len": {
     "line number": [
      2679,
      2688,
      2700,
      2700
     ]
    },
    "list": {
     "line number": [
      2625,
      2629,
      2631,
      2699
     ]
    },
    "matplotlib.colors": {
     "line number": [
      2634,
      2635,
      2677,
      2677,
      2682,
      2682,
      2691,
      2694
     ]
    },
    "matplotlib.colors.ColorConverter": {
     "line number": [
      2663
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      2673
     ]
    },
    "next": {
     "line number": [
      2682,
      2691
     ]
    },
    "numpy.concatenate": {
     "line number": [
      2661,
      2683
     ]
    },
    "numpy.ndarray": {
     "line number": [
      2699
     ]
    },
    "numpy.r_": {
     "line number": [
      2642,
      2646,
      2655,
      2659
     ]
    },
    "numpy.sum": {
     "line number": [
      2712
     ]
    },
    "numpy.unique": {
     "line number": [
      2661,
      2683
     ]
    },
    "plt_show": {
     "line number": [
      2722
     ]
    },
    "range": {
     "line number": [
      2683
     ]
    },
    "tuple": {
     "line number": [
      2625,
      2699
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_stat_map": {
  "data": {
   "shadows": "nilearn.plotting.plot_stat_map"
  },
  "type": "import"
 },
 "mne.viz._3d.plot_vector_source_estimates": {
  "data": {
   "lineno": 2437,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      2542
     ]
    },
    "colormap": {
     "line number": [
      2545
     ]
    },
    "mne.viz._3d._plot_stc": {
     "line number": [
      2544
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      2092
     ]
    },
    "Transform": {
     "line number": [
      2110
     ]
    },
    "ValueError": {
     "line number": [
      2276,
      2343
     ]
    },
    "_DistanceQuery": {
     "line number": [
      2119
     ]
    },
    "_check_option": {
     "line number": [
      2097
     ]
    },
    "_check_subject": {
     "line number": [
      2112,
      2243
     ]
    },
    "_cut_coords_to_idx": {
     "line number": [
      2281
     ]
    },
    "_ensure_src": {
     "line number": [
      2106
     ]
    },
    "_print_coord_trans": {
     "line number": [
      2110,
      2246
     ]
    },
    "_validate_type": {
     "line number": [
      2100
     ]
    },
    "check_version": {
     "line number": [
      2091
     ]
    },
    "colormap": {
     "line number": [
      2350,
      2354,
      2354,
      2363
     ]
    },
    "dict": {
     "line number": [
      2098,
      2133,
      2360,
      2387
     ]
    },
    "float": {
     "line number": [
      2265,
      2274
     ]
    },
    "functools.partial": {
     "line number": [
      2396,
      2398
     ]
    },
    "isinstance": {
     "line number": [
      2101
     ]
    },
    "len": {
     "line number": [
      2115,
      2301,
      2304
     ]
    },
    "list": {
     "line number": [
      2326,
      2328
     ]
    },
    "matplotlib.colors.ListedColormap": {
     "line number": [
      2354
     ]
    },
    "matplotlib.pyplot.get_cmap": {
     "line number": [
      2349
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      2394
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      2299
     ]
    },
    "max": {
     "line number": [
      2320
     ]
    },
    "min": {
     "line number": [
      2319
     ]
    },
    "mne.viz._3d._cut_coords_to_ijk": {
     "line number": [
      2291
     ]
    },
    "mne.viz._3d._get_map_ticks": {
     "line number": [
      2315
     ]
    },
    "mne.viz._3d._ijk_to_cut_coords": {
     "line number": [
      2290
     ]
    },
    "mne.viz._3d._linearize_map": {
     "line number": [
      2316
     ]
    },
    "mne.viz._3d._load_subject_mri": {
     "line number": [
      2259
     ]
    },
    "mne.viz._3d._process_clim": {
     "line number": [
      2311
     ]
    },
    "mne.viz._3d._separate_map": {
     "line number": [
      2313
     ]
    },
    "nibabel.Nifti1Image": {
     "line number": [
      2253
     ]
    },
    "nilearn.image.index_img": {
     "line number": [
      2286
     ]
    },
    "nilearn.plotting.plot_glass_brain": {
     "line number": [
      2099
     ]
    },
    "nilearn.plotting.plot_stat_map": {
     "line number": [
      2098
     ]
    },
    "numpy.abs": {
     "line number": [
      2267,
      2271,
      2285
     ]
    },
    "numpy.allclose": {
     "line number": [
      2245
     ]
    },
    "numpy.argmax": {
     "line number": [
      2285
     ]
    },
    "numpy.argmin": {
     "line number": [
      2267
     ]
    },
    "numpy.array": {
     "line number": [
      2113,
      2274,
      2321,
      2321,
      2328
     ]
    },
    "numpy.diff": {
     "line number": [
      2321
     ]
    },
    "numpy.dot": {
     "line number": [
      2254
     ]
    },
    "numpy.eye": {
     "line number": [
      2245
     ]
    },
    "numpy.interp": {
     "line number": [
      2351
     ]
    },
    "numpy.linspace": {
     "line number": [
      2351
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      2291
     ]
    },
    "numpy.unique": {
     "line number": [
      2329
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      2114,
      2270
     ]
    },
    "plot_and_correct": {
     "line number": [
      2390
     ]
    },
    "read_ras_mni_t": {
     "line number": [
      2244
     ]
    },
    "slice": {
     "line number": [
      2263,
      2268
     ]
    },
    "tuple": {
     "line number": [
      2294,
      2294
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._click_to_cut_coords": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": {
    "_get_img_fdata": {
     "line number": [
      2162
     ]
    },
    "dict": {
     "line number": [
      2161
     ]
    },
    "len": {
     "line number": [
      2158
     ]
    },
    "mne.viz._3d._cut_coords_to_ijk": {
     "line number": [
      2163
     ]
    },
    "mne.viz._3d._ijk_to_cut_coords": {
     "line number": [
      2173
     ]
    },
    "nibabel.aff2axcodes": {
     "line number": [
      2157
     ]
    },
    "numpy.abs": {
     "line number": [
      2162
     ]
    },
    "numpy.argmax": {
     "line number": [
      2165,
      2168,
      2171
     ]
    },
    "numpy.array": {
     "line number": [
      2152
     ]
    },
    "tuple": {
     "line number": [
      2176
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._cut_coords_to_idx": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": {
    "mne.viz._3d._cut_coords_to_ijk": {
     "line number": [
      2123
     ]
    },
    "numpy.newaxis": {
     "line number": [
      2127
     ]
    },
    "tuple": {
     "line number": [
      2126
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._onclick": {
  "data": {
   "lineno": 2215,
   "symbols_in_volume": {
    "_click_to_cut_coords": {
     "line number": [
      2225
     ]
    },
    "_cut_coords_to_idx": {
     "line number": [
      2234
     ]
    },
    "_update_timeslice": {
     "line number": [
      2223
     ]
    },
    "mne.viz._3d.verbose_dec": {
     "line number": [
      2215
     ]
    },
    "plot_map_callback": {
     "line number": [
      2219,
      2232
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._press": {
  "data": {
   "lineno": 2179,
   "symbols_in_volume": {
    "_update_timeslice": {
     "line number": [
      2191
     ]
    },
    "max": {
     "line number": [
      2184,
      2186
     ]
    },
    "min": {
     "line number": [
      2188,
      2190
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._update_timeslice": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": {
    "nilearn.image.index_img": {
     "line number": [
      2209
     ]
    },
    "plot_map_callback": {
     "line number": [
      2212
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates.plot_and_correct": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": {
    "_crop_colorbar": {
     "line number": [
      2382
     ]
    },
    "functools.partial": {
     "line number": [
      2372
     ]
    },
    "matplotlib.cbook.mplDeprecation": {
     "line number": [
      2371
     ]
    },
    "mne.viz._3d._glass_brain_crosshairs": {
     "line number": [
      2385
     ]
    },
    "mne.viz._3d.warnings": {
     "line number": [
      2370,
      2371
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz._3d.resample_from_to": {
  "data": {
   "shadows": "nibabel.processing.resample_from_to"
  },
  "type": "import"
 },
 "mne.viz._3d.set_3d_options": {
  "data": {
   "lineno": 3273,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      3289
     ]
    },
    "mne.viz._3d._3d_options": {
     "line number": [
      3289
     ]
    },
    "str": {
     "line number": [
      3289
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.snapshot_brain_montage": {
  "data": {
   "lineno": 2859,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2904
     ]
    },
    "ValueError": {
     "line number": [
      2892,
      2901
     ]
    },
    "_get_renderer": {
     "line number": [
      2908
     ]
    },
    "all": {
     "line number": [
      2900
     ]
    },
    "dict": {
     "line number": [
      2899
     ]
    },
    "isinstance": {
     "line number": [
      2893,
      2896,
      2899
     ]
    },
    "len": {
     "line number": [
      2900
     ]
    },
    "numpy.vstack": {
     "line number": [
      2910
     ]
    },
    "zip": {
     "line number": [
      2895,
      2902
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._3d.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.viz._3d.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.viz._3d.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.viz._3d.verbose_dec": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.viz._3d.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz._brain": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.viz._brain._brain": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._brain.Brain": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain._brain.Brain.__hash__": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1784
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      179
     ]
    },
    "Surface": {
     "line number": [
      252
     ]
    },
    "ValueError": {
     "line number": [
      212
     ]
    },
    "_check_option": {
     "line number": [
      181
     ]
    },
    "_check_views": {
     "line number": [
      203
     ]
    },
    "_get_3d_backend": {
     "line number": [
      216
     ]
    },
    "_get_renderer": {
     "line number": [
      246
     ]
    },
    "dict": {
     "line number": [
      204
     ]
    },
    "float": {
     "line number": [
      219
     ]
    },
    "hasattr": {
     "line number": [
      306
     ]
    },
    "int": {
     "line number": [
      184,
      210
     ]
    },
    "isinstance": {
     "line number": [
      184,
      192,
      197,
      201,
      278
     ]
    },
    "len": {
     "line number": [
      205,
      211,
      214
     ]
    },
    "list": {
     "line number": [
      224
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      241
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      193,
      198
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      210
     ]
    },
    "str": {
     "line number": [
      192,
      197,
      201
     ]
    },
    "sum": {
     "line number": [
      196
     ]
    },
    "tuple": {
     "line number": [
      210,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._add_surface_data": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      626
     ]
    },
    "len": {
     "line number": [
      609
     ]
    },
    "numpy.zeros": {
     "line number": [
      609
     ]
    },
    "tuple": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._add_volume_data": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": {
    "Bunch": {
     "line number": [
      699
     ]
    },
    "ValueError": {
     "line number": [
      666
     ]
    },
    "_check_option": {
     "line number": [
      644,
      668
     ]
    },
    "_handle_default": {
     "line number": [
      652
     ]
    },
    "_validate_type": {
     "line number": [
      643,
      645,
      662
     ]
    },
    "_volume": {
     "line number": [
      712
     ]
    },
    "apply_trans": {
     "line number": [
      698
     ]
    },
    "dict": {
     "line number": [
      646,
      648,
      649
     ]
    },
    "float": {
     "line number": [
      650,
      674
     ]
    },
    "int": {
     "line number": [
      690
     ]
    },
    "isinstance": {
     "line number": [
      648
     ]
    },
    "len": {
     "line number": [
      665,
      701
     ]
    },
    "min": {
     "line number": [
      678
     ]
    },
    "mne.viz._brain._brain.vtk": {
     "line number": [
      740,
      745
     ]
    },
    "numpy.allclose": {
     "line number": [
      705
     ]
    },
    "numpy.arange": {
     "line number": [
      689
     ]
    },
    "numpy.array": {
     "line number": [
      690,
      697
     ]
    },
    "numpy.clip": {
     "line number": [
      674
     ]
    },
    "numpy.diag": {
     "line number": [
      706,
      706,
      707
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      688
     ]
    },
    "numpy.prod": {
     "line number": [
      709
     ]
    },
    "numpy.zeros": {
     "line number": [
      709
     ]
    },
    "repr": {
     "line number": [
      663
     ]
    },
    "set": {
     "line number": [
      664,
      664
     ]
    },
    "sorted": {
     "line number": [
      667
     ]
    },
    "str": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._check_hemi": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1679,
      1685
     ]
    },
    "list": {
     "line number": [
      1683
     ]
    },
    "str": {
     "line number": [
      1686
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._check_hemis": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1698
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._cmap_range": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1461
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._cortex_colormap": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      325,
      325,
      327,
      329,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._iter_time": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      1661,
      1662
     ]
    },
    "enumerate": {
     "line number": [
      1659
     ]
    },
    "func": {
     "line number": [
      1660,
      1666
     ]
    },
    "functools.partial": {
     "line number": [
      1654
     ]
    },
    "hasattr": {
     "line number": [
      1653
     ]
    },
    "len": {
     "line number": [
      1662
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._iter_views": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      584,
      586,
      589,
      591
     ]
    },
    "enumerate": {
     "line number": [
      587
     ]
    },
    "zip": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._make_movie_frames": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1595,
      1602,
      1612
     ]
    },
    "callback": {
     "line number": [
      1629
     ]
    },
    "float": {
     "line number": [
      1605
     ]
    },
    "len": {
     "line number": [
      1610,
      1629,
      1629
     ]
    },
    "math.floor": {
     "line number": [
      1604
     ]
    },
    "numpy.arange": {
     "line number": [
      1605,
      1608
     ]
    },
    "numpy.interp": {
     "line number": [
      1608
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._n_times": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1312
     ]
    },
    "property": {
     "line number": [
      1310
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._show": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1672
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._to_borders": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1706
     ]
    },
    "bool": {
     "line number": [
      1705
     ]
    },
    "int": {
     "line number": [
      1705,
      1714
     ]
    },
    "isinstance": {
     "line number": [
      1705,
      1714
     ]
    },
    "mesh_edges": {
     "line number": [
      1709
     ]
    },
    "numpy.any": {
     "line number": [
      1720
     ]
    },
    "numpy.in1d": {
     "line number": [
      1716,
      1723
     ]
    },
    "numpy.int64": {
     "line number": [
      1712
     ]
    },
    "numpy.unique": {
     "line number": [
      1713,
      1721
     ]
    },
    "numpy.zeros": {
     "line number": [
      1712
     ]
    },
    "range": {
     "line number": [
      1715
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._to_time_index": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1509
     ]
    },
    "numpy.arange": {
     "line number": [
      1509
     ]
    },
    "numpy.interp": {
     "line number": [
      1509
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._update": {
  "data": {
   "lineno": 1765
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._update_auto_scaling": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": {
    "_process_clim": {
     "line number": [
      1490
     ]
    },
    "list": {
     "line number": [
      1492
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1492
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._update_fscale": {
  "data": {
   "lineno": 1471
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain._update_glyphs": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": {
    "_create_actor": {
     "line number": [
      1445
     ]
    },
    "_set_colormap_range": {
     "line number": [
      1454
     ]
    },
    "list": {
     "line number": [
      1421
     ]
    },
    "numpy.array": {
     "line number": [
      1417
     ]
    },
    "slice": {
     "line number": [
      1416
     ]
    },
    "str": {
     "line number": [
      1436
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.add_annotation": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1029
     ]
    },
    "ValueError": {
     "line number": [
      1042
     ]
    },
    "_read_annot": {
     "line number": [
      1048
     ]
    },
    "_set_colormap_range": {
     "line number": [
      1104
     ]
    },
    "int": {
     "line number": [
      1061
     ]
    },
    "isinstance": {
     "line number": [
      1018,
      1099
     ]
    },
    "len": {
     "line number": [
      1023,
      1051
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      1081
     ]
    },
    "mne.viz._brain._brain.os": {
     "line number": [
      1019,
      1021,
      1022,
      1041
     ]
    },
    "numpy.any": {
     "line number": [
      1065,
      1065
     ]
    },
    "numpy.argsort": {
     "line number": [
      1069
     ]
    },
    "numpy.array": {
     "line number": [
      1061
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1066
     ]
    },
    "numpy.float64": {
     "line number": [
      1084
     ]
    },
    "numpy.max": {
     "line number": [
      1094
     ]
    },
    "numpy.min": {
     "line number": [
      1093
     ]
    },
    "numpy.multiply": {
     "line number": [
      1081
     ]
    },
    "numpy.round": {
     "line number": [
      1061,
      1081
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      1071
     ]
    },
    "numpy.uint8": {
     "line number": [
      1104
     ]
    },
    "numpy.vstack": {
     "line number": [
      1066
     ]
    },
    "os.path.join": {
     "line number": [
      1025,
      1027,
      1037
     ]
    },
    "str": {
     "line number": [
      1018
     ]
    },
    "tuple": {
     "line number": [
      1099
     ]
    },
    "zip": {
     "line number": [
      1046,
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.add_data": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      505
     ]
    },
    "ValueError": {
     "line number": [
      442,
      461,
      469,
      472,
      487,
      501
     ]
    },
    "_check_option": {
     "line number": [
      436,
      437
     ]
    },
    "_handle_time": {
     "line number": [
      482
     ]
    },
    "_validate_type": {
     "line number": [
      431,
      432,
      433,
      438
     ]
    },
    "bool": {
     "line number": [
      431,
      483
     ]
    },
    "dict": {
     "line number": [
      518,
      573
     ]
    },
    "float": {
     "line number": [
      440
     ]
    },
    "int": {
     "line number": [
      499
     ]
    },
    "isinstance": {
     "line number": [
      499
     ]
    },
    "len": {
     "line number": [
      468
     ]
    },
    "list": {
     "line number": [
      540
     ]
    },
    "mne.viz._brain._brain._update_limits": {
     "line number": [
      489
     ]
    },
    "numpy.arange": {
     "line number": [
      457
     ]
    },
    "numpy.array_equal": {
     "line number": [
      471
     ]
    },
    "numpy.asarray": {
     "line number": [
      446,
      459
     ]
    },
    "time_label": {
     "line number": [
      567
     ]
    },
    "type": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.add_foci": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      927
     ]
    },
    "isinstance": {
     "line number": [
      934
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      935
     ]
    },
    "tuple": {
     "line number": [
      934
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.add_label": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      839
     ]
    },
    "ValueError": {
     "line number": [
      816,
      840
     ]
    },
    "hasattr": {
     "line number": [
      832
     ]
    },
    "isinstance": {
     "line number": [
      796
     ]
    },
    "matplotlib.colors.colorConverter.to_rgba": {
     "line number": [
      855
     ]
    },
    "mne.viz._brain._brain.os": {
     "line number": [
      800,
      804,
      815
     ]
    },
    "numpy.array": {
     "line number": [
      856
     ]
    },
    "numpy.round": {
     "line number": [
      857
     ]
    },
    "numpy.uint8": {
     "line number": [
      857
     ]
    },
    "numpy.zeros": {
     "line number": [
      853
     ]
    },
    "os.path.join": {
     "line number": [
      810,
      813
     ]
    },
    "read_label": {
     "line number": [
      802,
      818
     ]
    },
    "str": {
     "line number": [
      796,
      829
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.add_text": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.close": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.data": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1512
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.enable_depth_peeling": {
  "data": {
   "lineno": 1761
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.get_picked_points": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1779
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.hemis": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1521
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.interaction": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      318
     ]
    },
    "_validate_type": {
     "line number": [
      317
     ]
    },
    "str": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.remove_labels": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.reset_view": {
  "data": {
   "lineno": 1156
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.save_image": {
  "data": {
   "lineno": 1163
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.save_movie": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": {
    "mne.viz._brain._brain.imageio": {
     "line number": [
      1585
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.scale_data_colormap": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1743
     ]
    },
    "range": {
     "line number": [
      1755
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.screenshot": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1191
     ]
    },
    "numpy.asarray": {
     "line number": [
      1213
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1221
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.set_data_smoothing": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1295
     ]
    },
    "_hemi_morph": {
     "line number": [
      1302
     ]
    },
    "len": {
     "line number": [
      1291,
      1298,
      1300,
      1304
     ]
    },
    "numpy.arange": {
     "line number": [
      1304
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      1300
     ]
    },
    "use_log_level": {
     "line number": [
      1301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.set_time_interpolation": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": {
    "_check_option": {
     "line number": [
      1327
     ]
    },
    "dict": {
     "line number": [
      1332
     ]
    },
    "mne.viz._brain._brain._safe_interp1d": {
     "line number": [
      1340,
      1343
     ]
    },
    "numpy.arange": {
     "line number": [
      1335
     ]
    },
    "str": {
     "line number": [
      1330
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.set_time_point": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": {
    "_set_mesh_scalars": {
     "line number": [
      1400
     ]
    },
    "dict": {
     "line number": [
      1355
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1372
     ]
    },
    "time_label": {
     "line number": [
      1357,
      1375,
      1376
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.show": {
  "data": {
   "lineno": 1114
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.show_view": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1144
     ]
    },
    "str": {
     "line number": [
      1144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.time_interpolation": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1314
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.update_lut": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": {
    "_set_colormap_range": {
     "line number": [
      1260,
      1275
     ]
    },
    "_set_volume_range": {
     "line number": [
      1267
     ]
    },
    "all": {
     "line number": [
      1239
     ]
    },
    "calculate_lut": {
     "line number": [
      1246
     ]
    },
    "dict": {
     "line number": [
      1236
     ]
    },
    "getattr": {
     "line number": [
      1253,
      1254
     ]
    },
    "numpy.round": {
     "line number": [
      1245
     ]
    },
    "numpy.uint8": {
     "line number": [
      1248
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.Brain.views": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1517
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain._safe_interp1d": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1793
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      1795
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain._safe_interp1d.func": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1792
     ]
    },
    "numpy.asarray": {
     "line number": [
      1792
     ]
    },
    "numpy.take": {
     "line number": [
      1792
     ]
    },
    "numpy.zeros": {
     "line number": [
      1792
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain._update_limits": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1813,
      1816
     ]
    },
    "numpy.abs": {
     "line number": [
      1808
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._brain.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.imageio": {
  "data": {
   "shadows": "imageio"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.vtk": {
  "data": {
   "shadows": "vtk"
  },
  "type": "import"
 },
 "mne.viz._brain._linkviewer": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._linkviewer._LinkViewer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain._linkviewer._LinkViewer.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "all": {
     "line number": [
      20
     ]
    },
    "dict": {
     "line number": [
      68
     ]
    },
    "getattr": {
     "line number": [
      102
     ]
    },
    "numpy.allclose": {
     "line number": [
      20
     ]
    },
    "set": {
     "line number": [
      70,
      73
     ]
    },
    "warn": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.__init__._func_add": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.__init__._func_remove": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.__init__._time_func": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.link_cameras": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "_add_camera_callback": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.link_cameras._update_camera": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.link_sliders": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "_update_slider_callback": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.set_fmax": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.set_fmid": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.set_fmin": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.set_playback_speed": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.set_time_point": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer._LinkViewer.toggle_playback": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mne.viz._brain._linkviewer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._notebook.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook.IntSlider": {
  "data": {
   "shadows": "ipywidgets.IntSlider"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook.Label": {
  "data": {
   "shadows": "ipywidgets.Label"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook.Play": {
  "data": {
   "shadows": "ipywidgets.Play"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook._NotebookInteractor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "mne.viz._brain._notebook._NotebookInteractor.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "super": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._notebook._NotebookInteractor.configure_controllers": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ipywidgets.HBox": {
     "line number": [
      54
     ]
    },
    "ipywidgets.IntSlider": {
     "line number": [
      25,
      47
     ]
    },
    "ipywidgets.Label": {
     "line number": [
      32,
      55
     ]
    },
    "ipywidgets.Play": {
     "line number": [
      41
     ]
    },
    "ipywidgets.VBox": {
     "line number": [
      31,
      53
     ]
    },
    "ipywidgets.interactive": {
     "line number": [
      20,
      33
     ]
    },
    "ipywidgets.jslink": {
     "line number": [
      51
     ]
    },
    "len": {
     "line number": [
      39
     ]
    },
    "super": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._notebook._NotebookInteractor.set_orientation": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mne.viz._brain._notebook._NotebookInteractor.set_time_point": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mne.viz._brain._notebook._PyVistaNotebookInteractor": {
  "data": {
   "shadows": "_NotebookInteractor"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook.interactive": {
  "data": {
   "shadows": "ipywidgets.interactive"
  },
  "type": "import"
 },
 "mne.viz._brain._notebook.jslink": {
  "data": {
   "shadows": "ipywidgets.jslink"
  },
  "type": "import"
 },
 "mne.viz._brain._scraper": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._scraper.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz._brain._scraper._BrainScraper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "object": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain._scraper._BrainScraper.__call__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      32
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      70,
      71
     ]
    },
    "enumerate": {
     "line number": [
      35
     ]
    },
    "eval": {
     "line number": [
      45
     ]
    },
    "hasattr": {
     "line number": [
      54
     ]
    },
    "isinstance": {
     "line number": [
      18
     ]
    },
    "len": {
     "line number": [
      37,
      39
     ]
    },
    "list": {
     "line number": [
      14
     ]
    },
    "matplotlib.animation.FFMpegWriter.isAvailable": {
     "line number": [
      72
     ]
    },
    "matplotlib.animation.FuncAnimation": {
     "line number": [
      63
     ]
    },
    "matplotlib.animation.ImageMagickWriter.isAvailable": {
     "line number": [
      74
     ]
    },
    "matplotlib.pyplot.Axes": {
     "line number": [
      27
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      26
     ]
    },
    "mne.viz._brain._scraper.matplotlib": {
     "line number": [
      70
     ]
    },
    "next": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      38
     ]
    },
    "sphinx_gallery.scrapers.matplotlib_scraper": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._scraper._BrainScraper.__call__.func": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mne.viz._brain._scraper._BrainScraper.__repr__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "mne.viz._brain._scraper.animation": {
  "data": {
   "shadows": "matplotlib.animation"
  },
  "type": "import"
 },
 "mne.viz._brain._scraper.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz._brain._scraper.matplotlib_scraper": {
  "data": {
   "shadows": "sphinx_gallery.scrapers.matplotlib_scraper"
  },
  "type": "import"
 },
 "mne.viz._brain._scraper.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._timeviewer.FileDialog": {
  "data": {
   "shadows": "pyvistaqt.plotting.FileDialog"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.QCursor": {
  "data": {
   "shadows": "PyQt5.QtGui.QCursor"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.QIcon": {
  "data": {
   "shadows": "PyQt5.QtGui.QIcon"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.QLabel": {
  "data": {
   "shadows": "PyQt5.QtWidgets.QLabel"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.QProgressBar": {
  "data": {
   "shadows": "PyQt5.QtWidgets.QProgressBar"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.QSplitter": {
  "data": {
   "shadows": "PyQt5.QtWidgets.QSplitter"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.Qt": {
  "data": {
   "shadows": "PyQt5.QtCore.Qt"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer._TimeViewer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer._TimeViewer.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      49
     ]
    },
    "ValueError": {
     "line number": [
      112
     ]
    },
    "_require_minimum_version": {
     "line number": [
      45
     ]
    },
    "_validate_type": {
     "line number": [
      100
     ]
    },
    "bool": {
     "line number": [
      100,
      107
     ]
    },
    "dict": {
     "line number": [
      75,
      77,
      78,
      79,
      80
     ]
    },
    "float": {
     "line number": [
      110
     ]
    },
    "hasattr": {
     "line number": [
      48
     ]
    },
    "int": {
     "line number": [
      65
     ]
    },
    "isinstance": {
     "line number": [
      102,
      107
     ]
    },
    "list": {
     "line number": [
      51,
      74,
      120
     ]
    },
    "max": {
     "line number": [
      65
     ]
    },
    "round": {
     "line number": [
      65
     ]
    },
    "str": {
     "line number": [
      100,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer._advance": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "min": {
     "line number": [
      336
     ]
    },
    "mne.viz._brain._timeviewer.time": {
     "line number": [
      329,
      331
     ]
    },
    "numpy.arange": {
     "line number": [
      333
     ]
    },
    "numpy.interp": {
     "line number": [
      340
     ]
    },
    "numpy.max": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer._save_movie": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      239
     ]
    },
    "KeyboardInterrupt": {
     "line number": [
      239
     ]
    },
    "PyQt5.QtCore.Qt.WaitCursor": {
     "line number": [
      230
     ]
    },
    "PyQt5.QtGui.QCursor": {
     "line number": [
      230
     ]
    },
    "functools.partial": {
     "line number": [
      236
     ]
    },
    "mne.viz._brain._timeviewer.traceback": {
     "line number": [
      240
     ]
    },
    "warn": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer._save_movie.frame_callback": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.add_point": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "_sphere": {
     "line number": [
      879
     ]
    },
    "list": {
     "line number": [
      869,
      870
     ]
    },
    "next": {
     "line number": [
      846
     ]
    },
    "numpy.array": {
     "line number": [
      850,
      881
     ]
    },
    "numpy.empty": {
     "line number": [
      857
     ]
    },
    "numpy.mean": {
     "line number": [
      860
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      849
     ]
    },
    "range": {
     "line number": [
      858
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.apply_auto_scaling": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.clean": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1039
     ]
    },
    "mne.viz._brain._timeviewer.safe_event": {
     "line number": [
      1018
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.clear_callbacks": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1010,
      1012,
      1014
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.clear_points": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": {
    "len": {
     "line number": [
      928,
      929,
      930
     ]
    },
    "list": {
     "line number": [
      926
     ]
    },
    "sum": {
     "line number": [
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_menu": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "list": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_notebook": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "_NotebookInteractor": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_playback": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_point_picking": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "MplCanvas": {
     "line number": [
      561
     ]
    },
    "PyQt5.QtCore.Qt.Vertical": {
     "line number": [
      574
     ]
    },
    "PyQt5.QtWidgets.QSplitter": {
     "line number": [
      573
     ]
    },
    "UserWarning": {
     "line number": [
      565
     ]
    },
    "_ReuseCycle": {
     "line number": [
      554
     ]
    },
    "_get_color_list": {
     "line number": [
      554
     ]
    },
    "_update_picking_callback": {
     "line number": [
      641
     ]
    },
    "enumerate": {
     "line number": [
      585,
      613
     ]
    },
    "int": {
     "line number": [
      629
     ]
    },
    "len": {
     "line number": [
      596,
      597,
      603
     ]
    },
    "list": {
     "line number": [
      601
     ]
    },
    "mne.viz._brain._timeviewer.warnings": {
     "line number": [
      564,
      565
     ]
    },
    "numpy.abs": {
     "line number": [
      632
     ]
    },
    "numpy.arange": {
     "line number": [
      597
     ]
    },
    "numpy.argmax": {
     "line number": [
      632
     ]
    },
    "numpy.concatenate": {
     "line number": [
      601
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      590,
      603
     ]
    },
    "numpy.max": {
     "line number": [
      563
     ]
    },
    "numpy.min": {
     "line number": [
      562
     ]
    },
    "numpy.ones": {
     "line number": [
      596
     ]
    },
    "numpy.round": {
     "line number": [
      629
     ]
    },
    "numpy.sqrt": {
     "line number": [
      603
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      632
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_scalar_bar": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_sliders": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "BumpColorbarPoints": {
     "line number": [
      508
     ]
    },
    "IntSlider": {
     "line number": [
      424
     ]
    },
    "ShowView": {
     "line number": [
      396
     ]
    },
    "SmartSlider": {
     "line number": [
      485
     ]
    },
    "TimeSlider": {
     "line number": [
      447
     ]
    },
    "UpdateColorbarScale": {
     "line number": [
      523
     ]
    },
    "callable": {
     "line number": [
      470
     ]
    },
    "enumerate": {
     "line number": [
      505
     ]
    },
    "len": {
     "line number": [
      440
     ]
    },
    "mne.viz._brain._timeviewer._get_range": {
     "line number": [
      507
     ]
    },
    "numpy.array": {
     "line number": [
      420,
      501,
      502,
      503
     ]
    },
    "time_label": {
     "line number": [
      469,
      470,
      471,
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_status_bar": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": {
    "PyQt5.QtWidgets.QLabel": {
     "line number": [
      735
     ]
    },
    "PyQt5.QtWidgets.QProgressBar": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_time_label": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_tool_bar": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.ensure_minimum_sizes": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "_process_events": {
     "line number": [
      151,
      152,
      154,
      155,
      160
     ]
    },
    "int": {
     "line number": [
      144
     ]
    },
    "mne.viz._brain._timeviewer.contextlib": {
     "line number": [
      136
     ]
    },
    "round": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.help": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": {
    "_show_help": {
     "line number": [
      1000
     ]
    },
    "zip": {
     "line number": [
      997
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.load_icons": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "PyQt5.QtGui.QIcon": {
     "line number": [
      653,
      654,
      655,
      656,
      657,
      658,
      659,
      660,
      661,
      662,
      663
     ]
    },
    "_init_resources": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_button_press": {
  "data": {
   "lineno": 745
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_button_release": {
  "data": {
   "lineno": 748
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_mouse_move": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_pick": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      789
     ]
    },
    "abs": {
     "line number": [
      835
     ]
    },
    "any": {
     "line number": [
      772
     ]
    },
    "hasattr": {
     "line number": [
      782
     ]
    },
    "len": {
     "line number": [
      766,
      813,
      816
     ]
    },
    "numpy.abs": {
     "line number": [
      822
     ]
    },
    "numpy.argmax": {
     "line number": [
      822
     ]
    },
    "numpy.argmin": {
     "line number": [
      835
     ]
    },
    "numpy.array": {
     "line number": [
      795,
      806
     ]
    },
    "numpy.cross": {
     "line number": [
      812
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      807,
      810,
      812
     ]
    },
    "numpy.where": {
     "line number": [
      815
     ]
    },
    "range": {
     "line number": [
      769,
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.play": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      324
     ]
    },
    "mne.viz._brain._timeviewer.safe_event": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.plot_time_course": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": {
    "_read_talxfm": {
     "line number": [
      938
     ]
    },
    "apply_trans": {
     "line number": [
      945
     ]
    },
    "mne.viz._brain._timeviewer.time": {
     "line number": [
      935,
      963
     ]
    },
    "numpy.dot": {
     "line number": [
      945
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      942
     ]
    },
    "str": {
     "line number": [
      955
     ]
    },
    "vertex_to_mni": {
     "line number": [
      948
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.plot_time_line": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      975
     ]
    },
    "hasattr": {
     "line number": [
      978
     ]
    },
    "isinstance": {
     "line number": [
      975
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.remove_point": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "mne.viz._brain._timeviewer.warnings": {
     "line number": [
      913,
      916
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.reset": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "len": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.restore_user_scaling": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.save_movie": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      251
     ]
    },
    "copy_doc": {
     "line number": [
      247
     ]
    },
    "functools.partial": {
     "line number": [
      266
     ]
    },
    "mne.viz._brain._timeviewer.os": {
     "line number": [
      268
     ]
    },
    "pyvistaqt.plotting.FileDialog": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.save_movie._clean": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.set_playback_speed": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.set_slider_style": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.toggle_interface": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "len": {
     "line number": [
      186
     ]
    },
    "time_label": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.toggle_playback": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "mne.viz._brain._timeviewer.time": {
     "line number": [
      304
     ]
    },
    "numpy.max": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._get_range": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1044
     ]
    },
    "numpy.abs": {
     "line number": [
      1044
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1044
     ]
    },
    "numpy.max": {
     "line number": [
      1045
     ]
    },
    "numpy.min": {
     "line number": [
      1045
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._normalize": {
  "data": {
   "lineno": 1048
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.safe_event": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      36
     ]
    },
    "fun": {
     "line number": [
      35
     ]
    },
    "mne.viz._brain._timeviewer.sys": {
     "line number": [
      37
     ]
    },
    "mne.viz._brain._timeviewer.traceback": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz._brain.callback": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.callback.BumpColorbarPoints": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "object": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.callback.BumpColorbarPoints.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "mne.viz._brain.callback.time": {
     "line number": [
      132,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.callback.BumpColorbarPoints.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "mne.viz._brain.callback.time": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.callback.IntSlider": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "object": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.callback.IntSlider.__call__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "all": {
     "line number": [
      25
     ]
    },
    "int": {
     "line number": [
      21
     ]
    },
    "round": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.callback.IntSlider.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "mne.viz._brain.callback.ShowView": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "object": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.callback.ShowView.__call__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "len": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.callback.ShowView.__init__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "mne.viz._brain.callback.SmartSlider": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "object": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.callback.SmartSlider.__call__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "mne.viz._brain.callback.SmartSlider.__init__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "mne.viz._brain.callback.TimeSlider": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.callback.TimeSlider.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "all": {
     "line number": [
      51
     ]
    },
    "float": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.callback.TimeSlider.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.callback.UpdateColorbarScale": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "object": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.callback.UpdateColorbarScale.__call__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "mne.viz._brain.callback.UpdateColorbarScale.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mne.viz._brain.callback.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.viz._brain.colormap": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.colormap.calculate_lut": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      114
     ]
    },
    "float": {
     "line number": [
      138
     ]
    },
    "int": {
     "line number": [
      150
     ]
    },
    "mne.viz._brain.colormap.create_lut": {
     "line number": [
      116
     ]
    },
    "mne.viz._brain.colormap.get_fill_colors": {
     "line number": [
      146,
      155
     ]
    },
    "mne.viz._brain.colormap.scale_sequential_lut": {
     "line number": [
      152,
      157,
      161
     ]
    },
    "numpy.arange": {
     "line number": [
      169
     ]
    },
    "numpy.float64": {
     "line number": [
      173
     ]
    },
    "numpy.full": {
     "line number": [
      125,
      129,
      132
     ]
    },
    "numpy.hstack": {
     "line number": [
      128
     ]
    },
    "numpy.interp": {
     "line number": [
      168
     ]
    },
    "numpy.linspace": {
     "line number": [
      130,
      131,
      134,
      166
     ]
    },
    "numpy.mod": {
     "line number": [
      126
     ]
    },
    "numpy.r_": {
     "line number": [
      144,
      151
     ]
    },
    "numpy.round": {
     "line number": [
      128,
      134,
      140
     ]
    },
    "numpy.zeros": {
     "line number": [
      165
     ]
    },
    "range": {
     "line number": [
      167
     ]
    },
    "round": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.colormap.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz._brain.colormap.create_lut": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "cmap": {
     "line number": [
      16
     ]
    },
    "isinstance": {
     "line number": [
      14
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      15
     ]
    },
    "numpy.int64": {
     "line number": [
      16
     ]
    },
    "numpy.linspace": {
     "line number": [
      16
     ]
    },
    "numpy.round": {
     "line number": [
      16
     ]
    },
    "str": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.colormap.get_fill_colors": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "float": {
     "line number": [
      48
     ]
    },
    "int": {
     "line number": [
      60
     ]
    },
    "numpy.diff": {
     "line number": [
      48
     ]
    },
    "numpy.flatnonzero": {
     "line number": [
      51
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      48
     ]
    },
    "numpy.r_": {
     "line number": [
      55
     ]
    },
    "numpy.tile": {
     "line number": [
      55,
      56,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.colormap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain.colormap.scale_sequential_lut": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "int": {
     "line number": [
      30
     ]
    },
    "numpy.arange": {
     "line number": [
      38,
      41
     ]
    },
    "numpy.clip": {
     "line number": [
      30
     ]
    },
    "numpy.interp": {
     "line number": [
      36,
      39
     ]
    },
    "numpy.linspace": {
     "line number": [
      37,
      40
     ]
    },
    "numpy.round": {
     "line number": [
      30
     ]
    },
    "range": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.mplcanvas.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "mne.viz._brain.mplcanvas.FigureCanvasQTAgg": {
  "data": {
   "shadows": "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg"
  },
  "type": "import"
 },
 "mne.viz._brain.mplcanvas.MplCanvas": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "object": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      29
     ]
    },
    "PyQt5.QtWidgets.QSizePolicy.Expanding": {
     "line number": [
      39,
      40
     ]
    },
    "getattr": {
     "line number": [
      47
     ]
    },
    "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg": {
     "line number": [
      33
     ]
    },
    "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.setSizePolicy": {
     "line number": [
      37
     ]
    },
    "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.updateGeometry": {
     "line number": [
      42
     ]
    },
    "matplotlib.figure.Figure": {
     "line number": [
      32
     ]
    },
    "matplotlib.rc_context": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.clear": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.close": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.on_button_press": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.on_resize": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "tight_layout": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.plot": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.plot_time_line": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.set_color": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.show": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.MplCanvas.update_plot": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "mne.viz._brain.mplcanvas.warnings": {
     "line number": [
      70,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.mplcanvas.QtWidgets": {
  "data": {
   "shadows": "PyQt5.QtWidgets"
  },
  "type": "import"
 },
 "mne.viz._brain.mplcanvas.rc_context": {
  "data": {
   "shadows": "matplotlib.rc_context"
  },
  "type": "import"
 },
 "mne.viz._brain.mplcanvas.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz._brain.surface": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.surface.Surface": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "object": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz._brain.surface.Surface.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      76,
      81
     ]
    },
    "_check_option": {
     "line number": [
      84
     ]
    },
    "dict": {
     "line number": [
      96
     ]
    },
    "float": {
     "line number": [
      79
     ]
    },
    "get_subjects_dir": {
     "line number": [
      98
     ]
    },
    "int": {
     "line number": [
      80
     ]
    },
    "isinstance": {
     "line number": [
      79,
      80
     ]
    },
    "os.path.join": {
     "line number": [
      99
     ]
    },
    "type": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.__len__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "len": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.load_curvature": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "float": {
     "line number": [
      162
     ]
    },
    "numpy.array": {
     "line number": [
      158
     ]
    },
    "numpy.int64": {
     "line number": [
      158
     ]
    },
    "numpy.newaxis": {
     "line number": [
      164
     ]
    },
    "os.path.join": {
     "line number": [
      156
     ]
    },
    "read_curvature": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.load_geometry": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "_check_fname": {
     "line number": [
      115
     ]
    },
    "_read_patch": {
     "line number": [
      117
     ]
    },
    "complete_surface_info": {
     "line number": [
      131
     ]
    },
    "dict": {
     "line number": [
      130
     ]
    },
    "numpy.max": {
     "line number": [
      127
     ]
    },
    "numpy.min": {
     "line number": [
      129
     ]
    },
    "os.path.join": {
     "line number": [
      113,
      120
     ]
    },
    "read_surface": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.x": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "property": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.y": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "property": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.z": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "property": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.surface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain.surface.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz._brain.tests.test_notebook": {
  "data": {
   "symbols_in_volume": {
    "mne.viz._brain.tests.test_notebook.os": {
     "line number": [
      7,
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz._brain.tests.test_notebook.NotebookClient": {
  "data": {
   "shadows": "nbclient.NotebookClient"
  },
  "type": "import"
 },
 "mne.viz._brain.tests.test_notebook.PATH": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.viz._brain.tests.test_notebook.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "mne.viz._brain.tests.test_notebook.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz._brain.tests.test_notebook.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz._brain.tests.test_notebook.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz._brain.tests.test_notebook.test_notebook_3d_backend": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      11
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      12,
      13,
      14
     ]
    },
    "mne.viz._brain.tests.test_notebook.PATH": {
     "line number": [
      20
     ]
    },
    "mne.viz._brain.tests.test_notebook.nbformat": {
     "line number": [
      22
     ]
    },
    "mne.viz._brain.tests.test_notebook.os": {
     "line number": [
      20
     ]
    },
    "mne.viz._brain.tests.test_notebook.pytest": {
     "line number": [
      10
     ]
    },
    "nbclient.NotebookClient": {
     "line number": [
      23
     ]
    },
    "open": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz._brain.tests.test_notebook.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz._brain.view": {
  "data": {
   "symbols_in_volume": {
    "dict": {
     "line number": [
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      41,
      46,
      47
     ]
    },
    "mne.viz._brain.view.ORIGIN": {
     "line number": [
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      41,
      46
     ]
    },
    "mne.viz._brain.view._lh_views_dict": {
     "line number": [
      38,
      39
     ]
    },
    "mne.viz._brain.view._rh_views_dict": {
     "line number": [
      43,
      44
     ]
    },
    "mne.viz._brain.view.lh_views_dict": {
     "line number": [
      40,
      41,
      47,
      47,
      47
     ]
    },
    "mne.viz._brain.view.rh_views_dict": {
     "line number": [
      45,
      46,
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz._brain.view.ORIGIN": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.viz._brain.view._lh_views_dict": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.viz._brain.view._rh_views_dict": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz._brain.view.lh_views_dict": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz._brain.view.rh_views_dict": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.viz._brain.view.views_dicts": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.backends": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends._notebook": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends._notebook.Checkbox": {
  "data": {
   "shadows": "ipywidgets.Checkbox"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.FloatSlider": {
  "data": {
   "shadows": "ipywidgets.FloatSlider"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.IntSlider": {
  "data": {
   "shadows": "ipywidgets.IntSlider"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.Label": {
  "data": {
   "shadows": "ipywidgets.Label"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook._NotebookInteractor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "object": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz.backends._notebook._NotebookInteractor.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "IPython.display.display": {
     "line number": [
      39
     ]
    },
    "dict": {
     "line number": [
      30,
      31
     ]
    },
    "ipywidgets.HBox": {
     "line number": [
      38
     ]
    },
    "ipywidgets.VBox": {
     "line number": [
      37
     ]
    },
    "list": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.configure_controllers": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "ipywidgets.Checkbox": {
     "line number": [
      78
     ]
    },
    "ipywidgets.FloatSlider": {
     "line number": [
      107,
      116,
      126
     ]
    },
    "ipywidgets.IntSlider": {
     "line number": [
      91
     ]
    },
    "ipywidgets.Label": {
     "line number": [
      99,
      135
     ]
    },
    "ipywidgets.VBox": {
     "line number": [
      98,
      134
     ]
    },
    "ipywidgets.interactive": {
     "line number": [
      84,
      100,
      136
     ]
    },
    "len": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.disabled_interactivity": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      41
     ]
    },
    "matplotlib.pyplot.ioff": {
     "line number": [
      44,
      51
     ]
    },
    "matplotlib.pyplot.ion": {
     "line number": [
      49
     ]
    },
    "matplotlib.pyplot.isinteractive": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.screenshot": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "matplotlib.pyplot.Axes": {
     "line number": [
      63
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.set_camera": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.set_continuous_update": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.set_subplot": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._NotebookInteractor.update": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._PyVistaRenderer": {
  "data": {
   "shadows": "_Renderer"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook._Renderer": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "mne.viz.backends._notebook._Renderer.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "IPython.get_ipython": {
     "line number": [
      15
     ]
    },
    "super": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._Renderer.show": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "mne.viz.backends._notebook._NotebookInteractor": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._notebook._testing_context": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "mne.viz.backends._notebook.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.display": {
  "data": {
   "shadows": "IPython.display"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.interactive": {
  "data": {
   "shadows": "ipywidgets.interactive"
  },
  "type": "import"
 },
 "mne.viz.backends._notebook.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.backends._utils": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends._utils.ALLOWED_QUIVER_MODES": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.viz.backends._utils.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.VALID_3D_BACKENDS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.viz.backends._utils._check_color": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      51,
      55
     ]
    },
    "ValueError": {
     "line number": [
      43,
      46,
      49
     ]
    },
    "isinstance": {
     "line number": [
      38,
      40
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      39
     ]
    },
    "numpy.array": {
     "line number": [
      41
     ]
    },
    "numpy.float64": {
     "line number": [
      47
     ]
    },
    "numpy.int32": {
     "line number": [
      44
     ]
    },
    "numpy.int64": {
     "line number": [
      44
     ]
    },
    "str": {
     "line number": [
      38
     ]
    },
    "type": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._utils._get_colormap_from_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      27
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      26,
      28
     ]
    },
    "matplotlib.colors.ListedColormap": {
     "line number": [
      30,
      32
     ]
    },
    "numpy.array": {
     "line number": [
      32
     ]
    },
    "str": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends._utils.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.backends.base_renderer": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends.base_renderer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mne.viz.backends.base_renderer._BaseRenderer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.close": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.contour": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.enable_depth_peeling": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.mesh": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.project": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.quiver3d": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.remove_mesh": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.reset_camera": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.scalarbar": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.scene": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.screenshot": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.set_camera": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.set_interaction": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.show": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.sphere": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.subplot": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.surface": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.text2d": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.text3d": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.tube": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "abc.abstractclassmethod": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer.abstractclassmethod": {
  "data": {
   "shadows": "abc.abstractclassmethod"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils": {
  "data": {
   "symbols_in_volume": {
    "mne.viz.backends.tests._utils.has_mayavi": {
     "line number": [
      52
     ]
    },
    "mne.viz.backends.tests._utils.has_pyvista": {
     "line number": [
      54
     ]
    },
    "mne.viz.backends.tests._utils.pytest": {
     "line number": [
      51,
      53
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.backends.tests._utils.PyQt5": {
  "data": {
   "shadows": "PyQt5"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.has_imageio_ffmpeg": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils.has_mayavi": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      29
     ]
    },
    "mne.viz.backends.tests._utils.warnings": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils.has_pyqt5": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils.has_pyvista": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      16
     ]
    },
    "ImportError": {
     "line number": [
      19
     ]
    },
    "mne.viz.backends.tests._utils.warnings": {
     "line number": [
      15,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils.imageio_ffmpeg": {
  "data": {
   "shadows": "imageio_ffmpeg"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.mlab": {
  "data": {
   "shadows": "mayavi.mlab"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.pyvista": {
  "data": {
   "shadows": "pyvista"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.skips_if_not_mayavi": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.viz.backends.tests._utils.skips_if_not_pyvista": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.viz.backends.tests._utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends.tests.test_renderer.ALLOWED_QUIVER_MODES": {
  "data": {
   "shadows": "mne.viz.backends._utils.ALLOWED_QUIVER_MODES"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.backend_mocker": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "mne.viz.backends.renderer.MNE_3D_BACKEND": {
     "line number": [
      22,
      24
     ]
    },
    "mne.viz.backends.tests.test_renderer.pytest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.renderer": {
  "data": {
   "shadows": "mne.viz.backends.renderer"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.skips_if_not_mayavi": {
  "data": {
   "shadows": "mne.viz.backends.tests._utils.skips_if_not_mayavi"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.skips_if_not_pyvista": {
  "data": {
   "shadows": "mne.viz.backends.tests._utils.skips_if_not_pyvista"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.test_3d_backend": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      149
     ]
    },
    "dict": {
     "line number": [
      135
     ]
    },
    "mne.viz.backends._utils.ALLOWED_QUIVER_MODES": {
     "line number": [
      147
     ]
    },
    "mne.viz.backends.renderer.create_3d_figure": {
     "line number": [
      105
     ]
    },
    "mne.viz.backends.tests.test_renderer.pytest": {
     "line number": [
      149
     ]
    },
    "numpy.array": {
     "line number": [
      66,
      67,
      68,
      69,
      79,
      88,
      153,
      154,
      155,
      156,
      157
     ]
    },
    "numpy.column_stack": {
     "line number": [
      75
     ]
    },
    "numpy.linspace": {
     "line number": [
      95
     ]
    },
    "numpy.mean": {
     "line number": [
      88,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.test_3d_functions": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "mne.viz.backends.renderer.backend._Renderer": {
     "line number": [
      49
     ]
    },
    "mne.viz.backends.renderer.backend._check_3d_figure": {
     "line number": [
      51
     ]
    },
    "mne.viz.backends.renderer.backend._close_all": {
     "line number": [
      56
     ]
    },
    "mne.viz.backends.renderer.backend._set_3d_title": {
     "line number": [
      54
     ]
    },
    "mne.viz.backends.renderer.backend._set_3d_view": {
     "line number": [
      52
     ]
    },
    "mne.viz.backends.renderer.backend._take_3d_screenshot": {
     "line number": [
      55
     ]
    },
    "mne.viz.backends.renderer.create_3d_figure": {
     "line number": [
      47
     ]
    },
    "numpy.array": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.test_backend_environment_setup": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      30
     ]
    },
    "mne.viz.backends.renderer.MNE_3D_BACKEND": {
     "line number": [
      41
     ]
    },
    "mne.viz.backends.renderer.get_3d_backend": {
     "line number": [
      42
     ]
    },
    "mne.viz.backends.renderer.set_3d_backend": {
     "line number": [
      40
     ]
    },
    "mne.viz.backends.tests._utils.skips_if_not_mayavi": {
     "line number": [
      28
     ]
    },
    "mne.viz.backends.tests._utils.skips_if_not_pyvista": {
     "line number": [
      29
     ]
    },
    "mne.viz.backends.tests.test_renderer.os": {
     "line number": [
      35
     ]
    },
    "mne.viz.backends.tests.test_renderer.pytest": {
     "line number": [
      27,
      28,
      29,
      30,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.test_get_3d_backend": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "mne.viz.backends.renderer.MNE_3D_BACKEND": {
     "line number": [
      176
     ]
    },
    "mne.viz.backends.renderer.get_3d_backend": {
     "line number": [
      177,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends.tests.test_utils.LinearSegmentedColormap": {
  "data": {
   "shadows": "matplotlib.colors.LinearSegmentedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils._check_color": {
  "data": {
   "shadows": "mne.viz.backends._utils._check_color"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils._get_colormap_from_array": {
  "data": {
   "shadows": "mne.viz.backends._utils._get_colormap_from_array"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils.test_check_color": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      38,
      40
     ]
    },
    "ValueError": {
     "line number": [
      32,
      34,
      36
     ]
    },
    "mne.viz.backends._utils._check_color": {
     "line number": [
      29,
      30,
      31,
      33,
      35,
      37,
      39,
      41
     ]
    },
    "mne.viz.backends.tests.test_utils.pytest": {
     "line number": [
      32,
      34,
      36,
      38,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_utils.test_get_colormap_from_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      16,
      18,
      21,
      24
     ]
    },
    "matplotlib.colors.LinearSegmentedColormap": {
     "line number": [
      16
     ]
    },
    "matplotlib.colors.ListedColormap": {
     "line number": [
      18,
      21,
      24
     ]
    },
    "mne.viz.backends._utils._get_colormap_from_array": {
     "line number": [
      15,
      17,
      19,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.circle": {
  "data": {},
  "type": "module"
 },
 "mne.viz.circle._plot_connectivity_circle_onpick": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      111
     ]
    },
    "numpy.abs": {
     "line number": [
      108
     ]
    },
    "numpy.argmin": {
     "line number": [
      108
     ]
    },
    "numpy.pi": {
     "line number": [
      107
     ]
    },
    "numpy.size": {
     "line number": [
      116
     ]
    },
    "range": {
     "line number": [
      116
     ]
    },
    "zip": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.circle.circular_layout": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      50,
      55,
      58,
      69
     ]
    },
    "len": {
     "line number": [
      47,
      49,
      57,
      60,
      68
     ]
    },
    "numpy.any": {
     "line number": [
      54,
      54,
      57
     ]
    },
    "numpy.array": {
     "line number": [
      53,
      67
     ]
    },
    "numpy.cumsum": {
     "line number": [
      86
     ]
    },
    "numpy.diff": {
     "line number": [
      57
     ]
    },
    "numpy.float64": {
     "line number": [
      81
     ]
    },
    "numpy.int64": {
     "line number": [
      53
     ]
    },
    "numpy.ones": {
     "line number": [
      81
     ]
    },
    "numpy.unique": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.circle.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.circle.m_patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "mne.viz.circle.m_path": {
  "data": {
   "shadows": "matplotlib.path"
  },
  "type": "import"
 },
 "mne.viz.circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.circle.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.circle.plot_connectivity_circle": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      254
     ]
    },
    "ValueError": {
     "line number": [
      231,
      262,
      265,
      270
     ]
    },
    "colormap": {
     "line number": [
      371,
      407
     ]
    },
    "enumerate": {
     "line number": [
      342,
      355
     ]
    },
    "float": {
     "line number": [
      256,
      347,
      349
     ]
    },
    "functools.partial": {
     "line number": [
      419
     ]
    },
    "isinstance": {
     "line number": [
      273,
      281
     ]
    },
    "itertools.cycle": {
     "line number": [
      249
     ]
    },
    "len": {
     "line number": [
      227,
      230,
      248,
      297,
      336
     ]
    },
    "matplotlib.patches.PathPatch": {
     "line number": [
      374
     ]
    },
    "matplotlib.path.Path": {
     "line number": [
      369
     ]
    },
    "matplotlib.path.Path.CURVE4": {
     "line number": [
      367,
      367
     ]
    },
    "matplotlib.path.Path.LINETO": {
     "line number": [
      368
     ]
    },
    "matplotlib.path.Path.MOVETO": {
     "line number": [
      367
     ]
    },
    "matplotlib.pyplot.Normalize": {
     "line number": [
      408
     ]
    },
    "matplotlib.pyplot.cm.ScalarMappable": {
     "line number": [
      407
     ]
    },
    "matplotlib.pyplot.cm.Spectral": {
     "line number": [
      255
     ]
    },
    "matplotlib.pyplot.cm.spectral": {
     "line number": [
      253
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      410
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      278
     ]
    },
    "matplotlib.pyplot.get_cmap": {
     "line number": [
      274
     ]
    },
    "matplotlib.pyplot.getp": {
     "line number": [
      413
     ]
    },
    "matplotlib.pyplot.setp": {
     "line number": [
      415
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      283
     ]
    },
    "matplotlib.pyplot.title": {
     "line number": [
      403
     ]
    },
    "matplotlib.pyplot.xticks": {
     "line number": [
      287
     ]
    },
    "matplotlib.pyplot.ylim": {
     "line number": [
      291
     ]
    },
    "matplotlib.pyplot.yticks": {
     "line number": [
      288
     ]
    },
    "mne.viz.circle._plot_connectivity_circle_onpick": {
     "line number": [
      419
     ]
    },
    "numpy.abs": {
     "line number": [
      243,
      298,
      304,
      319
     ]
    },
    "numpy.argsort": {
     "line number": [
      312
     ]
    },
    "numpy.diag_indices": {
     "line number": [
      242
     ]
    },
    "numpy.int64": {
     "line number": [
      328
     ]
    },
    "numpy.linspace": {
     "line number": [
      237,
      409
     ]
    },
    "numpy.max": {
     "line number": [
      321
     ]
    },
    "numpy.min": {
     "line number": [
      243,
      319
     ]
    },
    "numpy.ones": {
     "line number": [
      379
     ]
    },
    "numpy.pi": {
     "line number": [
      234,
      237,
      245,
      388
     ]
    },
    "numpy.random.mtrand.RandomState": {
     "line number": [
      334
     ]
    },
    "numpy.sort": {
     "line number": [
      298
     ]
    },
    "numpy.tril_indices": {
     "line number": [
      267
     ]
    },
    "numpy.where": {
     "line number": [
      305
     ]
    },
    "numpy.zeros": {
     "line number": [
      328
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      341
     ]
    },
    "plt_show": {
     "line number": [
      425
     ]
    },
    "range": {
     "line number": [
      257
     ]
    },
    "spectral": {
     "line number": [
      256
     ]
    },
    "str": {
     "line number": [
      273
     ]
    },
    "tuple": {
     "line number": [
      281
     ]
    },
    "zip": {
     "line number": [
      329,
      342,
      355,
      384,
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.circle.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.evoked": {
  "data": {},
  "type": "module"
 },
 "mne.viz.evoked.Bbox": {
  "data": {
   "shadows": "matplotlib.transforms.Bbox"
  },
  "type": "import"
 },
 "mne.viz.evoked.ColorbarBase": {
  "data": {
   "shadows": "matplotlib.colorbar.ColorbarBase"
  },
  "type": "import"
 },
 "mne.viz.evoked.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "mne.viz.evoked.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "mne.viz.evoked.SpanSelector": {
  "data": {
   "shadows": "matplotlib.widgets.SpanSelector"
  },
  "type": "import"
 },
 "mne.viz.evoked._add_nave": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "mne.viz.evoked._butterfly_on_button_press": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      76
     ]
    },
    "numpy.where": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._butterfly_onpick": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "len": {
     "line number": [
      48,
      63
     ]
    },
    "numpy.where": {
     "line number": [
      47,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._check_loc_legal": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1504
     ]
    },
    "bool": {
     "line number": [
      1496
     ]
    },
    "isinstance": {
     "line number": [
      1496
     ]
    },
    "numpy.bool_": {
     "line number": [
      1496
     ]
    },
    "range": {
     "line number": [
      1503
     ]
    },
    "str": {
     "line number": [
      1504
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._draw_axes_pce": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1836
     ]
    },
    "_setup_ax_spines": {
     "line number": [
      1838
     ]
    },
    "_trim_ticks": {
     "line number": [
      1834
     ]
    },
    "bool": {
     "line number": [
      1825
     ]
    },
    "isinstance": {
     "line number": [
      1825
     ]
    },
    "numpy.array": {
     "line number": [
      1829
     ]
    },
    "numpy.isfinite": {
     "line number": [
      1818
     ]
    },
    "numpy.round": {
     "line number": [
      1831
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._draw_colorbar_pce": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1742,
      1747
     ]
    },
    "cmap": {
     "line number": [
      1731
     ]
    },
    "isinstance": {
     "line number": [
      1747
     ]
    },
    "len": {
     "line number": [
      1735,
      1738,
      1742,
      1754,
      1755
     ]
    },
    "matplotlib.colorbar.ColorbarBase": {
     "line number": [
      1731
     ]
    },
    "matplotlib.transforms.Bbox": {
     "line number": [
      1760
     ]
    },
    "max": {
     "line number": [
      1754,
      1754
     ]
    },
    "mpl_toolkits.axes_grid1.make_axes_locatable": {
     "line number": [
      1728
     ]
    },
    "numbers.Integral": {
     "line number": [
      1747
     ]
    },
    "numpy.divide": {
     "line number": [
      1750
     ]
    },
    "set": {
     "line number": [
      1734,
      1746
     ]
    },
    "sorted": {
     "line number": [
      1734
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._draw_legend_pce": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": {
    "any": {
     "line number": [
      1802
     ]
    },
    "bool": {
     "line number": [
      1799
     ]
    },
    "cmap": {
     "line number": [
      1772,
      1775,
      1776,
      1777
     ]
    },
    "dict": {
     "line number": [
      1797
     ]
    },
    "isinstance": {
     "line number": [
      1799
     ]
    },
    "len": {
     "line number": [
      1773,
      1774,
      1795
     ]
    },
    "list": {
     "line number": [
      1769
     ]
    },
    "matplotlib.lines.Line2D": {
     "line number": [
      1781,
      1786,
      1791
     ]
    },
    "mne.viz.evoked._check_loc_legal": {
     "line number": [
      1796
     ]
    },
    "set": {
     "line number": [
      1773,
      1774
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._evoked_sensor_legend": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": {
    "_get_pos_outlines": {
     "line number": [
      1715
     ]
    },
    "len": {
     "line number": [
      1717
     ]
    },
    "list": {
     "line number": [
      1717
     ]
    },
    "mne.viz.evoked._check_loc_legal": {
     "line number": [
      1716
     ]
    },
    "mne.viz.evoked._plot_legend": {
     "line number": [
      1717
     ]
    },
    "numpy.abs": {
     "line number": [
      1712
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._get_ci_function_pce": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1876
     ]
    },
    "bool": {
     "line number": [
      1867,
      1869
     ]
    },
    "callable": {
     "line number": [
      1865
     ]
    },
    "float": {
     "line number": [
      1871
     ]
    },
    "functools.partial": {
     "line number": [
      1874
     ]
    },
    "isinstance": {
     "line number": [
      1867,
      1869,
      1871
     ]
    },
    "type": {
     "line number": [
      1877
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._get_data_and_ci": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": {
    "_check_if_nan": {
     "line number": [
      1857
     ]
    },
    "ci_fun": {
     "line number": [
      1854,
      1858
     ]
    },
    "combine_func": {
     "line number": [
      1851
     ]
    },
    "numpy.array": {
     "line number": [
      1845,
      1847
     ]
    },
    "numpy.mean": {
     "line number": [
      1856
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._handle_spatial_colors": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "_clean_names": {
     "line number": [
      550
     ]
    },
    "_get_pos_outlines": {
     "line number": [
      554
     ]
    },
    "mne.viz.evoked._plot_legend": {
     "line number": [
      556
     ]
    },
    "numpy.array": {
     "line number": [
      550
     ]
    },
    "numpy.where": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._handle_styles_pce": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1680
     ]
    },
    "cmap": {
     "line number": [
      1700,
      1705
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1672
     ]
    },
    "dict": {
     "line number": [
      1676,
      1687,
      1692
     ]
    },
    "isinstance": {
     "line number": [
      1680
     ]
    },
    "len": {
     "line number": [
      1689
     ]
    },
    "mne.viz.evoked._populate_style_dict_pce": {
     "line number": [
      1695
     ]
    },
    "mne.viz.evoked._validate_cmap_pce": {
     "line number": [
      1682
     ]
    },
    "mne.viz.evoked._validate_colors_pce": {
     "line number": [
      1679
     ]
    },
    "mne.viz.evoked._validate_linestyles_pce": {
     "line number": [
      1684
     ]
    },
    "mne.viz.evoked._validate_style_keys_pce": {
     "line number": [
      1677
     ]
    },
    "numbers.Integral": {
     "line number": [
      1680
     ]
    },
    "numpy.linspace": {
     "line number": [
      1689
     ]
    },
    "set": {
     "line number": [
      1674
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._line_plot_onselect": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      90
     ]
    },
    "_make_head_outlines": {
     "line number": [
      120
     ]
    },
    "_merge_ch_data": {
     "line number": [
      128
     ]
    },
    "_pair_grad_sensors": {
     "line number": [
      93
     ]
    },
    "_prepare_topomap_plot": {
     "line number": [
      119
     ]
    },
    "enumerate": {
     "line number": [
      115
     ]
    },
    "functools.partial": {
     "line number": [
      149
     ]
    },
    "len": {
     "line number": [
      89,
      93,
      96,
      112,
      113,
      121
     ]
    },
    "list": {
     "line number": [
      99
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      106
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      112
     ]
    },
    "max": {
     "line number": [
      136
     ]
    },
    "min": {
     "line number": [
      135
     ]
    },
    "numpy.abs": {
     "line number": [
      110,
      111
     ]
    },
    "numpy.average": {
     "line number": [
      133
     ]
    },
    "plot_topomap": {
     "line number": [
      138
     ]
    },
    "plt_show": {
     "line number": [
      146
     ]
    },
    "tight_layout": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_compare_evokeds": {
  "data": {
   "lineno": 1880
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      267
     ]
    },
    "ValueError": {
     "line number": [
      223,
      229,
      260,
      270,
      278,
      289,
      320,
      326
     ]
    },
    "_check_cov": {
     "line number": [
      324
     ]
    },
    "_check_delayed_ssp": {
     "line number": [
      356
     ]
    },
    "_check_option": {
     "line number": [
      323
     ]
    },
    "_check_time_unit": {
     "line number": [
      263
     ]
    },
    "_draw_proj_checkbox": {
     "line number": [
      362
     ]
    },
    "_get_channel_types": {
     "line number": [
      294
     ]
    },
    "_handle_default": {
     "line number": [
      272,
      273,
      274
     ]
    },
    "_picks_to_idx": {
     "line number": [
      276
     ]
    },
    "_set_window_title": {
     "line number": [
      317
     ]
    },
    "_setup_plot_projector": {
     "line number": [
      328
     ]
    },
    "_validate_if_list_of_axes": {
     "line number": [
      225
     ]
    },
    "all": {
     "line number": [
      286
     ]
    },
    "any": {
     "line number": [
      226
     ]
    },
    "channel_type": {
     "line number": [
      233
     ]
    },
    "dict": {
     "line number": [
      216,
      218,
      222,
      259,
      357
     ]
    },
    "enumerate": {
     "line number": [
      346
     ]
    },
    "isinstance": {
     "line number": [
      216,
      222,
      259,
      269,
      283,
      285,
      286,
      304,
      308,
      310
     ]
    },
    "len": {
     "line number": [
      255,
      277,
      277,
      282,
      302,
      306,
      319,
      319,
      321,
      321,
      330,
      364
     ]
    },
    "list": {
     "line number": [
      225,
      285,
      295,
      311,
      348
     ]
    },
    "matplotlib.pyplot.Axes": {
     "line number": [
      304,
      308
     ]
    },
    "matplotlib.pyplot.axes": {
     "line number": [
      221
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      220
     ]
    },
    "matplotlib.pyplot.setp": {
     "line number": [
      343,
      364
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      302
     ]
    },
    "matplotlib.pyplot.subplots_adjust": {
     "line number": [
      303
     ]
    },
    "max": {
     "line number": [
      251,
      253
     ]
    },
    "min": {
     "line number": [
      251,
      253
     ]
    },
    "mne.viz.evoked._plot_image": {
     "line number": [
      349
     ]
    },
    "mne.viz.evoked._plot_lines": {
     "line number": [
      338
     ]
    },
    "numpy.array": {
     "line number": [
      250,
      292,
      294
     ]
    },
    "numpy.dot": {
     "line number": [
      333
     ]
    },
    "numpy.ndarray": {
     "line number": [
      310
     ]
    },
    "plt_show": {
     "line number": [
      368
     ]
    },
    "set": {
     "line number": [
      255,
      277
     ]
    },
    "sorted": {
     "line number": [
      322
     ]
    },
    "str": {
     "line number": [
      269,
      283,
      286,
      294
     ]
    },
    "tight_layout": {
     "line number": [
      367
     ]
    },
    "zip": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_image": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "DraggableColorbar": {
     "line number": [
      610
     ]
    },
    "_check_if_nan": {
     "line number": [
      594
     ]
    },
    "_pl": {
     "line number": [
      613
     ]
    },
    "_plot_masked_image": {
     "line number": [
      596
     ]
    },
    "_setup_cmap": {
     "line number": [
      573
     ]
    },
    "int": {
     "line number": [
      619
     ]
    },
    "len": {
     "line number": [
      569,
      613,
      617
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      607
     ]
    },
    "mne.viz.evoked._add_nave": {
     "line number": [
      615
     ]
    },
    "numpy.abs": {
     "line number": [
      589
     ]
    },
    "numpy.arange": {
     "line number": [
      617
     ]
    },
    "numpy.array": {
     "line number": [
      620,
      620
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      619
     ]
    },
    "numpy.round": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_legend": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "_draw_outlines": {
     "line number": [
      188
     ]
    },
    "_prepare_topomap": {
     "line number": [
      181
     ]
    },
    "mpl_toolkits.axes_grid1.inset_locator.inset_axes": {
     "line number": [
      178
     ]
    },
    "numpy.array": {
     "line number": [
      185
     ]
    },
    "str": {
     "line number": [
      178,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_lines": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      457
     ]
    },
    "_check_ch_locs": {
     "line number": [
      429
     ]
    },
    "_check_if_nan": {
     "line number": [
      424
     ]
    },
    "_check_sphere": {
     "line number": [
      383
     ]
    },
    "_pl": {
     "line number": [
      511
     ]
    },
    "bool": {
     "line number": [
      389
     ]
    },
    "callable": {
     "line number": [
      454
     ]
    },
    "dict": {
     "line number": [
      402,
      536
     ]
    },
    "enumerate": {
     "line number": [
      390,
      410,
      462
     ]
    },
    "functools.partial": {
     "line number": [
      406,
      408,
      527
     ]
    },
    "isinstance": {
     "line number": [
      425,
      439
     ]
    },
    "len": {
     "line number": [
      379,
      379,
      389,
      392,
      392,
      421,
      433,
      443,
      511,
      511,
      521,
      533
     ]
    },
    "list": {
     "line number": [
      380,
      381,
      382,
      411,
      418,
      453
     ]
    },
    "matplotlib.patheffects.withStroke": {
     "line number": [
      384,
      386
     ]
    },
    "matplotlib.pyplot.get_backend": {
     "line number": [
      532
     ]
    },
    "matplotlib.widgets.SpanSelector": {
     "line number": [
      534
     ]
    },
    "mne.viz.evoked._add_nave": {
     "line number": [
      513
     ]
    },
    "mne.viz.evoked._butterfly_on_button_press": {
     "line number": [
      408
     ]
    },
    "mne.viz.evoked._butterfly_onpick": {
     "line number": [
      406
     ]
    },
    "mne.viz.evoked._handle_spatial_colors": {
     "line number": [
      436
     ]
    },
    "mne.viz.evoked._line_plot_onselect": {
     "line number": [
      527
     ]
    },
    "mne.viz.evoked._rgb": {
     "line number": [
      435
     ]
    },
    "numpy.array": {
     "line number": [
      428,
      520
     ]
    },
    "numpy.diff": {
     "line number": [
      486
     ]
    },
    "numpy.ones": {
     "line number": [
      389
     ]
    },
    "numpy.sqrt": {
     "line number": [
      473
     ]
    },
    "range": {
     "line number": [
      453
     ]
    },
    "str": {
     "line number": [
      425,
      439
     ]
    },
    "tuple": {
     "line number": [
      439
     ]
    },
    "type": {
     "line number": [
      457
     ]
    },
    "warn": {
     "line number": [
      430
     ]
    },
    "zip": {
     "line number": [
      410,
      489
     ]
    },
    "zorder": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_update_evoked": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      989
     ]
    },
    "len": {
     "line number": [
      998
     ]
    },
    "numpy.where": {
     "line number": [
      990
     ]
    },
    "range": {
     "line number": [
      998
     ]
    },
    "zip": {
     "line number": [
      996,
      1001
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._populate_style_dict_pce": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1652,
      1658
     ]
    },
    "dict": {
     "line number": [
      1645
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._rgb": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      166
     ]
    },
    "numpy.maximum": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._title_helper_pce": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": {
    "_handle_default": {
     "line number": [
      1903
     ]
    },
    "_set_title_multiple_electrodes": {
     "line number": [
      1904
     ]
    },
    "isinstance": {
     "line number": [
      1907
     ]
    },
    "len": {
     "line number": [
      1906,
      1907
     ]
    },
    "str": {
     "line number": [
      1907
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._topo_closed": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_cmap_pce": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1593
     ]
    },
    "isinstance": {
     "line number": [
      1593,
      1596,
      1598,
      1600
     ]
    },
    "len": {
     "line number": [
      1594,
      1596
     ]
    },
    "list": {
     "line number": [
      1596
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      1599
     ]
    },
    "matplotlib.colors.Colormap": {
     "line number": [
      1600
     ]
    },
    "numbers.Integral": {
     "line number": [
      1593
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1596
     ]
    },
    "str": {
     "line number": [
      1598
     ]
    },
    "tuple": {
     "line number": [
      1596
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_colors_pce": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1556,
      1567
     ]
    },
    "ValueError": {
     "line number": [
      1550,
      1560
     ]
    },
    "_get_color_list": {
     "line number": [
      1543,
      1579
     ]
    },
    "_is_numeric": {
     "line number": [
      1565
     ]
    },
    "all": {
     "line number": [
      1565,
      1571
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1573
     ]
    },
    "dict": {
     "line number": [
      1553,
      1555
     ]
    },
    "enumerate": {
     "line number": [
      1574
     ]
    },
    "isinstance": {
     "line number": [
      1548,
      1555,
      1571
     ]
    },
    "len": {
     "line number": [
      1546,
      1549,
      1549,
      1552,
      1552
     ]
    },
    "list": {
     "line number": [
      1546,
      1548,
      1562,
      1564
     ]
    },
    "numbers.Integral": {
     "line number": [
      1571
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1548
     ]
    },
    "range": {
     "line number": [
      1546
     ]
    },
    "set": {
     "line number": [
      1559,
      1574,
      1583
     ]
    },
    "sorted": {
     "line number": [
      1574,
      1585
     ]
    },
    "tuple": {
     "line number": [
      1548
     ]
    },
    "type": {
     "line number": [
      1557
     ]
    },
    "zip": {
     "line number": [
      1553
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_linestyles_pce": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1620
     ]
    },
    "ValueError": {
     "line number": [
      1613,
      1624
     ]
    },
    "dict": {
     "line number": [
      1617,
      1619
     ]
    },
    "isinstance": {
     "line number": [
      1611,
      1619
     ]
    },
    "len": {
     "line number": [
      1609,
      1612,
      1612,
      1616,
      1616
     ]
    },
    "list": {
     "line number": [
      1611,
      1626
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1611
     ]
    },
    "set": {
     "line number": [
      1623
     ]
    },
    "tuple": {
     "line number": [
      1611
     ]
    },
    "type": {
     "line number": [
      1621
     ]
    },
    "zip": {
     "line number": [
      1617
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_style_keys_pce": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1513
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1511
     ]
    },
    "dict": {
     "line number": [
      1518
     ]
    },
    "list": {
     "line number": [
      1514,
      1532
     ]
    },
    "set": {
     "line number": [
      1512
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.evoked.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "mne.viz.evoked.inset_axes": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.inset_locator.inset_axes"
  },
  "type": "import"
 },
 "mne.viz.evoked.make_axes_locatable": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.make_axes_locatable"
  },
  "type": "import"
 },
 "mne.viz.evoked.mlines": {
  "data": {
   "shadows": "matplotlib.lines"
  },
  "type": "import"
 },
 "mne.viz.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.evoked.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.evoked.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.evoked.plot_compare_evokeds": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2149
     ]
    },
    "_check_ch_locs": {
     "line number": [
      2353
     ]
    },
    "_check_evokeds_ch_names_times": {
     "line number": [
      2160
     ]
    },
    "_check_sphere": {
     "line number": [
      2168
     ]
    },
    "_get_channel_types": {
     "line number": [
      2182
     ]
    },
    "_handle_default": {
     "line number": [
      2252,
      2253
     ]
    },
    "_make_combine_callable": {
     "line number": [
      2199
     ]
    },
    "_picks_to_idx": {
     "line number": [
      2179
     ]
    },
    "_setup_vmin_vmax": {
     "line number": [
      2328
     ]
    },
    "_validate_if_list_of_axes": {
     "line number": [
      2219
     ]
    },
    "_validate_type": {
     "line number": [
      2153,
      2157,
      2175,
      2351
     ]
    },
    "bool": {
     "line number": [
      2351
     ]
    },
    "channel_indices_by_type": {
     "line number": [
      2184
     ]
    },
    "ci_fun": {
     "line number": [
      2307,
      2308,
      2308,
      2310,
      2312
     ]
    },
    "cmap": {
     "line number": [
      2234,
      2246,
      2363
     ]
    },
    "combine_func": {
     "line number": [
      2199,
      2298
     ]
    },
    "copy.deepcopy": {
     "line number": [
      2151,
      2178
     ]
    },
    "dict": {
     "line number": [
      2138,
      2148,
      2172,
      2302,
      2303
     ]
    },
    "enumerate": {
     "line number": [
      2140
     ]
    },
    "find_layout": {
     "line number": [
      2284
     ]
    },
    "hasattr": {
     "line number": [
      2142
     ]
    },
    "isinstance": {
     "line number": [
      2133,
      2136,
      2148,
      2154,
      2217
     ]
    },
    "iter_topography": {
     "line number": [
      2289
     ]
    },
    "len": {
     "line number": [
      2189,
      2192,
      2194,
      2196,
      2209,
      2213,
      2219,
      2221,
      2249,
      2308
     ]
    },
    "list": {
     "line number": [
      2136,
      2164,
      2175,
      2182,
      2224,
      2289,
      2293,
      2299,
      2300,
      2319,
      2321,
      2324
     ]
    },
    "matplotlib.pyplot.Axes": {
     "line number": [
      2217
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      2266
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      2216
     ]
    },
    "mne.viz.evoked._draw_axes_pce": {
     "line number": [
      2347
     ]
    },
    "mne.viz.evoked._draw_colorbar_pce": {
     "line number": [
      2364
     ]
    },
    "mne.viz.evoked._draw_legend_pce": {
     "line number": [
      2361
     ]
    },
    "mne.viz.evoked._evoked_sensor_legend": {
     "line number": [
      2357
     ]
    },
    "mne.viz.evoked._get_ci_function_pce": {
     "line number": [
      2307
     ]
    },
    "mne.viz.evoked._get_data_and_ci": {
     "line number": [
      2309
     ]
    },
    "mne.viz.evoked._handle_styles_pce": {
     "line number": [
      2246
     ]
    },
    "mne.viz.evoked._plot_compare_evokeds": {
     "line number": [
      2343
     ]
    },
    "mne.viz.evoked._title_helper_pce": {
     "line number": [
      2202,
      2231
     ]
    },
    "numpy.all": {
     "line number": [
      2326
     ]
    },
    "numpy.array": {
     "line number": [
      2181,
      2227,
      2262,
      2333,
      2353
     ]
    },
    "numpy.concatenate": {
     "line number": [
      2325
     ]
    },
    "numpy.int64": {
     "line number": [
      2351
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      2187
     ]
    },
    "numpy.newaxis": {
     "line number": [
      2322
     ]
    },
    "pick_info": {
     "line number": [
      2257
     ]
    },
    "plt_show": {
     "line number": [
      2366
     ]
    },
    "str": {
     "line number": [
      2144,
      2351
     ]
    },
    "sum": {
     "line number": [
      2159,
      2186
     ]
    },
    "tuple": {
     "line number": [
      2136,
      2175
     ]
    },
    "type": {
     "line number": [
      2150,
      2351
     ]
    },
    "warn": {
     "line number": [
      2193,
      2354
     ]
    },
    "zip": {
     "line number": [
      2225,
      2301,
      2338
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_compare_evokeds.click_func": {
  "data": {
   "lineno": 2268,
   "symbols_in_volume": {
    "cmap": {
     "line number": [
      2270,
      2277
     ]
    },
    "mne.viz.evoked.plot_compare_evokeds": {
     "line number": [
      2275
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "mne.viz.evoked._plot_evoked": {
     "line number": [
      732
     ]
    },
    "zorder": {
     "line number": [
      737
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_image": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": {
    "mne.viz.evoked._plot_evoked": {
     "line number": [
      976
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_joint": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1379
     ]
    },
    "RuntimeError": {
     "line number": [
      1388
     ]
    },
    "TypeError": {
     "line number": [
      1334
     ]
    },
    "ValueError": {
     "line number": [
      1345,
      1349,
      1362
     ]
    },
    "_check_option": {
     "line number": [
      1365
     ]
    },
    "_check_time_unit": {
     "line number": [
      1337,
      1400
     ]
    },
    "_connection_line": {
     "line number": [
      1474
     ]
    },
    "_get_channel_types": {
     "line number": [
      1374,
      1387
     ]
    },
    "_pick_inst": {
     "line number": [
      1372
     ]
    },
    "_prepare_joint_axes": {
     "line number": [
      1404
     ]
    },
    "_process_times": {
     "line number": [
      1398
     ]
    },
    "_set_contour_locator": {
     "line number": [
      1447
     ]
    },
    "_setup_vmin_vmax": {
     "line number": [
      1445
     ]
    },
    "_validate_if_list_of_axes": {
     "line number": [
      1351,
      1353
     ]
    },
    "any": {
     "line number": [
      1344
     ]
    },
    "channel_type": {
     "line number": [
      1386
     ]
    },
    "dict": {
     "line number": [
      1333,
      1336,
      1339,
      1416
     ]
    },
    "isinstance": {
     "line number": [
      1333,
      1446,
      1460
     ]
    },
    "len": {
     "line number": [
      1352,
      1377,
      1387,
      1404
     ]
    },
    "list": {
     "line number": [
      1346,
      1353,
      1382,
      1394,
      1446,
      1460
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      1459
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      1430
     ]
    },
    "matplotlib.pyplot.subplots_adjust": {
     "line number": [
      1469
     ]
    },
    "matplotlib.ticker.MaxNLocator": {
     "line number": [
      1464
     ]
    },
    "mne.viz.evoked._plot_evoked": {
     "line number": [
      1422
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1446,
      1460
     ]
    },
    "plt_show": {
     "line number": [
      1485
     ]
    },
    "range": {
     "line number": [
      1385
     ]
    },
    "type": {
     "line number": [
      1335
     ]
    },
    "zip": {
     "line number": [
      1475
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_topo": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": {
    "_get_color_list": {
     "line number": [
      836,
      838
     ]
    },
    "_plot_evoked_topo": {
     "line number": [
      841
     ]
    },
    "len": {
     "line number": [
      839,
      839,
      840
     ]
    },
    "list": {
     "line number": [
      821
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      825
     ]
    },
    "numpy.mean": {
     "line number": [
      825
     ]
    },
    "tuple": {
     "line number": [
      821
     ]
    },
    "type": {
     "line number": [
      821
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_white": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1143
     ]
    },
    "ValueError": {
     "line number": [
      1125
     ]
    },
    "_check_time_unit": {
     "line number": [
      1072
     ]
    },
    "_handle_default": {
     "line number": [
      1145,
      1150
     ]
    },
    "_pl": {
     "line number": [
      1165
     ]
    },
    "_triage_rank_sss": {
     "line number": [
      1087
     ]
    },
    "_validate_type": {
     "line number": [
      1115,
      1123
     ]
    },
    "any": {
     "line number": [
      1135
     ]
    },
    "dict": {
     "line number": [
      1199,
      1201,
      1202
     ]
    },
    "enumerate": {
     "line number": [
      1080,
      1122
     ]
    },
    "isinstance": {
     "line number": [
      1074,
      1076
     ]
    },
    "len": {
     "line number": [
      1106,
      1114,
      1149,
      1165,
      1165
     ]
    },
    "list": {
     "line number": [
      1076,
      1115
     ]
    },
    "matplotlib.pyplot.Axes": {
     "line number": [
      1123
     ]
    },
    "matplotlib.pyplot.cm.Set1": {
     "line number": [
      1149
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      1117
     ]
    },
    "numpy.array": {
     "line number": [
      1121
     ]
    },
    "numpy.linspace": {
     "line number": [
      1149
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1115
     ]
    },
    "plt_show": {
     "line number": [
      1209
     ]
    },
    "read_cov": {
     "line number": [
      1075
     ]
    },
    "str": {
     "line number": [
      1074
     ]
    },
    "tuple": {
     "line number": [
      1076,
      1115
     ]
    },
    "whiten_evoked": {
     "line number": [
      1094
     ]
    },
    "whitened_gfp": {
     "line number": [
      1183
     ]
    },
    "zip": {
     "line number": [
      1095,
      1151,
      1159
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_white.whitened_gfp": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1103
     ]
    },
    "numpy.sum": {
     "line number": [
      1103
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_snr_estimate": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": {
    "_validate_type": {
     "line number": [
      1247
     ]
    },
    "estimate_snr": {
     "line number": [
      1246
     ]
    },
    "list": {
     "line number": [
      1259
     ]
    },
    "matplotlib.pyplot.Axes": {
     "line number": [
      1247
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      1249
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1254
     ]
    },
    "plt_show": {
     "line number": [
      1270
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.evoked.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.evoked.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "mne.viz.ica": {
  "data": {},
  "type": "module"
 },
 "mne.viz.ica._close_epochs_event": {
  "data": {
   "lineno": 1077
  },
  "type": "function"
 },
 "mne.viz.ica._close_event": {
  "data": {
   "lineno": 993
  },
  "type": "function"
 },
 "mne.viz.ica._create_properties_layout": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "matplotlib.pyplot.figure": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._get_psd_label_and_std": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "_convert_psds": {
     "line number": [
      241
     ]
    },
    "mne.viz.ica.warnings": {
     "line number": [
      248,
      249
     ]
    },
    "numpy.array": {
     "line number": [
      253
     ]
    },
    "numpy.sqrt": {
     "line number": [
      251,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._label_clicked": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1114
     ]
    },
    "_hide_frame": {
     "line number": [
      1129
     ]
    },
    "_make_head_outlines": {
     "line number": [
      1118
     ]
    },
    "_merge_ch_data": {
     "line number": [
      1126
     ]
    },
    "_prepare_topomap_plot": {
     "line number": [
      1113
     ]
    },
    "_prepare_trellis": {
     "line number": [
      1109
     ]
    },
    "enumerate": {
     "line number": [
      1110
     ]
    },
    "len": {
     "line number": [
      1090,
      1098,
      1100,
      1102,
      1109
     ]
    },
    "list": {
     "line number": [
      1096
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      1116
     ]
    },
    "numpy.array": {
     "line number": [
      1088
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      1108
     ]
    },
    "numpy.dot": {
     "line number": [
      1106
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      1089
     ]
    },
    "pick_types": {
     "line number": [
      1098,
      1100,
      1102
     ]
    },
    "plot_topomap": {
     "line number": [
      1127
     ]
    },
    "plt_show": {
     "line number": [
      1133
     ]
    },
    "str": {
     "line number": [
      1115
     ]
    },
    "tight_layout": {
     "line number": [
      1130
     ]
    },
    "warn": {
     "line number": [
      1094,
      1115
     ]
    },
    "zip": {
     "line number": [
      1123
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._pick_bads": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "_select_bads": {
     "line number": [
      988
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_overlay_evoked": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      866
     ]
    },
    "isinstance": {
     "line number": [
      873
     ]
    },
    "len": {
     "line number": [
      861,
      865,
      865
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      869
     ]
    },
    "numpy.ndarray": {
     "line number": [
      873
     ]
    },
    "plt_show": {
     "line number": [
      885
     ]
    },
    "tight_layout": {
     "line number": [
      881
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_overlay_raw": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "matplotlib.pyplot.subplots": {
     "line number": [
      819
     ]
    },
    "matplotlib.pyplot.suptitle": {
     "line number": [
      820
     ]
    },
    "plt_show": {
     "line number": [
      837
     ]
    },
    "tight_layout": {
     "line number": [
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_properties": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "EpochsArray": {
     "line number": [
      152
     ]
    },
    "_plot_ica_topomap": {
     "line number": [
      141
     ]
    },
    "float": {
     "line number": [
      178,
      178
     ]
    },
    "int": {
     "line number": [
      148
     ]
    },
    "kde": {
     "line number": [
      192
     ]
    },
    "len": {
     "line number": [
      148,
      172,
      178,
      178,
      210
     ]
    },
    "mpl_toolkits.axes_grid1.axes_divider.make_axes_locatable": {
     "line number": [
      170
     ]
    },
    "numpy.arange": {
     "line number": [
      148
     ]
    },
    "numpy.diff": {
     "line number": [
      224
     ]
    },
    "numpy.insert": {
     "line number": [
      146
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      188
     ]
    },
    "numpy.linspace": {
     "line number": [
      191
     ]
    },
    "plot_epochs_image": {
     "line number": [
      155
     ]
    },
    "range": {
     "line number": [
      172
     ]
    },
    "scipy.stats.gaussian_kde": {
     "line number": [
      187
     ]
    },
    "set_title_and_labels": {
     "line number": [
      202,
      205,
      220,
      230,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_sources_evoked": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      546,
      585
     ]
    },
    "functools.partial": {
     "line number": [
      589,
      591
     ]
    },
    "len": {
     "line number": [
      545,
      567
     ]
    },
    "list": {
     "line number": [
      518,
      519,
      526,
      531
     ]
    },
    "matplotlib.patheffects.withStroke": {
     "line number": [
      583
     ]
    },
    "matplotlib.pyplot.cm.rainbow": {
     "line number": [
      545
     ]
    },
    "matplotlib.pyplot.legend": {
     "line number": [
      568
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      512
     ]
    },
    "numpy.linspace": {
     "line number": [
      545
     ]
    },
    "numpy.sort": {
     "line number": [
      520
     ]
    },
    "plt_show": {
     "line number": [
      593
     ]
    },
    "tight_layout": {
     "line number": [
      569
     ]
    },
    "zip": {
     "line number": [
      546,
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._plot_sources_epochs": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1037
     ]
    },
    "TypeError": {
     "line number": [
      1060
     ]
    },
    "_handle_default": {
     "line number": [
      1020
     ]
    },
    "_prepare_mne_browse_epochs": {
     "line number": [
      1049
     ]
    },
    "create_info": {
     "line number": [
      1022
     ]
    },
    "dict": {
     "line number": [
      1038
     ]
    },
    "functools.partial": {
     "line number": [
      1044,
      1056
     ]
    },
    "int": {
     "line number": [
      1015
     ]
    },
    "len": {
     "line number": [
      1016,
      1032,
      1033,
      1040
     ]
    },
    "list": {
     "line number": [
      1007,
      1024,
      1039,
      1041,
      1046,
      1049
     ]
    },
    "min": {
     "line number": [
      1032
     ]
    },
    "mne.viz.ica._update_epoch_data": {
     "line number": [
      1054
     ]
    },
    "numpy.append": {
     "line number": [
      1011,
      1014,
      1015,
      1019,
      1034
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1017
     ]
    },
    "numpy.repeat": {
     "line number": [
      1008
     ]
    },
    "pick_types": {
     "line number": [
      1005,
      1006
     ]
    },
    "plt_show": {
     "line number": [
      1059,
      1061
     ]
    },
    "range": {
     "line number": [
      1033
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._plot_sources_raw": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      929
     ]
    },
    "TypeError": {
     "line number": [
      971
     ]
    },
    "_handle_default": {
     "line number": [
      892
     ]
    },
    "_plot_annotations": {
     "line number": [
      951
     ]
    },
    "_prepare_mne_browse_raw": {
     "line number": [
      946
     ]
    },
    "create_info": {
     "line number": [
      919
     ]
    },
    "dict": {
     "line number": [
      938
     ]
    },
    "functools.partial": {
     "line number": [
      949,
      952,
      953,
      954,
      956,
      958,
      960,
      962
     ]
    },
    "int": {
     "line number": [
      905,
      930
     ]
    },
    "len": {
     "line number": [
      893,
      906,
      908,
      909,
      915,
      933,
      935
     ]
    },
    "list": {
     "line number": [
      898,
      933,
      944
     ]
    },
    "min": {
     "line number": [
      926,
      935
     ]
    },
    "numpy.append": {
     "line number": [
      905,
      913,
      916
     ]
    },
    "numpy.array": {
     "line number": [
      934
     ]
    },
    "pick_types": {
     "line number": [
      895,
      896
     ]
    },
    "plt_show": {
     "line number": [
      970,
      972
     ]
    },
    "range": {
     "line number": [
      908,
      915,
      933
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._update_data": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "int": {
     "line number": [
      979,
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica._update_epoch_data": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1072
     ]
    },
    "len": {
     "line number": [
      1069
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "mne.viz.ica.make_axes_locatable": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.axes_divider.make_axes_locatable"
  },
  "type": "import"
 },
 "mne.viz.ica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.ica.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.ica.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.ica.plot_ica_overlay": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      770
     ]
    },
    "_check_start_stop": {
     "line number": [
      777
     ]
    },
    "_picks_to_idx": {
     "line number": [
      765
     ]
    },
    "_validate_type": {
     "line number": [
      761
     ]
    },
    "isinstance": {
     "line number": [
      769,
      772,
      786
     ]
    },
    "list": {
     "line number": [
      769
     ]
    },
    "mne.viz.ica._plot_ica_overlay_evoked": {
     "line number": [
      792
     ]
    },
    "mne.viz.ica._plot_ica_overlay_raw": {
     "line number": [
      783
     ]
    },
    "numpy.ndarray": {
     "line number": [
      769
     ]
    },
    "type": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_properties": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "RawArray": {
     "line number": [
      393
     ]
    },
    "ValueError": {
     "line number": [
      341,
      351
     ]
    },
    "_picks_to_idx": {
     "line number": [
      346
     ]
    },
    "_reject_data_segments": {
     "line number": [
      389
     ]
    },
    "_validate_if_list_of_axes": {
     "line number": [
      354
     ]
    },
    "_validate_type": {
     "line number": [
      333,
      334,
      370,
      372
     ]
    },
    "bool": {
     "line number": [
      335,
      372
     ]
    },
    "dict": {
     "line number": [
      357,
      358,
      359,
      360,
      370
     ]
    },
    "enumerate": {
     "line number": [
      453
     ]
    },
    "float": {
     "line number": [
      337
     ]
    },
    "getattr": {
     "line number": [
      380
     ]
    },
    "int": {
     "line number": [
      337,
      468
     ]
    },
    "isinstance": {
     "line number": [
      335,
      337,
      377
     ]
    },
    "len": {
     "line number": [
      345,
      350,
      422,
      468
     ]
    },
    "list": {
     "line number": [
      452
     ]
    },
    "make_fixed_length_epochs": {
     "line number": [
      397,
      403
     ]
    },
    "min": {
     "line number": [
      345,
      435
     ]
    },
    "mne.viz.ica._create_properties_layout": {
     "line number": [
      348,
      461
     ]
    },
    "mne.viz.ica._get_psd_label_and_std": {
     "line number": [
      456
     ]
    },
    "mne.viz.ica._plot_ica_properties": {
     "line number": [
      475
     ]
    },
    "numpy.arange": {
     "line number": [
      468
     ]
    },
    "numpy.insert": {
     "line number": [
      469
     ]
    },
    "numpy.swapaxes": {
     "line number": [
      418,
      429
     ]
    },
    "numpy.var": {
     "line number": [
      464,
      465
     ]
    },
    "plt_show": {
     "line number": [
      483
     ]
    },
    "psd_multitaper": {
     "line number": [
      437
     ]
    },
    "set_title_and_labels": {
     "line number": [
      478
     ]
    },
    "type": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_properties.set_title_and_labels": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_scores": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      686,
      691
     ]
    },
    "int": {
     "line number": [
      650
     ]
    },
    "isinstance": {
     "line number": [
      644,
      661,
      680
     ]
    },
    "len": {
     "line number": [
      646,
      671,
      677,
      685,
      687,
      690,
      690,
      711
     ]
    },
    "list": {
     "line number": [
      644
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      658
     ]
    },
    "min": {
     "line number": [
      653
     ]
    },
    "numpy.arange": {
     "line number": [
      640
     ]
    },
    "numpy.ceil": {
     "line number": [
      650
     ]
    },
    "numpy.isscalar": {
     "line number": [
      697
     ]
    },
    "numpy.ndarray": {
     "line number": [
      644,
      661
     ]
    },
    "numpy.sqrt": {
     "line number": [
      650
     ]
    },
    "numpy.unique": {
     "line number": [
      643
     ]
    },
    "plt_show": {
     "line number": [
      716
     ]
    },
    "str": {
     "line number": [
      680
     ]
    },
    "tight_layout": {
     "line number": [
      713
     ]
    },
    "zip": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_sources": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      105
     ]
    },
    "_picks_to_idx": {
     "line number": [
      85
     ]
    },
    "getattr": {
     "line number": [
      103
     ]
    },
    "isinstance": {
     "line number": [
      87,
      92,
      97
     ]
    },
    "mne.viz.ica._plot_ica_sources_evoked": {
     "line number": [
      101
     ]
    },
    "mne.viz.ica._plot_sources_epochs": {
     "line number": [
      93
     ]
    },
    "mne.viz.ica._plot_sources_raw": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.ica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.misc": {
  "data": {},
  "type": "module"
 },
 "mne.viz.misc.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.viz.misc.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz.misc.Normalize": {
  "data": {
   "shadows": "matplotlib.colors.Normalize"
  },
  "type": "import"
 },
 "mne.viz.misc._DEFAULT_ALIM": {
  "data": {
   "lineno": 833
  },
  "type": "constant"
 },
 "mne.viz.misc._check_fscale": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      829
     ]
    },
    "isinstance": {
     "line number": [
      828
     ]
    },
    "str": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._filter_ticks": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "int": {
     "line number": [
      798,
      799
     ]
    },
    "list": {
     "line number": [
      793
     ]
    },
    "numpy.arange": {
     "line number": [
      797
     ]
    },
    "numpy.array": {
     "line number": [
      792,
      795,
      801
     ]
    },
    "numpy.floor": {
     "line number": [
      798,
      799
     ]
    },
    "numpy.log10": {
     "line number": [
      798,
      799
     ]
    },
    "range": {
     "line number": [
      798
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._get_bem_plotting_surfaces": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "glob.glob": {
     "line number": [
      566
     ]
    },
    "len": {
     "line number": [
      567
     ]
    },
    "os.path.join": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._get_flim": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      820,
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._get_presser": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      720
     ]
    },
    "mne.viz.misc.matplotlib": {
     "line number": [
      720
     ]
    },
    "val": {
     "line number": [
      721
     ]
    },
    "val.func": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._handle_event_colors": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": {
    "_get_color_list": {
     "line number": [
      1153,
      1156
     ]
    },
    "_pl": {
     "line number": [
      1174
     ]
    },
    "dict": {
     "line number": [
      1153,
      1160
     ]
    },
    "itertools.cycle": {
     "line number": [
      1153
     ]
    },
    "len": {
     "line number": [
      1156,
      1156,
      1171
     ]
    },
    "set": {
     "line number": [
      1170,
      1170
     ]
    },
    "sorted": {
     "line number": [
      1153,
      1170
     ]
    },
    "str": {
     "line number": [
      1168,
      1172
     ]
    },
    "warn": {
     "line number": [
      1157,
      1167,
      1173
     ]
    },
    "zip": {
     "line number": [
      1153
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._index_info_cov": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "_picks_by_type": {
     "line number": [
      52
     ]
    },
    "collections.defaultdict": {
     "line number": [
      60
     ]
    },
    "dict": {
     "line number": [
      54
     ]
    },
    "len": {
     "line number": [
      70
     ]
    },
    "list": {
     "line number": [
      60
     ]
    },
    "pick_channels": {
     "line number": [
      48
     ]
    },
    "pick_info": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc._plot_mri_contours": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      337,
      358
     ]
    },
    "_check_option": {
     "line number": [
      313
     ]
    },
    "_ensure_src": {
     "line number": [
      355
     ]
    },
    "_get_img_fdata": {
     "line number": [
      326
     ]
    },
    "_mri_orientation": {
     "line number": [
      322
     ]
    },
    "_prepare_trellis": {
     "line number": [
      376
     ]
    },
    "_read_mri_info": {
     "line number": [
      316
     ]
    },
    "apply_trans": {
     "line number": [
      350,
      363
     ]
    },
    "bool": {
     "line number": [
      362
     ]
    },
    "dict": {
     "line number": [
      347,
      382,
      422
     ]
    },
    "enumerate": {
     "line number": [
      387
     ]
    },
    "int": {
     "line number": [
      331
     ]
    },
    "invert_transform": {
     "line number": [
      318
     ]
    },
    "io.BytesIO": {
     "line number": [
      439
     ]
    },
    "len": {
     "line number": [
      369,
      376,
      377,
      413
     ]
    },
    "list": {
     "line number": [
      345,
      353,
      386
     ]
    },
    "matplotlib.patheffects.withStroke": {
     "line number": [
      384
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      373
     ]
    },
    "matplotlib.pyplot.cm.gray": {
     "line number": [
      398
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      368
     ]
    },
    "mne.viz.misc.base64": {
     "line number": [
      442
     ]
    },
    "mne.viz.misc.warnings": {
     "line number": [
      405,
      406
     ]
    },
    "numpy.array_equal": {
     "line number": [
      334
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      332
     ]
    },
    "numpy.concatenate": {
     "line number": [
      364,
      379
     ]
    },
    "numpy.diff": {
     "line number": [
      380
     ]
    },
    "numpy.inf": {
     "line number": [
      380,
      380
     ]
    },
    "numpy.linspace": {
     "line number": [
      331
     ]
    },
    "numpy.round": {
     "line number": [
      331
     ]
    },
    "numpy.sort": {
     "line number": [
      334
     ]
    },
    "plt_show": {
     "line number": [
      446
     ]
    },
    "read_surface": {
     "line number": [
      348
     ]
    },
    "slice": {
     "line number": [
      381
     ]
    },
    "str": {
     "line number": [
      419
     ]
    },
    "tuple": {
     "line number": [
      391
     ]
    },
    "zip": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.adjust_axes": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      780
     ]
    },
    "list": {
     "line number": [
      780
     ]
    },
    "numpy.ndarray": {
     "line number": [
      780
     ]
    },
    "tuple": {
     "line number": [
      780
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mne.viz.misc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.viz.misc.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.misc.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mne.viz.misc.filtfilt": {
  "data": {
   "shadows": "scipy.signal.filtfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.freqz": {
  "data": {
   "shadows": "scipy.signal.freqz"
  },
  "type": "import"
 },
 "mne.viz.misc.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.viz.misc.group_delay": {
  "data": {
   "shadows": "scipy.signal.group_delay"
  },
  "type": "import"
 },
 "mne.viz.misc.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.viz.misc.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.viz.misc.make_axes_locatable": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.make_axes_locatable"
  },
  "type": "import"
 },
 "mne.viz.misc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.misc.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.misc.plot_bem": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      525,
      538,
      546,
      553
     ]
    },
    "TypeError": {
     "line number": [
      549
     ]
    },
    "_check_mri": {
     "line number": [
      519
     ]
    },
    "get_subjects_dir": {
     "line number": [
      518
     ]
    },
    "isinstance": {
     "line number": [
      529,
      540,
      548
     ]
    },
    "len": {
     "line number": [
      552
     ]
    },
    "mne.viz.misc._get_bem_plotting_surfaces": {
     "line number": [
      527
     ]
    },
    "mne.viz.misc._plot_mri_contours": {
     "line number": [
      557
     ]
    },
    "os.path.exists": {
     "line number": [
      535,
      541,
      543
     ]
    },
    "os.path.isdir": {
     "line number": [
      524
     ]
    },
    "os.path.join": {
     "line number": [
      522,
      533,
      542
     ]
    },
    "read_source_spaces": {
     "line number": [
      547
     ]
    },
    "repr": {
     "line number": [
      550
     ]
    },
    "str": {
     "line number": [
      529,
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_cov": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Covariance": {
     "line number": [
      168
     ]
    },
    "compute_rank": {
     "line number": [
      172
     ]
    },
    "enumerate": {
     "line number": [
      145,
      165
     ]
    },
    "len": {
     "line number": [
      143,
      144,
      163,
      164,
      185
     ]
    },
    "make_projector": {
     "line number": [
      134
     ]
    },
    "matplotlib.colors.Normalize": {
     "line number": [
      148
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      156
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      143,
      163
     ]
    },
    "mne.viz.misc._index_info_cov": {
     "line number": [
      123
     ]
    },
    "mne.viz.misc.copy": {
     "line number": [
      128
     ]
    },
    "mpl_toolkits.axes_grid1.make_axes_locatable": {
     "line number": [
      154
     ]
    },
    "numpy.abs": {
     "line number": [
      146
     ]
    },
    "numpy.dot": {
     "line number": [
      138,
      138
     ]
    },
    "numpy.max": {
     "line number": [
      146
     ]
    },
    "numpy.sqrt": {
     "line number": [
      175
     ]
    },
    "pick_info": {
     "line number": [
      170
     ]
    },
    "plt_show": {
     "line number": [
      188
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      167
     ]
    },
    "tight_layout": {
     "line number": [
      159,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_csd": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1217
     ]
    },
    "dict": {
     "line number": [
      1238,
      1239,
      1245,
      1246
     ]
    },
    "enumerate": {
     "line number": [
      1277
     ]
    },
    "float": {
     "line number": [
      1254
     ]
    },
    "int": {
     "line number": [
      1253,
      1254
     ]
    },
    "len": {
     "line number": [
      1241,
      1250,
      1258,
      1265
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      1293
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      1261
     ]
    },
    "matplotlib.pyplot.subplots_adjust": {
     "line number": [
      1290
     ]
    },
    "matplotlib.pyplot.suptitle": {
     "line number": [
      1289
     ]
    },
    "numpy.abs": {
     "line number": [
      1268,
      1272
     ]
    },
    "numpy.arange": {
     "line number": [
      1241
     ]
    },
    "numpy.ceil": {
     "line number": [
      1253,
      1254
     ]
    },
    "numpy.diag": {
     "line number": [
      1271
     ]
    },
    "numpy.max": {
     "line number": [
      1275,
      1285
     ]
    },
    "numpy.min": {
     "line number": [
      1284
     ]
    },
    "numpy.newaxis": {
     "line number": [
      1272,
      1272
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1253
     ]
    },
    "pick_types": {
     "line number": [
      1221,
      1223,
      1225
     ]
    },
    "plt_show": {
     "line number": [
      1304
     ]
    },
    "range": {
     "line number": [
      1265
     ]
    },
    "zip": {
     "line number": [
      1257,
      1277
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_dipole_amplitudes": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": {
    "_get_color_list": {
     "line number": [
      755
     ]
    },
    "itertools.cycle": {
     "line number": [
      755
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      756
     ]
    },
    "max": {
     "line number": [
      761
     ]
    },
    "min": {
     "line number": [
      760
     ]
    },
    "numpy.inf": {
     "line number": [
      757,
      757
     ]
    },
    "zip": {
     "line number": [
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_events": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      646
     ]
    },
    "ValueError": {
     "line number": [
      627
     ]
    },
    "_on_missing": {
     "line number": [
      641
     ]
    },
    "bool": {
     "line number": [
      637
     ]
    },
    "enumerate": {
     "line number": [
      638,
      671
     ]
    },
    "events": {
     "line number": [
      625,
      625,
      626,
      628,
      667,
      672,
      676,
      686
     ]
    },
    "events.max": {
     "line number": [
      667
     ]
    },
    "len": {
     "line number": [
      626,
      637,
      645
     ]
    },
    "list": {
     "line number": [
      670,
      670
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      661
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      662
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      700
     ]
    },
    "mne.viz.misc._handle_event_colors": {
     "line number": [
      656
     ]
    },
    "numpy.arange": {
     "line number": [
      691
     ]
    },
    "numpy.array": {
     "line number": [
      664
     ]
    },
    "numpy.asarray": {
     "line number": [
      625
     ]
    },
    "numpy.full": {
     "line number": [
      676
     ]
    },
    "numpy.in1d": {
     "line number": [
      667
     ]
    },
    "numpy.max": {
     "line number": [
      666
     ]
    },
    "numpy.min": {
     "line number": [
      665
     ]
    },
    "numpy.ones": {
     "line number": [
      637
     ]
    },
    "numpy.unique": {
     "line number": [
      628
     ]
    },
    "plt_show": {
     "line number": [
      710
     ]
    },
    "sorted": {
     "line number": [
      634
     ]
    },
    "warn": {
     "line number": [
      650
     ]
    },
    "zip": {
     "line number": [
      634,
      643,
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_filter": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      991
     ]
    },
    "_check_option": {
     "line number": [
      912,
      916
     ]
    },
    "_mask_to_onsets_offsets": {
     "line number": [
      1034
     ]
    },
    "dict": {
     "line number": [
      925
     ]
    },
    "enumerate": {
     "line number": [
      915
     ]
    },
    "estimate_ringing_samples": {
     "line number": [
      940,
      959
     ]
    },
    "float": {
     "line number": [
      911
     ]
    },
    "func": {
     "line number": [
      949,
      964,
      966,
      967
     ]
    },
    "isinstance": {
     "line number": [
      913,
      925,
      984,
      986
     ]
    },
    "len": {
     "line number": [
      927,
      928,
      946,
      983,
      990,
      990,
      993,
      993,
      995,
      999
     ]
    },
    "list": {
     "line number": [
      987
     ]
    },
    "matplotlib.pyplot.Axes": {
     "line number": [
      984
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      983
     ]
    },
    "mne.viz.misc._DEFAULT_ALIM": {
     "line number": [
      837
     ]
    },
    "mne.viz.misc._filter_ticks": {
     "line number": [
      923
     ]
    },
    "mne.viz.misc._get_flim": {
     "line number": [
      918
     ]
    },
    "mne.viz.misc.adjust_axes": {
     "line number": [
      1047
     ]
    },
    "mne.viz.misc.plot_ideal_filter": {
     "line number": [
      1020
     ]
    },
    "mne.viz.misc.warnings": {
     "line number": [
      937,
      938,
      954,
      955,
      974,
      975
     ]
    },
    "numpy.abs": {
     "line number": [
      996
     ]
    },
    "numpy.arange": {
     "line number": [
      995
     ]
    },
    "numpy.complex128": {
     "line number": [
      927
     ]
    },
    "numpy.linspace": {
     "line number": [
      922
     ]
    },
    "numpy.log10": {
     "line number": [
      920,
      920,
      1007
     ]
    },
    "numpy.logspace": {
     "line number": [
      920
     ]
    },
    "numpy.maximum": {
     "line number": [
      1007
     ]
    },
    "numpy.ndarray": {
     "line number": [
      986
     ]
    },
    "numpy.ones": {
     "line number": [
      927
     ]
    },
    "numpy.pad": {
     "line number": [
      944,
      963
     ]
    },
    "numpy.pi": {
     "line number": [
      924,
      1005
     ]
    },
    "numpy.where": {
     "line number": [
      1010,
      1016,
      1030
     ]
    },
    "numpy.zeros": {
     "line number": [
      928,
      941,
      960
     ]
    },
    "plt_show": {
     "line number": [
      1049
     ]
    },
    "scipy.signal.filtfilt": {
     "line number": [
      964
     ]
    },
    "scipy.signal.freqz": {
     "line number": [
      930,
      951,
      973
     ]
    },
    "scipy.signal.group_delay": {
     "line number": [
      939,
      956,
      958,
      976
     ]
    },
    "scipy.signal.lfilter": {
     "line number": [
      966
     ]
    },
    "scipy.signal.sosfilt": {
     "line number": [
      948
     ]
    },
    "scipy.signal.sosfiltfilt": {
     "line number": [
      945
     ]
    },
    "slice": {
     "line number": [
      1006
     ]
    },
    "str": {
     "line number": [
      913
     ]
    },
    "tight_layout": {
     "line number": [
      1048
     ]
    },
    "zip": {
     "line number": [
      1034
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_ideal_filter": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1110
     ]
    },
    "_check_option": {
     "line number": [
      1114
     ]
    },
    "len": {
     "line number": [
      1119,
      1120
     ]
    },
    "list": {
     "line number": [
      1108,
      1108,
      1118
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      1131
     ]
    },
    "min": {
     "line number": [
      1116
     ]
    },
    "mne.viz.misc._DEFAULT_ALIM": {
     "line number": [
      1054
     ]
    },
    "mne.viz.misc._filter_ticks": {
     "line number": [
      1136
     ]
    },
    "mne.viz.misc._get_flim": {
     "line number": [
      1117
     ]
    },
    "mne.viz.misc.adjust_axes": {
     "line number": [
      1145
     ]
    },
    "numpy.array": {
     "line number": [
      1112
     ]
    },
    "numpy.linspace": {
     "line number": [
      1122,
      1124
     ]
    },
    "numpy.log10": {
     "line number": [
      1129
     ]
    },
    "numpy.maximum": {
     "line number": [
      1129
     ]
    },
    "plt_show": {
     "line number": [
      1147
     ]
    },
    "range": {
     "line number": [
      1119
     ]
    },
    "tight_layout": {
     "line number": [
      1146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plot_source_spectrogram": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      225,
      229,
      232
     ]
    },
    "len": {
     "line number": [
      224,
      260,
      279,
      280
     ]
    },
    "matplotlib.pyplot.barh": {
     "line number": [
      299
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      294
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      271
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      274
     ]
    },
    "matplotlib.pyplot.grid": {
     "line number": [
      292
     ]
    },
    "matplotlib.pyplot.pcolor": {
     "line number": [
      272
     ]
    },
    "matplotlib.pyplot.xlim": {
     "line number": [
      286
     ]
    },
    "matplotlib.pyplot.ylim": {
     "line number": [
      290
     ]
    },
    "matplotlib.pyplot.yscale": {
     "line number": [
      287
     ]
    },
    "mne.viz.misc.copy": {
     "line number": [
      242
     ]
    },
    "numpy.arange": {
     "line number": [
      240
     ]
    },
    "numpy.array": {
     "line number": [
      250
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      268
     ]
    },
    "numpy.ravel": {
     "line number": [
      241
     ]
    },
    "numpy.round": {
     "line number": [
      278,
      289
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      254
     ]
    },
    "plt_show": {
     "line number": [
      302
     ]
    },
    "range": {
     "line number": [
      260,
      280
     ]
    },
    "set": {
     "line number": [
      241
     ]
    },
    "sorted": {
     "line number": [
      241
     ]
    },
    "str": {
     "line number": [
      278
     ]
    },
    "tight_layout": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.misc.sosfilt": {
  "data": {
   "shadows": "scipy.signal.sosfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.sosfiltfilt": {
  "data": {
   "shadows": "scipy.signal.sosfiltfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.montage": {
  "data": {},
  "type": "module"
 },
 "mne.viz.montage.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.viz.montage.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.montage.plot_montage": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "RawArray": {
     "line number": [
      70
     ]
    },
    "RuntimeError": {
     "line number": [
      45
     ]
    },
    "_check_option": {
     "line number": [
      39
     ]
    },
    "_get_fid_coords": {
     "line number": [
      66
     ]
    },
    "_validate_type": {
     "line number": [
      40
     ]
    },
    "copy.deepcopy": {
     "line number": [
      55
     ]
    },
    "create_info": {
     "line number": [
      69
     ]
    },
    "dict": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      44,
      58,
      70
     ]
    },
    "list": {
     "line number": [
      47
     ]
    },
    "make_dig_montage": {
     "line number": [
      67
     ]
    },
    "numpy.arange": {
     "line number": [
      58
     ]
    },
    "numpy.argwhere": {
     "line number": [
      53
     ]
    },
    "numpy.array": {
     "line number": [
      47
     ]
    },
    "numpy.isclose": {
     "line number": [
      53
     ]
    },
    "numpy.nan": {
     "line number": [
      52
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      58
     ]
    },
    "numpy.tril_indices": {
     "line number": [
      52
     ]
    },
    "numpy.zeros": {
     "line number": [
      70
     ]
    },
    "plot_sensors": {
     "line number": [
      72
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      49
     ]
    },
    "zip": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw": {
  "data": {},
  "type": "module"
 },
 "mne.viz.raw.RadioButtons": {
  "data": {
   "shadows": "matplotlib.widgets.RadioButtons"
  },
  "type": "import"
 },
 "mne.viz.raw.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "mne.viz.raw._RAW_CLIP_DEF": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "mne.viz.raw._close_event": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      539,
      542,
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._label_clicked": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "_find_channel_idx": {
     "line number": [
      557
     ]
    },
    "_handle_topomap_bads": {
     "line number": [
      558
     ]
    },
    "len": {
     "line number": [
      554
     ]
    },
    "mne.viz.raw._plot_update_raw_proj": {
     "line number": [
      574
     ]
    },
    "numpy.array": {
     "line number": [
      551
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      552
     ]
    },
    "vars": {
     "line number": [
      565
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._pick_bad_channels": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "_select_bads": {
     "line number": [
      96
     ]
    },
    "mne.viz.raw._plot_update_raw_proj": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._plot_raw_traces": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "_set_ax_label_style": {
     "line number": [
      925
     ]
    },
    "_simplify_float": {
     "line number": [
      850
     ]
    },
    "bool": {
     "line number": [
      869
     ]
    },
    "dict": {
     "line number": [
      761,
      786
     ]
    },
    "enumerate": {
     "line number": [
      904
     ]
    },
    "isinstance": {
     "line number": [
      786
     ]
    },
    "len": {
     "line number": [
      749,
      771,
      773,
      869,
      877,
      891,
      899,
      923,
      927
     ]
    },
    "list": {
     "line number": [
      765,
      766,
      878,
      879
     ]
    },
    "matplotlib.patches.Rectangle": {
     "line number": [
      806
     ]
    },
    "max": {
     "line number": [
      804,
      909
     ]
    },
    "min": {
     "line number": [
      805,
      910
     ]
    },
    "numpy.any": {
     "line number": [
      874
     ]
    },
    "numpy.clip": {
     "line number": [
      797
     ]
    },
    "numpy.logical_and": {
     "line number": [
      863
     ]
    },
    "numpy.nan": {
     "line number": [
      881,
      882
     ]
    },
    "numpy.zeros": {
     "line number": [
      869
     ]
    },
    "range": {
     "line number": [
      767
     ]
    },
    "sorted": {
     "line number": [
      871
     ]
    },
    "vars": {
     "line number": [
      813,
      814
     ]
    },
    "zip": {
     "line number": [
      871,
      892,
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._plot_update_raw_proj": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "_setup_plot_projector": {
     "line number": [
      41
     ]
    },
    "mne.viz.raw.copy": {
     "line number": [
      38
     ]
    },
    "numpy.where": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._prepare_mne_browse_raw": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "_get_figsize_from_config": {
     "line number": [
      661
     ]
    },
    "_prepare_mne_browse": {
     "line number": [
      665
     ]
    },
    "_set_window_title": {
     "line number": [
      663
     ]
    },
    "_setup_browser_offsets": {
     "line number": [
      726
     ]
    },
    "dict": {
     "line number": [
      685,
      696
     ]
    },
    "enumerate": {
     "line number": [
      682
     ]
    },
    "figure_nobar": {
     "line number": [
      662
     ]
    },
    "float": {
     "line number": [
      714
     ]
    },
    "isinstance": {
     "line number": [
      685,
      696
     ]
    },
    "len": {
     "line number": [
      672,
      690,
      691,
      693,
      733,
      734
     ]
    },
    "matplotlib.patches.Rectangle": {
     "line number": [
      687,
      698,
      702,
      707
     ]
    },
    "max": {
     "line number": [
      691,
      733
     ]
    },
    "numpy.nan": {
     "line number": [
      730
     ]
    },
    "range": {
     "line number": [
      693,
      731
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._selection_key_press": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "_change_channel_group": {
     "line number": [
      528,
      530
     ]
    },
    "mne.viz.raw._close_event": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._selection_scroll": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "_change_channel_group": {
     "line number": [
      520,
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._set_custom_selection": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "_set_radio_button": {
     "line number": [
      1038
     ]
    },
    "len": {
     "line number": [
      1032
     ]
    },
    "numpy.in1d": {
     "line number": [
      1035
     ]
    },
    "numpy.where": {
     "line number": [
      1036
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._setup_browser_selection": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1056,
      1061
     ]
    },
    "_check_option": {
     "line number": [
      1048
     ]
    },
    "_divide_to_regions": {
     "line number": [
      1050
     ]
    },
    "_get_stim_channel": {
     "line number": [
      1060
     ]
    },
    "_set_window_title": {
     "line number": [
      1082
     ]
    },
    "dict": {
     "line number": [
      1058
     ]
    },
    "figure_nobar": {
     "line number": [
      1081
     ]
    },
    "isinstance": {
     "line number": [
      1055
     ]
    },
    "len": {
     "line number": [
      1068,
      1076
     ]
    },
    "list": {
     "line number": [
      1086
     ]
    },
    "matplotlib.pyplot.subplot2grid": {
     "line number": [
      1083,
      1084
     ]
    },
    "matplotlib.widgets.RadioButtons": {
     "line number": [
      1089
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1063,
      1070,
      1078,
      1085
     ]
    },
    "pick_channels": {
     "line number": [
      1064,
      1067
     ]
    },
    "pick_types": {
     "line number": [
      1072
     ]
    },
    "plot_sensors": {
     "line number": [
      1087
     ]
    },
    "read_selection": {
     "line number": [
      1066
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw._update_raw_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "_filtfilt": {
     "line number": [
      72
     ]
    },
    "_overlap_add_filter": {
     "line number": [
      69
     ]
    },
    "_pick_data_channels": {
     "line number": [
      53
     ]
    },
    "float": {
     "line number": [
      79
     ]
    },
    "isinstance": {
     "line number": [
      68
     ]
    },
    "max": {
     "line number": [
      79
     ]
    },
    "numpy.dot": {
     "line number": [
      56
     ]
    },
    "numpy.maximum": {
     "line number": [
      64
     ]
    },
    "numpy.mean": {
     "line number": [
      59
     ]
    },
    "numpy.minimum": {
     "line number": [
      65
     ]
    },
    "numpy.ndarray": {
     "line number": [
      68
     ]
    },
    "numpy.newaxis": {
     "line number": [
      59
     ]
    },
    "range": {
     "line number": [
      75
     ]
    },
    "zip": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.viz.raw.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.raw.plot_raw": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      396
     ]
    },
    "RuntimeError": {
     "line number": [
      366
     ]
    },
    "TypeError": {
     "line number": [
      338,
      501
     ]
    },
    "ValueError": {
     "line number": [
      302,
      376,
      388
     ]
    },
    "_annotations_starts_stops": {
     "line number": [
      317
     ]
    },
    "_check_cov": {
     "line number": [
      399
     ]
    },
    "_check_option": {
     "line number": [
      292
     ]
    },
    "_compute_scalings": {
     "line number": [
      286
     ]
    },
    "_ensure_int": {
     "line number": [
      392
     ]
    },
    "_handle_decim": {
     "line number": [
      398
     ]
    },
    "_handle_default": {
     "line number": [
      285,
      405,
      406
     ]
    },
    "_plot_annotations": {
     "line number": [
      440
     ]
    },
    "_radio_clicked": {
     "line number": [
      487
     ]
    },
    "_setup_butterfly": {
     "line number": [
      497
     ]
    },
    "_toggle_options": {
     "line number": [
      481
     ]
    },
    "_validate_type": {
     "line number": [
      288,
      290
     ]
    },
    "callback_proj": {
     "line number": [
      477
     ]
    },
    "create_filter": {
     "line number": [
      314
     ]
    },
    "dict": {
     "line number": [
      313,
      357,
      390,
      408
     ]
    },
    "events": {
     "line number": [
      339,
      342
     ]
    },
    "events.astype": {
     "line number": [
      340
     ]
    },
    "float": {
     "line number": [
      296,
      297,
      340
     ]
    },
    "functools.partial": {
     "line number": [
      424,
      426,
      436,
      442,
      443,
      444,
      454,
      457,
      459,
      461,
      468,
      474,
      483,
      488,
      489
     ]
    },
    "int": {
     "line number": [
      307,
      314,
      364
     ]
    },
    "isinstance": {
     "line number": [
      291,
      337,
      372,
      390
     ]
    },
    "len": {
     "line number": [
      289,
      329,
      331,
      334,
      335,
      352,
      356,
      362,
      365,
      365,
      385,
      386,
      448
     ]
    },
    "list": {
     "line number": [
      348,
      349,
      372,
      413
     ]
    },
    "matplotlib.widgets.Button": {
     "line number": [
      453
     ]
    },
    "min": {
     "line number": [
      289,
      297
     ]
    },
    "mne.viz.raw._RAW_CLIP_DEF": {
     "line number": [
      108
     ]
    },
    "mne.viz.raw._pick_bad_channels": {
     "line number": [
      443
     ]
    },
    "mne.viz.raw._plot_update_raw_proj": {
     "line number": [
      466
     ]
    },
    "mne.viz.raw._prepare_mne_browse_raw": {
     "line number": [
      429
     ]
    },
    "mne.viz.raw._setup_browser_selection": {
     "line number": [
      380
     ]
    },
    "mne.viz.raw._update_raw_data": {
     "line number": [
      442
     ]
    },
    "numpy.arange": {
     "line number": [
      385
     ]
    },
    "numpy.argsort": {
     "line number": [
      370
     ]
    },
    "numpy.concatenate": {
     "line number": [
      364
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      381
     ]
    },
    "numpy.nan": {
     "line number": [
      433
     ]
    },
    "numpy.ndarray": {
     "line number": [
      372
     ]
    },
    "numpy.zeros": {
     "line number": [
      314
     ]
    },
    "pick_types": {
     "line number": [
      351,
      354,
      361
     ]
    },
    "plt_show": {
     "line number": [
      500,
      502
     ]
    },
    "round": {
     "line number": [
      314
     ]
    },
    "sorted": {
     "line number": [
      434
     ]
    },
    "str": {
     "line number": [
      290,
      291,
      337
     ]
    },
    "tuple": {
     "line number": [
      372
     ]
    },
    "type": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw.plot_raw_psd": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "_check_psd_fmax": {
     "line number": [
      634
     ]
    },
    "_plot_psd": {
     "line number": [
      648
     ]
    },
    "_set_psd_plot_params": {
     "line number": [
      632
     ]
    },
    "list": {
     "line number": [
      636
     ]
    },
    "min": {
     "line number": [
      641
     ]
    },
    "numpy.diff": {
     "line number": [
      641
     ]
    },
    "numpy.inf": {
     "line number": [
      578
     ]
    },
    "numpy.isfinite": {
     "line number": [
      638
     ]
    },
    "plt_show": {
     "line number": [
      652
     ]
    },
    "psd_welch": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw.plot_raw_psd_topo": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1024
     ]
    },
    "_pick_data_channels": {
     "line number": [
      1013
     ]
    },
    "_plot_topo": {
     "line number": [
      1016
     ]
    },
    "find_layout": {
     "line number": [
      999
     ]
    },
    "functools.partial": {
     "line number": [
      1009,
      1011
     ]
    },
    "numpy.log10": {
     "line number": [
      1005
     ]
    },
    "pick_info": {
     "line number": [
      1014
     ]
    },
    "plt_show": {
     "line number": [
      1023,
      1025
     ]
    },
    "psd_welch": {
     "line number": [
      1001
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.conftest.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest._pytest_param": {
  "data": {
   "shadows": "mne.datasets.testing._pytest_param"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.fnirs_epochs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "mne.Epochs": {
     "line number": [
      44
     ]
    },
    "mne.datasets.testing._pytest_param": {
     "line number": [
      33
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      36
     ]
    },
    "mne.events_from_annotations": {
     "line number": [
      41
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      38
     ]
    },
    "mne.preprocessing.nirs.beer_lambert_law": {
     "line number": [
      40
     ]
    },
    "mne.preprocessing.nirs.optical_density": {
     "line number": [
      39
     ]
    },
    "mne.viz.tests.conftest.pytest": {
     "line number": [
      33
     ]
    },
    "os.path.join": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.conftest.fnirs_evoked": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "mne.EvokedArray": {
     "line number": [
      26
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      21
     ]
    },
    "mne.create_info": {
     "line number": [
      24
     ]
    },
    "mne.viz.tests.conftest.pytest": {
     "line number": [
      18
     ]
    },
    "numpy.random.randn": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.conftest.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      46
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      797
     ]
    },
    "mne.viz.tests.test_3d.base_dir": {
     "line number": [
      59,
      67,
      68,
      69
     ]
    },
    "mne.viz.tests.test_3d.data_dir": {
     "line number": [
      47,
      48,
      50,
      52,
      53,
      54,
      61,
      63
     ]
    },
    "mne.viz.tests.test_3d.io_dir": {
     "line number": [
      58,
      66,
      70
     ]
    },
    "os.path.abspath": {
     "line number": [
      57
     ]
    },
    "os.path.dirname": {
     "line number": [
      57
     ]
    },
    "os.path.join": {
     "line number": [
      47,
      48,
      50,
      52,
      53,
      54,
      57,
      58,
      59,
      61,
      63,
      66,
      67,
      68,
      69,
      70
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_3d.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.MixedSourceEstimate": {
  "data": {
   "shadows": "mne.MixedSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._BaseVolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate._BaseVolSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._assert_mapdata_equal": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      421,
      422
     ]
    },
    "matplotlib.colors.Colormap": {
     "line number": [
      421,
      422
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      420
     ]
    },
    "set": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._get_map_ticks": {
  "data": {
   "shadows": "mne.viz._3d._get_map_ticks"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._linearize_map": {
  "data": {
   "shadows": "mne.viz._3d._linearize_map"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._process_clim": {
  "data": {
   "shadows": "mne.viz._3d._process_clim"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.apply_inverse"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.base_dir": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.coil_3d": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.config_fname": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.ctf_fname": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.data_dir": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.dip_fname": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.evoked_fname": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.fwd_fname": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.fwd_fname2": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.hs_fname": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.io_dir": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.link_brains": {
  "data": {
   "shadows": "mne.viz.link_brains"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.make_field_map": {
  "data": {
   "shadows": "mne.make_field_map"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.mayavi": {
  "data": {
   "shadows": "mayavi"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.nirx_fname": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pdf_fname": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.pick_channels_evoked": {
  "data": {
   "shadows": "mne.pick_channels_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_alignment": {
  "data": {
   "shadows": "mne.viz.plot_alignment"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_brain_colorbar": {
  "data": {
   "shadows": "mne.viz.plot_brain_colorbar"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_head_positions": {
  "data": {
   "shadows": "mne.viz.plot_head_positions"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_sensors_connectivity": {
  "data": {
   "shadows": "mne.viz.plot_sensors_connectivity"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_sparse_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_sparse_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_bem_solution": {
  "data": {
   "shadows": "mne.bem.read_bem_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_bem_surfaces": {
  "data": {
   "shadows": "mne.bem.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_source_spaces": {
  "data": {
   "shadows": "mne.source_space.read_source_spaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_pysurfer": {
  "data": {
   "shadows": "mne.utils.requires_pysurfer"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.snapshot_brain_montage": {
  "data": {
   "shadows": "mne.viz.snapshot_brain_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.sqd_fname": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.src_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.subjects_dir": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.test_brain_colorbar": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      703
     ]
    },
    "empty": {
     "line number": [
      725
     ]
    },
    "float": {
     "line number": [
      724
     ]
    },
    "have": {
     "line number": [
      724
     ]
    },
    "list": {
     "line number": [
      715,
      717
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      726
     ]
    },
    "matplotlib.pyplot.draw": {
     "line number": [
      720
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      702
     ]
    },
    "mne.viz.plot_brain_colorbar": {
     "line number": [
      708
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      697,
      698,
      699
     ]
    },
    "numpy.array": {
     "line number": [
      715,
      717
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      723,
      725
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_link_brains": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      776
     ]
    },
    "TypeError": {
     "line number": [
      781
     ]
    },
    "ValueError": {
     "line number": [
      779
     ]
    },
    "int": {
     "line number": [
      763
     ]
    },
    "len": {
     "line number": [
      760
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      766
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      752
     ]
    },
    "mne.source_space.read_source_spaces": {
     "line number": [
      757
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      753
     ]
    },
    "mne.viz.link_brains": {
     "line number": [
      777,
      780,
      782,
      783
     ]
    },
    "mne.viz.plot_source_estimates": {
     "line number": [
      769
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      776,
      779,
      781,
      754
     ]
    },
    "mne.viz.tests.test_3d.src_fname": {
     "line number": [
      757
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      772
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      764
     ]
    },
    "numpy.random.rand": {
     "line number": [
      763
     ]
    },
    "numpy.zeros": {
     "line number": [
      761
     ]
    },
    "sum": {
     "line number": [
      760
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_mixed_sources_plot_surface": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "mne.MixedSourceEstimate": {
     "line number": [
      745
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      731
     ]
    },
    "mne.source_space.read_source_spaces": {
     "line number": [
      735
     ]
    },
    "mne.utils.requires_pysurfer": {
     "line number": [
      730
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      732
     ]
    },
    "mne.viz.tests.test_3d.fwd_fname2": {
     "line number": [
      735
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      729
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      748
     ]
    },
    "numpy.arange": {
     "line number": [
      743
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      741
     ]
    },
    "numpy.sum": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_alignment": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      206
     ]
    },
    "RuntimeError": {
     "line number": [
      297
     ]
    },
    "RuntimeWarning": {
     "line number": [
      229
     ]
    },
    "TypeError": {
     "line number": [
      204,
      323
     ]
    },
    "ValueError": {
     "line number": [
      208,
      306,
      311,
      315,
      319,
      327
     ]
    },
    "all": {
     "line number": [
      255,
      260
     ]
    },
    "dict": {
     "line number": [
      187
     ]
    },
    "isinstance": {
     "line number": [
      291
     ]
    },
    "mne.bem.read_bem_solution": {
     "line number": [
      243,
      267
     ]
    },
    "mne.bem.read_bem_surfaces": {
     "line number": [
      245
     ]
    },
    "mne.convert_forward_solution": {
     "line number": [
      337
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      167
     ]
    },
    "mne.io._digitization.write_dig": {
     "line number": [
      180
     ]
    },
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN": {
     "line number": [
      266
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COORD_MRI": {
     "line number": [
      255,
      260
     ]
    },
    "mne.io.pick.pick_info": {
     "line number": [
      294
     ]
    },
    "mne.io.read_raw_bti": {
     "line number": [
      185
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      189
     ]
    },
    "mne.io.read_raw_kit": {
     "line number": [
      191
     ]
    },
    "mne.io.read_raw_nirx": {
     "line number": [
      343
     ]
    },
    "mne.make_sphere_model": {
     "line number": [
      242,
      278,
      283
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      183
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      333
     ]
    },
    "mne.read_trans": {
     "line number": [
      197
     ]
    },
    "mne.setup_volume_source_space": {
     "line number": [
      279
     ]
    },
    "mne.source_space.read_source_spaces": {
     "line number": [
      184
     ]
    },
    "mne.use_coil_def": {
     "line number": [
      302
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      230,
      270,
      344,
      352
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      168
     ]
    },
    "mne.viz.plot_alignment": {
     "line number": [
      197,
      204,
      206,
      208,
      217,
      219,
      231,
      248,
      252,
      257,
      262,
      271,
      280,
      285,
      298,
      303,
      307,
      312,
      316,
      320,
      324,
      328,
      334,
      338,
      345,
      353
     ]
    },
    "mne.viz.tests.test_3d.coil_3d": {
     "line number": [
      301
     ]
    },
    "mne.viz.tests.test_3d.config_fname": {
     "line number": [
      185
     ]
    },
    "mne.viz.tests.test_3d.ctf_fname": {
     "line number": [
      189
     ]
    },
    "mne.viz.tests.test_3d.data_dir": {
     "line number": [
      331
     ]
    },
    "mne.viz.tests.test_3d.evoked_fname": {
     "line number": [
      183
     ]
    },
    "mne.viz.tests.test_3d.fwd_fname": {
     "line number": [
      331,
      333
     ]
    },
    "mne.viz.tests.test_3d.hs_fname": {
     "line number": [
      185
     ]
    },
    "mne.viz.tests.test_3d.mayavi": {
     "line number": [
      291
     ]
    },
    "mne.viz.tests.test_3d.nirx_fname": {
     "line number": [
      343
     ]
    },
    "mne.viz.tests.test_3d.pdf_fname": {
     "line number": [
      185
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      204,
      206,
      208,
      229,
      297,
      306,
      311,
      315,
      319,
      323,
      327,
      166
     ]
    },
    "mne.viz.tests.test_3d.sqd_fname": {
     "line number": [
      191
     ]
    },
    "mne.viz.tests.test_3d.src_fname": {
     "line number": [
      184,
      222
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      198,
      205,
      207,
      209,
      211,
      222,
      232,
      243,
      245,
      253,
      258,
      263,
      267,
      272,
      286,
      308,
      313,
      317,
      321,
      325,
      329,
      334,
      338
     ]
    },
    "mne.viz.tests.test_3d.trans_fname": {
     "line number": [
      197,
      204,
      206,
      208,
      220,
      232,
      252,
      257,
      262,
      271,
      285,
      307,
      312,
      316,
      320,
      324,
      328,
      335,
      339
     ]
    },
    "open": {
     "line number": [
      300
     ]
    },
    "os.path.join": {
     "line number": [
      173,
      243,
      245,
      267,
      299,
      331
     ]
    },
    "pathlib.Path": {
     "line number": [
      220
     ]
    },
    "str": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_dipole_mri_orthoview": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      529
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      531
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      528
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      509
     ]
    },
    "mne.read_dipole": {
     "line number": [
      516
     ]
    },
    "mne.read_trans": {
     "line number": [
      517
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      510
     ]
    },
    "mne.viz.tests.test_3d.dip_fname": {
     "line number": [
      516
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      529,
      508,
      511
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      519,
      530
     ]
    },
    "mne.viz.tests.test_3d.trans_fname": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_dipole_orientations": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      534
     ]
    },
    "mne.read_dipole": {
     "line number": [
      537
     ]
    },
    "mne.read_trans": {
     "line number": [
      538
     ]
    },
    "mne.viz.tests.test_3d.dip_fname": {
     "line number": [
      537
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      542
     ]
    },
    "mne.viz.tests.test_3d.trans_fname": {
     "line number": [
      538
     ]
    },
    "zip": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_evoked_field": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      156
     ]
    },
    "isinstance": {
     "line number": [
      163
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      147
     ]
    },
    "mne.make_field_map": {
     "line number": [
      157
     ]
    },
    "mne.pick_channels_evoked": {
     "line number": [
      154
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      152
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      148
     ]
    },
    "mne.viz.tests.test_3d.evoked_fname": {
     "line number": [
      152
     ]
    },
    "mne.viz.tests.test_3d.mayavi": {
     "line number": [
      163
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      156,
      149
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      158
     ]
    },
    "mne.viz.tests.test_3d.trans_fname": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_head_positions": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      96,
      97,
      98,
      99
     ]
    },
    "len": {
     "line number": [
      89
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      101
     ]
    },
    "mne.io.read_info": {
     "line number": [
      87
     ]
    },
    "mne.viz.plot_head_positions": {
     "line number": [
      92,
      93,
      95,
      96,
      97,
      98,
      100
     ]
    },
    "mne.viz.tests.test_3d.evoked_fname": {
     "line number": [
      87
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      91,
      96,
      97,
      98,
      99
     ]
    },
    "numpy.arange": {
     "line number": [
      89
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_sensors_connectivity": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      687
     ]
    },
    "ValueError": {
     "line number": [
      690
     ]
    },
    "len": {
     "line number": [
      684
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      672
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      681
     ]
    },
    "mne.pick_types": {
     "line number": [
      682
     ]
    },
    "mne.viz.plot_sensors_connectivity": {
     "line number": [
      688,
      691,
      694
     ]
    },
    "mne.viz.tests.test_3d.data_dir": {
     "line number": [
      677
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      687,
      690,
      671
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      685
     ]
    },
    "os.path.join": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_source_estimates": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      626
     ]
    },
    "RuntimeError": {
     "line number": [
      598,
      638
     ]
    },
    "TypeError": {
     "line number": [
      609,
      635
     ]
    },
    "ValueError": {
     "line number": [
      606,
      614,
      619,
      644,
      659,
      662
     ]
    },
    "dict": {
     "line number": [
      588,
      591,
      607,
      658,
      661,
      665
     ]
    },
    "flat_meth": {
     "line number": [
      636,
      639,
      641,
      645
     ]
    },
    "getattr": {
     "line number": [
      587,
      630
     ]
    },
    "isinstance": {
     "line number": [
      585
     ]
    },
    "meth": {
     "line number": [
      599,
      601,
      607,
      612,
      617,
      620,
      627,
      651,
      660,
      663,
      666
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      571
     ]
    },
    "mne.minimum_norm.inverse.apply_inverse": {
     "line number": [
      583
     ]
    },
    "mne.source_estimate._BaseVolSourceEstimate": {
     "line number": [
      585
     ]
    },
    "mne.utils.requires_pysurfer": {
     "line number": [
      572
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      573
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      582,
      598,
      606,
      609,
      614,
      619,
      626,
      635,
      638,
      644,
      659,
      662,
      570,
      574,
      575
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      588
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_sparse_source_estimates": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      128
     ]
    },
    "int": {
     "line number": [
      118
     ]
    },
    "isinstance": {
     "line number": [
      144
     ]
    },
    "len": {
     "line number": [
      115,
      135
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      121,
      139
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      104
     ]
    },
    "mne.source_space.read_source_spaces": {
     "line number": [
      110
     ]
    },
    "mne.utils.requires_pysurfer": {
     "line number": [
      105
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      106
     ]
    },
    "mne.viz.plot_source_estimates": {
     "line number": [
      124,
      128
     ]
    },
    "mne.viz.plot_sparse_source_estimates": {
     "line number": [
      140
     ]
    },
    "mne.viz.tests.test_3d.mayavi": {
     "line number": [
      144
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      128,
      107
     ]
    },
    "mne.viz.tests.test_3d.src_fname": {
     "line number": [
      110
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      126,
      130
     ]
    },
    "numpy.empty": {
     "line number": [
      138
     ]
    },
    "numpy.int64": {
     "line number": [
      138
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      119
     ]
    },
    "numpy.random.rand": {
     "line number": [
      118
     ]
    },
    "numpy.zeros": {
     "line number": [
      116,
      135
     ]
    },
    "sum": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_process_clim_plot": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      407
     ]
    },
    "TypeError": {
     "line number": [
      386,
      397
     ]
    },
    "ValueError": {
     "line number": [
      389,
      391,
      393,
      395,
      399,
      401
     ]
    },
    "dict": {
     "line number": [
      371,
      382,
      385,
      390,
      392,
      394,
      402
     ]
    },
    "len": {
     "line number": [
      375
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      378
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      365
     ]
    },
    "mne.source_space.read_source_spaces": {
     "line number": [
      370
     ]
    },
    "mne.utils.requires_pysurfer": {
     "line number": [
      366
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      367
     ]
    },
    "mne.viz.plot_source_estimates": {
     "line number": [
      398,
      408
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      386,
      389,
      391,
      393,
      395,
      397,
      399,
      401,
      407,
      364
     ]
    },
    "mne.viz.tests.test_3d.src_fname": {
     "line number": [
      370
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      371
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      376
     ]
    },
    "sum": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_process_clim_round_trip": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      430,
      432,
      443,
      445,
      455,
      457,
      465,
      467
     ]
    },
    "matplotlib.pyplot.get_cmap": {
     "line number": [
      444
     ]
    },
    "mne.viz._3d._get_map_ticks": {
     "line number": [
      438,
      451,
      462,
      472
     ]
    },
    "mne.viz._3d._linearize_map": {
     "line number": [
      437,
      450,
      461,
      471
     ]
    },
    "mne.viz._3d._process_clim": {
     "line number": [
      429,
      435,
      442,
      448,
      456,
      466
     ]
    },
    "mne.viz.mne_analyze_colormap": {
     "line number": [
      431,
      458,
      468
     ]
    },
    "mne.viz.tests.test_3d._assert_mapdata_equal": {
     "line number": [
      434,
      436,
      447,
      449,
      460,
      470
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      439,
      452,
      463,
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_renderer": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "mne.utils.modified_env": {
     "line number": [
      793
     ]
    },
    "mne.utils.run_subprocess": {
     "line number": [
      794
     ]
    },
    "mne.viz.tests.test_3d.sys": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_snapshot_brain_montage": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      561
     ]
    },
    "ValueError": {
     "line number": [
      564,
      567
     ]
    },
    "dict": {
     "line number": [
      557
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      547
     ]
    },
    "mne.io.read_info": {
     "line number": [
      551
     ]
    },
    "mne.utils.traits_test": {
     "line number": [
      548
     ]
    },
    "mne.viz.plot_alignment": {
     "line number": [
      552
     ]
    },
    "mne.viz.snapshot_brain_montage": {
     "line number": [
      561,
      564,
      567
     ]
    },
    "mne.viz.tests.test_3d.evoked_fname": {
     "line number": [
      551
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      561,
      564,
      567
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      553
     ]
    },
    "numpy.vstack": {
     "line number": [
      555
     ]
    },
    "zip": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_stc_mpl": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      488
     ]
    },
    "ValueError": {
     "line number": [
      501,
      503
     ]
    },
    "len": {
     "line number": [
      484
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      505
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      487
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      476
     ]
    },
    "mne.source_space.read_source_spaces": {
     "line number": [
      480
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      477
     ]
    },
    "mne.viz.tests.test_3d.pytest": {
     "line number": [
      488,
      501,
      503
     ]
    },
    "mne.viz.tests.test_3d.src_fname": {
     "line number": [
      480
     ]
    },
    "mne.viz.tests.test_3d.subjects_dir": {
     "line number": [
      489,
      493,
      501,
      503
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      498
     ]
    },
    "numpy.ones": {
     "line number": [
      485
     ]
    },
    "sum": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.trans_fname": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.use_coil_def": {
  "data": {
   "shadows": "mne.use_coil_def"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.write_dig": {
  "data": {
   "shadows": "mne.io._digitization.write_dig"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      23
     ]
    },
    "mne.viz.tests.test_3d_mpl.data_dir": {
     "line number": [
      24,
      25
     ]
    },
    "os.path.join": {
     "line number": [
      24,
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_3d_mpl.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.compute_source_morph": {
  "data": {
   "shadows": "mne.compute_source_morph"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.data_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d_mpl.fwd_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d_mpl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.plot_volume_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_volume_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.requires_dipy": {
  "data": {
   "shadows": "mne.utils.requires_dipy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d_mpl.subjects_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d_mpl.test_plot_volume_source_estimates": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      75
     ]
    },
    "len": {
     "line number": [
      49
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      58
     ]
    },
    "mne.VolVectorSourceEstimate": {
     "line number": [
      54
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      30
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      43
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      60
     ]
    },
    "mne.utils.requires_dipy": {
     "line number": [
      31
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      32
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      33
     ]
    },
    "mne.viz.tests.test_3d_mpl.fwd_fname": {
     "line number": [
      43
     ]
    },
    "mne.viz.tests.test_3d_mpl.pytest": {
     "line number": [
      59,
      75,
      29,
      34
     ]
    },
    "mne.viz.tests.test_3d_mpl.subjects_dir": {
     "line number": [
      62,
      76
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      71
     ]
    },
    "numpy.array": {
     "line number": [
      46
     ]
    },
    "numpy.newaxis": {
     "line number": [
      55
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      51
     ]
    },
    "numpy.tile": {
     "line number": [
      55
     ]
    },
    "sum": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d_mpl.test_plot_volume_source_estimates_morph": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      110
     ]
    },
    "ValueError": {
     "line number": [
      106,
      113
     ]
    },
    "dict": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      90
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      109
     ]
    },
    "mne.VolSourceEstimate": {
     "line number": [
      93
     ]
    },
    "mne.compute_source_morph": {
     "line number": [
      95
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      81
     ]
    },
    "mne.read_forward_solution": {
     "line number": [
      87
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      99
     ]
    },
    "mne.utils.requires_dipy": {
     "line number": [
      82
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      83
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      84
     ]
    },
    "mne.viz.plot_volume_source_estimates": {
     "line number": [
      111
     ]
    },
    "mne.viz.tests.test_3d_mpl.fwd_fname": {
     "line number": [
      87
     ]
    },
    "mne.viz.tests.test_3d_mpl.pytest": {
     "line number": [
      98,
      106,
      110,
      113,
      80
     ]
    },
    "mne.viz.tests.test_3d_mpl.subjects_dir": {
     "line number": [
      96,
      100,
      107,
      112,
      114
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      92
     ]
    },
    "sum": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d_mpl.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.test_circle.circular_layout": {
  "data": {
   "shadows": "mne.viz.circular_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.plot_connectivity_circle": {
  "data": {
   "shadows": "mne.viz.plot_connectivity_circle"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.test_plot_connectivity_circle": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      85,
      87
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      89
     ]
    },
    "mne.viz.circular_layout": {
     "line number": [
      78,
      85,
      87
     ]
    },
    "mne.viz.plot_connectivity_circle": {
     "line number": [
      81
     ]
    },
    "mne.viz.tests.test_circle.pytest": {
     "line number": [
      85,
      87
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs": {
  "data": {
   "symbols_in_volume": {
    "mne.channels.read_layout": {
     "line number": [
      33
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      34
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      396
     ]
    },
    "mne.viz.tests.test_epochs.base_dir": {
     "line number": [
      28,
      29,
      30,
      31
     ]
    },
    "mne.viz.tests.test_epochs.test_base_dir": {
     "line number": [
      35
     ]
    },
    "os.path.dirname": {
     "line number": [
      27
     ]
    },
    "os.path.join": {
     "line number": [
      27,
      28,
      29,
      30,
      31,
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_epochs.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs._get_epochs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      46
     ]
    },
    "events": {
     "line number": [
      41,
      47
     ]
    },
    "int": {
     "line number": [
      45
     ]
    },
    "len": {
     "line number": [
      45
     ]
    },
    "mne.Epochs": {
     "line number": [
      47
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      40
     ]
    },
    "mne.pick_types": {
     "line number": [
      42
     ]
    },
    "mne.read_events": {
     "line number": [
      41
     ]
    },
    "mne.viz.tests.test_epochs.event_name": {
     "line number": [
      41
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      46
     ]
    },
    "mne.viz.tests.test_epochs.raw_fname": {
     "line number": [
      40
     ]
    },
    "numpy.linspace": {
     "line number": [
      45
     ]
    },
    "numpy.round": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.cov_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.ctf_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.event_name": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.evoked_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.layout": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.make_fixed_length_events": {
  "data": {
   "shadows": "mne.event.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.plot_drop_log": {
  "data": {
   "shadows": "mne.viz.plot_drop_log"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.raw_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.test_base_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.test_plot_butterfly": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "events": {
     "line number": [
      287,
      293
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      304
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      293
     ]
    },
    "mne.create_info": {
     "line number": [
      292
     ]
    },
    "numpy.arange": {
     "line number": [
      287
     ]
    },
    "numpy.array": {
     "line number": [
      287
     ]
    },
    "numpy.int64": {
     "line number": [
      288
     ]
    },
    "numpy.ones": {
     "line number": [
      287
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      283
     ]
    },
    "numpy.sin": {
     "line number": [
      286
     ]
    },
    "range": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_drop_log": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      276
     ]
    },
    "ValueError": {
     "line number": [
      269
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      278
     ]
    },
    "mne.viz.plot_drop_log": {
     "line number": [
      272,
      273,
      274,
      277
     ]
    },
    "mne.viz.tests.test_epochs._get_epochs": {
     "line number": [
      268
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      269,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_basic": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      67,
      72,
      77,
      83
     ]
    },
    "TypeError": {
     "line number": [
      90,
      95
     ]
    },
    "ValueError": {
     "line number": [
      92,
      98,
      117
     ]
    },
    "len": {
     "line number": [
      56,
      64,
      87,
      88,
      93,
      124,
      133,
      140,
      155
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      61,
      69,
      74,
      79,
      85,
      104,
      116,
      118,
      134,
      136,
      156
     ]
    },
    "mne.read_cov": {
     "line number": [
      63
     ]
    },
    "mne.viz.tests.test_epochs._get_epochs": {
     "line number": [
      55,
      138
     ]
    },
    "mne.viz.tests.test_epochs.cov_fname": {
     "line number": [
      63
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      67,
      72,
      77,
      83,
      90,
      92,
      95,
      98,
      109,
      117
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      145,
      149
     ]
    },
    "range": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_ctf": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      361,
      374
     ]
    },
    "mne.Epochs": {
     "line number": [
      359
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      351
     ]
    },
    "mne.event.make_fixed_length_events": {
     "line number": [
      358
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      354
     ]
    },
    "mne.viz.tests.test_epochs.ctf_fname": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_image": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      204,
      258
     ]
    },
    "TypeError": {
     "line number": [
      207
     ]
    },
    "ValueError": {
     "line number": [
      210,
      216,
      219,
      222,
      225,
      231,
      240,
      244,
      248,
      252,
      255,
      261
     ]
    },
    "dict": {
     "line number": [
      187,
      211,
      211,
      214,
      217,
      227,
      234,
      235,
      236,
      237,
      245,
      249,
      250
     ]
    },
    "len": {
     "line number": [
      180,
      181,
      183,
      184,
      202
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      177,
      190,
      192,
      199,
      212,
      229,
      242,
      263
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      223
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      181,
      184
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      195,
      226,
      232,
      238
     ]
    },
    "mne.viz.tests.test_epochs._get_epochs": {
     "line number": [
      178
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      204,
      207,
      210,
      216,
      219,
      222,
      225,
      231,
      240,
      244,
      248,
      252,
      255,
      258,
      261
     ]
    },
    "numpy.arange": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_nodata": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      164
     ]
    },
    "mne.EpochsArray": {
     "line number": [
      163
     ]
    },
    "mne.create_info": {
     "line number": [
      162
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      164
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_psd_epochs": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      318,
      320
     ]
    },
    "RuntimeError": {
     "line number": [
      315
     ]
    },
    "UserWarning": {
     "line number": [
      338
     ]
    },
    "all": {
     "line number": [
      330,
      331
     ]
    },
    "len": {
     "line number": [
      325
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      322,
      340
     ]
    },
    "mne.viz.tests.test_epochs._get_epochs": {
     "line number": [
      309
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      315,
      318,
      320,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_psd_epochs_ctf": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      383
     ]
    },
    "UserWarning": {
     "line number": [
      389
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      393
     ]
    },
    "mne.Epochs": {
     "line number": [
      382
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      377
     ]
    },
    "mne.event.make_fixed_length_events": {
     "line number": [
      381
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      380
     ]
    },
    "mne.viz.tests.test_epochs.ctf_fname": {
     "line number": [
      380
     ]
    },
    "mne.viz.tests.test_epochs.pytest": {
     "line number": [
      383,
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_psdtopo_nirs": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "len": {
     "line number": [
      347
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      489
     ]
    },
    "mne.viz.tests.test_evoked.base_dir": {
     "line number": [
      33,
      34,
      35,
      36,
      37
     ]
    },
    "os.path.dirname": {
     "line number": [
      32
     ]
    },
    "os.path.join": {
     "line number": [
      32,
      33,
      34,
      35,
      36,
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_evoked.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._get_amplitudes": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      163
     ]
    },
    "numpy.array": {
     "line number": [
      162
     ]
    },
    "numpy.ndarray": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._get_epochs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "events": {
     "line number": [
      50,
      51
     ]
    },
    "mne.Epochs": {
     "line number": [
      51
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      48
     ]
    },
    "mne.read_events": {
     "line number": [
      50
     ]
    },
    "mne.viz.tests.test_evoked.default_picks": {
     "line number": [
      46
     ]
    },
    "mne.viz.tests.test_evoked.event_name": {
     "line number": [
      50
     ]
    },
    "mne.viz.tests.test_evoked.raw_fname": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._get_epochs_delayed_ssp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      62
     ]
    },
    "events": {
     "line number": [
      61,
      63
     ]
    },
    "mne.Epochs": {
     "line number": [
      63
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      60
     ]
    },
    "mne.read_events": {
     "line number": [
      61
     ]
    },
    "mne.viz.tests.test_evoked.default_picks": {
     "line number": [
      64
     ]
    },
    "mne.viz.tests.test_evoked.event_name": {
     "line number": [
      61
     ]
    },
    "mne.viz.tests.test_evoked.raw_fname": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._parametric_ci": {
  "data": {
   "shadows": "mne.stats.parametric._parametric_ci"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.base_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.cov_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.default_picks": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.event_name": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.evoked_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.gridspec": {
  "data": {
   "shadows": "matplotlib.gridspec"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.plot_compare_evokeds": {
  "data": {
   "shadows": "mne.viz.plot_compare_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.plot_evoked_white": {
  "data": {
   "shadows": "mne.viz.plot_evoked_white"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.raw_sss_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.sel": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.test_constrained_layout": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      156
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      150
     ]
    },
    "mne.utils.requires_version": {
     "line number": [
      147
     ]
    },
    "mne.viz.tests.test_evoked.evoked_fname": {
     "line number": [
      152
     ]
    },
    "mne.viz.tests.test_evoked.mne": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_compare_evokeds": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      362
     ]
    },
    "TypeError": {
     "line number": [
      338,
      366,
      372,
      383,
      392
     ]
    },
    "ValueError": {
     "line number": [
      368,
      370,
      379,
      387,
      390,
      394,
      425
     ]
    },
    "dict": {
     "line number": [
      344,
      349,
      349,
      349,
      351,
      356,
      357,
      369,
      377,
      377,
      381,
      381,
      385,
      385,
      385,
      385,
      389,
      389
     ]
    },
    "enumerate": {
     "line number": [
      318
     ]
    },
    "len": {
     "line number": [
      304,
      400,
      400,
      415,
      422
     ]
    },
    "list": {
     "line number": [
      352,
      411
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      355
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      333,
      345,
      353,
      360,
      364,
      376,
      396,
      427
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG_CSD": {
     "line number": [
      404
     ]
    },
    "mne.io.constants.FIFF.FIFF_UNIT_V_M2": {
     "line number": [
      405
     ]
    },
    "mne.stats.parametric._parametric_ci": {
     "line number": [
      412
     ]
    },
    "mne.viz.plot_compare_evokeds": {
     "line number": [
      303,
      311,
      319,
      320,
      321,
      337,
      339,
      341,
      344,
      347,
      350,
      352,
      356,
      357,
      358,
      363,
      367,
      369,
      371,
      373,
      380,
      384,
      388,
      391,
      393,
      395,
      398,
      406,
      409,
      411,
      416,
      419,
      423,
      426
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs": {
     "line number": [
      301,
      402
     ]
    },
    "mne.viz.tests.test_evoked.pytest": {
     "line number": [
      338,
      362,
      366,
      368,
      370,
      372,
      379,
      383,
      387,
      390,
      392,
      394,
      425
     ]
    },
    "numpy.allclose": {
     "line number": [
      326,
      329
     ]
    },
    "numpy.arange": {
     "line number": [
      402
     ]
    },
    "numpy.min": {
     "line number": [
      308
     ]
    },
    "numpy.stack": {
     "line number": [
      336
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      418
     ]
    },
    "range": {
     "line number": [
      352
     ]
    },
    "zip": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_compare_evokeds_neuromag122": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "mne.io.constants.FIFF.FIFFV_COIL_NM_122": {
     "line number": [
      438
     ]
    },
    "mne.viz.tests.test_evoked.evoked_fname": {
     "line number": [
      432
     ]
    },
    "mne.viz.tests.test_evoked.mne": {
     "line number": [
      432,
      441
     ]
    },
    "range": {
     "line number": [
      436
     ]
    },
    "zip": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_ctf": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "events": {
     "line number": [
      451,
      456
     ]
    },
    "get_axes_midpoints": {
     "line number": [
      482,
      485
     ]
    },
    "len": {
     "line number": [
      470
     ]
    },
    "matplotlib.gridspec.GridSpec": {
     "line number": [
      468
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      465
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      447
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      444
     ]
    },
    "mne.viz.tests.test_evoked.mne": {
     "line number": [
      450,
      454,
      456,
      460
     ]
    },
    "mne.viz.tests.test_evoked.raw_fname": {
     "line number": [
      448,
      450
     ]
    },
    "numpy.array": {
     "line number": [
      451
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      486
     ]
    },
    "os.path.join": {
     "line number": [
      447,
      448
     ]
    },
    "range": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_ctf.get_axes_midpoints": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "list": {
     "line number": [
      475
     ]
    },
    "numpy.array": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      116,
      119,
      121
     ]
    },
    "TypeError": {
     "line number": [
      135
     ]
    },
    "ValueError": {
     "line number": [
      127
     ]
    },
    "dict": {
     "line number": [
      112
     ]
    },
    "len": {
     "line number": [
      99
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      123,
      136,
      139
     ]
    },
    "mne.utils.catch_logging": {
     "line number": [
      142
     ]
    },
    "mne.viz.tests.test_evoked._get_amplitudes": {
     "line number": [
      98
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs": {
     "line number": [
      93
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs_delayed_ssp": {
     "line number": [
      113
     ]
    },
    "mne.viz.tests.test_evoked.pytest": {
     "line number": [
      116,
      119,
      121,
      127,
      135,
      90
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      104,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked_cov": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      78
     ]
    },
    "RuntimeWarning": {
     "line number": [
      85
     ]
    },
    "TypeError": {
     "line number": [
      76
     ]
    },
    "events": {
     "line number": [
      81,
      82
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      87
     ]
    },
    "mne.Epochs": {
     "line number": [
      82
     ]
    },
    "mne.compute_covariance": {
     "line number": [
      83
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      80
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      81
     ]
    },
    "mne.read_cov": {
     "line number": [
      73
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs": {
     "line number": [
      72
     ]
    },
    "mne.viz.tests.test_evoked.cov_fname": {
     "line number": [
      73
     ]
    },
    "mne.viz.tests.test_evoked.default_picks": {
     "line number": [
      82
     ]
    },
    "mne.viz.tests.test_evoked.pytest": {
     "line number": [
      76,
      78,
      85
     ]
    },
    "mne.viz.tests.test_evoked.raw_sss_fname": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked_image": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      234
     ]
    },
    "ValueError": {
     "line number": [
      224,
      226,
      227,
      237,
      244,
      259
     ]
    },
    "bool": {
     "line number": [
      232
     ]
    },
    "dict": {
     "line number": [
      256,
      256,
      258,
      258
     ]
    },
    "matplotlib.pyplot.axes": {
     "line number": [
      256
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      242,
      257
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      250
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs": {
     "line number": [
      218
     ]
    },
    "mne.viz.tests.test_evoked.pytest": {
     "line number": [
      224,
      226,
      227,
      234,
      237,
      244,
      259
     ]
    },
    "mne.viz.tests.test_evoked.sel": {
     "line number": [
      256
     ]
    },
    "numpy.errstate": {
     "line number": [
      225
     ]
    },
    "numpy.nan": {
     "line number": [
      223
     ]
    },
    "numpy.ones": {
     "line number": [
      232
     ]
    },
    "str": {
     "line number": [
      252
     ]
    },
    "zip": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked_reconstruct": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      211
     ]
    },
    "len": {
     "line number": [
      177,
      180,
      185,
      185,
      194,
      194,
      199,
      199
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      213
     ]
    },
    "mne.compute_proj_evoked": {
     "line number": [
      192
     ]
    },
    "mne.read_cov": {
     "line number": [
      210
     ]
    },
    "mne.viz.tests.test_evoked._get_amplitudes": {
     "line number": [
      184,
      189,
      196,
      198
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs": {
     "line number": [
      174
     ]
    },
    "mne.viz.tests.test_evoked.cov_fname": {
     "line number": [
      210
     ]
    },
    "mne.viz.tests.test_evoked.default_picks": {
     "line number": [
      168
     ]
    },
    "mne.viz.tests.test_evoked.pytest": {
     "line number": [
      211,
      167
     ]
    },
    "numpy.arange": {
     "line number": [
      169,
      170
     ]
    },
    "numpy.dot": {
     "line number": [
      203
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      200,
      201,
      202
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_white": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      273,
      275,
      285,
      293
     ]
    },
    "dict": {
     "line number": [
      290,
      290,
      291
     ]
    },
    "len": {
     "line number": [
      282
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      278,
      296
     ]
    },
    "mne.read_cov": {
     "line number": [
      265
     ]
    },
    "mne.viz.plot_evoked_white": {
     "line number": [
      281,
      284,
      286
     ]
    },
    "mne.viz.tests.test_evoked._get_epochs": {
     "line number": [
      268
     ]
    },
    "mne.viz.tests.test_evoked.cov_fname": {
     "line number": [
      265
     ]
    },
    "mne.viz.tests.test_evoked.pytest": {
     "line number": [
      273,
      275,
      285,
      293
     ]
    },
    "numpy.arange": {
     "line number": [
      290
     ]
    },
    "numpy.array": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      385
     ]
    },
    "mne.viz.tests.test_ica.base_dir": {
     "line number": [
      21,
      22,
      23,
      24,
      26
     ]
    },
    "os.path.dirname": {
     "line number": [
      20
     ]
    },
    "os.path.join": {
     "line number": [
      20,
      21,
      22,
      23,
      24,
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_ica.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._create_properties_layout": {
  "data": {
   "shadows": "mne.viz.ica._create_properties_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._get_epochs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      49
     ]
    },
    "events": {
     "line number": [
      47,
      50
     ]
    },
    "mne.Epochs": {
     "line number": [
      50
     ]
    },
    "mne.viz.tests.test_ica._get_events": {
     "line number": [
      47
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      48
     ]
    },
    "mne.viz.tests.test_ica._get_raw": {
     "line number": [
      46
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_events": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "mne.read_events": {
     "line number": [
      36
     ]
    },
    "mne.viz.tests.test_ica.event_name": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_picks": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_raw": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "mne.io.read_raw_fif": {
     "line number": [
      31
     ]
    },
    "mne.viz.tests.test_ica.raw_fname": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.base_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.cov_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.create_ecg_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_ecg_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.create_eog_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_eog_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.event_name": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.evoked_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.plot_ica_properties": {
  "data": {
   "shadows": "mne.viz.ica.plot_ica_properties"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.raw_ctf_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.raw_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.test_plot_ica_components": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      104
     ]
    },
    "RuntimeWarning": {
     "line number": [
      63
     ]
    },
    "int": {
     "line number": [
      78
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      69,
      106
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      73,
      93
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      60
     ]
    },
    "mne.read_cov": {
     "line number": [
      60
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      54
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      62
     ]
    },
    "mne.viz.tests.test_ica._get_raw": {
     "line number": [
      59
     ]
    },
    "mne.viz.tests.test_ica.cov_fname": {
     "line number": [
      60
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      63,
      104
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      83,
      86,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_overlay": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      280,
      283,
      286,
      300
     ]
    },
    "TypeError": {
     "line number": [
      289,
      290
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      292,
      303
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      295
     ]
    },
    "mne.pick_types": {
     "line number": [
      297
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      276,
      298
     ]
    },
    "mne.preprocessing.create_ecg_epochs": {
     "line number": [
      284,
      301
     ]
    },
    "mne.preprocessing.create_eog_epochs": {
     "line number": [
      287
     ]
    },
    "mne.read_cov": {
     "line number": [
      276
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      271
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      275
     ]
    },
    "mne.viz.tests.test_ica._get_raw": {
     "line number": [
      274
     ]
    },
    "mne.viz.tests.test_ica.cov_fname": {
     "line number": [
      276
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      280,
      283,
      286,
      289,
      290,
      300,
      270
     ]
    },
    "mne.viz.tests.test_ica.raw_ctf_fname": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_properties": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      127
     ]
    },
    "TypeError": {
     "line number": [
      143,
      144,
      145,
      146,
      147,
      156
     ]
    },
    "UserWarning": {
     "line number": [
      166,
      177,
      188,
      195
     ]
    },
    "ValueError": {
     "line number": [
      149,
      158
     ]
    },
    "dict": {
     "line number": [
      120,
      134
     ]
    },
    "events": {
     "line number": [
      116,
      122
     ]
    },
    "len": {
     "line number": [
      132,
      155
     ]
    },
    "list": {
     "line number": [
      143
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      141,
      159,
      169,
      182,
      201
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      151
     ]
    },
    "mne.Annotations": {
     "line number": [
      185
     ]
    },
    "mne.Epochs": {
     "line number": [
      122
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      125,
      165,
      175
     ]
    },
    "mne.read_cov": {
     "line number": [
      125
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      110
     ]
    },
    "mne.viz.ica._create_properties_layout": {
     "line number": [
      131
     ]
    },
    "mne.viz.ica.plot_ica_properties": {
     "line number": [
      146,
      156
     ]
    },
    "mne.viz.tests.test_ica._get_events": {
     "line number": [
      116
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      117
     ]
    },
    "mne.viz.tests.test_ica._get_raw": {
     "line number": [
      114,
      163,
      186
     ]
    },
    "mne.viz.tests.test_ica.cov_fname": {
     "line number": [
      125
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      127,
      143,
      144,
      145,
      146,
      147,
      149,
      156,
      158,
      166,
      173,
      177,
      180,
      188,
      195,
      109
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      132,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_scores": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      313
     ]
    },
    "ValueError": {
     "line number": [
      343,
      346
     ]
    },
    "dict": {
     "line number": [
      319
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      347
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      311
     ]
    },
    "mne.read_cov": {
     "line number": [
      311
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      306
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      310
     ]
    },
    "mne.viz.tests.test_ica._get_raw": {
     "line number": [
      309
     ]
    },
    "mne.viz.tests.test_ica.cov_fname": {
     "line number": [
      311
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      313,
      342,
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_sources": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      242,
      246
     ]
    },
    "ValueError": {
     "line number": [
      265
     ]
    },
    "dict": {
     "line number": [
      262
     ]
    },
    "len": {
     "line number": [
      227,
      229,
      237,
      238
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      220,
      267
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      227,
      229
     ]
    },
    "mne.Annotations": {
     "line number": [
      235
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      207
     ]
    },
    "mne.pick_types": {
     "line number": [
      211
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      213
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      204
     ]
    },
    "mne.viz.tests.test_ica._get_epochs": {
     "line number": [
      209
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      208
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      242,
      246,
      265
     ]
    },
    "mne.viz.tests.test_ica.raw_fname": {
     "line number": [
      207
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      228,
      255,
      257
     ]
    },
    "numpy.int64": {
     "line number": [
      223
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_instance_components": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      357
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      370,
      382
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      355
     ]
    },
    "mne.read_cov": {
     "line number": [
      355
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      350
     ]
    },
    "mne.viz.tests.test_ica._get_epochs": {
     "line number": [
      371
     ]
    },
    "mne.viz.tests.test_ica._get_picks": {
     "line number": [
      354
     ]
    },
    "mne.viz.tests.test_ica._get_raw": {
     "line number": [
      353
     ]
    },
    "mne.viz.tests.test_ica.cov_fname": {
     "line number": [
      355
     ]
    },
    "mne.viz.tests.test_ica.pytest": {
     "line number": [
      357
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      366,
      368,
      379,
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      29
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      256
     ]
    },
    "mne.viz.tests.test_misc.base_dir": {
     "line number": [
      38,
      39,
      40
     ]
    },
    "mne.viz.tests.test_misc.data_path": {
     "line number": [
      30,
      32,
      34,
      35
     ]
    },
    "mne.viz.tests.test_misc.subjects_dir": {
     "line number": [
      31
     ]
    },
    "os.path.dirname": {
     "line number": [
      37
     ]
    },
    "os.path.join": {
     "line number": [
      30,
      31,
      32,
      34,
      35,
      37,
      38,
      39,
      40
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_misc.CrossSpectralDensity": {
  "data": {
   "shadows": "mne.time_frequency.CrossSpectralDensity"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc._get_color_list": {
  "data": {
   "shadows": "mne.viz.utils._get_color_list"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc._get_events": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "mne.read_events": {
     "line number": [
      50
     ]
    },
    "mne.viz.tests.test_misc.event_fname": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc._get_raw": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "mne.io.read_raw_fif": {
     "line number": [
      45
     ]
    },
    "mne.viz.tests.test_misc.raw_fname": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc._handle_event_colors": {
  "data": {
   "shadows": "mne.viz.misc._handle_event_colors"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.base_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.cov_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.create_filter": {
  "data": {
   "shadows": "mne.filter.create_filter"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.data_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.dip_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.event_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.evoked_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.inv_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_bem": {
  "data": {
   "shadows": "mne.viz.plot_bem"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_csd": {
  "data": {
   "shadows": "mne.viz.plot_csd"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_events": {
  "data": {
   "shadows": "mne.viz.plot_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_filter": {
  "data": {
   "shadows": "mne.viz.plot_filter"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_snr_estimate": {
  "data": {
   "shadows": "mne.viz.plot_snr_estimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_source_spectrogram": {
  "data": {
   "shadows": "mne.viz.plot_source_spectrogram"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.raw_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.src_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.subjects_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.test_event_colors": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      148,
      152,
      154
     ]
    },
    "events": {
     "line number": [
      145,
      146
     ]
    },
    "mne.pick_events": {
     "line number": [
      145
     ]
    },
    "mne.viz.misc._handle_event_colors": {
     "line number": [
      148,
      152
     ]
    },
    "mne.viz.tests.test_misc._get_events": {
     "line number": [
      145
     ]
    },
    "mne.viz.utils._get_color_list": {
     "line number": [
      149
     ]
    },
    "set": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_bem": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      121
     ]
    },
    "ValueError": {
     "line number": [
      123,
      126,
      138
     ]
    },
    "len": {
     "line number": [
      130,
      131,
      134,
      137
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      117
     ]
    },
    "mne.utils.requires_nibabel": {
     "line number": [
      118
     ]
    },
    "mne.viz.plot_bem": {
     "line number": [
      122,
      124,
      127,
      128,
      132,
      135,
      139
     ]
    },
    "mne.viz.tests.test_misc.inv_fname": {
     "line number": [
      140
     ]
    },
    "mne.viz.tests.test_misc.pytest": {
     "line number": [
      121,
      123,
      126,
      138
     ]
    },
    "mne.viz.tests.test_misc.src_fname": {
     "line number": [
      136
     ]
    },
    "mne.viz.tests.test_misc.subjects_dir": {
     "line number": [
      122,
      124,
      127,
      128,
      132,
      135,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_cov": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      112
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      114
     ]
    },
    "mne.read_cov": {
     "line number": [
      111
     ]
    },
    "mne.viz.tests.test_misc._get_raw": {
     "line number": [
      110
     ]
    },
    "mne.viz.tests.test_misc.cov_fname": {
     "line number": [
      111
     ]
    },
    "mne.viz.tests.test_misc.pytest": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_csd": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      253
     ]
    },
    "mne.time_frequency.CrossSpectralDensity": {
     "line number": [
      248
     ]
    },
    "mne.viz.plot_csd": {
     "line number": [
      251,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_dipole_amplitudes": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      243
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      238
     ]
    },
    "mne.read_dipole": {
     "line number": [
      241
     ]
    },
    "mne.viz.tests.test_misc.dip_fname": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_events": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      188
     ]
    },
    "RuntimeWarning": {
     "line number": [
      170,
      174,
      177,
      181,
      192,
      195
     ]
    },
    "ValueError": {
     "line number": [
      185,
      202
     ]
    },
    "events": {
     "line number": [
      164,
      165,
      167,
      169,
      171,
      175,
      178,
      182,
      186,
      189,
      193,
      196,
      198,
      198,
      198,
      199,
      200
     ]
    },
    "len": {
     "line number": [
      199
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      204
     ]
    },
    "mne.viz.plot_events": {
     "line number": [
      165,
      167,
      169,
      171,
      175,
      178,
      182,
      186,
      189,
      193,
      196,
      200,
      203
     ]
    },
    "mne.viz.tests.test_misc._get_events": {
     "line number": [
      164
     ]
    },
    "mne.viz.tests.test_misc._get_raw": {
     "line number": [
      163
     ]
    },
    "mne.viz.tests.test_misc.pytest": {
     "line number": [
      170,
      174,
      177,
      181,
      185,
      188,
      192,
      195,
      202
     ]
    },
    "numpy.empty": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_filter": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      92,
      103
     ]
    },
    "dict": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      74,
      78,
      82,
      86,
      90,
      96,
      100
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      61,
      63,
      66,
      68,
      72,
      75,
      79,
      83,
      87,
      91,
      101
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      94,
      97,
      102
     ]
    },
    "mne.filter.create_filter": {
     "line number": [
      59,
      64,
      69
     ]
    },
    "mne.viz.plot_filter": {
     "line number": [
      60,
      62,
      65,
      67,
      71,
      73,
      76,
      80,
      84,
      88,
      93,
      95,
      98,
      104
     ]
    },
    "mne.viz.tests.test_misc.pytest": {
     "line number": [
      92,
      103
     ]
    },
    "numpy.zeros": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_snr": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      235
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      229
     ]
    },
    "mne.minimum_norm.read_inverse_operator": {
     "line number": [
      232
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      233
     ]
    },
    "mne.viz.plot_snr_estimate": {
     "line number": [
      234
     ]
    },
    "mne.viz.tests.test_misc.evoked_fname": {
     "line number": [
      233
     ]
    },
    "mne.viz.tests.test_misc.inv_fname": {
     "line number": [
      232
     ]
    },
    "mne.viz.tests.test_misc.pytest": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_source_spectrogram": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      220,
      221,
      223
     ]
    },
    "len": {
     "line number": [
      216
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      225
     ]
    },
    "mne.SourceEstimate": {
     "line number": [
      218
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      207
     ]
    },
    "mne.read_source_spaces": {
     "line number": [
      210
     ]
    },
    "mne.viz.plot_source_spectrogram": {
     "line number": [
      219,
      220,
      221,
      223
     ]
    },
    "mne.viz.tests.test_misc.pytest": {
     "line number": [
      220,
      221,
      223
     ]
    },
    "mne.viz.tests.test_misc.subjects_dir": {
     "line number": [
      210
     ]
    },
    "numpy.ones": {
     "line number": [
      217
     ]
    },
    "os.path.join": {
     "line number": [
      210
     ]
    },
    "sum": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage": {
  "data": {
   "symbols_in_volume": {
    "mne.viz.tests.test_montage.io_dir": {
     "line number": [
      23
     ]
    },
    "mne.viz.tests.test_montage.p_dir": {
     "line number": [
      18,
      19,
      20
     ]
    },
    "os.path.dirname": {
     "line number": [
      17,
      22
     ]
    },
    "os.path.join": {
     "line number": [
      17,
      18,
      19,
      20,
      22,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_montage.elp": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.fif_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.hpi": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.hsp": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.io_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.p_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.point_names": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.read_dig_fif": {
  "data": {
   "shadows": "mne.channels.read_dig_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.test_plot_defect_montage": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "mne.channels.make_standard_montage": {
     "line number": [
      65
     ]
    },
    "mne.viz.tests.test_montage.pytest": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_montage.test_plot_digmontage": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      77
     ]
    },
    "list": {
     "line number": [
      77
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      81
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      76
     ]
    },
    "numpy.eye": {
     "line number": [
      77
     ]
    },
    "zip": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_montage.test_plot_montage": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      46
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      30,
      32,
      34,
      36,
      38
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      41
     ]
    },
    "mne.channels.make_standard_montage": {
     "line number": [
      28
     ]
    },
    "mne.channels.read_dig_fif": {
     "line number": [
      48
     ]
    },
    "mne.viz.tests.test_montage.fif_fname": {
     "line number": [
      48
     ]
    },
    "mne.viz.tests.test_montage.pytest": {
     "line number": [
      46
     ]
    },
    "numpy.full": {
     "line number": [
      42,
      43
     ]
    },
    "repr": {
     "line number": [
      45,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw": {
  "data": {
   "symbols_in_volume": {
    "mne.datasets.testing.data_path": {
     "line number": [
      22
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      519
     ]
    },
    "mne.viz.tests.test_raw.base_dir": {
     "line number": [
      26,
      27,
      28
     ]
    },
    "mne.viz.tests.test_raw.ctf_dir": {
     "line number": [
      23
     ]
    },
    "os.path.dirname": {
     "line number": [
      25
     ]
    },
    "os.path.join": {
     "line number": [
      22,
      23,
      25,
      26,
      27,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_raw.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._annotation_helper": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      50
     ]
    },
    "events": {
     "line number": [
      54,
      55,
      57,
      59,
      61
     ]
    },
    "len": {
     "line number": [
      51,
      57,
      62,
      65,
      68,
      84,
      85,
      86,
      88,
      114,
      115,
      116,
      118,
      120,
      122,
      129,
      130,
      131,
      135,
      140,
      141,
      143,
      145
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      52,
      146
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      70,
      75
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      62,
      65
     ]
    },
    "mne.viz.tests.test_raw.matplotlib": {
     "line number": [
      50
     ]
    },
    "mne.viz.utils._annotation_radio_clicked": {
     "line number": [
      77
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      81,
      82,
      83,
      94,
      96,
      99,
      100,
      101,
      107,
      108,
      109,
      125,
      126,
      127,
      137
     ]
    },
    "mne.viz.utils._sync_onset": {
     "line number": [
      90
     ]
    },
    "numpy.array": {
     "line number": [
      55
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      91,
      92,
      105,
      112,
      113,
      133,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._annotation_radio_clicked": {
  "data": {
   "shadows": "mne.viz.utils._annotation_radio_clicked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._get_events": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "mne.read_events": {
     "line number": [
      44
     ]
    },
    "mne.viz.tests.test_raw.event_name": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._get_raw": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      35
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      33
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      35
     ]
    },
    "mne.viz.tests.test_raw.raw_fname": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._proj_status": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "mne.viz.tests.test_raw.matplotlib": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._sync_onset": {
  "data": {
   "shadows": "mne.viz.utils._sync_onset"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.cov_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.ctf_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.ctf_fname_continuous": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.event_name": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plot_raw": {
  "data": {
   "shadows": "mne.viz.plot_raw"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plot_sensors": {
  "data": {
   "shadows": "mne.viz.plot_sensors"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.test_plot_annotations": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      348
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      351
     ]
    },
    "mne.Annotations": {
     "line number": [
      347
     ]
    },
    "mne.viz.tests.test_raw._annotation_helper": {
     "line number": [
      344,
      345,
      350
     ]
    },
    "mne.viz.tests.test_raw._get_raw": {
     "line number": [
      342
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_misc_auto": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      337
     ]
    },
    "mne.create_info": {
     "line number": [
      335
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      335
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_filtered": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      358,
      360,
      362,
      364
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      369
     ]
    },
    "mne.viz.tests.test_raw._get_raw": {
     "line number": [
      357
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      358,
      360,
      362,
      364,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_psd": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      403
     ]
    },
    "UserWarning": {
     "line number": [
      409
     ]
    },
    "ValueError": {
     "line number": [
      386,
      390,
      435,
      439
     ]
    },
    "len": {
     "line number": [
      401,
      453
     ]
    },
    "matplotlib.pyplot.axes": {
     "line number": [
      384,
      389
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      383,
      388,
      392,
      395,
      399,
      432,
      447,
      454,
      462
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      397
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      393
     ]
    },
    "mne.Annotations": {
     "line number": [
      429
     ]
    },
    "mne.create_info": {
     "line number": [
      458
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      459
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      443
     ]
    },
    "mne.pick_types": {
     "line number": [
      378,
      444,
      460
     ]
    },
    "mne.viz.tests.test_raw._get_raw": {
     "line number": [
      374,
      428
     ]
    },
    "mne.viz.tests.test_raw.itertools": {
     "line number": [
      407
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      386,
      390,
      403,
      409,
      435,
      439
     ]
    },
    "mne.viz.tests.test_raw.raw_fname": {
     "line number": [
      443
     ]
    },
    "numpy.random.rand": {
     "line number": [
      457
     ]
    },
    "numpy.zeros": {
     "line number": [
      402
     ]
    },
    "range": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_traces": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      255
     ]
    },
    "RuntimeWarning": {
     "line number": [
      259,
      295
     ]
    },
    "TypeError": {
     "line number": [
      256
     ]
    },
    "dict": {
     "line number": [
      189
     ]
    },
    "events": {
     "line number": [
      181,
      184,
      245,
      261
     ]
    },
    "hasattr": {
     "line number": [
      301
     ]
    },
    "isinstance": {
     "line number": [
      189,
      222
     ]
    },
    "len": {
     "line number": [
      183,
      186,
      195,
      210,
      214,
      264
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      182,
      262,
      290,
      312
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      215,
      274,
      300
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      183,
      186,
      210,
      214,
      215,
      299
     ]
    },
    "mne.Annotations": {
     "line number": [
      257,
      293
     ]
    },
    "mne.utils._dt_to_stamp": {
     "line number": [
      292
     ]
    },
    "mne.viz.plot_raw": {
     "line number": [
      245,
      252,
      261
     ]
    },
    "mne.viz.tests.test_raw._get_events": {
     "line number": [
      181
     ]
    },
    "mne.viz.tests.test_raw._get_raw": {
     "line number": [
      179
     ]
    },
    "mne.viz.tests.test_raw._proj_status": {
     "line number": [
      221,
      225,
      227,
      230,
      235
     ]
    },
    "mne.viz.tests.test_raw.matplotlib": {
     "line number": [
      222
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      255,
      256,
      259,
      266,
      270,
      295,
      297,
      309
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      197,
      198,
      199,
      200,
      201,
      204,
      207,
      212,
      213,
      224,
      226,
      228,
      229,
      232,
      233,
      271,
      273,
      276,
      282,
      283,
      285,
      287
     ]
    },
    "numpy.arange": {
     "line number": [
      264,
      298
     ]
    },
    "numpy.array": {
     "line number": [
      223
     ]
    },
    "numpy.nan": {
     "line number": [
      306
     ]
    },
    "zip": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_white": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      320
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      315
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      318
     ]
    },
    "mne.viz.tests.test_raw.cov_fname": {
     "line number": [
      319
     ]
    },
    "mne.viz.tests.test_raw.raw_fname": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_ref_meg": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      329
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      328
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      323
     ]
    },
    "mne.io.read_raw_ctf": {
     "line number": [
      326
     ]
    },
    "mne.viz.tests.test_raw.ctf_fname_continuous": {
     "line number": [
      326
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_sensors": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      515
     ]
    },
    "TypeError": {
     "line number": [
      479
     ]
    },
    "ValueError": {
     "line number": [
      478,
      480
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      468,
      473,
      481,
      512
     ]
    },
    "matplotlib.pyplot.draw": {
     "line number": [
      492
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      474
     ]
    },
    "mne.viz.plot_sensors": {
     "line number": [
      479,
      480
     ]
    },
    "mne.viz.tests.test_raw._get_raw": {
     "line number": [
      467
     ]
    },
    "mne.viz.tests.test_raw.pytest": {
     "line number": [
      478,
      479,
      480,
      515
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      470,
      486,
      487,
      491,
      494,
      495,
      497,
      506,
      508,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_scale_bar": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "len": {
     "line number": [
      165,
      168
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      174
     ]
    },
    "mne.create_info": {
     "line number": [
      161
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      162
     ]
    },
    "numpy.arange": {
     "line number": [
      157
     ]
    },
    "numpy.array": {
     "line number": [
      160
     ]
    },
    "numpy.pi": {
     "line number": [
      158
     ]
    },
    "numpy.sin": {
     "line number": [
      158
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      173
     ]
    },
    "zip": {
     "line number": [
      166,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo": {
  "data": {
   "symbols_in_volume": {
    "mne.channels.read_layout": {
     "line number": [
      38
     ]
    },
    "mne.utils.run_tests_if_main": {
     "line number": [
      294
     ]
    },
    "mne.viz.tests.test_topo.base_dir": {
     "line number": [
      33,
      34,
      35,
      36
     ]
    },
    "os.path.dirname": {
     "line number": [
      32
     ]
    },
    "os.path.join": {
     "line number": [
      32,
      33,
      34,
      35,
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_topo.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._get_epochs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "events": {
     "line number": [
      55,
      58
     ]
    },
    "mne.Epochs": {
     "line number": [
      58
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      53
     ]
    },
    "mne.viz.tests.test_topo._get_events": {
     "line number": [
      55
     ]
    },
    "mne.viz.tests.test_topo._get_picks": {
     "line number": [
      56
     ]
    },
    "mne.viz.tests.test_topo.raw_fname": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_epochs_delayed_ssp": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      68
     ]
    },
    "dict": {
     "line number": [
      67
     ]
    },
    "events": {
     "line number": [
      65,
      70
     ]
    },
    "mne.Epochs": {
     "line number": [
      69
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      64
     ]
    },
    "mne.viz.tests.test_topo._get_events": {
     "line number": [
      65
     ]
    },
    "mne.viz.tests.test_topo._get_picks": {
     "line number": [
      66
     ]
    },
    "mne.viz.tests.test_topo.pytest": {
     "line number": [
      68
     ]
    },
    "mne.viz.tests.test_topo.raw_fname": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_events": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "mne.read_events": {
     "line number": [
      43
     ]
    },
    "mne.viz.tests.test_topo.event_name": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_picks": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_presser": {
  "data": {
   "shadows": "mne.viz._get_presser"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._imshow_tfr": {
  "data": {
   "shadows": "mne.viz.topo._imshow_tfr"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._line_plot_onselect": {
  "data": {
   "shadows": "mne.viz.evoked._line_plot_onselect"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._plot_update_evoked_topo_proj": {
  "data": {
   "shadows": "mne.viz.topo._plot_update_evoked_topo_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.base_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.cov_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.event_name": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.evoked_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.iter_topography": {
  "data": {
   "shadows": "mne.viz.topo.iter_topography"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.layout": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.pick_channels_evoked": {
  "data": {
   "shadows": "mne.pick_channels_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plot_evoked_topo": {
  "data": {
   "shadows": "mne.viz.plot_evoked_topo"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plot_topo_image_epochs": {
  "data": {
   "shadows": "mne.viz.plot_topo_image_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.raw_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.test_plot_joint": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87,
      93,
      104
     ]
    },
    "dict": {
     "line number": [
      78,
      79,
      83,
      85,
      87,
      91,
      94,
      95,
      105,
      106,
      107,
      108
     ]
    },
    "len": {
     "line number": [
      99,
      103
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      96,
      109
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      90
     ]
    },
    "mne.compute_proj_evoked": {
     "line number": [
      101
     ]
    },
    "mne.viz.tests.test_topo._get_epochs": {
     "line number": [
      77
     ]
    },
    "mne.viz.tests.test_topo.pytest": {
     "line number": [
      87,
      93,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_joint.return_inds": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "list": {
     "line number": [
      82
     ]
    },
    "range": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_tfr_topo": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      277,
      287
     ]
    },
    "ValueError": {
     "line number": [
      258,
      288
     ]
    },
    "len": {
     "line number": [
      242,
      243,
      250,
      254
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      245,
      255
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      281
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      250,
      254
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      275
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      244,
      262,
      267
     ]
    },
    "mne.viz.tests.test_topo._get_epochs": {
     "line number": [
      239
     ]
    },
    "mne.viz.tests.test_topo.pytest": {
     "line number": [
      252,
      258,
      269,
      277,
      287,
      288
     ]
    },
    "mne.viz.topo._imshow_tfr": {
     "line number": [
      278,
      288
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      253
     ]
    },
    "numpy.arange": {
     "line number": [
      244
     ]
    },
    "numpy.log10": {
     "line number": [
      261
     ]
    },
    "numpy.logspace": {
     "line number": [
      261
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      147
     ]
    },
    "ValueError": {
     "line number": [
      129
     ]
    },
    "collections.namedtuple": {
     "line number": [
      139
     ]
    },
    "dict": {
     "line number": [
      125,
      143
     ]
    },
    "event": {
     "line number": [
      140,
      142
     ]
    },
    "func": {
     "line number": [
      140,
      142
     ]
    },
    "len": {
     "line number": [
      146
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      156,
      163,
      167,
      173,
      178
     ]
    },
    "mne.pick_channels_evoked": {
     "line number": [
      134
     ]
    },
    "mne.read_cov": {
     "line number": [
      164
     ]
    },
    "mne.viz._get_presser": {
     "line number": [
      138
     ]
    },
    "mne.viz.evoked._line_plot_onselect": {
     "line number": [
      171
     ]
    },
    "mne.viz.plot_evoked_topo": {
     "line number": [
      117,
      126,
      129,
      136,
      151
     ]
    },
    "mne.viz.tests.test_topo._get_epochs": {
     "line number": [
      115
     ]
    },
    "mne.viz.tests.test_topo._get_epochs_delayed_ssp": {
     "line number": [
      132
     ]
    },
    "mne.viz.tests.test_topo.cov_fname": {
     "line number": [
      164
     ]
    },
    "mne.viz.tests.test_topo.layout": {
     "line number": [
      126,
      129,
      136
     ]
    },
    "mne.viz.tests.test_topo.pytest": {
     "line number": [
      129,
      147
     ]
    },
    "mne.viz.topo._plot_update_evoked_topo_proj": {
     "line number": [
      148
     ]
    },
    "mne.viz.topo.iter_topography": {
     "line number": [
      157,
      175
     ]
    },
    "numpy.zeros": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_image_epochs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      230,
      232
     ]
    },
    "len": {
     "line number": [
      223,
      225
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      219,
      234
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      223,
      225
     ]
    },
    "mne.viz.mne_analyze_colormap": {
     "line number": [
      217
     ]
    },
    "mne.viz.plot_topo_image_epochs": {
     "line number": [
      220,
      228
     ]
    },
    "mne.viz.tests.test_topo._get_epochs": {
     "line number": [
      215
     ]
    },
    "mne.viz.tests.test_topo.matplotlib": {
     "line number": [
      230,
      232
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_nirs": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "len": {
     "line number": [
      185
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      186
     ]
    },
    "mne.viz.plot_evoked_topo": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_single_ch": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      206
     ]
    },
    "len": {
     "line number": [
      200,
      202
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      209
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      198,
      204
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      203
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      200,
      202
     ]
    },
    "mne.viz.plot_evoked_topo": {
     "line number": [
      196
     ]
    },
    "mne.viz.tests.test_topo._get_epochs": {
     "line number": [
      191
     ]
    },
    "mne.viz.tests.test_topo.matplotlib": {
     "line number": [
      206
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      201,
      205,
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap": {
  "data": {
   "symbols_in_volume": {
    "mne.channels.read_layout": {
     "line number": [
      50
     ]
    },
    "mne.datasets.testing.data_path": {
     "line number": [
      40
     ]
    },
    "mne.viz.tests.test_topomap.base_dir": {
     "line number": [
      46,
      47,
      48,
      49,
      51
     ]
    },
    "mne.viz.tests.test_topomap.data_dir": {
     "line number": [
      41,
      42,
      43
     ]
    },
    "os.path.dirname": {
     "line number": [
      45
     ]
    },
    "os.path.join": {
     "line number": [
      41,
      42,
      43,
      45,
      46,
      47,
      48,
      49,
      51
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_topomap.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.FigureCanvas": {
  "data": {
   "shadows": "matplotlib.backends.backend_agg.FigureCanvasAgg"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Projection": {
  "data": {
   "shadows": "mne.io.proj.Projection"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._find_peaks": {
  "data": {
   "shadows": "mne.viz.utils._find_peaks"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._get_pos_outlines": {
  "data": {
   "shadows": "mne.viz.topomap._get_pos_outlines"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._onselect": {
  "data": {
   "shadows": "mne.viz.topomap._onselect"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.base_dir": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.cov_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.ctf_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.data_dir": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.ecg_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.event_name": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.evoked_fname": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.find_layout": {
  "data": {
   "shadows": "mne.find_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.layout": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.make_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj.make_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_arrowmap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_arrowmap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_evoked_topomap": {
  "data": {
   "shadows": "mne.viz.plot_evoked_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_projs_topomap": {
  "data": {
   "shadows": "mne.viz.plot_projs_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_psds_topomap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_psds_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_topomap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.raw_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_proj": {
  "data": {
   "shadows": "mne.read_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.subjects_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.test_ctf_plotting": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "events": {
     "line number": [
      486,
      487,
      488
     ]
    },
    "len": {
     "line number": [
      487
     ]
    },
    "mne.Epochs": {
     "line number": [
      488
     ]
    },
    "mne.io.compensator.get_current_comp": {
     "line number": [
      489
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      484
     ]
    },
    "mne.make_fixed_length_events": {
     "line number": [
      486
     ]
    },
    "mne.viz.tests.test_topomap.ctf_fname": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_arrowmap": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      503,
      506
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      498
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      501
     ]
    },
    "mne.viz.tests.test_topomap.evoked_fname": {
     "line number": [
      501
     ]
    },
    "mne.viz.tests.test_topomap.pytest": {
     "line number": [
      503,
      506,
      497
     ]
    },
    "mne.viz.topomap.plot_arrowmap": {
     "line number": [
      504,
      507,
      510,
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_cov_topomap": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      582
     ]
    },
    "mne.io.read_info": {
     "line number": [
      579
     ]
    },
    "mne.read_cov": {
     "line number": [
      578
     ]
    },
    "mne.viz.tests.test_topomap.cov_fname": {
     "line number": [
      578
     ]
    },
    "mne.viz.tests.test_topomap.evoked_fname": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_projs_topomap": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      132
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      112,
      116,
      119,
      121,
      124,
      128
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      113
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      105
     ]
    },
    "mne.io.pick.pick_info": {
     "line number": [
      131
     ]
    },
    "mne.io.proj.make_eeg_average_ref_proj": {
     "line number": [
      122,
      130
     ]
    },
    "mne.io.read_info": {
     "line number": [
      109,
      117
     ]
    },
    "mne.pick_types": {
     "line number": [
      131
     ]
    },
    "mne.read_proj": {
     "line number": [
      108
     ]
    },
    "mne.viz.plot_projs_topomap": {
     "line number": [
      111,
      115,
      118,
      120,
      127,
      133
     ]
    },
    "mne.viz.tests.test_topomap.ecg_fname": {
     "line number": [
      108
     ]
    },
    "mne.viz.tests.test_topomap.pytest": {
     "line number": [
      132
     ]
    },
    "mne.viz.tests.test_topomap.raw_fname": {
     "line number": [
      109
     ]
    },
    "mne.viz.tests.test_topomap.triux_fname": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_tfr_topomap": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "len": {
     "line number": [
      449,
      449,
      478
     ]
    },
    "list": {
     "line number": [
      463,
      464
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      468
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      457
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      455,
      459
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      475
     ]
    },
    "mne.io.pick.channel_indices_by_type": {
     "line number": [
      472
     ]
    },
    "mne.io.pick.pick_info": {
     "line number": [
      448,
      473
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      441
     ]
    },
    "mne.time_frequency.tfr.AverageTFR": {
     "line number": [
      450
     ]
    },
    "mne.viz.tests.test_topomap.matplotlib": {
     "line number": [
      454,
      458
     ]
    },
    "mne.viz.tests.test_topomap.raw_fname": {
     "line number": [
      441
     ]
    },
    "mne.viz.topomap._onselect": {
     "line number": [
      463,
      464
     ]
    },
    "mne.viz.topomap.plot_psds_topomap": {
     "line number": [
      479
     ]
    },
    "numpy.arange": {
     "line number": [
      450,
      476
     ]
    },
    "numpy.array": {
     "line number": [
      462
     ]
    },
    "numpy.linspace": {
     "line number": [
      442
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      446
     ]
    },
    "numpy.random.rand": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_animation": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      145
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      139
     ]
    },
    "mne.viz.tests.test_topomap.evoked_fname": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_animation_nirs": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "len": {
     "line number": [
      152
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_bads": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      554
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      549
     ]
    },
    "mne.create_info": {
     "line number": [
      547
     ]
    },
    "mne.io.RawArray": {
     "line number": [
      547
     ]
    },
    "mne.viz.topomap.plot_topomap": {
     "line number": [
      553
     ]
    },
    "numpy.eye": {
     "line number": [
      548
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      546
     ]
    },
    "range": {
     "line number": [
      550
     ]
    },
    "zip": {
     "line number": [
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      319,
      391
     ]
    },
    "RuntimeWarning": {
     "line number": [
      337
     ]
    },
    "TypeError": {
     "line number": [
      228,
      282
     ]
    },
    "ValueError": {
     "line number": [
      168,
      169,
      170,
      233,
      280,
      301,
      340,
      398,
      403,
      404,
      405,
      409,
      410
     ]
    },
    "all": {
     "line number": [
      291
     ]
    },
    "bool": {
     "line number": [
      258,
      270
     ]
    },
    "dict": {
     "line number": [
      162,
      163
     ]
    },
    "functools.partial": {
     "line number": [
      166,
      250
     ]
    },
    "get_texts": {
     "line number": [
      309,
      311
     ]
    },
    "isinstance": {
     "line number": [
      293
     ]
    },
    "len": {
     "line number": [
      239,
      288,
      309,
      312,
      396
     ]
    },
    "list": {
     "line number": [
      201
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      251,
      254,
      256,
      279,
      314,
      358,
      379,
      393,
      416,
      421,
      436
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      329
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      252,
      252,
      419,
      419
     ]
    },
    "mne.channels.make_dig_montage": {
     "line number": [
      205
     ]
    },
    "mne.create_info": {
     "line number": [
      208
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_EEG": {
     "line number": [
      344
     ]
    },
    "mne.io.pick.channel_indices_by_type": {
     "line number": [
      188
     ]
    },
    "mne.io.pick.pick_info": {
     "line number": [
      189
     ]
    },
    "mne.pick_types": {
     "line number": [
      355
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      159,
      323
     ]
    },
    "mne.viz.plot_evoked_topomap": {
     "line number": [
      319,
      338,
      340,
      361,
      386,
      391
     ]
    },
    "mne.viz.tests.test_topomap.evoked_fname": {
     "line number": [
      159,
      323
     ]
    },
    "mne.viz.tests.test_topomap.matplotlib": {
     "line number": [
      293
     ]
    },
    "mne.viz.tests.test_topomap.pytest": {
     "line number": [
      168,
      169,
      170,
      228,
      233,
      280,
      282,
      301,
      319,
      337,
      340,
      391,
      398,
      403,
      404,
      405,
      409,
      410,
      156
     ]
    },
    "mne.viz.topomap": {
     "line number": [
      335
     ]
    },
    "mne.viz.topomap._get_pos_outlines": {
     "line number": [
      356
     ]
    },
    "mne.viz.topomap.plot_topomap": {
     "line number": [
      190,
      191,
      196,
      212,
      219,
      229,
      234,
      241,
      299,
      301,
      398,
      403,
      404,
      405,
      409,
      410,
      415
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      327,
      330,
      368,
      369,
      370,
      372,
      373,
      374
     ]
    },
    "mne.viz.utils._find_peaks": {
     "line number": [
      424,
      426,
      428,
      429
     ]
    },
    "numpy.abs": {
     "line number": [
      215,
      216,
      223
     ]
    },
    "numpy.array": {
     "line number": [
      202
     ]
    },
    "numpy.c_": {
     "line number": [
      408,
      414
     ]
    },
    "numpy.full": {
     "line number": [
      207
     ]
    },
    "numpy.max": {
     "line number": [
      328,
      332
     ]
    },
    "numpy.newaxis": {
     "line number": [
      408
     ]
    },
    "numpy.ones": {
     "line number": [
      397
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      207
     ]
    },
    "numpy.random.randn": {
     "line number": [
      240
     ]
    },
    "numpy.random.random": {
     "line number": [
      187
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      424,
      426,
      428,
      429,
      435
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      268,
      309,
      312,
      313
     ]
    },
    "numpy.zeros": {
     "line number": [
      258,
      401,
      402,
      408,
      414,
      422
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      270
     ]
    },
    "plt_topomap": {
     "line number": [
      167,
      168,
      169,
      170,
      250,
      253,
      255,
      272,
      274,
      275,
      276,
      277,
      281,
      283,
      285,
      308,
      310,
      317
     ]
    },
    "sorted": {
     "line number": [
      268
     ]
    },
    "str": {
     "line number": [
      287
     ]
    },
    "type": {
     "line number": [
      287,
      288
     ]
    },
    "zip": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic.get_texts": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      306
     ]
    },
    "mne.viz.tests.test_topomap.matplotlib": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic.patch": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "matplotlib.patches.Circle": {
     "line number": [
      383
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic.proc_names": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_interactive": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      72,
      79,
      87
     ]
    },
    "matplotlib.backends.backend_agg.FigureCanvasAgg": {
     "line number": [
      64
     ]
    },
    "matplotlib.figure.Figure": {
     "line number": [
      63
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      62
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      89
     ]
    },
    "matplotlib.pyplot.get_fignums": {
     "line number": [
      72,
      79,
      87,
      89
     ]
    },
    "mne.compute_proj_evoked": {
     "line number": [
      60
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      56
     ]
    },
    "mne.viz.tests.test_topomap.evoked_fname": {
     "line number": [
      56
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      90,
      97
     ]
    },
    "numpy.array_equal": {
     "line number": [
      78,
      86,
      95,
      102
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      71,
      77,
      84,
      92,
      99
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      85,
      94,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_neuromag122": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      519,
      535
     ]
    },
    "mne.datasets.testing.requires_testing_data": {
     "line number": [
      515
     ]
    },
    "mne.find_layout": {
     "line number": [
      529
     ]
    },
    "mne.io.constants.FIFF.FIFFV_COIL_NM_122": {
     "line number": [
      526
     ]
    },
    "mne.io.proj.Projection": {
     "line number": [
      533
     ]
    },
    "mne.read_evokeds": {
     "line number": [
      520
     ]
    },
    "mne.viz.plot_projs_topomap": {
     "line number": [
      540
     ]
    },
    "mne.viz.tests.test_topomap.evoked_fname": {
     "line number": [
      520
     ]
    },
    "mne.viz.tests.test_topomap.layout": {
     "line number": [
      529,
      530
     ]
    },
    "numpy.ones": {
     "line number": [
      537
     ]
    },
    "range": {
     "line number": [
      524
     ]
    },
    "zip": {
     "line number": [
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_nirs_ica": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "len": {
     "line number": [
      572
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      573
     ]
    },
    "mne.preprocessing.ICA": {
     "line number": [
      570
     ]
    },
    "mne.utils.requires_sklearn": {
     "line number": [
      564
     ]
    },
    "range": {
     "line number": [
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_nirs_overlap": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "len": {
     "line number": [
      560
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.topomap": {
  "data": {
   "shadows": "mne.viz.topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.triux_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils": {
  "data": {
   "symbols_in_volume": {
    "mne.utils.run_tests_if_main": {
     "line number": [
      182
     ]
    },
    "mne.viz.tests.test_utils.base_dir": {
     "line number": [
      23,
      24,
      25
     ]
    },
    "os.path.dirname": {
     "line number": [
      22
     ]
    },
    "os.path.join": {
     "line number": [
      22,
      23,
      24,
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "mne.viz.tests.test_utils.ClickableImage": {
  "data": {
   "shadows": "mne.viz.ClickableImage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.LinearSegmentedColormap": {
  "data": {
   "shadows": "matplotlib.colors.LinearSegmentedColormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.Normalize": {
  "data": {
   "shadows": "matplotlib.pyplot.Normalize"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._compute_scalings": {
  "data": {
   "shadows": "mne.viz.utils._compute_scalings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._get_color_list": {
  "data": {
   "shadows": "mne.viz.utils._get_color_list"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._setup_vmin_vmax": {
  "data": {
   "shadows": "mne.viz.utils._setup_vmin_vmax"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._validate_if_list_of_axes": {
  "data": {
   "shadows": "mne.viz.utils._validate_if_list_of_axes"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.add_background_image": {
  "data": {
   "shadows": "mne.viz.add_background_image"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.base_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.center_cmap": {
  "data": {
   "shadows": "mne.viz.utils.center_cmap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.centers_to_edges": {
  "data": {
   "shadows": "mne.viz.utils.centers_to_edges"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.compare_fiff": {
  "data": {
   "shadows": "mne.viz.utils.compare_fiff"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.cov_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.ev_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.raw_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.test_add_background_image": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      103,
      108
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      82,
      106
     ]
    },
    "mne.viz.add_background_image": {
     "line number": [
      92,
      99,
      107
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      80
     ]
    },
    "range": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_auto_scale": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      123,
      131
     ]
    },
    "dict": {
     "line number": [
      119
     ]
    },
    "mne.epochs.Epochs": {
     "line number": [
      114
     ]
    },
    "mne.event.read_events": {
     "line number": [
      114
     ]
    },
    "mne.io.read_raw_fif": {
     "line number": [
      113
     ]
    },
    "mne.viz.tests.test_utils.ev_fname": {
     "line number": [
      114
     ]
    },
    "mne.viz.tests.test_utils.pytest": {
     "line number": [
      123,
      131
     ]
    },
    "mne.viz.tests.test_utils.raw_fname": {
     "line number": [
      113
     ]
    },
    "mne.viz.utils._compute_scalings": {
     "line number": [
      127,
      132
     ]
    },
    "numpy.random.randn": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_center_cmap": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "cmap": {
     "line number": [
      166,
      171
     ]
    },
    "isinstance": {
     "line number": [
      163
     ]
    },
    "matplotlib.cm.RdBu": {
     "line number": [
      168
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      161
     ]
    },
    "matplotlib.colors.LinearSegmentedColormap": {
     "line number": [
      163
     ]
    },
    "matplotlib.pyplot.Normalize": {
     "line number": [
      166
     ]
    },
    "mne.viz.utils.center_cmap": {
     "line number": [
      161
     ]
    },
    "numpy.allclose": {
     "line number": [
      171
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_centers_to_edges": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "mne.viz.utils.centers_to_edges": {
     "line number": [
      176,
      177,
      178,
      179
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      176,
      177,
      178,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_clickable_image": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "float": {
     "line number": [
      73
     ]
    },
    "len": {
     "line number": [
      67,
      67,
      71
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      75
     ]
    },
    "mne.viz.ClickableImage": {
     "line number": [
      60
     ]
    },
    "mne.viz.utils._fake_click": {
     "line number": [
      65
     ]
    },
    "numpy.array": {
     "line number": [
      66,
      66
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      66,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_compare_fiff": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      53
     ]
    },
    "mne.viz.tests.test_utils.cov_fname": {
     "line number": [
      52
     ]
    },
    "mne.viz.tests.test_utils.raw_fname": {
     "line number": [
      52
     ]
    },
    "mne.viz.utils.compare_fiff": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_get_color_list": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      38
     ]
    },
    "list": {
     "line number": [
      38
     ]
    },
    "mne.viz.utils._get_color_list": {
     "line number": [
      37,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_mne_analyze_colormap": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      45,
      46,
      47
     ]
    },
    "mne.viz.mne_analyze_colormap": {
     "line number": [
      45,
      46,
      47
     ]
    },
    "mne.viz.tests.test_utils.pytest": {
     "line number": [
      45,
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_setup_vmin_vmax_warns": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      31
     ]
    },
    "mne.viz.tests.test_utils.pytest": {
     "line number": [
      31
     ]
    },
    "mne.viz.utils._setup_vmin_vmax": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_validate_if_list_of_axes": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      140,
      145,
      146,
      147,
      148,
      149,
      150,
      152
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      154
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      139
     ]
    },
    "mne.viz.tests.test_utils.pytest": {
     "line number": [
      140,
      145,
      146,
      147,
      148,
      149,
      150,
      152
     ]
    },
    "mne.viz.utils._validate_if_list_of_axes": {
     "line number": [
      140,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      152,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo": {
  "data": {},
  "type": "module"
 },
 "mne.viz.topo.RectangleSelector": {
  "data": {
   "shadows": "matplotlib.widgets.RectangleSelector"
  },
  "type": "import"
 },
 "mne.viz.topo._check_vlim": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "numpy.isscalar": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._compute_ax_scalings": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      290
     ]
    },
    "list": {
     "line number": [
      290
     ]
    },
    "numpy.ndarray": {
     "line number": [
      290
     ]
    },
    "tuple": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._erfimage_imshow": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      514
     ]
    },
    "len": {
     "line number": [
      523
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      533
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      527
     ]
    },
    "order": {
     "line number": [
      515,
      517,
      518
     ]
    },
    "scipy.ndimage.gaussian_filter1d": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._erfimage_imshow_unified": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      551
     ]
    },
    "len": {
     "line number": [
      543,
      547
     ]
    },
    "mne.viz.topo._compute_ax_scalings": {
     "line number": [
      543
     ]
    },
    "order": {
     "line number": [
      551,
      552,
      552,
      554,
      555
     ]
    },
    "scipy.ndimage.gaussian_filter1d": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._imshow_tfr": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "DraggableColorbar": {
     "line number": [
      333
     ]
    },
    "_check_option": {
     "line number": [
      313
     ]
    },
    "_plot_masked_image": {
     "line number": [
      318
     ]
    },
    "isinstance": {
     "line number": [
      328
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      331
     ]
    },
    "matplotlib.widgets.RectangleSelector": {
     "line number": [
      334
     ]
    },
    "numpy.linspace": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._imshow_tfr_unified": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "mne.viz.topo._compute_ax_scalings": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Bunch": {
     "line number": [
      167
     ]
    },
    "_clean_names": {
     "line number": [
      137
     ]
    },
    "enumerate": {
     "line number": [
      138
     ]
    },
    "find_layout": {
     "line number": [
      127
     ]
    },
    "functools.partial": {
     "line number": [
      130,
      145,
      164
     ]
    },
    "list": {
     "line number": [
      149,
      167
     ]
    },
    "matplotlib.collections.PolyCollection": {
     "line number": [
      184
     ]
    },
    "matplotlib.pyplot.axes": {
     "line number": [
      141,
      153
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      104
     ]
    },
    "mne.viz.topo._legend_axis": {
     "line number": [
      172
     ]
    },
    "numpy.transpose": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography.format_coord_multiaxis": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography.format_coord_unified": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "len": {
     "line number": [
      111
     ]
    },
    "numpy.array": {
     "line number": [
      109
     ]
    },
    "numpy.sum": {
     "line number": [
      113
     ]
    },
    "numpy.where": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._legend_axis": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "matplotlib.pyplot.axes": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_evoked_topo": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      766
     ]
    },
    "ValueError": {
     "line number": [
      657,
      679
     ]
    },
    "_check_cov": {
     "line number": [
      670
     ]
    },
    "_check_delayed_ssp": {
     "line number": [
      742,
      804
     ]
    },
    "_clean_names": {
     "line number": [
      680
     ]
    },
    "_draw_proj_checkbox": {
     "line number": [
      808
     ]
    },
    "_handle_default": {
     "line number": [
      677,
      701,
      747,
      758
     ]
    },
    "_merge_ch_data": {
     "line number": [
      694
     ]
    },
    "_pair_grad_sensors": {
     "line number": [
      682
     ]
    },
    "add_background_image": {
     "line number": [
      790
     ]
    },
    "all": {
     "line number": [
      678,
      738
     ]
    },
    "channel_type": {
     "line number": [
      710,
      747
     ]
    },
    "dict": {
     "line number": [
      757,
      805
     ]
    },
    "find_layout": {
     "line number": [
      705
     ]
    },
    "functools.partial": {
     "line number": [
      772,
      775
     ]
    },
    "isinstance": {
     "line number": [
      731,
      757
     ]
    },
    "itertools.cycle": {
     "line number": [
      663,
      668
     ]
    },
    "len": {
     "line number": [
      656,
      656,
      661,
      661,
      661,
      662,
      664,
      664,
      698,
      716,
      718,
      731,
      731,
      745,
      761
     ]
    },
    "list": {
     "line number": [
      652,
      655,
      683,
      689,
      692,
      720,
      724,
      731,
      744
     ]
    },
    "matplotlib.pyplot.legend": {
     "line number": [
      795
     ]
    },
    "max": {
     "line number": [
      754,
      780
     ]
    },
    "min": {
     "line number": [
      779
     ]
    },
    "mne.viz.topo._plot_timeseries": {
     "line number": [
      775
     ]
    },
    "mne.viz.topo._plot_timeseries_unified": {
     "line number": [
      772
     ]
    },
    "mne.viz.topo._plot_topo": {
     "line number": [
      781
     ]
    },
    "numpy.abs": {
     "line number": [
      754
     ]
    },
    "numpy.array": {
     "line number": [
      754,
      764
     ]
    },
    "pick_types": {
     "line number": [
      721,
      725,
      729
     ]
    },
    "plt_show": {
     "line number": [
      810
     ]
    },
    "range": {
     "line number": [
      698,
      745
     ]
    },
    "set": {
     "line number": [
      709,
      709,
      713
     ]
    },
    "set.difference": {
     "line number": [
      713
     ]
    },
    "set.intersection": {
     "line number": [
      716,
      718
     ]
    },
    "show_func": {
     "line number": [
      772,
      782
     ]
    },
    "slice": {
     "line number": [
      661,
      662
     ]
    },
    "tuple": {
     "line number": [
      652,
      655
     ]
    },
    "type": {
     "line number": [
      652,
      655,
      766
     ]
    },
    "warn": {
     "line number": [
      665
     ]
    },
    "whiten_evoked": {
     "line number": [
      672
     ]
    },
    "zip": {
     "line number": [
      735,
      764,
      799
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      426
     ]
    },
    "_format_coord": {
     "line number": [
      403
     ]
    },
    "_setup_ax_spines": {
     "line number": [
      436
     ]
    },
    "isinstance": {
     "line number": [
      450
     ]
    },
    "list": {
     "line number": [
      450
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      425,
      427
     ]
    },
    "matplotlib.pyplot.axhline": {
     "line number": [
      459
     ]
    },
    "matplotlib.pyplot.axvline": {
     "line number": [
      456
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      462
     ]
    },
    "matplotlib.pyplot.connect": {
     "line number": [
      431,
      432
     ]
    },
    "numpy.array": {
     "line number": [
      428
     ]
    },
    "numpy.dot": {
     "line number": [
      428
     ]
    },
    "zip": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._cursor_vline": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._format_coord": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      375
     ]
    },
    "len": {
     "line number": [
      383,
      389,
      389,
      389,
      399
     ]
    },
    "numpy.abs": {
     "line number": [
      374,
      396
     ]
    },
    "sum": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._rm_cursor": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries_unified": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "any": {
     "line number": [
      471
     ]
    },
    "isinstance": {
     "line number": [
      495
     ]
    },
    "list": {
     "line number": [
      495
     ]
    },
    "matplotlib.pyplot.colorbar": {
     "line number": [
      500
     ]
    },
    "max": {
     "line number": [
      472
     ]
    },
    "min": {
     "line number": [
      472
     ]
    },
    "mne.viz.topo._compute_ax_scalings": {
     "line number": [
      474
     ]
    },
    "numpy.array": {
     "line number": [
      484,
      488
     ]
    },
    "numpy.max": {
     "line number": [
      472
     ]
    },
    "numpy.min": {
     "line number": [
      472
     ]
    },
    "zip": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_topo": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "channel_type": {
     "line number": [
      235
     ]
    },
    "copy.deepcopy": {
     "line number": [
      200
     ]
    },
    "functools.partial": {
     "line number": [
      207
     ]
    },
    "matplotlib.pyplot.Normalize": {
     "line number": [
      218
     ]
    },
    "matplotlib.pyplot.axes": {
     "line number": [
      213
     ]
    },
    "matplotlib.pyplot.cm.ScalarMappable": {
     "line number": [
      218
     ]
    },
    "matplotlib.pyplot.figtext": {
     "line number": [
      244
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      212
     ]
    },
    "matplotlib.pyplot.getp": {
     "line number": [
      222
     ]
    },
    "matplotlib.pyplot.setp": {
     "line number": [
      223
     ]
    },
    "mne.viz.topo._check_vlim": {
     "line number": [
      236
     ]
    },
    "mne.viz.topo._iter_topography": {
     "line number": [
      226
     ]
    },
    "numpy.linspace": {
     "line number": [
      219
     ]
    },
    "show_func": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_topo_onpick": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      280
     ]
    },
    "hasattr": {
     "line number": [
      255,
      266
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      271
     ]
    },
    "matplotlib.pyplot.title": {
     "line number": [
      273
     ]
    },
    "plt_show": {
     "line number": [
      278
     ]
    },
    "print": {
     "line number": [
      284
     ]
    },
    "show_func": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo._plot_update_evoked_topo_proj": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      818,
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo.collections": {
  "data": {
   "shadows": "matplotlib.collections"
  },
  "type": "import"
 },
 "mne.viz.topo.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.topo.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.topo.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.topo.iter_topography": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "mne.viz.topo._iter_topography": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "mne.viz.topo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.topo.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.topo.plot_topo_image_epochs": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "_handle_default": {
     "line number": [
      897
     ]
    },
    "_setup_vmin_vmax": {
     "line number": [
      917
     ]
    },
    "add_background_image": {
     "line number": [
      942
     ]
    },
    "dict": {
     "line number": [
      914
     ]
    },
    "find_layout": {
     "line number": [
      903
     ]
    },
    "functools.partial": {
     "line number": [
      927,
      931
     ]
    },
    "len": {
     "line number": [
      921
     ]
    },
    "mne.viz.topo._erfimage_imshow": {
     "line number": [
      931
     ]
    },
    "mne.viz.topo._erfimage_imshow_unified": {
     "line number": [
      927
     ]
    },
    "mne.viz.topo._plot_topo": {
     "line number": [
      935
     ]
    },
    "numpy.array": {
     "line number": [
      911,
      916,
      918
     ]
    },
    "numpy.newaxis": {
     "line number": [
      911
     ]
    },
    "numpy.where": {
     "line number": [
      916
     ]
    },
    "order": {
     "line number": [
      928,
      931
     ]
    },
    "plt_show": {
     "line number": [
      943
     ]
    },
    "set": {
     "line number": [
      904,
      904,
      915,
      921
     ]
    },
    "show_func": {
     "line number": [
      927,
      936
     ]
    }
   }
  },
  "type": "function"
 },
 "mne.viz.topo.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 }
}