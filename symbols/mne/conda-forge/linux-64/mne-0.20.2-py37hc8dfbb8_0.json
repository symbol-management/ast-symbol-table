{
 "*": {
  "data": {
   "imports": [
    "tqdm"
   ]
  },
  "type": "star-import"
 },
 "mne": {
  "data": {
   "symbols_in_volume": [
    "set_log_file",
    "set_log_level"
   ]
  },
  "type": "module"
 },
 "mne.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "main"
   ]
  },
  "type": "module"
 },
 "mne.__version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.baseline": {
  "data": {},
  "type": "module"
 },
 "mne.baseline._log_rescale": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_check_option"
   ]
  },
  "type": "function"
 },
 "mne.baseline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.baseline.rescale": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "fun",
    "int",
    "len",
    "mne.baseline._log_rescale",
    "numpy.mean",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.baseline.rescale.fun": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.log10",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "mne.beamformer": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._compute_beamformer": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._compute_beamformer.Beamformer": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.beamformer._compute_beamformer.Beamformer.__repr__": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer.Beamformer.copy": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer.Beamformer.save": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "check_fname",
    "write_hdf5"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._check_proj_match": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "make_projector",
    "numpy.allclose",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._check_src_type": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._compute_beamformer": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_option",
    "_pl",
    "_pos_semidef_inv",
    "_reg_pinv",
    "check_version",
    "dict",
    "len",
    "max",
    "mne.beamformer._compute_beamformer._normalized_weights",
    "mne.beamformer._compute_beamformer._reduce_leadfield_rank",
    "numpy.all",
    "numpy.diagonal",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.linalg.eigh",
    "numpy.linalg.norm",
    "numpy.linalg.svd",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._compute_power": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._normalized_weights": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "_pos_semidef_inv",
    "numpy.arange",
    "numpy.argmax",
    "numpy.complex128",
    "numpy.float64",
    "numpy.iscomplexobj",
    "numpy.linalg.eig",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._prepare_beamformer_input": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "_check_src_normal",
    "_get_vertno",
    "_prepare_forward",
    "_restrict_forward_to_src_sel",
    "is_fixed_orient",
    "label_src_vertno_sel",
    "make_ad_hoc_cov",
    "make_projector",
    "numpy.ones",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer._reduce_leadfield_rank": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.linalg.svd",
    "numpy.matmul",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._compute_beamformer.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer._compute_beamformer.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._compute_beamformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._compute_beamformer.read_beamformer": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "Covariance",
    "CrossSpectralDensity",
    "Projection",
    "bool",
    "enumerate",
    "mne.beamformer._compute_beamformer.Beamformer",
    "read_hdf5"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._dics._apply_dics": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "_check_proj_match",
    "_check_src_type",
    "_make_stc",
    "combine_xyz",
    "enumerate",
    "isinstance",
    "len",
    "numpy.dot",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.apply_dics": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "_check_channels_spatial_filter",
    "_check_reference",
    "mne.beamformer._dics._apply_dics",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.apply_dics_csd": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_check_src_type",
    "_compute_power",
    "_make_stc",
    "enumerate",
    "len",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.apply_dics_epochs": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "_check_channels_spatial_filter",
    "_check_reference",
    "len",
    "list",
    "mne.beamformer._dics._apply_dics"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.make_dics": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Beamformer",
    "ValueError",
    "_check_one_ch_type",
    "_check_option",
    "_check_rank",
    "_compute_beamformer",
    "_get_src_type",
    "_prepare_beamformer_input",
    "_subject_from_forward",
    "bool",
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._dics.tf_dics": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "_check_rank",
    "_check_reference",
    "_check_src_type",
    "_make_stc",
    "any",
    "csd_fourier",
    "csd_morlet",
    "csd_multitaper",
    "int",
    "len",
    "mne.beamformer._dics.apply_dics_csd",
    "mne.beamformer._dics.make_dics",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._lcmv._apply_lcmv": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "_check_proj_match",
    "_check_src_type",
    "_make_stc",
    "combine_xyz",
    "enumerate",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._lcmv_source_power": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "_check_option",
    "_get_src_type",
    "_make_stc",
    "_prepare_beamformer_input",
    "_reg_pinv",
    "_subject_from_forward",
    "max",
    "numpy.dot",
    "numpy.zeros",
    "pick_channels_cov",
    "pick_info",
    "range",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_check_channels_spatial_filter",
    "_check_reference",
    "mne.beamformer._lcmv._apply_lcmv",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_cov": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "_check_channels_spatial_filter",
    "_check_src_type",
    "_compute_power",
    "_make_stc",
    "pick_channels_cov"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_epochs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "_check_channels_spatial_filter",
    "_check_reference",
    "mne.beamformer._lcmv._apply_lcmv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_raw": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "_check_channels_spatial_filter",
    "_check_reference",
    "mne.beamformer._lcmv._apply_lcmv",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.make_lcmv": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Beamformer",
    "ValueError",
    "_check_depth",
    "_check_info_inv",
    "_check_one_ch_type",
    "_check_option",
    "_compute_beamformer",
    "_get_src_type",
    "_prepare_beamformer_input",
    "_simplify_info",
    "_subject_from_forward",
    "bool",
    "compute_rank",
    "list",
    "numpy.dot",
    "pick_channels_cov",
    "pick_info",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.tf_lcmv": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "Epochs",
    "ValueError",
    "_check_one_ch_type",
    "_check_option",
    "_check_rank",
    "_check_reference",
    "_get_src_type",
    "_make_stc",
    "any",
    "compute_covariance",
    "dict",
    "enumerate",
    "int",
    "len",
    "mne.beamformer._lcmv._lcmv_source_power",
    "numpy.array",
    "numpy.mean",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._rap_music._apply_rap_music": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_prepare_beamformer_input",
    "mne.beamformer._rap_music._compute_proj",
    "mne.beamformer._rap_music._compute_subcorr",
    "mne.beamformer._rap_music._make_dipoles",
    "numpy.dot",
    "numpy.empty",
    "numpy.sum",
    "pick_channels_forward",
    "pick_info",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.lstsq",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._compute_proj": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.identity",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._compute_subcorr": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.norm",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._make_dipoles": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Dipole",
    "len",
    "numpy.array",
    "numpy.newaxis.repeat",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._rap_music.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._rap_music.rap_music": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_check_info_inv",
    "mne.beamformer._rap_music._apply_rap_music",
    "pick_channels_evoked"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.resolution_matrix": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer.resolution_matrix._get_matrix_from_lcmv": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "EvokedArray",
    "apply_lcmv",
    "len",
    "numpy.eye",
    "pick_channels",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.resolution_matrix.make_lcmv_resolution_matrix": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mne.beamformer.resolution_matrix._get_matrix_from_lcmv",
    "pick_channels_forward"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.resolution_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer.tests.test_dics": {
  "data": {
   "symbols_in_volume": [
    "mne.beamformer.tests.test_dics.data_path",
    "mne.beamformer.tests.test_dics.pytest",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_dics.Beamformer": {
  "data": {
   "shadows": "mne.beamformer.Beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._compute_nearest": {
  "data": {
   "shadows": "mne.surface._compute_nearest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics._fwd_dist": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._load_forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_dics.fname_fwd",
    "mne.beamformer.tests.test_dics.fname_fwd_vol",
    "mne.beamformer.tests.test_dics.mne",
    "mne.beamformer.tests.test_dics.pytest",
    "mne.datasets.testing._pytest_param"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._nearest_vol_ind": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mne.surface._compute_nearest",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._simulate_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.tests.test_dics.mne",
    "mne.beamformer.tests.test_dics.subjects_dir",
    "mne.time_frequency.csd_morlet",
    "numpy.arange",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._test_weight_norm": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.apply_dics": {
  "data": {
   "shadows": "mne.beamformer.apply_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.apply_dics_csd": {
  "data": {
   "shadows": "mne.beamformer.apply_dics_csd"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.apply_dics_epochs": {
  "data": {
   "shadows": "mne.beamformer.apply_dics_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.compute_proj_evoked": {
  "data": {
   "shadows": "mne.proj.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.csd_morlet": {
  "data": {
   "shadows": "mne.time_frequency.csd_morlet"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_event": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_fwd": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_fwd_vol": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_raw": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.idx_param": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.make_dics": {
  "data": {
   "shadows": "mne.beamformer.make_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.make_projector": {
  "data": {
   "shadows": "mne.proj.make_projector"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.read_beamformer": {
  "data": {
   "shadows": "mne.beamformer.read_beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.test_apply_dics_csd": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.beamformer.apply_dics_csd",
    "mne.beamformer.make_dics",
    "mne.beamformer.tests.test_dics._fwd_dist",
    "mne.beamformer.tests.test_dics._load_forward",
    "mne.beamformer.tests.test_dics._simulate_data",
    "mne.beamformer.tests.test_dics.idx_param",
    "mne.beamformer.tests.test_dics.pytest"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_apply_dics_ori_inv": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mne.beamformer.apply_dics_csd",
    "mne.beamformer.make_dics",
    "mne.beamformer.tests.test_dics._fwd_dist",
    "mne.beamformer.tests.test_dics._load_forward",
    "mne.beamformer.tests.test_dics._simulate_data",
    "mne.beamformer.tests.test_dics.idx_param",
    "mne.beamformer.tests.test_dics.pytest",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.triu_indices"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_apply_dics_timeseries": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "copy.deepcopy",
    "isinstance",
    "len",
    "list",
    "mne.beamformer.apply_dics",
    "mne.beamformer.apply_dics_epochs",
    "mne.beamformer.make_dics",
    "mne.beamformer.tests.test_dics._fwd_dist",
    "mne.beamformer.tests.test_dics._load_forward",
    "mne.beamformer.tests.test_dics._nearest_vol_ind",
    "mne.beamformer.tests.test_dics._simulate_data",
    "mne.beamformer.tests.test_dics.idx_param",
    "mne.beamformer.tests.test_dics.pytest",
    "mne.proj.compute_proj_evoked",
    "mne.proj.make_projector",
    "next",
    "numpy.any",
    "numpy.not_equal",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_make_dics": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "mne.beamformer.Beamformer",
    "mne.beamformer.make_dics",
    "mne.beamformer.read_beamformer",
    "mne.beamformer.tests.test_dics._load_forward",
    "mne.beamformer.tests.test_dics._simulate_data",
    "mne.beamformer.tests.test_dics._test_weight_norm",
    "mne.beamformer.tests.test_dics.idx_param",
    "mne.beamformer.tests.test_dics.pytest",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.object_diff",
    "mne.utils.requires_h5py",
    "numpy.abs",
    "numpy.allclose",
    "numpy.corrcoef",
    "numpy.diag",
    "numpy.eye",
    "numpy.float",
    "numpy.intersect1d",
    "numpy.iscomplexobj",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.triu_indices",
    "os.path.join",
    "repr",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_real": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.beamformer.apply_dics_csd",
    "mne.beamformer.make_dics",
    "mne.beamformer.tests.test_dics._fwd_dist",
    "mne.beamformer.tests.test_dics._load_forward",
    "mne.beamformer.tests.test_dics._nearest_vol_ind",
    "mne.beamformer.tests.test_dics._simulate_data",
    "mne.beamformer.tests.test_dics.idx_param",
    "mne.beamformer.tests.test_dics.pytest"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_tf_dics": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.beamformer.apply_dics_csd",
    "mne.beamformer.make_dics",
    "mne.beamformer.tests.test_dics._fwd_dist",
    "mne.beamformer.tests.test_dics._load_forward",
    "mne.beamformer.tests.test_dics._simulate_data",
    "mne.beamformer.tests.test_dics.idx_param",
    "mne.beamformer.tests.test_dics.pytest",
    "mne.beamformer.tf_dics",
    "mne.datasets.testing.requires_testing_data",
    "mne.time_frequency.csd_morlet",
    "numpy.all",
    "numpy.array",
    "numpy.errstate",
    "numpy.eye",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.triu_indices"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.tf_dics": {
  "data": {
   "shadows": "mne.beamformer.tf_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.beamformer.tests.test_external.data_path",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_external._get_bf_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_external.ft_data_path",
    "mne.beamformer.tests.test_external.mne",
    "mne.beamformer.tests.test_external.pytest",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.datasets.testing._pytest_param",
    "os.path.join",
    "scipy.io.savemat"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_external._get_data": {
  "data": {
   "shadows": "mne.beamformer.tests.test_lcmv._get_data"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.apply_lcmv": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.apply_lcmv_cov": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_cov"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.data_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_cov": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_event": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_fwd": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_fwd_vol": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_label": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.fname_raw": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.ft_data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.reject": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_external.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_external.test_lcmv_fieldtrip": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.apply_lcmv_cov",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_external._get_bf_data",
    "mne.beamformer.tests.test_external.ft_data_path",
    "mne.beamformer.tests.test_external.mne",
    "mne.beamformer.tests.test_external.pytest",
    "numpy.abs",
    "numpy.corrcoef",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_external.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.beamformer.tests.test_lcmv.data_path",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_lcmv.Beamformer": {
  "data": {
   "shadows": "mne.beamformer.Beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._get_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "RuntimeWarning",
    "any",
    "events",
    "mne.beamformer.tests.test_lcmv._read_forward_solution_meg",
    "mne.beamformer.tests.test_lcmv.fname_cov",
    "mne.beamformer.tests.test_lcmv.fname_event",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_fwd_vol",
    "mne.beamformer.tests.test_lcmv.fname_label",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.beamformer.tests.test_lcmv.reject",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv._lcmv_source_power": {
  "data": {
   "shadows": "mne.beamformer._lcmv._lcmv_source_power"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._read_forward_solution_meg": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.convert_forward_solution",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv_epochs": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv_raw": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_raw"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.compute_rank": {
  "data": {
   "shadows": "mne.compute_rank"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.data_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.fname_cov": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_event": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_fwd": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_fwd_vol": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_label": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_raw": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.read_beamformer": {
  "data": {
   "shadows": "mne.beamformer.read_beamformer"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.reject": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.set_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.set_current_comp"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.test_depth_does_not_matter": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.pytest",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_ctf_comp": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "events",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.compensator.set_current_comp",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_maxfiltered": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.compute_rank"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_raw": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.apply_lcmv_raw",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.datasets.testing.requires_testing_data",
    "numpy.array",
    "numpy.intersect1d",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_reg_proj": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.datasets.testing.requires_testing_data",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_source_power": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "mne.beamformer._lcmv._lcmv_source_power",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.datasets.testing.requires_testing_data",
    "numpy.abs",
    "numpy.argmax",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_vector": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.simulation.simulate_evoked",
    "mne.utils.catch_logging",
    "numpy.arange",
    "numpy.arccos",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.eye",
    "numpy.in1d",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.outer",
    "numpy.rad2deg",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "range",
    "scipy.linalg.svdvals",
    "scipy.spatial.distance.cdist",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_localization_bias_fixed": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.pytest",
    "numpy.abs",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_localization_bias_free": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv.pytest",
    "numpy.abs",
    "numpy.argmax",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_make_lcmv": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "copy.deepcopy",
    "int",
    "isinstance",
    "len",
    "mne.beamformer.Beamformer",
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.apply_lcmv_epochs",
    "mne.beamformer.apply_lcmv_raw",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.read_beamformer",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.beamformer.tests.test_lcmv.fname_label",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.object_diff",
    "mne.utils.requires_h5py",
    "next",
    "numpy.abs",
    "numpy.argmax",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.max",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.zeros_like",
    "os.path.join",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_make_lcmv_sphere": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "isinstance",
    "mne.VolSourceEstimate",
    "mne.VolVectorSourceEstimate",
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "numpy.argmax",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_tf_lcmv": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.beamformer._lcmv._lcmv_source_power",
    "mne.beamformer.tests.test_lcmv.fname_event",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_label",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.beamformer.tests.test_lcmv.reject",
    "mne.beamformer.tf_lcmv",
    "mne.datasets.testing.requires_testing_data",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.tf_lcmv": {
  "data": {
   "shadows": "mne.beamformer.tf_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music": {
  "data": {
   "symbols_in_volume": [
    "mne.beamformer.tests.test_rap_music.data_path",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_rap_music._check_dipoles": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.tests.test_rap_music.mne",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.max",
    "numpy.where",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music._get_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_rap_music.fname_ave",
    "mne.beamformer.tests.test_rap_music.fname_cov",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.cov.regularize"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_ave": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_cov": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_fwd": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.rap_music": {
  "data": {
   "shadows": "mne.beamformer.rap_music"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.simu_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.tests.test_rap_music.mne",
    "numpy.array",
    "numpy.exp",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_picks": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.rap_music",
    "mne.beamformer.tests.test_rap_music.fname_ave",
    "mne.beamformer.tests.test_rap_music.fname_cov",
    "mne.beamformer.tests.test_rap_music.fname_fwd",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.datasets.testing.requires_testing_data"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_simulated": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mne.beamformer.rap_music",
    "mne.beamformer.tests.test_rap_music._check_dipoles",
    "mne.beamformer.tests.test_rap_music._get_data",
    "mne.beamformer.tests.test_rap_music.fname_fwd",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.beamformer.tests.test_rap_music.simu_data",
    "mne.datasets.testing.requires_testing_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_sphere": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mne.beamformer.rap_music",
    "mne.beamformer.tests.test_rap_music._get_data",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.datasets.testing.requires_testing_data",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.max",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix": {
  "data": {
   "symbols_in_volume": [
    "mne.beamformer.tests.test_resolution_matrix.data_path",
    "mne.datasets.testing.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_resolution_matrix.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_cov": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_evoked": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_fwd": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_inv": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.fname_raw": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.make_lcmv_resolution_matrix": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv_resolution_matrix"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_resolution_matrix.subjects_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_resolution_matrix.test_resolution_matrix_lcmv": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.make_lcmv_resolution_matrix",
    "mne.beamformer.tests.test_resolution_matrix.fname_evoked",
    "mne.beamformer.tests.test_resolution_matrix.fname_fwd",
    "mne.beamformer.tests.test_resolution_matrix.mne",
    "mne.datasets.testing.requires_testing_data",
    "numpy.corrcoef",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_resolution_matrix.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels": {
  "data": {},
  "type": "module"
 },
 "mne.channels.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.channels._dig_montage_utils": {
  "data": {},
  "type": "module"
 },
 "mne.channels._dig_montage_utils.ElementTree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mne.channels._dig_montage_utils._parse_brainvision_dig_montage": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Bunch",
    "dict",
    "float",
    "numpy.array",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mne.channels._dig_montage_utils._read_dig_montage_egi": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "_check_fname",
    "dict",
    "float",
    "int",
    "len",
    "numpy.array",
    "warn",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mne.channels._dig_montage_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.channels": {
  "data": {},
  "type": "module"
 },
 "mne.channels.channels.ContainsMixin": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.ContainsMixin.__contains__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_contains_ch_type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.ContainsMixin.compensation_grade": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "get_current_comp",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.ContainsMixin.get_channel_types": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "_get_channel_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.Delaunay": {
  "data": {
   "shadows": "scipy.spatial.Delaunay"
  },
  "type": "import"
 },
 "mne.channels.channels.InterpolationMixin": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.InterpolationMixin.interpolate_bads": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "_check_origin",
    "_check_preload",
    "_interpolate_bads_eeg",
    "_interpolate_bads_meg",
    "len",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "mne.channels.channels.SetChannelsMixin._get_channel_positions": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "numpy.abs",
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin._set_channel_positions": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.anonymize": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "anonymize_info",
    "copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.plot_sensors": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "plot_sensors"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.rename_channels": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "mne.channels.channels.rename_channels"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_channel_types": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "list",
    "mne.channels.channels._check_set",
    "mne.channels.channels._human2fiff",
    "mne.channels.channels._human2unit",
    "mne.channels.channels._unit2human",
    "sorted",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_eeg_reference": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "set_eeg_reference"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_meas_date": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "_handle_meas_date",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.UpdateChannelsMixin._pick_drop_channels": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "_check_preload",
    "getattr",
    "hasattr",
    "isinstance",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.add_channels": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "AssertionError",
    "_check_preload",
    "_merge_info",
    "_validate_type",
    "getattr",
    "isinstance",
    "len",
    "list",
    "mne.channels.channels.sys",
    "numpy.array",
    "numpy.concatenate",
    "numpy.memmap",
    "numpy.prod",
    "range",
    "sum",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.drop_channels": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.setdiff1d",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "_picks_to_idx"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick_channels": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "pick_channels"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick_types": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.reorder_channels": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "ValueError",
    "_check_excludes_includes",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._ch_neighbor_connectivity": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.eye",
    "scipy.sparse.csr_matrix",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._check_set": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.channels.channels._human2fiff"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._compute_ch_connectivity": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "RuntimeError",
    "_find_topomap_coords",
    "_pair_grad_sensors",
    "_picks_by_type",
    "bool",
    "dict",
    "len",
    "numpy.eye",
    "numpy.repeat",
    "numpy.unique",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "scipy.spatial.Delaunay",
    "spatial_tris_connectivity",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_T1T2_mag_inds": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_ch_info": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "any",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_ch_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "RuntimeError",
    "_contains_ch_type",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_meg_system": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._human2fiff": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "mne.channels.channels._human2unit": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "mne.channels.channels._recursive_flatten": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._unit2human": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "mne.channels.channels.equalize_channels": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "_validate_type",
    "len",
    "list",
    "numpy.argsort",
    "numpy.array",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.find_ch_connectivity": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "channel_indices_by_type",
    "channel_type",
    "len",
    "mne.channels.channels._compute_ch_connectivity",
    "mne.channels.channels._get_ch_info",
    "mne.channels.channels.read_ch_connectivity",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.fix_mag_coil_types": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "len",
    "mne.channels.channels._get_T1T2_mag_inds",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.channels.channels.make_1020_channel_selections": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "RuntimeError",
    "_validate_type",
    "dict",
    "enumerate",
    "find_layout",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.channels.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.channels.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.channels.channels.read_ch_connectivity": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "len",
    "mne.channels.channels._ch_neighbor_connectivity",
    "mne.channels.channels._recursive_flatten",
    "mne.channels.channels.os",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.realpath",
    "scipy.io.loadmat",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.rename_channels": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "ValueError",
    "_validate_type",
    "any",
    "callable",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mapping",
    "numpy.array",
    "numpy.unique",
    "sorted",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.channels.channels.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.channels.data.neighbors": {
  "data": {},
  "type": "module"
 },
 "mne.channels.interpolation": {
  "data": {},
  "type": "module"
 },
 "mne.channels.interpolation._calc_g": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.polynomial.legendre.legval",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._calc_h": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.polynomial.legendre.legval",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._do_interp_dots": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "einsum",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_eeg": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "mne.channels.interpolation._do_interp_dots",
    "mne.channels.interpolation._make_interpolation_matrix",
    "numpy.abs",
    "numpy.bool",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.zeros",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_meg": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "_map_meg_channels",
    "len",
    "mne.channels.interpolation._do_interp_dots",
    "pick_channels",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._make_interpolation_matrix": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_normalize_vectors",
    "len",
    "mne.channels.interpolation._calc_g",
    "numpy.c_",
    "numpy.c_.dot",
    "numpy.ones",
    "numpy.r_",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation.legval": {
  "data": {
   "shadows": "numpy.polynomial.legendre.legval"
  },
  "type": "import"
 },
 "mne.channels.interpolation.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.channels.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.montage": {
  "data": {},
  "type": "module"
 },
 "mne.channels.montage.DigMontage": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.montage.DigMontage.__add__": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__iadd__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "RuntimeError",
    "_format_dig_points",
    "_get_fid_coords",
    "is_fid_defined",
    "numpy.array_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__iadd__.is_fid_defined": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "_validate_type",
    "len",
    "list",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__repr__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_count_points_by_type"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage._get_ch_pos": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "_get_dig_eeg",
    "dict",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage._get_dig_names": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.copy": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.plot": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_montage"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.save": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.channels.montage._check_get_coord_frame",
    "write_dig"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.channels.montage._BUILT_IN_MONTAGES": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.channels.montage._check_get_coord_frame": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._check_unit_and_get_scaling": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_check_option",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._get_montage_in_head": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "len",
    "mne.channels.montage.transform_to_head",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._get_polhemus_fastscan_header": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "itertools.takewhile",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._read_eeglab_locations": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "_sph_to_cart",
    "_topo_to_sph",
    "float",
    "numpy.genfromtxt",
    "numpy.loadtxt",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_elp_points": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "float",
    "mne.channels.montage.re",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_hsp_points": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "consume",
    "float",
    "get_hsp_fiducial",
    "int",
    "numpy.fromstring",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_hsp_points.consume": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "predicate"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._read_isotrak_hsp_points.get_hsp_fiducial": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "float",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._set_montage": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_backcompat_value",
    "_check_option",
    "_format_dig_points",
    "_pick_chs",
    "_pl",
    "_validate_type",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "mne.channels.montage.DigMontage",
    "mne.channels.montage._BUILT_IN_MONTAGES",
    "mne.channels.montage._get_montage_in_head",
    "mne.channels.montage._set_montage_deprecation_helper",
    "mne.channels.montage.make_standard_montage",
    "numpy.full",
    "numpy.nan",
    "numpy.zeros",
    "set",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._set_montage._backcompat_value": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "any",
    "numpy.concatenate",
    "numpy.full",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._set_montage_deprecation_helper": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "mne.channels.montage.compute_dev_head_t": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_fit_matched_points",
    "_get_fid_coords",
    "_quat_to_affine",
    "float",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.compute_native_head_t": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "Transform",
    "_get_fid_coords",
    "get_ras_to_neuromag_trans",
    "numpy.eye",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.channels.montage.get_builtin_montages": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mne.channels.montage._BUILT_IN_MONTAGES"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.make_dig_montage": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "_make_dig_points",
    "collections.OrderedDict",
    "isinstance",
    "list",
    "mne.channels.montage.DigMontage",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.make_standard_montage": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "_check_option",
    "mne.channels.montage._BUILT_IN_MONTAGES"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.montage.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.montage.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.channels.montage.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.channels.montage.read_custom_montage": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "_coord_frame_const",
    "_read_brainvision",
    "_read_csd",
    "_read_elc",
    "_read_elp_besa",
    "_read_sfp",
    "_read_theta_phi_in_degrees",
    "dict",
    "itertools.chain",
    "list",
    "mne.channels.montage._read_eeglab_locations",
    "mne.channels.montage.make_dig_montage",
    "numpy.linalg.norm",
    "numpy.median",
    "os.path.splitext",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_captrack": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "_check_fname",
    "_parse_brainvision_dig_montage",
    "mne.channels.montage.make_dig_montage"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_dat": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "_check_fname",
    "enumerate",
    "float",
    "len",
    "mne.channels.montage.make_dig_montage",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_egi": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "_check_fname",
    "_read_dig_montage_egi",
    "mne.channels.montage.make_dig_montage"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_fif": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "_check_fname",
    "_read_dig_fif",
    "fiff_open",
    "mne.channels.montage.DigMontage"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_hpts": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "_str_names",
    "dict",
    "enumerate",
    "mne.channels.montage._check_unit_and_get_scaling",
    "mne.channels.montage.make_dig_montage",
    "numpy.array",
    "numpy.genfromtxt",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_dig_polhemus_isotrak": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "dict",
    "len",
    "mne.channels.montage._check_unit_and_get_scaling",
    "mne.channels.montage._read_isotrak_elp_points",
    "mne.channels.montage._read_isotrak_hsp_points",
    "mne.channels.montage.make_dig_montage",
    "os.path.splitext",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_polhemus_fastscan": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "dict",
    "mne.channels.montage._check_unit_and_get_scaling",
    "mne.channels.montage._get_polhemus_fastscan_header",
    "numpy.loadtxt",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.takewhile": {
  "data": {
   "shadows": "itertools.takewhile"
  },
  "type": "import"
 },
 "mne.channels.montage.transform_to_head": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "apply_trans",
    "mne.channels.montage.compute_native_head_t"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests": {
  "data": {},
  "type": "module"
 },
 "mne.channels.tests.test_channels": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.tests.test_channels.base_dir",
    "mne.channels.tests.test_channels.io_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.channels.tests.test_channels.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._ch_neighbor_connectivity": {
  "data": {
   "shadows": "mne.channels.channels._ch_neighbor_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._compute_ch_connectivity": {
  "data": {
   "shadows": "mne.channels.channels._compute_ch_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.base_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.find_ch_connectivity": {
  "data": {
   "shadows": "mne.channels.find_ch_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.fname_kit_157": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.io_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.make_1020_channel_selections": {
  "data": {
   "shadows": "mne.channels.make_1020_channel_selections"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.raw_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.read_ch_connectivity": {
  "data": {
   "shadows": "mne.channels.read_ch_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_custom_montage": {
  "data": {
   "shadows": "mne.channels.read_custom_montage"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_eeglab": {
  "data": {
   "shadows": "mne.io.read_raw_eeglab"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.rename_channels": {
  "data": {
   "shadows": "mne.channels.rename_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.test_1020_selection": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "enumerate",
    "input",
    "max",
    "min",
    "mne.channels.make_1020_channel_selections",
    "mne.channels.read_custom_montage",
    "mne.channels.tests.test_channels.base_dir",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_eeglab",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_drop_channels": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_equalize_channels": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "TypeError",
    "mne.EpochsArray",
    "mne.EvokedArray",
    "mne.channels.equalize_channels",
    "mne.channels.tests.test_channels.pytest",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.make_ad_hoc_cov",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_find_ch_connectivity": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.channels.channels._compute_ch_connectivity",
    "mne.channels.find_ch_connectivity",
    "mne.channels.tests.test_channels.fname_kit_157",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_get_set_sensor_positions": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_read_ch_connectivity": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "a",
    "dict",
    "functools.partial",
    "len",
    "mne.channels.channels._ch_neighbor_connectivity",
    "mne.channels.read_ch_connectivity",
    "mne.channels.tests.test_channels.pytest",
    "mne.utils._TempDir",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.testing.assert_equal",
    "os.path.join",
    "scipy.io.savemat"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_rename_channels": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "copy.deepcopy",
    "mne.channels.rename_channels",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.read_info",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_reorder_channels": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_set_channel_types": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "mne.channels.tests.test_channels.pytest",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_FNIRS_HBO",
    "mne.io.constants.FIFF.FIFFV_COIL_NONE",
    "mne.io.constants.FIFF.FIFFV_ECG_CH",
    "mne.io.constants.FIFF.FIFFV_ECOG_CH",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_EOG_CH",
    "mne.io.constants.FIFF.FIFFV_FNIRS_CH",
    "mne.io.constants.FIFF.FIFFV_SEEG_CH",
    "mne.io.constants.FIFF.FIFF_UNIT_MOL",
    "mne.io.constants.FIFF.FIFF_UNIT_V",
    "mne.io.read_raw_fif",
    "mne.pick_channels"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.tests.test_interpolation.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.channels.tests.test_interpolation.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._interpolate_bads_meg": {
  "data": {
   "shadows": "mne.channels.interpolation._interpolate_bads_meg"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._load_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "events",
    "mne.Epochs",
    "mne.channels.tests.test_interpolation.event_name",
    "mne.channels.tests.test_interpolation.pytest",
    "mne.channels.tests.test_interpolation.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation._make_interpolation_matrix": {
  "data": {
   "shadows": "mne.channels.interpolation._make_interpolation_matrix"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._this_interpol": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "mne.channels.interpolation._interpolate_bads_meg"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.base_dir": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.event_id_2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.event_name": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.raw_fname": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.raw_fname_ctf": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.test_interpolate_meg_ctf": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dict",
    "mne.channels.tests.test_interpolation._this_interpol",
    "mne.channels.tests.test_interpolation.raw_fname_ctf",
    "mne.io.read_raw_fif",
    "mne.pick_channels",
    "numpy.corrcoef",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_ctf_comp": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mne.channels.tests.test_interpolation.raw_fname",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_ctf",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_eeg": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "bool",
    "hasattr",
    "len",
    "mne.channels.interpolation._make_interpolation_matrix",
    "mne.channels.tests.test_interpolation._load_data",
    "mne.channels.tests.test_interpolation.pytest",
    "mne.io.RawArray",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "numpy.all",
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.test_interpolation_meg": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.channels.tests.test_interpolation._load_data",
    "mne.channels.tests.test_interpolation.pytest",
    "mne.io.RawArray",
    "mne.pick_channels",
    "numpy.corrcoef"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.tests.test_layout.io_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.channels.tests.test_layout.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.HEAD_SIZE_DEFAULT": {
  "data": {
   "shadows": "mne.channels.HEAD_SIZE_DEFAULT"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._box_size": {
  "data": {
   "shadows": "mne.channels.layout._box_size"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._empty_info": {
  "data": {
   "shadows": "mne.io._empty_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._find_topomap_coords": {
  "data": {
   "shadows": "mne.channels.layout._find_topomap_coords"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._get_test_info": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mne.io._empty_info",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.bti_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fif_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.find_layout": {
  "data": {
   "shadows": "mne.channels.find_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fname_ctf_raw": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.fname_kit_157": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.fname_kit_umd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.generate_2d_layout": {
  "data": {
   "shadows": "mne.channels.layout.generate_2d_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.io_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.lout_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.make_eeg_layout": {
  "data": {
   "shadows": "mne.channels.make_eeg_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.make_grid_layout": {
  "data": {
   "shadows": "mne.channels.make_grid_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.test_box_size": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "mne.channels.layout._box_size",
    "numpy.c_",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_find_layout": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "matplotlib.pyplot.close",
    "mne.channels.find_layout",
    "mne.channels.tests.test_layout._get_test_info",
    "mne.channels.tests.test_layout.bti_dir",
    "mne.channels.tests.test_layout.copy",
    "mne.channels.tests.test_layout.fif_fname",
    "mne.channels.tests.test_layout.fname_ctf_raw",
    "mne.channels.tests.test_layout.fname_kit_157",
    "mne.channels.tests.test_layout.fname_kit_umd",
    "mne.channels.tests.test_layout.pytest",
    "mne.io.read_info",
    "mne.io.read_raw_kit",
    "mne.pick_info",
    "mne.pick_types",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_find_topomap_coords": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "mne.channels.HEAD_SIZE_DEFAULT",
    "mne.channels.layout._find_topomap_coords",
    "mne.channels.tests.test_layout.fif_fname",
    "mne.channels.tests.test_layout.pytest",
    "mne.io.constants.FIFF.FIFFV_POINT_EEG",
    "mne.io.read_info",
    "mne.pick_types",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_generate_2d_layout": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.channels.layout.generate_2d_layout",
    "numpy.array",
    "numpy.errstate",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_io_layout_lay": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_io_layout_lout": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_make_eeg_layout": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.channels.make_eeg_layout",
    "mne.channels.read_layout",
    "mne.channels.tests.test_layout.fif_fname",
    "mne.channels.tests.test_layout.lout_path",
    "mne.channels.tests.test_layout.pytest",
    "mne.io.read_info",
    "mne.utils._TempDir",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_make_grid_layout": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mne.channels.make_grid_layout",
    "mne.channels.read_layout",
    "mne.channels.tests.test_layout._get_test_info",
    "mne.channels.tests.test_layout.lout_path",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage": {
  "data": {},
  "type": "module"
 },
 "mne.channels.tests.test_standard_montage.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.HEAD_SIZE_DEFAULT": {
  "data": {
   "shadows": "mne.channels.montage.HEAD_SIZE_DEFAULT"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage._get_dig_eeg": {
  "data": {
   "shadows": "mne.io._digitization._get_dig_eeg"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage._get_fid_coords": {
  "data": {
   "shadows": "mne.io._digitization._get_fid_coords"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.get_builtin_montages": {
  "data": {
   "shadows": "mne.channels.montage.get_builtin_montages"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_standard_montage.test_standard_montage_errors": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "mne.channels.make_standard_montage",
    "mne.channels.tests.test_standard_montage.pytest"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage.test_standard_montages_have_fids": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.channels.make_standard_montage",
    "mne.channels.montage.get_builtin_montages",
    "mne.channels.tests.test_standard_montage.pytest",
    "mne.io._digitization._get_fid_coords",
    "mne.io.constants.FIFF.FIFFV_COORD_UNKNOWN"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage.test_standard_montages_on_sphere": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "mne.channels.make_standard_montage",
    "mne.channels.montage.HEAD_SIZE_DEFAULT",
    "mne.channels.tests.test_standard_montage.pytest",
    "mne.io._digitization._get_dig_eeg",
    "numpy.array",
    "numpy.full",
    "numpy.linalg.norm",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_standard_montage.test_standard_superset": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "mne.channels.make_standard_montage",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.chpi": {
  "data": {},
  "type": "module"
 },
 "mne.chpi._check_chpi_param": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "Projection",
    "ValueError",
    "_validate_type",
    "dict",
    "len",
    "list",
    "numpy.ndarray",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.chpi._chpi_locs_to_times_dig": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi._chpi_objective": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "jit",
    "numpy.dot",
    "quat_to_rot"
   ]
  },
  "type": "function"
 },
 "mne.chpi._compute_good_distances": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.abs",
    "numpy.argmax",
    "numpy.ones",
    "numpy.where",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fast_fit": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "jit",
    "mne.chpi._reorder_inv_model",
    "numpy.dot",
    "numpy.linalg.pinv",
    "numpy.linalg.svd",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_amplitudes": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "bool",
    "len",
    "mne.chpi._fast_fit",
    "numpy.int",
    "numpy.newaxis.astype",
    "numpy.round",
    "use_log_level"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_quat": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_fit_matched_points",
    "mne.chpi._chpi_objective",
    "numpy.linalg.norm",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_quat_subset": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "mne.chpi._fit_chpi_quat",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_coil_order_dev_head_trans": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "_angle_between_quats",
    "_quat_to_affine",
    "len",
    "max",
    "mne.chpi._fit_chpi_quat",
    "mne.chpi.itertools",
    "numpy.arange",
    "numpy.array",
    "numpy.linalg.det",
    "numpy.pi",
    "numpy.zeros",
    "quat_to_rot"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_magnetic_dipole": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "functools.partial",
    "mne.chpi._magnetic_dipole_delta_multi",
    "mne.chpi._magnetic_dipole_objective",
    "numpy.argmin",
    "numpy.dot",
    "objective",
    "scipy.optimize.fmin_cobyla"
   ]
  },
  "type": "function"
 },
 "mne.chpi._get_hpi_info": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.zeros",
    "pick_channels",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.chpi._get_hpi_initial_fit": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "apply_trans",
    "enumerate",
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.ones",
    "sorted",
    "str",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_delta": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "jit",
    "numpy.dot",
    "numpy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_delta_multi": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.matmul",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_objective": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "_magnetic_dipole_field_vec",
    "mne.chpi._magnetic_dipole_delta",
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.chpi._reorder_inv_model": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "jit",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.chpi._setup_ext_proj": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "Projection",
    "_get_mf_picks",
    "_prep_mf_coils",
    "_regularize_out",
    "_simplify_info",
    "_sss_basis",
    "dict",
    "len",
    "numpy.arange",
    "numpy.in1d",
    "pick_info",
    "pick_types",
    "scipy.linalg.orth",
    "setup_proj"
   ]
  },
  "type": "function"
 },
 "mne.chpi._setup_hpi_amplitude_fitting": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_validate_type",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "max",
    "min",
    "mne.chpi._get_hpi_info",
    "mne.chpi._reorder_inv_model",
    "mne.chpi._setup_ext_proj",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.diff",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.newaxis.astype",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros",
    "round",
    "scipy.linalg.pinv",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.chpi._time_prefix": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "mne.chpi._unit_quat_constraint": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "jit"
   ]
  },
  "type": "function"
 },
 "mne.chpi.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.chpi.compute_chpi_amplitudes": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ProgressBar",
    "dict",
    "enumerate",
    "len",
    "max",
    "min",
    "mne.chpi._fit_chpi_amplitudes",
    "mne.chpi._setup_hpi_amplitude_fitting",
    "numpy.arange",
    "numpy.empty",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.chpi.compute_chpi_locs": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "ProgressBar",
    "_check_option",
    "_concatenate_coils",
    "_create_meg_coils",
    "_magnetic_dipole_field_vec",
    "_make_guesses",
    "apply_trans",
    "compute_whitener",
    "dict",
    "float",
    "invert_transform",
    "len",
    "list",
    "make_ad_hoc_cov",
    "mne.chpi._check_chpi_param",
    "mne.chpi._fit_magnetic_dipole",
    "mne.chpi._get_hpi_initial_fit",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.linalg.norm",
    "numpy.linalg.svd",
    "numpy.zeros",
    "pick_channels",
    "pick_info",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi.compute_head_pos": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "_angle_between_quats",
    "_quat_to_affine",
    "apply_trans",
    "dict",
    "invert_transform",
    "len",
    "map",
    "mne.chpi._check_chpi_param",
    "mne.chpi._fit_chpi_quat_subset",
    "mne.chpi._get_hpi_initial_fit",
    "mne.chpi._time_prefix",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.where",
    "numpy.zeros",
    "range",
    "rot_to_quat",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi.extract_chpi_locs_ctf": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "RuntimeError",
    "_make_ctf_coord_trans_set",
    "apply_trans",
    "dict",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.diff",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "pick_channels_regexp",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.chpi.filter_chpi": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ProgressBar",
    "RuntimeError",
    "ValueError",
    "_validate_type",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "max",
    "min",
    "mne.chpi._setup_hpi_amplitude_fitting",
    "numpy.arange",
    "numpy.ceil",
    "numpy.dot",
    "numpy.inf",
    "pick_types",
    "scipy.linalg.pinv",
    "slice",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.chpi.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.chpi.head_pos_to_trans_rot_t": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "quat_to_rot"
   ]
  },
  "type": "function"
 },
 "mne.chpi.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.chpi.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.chpi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.chpi.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.chpi.read_head_pos": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_fname",
    "numpy.isnan",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "mne.chpi.write_head_pos": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "_check_fname",
    "numpy.array",
    "numpy.float64",
    "open",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.commands": {
  "data": {},
  "type": "module"
 },
 "mne.commands.mne_anonymize": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_anonymize.is_main",
    "mne.commands.mne_anonymize.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_anonymize.ANONYMIZE_FILE_PREFIX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.commands.mne_anonymize.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_anonymize.is_main": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "mne.commands.mne_anonymize.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_anonymize.mne_anonymize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mne.commands.mne_anonymize.ANONYMIZE_FILE_PREFIX",
    "mne.commands.mne_anonymize.mne",
    "os.path.basename",
    "os.path.isabs",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_anonymize.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_anonymize.run": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "mne.commands.mne_anonymize.mne_anonymize",
    "mne.commands.mne_anonymize.sys",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_anonymize.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_browse_raw.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_browse_raw._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.run": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "len",
    "matplotlib.pyplot.show",
    "mne.commands.mne_browse_raw.mne",
    "mne.commands.mne_browse_raw.sys",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_browse_raw.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_bti2fiff.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_bti2fiff.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.run": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mne.commands.mne_bti2fiff.sys",
    "mne.commands.utils.get_optparser",
    "mne.io.read_raw_bti"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_bti2fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_clean_eog_ecg.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_clean_eog_ecg.clean_ecg_eog": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "mne.commands.mne_clean_eog_ecg.mne",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_clean_eog_ecg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.run": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "mne.commands.mne_clean_eog_ecg.clean_ecg_eog",
    "mne.commands.mne_clean_eog_ecg.sys",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_clean_eog_ecg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compare_fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_compare_fiff.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_compare_fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compare_fiff.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_compare_fiff.mne",
    "mne.commands.mne_compare_fiff.sys"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_compare_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_compute_proj_ecg.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_compute_proj_ecg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.run": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "float",
    "isinstance",
    "mne.commands.mne_compute_proj_ecg.mne",
    "mne.commands.mne_compute_proj_ecg.os",
    "mne.commands.mne_compute_proj_ecg.sys",
    "mne.commands.utils.get_optparser",
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_compute_proj_ecg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_compute_proj_eog.is_main",
    "mne.commands.mne_compute_proj_eog.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_compute_proj_eog.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.is_main": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "mne.commands.mne_compute_proj_eog.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.run": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dict",
    "events",
    "float",
    "isinstance",
    "mne.commands.mne_compute_proj_eog.mne",
    "mne.commands.mne_compute_proj_eog.os",
    "mne.commands.mne_compute_proj_eog.sys",
    "mne.commands.utils.get_optparser",
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_compute_proj_eog.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_coreg.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_coreg.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.faulthandler": {
  "data": {
   "shadows": "faulthandler"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "float",
    "mne.commands.mne_coreg.faulthandler",
    "mne.commands.mne_coreg.mne",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser",
    "mne.utils.ETSContext",
    "os.path.expanduser",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_flash_bem": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_flash_bem.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_flash_bem.convert_flash_mris": {
  "data": {
   "shadows": "mne.bem.convert_flash_mris"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.make_flash_bem": {
  "data": {
   "shadows": "mne.bem.make_flash_bem"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.bem.convert_flash_mris",
    "mne.bem.make_flash_bem",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_freeview_bem_surfaces.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_freeview_bem_surfaces.freeview_bem_surfaces": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.commands.mne_freeview_bem_surfaces.os",
    "mne.commands.mne_freeview_bem_surfaces.sys",
    "mne.utils.get_subjects_dir",
    "mne.utils.run_subprocess",
    "os.path.isdir",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.run": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mne.commands.mne_freeview_bem_surfaces.freeview_bem_surfaces",
    "mne.commands.mne_freeview_bem_surfaces.os",
    "mne.commands.utils.get_optparser",
    "mne.utils.get_subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_kit2fiff.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_kit2fiff.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.run": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "map",
    "mne.commands.mne_kit2fiff.mne",
    "mne.commands.mne_kit2fiff.sys",
    "mne.commands.utils.get_optparser",
    "mne.io.read_raw_kit",
    "mne.utils.ETSContext",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_kit2fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_make_scalp_surfaces.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_make_scalp_surfaces.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces._check_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "IOError",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces._run": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "check_seghead",
    "dict",
    "enumerate",
    "len",
    "mne.commands.mne_make_scalp_surfaces._check_file",
    "mne.commands.mne_make_scalp_surfaces.copy",
    "mne.commands.mne_make_scalp_surfaces.mne",
    "mne.commands.mne_make_scalp_surfaces.os",
    "mne.utils.ETSContext",
    "mne.utils.get_subjects_dir",
    "mne.utils.logger.info",
    "mne.utils.run_subprocess",
    "mne.utils.verbose",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces._run.check_seghead": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.run": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.commands.mne_make_scalp_surfaces._run",
    "mne.commands.mne_make_scalp_surfaces.mne",
    "mne.commands.mne_make_scalp_surfaces.os",
    "mne.commands.mne_make_scalp_surfaces.sys",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_maxfilter.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_maxfilter.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mne.commands.mne_maxfilter.mne",
    "mne.commands.mne_maxfilter.os",
    "mne.commands.mne_maxfilter.sys",
    "mne.commands.utils.get_optparser",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_maxfilter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_prepare_bem_model.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_prepare_bem_model._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_prepare_bem_model.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.commands.mne_prepare_bem_model.mne",
    "mne.commands.mne_prepare_bem_model.os",
    "mne.commands.mne_prepare_bem_model.sys",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_prepare_bem_model.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_report": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_report.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_report.Report": {
  "data": {
   "shadows": "mne.report.Report"
  },
  "type": "import"
 },
 "mne.commands.mne_report._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_report.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_report.log_elapsed": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mne.utils.logger.info",
    "mne.utils.verbose",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_report.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.commands.mne_report.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_report.run": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "int",
    "mne.commands.mne_report.log_elapsed",
    "mne.commands.mne_report.sys",
    "mne.commands.mne_report.time",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser",
    "mne.report.Report",
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_report.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.commands.mne_report.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_setup_forward_model.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_setup_forward_model._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.commands.mne_setup_forward_model.mne",
    "mne.commands.mne_setup_forward_model.os",
    "mne.commands.mne_setup_forward_model.sys",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser",
    "mne.utils.get_subjects_dir",
    "mne.utils.warn",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_setup_forward_model.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_forward_model.warn": {
  "data": {
   "shadows": "mne.utils.warn"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_setup_source_space.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_setup_source_space._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space._check_option": {
  "data": {
   "shadows": "mne.utils._check_option"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_setup_source_space.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.commands.mne_setup_source_space.mne",
    "mne.commands.mne_setup_source_space.sys",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser",
    "mne.utils._check_option",
    "oct",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_setup_source_space.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_show_fiff.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_show_fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff.run": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_show_fiff.mne",
    "mne.commands.mne_show_fiff.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_show_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_show_info": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_show_info.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_show_info.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_show_info.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.commands.mne_show_info.mne",
    "mne.commands.mne_show_info.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_show_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_surf2bem.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_surf2bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.run": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "mne.commands.mne_surf2bem.mne",
    "mne.commands.mne_surf2bem.sys",
    "mne.commands.utils.get_optparser",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_surf2bem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_sys_info": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_sys_info.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_sys_info.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_sys_info.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_sys_info.mne",
    "mne.commands.mne_sys_info.sys"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_sys_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_watershed_bem.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_watershed_bem._add_verbose_flag": {
  "data": {
   "shadows": "mne.commands.utils._add_verbose_flag"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem._check_option": {
  "data": {
   "shadows": "mne.utils._check_option"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.make_watershed_bem": {
  "data": {
   "shadows": "mne.bem.make_watershed_bem"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mne.bem.make_watershed_bem",
    "mne.commands.mne_watershed_bem.sys",
    "mne.commands.utils._add_verbose_flag",
    "mne.commands.utils.get_optparser",
    "mne.utils._check_option"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_watershed_bem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_what": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.mne_what.mne"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_what.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_what.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_what.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.commands.mne_what.mne",
    "mne.commands.utils.get_optparser",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests": {
  "data": {},
  "type": "module"
 },
 "mne.commands.tests.test_commands": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.tests.test_commands.base_dir",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.commands.tests.test_commands.ArgvSetter": {
  "data": {
   "shadows": "mne.utils.ArgvSetter"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.ConductorModel": {
  "data": {
   "shadows": "mne.bem.ConductorModel"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.base_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.check_usage": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SystemExit",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_anonymize": {
  "data": {
   "shadows": "mne.commands.mne_anonymize"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_browse_raw": {
  "data": {
   "shadows": "mne.commands.mne_browse_raw"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_bti2fiff": {
  "data": {
   "shadows": "mne.commands.mne_bti2fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_clean_eog_ecg": {
  "data": {
   "shadows": "mne.commands.mne_clean_eog_ecg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compare_fiff": {
  "data": {
   "shadows": "mne.commands.mne_compare_fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compute_proj_ecg": {
  "data": {
   "shadows": "mne.commands.mne_compute_proj_ecg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compute_proj_eog": {
  "data": {
   "shadows": "mne.commands.mne_compute_proj_eog"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_coreg": {
  "data": {
   "shadows": "mne.commands.mne_coreg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_flash_bem": {
  "data": {
   "shadows": "mne.commands.mne_flash_bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_kit2fiff": {
  "data": {
   "shadows": "mne.commands.mne_kit2fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_make_scalp_surfaces": {
  "data": {
   "shadows": "mne.commands.mne_make_scalp_surfaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_maxfilter": {
  "data": {
   "shadows": "mne.commands.mne_maxfilter"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_prepare_bem_model": {
  "data": {
   "shadows": "mne.commands.mne_prepare_bem_model"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_report": {
  "data": {
   "shadows": "mne.commands.mne_report"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_setup_forward_model": {
  "data": {
   "shadows": "mne.commands.mne_setup_forward_model"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_setup_source_space": {
  "data": {
   "shadows": "mne.commands.mne_setup_source_space"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_show_fiff": {
  "data": {
   "shadows": "mne.commands.mne_show_fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_show_info": {
  "data": {
   "shadows": "mne.commands.mne_show_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_surf2bem": {
  "data": {
   "shadows": "mne.commands.mne_surf2bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_sys_info": {
  "data": {
   "shadows": "mne.commands.mne_sys_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_watershed_bem": {
  "data": {
   "shadows": "mne.commands.mne_watershed_bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_what": {
  "data": {
   "shadows": "mne.commands.mne_what"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.raw_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_vtk": {
  "data": {
   "shadows": "mne.utils.requires_vtk"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.sample": {
  "data": {
   "shadows": "mne.datasets.sample"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.subjects_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.test_anonymize": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "mne.commands.mne_anonymize",
    "mne.commands.mne_anonymize.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.io.read_info",
    "mne.utils.ArgvSetter",
    "mne.utils._stamp_to_dt",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_browse_raw": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mne.commands.mne_browse_raw",
    "mne.commands.mne_browse_raw.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_bti2fiff": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mne.commands.mne_bti2fiff",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_clean_eog_ecg": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_clean_eog_ecg",
    "mne.commands.mne_clean_eog_ecg.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.utils.ArgvSetter",
    "mne.utils.requires_mne",
    "os.path.basename",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_compare_fiff": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.commands.mne_compare_fiff",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_compute_proj_exg": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_compute_proj_ecg",
    "mne.commands.mne_compute_proj_eog",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.commands.tests.test_commands.shutil",
    "mne.utils.ArgvSetter",
    "open",
    "os.path.basename",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_coreg": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "hasattr",
    "mne.commands.mne_coreg"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_flash_bem": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "any",
    "len",
    "list",
    "mne.commands.mne_flash_bem",
    "mne.commands.mne_flash_bem.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.sample.data_path",
    "mne.datasets.sample.requires_sample_data",
    "mne.read_surface",
    "mne.utils.ArgvSetter",
    "mne.utils.requires_freesurfer",
    "os.path.basename",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_kit2fiff": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mne.commands.mne_kit2fiff",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_make_scalp_surfaces": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "len",
    "mne.commands.mne_make_scalp_surfaces",
    "mne.commands.mne_make_scalp_surfaces.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_bem_surfaces",
    "mne.utils.ArgvSetter",
    "mne.utils.modified_env",
    "mne.utils.requires_vtk",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_maxfilter": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.commands.mne_maxfilter",
    "mne.commands.mne_maxfilter.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_mne_prepare_bem_model": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "isinstance",
    "mne.bem.ConductorModel",
    "mne.commands.mne_prepare_bem_model",
    "mne.commands.mne_prepare_bem_model.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.pytest",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_bem_solution",
    "mne.utils.ArgvSetter",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_report": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_report",
    "mne.commands.mne_report.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.ArgvSetter",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "os.path.basename",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_setup_forward_model": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_setup_forward_model",
    "mne.commands.mne_setup_forward_model.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_bem_solution",
    "mne.read_bem_surfaces",
    "mne.utils.ArgvSetter",
    "os.path.join",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_setup_source_space": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "Exception",
    "len",
    "mne.commands.mne_setup_source_space",
    "mne.commands.mne_setup_source_space.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.utils.ArgvSetter",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_show_fiff": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "mne.commands.mne_show_fiff",
    "mne.commands.mne_show_fiff.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_show_info": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "mne.commands.mne_show_info",
    "mne.commands.mne_show_info.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_surf2bem": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mne.commands.mne_surf2bem",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_sys_info": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "SystemExit",
    "mne.commands.mne_sys_info",
    "mne.commands.mne_sys_info.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_watershed_bem": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "PermissionError",
    "dict",
    "len",
    "mne.commands.mne_watershed_bem",
    "mne.commands.mne_watershed_bem.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_surface",
    "mne.utils.ArgvSetter",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_what": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.commands.mne_browse_raw",
    "mne.commands.mne_what.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.commands.utils": {
  "data": {},
  "type": "module"
 },
 "mne.commands.utils.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "mne.commands.utils._add_verbose_flag": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mne.commands.utils.get_optparser": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "mne.commands.utils.load_module",
    "mne.commands.utils.mne",
    "mne.commands.utils.os",
    "optparse.OptionParser",
    "optparse.OptionParser.format_epilog"
   ]
  },
  "type": "function"
 },
 "mne.commands.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.commands.utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mne.commands.utils.load_module": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "importlib.util.module_from_spec",
    "importlib.util.spec_from_file_location"
   ]
  },
  "type": "function"
 },
 "mne.commands.utils.main": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "mne.commands.utils.glob",
    "mne.commands.utils.importlib",
    "mne.commands.utils.mne",
    "mne.commands.utils.sys",
    "os.path.dirname",
    "os.path.join",
    "os.path.sep",
    "print",
    "print_help",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.commands.utils.main.print_help": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.utils.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.utils.module_from_spec": {
  "data": {
   "shadows": "importlib.util.module_from_spec"
  },
  "type": "import"
 },
 "mne.commands.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.utils.spec_from_file_location": {
  "data": {
   "shadows": "importlib.util.spec_from_file_location"
  },
  "type": "import"
 },
 "mne.commands.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.connectivity": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.effective": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.effective.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.connectivity.effective.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.effective.phase_slope_index": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "mne.connectivity.effective.copy",
    "numpy.asarray",
    "numpy.complex128",
    "numpy.conj",
    "numpy.empty",
    "numpy.float",
    "numpy.imag",
    "numpy.inf",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros",
    "slice",
    "spectral_connectivity",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.envelope": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.envelope.envelope_correlation": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "_check_combine",
    "_check_option",
    "enumerate",
    "fun",
    "isinstance",
    "list",
    "next_fast_len",
    "numpy.abs",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dot",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.mean",
    "scipy.signal.hilbert"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.envelope.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.connectivity.envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.spectral": {
  "data": {
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEst",
    "mne.connectivity.spectral._CohyEst",
    "mne.connectivity.spectral._ImCohEst",
    "mne.connectivity.spectral._PLIEst",
    "mne.connectivity.spectral._PLIUnbiasedEst",
    "mne.connectivity.spectral._PLVEst",
    "mne.connectivity.spectral._PPCEst",
    "mne.connectivity.spectral._WPLIDebiasedEst",
    "mne.connectivity.spectral._WPLIEst",
    "mne.connectivity.spectral._ciPLVEst"
   ]
  },
  "type": "module"
 },
 "mne.connectivity.spectral._AbstractConEstBase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._AbstractConEstBase.accumulate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.combine": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.compute_con": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.start_epoch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CON_METHOD_MAP": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "mne.connectivity.spectral._CohEst": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohEst.compute_con": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohEstBase": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohEstBase.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohEstBase.accumulate": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohyEst": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohyEst.compute_con": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.connectivity.spectral._AbstractConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.combine": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.start_epoch": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ImCohEst": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._ImCohEst.compute_con": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.imag",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLIEst.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PLIEst",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst.accumulate": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.imag",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst.compute_con": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIUnbiasedEst": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PLIEst"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLIUnbiasedEst.compute_con": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLVEst.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PLVEst",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst.accumulate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst.compute_con": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PPCEst.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PPCEst",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst.accumulate": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst.compute_con": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.real",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "mne.connectivity.spectral._WPLIDebiasedEst",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.accumulate": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.imag"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.compute_con": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._WPLIEst.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mne.connectivity.spectral._WPLIEst",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst.accumulate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.imag"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst.compute_con": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._assemble_spectral_params": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "ValueError",
    "_compute_mt_params",
    "dict",
    "float",
    "len",
    "morlet",
    "numpy.array",
    "numpy.hanning"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._check_estimators": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "_get_args",
    "any",
    "isinstance",
    "len",
    "list",
    "mne.connectivity.spectral._CON_METHOD_MAP",
    "mne.connectivity.spectral._check_method",
    "mtype",
    "mtype.compute_con",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._check_method": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "inspect.getmembers",
    "mne.connectivity.spectral._AbstractConEstBase"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ciPLVEst": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._ciPLVEst.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mne.connectivity.spectral._ciPLVEst",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ciPLVEst.accumulate": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ciPLVEst.compute_con": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.clip",
    "numpy.imag",
    "numpy.real",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._epoch_spectral_connectivity": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "_check_option",
    "_csd_from_mt",
    "_mt_spectra",
    "_psd_from_mt",
    "_psd_from_mt_adaptive",
    "cwt",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "list",
    "mtype",
    "numpy.array",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._get_and_verify_data_sizes": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "list",
    "numpy.any",
    "tuple",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._get_n_epochs": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._prepare_connectivity": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "ValueError",
    "_time_mask",
    "any",
    "check_indices",
    "enumerate",
    "float",
    "len",
    "mne.connectivity.spectral._get_and_verify_data_sizes",
    "numpy.any",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.inf",
    "numpy.linspace",
    "numpy.min",
    "numpy.tril_indices",
    "numpy.where",
    "numpy.zeros",
    "range",
    "rfftfreq",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral.getmembers": {
  "data": {
   "shadows": "inspect.getmembers"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.spectral_connectivity": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "float",
    "isinstance",
    "len",
    "list",
    "mne.connectivity.spectral._assemble_spectral_params",
    "mne.connectivity.spectral._check_estimators",
    "mne.connectivity.spectral._epoch_spectral_connectivity",
    "mne.connectivity.spectral._get_and_verify_data_sizes",
    "mne.connectivity.spectral._get_n_epochs",
    "mne.connectivity.spectral._prepare_connectivity",
    "mtype",
    "my_epoch_spectral_connectivity",
    "numpy.any",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "numpy.mean",
    "numpy.pi",
    "numpy.r_",
    "numpy.searchsorted",
    "numpy.unique",
    "numpy.zeros",
    "parallel",
    "parallel_func",
    "range",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_effective": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_effective.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.phase_slope_index": {
  "data": {
   "shadows": "mne.connectivity.phase_slope_index"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.test_psi": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mne.connectivity.phase_slope_index",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_envelope": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_envelope._compute_corrs_orig": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.dstack",
    "numpy.empty",
    "numpy.imag",
    "numpy.mean",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_envelope.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.envelope_correlation": {
  "data": {
   "shadows": "mne.connectivity.envelope_correlation"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_envelope.test_envelope_correlation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mne.connectivity.envelope_correlation",
    "mne.connectivity.tests.test_envelope._compute_corrs_orig",
    "mne.connectivity.tests.test_envelope.pytest",
    "numpy.abs",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.diag",
    "numpy.mean",
    "numpy.min",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "scipy.signal.hilbert"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.connectivity.tests.test_spectral.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._CohEst": {
  "data": {
   "shadows": "mne.connectivity.spectral._CohEst"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._get_n_epochs": {
  "data": {
   "shadows": "mne.connectivity.spectral._get_n_epochs"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._stc_gen": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "mne.SourceEstimate",
    "numpy.arange",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.spectral_connectivity": {
  "data": {
   "shadows": "mne.connectivity.spectral_connectivity"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.test_spectral_connectivity": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "list",
    "mne.connectivity.spectral._CohEst",
    "mne.connectivity.spectral._get_n_epochs",
    "mne.connectivity.spectral_connectivity",
    "mne.connectivity.tests.test_spectral._stc_gen",
    "mne.connectivity.tests.test_spectral.pytest",
    "mne.filter.filter_data",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.imag",
    "numpy.linspace",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "numpy.transpose",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.degree": {
  "data": {
   "shadows": "mne.connectivity.degree"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.seed_target_indices": {
  "data": {
   "shadows": "mne.connectivity.seed_target_indices"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.test_degree": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "mne.connectivity.degree",
    "mne.connectivity.tests.test_utils.pytest",
    "numpy.array",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_utils.test_indices": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "len",
    "mne.connectivity.seed_target_indices",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.utils": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.utils.check_indices": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.utils.degree": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "numpy.allclose",
    "numpy.argsort",
    "numpy.array",
    "numpy.sum",
    "numpy.tril_indices",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.utils.seed_target_indices": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.coreg.bem_dirname",
    "mne.coreg.bem_fname",
    "mne.coreg.head_bem_fname",
    "mne.coreg.os",
    "mne.coreg.subject_dirname",
    "mne.coreg.surf_dirname",
    "pformat"
   ]
  },
  "type": "module"
 },
 "mne.coreg._ALLOW_ANALITICAL": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "mne.coreg._decimate_points": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.histogramdd",
    "numpy.logical_and",
    "numpy.nonzero",
    "numpy.sum",
    "scipy.spatial.distance.cdist",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_fiducials_files": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "glob.iglob",
    "mne.coreg.fid_fname",
    "mne.coreg.fid_fname_general",
    "mne.coreg.os",
    "mne.coreg.re",
    "pformat"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_head_bem": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.coreg._head_fnames",
    "mne.coreg._high_res_head_fnames",
    "mne.coreg.os"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_label_paths": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "get_subjects_dir",
    "glob.iglob",
    "mne.coreg.fnmatch",
    "mne.coreg.os"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_mri_paths": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "IOError",
    "get_subjects_dir",
    "glob.iglob",
    "len",
    "mne.coreg._find_fiducials_files",
    "mne.coreg.bem_dirname",
    "mne.coreg.bem_fname",
    "mne.coreg.fnmatch",
    "mne.coreg.head_bem_fname",
    "mne.coreg.mri_dirname",
    "mne.coreg.mri_transforms_dirname",
    "mne.coreg.os",
    "mne.coreg.re",
    "mne.coreg.surf_dirname",
    "pformat"
   ]
  },
  "type": "function"
 },
 "mne.coreg._generic_fit": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.hstack",
    "numpy.ones",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "mne.coreg._generic_fit.error": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "functools.reduce",
    "numpy.dot",
    "rotation",
    "scaling",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.coreg._head_fnames": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.coreg._high_res_head_fnames": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.coreg._is_mri_subject": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "bool",
    "get_subjects_dir",
    "mne.coreg._find_head_bem"
   ]
  },
  "type": "function"
 },
 "mne.coreg._is_scaled_mri_subject": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "get_subjects_dir",
    "mne.coreg._is_mri_subject",
    "mne.coreg.os"
   ]
  },
  "type": "function"
 },
 "mne.coreg._make_writable": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.coreg.os",
    "mne.coreg.stat"
   ]
  },
  "type": "function"
 },
 "mne.coreg._make_writable_recursive": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mne.coreg._make_writable",
    "mne.coreg.os",
    "mne.coreg.sys"
   ]
  },
  "type": "function"
 },
 "mne.coreg._mri_subject_has_bem": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "bool",
    "get_subjects_dir",
    "glob.glob",
    "len",
    "mne.coreg.bem_fname"
   ]
  },
  "type": "function"
 },
 "mne.coreg._scale_mri": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "has_nibabel",
    "mne.coreg._scale_params",
    "mne.coreg.mri_dirname",
    "mne.coreg.nibabel",
    "numpy.array",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.coreg._scale_params": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "get_subjects_dir",
    "len",
    "mne.coreg.read_mri_cfg",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "mne.coreg._scale_xfm": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "Transform",
    "_read_fs_xfm",
    "_read_mri_info",
    "_write_fs_xfm",
    "combine_transforms",
    "has_nibabel",
    "invert_transform",
    "len",
    "mne.coreg._scale_params",
    "mne.coreg.mri_dirname",
    "mne.coreg.mri_transforms_dirname",
    "mne.coreg.os",
    "numpy.atleast_1d",
    "numpy.tile",
    "os.path.basename",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "scaling"
   ]
  },
  "type": "function"
 },
 "mne.coreg._trans_from_params": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "functools.reduce",
    "numpy.dot",
    "rotation",
    "scaling",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.coreg._write_mri_config": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "mne.coreg.configparser",
    "numpy.asarray",
    "numpy.isscalar",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.coreg.bem_dirname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.coreg.bem_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.coreg.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.coreg.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "mne.coreg.coregister_fiducials": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_fiducial_coords",
    "isinstance",
    "len",
    "mne.coreg.fit_matched_points",
    "read_fiducials",
    "read_info",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.coreg.create_default_subject": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "get_config",
    "get_subjects_dir",
    "mne.coreg._make_writable_recursive",
    "mne.coreg.os",
    "mne.coreg.shutil"
   ]
  },
  "type": "function"
 },
 "mne.coreg.fid_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.coreg.fid_fname_general": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.coreg.fit_matched_points": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_fit_matched_points",
    "_quat_to_euler",
    "bool",
    "float",
    "int",
    "len",
    "mne.coreg._ALLOW_ANALITICAL",
    "mne.coreg._generic_fit",
    "mne.coreg._trans_from_params",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.coreg.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.coreg.get_mni_fiducials": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "_read_talxfm",
    "apply_trans",
    "invert_transform",
    "mne.coreg.os",
    "numpy.array",
    "range",
    "read_fiducials"
   ]
  },
  "type": "function"
 },
 "mne.coreg.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.coreg.head_bem_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.coreg.iglob": {
  "data": {
   "shadows": "glob.iglob"
  },
  "type": "import"
 },
 "mne.coreg.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "mne.coreg.mri_dirname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.coreg.mri_transforms_dirname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.coreg.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.coreg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.coreg.read_mri_cfg": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "float",
    "get_subjects_dir",
    "mne.coreg.configparser",
    "mne.coreg.os",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.coreg.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.coreg.scale_bem": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "IOError",
    "_normalize_vectors",
    "len",
    "mne.coreg._scale_params",
    "mne.coreg.bem_fname",
    "mne.coreg.os",
    "read_bem_surfaces",
    "write_bem_surfaces"
   ]
  },
  "type": "function"
 },
 "mne.coreg.scale_labels": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "Label",
    "get_subjects_dir",
    "mne.coreg._find_label_paths",
    "mne.coreg._scale_params",
    "mne.coreg.os",
    "read_label"
   ]
  },
  "type": "function"
 },
 "mne.coreg.scale_mri": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "get_subjects_dir",
    "glob.iglob",
    "mne.coreg._find_mri_paths",
    "mne.coreg._scale_mri",
    "mne.coreg._scale_xfm",
    "mne.coreg._write_mri_config",
    "mne.coreg.mri_dirname",
    "mne.coreg.mri_transforms_dirname",
    "mne.coreg.os",
    "mne.coreg.scale_bem",
    "mne.coreg.scale_labels",
    "mne.coreg.scale_source_space",
    "mne.coreg.shutil",
    "mne.coreg.subject_dirname",
    "numpy.atleast_1d",
    "numpy.isclose",
    "read_fiducials",
    "read_surface",
    "write_fiducials",
    "write_surface"
   ]
  },
  "type": "function"
 },
 "mne.coreg.scale_source_space": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "_normalize_vectors",
    "add_source_space_distances",
    "float",
    "mne.coreg._scale_params",
    "mne.coreg.bem_dirname",
    "mne.coreg.os",
    "mne.coreg.re",
    "mne.coreg.src_fname",
    "numpy.abs",
    "read_source_spaces",
    "write_source_spaces"
   ]
  },
  "type": "function"
 },
 "mne.coreg.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.coreg.src_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.coreg.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mne.coreg.subject_dirname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.coreg.surf_dirname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.coreg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.coreg.trans_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.data": {
  "data": {},
  "type": "module"
 },
 "mne.datasets": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.datasets._fake": {
  "data": {},
  "type": "module"
 },
 "mne.datasets._fake._fake": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets._fake._fake.data_path",
    "mne.datasets._fake._fake.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets._fake._fake.data_path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets._fake._fake.get_version": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets._fsaverage": {
  "data": {},
  "type": "module"
 },
 "mne.datasets._fsaverage.base": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "mne.datasets._fsaverage.base.FSAVERAGE_MANIFEST_PATH": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets._fsaverage.base._get_create_subjects_dir": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "_get_path",
    "get_subjects_dir",
    "mne.datasets._fsaverage.base.os",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets._fsaverage.base._set_montage_coreg_path": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "get_subjects_dir",
    "mne.datasets._fsaverage.base._get_create_subjects_dir",
    "set_config"
   ]
  },
  "type": "function"
 },
 "mne.datasets._fsaverage.base.fetch_fsaverage": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_manifest_check_download",
    "dict",
    "mne.datasets._fsaverage.base.FSAVERAGE_MANIFEST_PATH",
    "mne.datasets._fsaverage.base._set_montage_coreg_path",
    "mne.datasets._fsaverage.base.os",
    "os.path.abspath",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets._fsaverage.base.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets._fsaverage.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_auditory": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_auditory._data_path_doc",
    "mne.datasets.brainstorm.bst_auditory.data_path",
    "mne.datasets.brainstorm.bst_auditory.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_auditory._data_path_doc": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory.data_path": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.description": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_auditory._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.get_version": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_phantom_ctf._data_path_doc",
    "mne.datasets.brainstorm.bst_phantom_ctf.data_path",
    "mne.datasets.brainstorm.bst_phantom_ctf.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf._data_path_doc": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.data_path": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.description": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_phantom_ctf._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.get_version": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_phantom_elekta._data_path_doc",
    "mne.datasets.brainstorm.bst_phantom_elekta.data_path",
    "mne.datasets.brainstorm.bst_phantom_elekta.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta._data_path_doc": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta._description": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.data_path": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.description": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_phantom_elekta._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.get_version": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_raw._data_path_doc",
    "mne.datasets.brainstorm.bst_raw.data_path",
    "mne.datasets.brainstorm.bst_raw.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_raw._data_path_doc": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw._description": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw._skip_bstraw_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.brainstorm.bst_raw.has_brainstorm_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.data_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.description": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_raw._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.get_version": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw.requires_bstraw_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_raw._skip_bstraw_data",
    "mne.datasets.brainstorm.bst_raw.pytest"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_resting._data_path_doc",
    "mne.datasets.brainstorm.bst_resting.data_path",
    "mne.datasets.brainstorm.bst_resting.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_resting._data_path_doc": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting._description": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting.data_path": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.description": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_resting._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.get_version": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.eegbci": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.eegbci.eegbci": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.eegbci.eegbci.EEGMI_URL": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.eegbci.eegbci.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_do_path_update",
    "_fetch_file",
    "_get_path",
    "_url_to_local_path",
    "mne.datasets.eegbci.eegbci.os",
    "os.path",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.eegbci.eegbci.load_data": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "hasattr",
    "mne.datasets.eegbci.eegbci.EEGMI_URL",
    "mne.datasets.eegbci.eegbci.data_path",
    "os.path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.eegbci.eegbci.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.eegbci.eegbci.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.eegbci.eegbci.standardize": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.conf_name",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_path",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.conf_name": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_data_path",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.get_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_get_version",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.has_mtrf_data": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.fnirs_motor": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.fnirs_motor.fnirs_motor": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.fnirs_motor.fnirs_motor.data_path",
    "mne.datasets.fnirs_motor.fnirs_motor.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.get_version": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.has_fnirs_motor_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.fnirs_motor.fnirs_motor.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.hf_sef.hf_sef": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.hf_sef.hf_sef.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "IOError",
    "_check_option",
    "_do_path_update",
    "_fetch_file",
    "_get_path",
    "any",
    "dict",
    "mne.datasets.hf_sef.hf_sef.os",
    "mne.datasets.hf_sef.hf_sef.tarfile",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.datasets.hf_sef.hf_sef.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef.hf_sef.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef.hf_sef.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mne.datasets.kiloword": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.kiloword.kiloword": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.kiloword.kiloword.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.kiloword.kiloword.data_path": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.kiloword.kiloword.get_version": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.limo": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.limo.limo": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.limo.limo.data_path": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_do_path_update",
    "_fetch_file",
    "_get_path",
    "any",
    "len",
    "mne.datasets.limo.limo.os",
    "mne.datasets.limo.limo.root_url",
    "mne.datasets.limo.limo.shutil",
    "mne.datasets.limo.limo.subject_ids",
    "mne.datasets.limo.limo.zipfile",
    "os.path.isdir",
    "os.path.join",
    "os.path.splitext",
    "sys.stdout.write"
   ]
  },
  "type": "function"
 },
 "mne.datasets.limo.limo.load_data": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "EpochsArray",
    "ValueError",
    "_check_pandas_installed",
    "create_info",
    "enumerate",
    "events",
    "int",
    "isinstance",
    "len",
    "list",
    "make_standard_montage",
    "mne.datasets.limo.limo.data_path",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.transpose",
    "numpy.zeros",
    "os.path.join",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.datasets.limo.limo.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.root_url": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.datasets.limo.limo.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "mne.datasets.limo.limo.subject_ids": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.datasets.limo.limo.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.misc": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.misc._misc": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.misc._misc.data_path"
   ]
  },
  "type": "module"
 },
 "mne.datasets.misc._misc.data_path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.mtrf": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.mtrf.mtrf": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.mtrf.mtrf.data_name",
    "mne.datasets.mtrf.mtrf.data_path",
    "mne.datasets.mtrf.mtrf.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.mtrf.mtrf.data_name": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.mtrf.mtrf.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path",
    "mne.datasets.mtrf.mtrf.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.mtrf.mtrf.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_get_version",
    "mne.datasets.mtrf.mtrf.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.mtrf.mtrf.has_mtrf_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.mtrf.mtrf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.multimodal": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.multimodal.multimodal": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.multimodal.multimodal.data_path",
    "mne.datasets.multimodal.multimodal.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.multimodal.multimodal.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.multimodal.multimodal.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.multimodal.multimodal.has_multimodal_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.multimodal.multimodal.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.opm": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.opm.opm": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.opm.opm.data_path",
    "mne.datasets.opm.opm.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.opm.opm.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.opm.opm.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.opm.opm.has_opm_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.opm.opm.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.phantom_4dbti": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.phantom_4dbti.phantom_4dbti.data_path",
    "mne.datasets.phantom_4dbti.phantom_4dbti.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.data_path": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.has_phantom_4dbti_data": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.phantom_4dbti.phantom_4dbti.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.sample": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sample.sample": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.sample.sample.data_path",
    "mne.datasets.sample.sample.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.sample.sample._skip_sample_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.sample.sample.has_sample_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.has_sample_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.sample.sample.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.sample.sample.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.sample.sample.requires_sample_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.datasets.sample.sample._skip_sample_data",
    "mne.datasets.sample.sample.pytest"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet._utils": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL_SHA1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL_SHA1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet._utils._check_subjects": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.setdiff1d",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._data_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_get_path",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._fetch_one": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_fetch_file",
    "mne.datasets.sleep_physionet._utils.os",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._update_sleep_age_records": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_TempDir",
    "_check_pandas_installed",
    "_fetch_file",
    "distutils.version.LooseVersion",
    "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL",
    "mne.datasets.sleep_physionet._utils.AGE_RECORDS_URL_SHA1",
    "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS",
    "mne.datasets.sleep_physionet._utils.sha1sums_fname",
    "os.path.join",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils._update_sleep_temazepam_records": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_TempDir",
    "_check_pandas_installed",
    "_fetch_file",
    "distutils.version.LooseVersion",
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL",
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_RECORDS_URL_SHA1",
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS",
    "mne.datasets.sleep_physionet._utils.sha1sums_fname",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet._utils.sha1sums_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.age": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet.age.BASE_URL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.age.data_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.age.fetch_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_check_subjects",
    "_fetch_one",
    "mne.datasets.sleep_physionet.age.BASE_URL",
    "mne.datasets.sleep_physionet.age.data_path",
    "numpy.loadtxt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.age.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.temazepam": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sleep_physionet.temazepam.BASE_URL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.temazepam.data_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.sleep_physionet.temazepam.fetch_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_check_subjects",
    "_fetch_one",
    "mne.datasets.sleep_physionet.temazepam.BASE_URL",
    "mne.datasets.sleep_physionet.temazepam.data_path",
    "numpy.loadtxt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.temazepam.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.AGE_SLEEP_RECORDS": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.TEMAZEPAM_SLEEP_RECORDS": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._check_mocked_function_calls": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_path",
    "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_url"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._fake_fetch_file": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._get_expected_url": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._keep_basename_only": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vectorize",
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._update_sleep_age_records": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils._update_sleep_age_records"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet._update_sleep_temazepam_records": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet._utils._update_sleep_temazepam_records"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.age": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet.age"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.temazepam": {
  "data": {
   "shadows": "mne.datasets.sleep_physionet.temazepam"
  },
  "type": "import"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_run_update_age_records": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "mne.datasets.sleep_physionet._utils.AGE_SLEEP_RECORDS",
    "mne.datasets.sleep_physionet._utils._update_sleep_age_records",
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest",
    "mne.utils.requires_good_network",
    "mne.utils.requires_pandas",
    "mne.utils.requires_version",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "pandas.__version__",
    "pandas.read_csv",
    "pandas.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_run_update_temazepam_records": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "mne.datasets.sleep_physionet._utils.TEMAZEPAM_SLEEP_RECORDS",
    "mne.datasets.sleep_physionet._utils._update_sleep_temazepam_records",
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest",
    "mne.utils.requires_good_network",
    "mne.utils.requires_pandas",
    "mne.utils.requires_version",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "pandas.__version__",
    "pandas.read_csv",
    "pandas.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_sleep_physionet_age": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.sleep_physionet.age.data_path",
    "mne.datasets.sleep_physionet.age.fetch_data",
    "mne.datasets.sleep_physionet.tests.test_physionet._check_mocked_function_calls",
    "mne.datasets.sleep_physionet.tests.test_physionet._fake_fetch_file",
    "mne.datasets.sleep_physionet.tests.test_physionet._keep_basename_only",
    "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir",
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sleep_physionet.tests.test_physionet.test_sleep_physionet_temazepam": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.sleep_physionet.temazepam.data_path",
    "mne.datasets.sleep_physionet.temazepam.fetch_data",
    "mne.datasets.sleep_physionet.tests.test_physionet._check_mocked_function_calls",
    "mne.datasets.sleep_physionet.tests.test_physionet._fake_fetch_file",
    "mne.datasets.sleep_physionet.tests.test_physionet._keep_basename_only",
    "mne.datasets.sleep_physionet.tests.test_physionet.physionet_tmpdir",
    "mne.datasets.sleep_physionet.tests.test_physionet.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.datasets.somato": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.somato.somato": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.somato.somato.data_path",
    "mne.datasets.somato.somato.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.somato.somato.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.somato.somato.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.somato.somato.has_somato_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.somato.somato.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.spm_face": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.spm_face.spm_data": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.spm_face.spm_data.data_path",
    "mne.datasets.spm_face.spm_data.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.spm_face.spm_data._skip_spm_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.spm_face.spm_data.has_spm_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.data_path": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.has_spm_data": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.spm_face.spm_data.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.spm_face.spm_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.spm_face.spm_data.requires_spm_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.datasets.spm_face.spm_data._skip_spm_data",
    "mne.datasets.spm_face.spm_data.pytest"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.testing._testing": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.testing._testing.data_path",
    "mne.datasets.testing._testing.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.testing._testing._pytest_param": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.datasets.testing._testing._skip_testing_data",
    "mne.datasets.testing._testing.pytest"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing._skip_testing_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.testing._testing.has_testing_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "_data_path",
    "get_config"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.get_version": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.has_testing_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.testing._testing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.testing._testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.testing._testing.requires_testing_data": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mne.datasets.testing._testing._skip_testing_data",
    "mne.datasets.testing._testing.pytest"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.tests.test_datasets": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.datasets.tests.test_datasets.ArgvSetter": {
  "data": {
   "shadows": "mne.utils.ArgvSetter"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._fake_fetch_file": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets._fake_zip_fetch": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "mne.datasets.tests.test_datasets._zip_fnames",
    "mne.datasets.tests.test_datasets.zipfile"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets._manifest_check_download": {
  "data": {
   "shadows": "mne.datasets.utils._manifest_check_download"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._pl": {
  "data": {
   "shadows": "mne.utils._pl"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._set_montage_coreg_path": {
  "data": {
   "shadows": "mne.datasets._fsaverage.base._set_montage_coreg_path"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets._zip_fnames": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mne.datasets.tests.test_datasets.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.datasets": {
  "data": {
   "shadows": "mne.datasets"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.subjects_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.datasets.tests.test_datasets.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.test_datasets_basic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mne.datasets",
    "mne.datasets._fsaverage.base._set_montage_coreg_path",
    "mne.datasets.brainstorm",
    "mne.datasets.utils._get_path",
    "mne.datasets.utils.has_dataset",
    "mne.utils.get_subjects_dir",
    "mne.utils.modified_env",
    "os.path.join",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_downloads": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mne.datasets._fake.data_path",
    "mne.datasets._fake.get_version",
    "mne.utils.requires_good_network",
    "os.path",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_fetch_parcellations": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.datasets.fetch_aparc_sub_parcellation",
    "mne.datasets.fetch_hcp_mmp_parcellation",
    "mne.datasets.testing.requires_testing_data",
    "mne.datasets.tests.test_datasets.os",
    "mne.datasets.tests.test_datasets.pytest",
    "mne.datasets.tests.test_datasets.shutil",
    "mne.datasets.tests.test_datasets.subjects_dir",
    "mne.utils.ArgvSetter",
    "mne.utils.requires_good_network",
    "open",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_manifest_check_download": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "mne.datasets.tests.test_datasets._fake_zip_fetch",
    "mne.datasets.tests.test_datasets._zip_fnames",
    "mne.datasets.tests.test_datasets.os",
    "mne.datasets.tests.test_datasets.pytest",
    "mne.datasets.tests.test_datasets.sys",
    "mne.datasets.utils",
    "mne.datasets.utils._manifest_check_download",
    "mne.utils._pl",
    "mne.utils.catch_logging",
    "mne.utils.use_log_level",
    "open",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.use_log_level": {
  "data": {
   "shadows": "mne.utils.use_log_level"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.utils": {
  "data": {
   "symbols_in_volume": [
    "docformat"
   ]
  },
  "type": "module"
 },
 "mne.datasets.utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.datasets.utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.datasets.utils._bst_license_text": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.datasets.utils._data_path": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "any",
    "dict",
    "distutils.version.LooseVersion",
    "input",
    "isinstance",
    "len",
    "list",
    "mne.datasets.utils._bst_license_text",
    "mne.datasets.utils._dataset_version",
    "mne.datasets.utils._do_path_update",
    "mne.datasets.utils._download",
    "mne.datasets.utils._extract",
    "mne.datasets.utils._get_path",
    "mne.datasets.utils.os",
    "mne.datasets.utils.sys",
    "os.path.abspath",
    "os.path.exists",
    "os.path.join",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._data_path_doc": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.datasets.utils._dataset_version": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._do_path_update": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "get_config",
    "input",
    "mne.datasets.utils.sys",
    "os.path.abspath",
    "set_config"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._download": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "_fetch_file",
    "hashfunc",
    "input",
    "mne.datasets.utils.os",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._download_all_example_data": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "fetch_fsaverage",
    "mne.datasets.utils.fetch_hcp_mmp_parcellation",
    "mne.datasets.utils.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._extract": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "mne.datasets.utils.shutil",
    "mne.datasets.utils.tarfile",
    "mne.datasets.utils.zipfile",
    "os.path.exists",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._extract.onerror": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "func",
    "mne.datasets.utils.os",
    "mne.datasets.utils.stat",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._get_path": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "get_config",
    "isinstance",
    "mne.datasets.utils.os",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._get_version": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "mne.datasets.utils._data_path",
    "mne.datasets.utils.has_dataset"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._hcp_mmp_license_text": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "mne.datasets.utils._manifest_check_download": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "RuntimeError",
    "_fetch_file",
    "_pl",
    "len",
    "list",
    "mne.datasets.utils.tempfile",
    "mne.datasets.utils.zipfile",
    "open",
    "os.path.isfile",
    "os.path.join",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._version_doc": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.datasets.utils.fetch_aparc_sub_parcellation": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "_fetch_file",
    "dict",
    "get_subjects_dir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils.fetch_hcp_mmp_parcellation": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "Label",
    "RuntimeError",
    "_fetch_file",
    "all",
    "bool",
    "collections.OrderedDict",
    "dict",
    "enumerate",
    "float",
    "get_subjects_dir",
    "input",
    "len",
    "list",
    "mne.datasets.utils._hcp_mmp_license_text",
    "mne.datasets.utils.sys",
    "numpy.array",
    "numpy.dot",
    "numpy.zeros",
    "os.path.isfile",
    "os.path.join",
    "read_labels_from_annot",
    "sum",
    "write_labels_to_annot",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils.has_dataset": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mne.datasets.utils._data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils.mne_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "mne.datasets.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.utils.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mne.datasets.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.datasets.utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mne.datasets.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.datasets.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.visual_92_categories": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.visual_92_categories.visual_92_categories": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.visual_92_categories.visual_92_categories.data_path",
    "mne.datasets.visual_92_categories.visual_92_categories.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.data_path": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.get_version": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.decoding": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.base": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.base.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.decoding.base.LinearModel": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mne.decoding.base.LinearModel.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "check_version",
    "getattr",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.decision_function": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.filters_": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.fit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.cov",
    "numpy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.fit_transform": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.predict": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.predict_proba": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.score": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.transform": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "mne.decoding.base.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.base.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.base._check_estimator": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._fit_and_score": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_check_fit_params",
    "isinstance",
    "len",
    "mne.decoding.base._score",
    "mne.decoding.base.numbers",
    "mne.decoding.base.time",
    "print",
    "sklearn.utils.metaestimators._safe_split",
    "sklearn.utils.validation._num_samples",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._get_inverse_funcs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "hasattr",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "mne.decoding.base._safe_split": {
  "data": {
   "shadows": "sklearn.utils.metaestimators._safe_split"
  },
  "type": "import"
 },
 "mne.decoding.base._score": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "scorer"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._set_cv": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "XFold",
    "cv",
    "cv.split",
    "getattr",
    "hasattr",
    "int",
    "is_classifier",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.int",
    "numpy.zeros_like",
    "sklearn.model_selection",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.check_cv",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection._split.check_cv"
  },
  "type": "import"
 },
 "mne.decoding.base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.base.cross_val_multiscore": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "_get_check_scoring",
    "check_scoring",
    "cv",
    "cv.split",
    "is_classifier",
    "list",
    "numpy.array",
    "p_func",
    "parallel",
    "parallel_func",
    "sklearn.base.clone",
    "sklearn.model_selection._split.check_cv",
    "sklearn.utils.indexable"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.get_coef": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "inverse_func",
    "list",
    "mne.decoding.base._get_inverse_funcs",
    "numpy.array",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.indexable": {
  "data": {
   "shadows": "sklearn.utils.indexable"
  },
  "type": "import"
 },
 "mne.decoding.base.models": {
  "data": {
   "shadows": "sklearn.model_selection"
  },
  "type": "import"
 },
 "mne.decoding.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "mne.decoding.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.decoding.csp": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.csp.CSP": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "mne.decoding.csp.CSP.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "bool",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._check_Xy": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.fit": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "_regularized_covariance",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.decoding.csp._ajd_pham",
    "numpy.abs",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.average",
    "numpy.dot",
    "numpy.log",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.trace",
    "numpy.transpose",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.pinv2",
    "sum",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.plot_filters": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "EvokedArray",
    "copy.deepcopy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.plot_patterns": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "EvokedArray",
    "copy.deepcopy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.transform": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "isinstance",
    "numpy.asarray",
    "numpy.dot",
    "numpy.log",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "mne.decoding.csp.CSP"
   ]
  },
  "type": "class"
 },
 "mne.decoding.csp.SPoC.__init__": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "delattr",
    "mne.decoding.csp.SPoC",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC.fit": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "ValueError",
    "_regularized_covariance",
    "enumerate",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.unique",
    "scipy.linalg.eigh",
    "scipy.linalg.pinv",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC.transform": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "mne.decoding.csp.SPoC",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp._ajd_pham": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.concatenate",
    "numpy.conj",
    "numpy.dot",
    "numpy.eye",
    "numpy.imag",
    "numpy.mean",
    "numpy.real",
    "numpy.reshape",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.decoding.csp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.decoding.csp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.ems": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.ems.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.decoding.ems.EMS": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mne.decoding.ems.EMS.__repr__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.EMS.fit": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.linalg.norm",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.EMS.transform": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems._ems_diff": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems._run_ems": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.intersect1d",
    "numpy.sqrt",
    "numpy.sum",
    "objective_function"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.compute_ems": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "_set_cv",
    "collections.Counter",
    "len",
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.std",
    "numpy.where",
    "p_func",
    "parallel",
    "parallel_func",
    "pick_info",
    "pick_types",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.mixin": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.mixin.EstimatorMixin": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.decoding.mixin.EstimatorMixin.get_params": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "mne.decoding.mixin.EstimatorMixin.set_params": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.decoding.mixin.TransformerMixin": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.decoding.mixin.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "mne.decoding.tests": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LinearModel": {
  "data": {
   "shadows": "mne.decoding.base.LinearModel"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Scaler": {
  "data": {
   "shadows": "mne.decoding.Scaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.SlidingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.SlidingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base._get_inverse_funcs": {
  "data": {
   "shadows": "mne.decoding.base._get_inverse_funcs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base._make_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.multivariate_normal",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.cross_val_multiscore": {
  "data": {
   "shadows": "mne.decoding.base.cross_val_multiscore"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.get_coef": {
  "data": {
   "shadows": "mne.decoding.base.get_coef"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.is_classifier": {
  "data": {
   "shadows": "mne.fixes.is_classifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.is_regressor": {
  "data": {
   "shadows": "mne.fixes.is_regressor"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.test_cross_val_multiscore": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "cross_val",
    "int",
    "list",
    "mne.decoding.base.cross_val_multiscore",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.decoding.tests.test_base.pytest",
    "mne.utils.check_version",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.shape",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.cross_val_score"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Clf",
    "Inv",
    "NoInv",
    "hasattr",
    "len",
    "list",
    "mne.decoding.Scaler",
    "mne.decoding.base.LinearModel",
    "mne.decoding.base._get_inverse_funcs",
    "mne.decoding.base.get_coef",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.decoding.tests.test_base._make_data",
    "mne.fixes.is_classifier",
    "mne.fixes.is_regressor",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.ravel",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.transpose",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.Clf": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.Clf.fit": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.Inv": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.Inv.inverse_transform": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv.fit": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv.transform": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_linearmodel": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.base.LinearModel",
    "mne.decoding.tests.test_base.pytest",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.LinearRegression",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_csp.data_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_csp.CSP": {
  "data": {
   "shadows": "mne.decoding.csp.CSP"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.SPoC": {
  "data": {
   "shadows": "mne.decoding.csp.SPoC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp._ajd_pham": {
  "data": {
   "shadows": "mne.decoding.csp._ajd_pham"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.data_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.event_id": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.event_name": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.raw_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.simulate_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_ajd": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mne.decoding.csp._ajd_pham",
    "numpy.atleast_2d",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.decoding.csp.CSP",
    "mne.decoding.tests.test_csp.event_id",
    "mne.decoding.tests.test_csp.event_name",
    "mne.decoding.tests.test_csp.pytest",
    "mne.decoding.tests.test_csp.raw_fname",
    "mne.decoding.tests.test_csp.simulate_data",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "plot",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp_pipeline": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mne.decoding.csp.CSP",
    "mne.utils.requires_sklearn",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_regularized_csp": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.csp.CSP",
    "mne.decoding.tests.test_csp.event_id",
    "mne.decoding.tests.test_csp.event_name",
    "mne.decoding.tests.test_csp.pytest",
    "mne.decoding.tests.test_csp.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_spoc": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.decoding.csp.SPoC",
    "mne.decoding.tests.test_csp.pytest",
    "mne.decoding.tests.test_csp.simulate_data",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_ems": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_ems.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_ems.EMS": {
  "data": {
   "shadows": "mne.decoding.EMS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.model_selection.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.compute_ems": {
  "data": {
   "shadows": "mne.decoding.compute_ems"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.curdir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.data_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.event_id": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.event_name": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.raw_fname": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.test_ems": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "mne.Epochs",
    "mne.decoding.EMS",
    "mne.decoding.compute_ems",
    "mne.decoding.tests.test_ems.event_id",
    "mne.decoding.tests.test_ems.event_name",
    "mne.decoding.tests.test_ems.pytest",
    "mne.decoding.tests.test_ems.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "numpy.atleast_1d",
    "numpy.mean",
    "numpy.setdiff1d",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "range",
    "set",
    "sklearn.model_selection.StratifiedKFold",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_receptive_field.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_receptive_field.ReceptiveField": {
  "data": {
   "shadows": "mne.decoding.ReceptiveField"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.TimeDelayingRidge": {
  "data": {
   "shadows": "mne.decoding.TimeDelayingRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._SCORERS": {
  "data": {
   "shadows": "mne.decoding.receptive_field._SCORERS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._compute_corrs": {
  "data": {
   "shadows": "mne.decoding.time_delaying_ridge._compute_corrs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._compute_reg_neighbors": {
  "data": {
   "shadows": "mne.decoding.time_delaying_ridge._compute_reg_neighbors"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._delay_time_series": {
  "data": {
   "shadows": "mne.decoding.receptive_field._delay_time_series"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._delays_to_slice": {
  "data": {
   "shadows": "mne.decoding.receptive_field._delays_to_slice"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._make_data": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "int",
    "mne.decoding.receptive_field._delay_time_series",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field._times_to_delays": {
  "data": {
   "shadows": "mne.decoding.receptive_field._times_to_delays"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.data_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.einsum": {
  "data": {
   "shadows": "mne.fixes.einsum"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.event_id": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.event_name": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.irfft": {
  "data": {
   "shadows": "mne.fixes.irfft"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.n_jobs_test": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.raw_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.rfft": {
  "data": {
   "shadows": "mne.fixes.rfft"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.test_compute_reg_neighbors": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mne.decoding.time_delaying_ridge._compute_reg_neighbors",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_inverse_coef": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "int",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.tests.test_receptive_field._make_data",
    "mne.utils.requires_sklearn",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_linalg_warning": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "RuntimeWarning",
    "UserWarning",
    "mne.decoding.ReceptiveField",
    "mne.decoding.tests.test_receptive_field._make_data",
    "mne.decoding.tests.test_receptive_field.pytest",
    "mne.utils.requires_sklearn",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_rank_deficiency": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mne.decoding.ReceptiveField",
    "mne.fixes.irfft",
    "mne.fixes.rfft",
    "mne.utils.requires_sklearn",
    "numpy.apply_along_axis",
    "numpy.convolve",
    "numpy.corrcoef",
    "numpy.hanning",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_1d": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.tests.test_receptive_field.n_jobs_test",
    "mne.decoding.tests.test_receptive_field.pytest",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_basic": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.receptive_field._SCORERS",
    "mne.decoding.receptive_field._SCORERS.items",
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.tests.test_receptive_field.n_jobs_test",
    "mne.decoding.tests.test_receptive_field.pytest",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.tile",
    "sklearn.linear_model.Ridge",
    "str",
    "val"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_nd": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.tests.test_receptive_field.n_jobs_test",
    "mne.decoding.tests.test_receptive_field.pytest",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "repr",
    "sklearn.linear_model.Ridge",
    "val",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_time_delay": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.receptive_field._delays_to_slice",
    "mne.decoding.receptive_field._times_to_delays",
    "mne.decoding.tests.test_receptive_field.pytest",
    "numpy.arange",
    "numpy.complex",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_time_delaying_fast_calc": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.tests.test_receptive_field.n_jobs_test",
    "mne.decoding.tests.test_receptive_field.pytest",
    "mne.decoding.time_delaying_ridge._compute_corrs",
    "mne.fixes.einsum",
    "numpy.array",
    "numpy.convolve",
    "numpy.dot",
    "numpy.empty",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.reshape",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_search_light.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.GeneralizingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.GeneralizingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LinearDiscriminantAnalysis": {
  "data": {
   "shadows": "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.SlidingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.SlidingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.transformer.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.cross_val_predict": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_predict"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.is_classifier": {
  "data": {
   "shadows": "sklearn.base.is_classifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.make_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.rand",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AttributeError",
    "Classifier",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.decoding.tests.test_search_light.pytest",
    "mne.utils.requires_sklearn",
    "numpy.random.RandomState",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.linear_model.LinearRegression",
    "sklearn.model_selection.cross_val_predict"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier.fit": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_cross_val_predict.Classifier.predict_proba": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_generalization_light": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "len",
    "list",
    "mne.decoding.search_light.GeneralizingEstimator",
    "mne.decoding.tests.test_search_light.make_data",
    "mne.decoding.tests.test_search_light.pytest",
    "mne.decoding.transformer.Vectorizer",
    "mne.utils.requires_sklearn",
    "numpy.abs",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "repr",
    "scoring",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.roc_auc_score",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_LogRegTransformer",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.decoding.tests.test_search_light.make_data",
    "mne.decoding.tests.test_search_light.pytest",
    "mne.decoding.transformer.Vectorizer",
    "mne.fixes._get_args",
    "mne.utils.requires_sklearn",
    "numpy.abs",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scoring",
    "sklearn.base.is_classifier",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.pipeline.make_pipeline",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer.transform": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_time_frequency.TimeFrequency": {
  "data": {
   "shadows": "mne.decoding.time_frequency.TimeFrequency"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.test_timefrequency": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.tests.test_time_frequency.pytest",
    "mne.decoding.time_frequency.TimeFrequency",
    "mne.utils.requires_sklearn",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_transformer.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_transformer.DEFAULTS": {
  "data": {
   "shadows": "mne.defaults.DEFAULTS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.FilterEstimator": {
  "data": {
   "shadows": "mne.decoding.FilterEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.PSDEstimator": {
  "data": {
   "shadows": "mne.decoding.PSDEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Scaler": {
  "data": {
   "shadows": "mne.decoding.Scaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.TemporalFilter": {
  "data": {
   "shadows": "mne.decoding.TemporalFilter"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.UnsupervisedSpatialFilter": {
  "data": {
   "shadows": "mne.decoding.UnsupervisedSpatialFilter"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.data_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.event_id": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.event_name": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.raw_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.test_filterestimator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.FilterEstimator",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.pytest",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_psdestimator": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.PSDEstimator",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.pytest",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "numpy.inf",
    "numpy.pi",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_scaler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "dict",
    "events",
    "isinstance",
    "len",
    "mne.Epochs",
    "mne.decoding.Scaler",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.pytest",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.defaults.DEFAULTS",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.check_version",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.percentile",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_temporal_filter": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.TemporalFilter",
    "mne.decoding.tests.test_transformer.pytest",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_unsupervised_spatial_filter": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.UnsupervisedSpatialFilter",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.pytest",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "sklearn.decomposition.PCA",
    "sklearn.kernel_ridge.KernelRidge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_vectorizer": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.Vectorizer",
    "mne.decoding.tests.test_transformer.pytest",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge": {
  "data": {
   "lineno": 215
  },
  "type": "class"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge._smax": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "int",
    "property",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge._smin": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "int",
    "property",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.fit": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "check_n_jobs",
    "mne.decoding.time_delaying_ridge._compute_corrs",
    "mne.decoding.time_delaying_ridge._fit_corrs",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.predict": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.convolve",
    "numpy.newaxis",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._compute_corrs": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ProgressBar",
    "_setup_cuda_fft_multiply_repeated",
    "enumerate",
    "int",
    "max",
    "mne.decoding.time_delaying_ridge._toeplitz_dot",
    "next_fast_len",
    "numpy.arange",
    "numpy.empty",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._compute_reg_neighbors": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.diag",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.linalg.block_diag",
    "scipy.sparse.csgraph.laplacian",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._fit_corrs": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mne.decoding.time_delaying_ridge._compute_reg_neighbors",
    "numpy.linalg.LinAlgError",
    "scipy.linalg.lstsq",
    "scipy.linalg.solve",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._toeplitz_dot": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "numpy.outer",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.laplacian": {
  "data": {
   "shadows": "scipy.sparse.csgraph.laplacian"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.time_frequency.TimeFrequency": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "mne.decoding.time_frequency.TimeFrequency.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_check_option",
    "_check_tfr_param"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.fit": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.fit_transform": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.transform": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_compute_tfr",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.transformer": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.transformer.FilterEstimator": {
  "data": {
   "lineno": 411
  },
  "type": "class"
 },
 "mne.decoding.transformer.FilterEstimator.__init__": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "_picks_to_idx"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.FilterEstimator.fit": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "numpy.ndarray",
    "pick_types",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.FilterEstimator.transform": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "filter_data",
    "isinstance",
    "numpy.atleast_3d",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator": {
  "data": {
   "lineno": 320
  },
  "type": "class"
 },
 "mne.decoding.transformer.PSDEstimator.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator.fit": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator.transform": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "psd_array_multitaper",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "mne.decoding.transformer.Scaler": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "mne.decoding.transformer.Scaler.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "dict",
    "isinstance",
    "mne.decoding.transformer._ConstantScaler",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.fit": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mne.decoding.transformer._sklearn_reshape_apply"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.fit_transform": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.inverse_transform": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mne.decoding.transformer._sklearn_reshape_apply"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.transform": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mne.decoding.transformer._sklearn_reshape_apply"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "mne.decoding.transformer.TemporalFilter": {
  "data": {
   "lineno": 676
  },
  "type": "class"
 },
 "mne.decoding.transformer.TemporalFilter.__init__": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "method",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.TemporalFilter.fit": {
  "data": {
   "lineno": 782
  },
  "type": "function"
 },
 "mne.decoding.transformer.TemporalFilter.transform": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ValueError",
    "_triage_filter_params",
    "filter_data",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter": {
  "data": {
   "lineno": 553
  },
  "type": "class"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.__init__": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "hasattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter._apply_method": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "getattr",
    "method",
    "numpy.reshape",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.fit": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.fit_transform": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.inverse_transform": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.transform": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer": {
  "data": {
   "lineno": 218
  },
  "type": "class"
 },
 "mne.decoding.transformer.Vectorizer.fit": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.fit_transform": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.inverse_transform": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.transform": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mne.decoding.transformer._ConstantScaler.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.fit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "_check_scalings_user",
    "_pick_data_channels",
    "_picks_by_type",
    "len",
    "numpy.ones",
    "numpy.zeros_like",
    "pick_info",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.fit_transform": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.inverse_transform": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.transform": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.decoding.transformer._sklearn_reshape_apply": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "numpy.atleast_3d",
    "numpy.ndarray",
    "numpy.reshape",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.defaults": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.defaults.DEFAULTS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.defaults.HEAD_SIZE_DEFAULT": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "mne.defaults._handle_default": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "isinstance",
    "mne.defaults.DEFAULTS"
   ]
  },
  "type": "function"
 },
 "mne.defaults.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.dipole": {
  "data": {},
  "type": "module"
 },
 "mne.dipole.Dipole": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.dipole.Dipole.__getitem__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "mne.dipole.Dipole"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__len__": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__repr__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.copy": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.crop": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "_time_mask",
    "getattr",
    "len",
    "numpy.diff",
    "numpy.median",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.plot_amplitudes": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "plot_dipole_amplitudes"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.plot_locations": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_check_option",
    "plot_dipole_locations"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.save": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "_check_fname",
    "mne.dipole._write_dipole_bdip",
    "mne.dipole._write_dipole_text"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed": {
  "data": {
   "lineno": 339
  },
  "type": "class"
 },
 "mne.dipole.DipoleFixed.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "DeprecationWarning",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.__repr__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.ch_names": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.copy": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.plot": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "_plot_evoked"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.save": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "_write_evokeds",
    "check_fname"
   ]
  },
  "type": "function"
 },
 "mne.dipole._BDIP_ERROR_KEYS": {
  "data": {
   "lineno": 637
  },
  "type": "constant"
 },
 "mne.dipole._concatenate_dipoles": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "mne.dipole.Dipole",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.dipole._dipole_forwards": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "_compute_forwards_meeg",
    "dgemm",
    "numpy.concatenate",
    "numpy.isfinite",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.dipole._dipole_gof": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ddot",
    "dgemv"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_Q": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "len",
    "mne.dipole._dipole_forwards",
    "mne.dipole._dipole_gof",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_confidence": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "mne.dipole._dipole_forwards",
    "numpy.allclose",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cross",
    "numpy.diag",
    "numpy.diff",
    "numpy.dot",
    "numpy.empty",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.prod",
    "numpy.sqrt",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_dipole": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "_compute_nearest",
    "_svd_lwork",
    "enumerate",
    "functools.partial",
    "mne.dipole._fit_Q",
    "mne.dipole._fit_confidence",
    "mne.dipole._fit_eval",
    "mne.dipole._sphere_constraint",
    "mne.dipole._surface_constraint",
    "numpy.argmin",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.optimize.fmin_cobyla",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_dipole_fixed": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "mne.dipole._fit_Q",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.zeros",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_dipoles": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "p_fun",
    "parallel",
    "parallel_func",
    "scipy.optimize.fmin_cobyla",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_eval": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "_repeated_svd",
    "mne.dipole._dipole_forwards",
    "mne.dipole._dipole_gof",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.dipole._make_guesses": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "SourceSpaces",
    "_coord_frame_name",
    "_make_volume_source_space",
    "dict",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_bdip": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "bool",
    "dict",
    "len",
    "list",
    "mne.dipole.Dipole",
    "mne.dipole._BDIP_ERROR_KEYS",
    "numpy.frombuffer",
    "numpy.linalg.norm",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_fixed": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_read_evoked",
    "mne.dipole.DipoleFixed"
   ]
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_text": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "dict",
    "enumerate",
    "float",
    "len",
    "list",
    "mne.dipole.Dipole",
    "mne.dipole.re",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.diff",
    "numpy.newaxis",
    "open",
    "set",
    "sorted",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.dipole._sphere_constraint": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.dipole._surface_constraint": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "_compute_nearest",
    "_points_outside_surface",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.dipole._write_dipole_bdip": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "int",
    "len",
    "mne.dipole._BDIP_ERROR_KEYS",
    "numpy.array",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.dipole._write_dipole_text": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.savetxt",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.dipole.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.dipole.fit_dipole": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_bem_find_surface",
    "_fit_sphere",
    "_get_trans",
    "_needs_eeg_average_ref_proj",
    "_pl",
    "_prep_eeg_channels",
    "_prep_field_computation",
    "_prep_meg_channels",
    "_print_coord_trans",
    "_setup_bem",
    "apply_trans",
    "compute_whitener",
    "copy.deepcopy",
    "dict",
    "float",
    "isinstance",
    "len",
    "list",
    "make_projector",
    "max",
    "mne.dipole.Dipole",
    "mne.dipole.DipoleFixed",
    "mne.dipole._dipole_forwards",
    "mne.dipole._fit_dipole",
    "mne.dipole._fit_dipole_fixed",
    "mne.dipole._fit_dipoles",
    "mne.dipole._make_guesses",
    "mne.dipole._sphere_constraint",
    "mne.dipole._surface_constraint",
    "numpy.array",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.full",
    "numpy.hstack",
    "numpy.isclose",
    "numpy.isfinite",
    "numpy.min",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "pick_types",
    "read_cov",
    "repr",
    "scipy.linalg.inv",
    "scipy.linalg.svd",
    "str",
    "transform_surface_to",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.dipole.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.dipole.get_phantom_dipoles": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "_check_option",
    "enumerate",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "numpy.setdiff1d",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.dipole.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.dipole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.dipole.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.dipole.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.dipole.read_dipole": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "_check_fname",
    "mne.dipole._read_dipole_bdip",
    "mne.dipole._read_dipole_fixed",
    "mne.dipole._read_dipole_text"
   ]
  },
  "type": "function"
 },
 "mne.evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.evoked._aspect_dict"
   ]
  },
  "type": "module"
 },
 "mne.evoked.Evoked": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "mne.evoked.Evoked.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_validate_type",
    "bool",
    "mne.evoked._read_evoked"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.__neg__": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "mne.evoked.Evoked.__repr__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "sizeof_fmt"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.animate_topomap": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "_topomap_animation"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.apply_baseline": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "rescale"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.as_type": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "_as_meg_type_inst"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.ch_names": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.copy": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.crop": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_time_mask"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.data": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "mne.evoked.Evoked.decimate": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "mne.evoked._check_decim",
    "round",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.detrend": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "_picks_to_idx",
    "detrend"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.get_peak": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_option",
    "_merge_ch_data",
    "_pair_grad_sensors",
    "len",
    "mne.evoked._get_peak",
    "pick_types",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.kind": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_check_option",
    "list",
    "mne.evoked._aspect_dict"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_field": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_field"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_image": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_image"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_joint": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_joint"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_topo": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_topo"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_topomap": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_topomap"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_white": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_white"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.save": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "mne.evoked.write_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.to_data_frame": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "_build_data_frame",
    "_check_pandas_index_arguments",
    "_check_pandas_installed",
    "_check_scaling_time",
    "_check_time_format",
    "_convert_times",
    "_picks_to_idx",
    "_scale_dataframe_data",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.evoked.EvokedArray": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "mne.evoked.Evoked"
   ]
  },
  "type": "class"
 },
 "mne.evoked.EvokedArray.__init__": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "ValueError",
    "_validate_type",
    "int",
    "len",
    "mne.evoked._aspect_dict",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.complex128",
    "numpy.float",
    "numpy.float64",
    "numpy.iscomplex",
    "numpy.shape",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.evoked._aspect_dict": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.evoked._aspect_rev": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.evoked._check_decim": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.evoked._check_evokeds_ch_names_times": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.abs",
    "numpy.max",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_aspect": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "_check_maxshield",
    "dir_tree_find",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_entries": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "mne.evoked._aspect_rev",
    "mne.evoked._get_aspect",
    "numpy.atleast_1d",
    "range",
    "read_tag",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_evoked_node": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "dir_tree_find",
    "fiff_open",
    "read_meas_info"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_peak": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "maxfun",
    "numpy.abs",
    "numpy.any",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.bool",
    "numpy.ma.array",
    "numpy.ones_like",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "mne.evoked._read_evoked": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dir_tree_find",
    "fiff_open",
    "float",
    "int",
    "isinstance",
    "len",
    "mne.evoked._aspect_dict",
    "mne.evoked._get_aspect",
    "mne.evoked._get_entries",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float",
    "numpy.in1d",
    "numpy.newaxis",
    "numpy.where",
    "range",
    "read_meas_info",
    "read_tag",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.evoked._write_evokeds": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "check_fname",
    "end_block",
    "end_file",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.zeros",
    "range",
    "round",
    "start_block",
    "start_file",
    "warn",
    "write_float",
    "write_float_matrix",
    "write_id",
    "write_int",
    "write_meas_info",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.evoked.combine_evoked": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "float",
    "isinstance",
    "len",
    "list",
    "mne.evoked._check_evokeds_ch_names_times",
    "numpy.array",
    "numpy.ones_like",
    "numpy.sum",
    "set",
    "str",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.evoked.read_evokeds": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "check_fname",
    "isinstance",
    "len",
    "list",
    "mne.evoked.Evoked",
    "mne.evoked._get_evoked_node",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.evoked.write_evokeds": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "mne.evoked._write_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.externals": {
  "data": {},
  "type": "module"
 },
 "mne.externals.FieldTrip": {
  "data": {},
  "type": "module"
 },
 "mne.externals.FieldTrip.CHUNK_ASCII_KEYVAL": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CHANNEL_FLAGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CTF_RES4": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_NEUROMAG_FIF": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_NIFTI1": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_RESOLUTIONS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_SIEMENS_AP": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_UNSPECIFIED": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Chunk": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Chunk.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Client.__init__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.connect": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "mne.externals.FieldTrip.socket"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.disconnect": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getData": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "IOError",
    "int",
    "len",
    "mne.externals.FieldTrip.GET_DAT",
    "mne.externals.FieldTrip.GET_ERR",
    "mne.externals.FieldTrip.GET_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.numpyType",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getEvents": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "IOError",
    "int",
    "mne.externals.FieldTrip.Event",
    "mne.externals.FieldTrip.GET_ERR",
    "mne.externals.FieldTrip.GET_EVT",
    "mne.externals.FieldTrip.GET_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getHeader": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES",
    "mne.externals.FieldTrip.GET_ERR",
    "mne.externals.FieldTrip.GET_HDR",
    "mne.externals.FieldTrip.GET_OK",
    "mne.externals.FieldTrip.Header",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.poll": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "IOError",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.WAIT_DAT",
    "mne.externals.FieldTrip.WAIT_OK",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putData": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "isinstance",
    "len",
    "mne.externals.FieldTrip.PUT_DAT",
    "mne.externals.FieldTrip.PUT_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.dataType",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.serialize",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putEvents": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "IOError",
    "isinstance",
    "mne.externals.FieldTrip.Event",
    "mne.externals.FieldTrip.PUT_EVT",
    "mne.externals.FieldTrip.PUT_OK"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putHeader": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "len",
    "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES",
    "mne.externals.FieldTrip.PUT_HDR",
    "mne.externals.FieldTrip.PUT_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.dataType",
    "mne.externals.FieldTrip.struct",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.receiveResponse": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.sendRaw": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "IOError",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.sendRequest": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "len",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.wait": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "IOError",
    "int",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.WAIT_DAT",
    "mne.externals.FieldTrip.WAIT_OK",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.DATATYPE_CHAR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_FLOAT32": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_FLOAT64": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT16": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT32": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT64": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT8": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT16": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT32": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT64": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT8": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UNKNOWN": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Event": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Event.__init__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.__str__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.deserialize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.numpyType",
    "mne.externals.FieldTrip.struct",
    "mne.externals.FieldTrip.wordSize"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.serialize": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.externals.FieldTrip.DATATYPE_UNKNOWN",
    "mne.externals.FieldTrip.serialize",
    "mne.externals.FieldTrip.struct",
    "mne.externals.FieldTrip.wordSize"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.FLUSH_DAT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_ERR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_EVT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_HDR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_OK": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_DAT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_ERR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_EVT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_HDR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_OK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Header": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Header.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Header.__str__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mne.externals.FieldTrip.numpyType"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.PUT_DAT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_ERR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_EVT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_HDR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_OK": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.VERSION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_DAT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_ERR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_OK": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.dataType": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.numpyType": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.serialize": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "mne.externals.FieldTrip.DATATYPE_FLOAT64",
    "mne.externals.FieldTrip.DATATYPE_INT32",
    "mne.externals.FieldTrip.DATATYPE_UNKNOWN",
    "mne.externals.FieldTrip.dataType",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.wordSize": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.externals.decorator": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "contextlib.GeneratorContextManager.__init__",
    "inspect.getfullargspec",
    "len",
    "mne.externals.decorator.ContextManager",
    "mne.externals.decorator.__init__",
    "mne.externals.decorator.collections",
    "mne.externals.decorator.decorator",
    "mne.externals.decorator.init",
    "mne.externals.decorator.inspect",
    "mne.externals.decorator.n_args",
    "mne.externals.decorator.re",
    "mne.externals.decorator.sys"
   ]
  },
  "type": "module"
 },
 "mne.externals.decorator.ContextManager": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "contextlib.GeneratorContextManager"
   ]
  },
  "type": "class"
 },
 "mne.externals.decorator.ContextManager.__call__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "dict",
    "mne.externals.decorator.FunctionMaker"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.DEF": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mne.externals.decorator.FullArgSpec": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.externals.decorator.FunctionMaker": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mne.externals.decorator.itertools",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.decorator.FunctionMaker.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "getattr",
    "hasattr",
    "inspect.getfullargspec",
    "list",
    "mne.externals.decorator.inspect",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.create": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "mne.externals.decorator.iscoroutinefunction",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.make": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Exception",
    "NameError",
    "SyntaxError",
    "compile",
    "exec",
    "mne.externals.decorator.DEF",
    "mne.externals.decorator.sys",
    "next",
    "print",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.update": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "mne.externals.decorator.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator._GeneratorContextManager": {
  "data": {
   "shadows": "contextlib.GeneratorContextManager"
  },
  "type": "import"
 },
 "mne.externals.decorator.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "contextlib.GeneratorContextManager.__init__",
    "g"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.__version__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.decorator._contextmanager": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "mne.externals.decorator.append": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "enumerate",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mne.externals.decorator.contextmanager": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mne.externals.decorator._contextmanager"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.decorate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "hasattr",
    "inspect.isgeneratorfunction",
    "mne.externals.decorator.FunctionMaker",
    "mne.externals.decorator.iscoroutinefunction",
    "mne.externals.decorator.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.decorator": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.externals.decorator.FunctionMaker",
    "mne.externals.decorator.decorate",
    "mne.externals.decorator.inspect"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.check": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mne.externals.decorator.operator",
    "wrong"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NameError",
    "ancestors",
    "dict",
    "func",
    "inspect.getfullargspec",
    "mne.externals.decorator.FunctionMaker",
    "set",
    "vancestors"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec._dispatch": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "KeyError",
    "ancestors",
    "f",
    "func",
    "mne.externals.decorator.itertools",
    "next",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.ancestors": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "RuntimeError",
    "check",
    "len",
    "type",
    "vancestors",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.dispatch_info": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ancestors",
    "check",
    "mne.externals.decorator.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.register": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.register.dec": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "check",
    "inspect.getfullargspec",
    "mne.externals.decorator.operator"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.dispatch_on.gen_func_dec.vancestors": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "check",
    "issubclass",
    "len",
    "mne.externals.decorator.append",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.get_init": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mne.externals.decorator.getfullargspec": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.externals.decorator.FullArgSpec",
    "mne.externals.decorator.inspect"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.init": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "mne.externals.decorator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.externals.decorator.iscoroutinefunction": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "mne.externals.decorator.isgeneratorfunction": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "mne.externals.decorator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.externals.decorator.n_args": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "mne.externals.decorator.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mne.externals.decorator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.externals.decorator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.decorator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.doccer": {
  "data": {},
  "type": "module"
 },
 "mne.externals.doccer.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.externals.doccer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.doccer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.doccer.docformat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "len",
    "mne.externals.doccer.indentcount_lines",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.doccer.filldoc": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mne.externals.doccer.unindent_dict"
   ]
  },
  "type": "function"
 },
 "mne.externals.doccer.filldoc.decorate": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mne.externals.doccer.docformat"
   ]
  },
  "type": "function"
 },
 "mne.externals.doccer.indentcount_lines": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "min",
    "mne.externals.doccer.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.doccer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.externals.doccer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.doccer.unindent_dict": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mne.externals.doccer.unindent_string"
   ]
  },
  "type": "function"
 },
 "mne.externals.doccer.unindent_string": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mne.externals.doccer.indentcount_lines"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io": {
  "data": {},
  "type": "module"
 },
 "mne.externals.h5io.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "datetime.datetime.fromisoformat",
    "mne.externals.h5io._h5io.PY3",
    "mne.externals.h5io._h5io.sys",
    "scipy.sparse",
    "str"
   ]
  },
  "type": "module"
 },
 "mne.externals.h5io._h5io.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.HDFStore": {
  "data": {
   "shadows": "pandas.HDFStore"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.PY3": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io._TempDir": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "mne.externals.h5io._h5io._TempDir.__del__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._TempDir.__init__": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._TempDir.__new__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "mne.externals.h5io._h5io.tempfile",
    "str.__new__"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._array_index": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._check_h5py": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ImportError",
    "mne.externals.h5io._h5io.h5py"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._check_keys_in_dict": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "mne.externals.h5io._h5io.special_chars"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_pandas_dataset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io.h5py"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_titled_dataset": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_titled_group": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._index_sum": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._json_compatible": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "all",
    "bool",
    "dict",
    "float",
    "int",
    "isinstance",
    "list",
    "mne.externals.h5io._h5io._check_keys_in_dict",
    "mne.externals.h5io._h5io.string_types",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._list_file_contents": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "cast",
    "len",
    "mne.externals.h5io._h5io.tab_str",
    "mne.externals.h5io._h5io.text_type",
    "numpy.array",
    "numpy.max",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._merge_array": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._parse_hh_mm_ss_ff": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._parse_isoformat_date": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._parse_isoformat_time": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "datetime.timedelta",
    "datetime.timezone",
    "datetime.timezone.utc",
    "len",
    "mne.externals.h5io._h5io._parse_hh_mm_ss_ff"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._shape_list": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._sort_keys": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "list",
    "numpy.argsort",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._triage_read": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "bytes",
    "cast",
    "dict",
    "float",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io.fromisoformat",
    "mne.externals.h5io._h5io.h5py",
    "mne.externals.h5io._h5io.json",
    "mne.externals.h5io._h5io.multiarray_load",
    "mne.externals.h5io._h5io.special_chars",
    "mne.externals.h5io._h5io.text_type",
    "numpy",
    "numpy.array",
    "pandas.HDFStore",
    "pandas.read_hdf",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._triage_write": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "ValueError",
    "datetime.datetime",
    "dict",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.externals.h5io._h5io._create_titled_dataset",
    "mne.externals.h5io._h5io._create_titled_group",
    "mne.externals.h5io._h5io._json_compatible",
    "mne.externals.h5io._h5io.json",
    "mne.externals.h5io._h5io.multiarray_dump",
    "mne.externals.h5io._h5io.special_chars",
    "mne.externals.h5io._h5io.string_types",
    "mne.externals.h5io._h5io.text_type",
    "numpy.atleast_1d",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.floating",
    "numpy.frombuffer",
    "numpy.integer",
    "numpy.ndarray",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.Series",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._validate_object_array": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.dtype",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._validate_sub_shapes": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "ValueError",
    "all"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.fromisoformat": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datetime.datetime",
    "isinstance",
    "mne.externals.h5io._h5io._parse_isoformat_date",
    "mne.externals.h5io._h5io._parse_isoformat_time",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.list_file_contents": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io._list_file_contents",
    "mne.externals.h5io._h5io.h5py",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.multiarray_dump": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "mne.externals.h5io._h5io._array_index",
    "mne.externals.h5io._h5io._index_sum",
    "mne.externals.h5io._h5io._merge_array",
    "mne.externals.h5io._h5io._shape_list",
    "mne.externals.h5io._h5io._validate_object_array",
    "mne.externals.h5io._h5io._validate_sub_shapes"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.multiarray_load": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.object_diff": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "bytes",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.externals.h5io._h5io._sort_keys",
    "mne.externals.h5io._h5io.string_types",
    "numpy.array_equal",
    "numpy.ndarray",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "repr",
    "scipy.sparse",
    "scipy.sparse.isspmatrix",
    "set",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.read_hdf": {
  "data": {
   "shadows": "pandas.read_hdf"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.read_hdf5": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "isinstance",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io._triage_read",
    "mne.externals.h5io._h5io.h5py",
    "mne.externals.h5io._h5io.string_types",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.sparse": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.special_chars": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.string_types": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.tab_str": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.text_type": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.write_hdf5": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io._create_pandas_dataset",
    "mne.externals.h5io._h5io._triage_write",
    "mne.externals.h5io._h5io.h5py",
    "mne.externals.h5io._h5io.string_types",
    "os.path.isfile",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader": {
  "data": {},
  "type": "module"
 },
 "mne.externals.pymatreader.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.pymatreader": {
  "data": {},
  "type": "module"
 },
 "mne.externals.pymatreader.pymatreader.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.pymatreader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.pymatreader.read_mat": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "_check_for_scipy_mat_struct",
    "_hdf5todict",
    "_import_h5py",
    "mne.externals.pymatreader.pymatreader.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.pymatreader.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils": {
  "data": {
   "symbols_in_volume": [
    "mne.externals.pymatreader.utils.sys"
   ]
  },
  "type": "module"
 },
 "mne.externals.pymatreader.utils._assign_types": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "float",
    "mne.externals.pymatreader.utils._handle_ndarray",
    "mne.externals.pymatreader.utils.numpy",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._check_for_scipy_mat_struct": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mne.externals.pymatreader.utils._handle_scipy_ndarray",
    "mne.externals.pymatreader.utils.numpy"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._convert_string_hdf5": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mne.externals.pymatreader.utils.chr"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_hdf5_dataset": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.externals.pymatreader.utils._assign_types",
    "mne.externals.pymatreader.utils._hdf5todict",
    "mne.externals.pymatreader.utils.numpy"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_hdf5_group": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dict",
    "mne.externals.pymatreader.utils._hdf5todict",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_hdf5_strings": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.externals.pymatreader.utils._convert_string_hdf5"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_ndarray": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.pymatreader.utils._handle_hdf5_strings",
    "mne.externals.pymatreader.utils.numpy"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._handle_scipy_ndarray": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.pymatreader.utils._check_for_scipy_mat_struct",
    "mne.externals.pymatreader.utils._todict_from_np_struct",
    "mne.externals.pymatreader.utils.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._hdf5todict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "mne.externals.pymatreader.utils._handle_hdf5_dataset",
    "mne.externals.pymatreader.utils._handle_hdf5_group",
    "mne.externals.pymatreader.utils._import_h5py",
    "mne.externals.pymatreader.utils.h5py",
    "mne.externals.pymatreader.utils.types"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._import_h5py": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "mne.externals.pymatreader.utils.h5py"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils._todict_from_np_struct": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "len",
    "list",
    "mne.externals.pymatreader.utils._check_for_scipy_mat_struct",
    "mne.externals.pymatreader.utils.numpy"
   ]
  },
  "type": "function"
 },
 "mne.externals.pymatreader.utils.chr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.externals.pymatreader.utils.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.pymatreader.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mne.externals.tempita": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "mne.externals.tempita._Empty",
    "mne.externals.tempita.fill_command",
    "mne.externals.tempita.lex",
    "mne.externals.tempita.parse",
    "mne.externals.tempita.re",
    "mne.externals.tempita.trim_lex"
   ]
  },
  "type": "module"
 },
 "mne.externals.tempita.Empty": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "mne.externals.tempita.HTMLTemplate": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "dict",
    "mne.externals.tempita.Template",
    "mne.externals.tempita.attr",
    "mne.externals.tempita.html",
    "mne.externals.tempita.html_quote",
    "mne.externals.tempita.url"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.HTMLTemplate._repr": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "hasattr",
    "mne.externals.tempita.Template",
    "mne.externals.tempita.html_quote",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.externals.tempita.Template": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.Template.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "globals",
    "is_unicode",
    "isinstance",
    "len",
    "mne.externals.tempita.parse",
    "mne.externals.tempita.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.__repr__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._add_line_info": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._eval": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "SyntaxError",
    "coerce_text",
    "eval",
    "getattr",
    "mne.externals.tempita.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._exec": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "exec",
    "mne.externals.tempita.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_code": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "func",
    "mne.externals.tempita.TemplateDef",
    "mne.externals.tempita._TemplateBreak",
    "mne.externals.tempita._TemplateContinue",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_codes": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_for": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.externals.tempita._TemplateBreak",
    "mne.externals.tempita._TemplateContinue",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_if": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_inherit": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.TemplateObject",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._repr": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "bytes",
    "coerce_text",
    "is_unicode",
    "isinstance",
    "mne.externals.tempita.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.from_filename": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "cls",
    "mne.externals.tempita.get_file_template",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.substitute": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateDef.__call__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "self._body",
    "self._bound_self",
    "self._ns.copy",
    "self._parse_signature",
    "self._template._interpret_codes"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__get__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "self",
    "self.__class__",
    "self._body",
    "self._func_name",
    "self._func_signature",
    "self._ns",
    "self._pos",
    "self._template"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__init__": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__repr__": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__str__": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef._parse_signature": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "repr",
    "self._func_signature",
    "self._ns",
    "self._pos",
    "self._template._eval",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateError": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateError.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateError.__str__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObject": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateObject.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "mne.externals.tempita.TemplateObjectGetter",
    "self",
    "self.__name",
    "self.get"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObject.__repr__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "self.__class__.__name__",
    "self.__name"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateObjectGetter.__getattr__": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "getattr",
    "mne.externals.tempita.attr",
    "self.__template_obj"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter.__init__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "self.__template_obj"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter.__repr__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "self.__class__.__name__",
    "self.__template_obj"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "mne.externals.tempita.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._Empty.__bool__": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__call__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__iter__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__repr__": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__str__": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__unicode__": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._TemplateBreak": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._TemplateContinue": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.tempita._fill_command_usage": {
  "data": {
   "lineno": 1236
  },
  "type": "constant"
 },
 "mne.externals.tempita._looper": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tempita._looper.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.tempita._looper.loop_pos": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.externals.tempita._looper.sys",
    "next",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.loop_pos.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.__next__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.__repr__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos._compare_group": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "getattr",
    "getter",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.even": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.first": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.first_group": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.index": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.item": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.last": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.last_group": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.length": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.number": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.odd": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.previous": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.looper.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.externals.tempita._looper.looper_iter"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mne.externals.tempita._looper.sys",
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.looper_iter.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter.__iter__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter.__next__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "mne.externals.tempita._looper.loop_pos"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tempita.attr": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "list",
    "mne.externals.tempita.html",
    "mne.externals.tempita.html_quote"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.bunch.__getattr__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__getitem__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "KeyError",
    "dict.__getitem__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__init__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__repr__": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__setattr__": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "mne.externals.tempita.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "mne.externals.tempita.fill_command": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "TemplateClass",
    "coerce_text",
    "eval",
    "len",
    "mne.externals.tempita.HTMLTemplate",
    "mne.externals.tempita.Template",
    "mne.externals.tempita._fill_command_usage",
    "mne.externals.tempita.optparse",
    "mne.externals.tempita.os",
    "mne.externals.tempita.pkg_resources",
    "mne.externals.tempita.sys",
    "open",
    "print",
    "vars",
    "vars.update"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.find_position": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "mne.externals.tempita.get_file_template": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mne.externals.tempita.os"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.html": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.html.__html__": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__init__": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__repr__": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__str__": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "mne.externals.tempita.html_escape": {
  "data": {
   "shadows": "cgi.escape"
  },
  "type": "import"
 },
 "mne.externals.tempita.html_quote": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "bytes",
    "cgi.escape",
    "coerce_text",
    "hasattr",
    "is_unicode",
    "isinstance",
    "mne.externals.tempita.sys",
    "mne.externals.tempita.warnings"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.in_re": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.externals.tempita.isolate_expression": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.lead_whitespace_re": {
  "data": {
   "lineno": 737
  },
  "type": "constant"
 },
 "mne.externals.tempita.lex": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "mne.externals.tempita.Template",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.find_position",
    "mne.externals.tempita.re",
    "mne.externals.tempita.trim_lex"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "mne.externals.tempita.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tempita.parse": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "mne.externals.tempita.Template",
    "mne.externals.tempita.lex",
    "mne.externals.tempita.parse_expr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_cond": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_one_cond",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_def": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_expr",
    "mne.externals.tempita.parse_signature",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_default": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "len",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.var_re"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_expr": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_cond",
    "mne.externals.tempita.parse_def",
    "mne.externals.tempita.parse_default",
    "mne.externals.tempita.parse_for",
    "mne.externals.tempita.parse_inherit"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_for": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.in_re",
    "mne.externals.tempita.parse_expr",
    "tuple",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_inherit": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_one_cond": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_expr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_signature": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "get_token",
    "io.StringIO",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.isolate_expression",
    "mne.externals.tempita.tokenize"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_signature.get_token": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "StopIteration",
    "mne.externals.tempita.tokenize",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.paste_script_template_renderer": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "mne.externals.tempita.Template",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "mne.externals.tempita.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tempita.single_statements": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "mne.externals.tempita.statement_re": {
  "data": {
   "lineno": 734
  },
  "type": "constant"
 },
 "mne.externals.tempita.sub": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "mne.externals.tempita.Template"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.sub_html": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "mne.externals.tempita.HTMLTemplate"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tempita.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "mne.externals.tempita.trail_whitespace_re": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "mne.externals.tempita.trim_lex": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.externals.tempita.lead_whitespace_re",
    "mne.externals.tempita.single_statements",
    "mne.externals.tempita.statement_re",
    "mne.externals.tempita.trail_whitespace_re",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.url": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "coerce_text",
    "is_unicode",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.url_quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "mne.externals.tempita.var_re": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.tempita.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.externals.tqdm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "tqdm.__version__"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.externals.tqdm.__version__": {
  "data": {
   "shadows": "tqdm.__version__"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.__main__": {
  "data": {
   "symbols_in_volume": [
    "main"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._main": {
  "data": {
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._main.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._monitor.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm._monitor.TMonitor",
    "mne.externals.tqdm._tqdm._monitor.atexit",
    "threading.Event",
    "threading.Thread.__init__",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.exit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "threading.current_thread"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.get_instances": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.report": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.TMonitor.run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm._monitor.TqdmSynchronisationWarning",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._monitor.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.TqdmSynchronisationWarning": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm._monitor.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._monitor.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.current_thread": {
  "data": {
   "shadows": "threading.current_thread"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._monitor.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tnrange": {
  "data": {
   "shadows": "trange"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm": {
  "data": {
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._tqdm.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_gui": {
  "data": {
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._tqdm_gui.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_notebook": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_notebook.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.TqdmDeprecationWarning": {
  "data": {
   "shadows": "tqdm.TqdmDeprecationWarning"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._tqdm_pandas.tqdm_pandas": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mne.externals.tqdm._tqdm._tqdm_pandas.sys",
    "tqdm.TqdmDeprecationWarning",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm._utils": {
  "data": {
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._version": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "io.open",
    "map",
    "mne.externals.tqdm._tqdm._version.__version__",
    "mne.externals.tqdm._tqdm._version.branch_name",
    "mne.externals.tqdm._tqdm._version.commit_hash",
    "mne.externals.tqdm._tqdm._version.extra",
    "mne.externals.tqdm._tqdm._version.gitdir",
    "mne.externals.tqdm._tqdm._version.os",
    "mne.externals.tqdm._tqdm._version.ref_file",
    "mne.externals.tqdm._tqdm._version.ref_file_path",
    "mne.externals.tqdm._tqdm._version.scriptdir",
    "mne.externals.tqdm._tqdm._version.version_info",
    "str"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm._version.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.__version__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.branch_name": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.commit_hash": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.extra": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.gitdir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.io_open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm._version.ref_file": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.ref_file_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.scriptdir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm._version.version_info": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.auto": {
  "data": {
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.auto.warnings"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.auto.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.auto.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.autonotebook": {
  "data": {
   "symbols_in_volume": [
    "IPython.get_ipython",
    "ImportError",
    "mne.externals.tqdm._tqdm.autonotebook.os",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.autonotebook.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.autonotebook.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.autonotebook.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.autonotebook.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli": {
  "data": {
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.cli.re"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.cli.CLI_EXTRA_DOC": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.RE_OPTS": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.RE_SHLEX": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.Requirement": {
  "data": {
   "shadows": "pkg_resources.Requirement"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.UNSUPPORTED_OPTS": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.cli.cast": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TqdmTypeError",
    "__name__",
    "chr",
    "eval",
    "mne.externals.tqdm._tqdm.cli.logging",
    "ord"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.cli.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.main": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "KeyError",
    "TqdmKeyError",
    "ValueError",
    "__name__",
    "any",
    "dict",
    "getattr",
    "len",
    "mne.externals.tqdm._tqdm.cli.CLI_EXTRA_DOC",
    "mne.externals.tqdm._tqdm.cli.RE_OPTS",
    "mne.externals.tqdm._tqdm.cli.RE_SHLEX",
    "mne.externals.tqdm._tqdm.cli.UNSUPPORTED_OPTS",
    "mne.externals.tqdm._tqdm.cli.cast",
    "mne.externals.tqdm._tqdm.cli.logging",
    "mne.externals.tqdm._tqdm.cli.posix_pipe",
    "mne.externals.tqdm._tqdm.cli.sys",
    "os.path.join",
    "pkg_resources.Requirement.parse",
    "pkg_resources.resource_filename",
    "shutil.copyfile",
    "sorted",
    "str",
    "tqdm",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.cli.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.posix_pipe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "callback",
    "fp_write",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.cli.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.contrib": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.contrib.DummyTqdmFile": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "tqdm.utils.ObjectWrapper"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.contrib.DummyTqdmFile.write": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "tqdm.tqdm.write"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.contrib.ObjectWrapper": {
  "data": {
   "shadows": "tqdm.utils.ObjectWrapper"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.contrib.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui": {
  "data": {
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.gui.tgrange",
    "mne.externals.tqdm._tqdm.gui.tqdm_gui"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.gui.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.std_tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.gui.tgrange": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_range",
    "mne.externals.tqdm._tqdm.gui.tqdm_gui"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "collections.deque",
    "len",
    "matplotlib",
    "matplotlib.pyplot",
    "matplotlib.pyplot.axhspan",
    "matplotlib.pyplot.ion",
    "matplotlib.pyplot.isinteractive",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.ticklabel_format",
    "max",
    "mne.externals.tqdm._tqdm.gui.tqdm_gui",
    "super",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.__iter__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "max",
    "time"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.close": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.display": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "AttributeError",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.tqdm_gui.update": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.gui.trange": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.gui.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "int",
    "mne.externals.tqdm._tqdm.notebook.IPY",
    "mne.externals.tqdm._tqdm.notebook.ipywidgets",
    "mne.externals.tqdm._tqdm.notebook.tnrange",
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook",
    "mne.externals.tqdm._tqdm.notebook.warnings"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.notebook.HBox": {
  "data": {
   "shadows": "IPython.html.widgets.ContainerWidget"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.HTML": {
  "data": {
   "shadows": "IPython.html.widgets.HTML"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.IPY": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.IPYW": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.IProgress": {
  "data": {
   "shadows": "IPython.html.widgets.FloatProgressWidget"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.__all__": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.__author__": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.escape": {
  "data": {
   "shadows": "cgi.escape"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.ipywidgets": {
  "data": {
   "shadows": "IPython.html.widgets"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.std_tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.notebook.tnrange": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "_range",
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.notebook.sys",
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.__iter__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.close": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "hasattr",
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.display": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AttributeError",
    "cgi.escape",
    "map",
    "mne.externals.tqdm._tqdm.notebook.IPYW"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.moveto": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.status_printer": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "IPython.display.display",
    "IPython.html.widgets.ContainerWidget",
    "IPython.html.widgets.FloatProgressWidget",
    "IPython.html.widgets.HTML",
    "ImportError",
    "NameError",
    "ValueError",
    "int",
    "mne.externals.tqdm._tqdm.notebook.IPYW",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.tqdm_notebook.update": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Exception",
    "mne.externals.tqdm._tqdm.notebook.tqdm_notebook",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.notebook.trange": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.notebook.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std": {
  "data": {
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.std.Bar": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "map",
    "object",
    "range"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.Bar.__format__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "divmod",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.Bar.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "max",
    "min",
    "mne.externals.tqdm._tqdm.std.TqdmWarning",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.DataFrameGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.DataFrameGroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.GroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.GroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.PanelGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.PanelGroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.RLock": {
  "data": {
   "shadows": "multiprocessing.RLock"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.SeriesGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.SeriesGroupBy"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.__enter__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.__exit__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.acquire": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.create_mp_lock": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "classmethod",
    "hasattr",
    "multiprocessing.RLock"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.create_th_lock": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "OSError",
    "classmethod",
    "hasattr",
    "threading.RLock"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock.release": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "DeprecationWarning",
    "mne.externals.tqdm._tqdm.std.TqdmWarning"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmExperimentalWarning": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.externals.tqdm._tqdm.std.TqdmWarning"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmKeyError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmMonitorWarning": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.externals.tqdm._tqdm.std.TqdmWarning"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmTypeError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmWarning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.TqdmWarning.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "fp_write",
    "mne.externals.tqdm._tqdm.std.TqdmWarning",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std._Rolling_and_Expanding": {
  "data": {
   "shadows": "pandas.core.window._Rolling_and_Expanding"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.std.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.std.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.th": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.std.tqdm": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__bool__": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "TypeError",
    "bool"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__del__": {
  "data": {
   "lineno": 1059
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__enter__": {
  "data": {
   "lineno": 1047
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__exit__": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "AttributeError",
    "mne.externals.tqdm._tqdm.std.TqdmWarning",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__hash__": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__init__": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "AttributeError",
    "SimpleTextIOWrapper",
    "TypeError",
    "_dynamic_ncols",
    "_environ_cols_wrapper",
    "_is_ascii",
    "_supports_unicode",
    "_unicode",
    "ascii",
    "dynamic_ncols",
    "float",
    "getattr",
    "hasattr",
    "len",
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning",
    "mne.externals.tqdm._tqdm.std.TqdmKeyError",
    "mne.externals.tqdm._tqdm.std.sys",
    "str",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__iter__": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "max",
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning",
    "mne.externals.tqdm._tqdm.std.sys",
    "time.time"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__len__": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__new__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "Exception",
    "TMonitor",
    "WeakSet",
    "hasattr",
    "mne.externals.tqdm._tqdm.std.TqdmMonitorWarning",
    "object.__new__",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__nonzero__": {
  "data": {
   "lineno": 1038
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.__repr__": {
  "data": {
   "lineno": 1062
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm._comparable": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm._decr_instances": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "abs",
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm._get_free_pos": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "abs",
    "classmethod",
    "hasattr",
    "len",
    "min",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.clear": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.close": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "fp_write",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.close.fp_write": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "_unicode"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.display": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.ema": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.external_write_mode": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "all",
    "classmethod",
    "contextlib.contextmanager",
    "getattr",
    "hasattr",
    "mne.externals.tqdm._tqdm.std.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_dict": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_interval": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "divmod",
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_meter": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "FormatReplace",
    "TypeError",
    "UnicodeEncodeError",
    "_is_ascii",
    "_text_width",
    "_unicode",
    "ascii",
    "dict",
    "format_sizeof",
    "max",
    "mne.externals.tqdm._tqdm.std.Bar",
    "mne.externals.tqdm._tqdm.std.tqdm",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_num": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.format_sizeof": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "abs",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.get_lock": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "mne.externals.tqdm._tqdm.std.TqdmDefaultWriteLock"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.moveto": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "_term_move_up",
    "_unicode"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "inner_generator",
    "pandas.Panel",
    "pandas.Panel.progress_apply",
    "pandas.core.frame.DataFrame.progress_apply",
    "pandas.core.frame.DataFrame.progress_applymap",
    "pandas.core.groupby.DataFrameGroupBy.progress_apply",
    "pandas.core.groupby.GroupBy.progress_aggregate",
    "pandas.core.groupby.GroupBy.progress_apply",
    "pandas.core.groupby.GroupBy.progress_transform",
    "pandas.core.groupby.PanelGroupBy",
    "pandas.core.groupby.PanelGroupBy.progress_apply",
    "pandas.core.groupby.SeriesGroupBy.progress_apply",
    "pandas.core.groupby.SeriesGroupBy.progress_map",
    "pandas.core.series.Series.progress_apply",
    "pandas.core.series.Series.progress_map",
    "pandas.core.window._Rolling_and_Expanding",
    "pandas.core.window._Rolling_and_Expanding.progress_apply"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas.inner_generator": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas.inner_generator.inner": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "len",
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning",
    "mne.externals.tqdm._tqdm.std.sys",
    "pandas.core.series.Series",
    "pandas.core.window._Rolling_and_Expanding",
    "tclass"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.pandas.inner_generator.inner.wrapper": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.refresh": {
  "data": {
   "lineno": 1287
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.reset": {
  "data": {
   "lineno": 1320
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_description": {
  "data": {
   "lineno": 1336
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_description_str": {
  "data": {
   "lineno": 1350
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_lock": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_postfix": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "_OrderedDict",
    "isinstance",
    "numbers.Number",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.set_postfix_str": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.status_printer": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.status_printer.fp_write": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "_unicode",
    "fp_flush"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.status_printer.print_status": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "fp_write",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.unpause": {
  "data": {
   "lineno": 1314
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.update": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "max",
    "mne.externals.tqdm._tqdm.std.TqdmDeprecationWarning",
    "mne.externals.tqdm._tqdm.std.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.wrapattr": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "CallbackIOWrapper",
    "bytes",
    "classmethod",
    "contextlib.contextmanager",
    "tclass"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.tqdm.write": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "classmethod",
    "mne.externals.tqdm._tqdm.std.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.trange": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "_range",
    "mne.externals.tqdm._tqdm.std.tqdm"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.std.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.tgrange": {
  "data": {
   "shadows": "trange"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.tnrange": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.tqdm_gui": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.tqdm_notebook": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "TypeError",
    "any",
    "chr",
    "len",
    "mne.externals.tqdm._tqdm.utils.CUR_OS",
    "mne.externals.tqdm._tqdm.utils.IS_WIN",
    "mne.externals.tqdm._tqdm.utils.colorama",
    "mne.externals.tqdm._tqdm.utils.re",
    "platform.system",
    "range",
    "set",
    "str",
    "weakref.WeakSet"
   ]
  },
  "type": "module"
 },
 "mne.externals.tqdm._tqdm.utils.CUR_OS": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.utils.ObjectWrapper"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper.__init__.read": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "callback",
    "func",
    "functools.wraps",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.CallbackIOWrapper.__init__.write": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "callback",
    "func",
    "functools.wraps",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__eq__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__ge__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__gt__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__le__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__lt__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.Comparable.__ne__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.FormatReplace": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.FormatReplace.__format__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.FormatReplace.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.IS_NIX": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.IS_WIN": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.__getattr__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.__setattr__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.wrapper_getattr": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "object.__getattr__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.ObjectWrapper.wrapper_setattr": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.RE_ANSI": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.utils.ObjectWrapper"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.SimpleTextIOWrapper.write": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils.TIOCGWINSZ": {
  "data": {
   "shadows": "termios.TIOCGWINSZ"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.WeakSet": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "collections.MutableMapping.items",
    "collections.MutableMapping.keys",
    "collections.MutableMapping.pop",
    "collections.MutableMapping.setdefault",
    "collections.MutableMapping.update",
    "collections.MutableMapping.values",
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__delitem__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dict.__delitem__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__iter__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__reduce__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__repr__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__reversed__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "reversed"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.__setitem__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.clear": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dict.clear"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.copy": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.fromkeys": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._OrderedDict.popitem": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "KeyError",
    "dict.pop"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._basestring": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._curos": {
  "data": {
   "shadows": "platform.system"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_linux": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "array.array",
    "fcntl.ioctl",
    "int",
    "mne.externals.tqdm._tqdm.utils.os",
    "termios.TIOCGWINSZ"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_tput": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "int",
    "mne.externals.tqdm._tqdm.utils.shlex",
    "mne.externals.tqdm._tqdm.utils.subprocess"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_windows": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ctypes.create_string_buffer",
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
    "ctypes.windll.kernel32.GetStdHandle",
    "mne.externals.tqdm._tqdm.utils.struct",
    "sys.stdin",
    "sys.stdout"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._environ_cols_wrapper": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.utils.IS_NIX",
    "mne.externals.tqdm._tqdm.utils.IS_WIN"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._is_ascii": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tqdm._tqdm.utils._supports_unicode",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._is_utf": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Exception",
    "UnicodeEncodeError"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._range": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._supports_unicode": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "AttributeError",
    "mne.externals.tqdm._tqdm.utils._is_utf"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._term_move_up": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.utils.colorama",
    "mne.externals.tqdm._tqdm.utils.os"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._text_width": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "mne.externals.tqdm._tqdm.utils._unicode",
    "sum",
    "unicodedata.east_asian_width"
   ]
  },
  "type": "function"
 },
 "mne.externals.tqdm._tqdm.utils._unich": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils._unicode": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.colorama": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.externals.tqdm._tqdm.utils.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.east_asian_width": {
  "data": {
   "shadows": "unicodedata.east_asian_width"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.ioctl": {
  "data": {
   "shadows": "fcntl.ioctl"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.stdin": {
  "data": {
   "shadows": "sys.stdin"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.windll": {
  "data": {
   "shadows": "ctypes.windll"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mne.externals.tqdm._tqdm.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.externals.tqdm.auto": {
  "data": {
   "shadows": "tqdm.auto"
  },
  "type": "import"
 },
 "mne.fixes": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "mne.fixes.has_numba",
    "mne.fixes.numba",
    "mne.fixes.os",
    "numpy.bincount",
    "numpy.mean",
    "range"
   ]
  },
  "type": "module"
 },
 "mne.fixes.BaseEstimator": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.fixes.BaseEstimator.__repr__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "len",
    "sklearn.base._pprint"
   ]
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "getattr",
    "mne.fixes.inspect",
    "object.__init__",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator.get_params": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "getattr",
    "hasattr",
    "len",
    "mne.fixes.warnings"
   ]
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator.set_params": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "mne.fixes.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mne.fixes.EmpiricalCovariance.__init__": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance._set_covariance": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.error_norm": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.amax",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.fit": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "mne.fixes.empirical_covariance",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.get_precision": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.mahalanobis": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.fixes.EmpiricalCovariance.score": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "mne.fixes.empirical_covariance",
    "mne.fixes.log_likelihood"
   ]
  },
  "type": "function"
 },
 "mne.fixes.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "mne.fixes.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.fixes.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.fixes.PathBase": {
  "data": {
   "shadows": "py._path.common.PathBase"
  },
  "type": "import"
 },
 "mne.fixes._assess_dimension_": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "math.log",
    "numpy.log",
    "numpy.pi",
    "numpy.sum",
    "range",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "mne.fixes._check_fit_params": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.model_selection._validation._index_param_value",
    "sklearn.utils.validation._check_fit_params"
   ]
  },
  "type": "function"
 },
 "mne.fixes._crop_colorbar": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "mne.fixes._dpss": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "mne.fixes.tridi_inverse_iteration",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.linalg.eigvals_banded"
   ]
  },
  "type": "function"
 },
 "mne.fixes._fn35": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "pathlib.Path",
    "py._path.common.PathBase",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_args": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "mne.fixes.inspect"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_check_scoring": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ImportError",
    "sklearn.metrics.scorer.check_scoring"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_dpss": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ImportError",
    "mne.fixes._dpss",
    "scipy.signal.windows.dpss"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_img_fdata": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "AttributeError",
    "float"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_read_geometry": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "nibabel.__version__",
    "nibabel.freesurfer.read_geometry"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_status": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "AttributeError",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.fixes._infer_dimension_": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "len",
    "mne.fixes._assess_dimension_",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.fixes._logdet": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64",
    "numpy.log",
    "numpy.sum",
    "numpy.where",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "mne.fixes._np_apply_along_axis": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "func1d",
    "len",
    "mne.fixes.jit",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.fixes._pprint": {
  "data": {
   "shadows": "sklearn.base._pprint"
  },
  "type": "import"
 },
 "mne.fixes._read_geometry": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "_fread3",
    "_fread3_many",
    "dict",
    "len",
    "mne.fixes._read_volume_info",
    "mne.fixes.warnings",
    "numpy.float",
    "numpy.fromfile",
    "numpy.int",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.fixes._read_volume_info": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "float",
    "int",
    "len",
    "mne.fixes.warnings",
    "numpy.array",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.fixes._safe_svd": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "mne.fixes._get_args",
    "numpy.linalg.LinAlgError",
    "scipy.linalg.svd",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.fixes._serialize_volume_info": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "mne.fixes.warnings",
    "numpy.array",
    "numpy.array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.fixes._sklearn_check_fit_params": {
  "data": {
   "shadows": "sklearn.utils.validation._check_fit_params"
  },
  "type": "import"
 },
 "mne.fixes._validate_sos": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "mne.fixes._validation": {
  "data": {
   "shadows": "sklearn.model_selection._validation"
  },
  "type": "import"
 },
 "mne.fixes.bincount": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "mne.fixes.jit",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.fixes.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer.check_scoring"
  },
  "type": "import"
 },
 "mne.fixes.dpss": {
  "data": {
   "shadows": "scipy.signal.windows.dpss"
  },
  "type": "import"
 },
 "mne.fixes.einsum": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "mne.fixes.empirical_covariance": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "mne.fixes.warnings",
    "numpy.array",
    "numpy.asarray",
    "numpy.cov",
    "numpy.dot",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "mne.fixes.fft": {
  "data": {
   "shadows": "numpy.fft.fft"
  },
  "type": "import"
 },
 "mne.fixes.fftfreq": {
  "data": {
   "shadows": "numpy.fft.fftfreq"
  },
  "type": "import"
 },
 "mne.fixes.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "mne.fixes.has_numba": {
  "data": {
   "lineno": 1043
  },
  "type": "constant"
 },
 "mne.fixes.ifft": {
  "data": {
   "shadows": "numpy.fft.ifft"
  },
  "type": "import"
 },
 "mne.fixes.ifftshift": {
  "data": {
   "shadows": "numpy.fft.ifftshift"
  },
  "type": "import"
 },
 "mne.fixes.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.fixes.irfft": {
  "data": {
   "shadows": "numpy.fft.irfft"
  },
  "type": "import"
 },
 "mne.fixes.is_classifier": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.is_regressor": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.jit": {
  "data": {
   "lineno": 1047
  },
  "type": "function"
 },
 "mne.fixes.jit._jit": {
  "data": {
   "lineno": 1048
  },
  "type": "function"
 },
 "mne.fixes.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.fixes.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "mne.fixes.log_likelihood": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "mne.fixes._logdet",
    "numpy.log",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.fixes.mean": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "mne.fixes._np_apply_along_axis",
    "mne.fixes.jit",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.fixes.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.fixes.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "mne.fixes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.fixes.prange": {
  "data": {
   "lineno": 1051
  },
  "type": "constant"
 },
 "mne.fixes.read_geometry": {
  "data": {
   "shadows": "nibabel.freesurfer.read_geometry"
  },
  "type": "import"
 },
 "mne.fixes.rfft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "mne.fixes.rfftfreq": {
  "data": {
   "shadows": "numpy.fft.rfftfreq"
  },
  "type": "import"
 },
 "mne.fixes.rng_uniform": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.stable_cumsum": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.fixes.warnings",
    "numpy.all",
    "numpy.cumsum",
    "numpy.float64",
    "numpy.isclose",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.fixes.svd_flip": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.newaxis",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "mne.fixes.tridi_inverse_iteration": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "mne.fixes.tridisolve",
    "numpy.abs",
    "numpy.linalg.norm",
    "numpy.random.randn",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.fixes.tridisolve": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "numpy.diag",
    "range",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "mne.fixes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.forward": {
  "data": {},
  "type": "module"
 },
 "mne.forward._field_interpolation": {
  "data": {},
  "type": "module"
 },
 "mne.forward._field_interpolation._ad_hoc_noise": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "dict",
    "len",
    "mne.forward._field_interpolation._is_axial_coil",
    "numpy.array",
    "numpy.empty",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._as_meg_type_inst": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "EpochsArray",
    "EvokedArray",
    "ValueError",
    "_check_option",
    "hasattr",
    "isinstance",
    "len",
    "mne.forward._field_interpolation._map_meg_channels",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "pick_info",
    "pick_types",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._compute_mapping_matrix": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "_has_eeg_average_ref_proj",
    "len",
    "list",
    "make_projector",
    "numpy.cumsum",
    "numpy.diag",
    "numpy.dot",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.where",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._is_axial_coil": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._make_surface_mapping": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "_check_option",
    "_check_origin",
    "_create_eeg_els",
    "_create_meg_coils",
    "_do_self_dots",
    "_do_surface_dots",
    "all",
    "check_n_jobs",
    "copy.deepcopy",
    "dict",
    "len",
    "mne.forward._field_interpolation._compute_mapping_matrix",
    "mne.forward._field_interpolation._setup_dots",
    "numpy.arange",
    "pick_types",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._map_meg_channels": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_check_origin",
    "_create_meg_coils",
    "_do_cross_dots",
    "_do_self_dots",
    "_read_coil_defs",
    "dict",
    "len",
    "mne.forward._field_interpolation._compute_mapping_matrix",
    "mne.forward._field_interpolation._setup_dots"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._setup_dots": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "_get_legen_table",
    "mne.forward._field_interpolation._ad_hoc_noise",
    "numpy.linspace",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.make_field_map": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_option",
    "_ensure_trans",
    "_find_trans",
    "get_head_surf",
    "get_meg_helmet_surf",
    "isinstance",
    "len",
    "list",
    "mne.forward._field_interpolation._make_surface_mapping",
    "read_trans",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._lead_dots": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "mne.forward._lead_dots._comp_sum_eeg": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "lut_fun",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cumprod",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._comp_sums_meg": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "einsum",
    "len",
    "lut_fun",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cumprod",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_cross_dots": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "len",
    "mne.forward._lead_dots._fast_sphere_dot_r0",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_self_dots": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array_split",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_self_dots_subset": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "len",
    "mne.forward._lead_dots._fast_sphere_dot_r0",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_surface_dots": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array_split",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_surface_dots_subset": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "NotImplementedError",
    "mne.forward._lead_dots._fast_sphere_dot_r0"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._eeg_const": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "mne.forward._lead_dots._fast_sphere_dot_r0": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "einsum",
    "enumerate",
    "len",
    "mne.forward._lead_dots._comp_sum_eeg",
    "mne.forward._lead_dots._comp_sums_meg",
    "mne.forward._lead_dots._eeg_const",
    "mne.forward._lead_dots._meg_const",
    "numpy.clip",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legvander"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen_der": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "mne.forward._lead_dots._next_legen_der",
    "numpy.empty",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen_table": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "RuntimeError",
    "_get_extra_data_path",
    "float",
    "leg_fun",
    "list",
    "mne.forward._lead_dots._get_legen",
    "mne.forward._lead_dots._get_legen_der",
    "mne.forward._lead_dots.os",
    "numpy.arange",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "numpy.fromfile",
    "numpy.linspace",
    "open",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._meg_const": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "mne.forward._lead_dots._next_legen_der": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "mne.forward._lead_dots.legendre": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward._make_forward": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.forward._make_forward._accuracy_dict": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.forward._make_forward._coil_registry": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.forward._make_forward._create_eeg_el": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "_loc_to_eeg_loc",
    "_normalize_vectors",
    "apply_trans",
    "dict",
    "mne.forward._make_forward._accuracy_dict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_eeg_els": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "mne.forward._make_forward._create_eeg_el"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_meg_coil": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "RuntimeError",
    "_loc_to_coil_trans",
    "apply_trans",
    "dict",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_meg_coils": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "isinstance",
    "mne.forward._make_forward._accuracy_dict",
    "mne.forward._make_forward._create_meg_coil",
    "mne.forward._make_forward._read_coil_defs",
    "mne.forward._make_forward._transform_orig_meg_coils",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._extra_coil_def_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.forward._make_forward._prep_eeg_channels": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.forward._make_forward._create_eeg_els",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._prep_meg_channels": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "_has_kit_refs",
    "_print_coord_trans",
    "len",
    "mne.forward._make_forward._create_meg_coils",
    "mne.forward._make_forward._read_coil_defs",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._prepare_for_forward": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "Info",
    "RuntimeError",
    "_bem_find_surface",
    "_coord_frame_name",
    "_ensure_src",
    "_filter_source_spaces",
    "_print_coord_trans",
    "dict",
    "len",
    "mne.forward._make_forward._prep_eeg_channels",
    "mne.forward._make_forward._prep_meg_channels",
    "mne.forward._make_forward._setup_bem",
    "mne.forward._make_forward.os",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.int32",
    "numpy.tile",
    "numpy.zeros",
    "pick_info",
    "pick_types",
    "str",
    "sum",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._read_coil_def_file": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "RuntimeError",
    "_pl",
    "copy.deepcopy",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "mne.forward._make_forward._coil_registry",
    "numpy.any",
    "numpy.array",
    "numpy.fromstring",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._read_coil_defs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list",
    "mne.forward._make_forward._extra_coil_def_fname",
    "mne.forward._make_forward._read_coil_def_file",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._setup_bem": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_coord_frame_name",
    "_ensure_trans",
    "isinstance",
    "len",
    "os.path.split",
    "read_bem_solution",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._to_forward_dict": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "Forward",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._transform_orig_meg_coils": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.forward._make_forward.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._make_forward.make_forward_dipole": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError",
    "VolSourceEstimate",
    "_complete_vol_src",
    "_make_discrete_source_space",
    "convert_forward_solution",
    "dict",
    "enumerate",
    "len",
    "mne.forward._make_forward.make_forward_solution",
    "numpy.allclose",
    "numpy.bool",
    "numpy.diff",
    "numpy.in1d",
    "numpy.logical_not",
    "numpy.newaxis",
    "numpy.unique",
    "numpy.zeros",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward.make_forward_solution": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Info",
    "TypeError",
    "_compute_forwards",
    "_coord_frame_name",
    "_get_trans",
    "_merge_meg_eeg_fwds",
    "check_n_jobs",
    "isinstance",
    "mne.forward._make_forward._prepare_for_forward",
    "mne.forward._make_forward._to_forward_dict",
    "os.path.split",
    "read_info",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._make_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward._make_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward._make_forward.use_coil_def": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mne.forward._make_forward._extra_coil_def_fname"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests": {
  "data": {},
  "type": "module"
 },
 "mne.forward.tests.test_field_interpolation": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.forward.tests.test_field_interpolation.base_dir",
    "mne.forward.tests.test_field_interpolation.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.forward.tests.test_field_interpolation.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._comp_sum_eeg": {
  "data": {
   "shadows": "mne.forward._lead_dots._comp_sum_eeg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._comp_sums_meg": {
  "data": {
   "shadows": "mne.forward._lead_dots._comp_sums_meg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._create_meg_coils": {
  "data": {
   "shadows": "mne.forward._make_forward._create_meg_coils"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._do_cross_dots": {
  "data": {
   "shadows": "mne.forward._lead_dots._do_cross_dots"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._get_legen_table": {
  "data": {
   "shadows": "mne.forward._lead_dots._get_legen_table"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._make_surface_mapping": {
  "data": {
   "shadows": "mne.forward._make_surface_mapping"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._setup_args": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dict",
    "lut_fun",
    "mne.forward._field_interpolation._setup_dots",
    "mne.forward._make_forward._create_meg_coils",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation._setup_dots": {
  "data": {
   "shadows": "mne.forward._field_interpolation._setup_dots"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.base_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.data_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.evoked_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.get_head_surf": {
  "data": {
   "shadows": "mne.surface.get_head_surf"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.get_meg_helmet_surf": {
  "data": {
   "shadows": "mne.surface.get_meg_helmet_surf"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.legendre": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.make_field_map": {
  "data": {
   "shadows": "mne.forward.make_field_map"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.raw_ctf_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.test_as_meg_type_evoked": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "events",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward._lead_dots._do_cross_dots",
    "mne.forward.tests.test_field_interpolation._setup_args",
    "mne.forward.tests.test_field_interpolation.mne",
    "mne.forward.tests.test_field_interpolation.pytest",
    "mne.forward.tests.test_field_interpolation.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_field_map_ctf": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.raw_ctf_fname",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_legendre_table": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mne.forward._lead_dots._get_legen_table",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_legendre_val": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "float",
    "lut_fun",
    "mne.forward._lead_dots._comp_sum_eeg",
    "mne.forward._lead_dots._comp_sums_meg",
    "mne.forward._lead_dots._get_legen_table",
    "numpy.arange",
    "numpy.cumprod",
    "numpy.empty",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.polynomial.legendre.legval",
    "numpy.polynomial.legendre.legvander",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "scipy.interpolate.interp1d",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_eeg": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward._make_surface_mapping",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.forward.tests.test_field_interpolation.pytest",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.read_evokeds",
    "mne.surface.get_head_surf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_meeg": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.pick_types",
    "mne.read_evokeds",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_meg": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward._make_surface_mapping",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.forward.tests.test_field_interpolation.pytest",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.read_evokeds",
    "mne.surface.get_meg_helmet_surf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.trans_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.forward.tests.test_forward.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.forward.tests.test_forward.Forward": {
  "data": {
   "shadows": "mne.forward.Forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.apply_forward": {
  "data": {
   "shadows": "mne.apply_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.apply_forward_raw": {
  "data": {
   "shadows": "mne.apply_forward_raw"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_forward_allclose": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.average_forward_solutions": {
  "data": {
   "shadows": "mne.average_forward_solutions"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.compute_depth_prior": {
  "data": {
   "shadows": "mne.forward.compute_depth_prior"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.compute_orient_prior": {
  "data": {
   "shadows": "mne.forward.compute_orient_prior"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.fname_evoked": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_meeg": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_meeg_grad": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.is_fixed_orient": {
  "data": {
   "shadows": "mne.forward.is_fixed_orient"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.restrict_forward_to_label": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_label"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.restrict_forward_to_stc": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_stc"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.test_apply_forward": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "len",
    "mne.SourceEstimate",
    "mne.apply_forward",
    "mne.apply_forward_raw",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.tests.test_forward.fname_evoked",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.pytest",
    "mne.pick_types_forward",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_average_forward_solution": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "mne.average_forward_solutions",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.tests.test_forward.assert_forward_allclose",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.fname_meeg_grad",
    "mne.forward.tests.test_forward.pytest",
    "mne.read_forward_solution",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "mne.write_forward_solution",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_convert_forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.is_fixed_orient",
    "mne.forward.tests.test_forward.assert_forward_allclose",
    "mne.forward.tests.test_forward.fname_meeg_grad",
    "mne.forward.tests.test_forward.gc",
    "mne.read_forward_solution",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_equalize_channels": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mne.channels.equalize_channels",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_io_forward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "len",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.is_fixed_orient",
    "mne.forward.tests.test_forward.assert_forward_allclose",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.fname_meeg_grad",
    "mne.forward.tests.test_forward.pytest",
    "mne.read_forward_solution",
    "mne.write_forward_solution",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_priors": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.compute_depth_prior",
    "mne.forward.compute_orient_prior",
    "mne.forward.is_fixed_orient",
    "mne.forward.tests.test_forward.fname_evoked",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.pytest",
    "mne.io.read_info",
    "mne.read_forward_solution",
    "numpy.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_restrict_forward_to_label": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.restrict_forward_to_label",
    "mne.forward.tests.test_forward.assert_forward_allclose",
    "mne.forward.tests.test_forward.data_path",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.label.read_label",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.write_forward_solution",
    "numpy.intersect1d",
    "numpy.searchsorted",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_restrict_forward_to_stc": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "len",
    "mne.SourceEstimate",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.restrict_forward_to_stc",
    "mne.forward.tests.test_forward.assert_forward_allclose",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.pytest",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.write_forward_solution",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.write_forward_solution": {
  "data": {
   "shadows": "mne.write_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.forward.tests.test_make_forward.data_path",
    "mne.forward.tests.test_make_forward.os",
    "mne.forward.tests.test_make_forward.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.forward.tests.test_make_forward.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.Forward": {
  "data": {
   "shadows": "mne.forward.Forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.SourceSpaces": {
  "data": {
   "shadows": "mne.SourceSpaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._compare_forwards": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "mne.convert_forward_solution",
    "mne.source_space._compare_source_spaces",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._create_meg_coils": {
  "data": {
   "shadows": "mne.forward._make_forward._create_meg_coils"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._do_forward_solution": {
  "data": {
   "shadows": "mne.forward._do_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._magnetic_dipole_field_vec": {
  "data": {
   "shadows": "mne.forward._compute_forward._magnetic_dipole_field_vec"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_forward_allclose": {
  "data": {
   "shadows": "mne.forward.tests.test_forward.assert_forward_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.data_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fit_dipole": {
  "data": {
   "shadows": "mne.dipole.fit_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.fname_aseg": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_bem": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_bem_meg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_cov": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_dip": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_evo": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_meeg": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_raw": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_src": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_trans": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_forward_dipole": {
  "data": {
   "shadows": "mne.forward._make_forward.make_forward_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.setup_source_space": {
  "data": {
   "shadows": "mne.source_space.setup_source_space"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.subjects_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.test_forward_mixed_source_space": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.tests.test_make_forward.fname_aseg",
    "mne.forward.tests.test_make_forward.fname_bem",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_src",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD.all",
    "mne.make_forward_solution",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.utils.requires_nibabel",
    "numpy.array",
    "numpy.random.rand",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_magnetic_dipole": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "mne.forward._compute_forward._magnetic_dipole_field_vec",
    "mne.forward._make_forward._create_meg_coils",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.io.read_info",
    "mne.pick_info",
    "mne.pick_types",
    "numpy.array",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.median",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_dipole": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.dipole.Dipole",
    "mne.dipole.fit_dipole",
    "mne.forward._make_forward.make_forward_dipole",
    "mne.forward.tests.test_forward.assert_forward_allclose",
    "mne.forward.tests.test_make_forward.fname_bem",
    "mne.forward.tests.test_make_forward.fname_cov",
    "mne.forward.tests.test_make_forward.fname_dip",
    "mne.forward.tests.test_make_forward.fname_evo",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_dipole",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.simulation.simulate_evoked",
    "mne.source_estimate.VolSourceEstimate",
    "mne.write_forward_solution",
    "numpy.arange",
    "numpy.arccos",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.eye",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_no_meg": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dict",
    "mne.channels.make_standard_montage",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.read_forward_solution",
    "mne.setup_volume_source_space",
    "mne.write_forward_solution",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.tests.test_make_forward._compare_forwards",
    "mne.forward.tests.test_make_forward.fname_bem",
    "mne.forward.tests.test_make_forward.fname_bem_meg",
    "mne.forward.tests.test_make_forward.fname_meeg",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_src",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.make_forward_solution",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_discrete": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "dict",
    "mne.SourceSpaces",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_src",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_kit": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward._do_forward_solution",
    "mne.forward.tests.test_make_forward._compare_forwards",
    "mne.forward.tests.test_make_forward.fname_bem_meg",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.forward.tests.test_make_forward.subjects_dir",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.make_forward_solution",
    "mne.pick_info",
    "mne.pick_types",
    "mne.read_forward_solution",
    "mne.source_space.setup_source_space",
    "mne.source_space.write_source_spaces",
    "mne.utils.requires_mne",
    "mne.write_forward_solution",
    "os.path.dirname",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_sphere": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.tests.test_make_forward._compare_forwards",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.forward.tests.test_make_forward.subjects_dir",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.source_space.setup_source_space",
    "mne.source_space.write_source_spaces",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.write_forward_solution": {
  "data": {
   "shadows": "mne.write_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.write_source_spaces": {
  "data": {
   "shadows": "mne.source_space.write_source_spaces"
  },
  "type": "import"
 },
 "mne.gui": {
  "data": {},
  "type": "module"
 },
 "mne.gui._backend": {
  "data": {},
  "type": "module"
 },
 "mne.gui._backend.ETSConfig": {
  "data": {
   "shadows": "traits.etsconfig.api.ETSConfig"
  },
  "type": "import"
 },
 "mne.gui._backend._check_backend": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_check_pyqt5_version",
    "mne.gui._backend._get_pyface_backend",
    "pyface.api.warning",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.gui._backend._get_pyface_backend": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "traits.etsconfig.api.ETSConfig.toolkit",
    "traitsui.toolkit.toolkit"
   ]
  },
  "type": "function"
 },
 "mne.gui._backend._testing_mode": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mne.gui._backend.os"
   ]
  },
  "type": "function"
 },
 "mne.gui._backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._backend.toolkit": {
  "data": {
   "shadows": "traitsui.toolkit.toolkit"
  },
  "type": "import"
 },
 "mne.gui._backend.warning": {
  "data": {
   "shadows": "pyface.api.warning"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui": {
  "data": {},
  "type": "module"
 },
 "mne.gui._coreg_gui.Action": {
  "data": {
   "shadows": "traitsui.menu.Action"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CANCEL": {
  "data": {
   "shadows": "pyface.api.CANCEL"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CancelButton": {
  "data": {
   "shadows": "traitsui.menu.CancelButton"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CoregFrame": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui._coreg_gui.CoregPanel",
    "mne.gui._coreg_gui.DataPanel",
    "mne.gui._coreg_gui._make_view",
    "mne.gui._coreg_gui.queue",
    "object",
    "traits.api.Bool",
    "traits.api.DelegatesTo",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traits.api.Property",
    "traits.api.RGBColor",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregFrame.__init__": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "any",
    "dict",
    "mne.gui._coreg_gui.CoregFrame",
    "mne.gui._coreg_gui.os",
    "pyface.api.error",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._coreg_panel_default": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._data_panel_default": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.DataPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._get_hsp_visible": {
  "data": {
   "lineno": 2041,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._init_plot": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "PointObject",
    "SurfaceObject",
    "_toggle_mlab_render",
    "dict",
    "mne.gui._coreg_gui.ViewOptionsPanel",
    "mne.gui._coreg_gui.defaults",
    "numpy.empty",
    "on_pick",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._model_default": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregModel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_advanced_rendering_change": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_fid_file_loaded": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "bool",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_lock_change": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._set_title": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_hsp_axes": {
  "data": {
   "lineno": 2054,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.eye",
    "numpy.zeros",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_mri_axes": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.eye",
    "numpy.zeros",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_mri_obj": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "getattr",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._update_projection_surf": {
  "data": {
   "lineno": 2063,
   "symbols_in_volume": [
    "_CheckInside",
    "_DistanceQuery",
    "dict",
    "len",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame.save_config": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "s_c"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame.save_config.s_c": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": [
    "set_config",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrameHandler": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "traitsui.api.Handler"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregFrameHandler.close": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "mne.gui._coreg_gui.warnings",
    "pyface.api.information"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrameHandler.object_title_changed": {
  "data": {
   "lineno": 872
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.DelegatesTo",
    "traits.api.Enum",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregModel._get_can_prepare_bem_model": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_can_save": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.eye",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_changes": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "_angle_between_quats",
    "float",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.rad2deg",
    "rot_to_quat",
    "rotation",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_fid_eval_str": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_eeg_data": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_fid_data": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_hpi_data": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_hsp_data": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_lpa_data": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_mri_data": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_nasion_data": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_rpa_data": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_head_mri_t": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.dot",
    "rotation",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_hsp_trans": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "numpy.eye",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_lpa_distance": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.ravel",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_head_t": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.array",
    "rotation",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_trans": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_trans_noscale": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.eye",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_n_icp_points": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "getattr",
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nasion_distance": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.ravel",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_eeg": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_hpi": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_hsp": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_lpa": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_nasion": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_orig_hsp": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nearest_transformed_high_res_mri_idx_rpa": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_orig_hsp_point_distance": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_point_distance": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "all",
    "len",
    "list",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_points_eval_str": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.std",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_high_res_mri_points": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_low_res_mri_points": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_mri_points": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyface.api.error"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_raw_subject": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_rpa_distance": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.ravel",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_high_res_mri_points": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_eeg_points": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_hpi": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_lpa": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_nasion": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_points": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_rpa": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_low_res_mri_points": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_lpa": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_nasion": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_rpa": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_orig_hsp_points": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._last_parameters_default": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._nearest_calc_default": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "_DistanceQuery"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._on_raw_subject_change": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._parameters_default": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._parameters_items_changed": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "mne.gui._coreg_gui.time",
    "numpy.rad2deg",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._rot_x_changed": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.deg2rad"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._rot_y_changed": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "numpy.deg2rad"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._rot_z_changed": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "numpy.deg2rad"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._scale_x_changed": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._scale_y_changed": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._scale_z_changed": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._setup_icp": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "getattr",
    "len",
    "list",
    "numpy.concatenate",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._trans_x_changed": {
  "data": {
   "lineno": 847
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._trans_y_changed": {
  "data": {
   "lineno": 850
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._trans_z_changed": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._update_nearest_calc": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_fiducials": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "fit_matched_points",
    "numpy.array",
    "numpy.concatenate",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_icp": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "all",
    "fit_matched_points",
    "getattr",
    "list",
    "mne.gui._coreg_gui.time",
    "pyface.api.GUI.process_events",
    "range",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.get_scaling_job": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.os",
    "mne.gui._coreg_gui.re"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.load_trans": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "_ensure_trans",
    "read_trans"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.omit_hsp_points": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "float",
    "mne.gui._coreg_gui.warnings",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.reset": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.busy",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.save_trans": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "write_trans"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.set_trans": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.busy",
    "rotation_angles"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui._coreg_gui.FittingOptionsPanel",
    "mne.gui._coreg_gui._make_view_coreg_panel",
    "mne.gui._coreg_gui.queue",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregPanel.__init__": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregPanel",
    "super",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel.__init__.worker": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "Exception",
    "make_bem_solution",
    "mne.gui._coreg_gui.traceback",
    "scale_mri",
    "write_bem_solution"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._cancel_icp_fired": {
  "data": {
   "lineno": 1455
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._cancels_icp_fired": {
  "data": {
   "lineno": 1458
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_fid_fired": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_icp_fired": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_fid_fired": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_icp_fired": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fitting_options_panel_default": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.FittingOptionsPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_queue_status_text": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_rotation": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "numpy.array",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_translation": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "numpy.array",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._n_scale_params_fired": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_params_fired": {
  "data": {
   "lineno": 1468
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_scale_fired": {
  "data": {
   "lineno": 1461
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_tr_fired": {
  "data": {
   "lineno": 1464
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_x_dec_fired": {
  "data": {
   "lineno": 1471
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_x_inc_fired": {
  "data": {
   "lineno": 1474
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_y_dec_fired": {
  "data": {
   "lineno": 1477
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_y_inc_fired": {
  "data": {
   "lineno": 1480
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_z_dec_fired": {
  "data": {
   "lineno": 1483
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_z_inc_fired": {
  "data": {
   "lineno": 1486
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_x_dec_fired": {
  "data": {
   "lineno": 1489
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_x_inc_fired": {
  "data": {
   "lineno": 1492
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_y_dec_fired": {
  "data": {
   "lineno": 1495
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_y_inc_fired": {
  "data": {
   "lineno": 1498
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_z_dec_fired": {
  "data": {
   "lineno": 1501
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_z_inc_fired": {
  "data": {
   "lineno": 1504
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_x_dec_fired": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_x_inc_fired": {
  "data": {
   "lineno": 1510
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_y_dec_fired": {
  "data": {
   "lineno": 1513
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_y_inc_fired": {
  "data": {
   "lineno": 1516
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_z_dec_fired": {
  "data": {
   "lineno": 1519
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_z_inc_fired": {
  "data": {
   "lineno": 1522
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "traits.api.Instance",
    "traitsui.api.Handler",
    "traitsui.api.UIInfo"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_fitting_options_changed": {
  "data": {
   "lineno": 904
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_fitting_options_panel_changed": {
  "data": {
   "lineno": 901
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_load_trans_changed": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._coreg_gui.os",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.error"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanelHandler.object_save_changed": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "_find_fiducials_files",
    "mne.gui._coreg_gui.NewMriDialog",
    "mne.gui._coreg_gui.os",
    "pyface.api.CANCEL",
    "pyface.api.FileDialog",
    "pyface.api.NO",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm",
    "pyface.api.error",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui._coreg_gui.ViewOptionsPanel",
    "traits.api.Bool",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.Float",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.DataPanel._fid_panel_default": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "FiducialsPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._file_change": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._headview_default": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._omit_points_fired": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "_pl"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._reset_omit_points_fired": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanel._subject_panel_default": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "SubjectSelectorPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanelHandler": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "traits.api.Instance",
    "traitsui.api.Handler",
    "traitsui.api.UIInfo"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.DataPanelHandler.object_view_options_changed": {
  "data": {
   "lineno": 1685
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DataPanelHandler.object_view_options_panel_changed": {
  "data": {
   "lineno": 1682
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Directory": {
  "data": {
   "shadows": "traits.api.Directory"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.EnumEditor": {
  "data": {
   "shadows": "traitsui.api.EnumEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.FittingOptionsPanel": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "dict",
    "mne.gui._coreg_gui.CoregModel",
    "traits.api.DelegatesTo",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Spring",
    "traitsui.api.VGrid",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.GUI": {
  "data": {
   "shadows": "pyface.api.GUI"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Group": {
  "data": {
   "shadows": "traitsui.api.Group"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.InstanceEditor": {
  "data": {
   "shadows": "traitsui.api.InstanceEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Label": {
  "data": {
   "shadows": "traitsui.api.Label"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.NO": {
  "data": {
   "shadows": "pyface.api.NO"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.NewMriDialog": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.Directory",
    "traits.api.HasPrivateTraits",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.View",
    "traitsui.menu.Action",
    "traitsui.menu.CancelButton"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.NewMriDialog._can_overwrite_changed": {
  "data": {
   "lineno": 1551
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog._get_subject_to_dir": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog._get_subject_to_exists": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog.update_dialog": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.RGBColor": {
  "data": {
   "shadows": "traits.api.RGBColor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Spring": {
  "data": {
   "shadows": "traitsui.api.Spring"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.StatusItem": {
  "data": {
   "shadows": "traitsui.api.StatusItem"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.UIInfo": {
  "data": {
   "shadows": "traitsui.api.UIInfo"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.UndoButton": {
  "data": {
   "shadows": "traitsui.menu.UndoButton"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.VGrid": {
  "data": {
   "shadows": "traitsui.api.VGrid"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.ViewOptionsPanel": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "mne.gui._coreg_gui._pass",
    "traits.api.Bool",
    "traits.api.Enum",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traits.api.RGBColor",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Spring",
    "traitsui.api.VGrid",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui._DEFAULT_PARAMETERS": {
  "data": {
   "lineno": 1264
  },
  "type": "constant"
 },
 "mne.gui._coreg_gui._make_view": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mne.gui._coreg_gui.CoregFrameHandler",
    "mne.gui._coreg_gui._make_view_coreg_panel",
    "mne.gui._coreg_gui._make_view_data_panel",
    "traitsui.api.Group",
    "traitsui.api.HGroup",
    "traitsui.api.InstanceEditor",
    "traitsui.api.Item",
    "traitsui.api.StatusItem",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._make_view_coreg_panel": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregPanelHandler",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Label",
    "traitsui.api.Spring",
    "traitsui.api.VGrid",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.UndoButton"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._make_view_data_panel": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.DataPanelHandler",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Label",
    "traitsui.api.Spring",
    "traitsui.api.VGrid",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.UndoButton"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._pass": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.busy": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.busy.__enter__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.busy.__exit__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.defaults": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "mne.gui._coreg_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui": {
  "data": {
   "symbols_in_volume": [
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "module"
 },
 "mne.gui._fiducials_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.ArrayEditor": {
  "data": {
   "shadows": "traitsui.api.ArrayEditor"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Event": {
  "data": {
   "shadows": "traits.api.Event"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.FiducialsFrame": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "float",
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._fiducials_gui.FiducialsPanel",
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui._fiducials_gui.defaults",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.FiducialsFrame.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "get_subjects_dir",
    "mne.gui._fiducials_gui.FiducialsFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._headview_default": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._init_plot": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "PointObject",
    "SurfaceObject",
    "_toggle_mlab_render",
    "mne.gui._fiducials_gui.defaults",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._on_mri_src_change": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._panel_default": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.FiducialsPanel",
    "mne.gui._fiducials_gui.view2"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._spanel_default": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "SubjectSelectorPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "float",
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui._fiducials_gui.SetHandler",
    "mne.gui._fiducials_gui._SET_TOOLTIP",
    "object",
    "set",
    "traits.api.Array",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.Enum",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traitsui.api.ArrayEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.FiducialsPanel.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.FiducialsPanel",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_pick": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "map",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_pick.round_": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_set_change": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._reset_fid_fired": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._save_as_fired": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.os",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._save_fired": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_lpa": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_nasion": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_pos": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "getattr",
    "numpy.allclose",
    "setattr",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._update_rpa": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "float",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.DelegatesTo",
    "traits.api.Event",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Property"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_reset": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_save": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_save_as": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.all",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_default_fid_fname": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_fid_ok": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "all",
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._reset_fired": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._subject_changed": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "Surf",
    "_find_fiducials_files",
    "_find_head_bem",
    "complete_surface_info",
    "decimate_surface",
    "dict",
    "float",
    "get_mni_fiducials",
    "len",
    "numpy.array",
    "pyface.api.error",
    "traits.api.on_trait_change",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel.reset_fiducials": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel.save": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "write_fiducials"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.SetHandler": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "traitsui.api.Handler"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.SetHandler.object_locked_changed": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "AttributeError",
    "mne.gui._fiducials_gui._color_children"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.SetHandler.object_set_changed": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui._SET_TOOLTIP": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "mne.gui._fiducials_gui._color_children": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.defaults": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.gui._fiducials_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.view2": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "mne.gui._file_traits": {
  "data": {},
  "type": "module"
 },
 "mne.gui._file_traits.Any": {
  "data": {
   "shadows": "traits.api.Any"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._file_traits.ArrayOrNone": {
  "data": {
   "shadows": "traits.api.ArrayOrNone"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DigSource": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "traits.api.Any",
    "traits.api.File",
    "traits.api.HasPrivateTraits",
    "traits.api.Int",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.DigSource._cardinal_point": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._file_changed": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get__hsp_points": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.zeros",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get__info": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "_empty_info",
    "_fiducial_coords",
    "all",
    "dir_tree_find",
    "fiff_open",
    "isinstance",
    "len",
    "mne.gui._file_traits._append_fiducials",
    "pyface.api.error",
    "read_dig_fif",
    "read_info",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_eeg_points": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_hpi_points": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_inst_dir": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "os.path.dirname",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_inst_fname": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "os.path.basename",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_lpa": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_n_omitted": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.sum",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_nasion": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_points": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_rpa": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.Directory": {
  "data": {
   "shadows": "traits.api.Directory"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DirectoryDialog": {
  "data": {
   "shadows": "pyface.api.DirectoryDialog"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Event": {
  "data": {
   "shadows": "traits.api.Event"
  },
  "type": "import"
 },
 "mne.gui._file_traits.FiducialsSource": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "float",
    "mne.gui._file_traits.fid_wildcard",
    "traits.api.ArrayOrNone",
    "traits.api.File",
    "traits.api.HasTraits",
    "traits.api.Property"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.FiducialsSource._get_fname": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.FiducialsSource._get_points": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Exception",
    "_fiducial_coords",
    "os.path.exists",
    "pyface.api.error",
    "read_fiducials",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._file_traits.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._file_traits.MRISubjectSource": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.Directory",
    "traits.api.Enum",
    "traits.api.Event",
    "traits.api.HasPrivateTraits",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.MRISubjectSource._emit_subject": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_can_create_fsaverage": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "os.path.exists",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_mri_dir": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "os.path.join",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_subject_has_bem": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "_mri_subject_has_bem",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_subjects": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "_is_mri_subject",
    "len",
    "mne.gui._file_traits.os",
    "os.path.isdir",
    "sorted",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource.create_fsaverage": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "RuntimeError",
    "create_default_subject",
    "mne.gui._file_traits.get_fs_home"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._file_traits.ProgressDialog": {
  "data": {
   "shadows": "pyface.api.ProgressDialog"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._file_traits.SubjectSelectorPanel": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mne.gui._file_traits.MRISubjectSource",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.SubjectSelectorPanel._create_fsaverage_fired": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.ProgressDialog",
    "pyface.api.error",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.SubjectSelectorPanel._subjects_dir_changed": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "pyface.api.information"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.Surf": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.empty",
    "traits.api.Array",
    "traits.api.HasTraits"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.SurfaceSource": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mne.gui._file_traits.Surf",
    "traits.api.File",
    "traits.api.HasTraits",
    "traits.api.Instance"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.SurfaceSource._surf_default": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "int",
    "mne.gui._file_traits.Surf",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.SurfaceSource.read_file": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "complete_surface_info",
    "mne.gui._file_traits.Surf",
    "os.path.exists",
    "pyface.api.error",
    "read_bem_surfaces",
    "read_surface",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._file_traits.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._file_traits._append_fiducials": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "mne.gui._file_traits._expand_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "os.path.abspath",
    "os.path.expanduser",
    "os.path.expandvars"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits._fs_home_problem": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits._get_root_home": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "check_fun",
    "get_config",
    "pyface.api.DirectoryDialog",
    "pyface.api.OK",
    "pyface.api.information",
    "set_config"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits._mne_root_problem": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._file_traits.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._file_traits.fid_wildcard": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.gui._file_traits.get_fs_home": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mne.gui._file_traits._get_root_home"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._file_traits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._file_traits.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._file_traits.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui._file_traits.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._file_traits.set_fs_home": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mne.gui._file_traits.get_fs_home",
    "mne.gui._file_traits.os"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.trans_wildcard": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.gui._help": {
  "data": {},
  "type": "module"
 },
 "mne.gui._help.TextWrapper": {
  "data": {
   "shadows": "textwrap.TextWrapper"
  },
  "type": "import"
 },
 "mne.gui._help.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.gui._help.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._help.read_tooltips": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "format_",
    "mne.gui._help.json",
    "mne.gui._help.os",
    "open",
    "textwrap.TextWrapper"
   ]
  },
  "type": "function"
 },
 "mne.gui._initialize_gui": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_testing_mode"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui": {
  "data": {
   "symbols_in_volume": [
    "_get_pyface_backend",
    "mne.gui._kit2fiff_gui.sys",
    "range",
    "read_tooltips",
    "str",
    "traitsui.api.CheckListEditor"
   ]
  },
  "type": "module"
 },
 "mne.gui._kit2fiff_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.CheckListEditor": {
  "data": {
   "shadows": "traitsui.api.CheckListEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.ETSConfig": {
  "data": {
   "shadows": "traits.trait_base.ETSConfig"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.EnumEditor": {
  "data": {
   "shadows": "traitsui.api.EnumEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui._kit2fiff_gui.Kit2FiffPanel",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "traits.api.HasTraits.__init__",
    "traits.trait_base.ETSConfig.toolkit"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._headview_default": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._kit2fiff_panel_default": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.Kit2FiffPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._marker_panel_default": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "CombineMarkersPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._model_default": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "get_config",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui._kit2fiff_gui.os",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame.save_config": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "set_config",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "traitsui.api.Handler"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler.close": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.information",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "list",
    "mne.gui._kit2fiff_gui.elp_wildcard",
    "mne.gui._kit2fiff_gui.hsp_wildcard",
    "mne.gui._kit2fiff_gui.kit_con_wildcard",
    "range",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.Enum",
    "traits.api.File",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_can_save": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_can_test_stim": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_dev_head_trans": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "fit_matched_points",
    "len",
    "numpy.any",
    "numpy.eye",
    "pyface.api.error",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_elp": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_elp_raw": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_read_dig_points",
    "len",
    "pyface.api.error",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_fid": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_fid_fname": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_head_dev_trans": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "scipy.linalg.inv",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.any",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp_fname": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp_raw": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Exception",
    "_decimate_points",
    "_read_dig_points",
    "len",
    "pyface.api.error",
    "pyface.api.information",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_chs": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "enumerate",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_chs_desc": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_data": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.ProgressDialog",
    "pyface.api.error",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_mrk": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_polhemus_neuromag_trans": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "apply_trans",
    "get_ras_to_neuromag_trans",
    "numpy.dot",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_raw": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Exception",
    "RawKIT",
    "pyface.api.error",
    "pyface.api.warning",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_sqd_fname": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_array": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "_default_stim_chs",
    "eval",
    "numpy",
    "traits.api.cached_property",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_comment": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_ok": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.clear_all": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.get_event_info": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "_find_events",
    "_make_stim_channel",
    "collections.Counter",
    "events"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.get_raw": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "RawKIT",
    "RuntimeError",
    "Transform",
    "ValueError",
    "_make_dig_points",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui._kit2fiff_gui.queue",
    "mne.gui._kit2fiff_gui.tooltips",
    "mne.gui._kit2fiff_gui.use_editor",
    "pyface.api.error",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.TextEditor",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.api.spring"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel.__init__": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "PointObject",
    "mne.gui._kit2fiff_gui.Kit2FiffPanel",
    "super",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel.__init__.worker": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._kit2fiff_gui.os",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._clear_all_fired": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._get_queue_len_str": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._plot_raw_fired": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._reset_dig_fired": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._save_as_fired": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._kit2fiff_gui.os",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm",
    "pyface.api.error",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._test_stim_fired": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "Exception",
    "events",
    "len",
    "pyface.api.error",
    "pyface.api.information",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._update_elp": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._update_fid": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._update_hsp": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.ProgressDialog": {
  "data": {
   "shadows": "pyface.api.ProgressDialog"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.TextEditor": {
  "data": {
   "shadows": "traitsui.api.TextEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.elp_wildcard": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.hsp_wildcard": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.kit_con_wildcard": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.spring": {
  "data": {
   "shadows": "traitsui.api.spring"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.tooltips": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.use_editor": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.warning": {
  "data": {
   "shadows": "pyface.api.warning"
  },
  "type": "import"
 },
 "mne.gui._marker_gui": {
  "data": {
   "symbols_in_volume": [
    "_get_pyface_backend",
    "mne.gui._marker_gui.sys",
    "mne.gui._marker_gui.use_editor_h",
    "mne.gui._marker_gui.use_editor_v",
    "range",
    "str",
    "traitsui.api.CheckListEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "module"
 },
 "mne.gui._marker_gui.Action": {
  "data": {
   "shadows": "traitsui.menu.Action"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.ArrayOrNone": {
  "data": {
   "shadows": "traits.api.ArrayOrNone"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CancelButton": {
  "data": {
   "shadows": "traitsui.menu.CancelButton"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CheckListEditor": {
  "data": {
   "shadows": "traitsui.api.CheckListEditor"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CombineMarkersModel": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointDest",
    "mne.gui._marker_gui.MarkerPointSource",
    "traits.api.Button",
    "traits.api.File",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersModel._clear_fired": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._get_distance": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.sqrt",
    "numpy.sum",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk1_default": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointSource"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk1_file_default": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk2_default": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointSource"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk2_file_default": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk3_default": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointDest"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._marker_gui.CombineMarkersModel",
    "mne.gui._marker_gui.MarkerPointDest",
    "mne.gui._marker_gui.MarkerPointSource",
    "traits.api.Array",
    "traits.api.Float",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersPanel.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "PointObject",
    "mne.gui._marker_gui.CombineMarkersPanel",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk1_default": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk2_default": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk3_default": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._update_mrk1": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._update_mrk2": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._update_mrk3": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.MarkerPointDest": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dir",
    "float",
    "mne.gui._marker_gui.MarkerPointSource",
    "mne.gui._marker_gui.MarkerPoints",
    "traits.api.ArrayOrNone",
    "traits.api.Bool",
    "traits.api.Enum",
    "traits.api.Instance",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_dir": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_enabled": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_name": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_points": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "apply_trans",
    "fit_matched_points",
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.intersect1d",
    "numpy.setdiff1d",
    "numpy.union1d",
    "numpy.zeros",
    "pyface.api.error",
    "rotation",
    "traits.api.cached_property",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dir",
    "list",
    "mne.gui._marker_gui.MarkerPoints",
    "mne.gui._marker_gui.mrk_view_basic",
    "mne.gui._marker_gui.mrk_wildcard",
    "range",
    "traits.api.Bool",
    "traits.api.Button",
    "traits.api.File",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPointSource._clear_fired": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._edit_fired": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mne.gui._marker_gui.mrk_view_edit"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_dir": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "mne.gui._marker_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_enabled": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_name": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mne.gui._marker_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._reorder_fired": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mne.gui._marker_gui.ReorderDialog"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._switch_left_right_fired": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource.load": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.error",
    "read_mrk",
    "str",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "float",
    "traits.api.Array",
    "traits.api.Button",
    "traits.api.HasPrivateTraits",
    "traits.api.Property",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPoints._get_can_save": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints._save_as_fired": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.gui._marker_gui.mrk_out_wildcard",
    "mne.gui._marker_gui.os",
    "mne.gui._marker_gui.out_ext",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints.save": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_write_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.ReorderDialog": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.HasPrivateTraits",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.View",
    "traitsui.menu.Action",
    "traitsui.menu.CancelButton"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.ReorderDialog._get_index": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.ReorderDialog._get_is_ok": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.mrk_out_wildcard": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_basic": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_edit": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_editable": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_wildcard": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.out_ext": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.use_editor_h": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.use_editor_v": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.gui._viewer": {
  "data": {
   "symbols_in_volume": [
    "float",
    "mne.gui._viewer._DEG_STEP_WIDTH",
    "mne.gui._viewer._DEG_WIDTH",
    "mne.gui._viewer._INC_BUTTON_WIDTH",
    "mne.gui._viewer._TEXT_WIDTH",
    "numpy.sign",
    "traitsui.api.Item",
    "traitsui.api.TextEditor",
    "traitsui.api.VGroup"
   ]
  },
  "type": "module"
 },
 "mne.gui._viewer.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._viewer.ArrayOrNone": {
  "data": {
   "shadows": "traits.api.ArrayOrNone"
  },
  "type": "import"
 },
 "mne.gui._viewer.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._viewer.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._viewer.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._viewer.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._viewer.Glyph": {
  "data": {
   "shadows": "mayavi.modules.glyph.Glyph"
  },
  "type": "import"
 },
 "mne.gui._viewer.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._viewer.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._viewer.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._viewer.HeadViewController": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._viewer._SCALE_WIDTH",
    "mne.gui._viewer._VIEW_BUTTON_WIDTH",
    "mne.gui._viewer.laggy_float_editor_headscale",
    "traits.api.Button",
    "traits.api.Enum",
    "traits.api.Float",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Spring",
    "traitsui.api.VGrid",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.HeadViewController._init_view": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.HeadViewController.on_set_interaction": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "traits.api.on_trait_change",
    "tvtk.api.tvtk.InteractorStyleTerrain",
    "tvtk.api.tvtk.InteractorStyleTrackballCamera"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.HeadViewController.on_set_view": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "SilenceStdout",
    "ValueError",
    "dict",
    "traits.api.on_trait_change",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._viewer.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._viewer.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._viewer.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._viewer.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._viewer.Object": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "float",
    "mayavi.sources.vtk_data_source.VTKDataSource",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.RGBColor",
    "traits.api.Range",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.Object._update_points": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "float",
    "mayavi.mlab.text3d",
    "mayavi.modules.glyph.Glyph",
    "mne.gui._viewer.Object",
    "traits.api.ArrayOrNone",
    "traits.api.Bool",
    "traits.api.Float",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.RGBColor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.PointObject.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bool",
    "mne.gui._viewer.PointObject",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._get_nearest": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "apply_trans"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._get_orientable": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._nearest_default": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "_DistanceQuery",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._on_hide": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._plot_points": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_toggle_mlab_render",
    "hasattr",
    "mayavi.mlab.pipeline.glyph",
    "mayavi.mlab.pipeline.scalar_scatter",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._resolution_changed": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "isinstance",
    "tvtk.api.tvtk.CylinderSource",
    "tvtk.api.tvtk.SphereSource"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._show_labels": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "_toggle_mlab_render",
    "enumerate",
    "len",
    "mayavi.mlab.text3d",
    "numpy.array",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_colors": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.mean",
    "traits.api.on_trait_change",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_marker_scaling": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_marker_type": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "getattr",
    "traits.api.on_trait_change",
    "tvtk.api.tvtk.CylinderSource",
    "tvtk.api.tvtk.SphereSource"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._update_projections": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "apply_trans",
    "hasattr",
    "int",
    "len",
    "numpy.linalg.inv",
    "numpy.linalg.norm",
    "numpy.ones",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject.default_traits_view": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "mne.gui._viewer._SCALE_WIDTH",
    "mne.gui._viewer.laggy_float_editor_headscale",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Spring",
    "traitsui.api.View"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._viewer.RGBColor": {
  "data": {
   "shadows": "traits.api.RGBColor"
  },
  "type": "import"
 },
 "mne.gui._viewer.Range": {
  "data": {
   "shadows": "traits.api.Range"
  },
  "type": "import"
 },
 "mne.gui._viewer.Spring": {
  "data": {
   "shadows": "traitsui.api.Spring"
  },
  "type": "import"
 },
 "mne.gui._viewer.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._viewer.Surface": {
  "data": {
   "shadows": "mayavi.modules.surface.Surface"
  },
  "type": "import"
 },
 "mne.gui._viewer.SurfaceObject": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "int",
    "mayavi.modules.surface.Surface",
    "mne.gui._viewer.Object",
    "traits.api.Array",
    "traits.api.Enum",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.SurfaceObject.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "mne.gui._viewer.SurfaceObject",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject._update_points": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "mne.gui._viewer.Object",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject._update_tris": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject.clear": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject.plot": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "_create_mesh_surf",
    "dict",
    "mayavi.mlab.pipeline.surface",
    "numpy.any",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.TextEditor": {
  "data": {
   "shadows": "traitsui.api.TextEditor"
  },
  "type": "import"
 },
 "mne.gui._viewer.VGrid": {
  "data": {
   "shadows": "traitsui.api.VGrid"
  },
  "type": "import"
 },
 "mne.gui._viewer.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._viewer.VTKDataSource": {
  "data": {
   "shadows": "mayavi.sources.vtk_data_source.VTKDataSource"
  },
  "type": "import"
 },
 "mne.gui._viewer.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._viewer._BUTTON_WIDTH": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.gui._viewer._COREG_WIDTH": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.gui._viewer._DEG_STEP_WIDTH": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.gui._viewer._DEG_WIDTH": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.gui._viewer._DIG_SOURCE_WIDTH": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mne.gui._viewer._INC_BUTTON_WIDTH": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mne.gui._viewer._MM_STEP_WIDTH": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.gui._viewer._MM_WIDTH": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.gui._viewer._MRI_FIDUCIALS_WIDTH": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mne.gui._viewer._REDUCED_TEXT_WIDTH": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mne.gui._viewer._RESET_LABEL": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "mne.gui._viewer._RESET_WIDTH": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mne.gui._viewer._SCALE_STEP_WIDTH": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.gui._viewer._SCALE_WIDTH": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.gui._viewer._SHOW_BORDER": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mne.gui._viewer._TEXT_WIDTH": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.gui._viewer._VIEW_BUTTON_WIDTH": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mne.gui._viewer._WEIGHT_WIDTH": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.gui._viewer._mm_fmt": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "mne.gui._viewer.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._viewer.headview_borders": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_deg": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_headscale": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_mm": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_scale": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.gui._viewer.laggy_float_editor_weight": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.gui._viewer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._viewer.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._viewer.pipeline": {
  "data": {
   "shadows": "mayavi.mlab.pipeline"
  },
  "type": "import"
 },
 "mne.gui._viewer.text3d": {
  "data": {
   "shadows": "mayavi.mlab.text3d"
  },
  "type": "import"
 },
 "mne.gui._viewer.tvtk": {
  "data": {
   "shadows": "tvtk.api.tvtk"
  },
  "type": "import"
 },
 "mne.gui.coregistration": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "CoregFrame",
    "_check_backend",
    "_check_mayavi_version",
    "_make_view",
    "float",
    "get_config",
    "int",
    "mne.gui._initialize_gui",
    "mne.gui.os"
   ]
  },
  "type": "function"
 },
 "mne.gui.fiducials": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "FiducialsFrame",
    "_check_backend",
    "_check_mayavi_version",
    "mne.gui._initialize_gui"
   ]
  },
  "type": "function"
 },
 "mne.gui.kit2fiff": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "Kit2FiffFrame",
    "_check_backend",
    "_check_mayavi_version",
    "mne.gui._initialize_gui"
   ]
  },
  "type": "function"
 },
 "mne.gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests": {
  "data": {},
  "type": "module"
 },
 "mne.gui.tests.test_coreg_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.gui.tests.test_coreg_gui.data_path",
    "mne.io.kit.tests.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_coreg_gui.CoregModel": {
  "data": {
   "shadows": "mne.gui._coreg_gui.CoregModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.DigSource": {
  "data": {
   "shadows": "mne.gui._file_traits.DigSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "shadows": "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.dig_mri_distances": {
  "data": {
   "shadows": "mne.surface.dig_mri_distances"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.fname_trans": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.kit_raw_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.mlab": {
  "data": {
   "shadows": "mayavi.mlab"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.raw_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.subjects_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_gui_automation": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui._file_traits.DigSource",
    "mne.gui.tests.test_coreg_gui.fname_trans",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.gui.tests.test_coreg_gui.subjects_dir",
    "mne.surface.dig_mri_distances",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_gui_display": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mayavi.mlab.process_ui_events",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.os",
    "mne.gui.tests.test_coreg_gui.pytest",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.utils.modified_env",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "os.path.join",
    "tvtk.api.tvtk.CylinderSource",
    "tvtk.api.tvtk.SphereSource"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui.tests.test_coreg_gui.fname_trans",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.os",
    "mne.gui.tests.test_coreg_gui.pytest",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.gui.tests.test_coreg_gui.re",
    "mne.gui.tests.test_coreg_gui.subjects_dir",
    "mne.transforms.invert_transform",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.mean",
    "numpy.rad2deg",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model_decimation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui.tests.test_coreg_gui.os",
    "mne.gui.tests.test_coreg_gui.pytest",
    "mne.gui.tests.test_coreg_gui.shutil",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model_with_fsaverage": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui.tests.test_coreg_gui.kit_raw_path",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.gui.tests.test_coreg_gui.subjects_dir",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.inf",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.tvtk": {
  "data": {
   "shadows": "tvtk.api.tvtk"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_fiducials_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "shadows": "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.test_mri_model": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui.tests.test_fiducials_gui.os",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.testing.assert_array_equal",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_fiducials_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.gui.tests.test_file_traits.data_path",
    "mne.gui.tests.test_file_traits.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_file_traits.DigSource": {
  "data": {
   "shadows": "mne.gui._file_traits.DigSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.FiducialsSource": {
  "data": {
   "shadows": "mne.gui._file_traits.FiducialsSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.MRISubjectSource": {
  "data": {
   "shadows": "mne.gui._file_traits.MRISubjectSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.SurfaceSource": {
  "data": {
   "shadows": "mne.gui._file_traits.SurfaceSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.bem_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.data_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.fid_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.inst_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.read_dig_fif": {
  "data": {
   "shadows": "mne.channels.read_dig_fif"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.subjects_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.test_bem_source": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.SurfaceSource",
    "mne.gui.tests.test_file_traits.bem_path",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_fiducials_source": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.FiducialsSource",
    "mne.gui.tests.test_file_traits.fid_path",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_inst_source": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mne.channels.read_dig_fif",
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.DigSource",
    "mne.gui.tests.test_file_traits.inst_path",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "os.path.dirname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_subject_source": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.MRISubjectSource",
    "mne.gui.tests.test_file_traits.subjects_dir",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_subject_source_with_fsaverage": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.MRISubjectSource",
    "mne.gui.tests.test_file_traits.data_path",
    "mne.gui.tests.test_file_traits.pytest",
    "mne.utils.modified_env",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "os.path.isdir",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.gui.tests.test_kit2fiff_gui.os",
    "mne.io.kit.tests.data_dir",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_kit2fiff_gui.GUI": {
  "data": {
   "shadows": "pyface.api.GUI"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.Kit2FiffModel": {
  "data": {
   "shadows": "mne.gui._kit2fiff_gui.Kit2FiffModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.fid_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.fif_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.hsp_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.mrk_post_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.sqd_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.test_kit2fiff_gui": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mne.gui.tests.test_kit2fiff_gui.mne",
    "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path",
    "mne.utils.modified_env",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "pyface.api.GUI",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.test_kit2fiff_model": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "events",
    "list",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui.tests.test_kit2fiff_gui.fid_path",
    "mne.gui.tests.test_kit2fiff_gui.fif_path",
    "mne.gui.tests.test_kit2fiff_gui.hsp_path",
    "mne.gui.tests.test_kit2fiff_gui.mne",
    "mne.gui.tests.test_kit2fiff_gui.mrk_post_path",
    "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path",
    "mne.gui.tests.test_kit2fiff_gui.os",
    "mne.gui.tests.test_kit2fiff_gui.sqd_path",
    "mne.io.read_raw_fif",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.all",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.gui.tests.test_marker_gui.os",
    "mne.io.kit.tests.data_dir",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_marker_gui.CombineMarkersModel": {
  "data": {
   "shadows": "mne.gui._marker_gui.CombineMarkersModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.CombineMarkersPanel": {
  "data": {
   "shadows": "mne.gui._marker_gui.CombineMarkersPanel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.mrk_avg_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.mrk_post_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.mrk_pre_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.read_mrk": {
  "data": {
   "shadows": "mne.io.kit.read_mrk"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.test_combine_markers_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mne.gui._marker_gui.CombineMarkersModel",
    "mne.gui.tests.test_marker_gui.mrk_avg_path",
    "mne.gui.tests.test_marker_gui.mrk_post_path",
    "mne.gui.tests.test_marker_gui.mrk_pre_path",
    "mne.gui.tests.test_marker_gui.os",
    "mne.io.kit.read_mrk",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test",
    "numpy.any",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_marker_gui.test_combine_markers_panel": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mne.gui._marker_gui.CombineMarkersPanel",
    "mne.utils.modified_env",
    "mne.utils.requires_mayavi",
    "mne.utils.traits_test"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_marker_gui.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.inverse_sparse": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse._gamma_map": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse._gamma_map._gamma_map_opt": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "denom_fun",
    "float",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float",
    "numpy.inf",
    "numpy.isnan",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.norm",
    "scipy.linalg.svd",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map._gamma_map_opt.denom_fun": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map.gamma_map": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Exception",
    "_check_ori",
    "_check_reference",
    "_compute_residual",
    "_make_dipoles_sparse",
    "_make_sparse_stc",
    "_prepare_gain",
    "_reapply_source_weighting",
    "is_fixed_orient",
    "len",
    "mne.inverse_sparse._gamma_map._gamma_map_opt",
    "numpy.dot",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse._gamma_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_debiasing.compute_bias": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "math.sqrt",
    "mne.inverse_sparse.mxne_debiasing.power_iteration_kron",
    "numpy.dot",
    "numpy.inf",
    "numpy.maximum",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.tile",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_debiasing.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing.power_iteration_kron": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "numpy.dot",
    "numpy.inf",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_debiasing.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_inverse._check_ori": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "is_fixed_orient"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._compute_residual": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "deactivate_proj",
    "len",
    "list",
    "numpy.dot",
    "pick_channels_evoked"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Dipole",
    "enumerate",
    "is_fixed_orient",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._make_sparse_stc": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "SourceEstimate",
    "VectorSourceEstimate",
    "VolSourceEstimate",
    "VolVectorSourceEstimate",
    "combine_xyz",
    "is_fixed_orient",
    "len",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_gain": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_check_depth",
    "_prepare_forward",
    "mne.inverse_sparse.mxne_inverse._prepare_weights"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_weights": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "is_fixed_orient",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.max",
    "numpy.ravel",
    "numpy.sum",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._reapply_source_weighting": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._window_evoked": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.hanning",
    "numpy.ones",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "Dipole",
    "SourceEstimate",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.where",
    "numpy.zeros",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.mixed_norm": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_check_reference",
    "all",
    "bool",
    "int",
    "is_fixed_orient",
    "isinstance",
    "iterative_mixed_norm_solver",
    "len",
    "list",
    "mixed_norm_solver",
    "mne.inverse_sparse.mxne_inverse._check_ori",
    "mne.inverse_sparse.mxne_inverse._compute_residual",
    "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse",
    "mne.inverse_sparse.mxne_inverse._make_sparse_stc",
    "mne.inverse_sparse.mxne_inverse._prepare_gain",
    "mne.inverse_sparse.mxne_inverse._reapply_source_weighting",
    "norm_l2inf",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.zeros",
    "range",
    "scipy.linalg.svd",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.tf_mixed_norm": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_Phi",
    "_check_reference",
    "float",
    "int",
    "is_fixed_orient",
    "iterative_tf_mixed_norm_solver",
    "len",
    "mne.inverse_sparse.mxne_inverse._check_ori",
    "mne.inverse_sparse.mxne_inverse._compute_residual",
    "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse",
    "mne.inverse_sparse.mxne_inverse._make_sparse_stc",
    "mne.inverse_sparse.mxne_inverse._prepare_gain",
    "mne.inverse_sparse.mxne_inverse._reapply_source_weighting",
    "mne.inverse_sparse.mxne_inverse._window_evoked",
    "norm_epsilon_inf",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.ceil",
    "numpy.dot",
    "numpy.zeros",
    "sum_squared",
    "tf_mixed_norm_solver"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_optim.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.MultiTaskLasso"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim._Phi": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.inverse_sparse.mxne_optim._Phi.__call__": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.sqrt",
    "range",
    "stft"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._Phi.__init__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._Phi.norm": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array_split",
    "numpy.atleast_2d",
    "numpy.cumsum",
    "ord",
    "range",
    "stft_norm",
    "stft_norm2"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._PhiT": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.inverse_sparse.mxne_optim._PhiT.__call__": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "istft",
    "numpy.array_split",
    "numpy.cumsum",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._PhiT.__init__": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._bcd": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dgemm",
    "enumerate",
    "math.sqrt",
    "max",
    "numpy.zeros_like",
    "slice",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_bcd": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "max",
    "mne.inverse_sparse.mxne_optim._bcd",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.bool",
    "numpy.dot",
    "numpy.float64",
    "numpy.inf",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_cd": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "len",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "numpy.any",
    "numpy.zeros",
    "sklearn.linear_model.MultiTaskLasso",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_prox": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "math.sqrt",
    "max",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "mne.inverse_sparse.mxne_optim.prox_l21",
    "numpy.bool",
    "numpy.dot",
    "numpy.inf",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "dict",
    "float",
    "mne.inverse_sparse.mxne_optim.dgap_l21l1",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.hsplit",
    "numpy.inf",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "phi",
    "phi.norm",
    "phiT",
    "range",
    "scipy.linalg.norm",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "dict.fromkeys",
    "len",
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_",
    "mne.inverse_sparse.mxne_optim.dgap_l21l1",
    "numpy.any",
    "numpy.arange",
    "numpy.bool",
    "numpy.complex",
    "numpy.inf",
    "numpy.ones",
    "numpy.sum",
    "numpy.vsplit",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "phi",
    "phi.n_coefs.sum",
    "phiT",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.dgap_l21": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "min",
    "mne.inverse_sparse.mxne_optim.norm_l21",
    "mne.inverse_sparse.mxne_optim.norm_l2inf",
    "numpy.dot",
    "numpy.sum",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.dgap_l21l1": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "max",
    "min",
    "mne.inverse_sparse.mxne_optim.norm_epsilon_inf",
    "mne.inverse_sparse.mxne_optim.norm_l1_tf",
    "mne.inverse_sparse.mxne_optim.norm_l21_tf",
    "numpy.dot",
    "numpy.sum",
    "phi",
    "phiT",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.groups_norm2": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "compute_bias",
    "g",
    "gprime",
    "list",
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.bool",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver.g": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver.gprime": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "g",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "ValueError",
    "compute_bias",
    "float",
    "g_space",
    "g_space_prime_inv",
    "g_time",
    "g_time_prime_inv",
    "int",
    "len",
    "list",
    "mne.inverse_sparse.mxne_optim._Phi",
    "mne.inverse_sparse.mxne_optim._PhiT",
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set",
    "numpy.abs",
    "numpy.amax",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.ceil",
    "numpy.complex",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "phi",
    "phi.n_coefs.sum",
    "phi.norm",
    "phiT",
    "print",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_space": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "numpy.sqrt",
    "phi.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_space_prime_inv": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "g_space"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_time": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver.g_time_prime_inv": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "g_time"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ImportError",
    "compute_bias",
    "float",
    "l21_solver",
    "list",
    "max",
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_bcd",
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_cd",
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_prox",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "mne.inverse_sparse.mxne_optim.norm_l2inf",
    "numpy.any",
    "numpy.arange",
    "numpy.argsort",
    "numpy.asfortranarray",
    "numpy.bool",
    "numpy.dot",
    "numpy.empty",
    "numpy.inf",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.norm",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_epsilon": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array_split",
    "numpy.cumsum",
    "numpy.full",
    "numpy.max",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.where",
    "phi.n_coefs",
    "phi.n_steps",
    "phi.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_epsilon_inf": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.norm_epsilon",
    "numpy.abs",
    "numpy.dot",
    "numpy.linalg.norm",
    "phi",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l1_tf": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum",
    "phi.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l21": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l21_tf": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "numpy.sqrt",
    "phi.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l2inf": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "math.sqrt",
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.prox_l1": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.maximum",
    "numpy.sqrt",
    "numpy.tile",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.prox_l21": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.tile",
    "numpy.zeros",
    "numpy.zeros_like",
    "stft_norm2"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.safe_max_abs": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.safe_max_abs_diff": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.tf_lipschitz_constant": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "numpy.dot",
    "numpy.float",
    "numpy.max",
    "numpy.ones",
    "numpy.real",
    "phi",
    "phiT",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "ValueError",
    "compute_bias",
    "float",
    "int",
    "len",
    "mne.inverse_sparse.mxne_optim._Phi",
    "mne.inverse_sparse.mxne_optim._PhiT",
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set",
    "numpy.any",
    "numpy.atleast_1d",
    "numpy.ceil",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.sum",
    "phi",
    "phiT",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_gamma_map": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.inverse_sparse.tests.test_gamma_map.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_gamma_map.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map._check_stc": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.linalg.norm",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_stcs_equal": {
  "data": {
   "shadows": "mne.utils.assert_stcs_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_cov": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_evoked": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_fwd": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.gamma_map": {
  "data": {
   "shadows": "mne.inverse_sparse.gamma_map"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.make_stc_from_dipoles": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.subjects_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.test_gamma_map": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "mne.convert_forward_solution",
    "mne.cov.regularize",
    "mne.datasets.testing.requires_testing_data",
    "mne.dipole.Dipole",
    "mne.inverse_sparse.gamma_map",
    "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles",
    "mne.inverse_sparse.tests.test_gamma_map._check_stc",
    "mne.inverse_sparse.tests.test_gamma_map.fname_cov",
    "mne.inverse_sparse.tests.test_gamma_map.fname_evoked",
    "mne.inverse_sparse.tests.test_gamma_map.fname_fwd",
    "mne.inverse_sparse.tests.test_gamma_map.pytest",
    "mne.pick_types_forward",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.utils.assert_stcs_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.test_gamma_map_vol_sphere": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "mne.cov.regularize",
    "mne.datasets.testing.requires_testing_data",
    "mne.inverse_sparse.gamma_map",
    "mne.inverse_sparse.tests.test_gamma_map.fname_cov",
    "mne.inverse_sparse.tests.test_gamma_map.fname_evoked",
    "mne.inverse_sparse.tests.test_gamma_map.mne",
    "mne.inverse_sparse.tests.test_gamma_map.pytest",
    "mne.read_cov",
    "mne.read_evokeds",
    "numpy.abs",
    "numpy.argmax",
    "numpy.dot",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.compute_bias": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_debiasing.compute_bias"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.test_compute_debiasing": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_debiasing.compute_bias",
    "numpy.arange",
    "numpy.dot",
    "numpy.float",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.inverse_sparse.tests.test_mxne_inverse.data_path",
    "mne.inverse_sparse.tests.test_mxne_inverse.label",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_stcs_equal": {
  "data": {
   "shadows": "mne.utils.assert_stcs_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.data_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_data": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_fwd": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_label": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.label": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.make_stc_from_dipoles": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.mixed_norm": {
  "data": {
   "shadows": "mne.inverse_sparse.mixed_norm"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_mxne_inverse_standard": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.dipole.Dipole",
    "mne.inverse_sparse.mixed_norm",
    "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_data",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_fwd",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_label",
    "mne.inverse_sparse.tests.test_mxne_inverse.label",
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest",
    "mne.inverse_sparse.tf_mixed_norm",
    "mne.label.read_label",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.utils.assert_stcs_equal",
    "numpy.abs",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_mxne_vol_sphere": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.inverse_sparse.mixed_norm",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_data",
    "mne.inverse_sparse.tests.test_mxne_inverse.mne",
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest",
    "mne.inverse_sparse.tf_mixed_norm",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.source_estimate.VolSourceEstimate",
    "numpy.abs",
    "numpy.argmax",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.tf_mixed_norm": {
  "data": {
   "shadows": "mne.inverse_sparse.tf_mixed_norm"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._Phi": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim._Phi"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._PhiT": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim._PhiT"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.std",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.dgap_l21l1": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.dgap_l21l1"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.iterative_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.iterative_tf_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.norm_epsilon": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.norm_epsilon"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.norm_epsilon_inf": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.norm_epsilon_inf"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.stft_norm2": {
  "data": {
   "shadows": "mne.time_frequency._stft.stft_norm2"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_dgapl21l1": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "mne.inverse_sparse.mxne_optim._Phi",
    "mne.inverse_sparse.mxne_optim._PhiT",
    "mne.inverse_sparse.mxne_optim.dgap_l21l1",
    "mne.inverse_sparse.mxne_optim.norm_epsilon_inf",
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data",
    "mne.inverse_sparse.tests.test_mxne_optim.pytest",
    "numpy.array",
    "numpy.ceil",
    "numpy.inf",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_iterative_reweighted_mxne": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver",
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim.pytest",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_iterative_reweighted_tfmxne": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.iterative_tf_mixed_norm_solver",
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_l21_mxne": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim.pytest",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_norm_epsilon": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "float",
    "int",
    "mne.inverse_sparse.mxne_optim._Phi",
    "mne.inverse_sparse.mxne_optim.norm_epsilon",
    "mne.time_frequency._stft.stft_norm2",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.ceil",
    "numpy.max",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_tf_mxne": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data",
    "mne.inverse_sparse.tests.test_mxne_optim.pytest",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_tf_mxne_vs_mxne": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.tf_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.io": {
  "data": {},
  "type": "module"
 },
 "mne.io.RawFIF": {
  "data": {
   "shadows": "Raw"
  },
  "type": "import"
 },
 "mne.io._digitization": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "mne.io._digitization._dig_kind_dict",
    "sorted",
    "tuple"
   ]
  },
  "type": "module"
 },
 "mne.io._digitization.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.io._digitization.DigPoint": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.io._digitization.DigPoint.__deepcopy__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mne.io._digitization.DigPoint"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization.DigPoint.__eq__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "any",
    "numpy.allclose",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization.DigPoint.__repr__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_coord_frame_name",
    "mne.io._digitization._cardinal_kind_rev",
    "mne.io._digitization._dig_kind_proper",
    "mne.io._digitization._dig_kind_rev",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.io._digitization._artemis123_read_pos": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "mne.io._digitization._call_make_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._call_make_dig_points": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "Transform",
    "apply_trans",
    "get_ras_to_neuromag_trans",
    "mne.io._digitization._make_dig_points",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._cardinal_ident_mapping": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "mne.io._digitization._cardinal_kind_rev": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io._digitization._coord_frame_const": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._count_points_by_type": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "collections.Counter",
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._dig_kind_dict": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_ints": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_proper": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io._digitization._dig_kind_rev": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io._digitization._foo_get_data_from_dig": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Bunch",
    "dict",
    "len",
    "list",
    "mne.io._digitization._cardinal_ident_mapping",
    "numpy.array",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._format_dig_points": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mne.io._digitization.DigPoint"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._get_dig_eeg": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.io._digitization._get_fid_coords": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Bunch",
    "ValueError",
    "dict",
    "len",
    "mne.io._digitization._cardinal_ident_mapping",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._make_bti_dig_points": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "Transform",
    "combine_transforms",
    "invert_transform",
    "mne.io._digitization._call_make_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._make_dig_points": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "mne.io._digitization._coord_frame_const",
    "mne.io._digitization._format_dig_points",
    "numpy.arange",
    "numpy.asarray",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._read_dig_fif": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dir_tree_find",
    "len",
    "mne.io._digitization._format_dig_points",
    "range",
    "read_tag",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._read_dig_points": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "float",
    "mne.io._digitization.re",
    "numpy.array",
    "numpy.loadtxt",
    "open",
    "os.path.splitext",
    "scipy.io.loadmat",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._set_dig_kit": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_decimate_points",
    "apply_trans",
    "fit_matched_points",
    "get_ras_to_neuromag_trans",
    "isinstance",
    "len",
    "mne.io._digitization._make_dig_points",
    "mne.io._digitization._read_dig_points",
    "read_mrk",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization._write_dig_points": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.io._digitization.datetime",
    "numpy.asarray",
    "numpy.savetxt",
    "open",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io._digitization.b": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io._digitization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io._digitization.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.io._digitization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io._digitization.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io._digitization.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io._digitization.write_dig": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "_to_const",
    "end_file",
    "len",
    "start_file",
    "str",
    "tuple",
    "write_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.io.array": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.array": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.array.RawArray": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "mne.io.array.array.RawArray.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "_validate_type",
    "float",
    "int",
    "len",
    "mne.io.array.array.RawArray",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.complex128",
    "numpy.float64",
    "numpy.iscomplex",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.array.array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.array.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "mne.io.array.tests.test_array.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.array.tests.test_array.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.RawArray": {
  "data": {
   "shadows": "mne.io.array.RawArray"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array._kind_dict": {
  "data": {
   "shadows": "mne.io.meas_info._kind_dict"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.array.tests.test_array.create_info": {
  "data": {
   "shadows": "mne.io.meas_info.create_info"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.fif_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.array.tests.test_array.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.test_array_copy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.array.RawArray",
    "mne.io.array.tests.test_array.pytest",
    "mne.io.meas_info.create_info",
    "numpy.empty",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.array.tests.test_array.test_array_raw": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "mne.Epochs",
    "mne.channels.make_dig_montage",
    "mne.find_events",
    "mne.io.array.RawArray",
    "mne.io.array.tests.test_array.fif_fname",
    "mne.io.array.tests.test_array.pytest",
    "mne.io.meas_info._kind_dict",
    "mne.io.meas_info.create_info",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "repr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.array.tests.test_array.test_long_names": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mne.io.array.RawArray",
    "mne.io.meas_info.create_info",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.artemis123": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.artemis123.RawArtemis123": {
  "data": {
   "lineno": 290
  },
  "type": "class"
 },
 "mne.io.artemis123.artemis123.RawArtemis123.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "DigPoint",
    "RuntimeError",
    "Transform",
    "_fit_coil_order_dev_head_trans",
    "_make_dig_points",
    "apply_trans",
    "compute_chpi_amplitudes",
    "compute_chpi_locs",
    "dict",
    "enumerate",
    "get_ras_to_neuromag_trans",
    "len",
    "mne.io.artemis123.artemis123.RawArtemis123",
    "mne.io.artemis123.artemis123._get_artemis123_info",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.delete",
    "numpy.float32",
    "numpy.zeros",
    "os.path.exists",
    "os.path.splitext",
    "range",
    "scipy.spatial.distance.cdist",
    "super",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123.RawArtemis123._read_segment_file": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123._get_artemis123_info": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "_empty_info",
    "_load_mne_locs",
    "_read_pos",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "mne.io.artemis123.artemis123.calendar",
    "mne.io.artemis123.artemis123.datetime",
    "numpy.zeros",
    "open",
    "os.path.basename",
    "os.path.splitext",
    "range",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.read_raw_artemis123": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mne.io.artemis123.artemis123.RawArtemis123"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.tests.test_artemis123": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.artemis123.tests.test_artemis123.artemis123_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.artemis123.tests.test_artemis123.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._assert_trans": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.transforms._angle_between_quats",
    "mne.transforms.rot_to_quat",
    "numpy.linalg.norm",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123._generate_mne_locs_file": {
  "data": {
   "shadows": "mne.io.artemis123.utils._generate_mne_locs_file"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._load_mne_locs": {
  "data": {
   "shadows": "mne.io.artemis123.utils._load_mne_locs"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.artemis123_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.dig_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.read_raw_artemis123": {
  "data": {
   "shadows": "mne.io.read_raw_artemis123"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.short_HPI_dip_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.short_hpi_1kz_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.test_data": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.artemis123.tests.test_artemis123._assert_trans",
    "mne.io.artemis123.tests.test_artemis123.dig_fname",
    "mne.io.artemis123.tests.test_artemis123.pytest",
    "mne.io.artemis123.tests.test_artemis123.short_HPI_dip_fname",
    "mne.io.artemis123.tests.test_artemis123.short_hpi_1kz_fname",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.read_raw_artemis123",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123.test_utils": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mne.io.artemis123.utils._generate_mne_locs_file",
    "mne.io.artemis123.utils._load_mne_locs",
    "mne.utils._TempDir",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.artemis123.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.utils._compute_mne_loc": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros",
    "rotation3d_align_z_axis"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._generate_mne_locs_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mne.io.artemis123.utils._compute_mne_loc",
    "mne.io.artemis123.utils._load_tristan_coil_locs",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._load_mne_locs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "numpy.array",
    "numpy.float",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._load_tristan_coil_locs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.float",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._read_pos": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_artemis123_read_pos",
    "float",
    "len",
    "list",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.brainvision": {
  "data": {},
  "type": "module"
 },
 "mne.io.brainvision.brainvision": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.brainvision.brainvision.RawBrainVision": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "mne.io.brainvision.brainvision.RawBrainVision.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "int",
    "isinstance",
    "len",
    "mne.io.brainvision.brainvision.RawBrainVision",
    "mne.io.brainvision.brainvision._get_vhdr_info",
    "mne.io.brainvision.brainvision.os",
    "numpy.cumsum",
    "open",
    "os.path.abspath",
    "range",
    "read_annotations",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.RawBrainVision._read_segment_file": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "_mult_cal_one",
    "_read_segments_file",
    "float",
    "isinstance",
    "len",
    "mne.io.brainvision.brainvision._read_segments_c",
    "numpy.empty",
    "open",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision._BVEventParser": {
  "data": {
   "lineno": 818
  },
  "type": "class"
 },
 "mne.io.brainvision.brainvision._BVEventParser.__call__": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "int",
    "mne.io.brainvision.brainvision._BVEventParser",
    "mne.io.brainvision.brainvision._BV_EVENT_IO_OFFSETS",
    "mne.io.brainvision.brainvision._OTHER_ACCEPTED_MARKERS",
    "mne.io.brainvision.brainvision._OTHER_OFFSET",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._BV_EVENT_IO_OFFSETS": {
  "data": {
   "lineno": 810
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._OTHER_ACCEPTED_MARKERS": {
  "data": {
   "lineno": 812
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._OTHER_OFFSET": {
  "data": {
   "lineno": 815
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._aux_vhdr_info": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "_empty_info",
    "io.StringIO",
    "mne.io.brainvision.brainvision._check_bv_version",
    "mne.io.brainvision.brainvision.configparser",
    "mne.io.brainvision.brainvision.re",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._check_bv_annot": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "len",
    "mne.io.brainvision.brainvision._BV_EVENT_IO_OFFSETS",
    "mne.io.brainvision.brainvision._OTHER_ACCEPTED_MARKERS",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._check_bv_version": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.brainvision.brainvision._data_err",
    "mne.io.brainvision.brainvision._data_re",
    "mne.io.brainvision.brainvision.re",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._data_err": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._data_re": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._fmt_byte_dict": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._fmt_dict": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._fmt_dtype_dict": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._get_vhdr_info": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "RuntimeError",
    "ZeroDivisionError",
    "_sph_to_cart",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "make_dig_montage",
    "mne.io.brainvision.brainvision._aux_vhdr_info",
    "mne.io.brainvision.brainvision._fmt_byte_dict",
    "mne.io.brainvision.brainvision._fmt_dict",
    "mne.io.brainvision.brainvision._orientation_dict",
    "mne.io.brainvision.brainvision._str_to_meas_date",
    "mne.io.brainvision.brainvision._unit_dict",
    "mne.io.brainvision.brainvision.configparser",
    "mne.io.brainvision.brainvision.re",
    "numpy.Inf",
    "numpy.array",
    "numpy.deg2rad",
    "numpy.empty",
    "numpy.float",
    "numpy.full",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.pi",
    "open",
    "os.path.dirname",
    "os.path.join",
    "os.path.splitext",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._orientation_dict": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._read_annotations_brainvision": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "Annotations",
    "float",
    "mne.io.brainvision.brainvision._aux_vhdr_info",
    "mne.io.brainvision.brainvision._read_vmrk",
    "mne.io.brainvision.brainvision._str_to_meas_date",
    "numpy.array",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._read_segments_c": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "_mult_cal_one",
    "len",
    "numpy.arange",
    "numpy.fromfile",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._read_vmrk": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "int",
    "len",
    "list",
    "mne.io.brainvision.brainvision._check_bv_version",
    "mne.io.brainvision.brainvision.re",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._str_to_meas_date": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "datetime.timezone.utc",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._unit_dict": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.read_raw_brainvision": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "mne.io.brainvision.brainvision.RawBrainVision"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.brainvision.tests.test_brainvision": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.brainvision.tests.test_brainvision.data_dir",
    "mne.io.brainvision.tests.test_brainvision.data_path",
    "mne.utils.run_tests_if_main",
    "numpy.array",
    "numpy.dtype",
    "object",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.brainvision.tests.test_brainvision.DATE_TEST_CASES": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision._mocked_meas_date_data": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.eeg_path",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.shutil",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "open",
    "os.path.basename",
    "os.path.join",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.data_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.data_path": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eeg_bin": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eeg_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eog": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.mocked_meas_date_file": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.DATE_TEST_CASES",
    "mne.io.brainvision.tests.test_brainvision._mocked_meas_date_data",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.utils._stamp_to_dt",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.montage": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.neuroone_vhdr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_annotations": {
  "data": {
   "shadows": "mne.read_annotations"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_raw_brainvision": {
  "data": {
   "shadows": "mne.io.read_raw_brainvision"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.test_ascii": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.shutil",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.read_raw_brainvision",
    "numpy.testing.assert_allclose",
    "open",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_automatic_vmrk_sfreq_recovery": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.read_annotations",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "ValueError",
    "mne.io.brainvision.tests.test_brainvision.eeg_bin",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_units_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_EOG_CH",
    "mne.io.constants.FIFF.FIFFV_MISC_CH",
    "mne.io.constants.FIFF.FIFFV_STIM_CH",
    "mne.io.constants.FIFF.FIFF_UNIT_CEL",
    "mne.io.constants.FIFF.FIFF_UNIT_NONE",
    "mne.io.constants.FIFF.FIFF_UNIT_V",
    "mne.io.read_raw_brainvision",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_highpass_filters": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "RuntimeWarning",
    "all",
    "any",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_hz_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_hz_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_path",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.pi",
    "numpy.testing.assert_equal",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_lowpass_filters": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "RuntimeWarning",
    "all",
    "any",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_s_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_s_path",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.pi",
    "numpy.testing.assert_equal",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_partially_disabled_hw_filters": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "RuntimeWarning",
    "all",
    "any",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_partially_disabled_hw_filter_path",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.testing.assert_equal",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_software_filters_latin1_global_units": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_old_path",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.pi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_neuroone_export": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.brainvision.tests.test_brainvision.neuroone_vhdr",
    "mne.io.read_raw_brainvision"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_vectorized_data": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_old_path",
    "mne.io.read_raw_brainvision",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_coodinates_extraction": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path",
    "mne.io.read_raw_brainvision",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_event_id_stability_when_save_and_fif_reload": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "events",
    "mne.annotations.events_from_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.read_raw_brainvision",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_meas_date": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.mocked_meas_date_file",
    "mne.io.read_raw_brainvision",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_orig_units": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.read_raw_brainvision"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_read_vhdr_annotations_and_events": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "RuntimeWarning",
    "enumerate",
    "events",
    "mne.annotations.events_from_annotations",
    "mne.concatenate_raws",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.read_raw_brainvision",
    "mne.utils._stamp_to_dt",
    "numpy.array",
    "numpy.stack",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_read_vmrk_annotations": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.read_annotations",
    "next",
    "open",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_vhdr_codepage_ansi": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.eeg_path",
    "mne.io.brainvision.tests.test_brainvision.shutil",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.io.read_raw_brainvision",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "open",
    "os.path.join",
    "os.path.split",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_vhdr_versions": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.brainvision.tests.test_brainvision.eeg_path",
    "mne.io.brainvision.tests.test_brainvision.pytest",
    "mne.io.brainvision.tests.test_brainvision.shutil",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.io.read_raw_brainvision",
    "numpy.testing.assert_allclose",
    "open",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_bad_date": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_hz_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_path": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_s_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_hz_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_s_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_old_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_partially_disabled_hw_filter_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_units_path": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.bti": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.bti": {
  "data": {
   "symbols_in_volume": [
    "list",
    "mne.io.bti.bti.dtypes",
    "numpy.array",
    "numpy.dtype",
    "range",
    "zip"
   ]
  },
  "type": "module"
 },
 "mne.io.bti.bti.BTI_WH2500_REF_GRAD": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.bti.bti.BTI_WH2500_REF_MAG": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.bti.bti.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.bti.bti.DTYPES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_CHS_DEFAULTS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_CHS_FIELDS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_DIG_DEFAULTS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_DIG_FIELDS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.bti.bti.RawBTi": {
  "data": {
   "lineno": 901
  },
  "type": "class"
 },
 "mne.io.bti.bti.RawBTi.__init__": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "io.BytesIO",
    "isinstance",
    "mne.io.bti.bti.RawBTi",
    "mne.io.bti.bti._get_bti_info",
    "repr",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti.RawBTi._read_segment_file": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "_mult_cal_one",
    "enumerate",
    "int",
    "io.BytesIO",
    "isinstance",
    "itertools.count",
    "min",
    "mne.io.bti.bti._bti_open",
    "numpy.arange",
    "numpy.dtype",
    "numpy.empty",
    "numpy.frombuffer",
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._bti_open": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeError",
    "io.BytesIO",
    "isinstance",
    "mne.io.bti.bti._bytes_io_mock_context",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__enter__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__exit__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mne.io.bti.bti._check_nan_dev_head_t": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.identity",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._convert_coil_trans": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "combine_transforms",
    "invert_transform",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._correct_offset": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "mne.io.bti.bti._correct_trans": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_dev_t": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.dot",
    "numpy.eye",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_info": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_coil_trans_to_loc",
    "_empty_info",
    "_loc_to_coil_trans",
    "_stamp_to_dt",
    "any",
    "dict",
    "enumerate",
    "io.BytesIO",
    "isinstance",
    "list",
    "mne.io.bti.bti.FIFF_INFO_CHS_DEFAULTS",
    "mne.io.bti.bti.FIFF_INFO_CHS_FIELDS",
    "mne.io.bti.bti._check_nan_dev_head_t",
    "mne.io.bti.bti._convert_coil_trans",
    "mne.io.bti.bti._correct_trans",
    "mne.io.bti.bti._get_bti_dev_t",
    "mne.io.bti.bti._make_bti_digitization",
    "mne.io.bti.bti._read_bti_header",
    "mne.io.bti.bti._rename_channels",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.isfile",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._make_bti_digitization": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "Transform",
    "_make_bti_dig_points",
    "mne.io.bti.bti._read_head_shape"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_assoc_file": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "read_int16",
    "read_int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_bti_header": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "RuntimeError",
    "_coil_trans_to_loc",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "mne.io.bti.bti._read_bti_header_pdf",
    "mne.io.bti.bti._read_config",
    "numpy.arange",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_bti_header_pdf": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "mne.io.bti.bti.DTYPES",
    "mne.io.bti.bti._bti_open",
    "mne.io.bti.bti._correct_offset",
    "mne.io.bti.bti._read_assoc_file",
    "mne.io.bti.bti._read_channel",
    "mne.io.bti.bti._read_epoch",
    "mne.io.bti.bti._read_event",
    "mne.io.bti.bti._read_pfid_ed",
    "mne.io.bti.bti._read_process",
    "range",
    "read_float",
    "read_int16",
    "read_int32",
    "read_int64",
    "read_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_ch_config": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "dict",
    "mne.io.bti.bti._correct_offset",
    "mne.io.bti.bti._read_coil_def",
    "range",
    "read_char",
    "read_double",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str",
    "read_transform",
    "read_uint16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_channel": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "read_double",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_coil_def": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "read_double",
    "read_double_matrix",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_config": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any",
    "dict",
    "len",
    "list",
    "mne.io.bti.bti.BTI_WH2500_REF_GRAD",
    "mne.io.bti.bti.BTI_WH2500_REF_MAG",
    "mne.io.bti.bti._bti_open",
    "mne.io.bti.bti._correct_offset",
    "mne.io.bti.bti._correct_trans",
    "numpy.zeros",
    "range",
    "read_char",
    "read_dev_header",
    "read_double",
    "read_double_matrix",
    "read_float",
    "read_float_matrix",
    "read_int16",
    "read_int16_matrix",
    "read_int32",
    "read_str",
    "read_transform",
    "read_uint16",
    "read_uint32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_epoch": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "read_float",
    "read_int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_event": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "mne.io.bti.bti._correct_offset",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_head_shape": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "mne.io.bti.bti._bti_open",
    "read_double_matrix",
    "read_int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_pfid_ed": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_process": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "list",
    "mne.io.bti.bti._correct_offset",
    "range",
    "read_double",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._rename_channels": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "itertools.count",
    "list",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "mne.io.bti.bti.dtypes": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.bti.bti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.bti.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.bti.bti.read_raw_bti": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "mne.io.bti.bti.RawBTi"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.constants": {
  "data": {
   "symbols_in_volume": [
    "BunchConst",
    "mne.io.bti.constants.BTI"
   ]
  },
  "type": "module"
 },
 "mne.io.bti.constants.BTI": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.io.bti.read": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.read._unpack_matrix": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read._unpack_simple": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.read.read_bool": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_char": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_dev_header": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "mne.io.bti.read.read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_double": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_double_matrix": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_matrix",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_float": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_float_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_matrix",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int16": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int16_matrix": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_matrix",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int32": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int64": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int8": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mne.io.bti.read.read_double_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint16": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint32": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint64": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint8": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.tests.test_bti": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.bti.tests.test_bti.archs",
    "mne.io.bti.tests.test_bti.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.bti.tests.test_bti.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.NCH": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._check_nan_dev_head_t": {
  "data": {
   "shadows": "mne.io.bti.bti._check_nan_dev_head_t"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._convert_coil_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._convert_coil_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._correct_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._correct_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._get_bti_dev_t": {
  "data": {
   "shadows": "mne.io.bti.bti._get_bti_dev_t"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._get_bti_info": {
  "data": {
   "shadows": "mne.io.bti.bti._get_bti_info"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._make_bti_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._make_bti_dig_points"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_bti_header": {
  "data": {
   "shadows": "mne.io.bti.bti._read_bti_header"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_config": {
  "data": {
   "shadows": "mne.io.bti.bti._read_config"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_head_shape": {
  "data": {
   "shadows": "mne.io.bti.bti._read_head_shape"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._rename_channels": {
  "data": {
   "shadows": "mne.io.bti.bti._rename_channels"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.archs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_dig_allclose": {
  "data": {
   "shadows": "mne.utils.assert_dig_allclose"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.base_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.combine_transforms": {
  "data": {
   "shadows": "mne.transforms.combine_transforms"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.config_fnames": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.exported_fnames": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_2500": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_sim": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_sim_filt": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.hs_fnames": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pdf_fnames": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.test_bti_ch_data": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.bti.tests.test_bti.fname_sim",
    "mne.io.bti.tests.test_bti.fname_sim_filt",
    "mne.io.bti.tests.test_bti.pytest",
    "mne.io.read_raw_bti"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_bytes_io": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "io.BytesIO",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.read_raw_bti",
    "numpy.testing.assert_array_equal",
    "open",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_crop_append": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.read_raw_bti",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_info_no_rename_no_reorder_no_pdf": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "mne.io.bti.bti._get_bti_info",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_bti",
    "mne.pick_types",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_nan_trans": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "mne.io.bti.bti._check_nan_dev_head_t",
    "mne.io.bti.bti._convert_coil_trans",
    "mne.io.bti.bti._correct_trans",
    "mne.io.bti.bti._get_bti_dev_t",
    "mne.io.bti.bti._loc_to_coil_trans",
    "mne.io.bti.bti._read_bti_header",
    "mne.io.bti.bti._rename_channels",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.transforms.Transform",
    "numpy.nan",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_no_conversion": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "get_info",
    "mne.io._digitization._make_bti_dig_points",
    "mne.io.bti.bti._correct_trans",
    "mne.io.bti.bti._get_bti_info",
    "mne.io.bti.bti._read_bti_header",
    "mne.io.bti.bti._read_head_shape",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.constants.FIFF.FIFFV_MNE_COORD_4D_HEAD",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_bti",
    "mne.pick_types",
    "numpy.allclose",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_raw": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "mne.io.bti.tests.test_bti.NCH",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.exported_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.os",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.bti.tests.test_bti.pytest",
    "mne.io.bti.tests.test_bti.tmp_raw_fname",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_fif",
    "mne.utils.assert_dig_allclose",
    "numpy.allclose",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.exists",
    "print",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_read_2500": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.bti.tests.test_bti.fname_2500",
    "mne.io.read_raw_bti",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_read_config": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "all",
    "mne.io.bti.bti._read_config",
    "mne.io.bti.tests.test_bti.config_fnames"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_setup_headshape": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "functools.reduce",
    "list",
    "mne.io._digitization._make_bti_dig_points",
    "mne.io.bti.bti._read_head_shape",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_transforms": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mne.io.bti.bti._get_bti_dev_t",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.read_raw_bti",
    "mne.transforms.Transform",
    "mne.transforms.combine_transforms",
    "mne.transforms.invert_transform",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.tmp_raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.cnt": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt._utils": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "mne.io.cnt._utils.CNTEventType1": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.cnt._utils.CNTEventType2": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.cnt._utils.CNTEventType3": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.io.cnt._utils.SEEK_END": {
  "data": {
   "shadows": "os.SEEK_END"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.Struct": {
  "data": {
   "shadows": "struct.Struct"
  },
  "type": "import"
 },
 "mne.io.cnt._utils._compute_robust_event_table_position": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "numpy.frombuffer",
    "os.SEEK_END",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt._utils._get_event_parser": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.cnt._utils.CNTEventType1",
    "mne.io.cnt._utils.CNTEventType2",
    "mne.io.cnt._utils.CNTEventType3"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt._utils._get_event_parser.parser": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "event_maker",
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt._utils._read_teeg": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Teeg",
    "collections.namedtuple",
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt._utils._session_date_2_meas_date": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "math.modf",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt._utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.modf": {
  "data": {
   "shadows": "math.modf"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.io.cnt._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.cnt.RawCNT": {
  "data": {
   "lineno": 321
  },
  "type": "class"
 },
 "mne.io.cnt.cnt.RawCNT.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "_check_option",
    "mne.io.cnt.cnt.RawCNT",
    "mne.io.cnt.cnt._get_cnt_info",
    "mne.io.cnt.cnt._read_annotations_cnt",
    "os.path.abspath",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt.RawCNT._read_segment_file": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_mult_cal_one",
    "enumerate",
    "int",
    "min",
    "numpy.arange",
    "numpy.empty",
    "numpy.fromfile",
    "numpy.zeros",
    "open",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._get_cnt_info": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_check_option",
    "_compute_robust_event_table_position",
    "_create_chs",
    "_empty_info",
    "_find_channels",
    "_session_date_2_meas_date",
    "_topo_to_sphere",
    "dict",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.fromfile",
    "numpy.full",
    "numpy.nan",
    "open",
    "range",
    "read_str",
    "str",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._read_annotations_cnt": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Annotations",
    "_compute_robust_event_table_position",
    "_get_event_parser",
    "_read_teeg",
    "_translating_function",
    "event_parser",
    "float",
    "getattr",
    "list",
    "numpy.array",
    "numpy.frombuffer",
    "open",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._read_annotations_cnt._translating_function": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mne.io.cnt.cnt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.read_raw_cnt": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mne.io.cnt.cnt.RawCNT"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.tests.test_cnt": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.cnt.tests.test_cnt.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.cnt.tests.test_cnt._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.data_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.cnt.tests.test_cnt.fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.cnt.tests.test_cnt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.read_raw_cnt": {
  "data": {
   "shadows": "mne.io.cnt.read_raw_cnt"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.test_compare_events_and_annotations": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "len",
    "mne.annotations.read_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.cnt.read_raw_cnt",
    "mne.io.cnt.tests.test_cnt.fname",
    "mne.io.cnt.tests.test_cnt.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.tests.test_cnt.test_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.cnt.read_raw_cnt",
    "mne.io.cnt.tests.test_cnt.fname",
    "mne.io.cnt.tests.test_cnt.pytest",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.tests.test_cnt.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.compensator": {
  "data": {},
  "type": "module"
 },
 "mne.io.compensator._make_compensator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.compensator.get_current_comp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.compensator.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.compensator.make_compensator": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.io.compensator._make_compensator",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.io.compensator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.compensator.set_current_comp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "mne.io.compensator.get_current_comp"
   ]
  },
  "type": "function"
 },
 "mne.io.constants": {
  "data": {
   "symbols_in_volume": [
    "BunchConstNamed",
    "mne.io.constants.FIFF",
    "mne.io.constants.FWD"
   ]
  },
  "type": "module"
 },
 "mne.io.constants.FIFF": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.io.constants.FWD": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "mne.io.ctf": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.constants": {
  "data": {
   "symbols_in_volume": [
    "BunchConst",
    "mne.io.ctf.constants.CTF"
   ]
  },
  "type": "module"
 },
 "mne.io.ctf.constants.CTF": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.io.ctf.ctf": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.ctf.RawCTF": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "mne.io.ctf.ctf.RawCTF.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_annotate_bad_segments",
    "_check_option",
    "_compose_meas_info",
    "_format_dig_points",
    "_make_ctf_coord_trans_set",
    "_make_ctf_name",
    "_read_annotations_ctf_call",
    "_read_bad_chans",
    "_read_eeg",
    "_read_hc",
    "_read_pos",
    "_read_res4",
    "float",
    "isinstance",
    "len",
    "list",
    "mne.io.ctf.ctf.RawCTF",
    "mne.io.ctf.ctf._get_sample_info",
    "os.path.isdir",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.RawCTF._clean_names": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "_clean_names",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.RawCTF._read_segment_file": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "_blk_read_lims",
    "_mult_cal_one",
    "int",
    "len",
    "min",
    "numpy.fromfile",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf._get_sample_info": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "enumerate",
    "len",
    "mne.io.ctf.ctf.os",
    "numpy.fromfile",
    "numpy.where",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.read_raw_ctf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mne.io.ctf.ctf.RawCTF"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.eeg": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.ctf.eeg._cardinal_dict": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.ctf.eeg._read_eeg": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "_make_ctf_name",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "mne.io.ctf.eeg._cardinal_dict",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.eeg._read_pos": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "apply_trans",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "numpy.array",
    "open",
    "os.listdir",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.eeg.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mne.io.ctf.eeg.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "mne.io.ctf.eeg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.hc": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.hc._coord_dict": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.ctf.hc._kind_dict": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.ctf.hc._read_hc": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_make_ctf_name",
    "len",
    "list",
    "mne.io.ctf.hc._read_one_coil_point",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.hc._read_one_coil_point": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "enumerate",
    "float",
    "len",
    "mne.io.ctf.hc._coord_dict",
    "mne.io.ctf.hc._kind_dict",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.hc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.info": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.info._add_eeg_pos": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "RuntimeError",
    "_coord_frame_name",
    "apply_trans",
    "dict",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._annotate_bad_segments": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "Annotations",
    "len",
    "numpy.float",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._at_origin": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._check_comp": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._check_comp_ch": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._comp_sort_keys": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._compose_meas_info": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "_empty_info",
    "combine_transforms",
    "dict",
    "get_new_file_id",
    "invert_transform",
    "len",
    "mne.io.ctf.info._add_eeg_pos",
    "mne.io.ctf.info._convert_channel_info",
    "mne.io.ctf.info._convert_comp_data",
    "mne.io.ctf.info._convert_time",
    "mne.io.ctf.info._filt_map",
    "mne.io.ctf.info._pick_eeg_pos",
    "mne.io.ctf.info._pick_isotrak_and_hpi_coils"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._conv_comp": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_add_kind",
    "_calibrate_comp",
    "dict",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.in1d",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_channel_info": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "apply_trans",
    "dict",
    "enumerate",
    "float",
    "list",
    "mne.io.ctf.info._at_origin",
    "mne.io.ctf.info._check_comp_ch",
    "mne.io.ctf.info._get_plane_vectors",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.cross",
    "numpy.dot",
    "numpy.full",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.sum",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_comp_data": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.io.ctf.info._check_comp",
    "mne.io.ctf.info._comp_sort_keys",
    "mne.io.ctf.info._conv_comp",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_time": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "calendar.timegm",
    "time.strptime"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._ctf_to_fiff": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.ctf.info._filt_map": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "mne.io.ctf.info._get_plane_vectors": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.abs",
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._pick_eeg_pos": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "dict",
    "list",
    "mne.io.ctf.info._at_origin"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._pick_isotrak_and_hpi_coils": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "apply_trans",
    "dict",
    "list",
    "mne.io.ctf.info._ctf_to_fiff"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._read_bad_chans": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "_clean_names",
    "dict",
    "open",
    "os.path.exists",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.info.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.info.strptime": {
  "data": {
   "shadows": "time.strptime"
  },
  "type": "import"
 },
 "mne.io.ctf.info.timegm": {
  "data": {
   "shadows": "calendar.timegm"
  },
  "type": "import"
 },
 "mne.io.ctf.markers": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.markers.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.ctf.markers._get_markers": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "consume",
    "dict",
    "int",
    "next",
    "open",
    "parse_marker",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.markers._get_markers.consume": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "predicate"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.markers._get_markers.parse_marker": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "int",
    "io.BytesIO",
    "numpy.genfromtxt"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.markers._get_res4_info_needed_by_markers": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_convert_time",
    "_read_res4"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.markers._read_annotations_ctf": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mne.io.ctf.markers._get_res4_info_needed_by_markers",
    "mne.io.ctf.markers._read_annotations_ctf_call"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.markers._read_annotations_ctf_call": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Annotations",
    "len",
    "list",
    "mne.io.ctf.markers._get_markers",
    "numpy.concatenate",
    "numpy.repeat",
    "numpy.zeros_like",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.markers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.markers.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.res4": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.res4._make_ctf_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "IOError",
    "os.path.basename",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._move_to_next": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_comp_coeff": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "list",
    "mne.io.ctf.res4._read_int2",
    "numpy.dtype",
    "numpy.fromfile",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_double": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_filter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict",
    "mne.io.ctf.res4._read_double",
    "mne.io.ctf.res4._read_int",
    "mne.io.ctf.res4._read_int2"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_int": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_int2": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_res4": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "mne.io.ctf.res4._make_ctf_name",
    "mne.io.ctf.res4._move_to_next",
    "mne.io.ctf.res4._read_comp_coeff",
    "mne.io.ctf.res4._read_double",
    "mne.io.ctf.res4._read_filter",
    "mne.io.ctf.res4._read_int",
    "mne.io.ctf.res4._read_int2",
    "mne.io.ctf.res4._read_string",
    "mne.io.ctf.res4._read_ustring",
    "numpy.dtype",
    "numpy.fromfile",
    "open",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_string": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_ustring": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.res4.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.tests.test_ctf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_raw.data_path",
    "mne.datasets.testing.data_path",
    "mne.io.ctf.tests.test_ctf.block_sizes",
    "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial",
    "mne.io.ctf.tests.test_ctf.ctf_fname_2_trials",
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch",
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous",
    "mne.io.ctf.tests.test_ctf.ctf_fname_discont",
    "mne.io.ctf.tests.test_ctf.ctf_fname_somato",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "sorted",
    "tuple"
   ]
  },
  "type": "module"
 },
 "mne.io.ctf.tests.test_ctf.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._assert_annotations_equal": {
  "data": {
   "shadows": "mne.tests.test_annotations._assert_annotations_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._clean_names": {
  "data": {
   "shadows": "mne.utils._clean_names"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.block_sizes": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.brainstorm": {
  "data": {
   "shadows": "mne.datasets.brainstorm"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.ctf_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_2_trials": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_catch": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_continuous": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_discont": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_somato": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fnames": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_annotations": {
  "data": {
   "shadows": "mne.read_annotations"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.single_trials": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.somato_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.spm_face": {
  "data": {
   "shadows": "mne.datasets.spm_face"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.test_rawctf_clean_names": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.ctf.tests.test_ctf.copy",
    "mne.io.ctf.tests.test_ctf.ctf_dir",
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch",
    "mne.io.ctf.tests.test_ctf.pytest",
    "mne.io.read_raw_ctf",
    "mne.utils._clean_names",
    "numpy.array_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "enumerate",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_NONE",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.ctf.tests.test_ctf.block_sizes",
    "mne.io.ctf.tests.test_ctf.ctf_dir",
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch",
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous",
    "mne.io.ctf.tests.test_ctf.ctf_fnames",
    "mne.io.ctf.tests.test_ctf.os",
    "mne.io.ctf.tests.test_ctf.pytest",
    "mne.io.ctf.tests.test_ctf.shutil",
    "mne.io.ctf.tests.test_ctf.single_trials",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "mne.transforms.apply_trans",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "open",
    "os.path.basename",
    "os.path.join",
    "round",
    "slice",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf_annotations": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "events",
    "mne.create_info",
    "mne.datasets.brainstorm.bst_raw.requires_bstraw_data",
    "mne.events_from_annotations",
    "mne.io.RawArray",
    "mne.io.ctf.tests.test_ctf.somato_fname",
    "mne.io.read_raw_ctf",
    "mne.read_annotations",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.sort",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf_annotations_smoke_test": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.ctf.tests.test_ctf.ctf_dir",
    "mne.io.read_raw_ctf",
    "mne.read_annotations",
    "mne.tests.test_annotations._assert_annotations_equal",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_spm_ctf": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "mne.datasets.spm_face.data_path",
    "mne.datasets.spm_face.requires_spm_data",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.read_raw_ctf",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_saving_picked": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.compensator.get_current_comp",
    "mne.io.ctf.tests.test_ctf.ctf_dir",
    "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial",
    "mne.io.ctf.tests.test_ctf.pytest",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_fif",
    "mne.utils._stamp_to_dt",
    "mne.utils.catch_logging",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.ctf.trans": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.trans._make_ctf_coord_trans_set": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "any",
    "combine_transforms",
    "dict",
    "invert_transform",
    "mne.io.ctf.trans._make_transform_card",
    "mne.io.ctf.trans._quaternion_align",
    "numpy.array",
    "numpy.eye",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.trans._make_transform_card": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Transform",
    "get_ras_to_neuromag_trans",
    "invert_transform"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.trans._quaternion_align": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "_fit_matched_points",
    "_quat_to_affine",
    "apply_trans",
    "numpy.linalg.norm",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.trans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf_comp._add_kind": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf_comp._calibrate_comp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "RuntimeError",
    "_pl",
    "float",
    "len",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf_comp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp.read_ctf_comp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "_read_named_matrix",
    "bool",
    "dict",
    "dir_tree_find",
    "len",
    "mne.io.ctf_comp._add_kind",
    "mne.io.ctf_comp._calibrate_comp",
    "numpy.float",
    "numpy.ones",
    "range",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf_comp.write_ctf_comp": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "copy.deepcopy",
    "end_block",
    "len",
    "start_block",
    "write_int",
    "write_named_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.curry": {
  "data": {},
  "type": "module"
 },
 "mne.io.curry.curry": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.curry.curry.CHANTYPES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.curry.curry.CurryParameters": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.curry.curry.FIFFV_CHANTYPES": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.curry.curry.FIFFV_COILTYPES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.curry.curry.FILE_EXTENSIONS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.curry.curry.RawCurry": {
  "data": {
   "lineno": 409
  },
  "type": "class"
 },
 "mne.io.curry.curry.RawCurry.__init__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "mne.io.curry.curry.RawCurry",
    "mne.io.curry.curry._get_curry_file_structure",
    "mne.io.curry.curry._read_annotations_curry",
    "mne.io.curry.curry._read_curry_info",
    "os.path.abspath",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry.RawCurry._read_segment_file": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "_mult_cal_one",
    "_read_segments_file",
    "check_version",
    "len",
    "numpy.loadtxt",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry.SI_UNITS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.curry.curry.SI_UNIT_SCALE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.curry.curry._card_dict": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "mne.io.curry.curry._first_hpi": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "float",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._get_curry_file_structure": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "FileNotFoundError",
    "_check_fname",
    "dict",
    "mne.io.curry.curry.FILE_EXTENSIONS",
    "mne.io.curry.curry._get_curry_version",
    "numpy.unique",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._get_curry_version": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.io.curry.curry._make_trans_dig": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Transform",
    "_angle_between_quats",
    "_quaternion_align",
    "apply_trans",
    "combine_transforms",
    "dict",
    "float",
    "get_ras_to_neuromag_trans",
    "int",
    "invert_transform",
    "len",
    "list",
    "mne.io.curry.curry.CHANTYPES",
    "mne.io.curry.curry._card_dict",
    "mne.io.curry.curry._first_hpi",
    "mne.io.curry.curry._read_curry_lines",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.linalg.norm",
    "numpy.rad2deg",
    "numpy.zeros",
    "rot_to_quat",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_annotations_curry": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Annotations",
    "events",
    "events.shape",
    "mne.io.curry.curry._get_curry_file_structure",
    "mne.io.curry.curry._read_curry_parameters",
    "mne.io.curry.curry._read_events_curry",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_curry_info": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "Transform",
    "_coil_trans_to_loc",
    "_normal_orth",
    "apply_trans",
    "create_info",
    "enumerate",
    "float",
    "len",
    "list",
    "mne.io.curry.curry.CHANTYPES",
    "mne.io.curry.curry.FIFFV_CHANTYPES",
    "mne.io.curry.curry.FIFFV_COILTYPES",
    "mne.io.curry.curry.SI_UNITS",
    "mne.io.curry.curry.SI_UNIT_SCALE",
    "mne.io.curry.curry._make_trans_dig",
    "mne.io.curry.curry._read_curry_lines",
    "mne.io.curry.curry._read_curry_parameters",
    "numpy.array",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.isclose",
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_curry_lines": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mne.io.curry.curry.re",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_curry_parameters": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "dict",
    "float",
    "int",
    "iter",
    "mne.io.curry.curry.CHANTYPES",
    "mne.io.curry.curry.CurryParameters",
    "next",
    "numpy.isclose",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry._read_events_curry": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "check_fname",
    "int",
    "mne.io.curry.curry._read_curry_lines",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.curry.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.io.curry.curry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.curry.curry.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.curry.curry.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.curry.curry.read_raw_curry": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "mne.io.curry.curry.RawCurry"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.curry.tests.test_curry": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.curry.tests.test_curry.curry_dir",
    "mne.io.curry.tests.test_curry.data_dir",
    "mne.utils.run_tests_if_main",
    "numpy.array",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.curry.tests.test_curry.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.FILE_EXTENSIONS": {
  "data": {
   "shadows": "mne.io.curry.curry.FILE_EXTENSIONS"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.HPI_CONTENT": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.LM_CONTENT": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.WANT_TRANS": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry._fit_sphere": {
  "data": {
   "shadows": "mne.bem._fit_sphere"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._get_curry_file_structure": {
  "data": {
   "shadows": "mne.io.curry.curry._get_curry_file_structure"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._get_curry_version": {
  "data": {
   "shadows": "mne.io.curry.curry._get_curry_version"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._get_read_annotations_mock_info": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dict",
    "mne.io.curry.curry.FILE_EXTENSIONS",
    "mne.io.curry.curry._get_curry_version",
    "mne.io.curry.tests.test_curry.curry_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry._mock_info_file": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry._read_events_curry": {
  "data": {
   "shadows": "mne.io.curry.curry._read_events_curry"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.bdf_curry_ref": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.io.curry.tests.test_curry.bdf_file",
    "mne.io.curry.tests.test_curry.pytest",
    "mne.io.edf.read_raw_bdf"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.bdf_file": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.bti_rfDC_file": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.curry7_bdf_ascii_file": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry7_bdf_file": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry7_rfDC_file": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry8_bdf_ascii_file": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry8_bdf_file": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry8_rfDC_file": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.curry_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.data_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.find_events": {
  "data": {
   "shadows": "mne.event.find_events"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.missing_event_file": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.curry.tests.test_curry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_raw_bdf": {
  "data": {
   "shadows": "mne.io.edf.read_raw_bdf"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_raw_bti": {
  "data": {
   "shadows": "mne.io.bti.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.read_raw_curry": {
  "data": {
   "shadows": "mne.io.curry.read_raw_curry"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.curry.tests.test_curry.sfreq_testing_data": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.io.curry.tests.test_curry._mock_info_file",
    "mne.io.curry.tests.test_curry.curry7_bdf_file",
    "mne.io.curry.tests.test_curry.pytest",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_check_missing_files": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "FileNotFoundError",
    "IOError",
    "mne.io.curry.curry._get_curry_file_structure",
    "mne.io.curry.curry._read_events_curry",
    "mne.io.curry.tests.test_curry.missing_event_file",
    "mne.io.curry.tests.test_curry.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_curry_annotations": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "mne.annotations.read_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.curry.tests.test_curry.curry_dir",
    "mne.io.curry.tests.test_curry.pytest",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_curry_annotations_using_mocked_info": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "FileNotFoundError",
    "mne.annotations.read_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.curry.tests.test_curry._get_read_annotations_mock_info",
    "mne.io.curry.tests.test_curry._mock_info_file",
    "mne.io.curry.tests.test_curry.pytest",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "shutil.copyfile"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_events_curry_are_same_as_bdf": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "events",
    "mne.annotations.events_from_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.find_events",
    "mne.io.curry.read_raw_curry",
    "mne.io.curry.tests.test_curry.bdf_file",
    "mne.io.curry.tests.test_curry.curry7_bdf_file",
    "mne.io.curry.tests.test_curry.curry8_bdf_file",
    "mne.io.curry.tests.test_curry.pytest",
    "mne.io.edf.read_raw_bdf",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_raw_curry": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.curry.read_raw_curry",
    "mne.io.curry.tests.test_curry.bdf_curry_ref",
    "mne.io.curry.tests.test_curry.curry7_bdf_ascii_file",
    "mne.io.curry.tests.test_curry.curry7_bdf_file",
    "mne.io.curry.tests.test_curry.curry8_bdf_ascii_file",
    "mne.io.curry.tests.test_curry.curry8_bdf_file",
    "mne.io.curry.tests.test_curry.pytest",
    "mne.utils.check_version",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_read_raw_curry_rfDC": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "list",
    "mne.bem._fit_sphere",
    "mne.datasets.testing.requires_testing_data",
    "mne.io._loc_to_coil_trans",
    "mne.io.bti.read_raw_bti",
    "mne.io.constants.FIFF.FIFFV_COIL_CTF_GRAD",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_NONE",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_MEG_CH",
    "mne.io.curry.read_raw_curry",
    "mne.io.curry.tests.test_curry.HPI_CONTENT",
    "mne.io.curry.tests.test_curry.LM_CONTENT",
    "mne.io.curry.tests.test_curry.WANT_TRANS",
    "mne.io.curry.tests.test_curry.bti_rfDC_file",
    "mne.io.curry.tests.test_curry.curry7_rfDC_file",
    "mne.io.curry.tests.test_curry.curry8_rfDC_file",
    "mne.io.curry.tests.test_curry.pytest",
    "mne.utils.catch_logging",
    "numpy.abs",
    "numpy.arccos",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.rad2deg",
    "numpy.testing.assert_allclose",
    "open",
    "os.path.basename",
    "os.path.join",
    "os.path.splitext",
    "shutil.copyfile"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.test_sfreq": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.curry.read_raw_curry",
    "mne.io.curry.tests.test_curry.sfreq_testing_data"
   ]
  },
  "type": "function"
 },
 "mne.io.curry.tests.test_curry.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.diff": {
  "data": {},
  "type": "module"
 },
 "mne.io.diff.is_equal": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.allclose",
    "numpy.ndarray",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.diff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.tests.test_edf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.edf.tests.test_edf.FILE",
    "mne.io.edf.tests.test_edf.data_dir",
    "mne.io.edf.tests.test_edf.data_path",
    "mne.io.edf.tests.test_edf.inspect",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.edf.tests.test_edf.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.FILE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf._KIND_DICT": {
  "data": {
   "shadows": "mne.io.meas_info._kind_dict"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._assert_annotations_equal": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf._get_edf_default_event_id": {
  "data": {
   "shadows": "mne.io.edf.edf._get_edf_default_event_id"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._parse_prefilter_string": {
  "data": {
   "shadows": "mne.io.edf.edf._parse_prefilter_string"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._read_annotations_edf": {
  "data": {
   "shadows": "mne.io.edf.edf._read_annotations_edf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._read_ch": {
  "data": {
   "shadows": "mne.io.edf.edf._read_ch"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.bdf_eeglab_path": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_multiple_annotations_path": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_stim_channel_path": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.data_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.data_path": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.duplicate_channel_labels_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_eeglab_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_overlap_annot_path": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_reduced": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_stim_channel_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_stim_resamp_path": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_txt_stim_channel_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_uneven_eeglab_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_uneven_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.eog": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.misc": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.montage_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_raw_bdf": {
  "data": {
   "shadows": "mne.io.read_raw_bdf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_raw_edf": {
  "data": {
   "shadows": "mne.io.read_raw_edf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.test_bdf_crop_save_stim_channel": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.bdf_stim_channel_path",
    "mne.io.read_raw_bdf"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_bdf_data": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "mne.io.edf.tests.test_edf.bdf_eeglab_path",
    "mne.io.edf.tests.test_edf.bdf_path",
    "mne.io.edf.tests.test_edf.eog",
    "mne.io.edf.tests.test_edf.misc",
    "mne.io.read_raw_bdf",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.testing.assert_array_almost_equal",
    "repr",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_bdf_multiple_annotation_channels": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.bdf_multiple_annotations_path",
    "mne.io.read_raw_bdf",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_duplicate_channel_labels_edf": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.io.edf.tests.test_edf.duplicate_channel_labels_path",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.read_raw_edf"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_data_broken": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "RuntimeWarning",
    "int",
    "len",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.read_raw_edf",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_lowpass_zero": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.edf_stim_resamp_path",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.read_raw_edf",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_others": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.edf_overlap_annot_path",
    "mne.io.edf.tests.test_edf.edf_reduced",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.read_raw_edf",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_prefilter_parse": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "mne.io.edf.edf._parse_prefilter_string",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_stim_ch_pick_up": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "mne.io.edf.tests.test_edf.data_dir",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.meas_info._kind_dict.items",
    "mne.io.read_raw_edf",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_find_events_backward_compatibility": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mne.annotations.events_from_annotations",
    "mne.io.edf.edf._get_edf_default_event_id",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.read_raw_edf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_generator_bdf": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.test_generator_edf": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.test_load_generator": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.annotations.events_from_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.edf.tests.test_edf.test_generator_bdf",
    "mne.io.edf.tests.test_edf.test_generator_edf",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.read_raw_bdf",
    "mne.io.read_raw_edf",
    "numpy.testing.assert_array_equal",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_orig_units": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.read_raw_edf"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_parse_annotation": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bytes",
    "len",
    "list",
    "map",
    "mne.io.edf.edf._read_annotations_edf",
    "mne.io.edf.edf._read_ch",
    "numpy.array",
    "numpy.column_stack",
    "numpy.int16",
    "numpy.int64",
    "numpy.testing.assert_equal",
    "open",
    "str",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_read_annot": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "mne.Annotations",
    "mne.io.edf.edf._read_annotations_edf",
    "mne.io.edf.tests.test_edf._assert_annotations_equal",
    "numpy.fromfile",
    "numpy.int16",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_read_annotations": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "mne.annotations.read_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.edf.tests.test_edf.test_generator_bdf",
    "mne.io.edf.tests.test_edf.test_generator_edf"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_read_raw_edf_stim_channel_input_parameters": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "all",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.read_raw_edf"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_to_data_frame": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mne.io.edf.tests.test_edf.bdf_path",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.edf.tests.test_edf.pytest",
    "mne.io.read_raw_bdf",
    "mne.io.read_raw_edf",
    "mne.utils.requires_pandas",
    "numpy.round",
    "numpy.testing.assert_array_equal",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.edf.tests.test_gdf.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.edf.tests.test_gdf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.gdf1_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.gdf2_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.gdf_1ch_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.read_raw_gdf": {
  "data": {
   "shadows": "mne.io.read_raw_gdf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.test_gdf2_birthday": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_gdf.gdf2_path",
    "mne.io.edf.tests.test_gdf.shutil",
    "mne.io.read_raw_gdf",
    "numpy.array",
    "numpy.fromfile",
    "numpy.uint64",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_gdf2_data": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.edf.tests.test_gdf.gdf2_path",
    "mne.io.read_raw_gdf",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_gdf_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.events_from_annotations",
    "mne.io.edf.tests.test_gdf.gdf1_path",
    "mne.io.read_raw_gdf",
    "mne.pick_types",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_one_channel_gdf": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_gdf.gdf_1ch_path",
    "mne.io.edf.tests.test_gdf.pytest",
    "mne.io.read_raw_gdf"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.eeglab": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests._utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests._utils._read_eeglab_montage": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict",
    "float",
    "mne.channels.make_dig_montage",
    "mne.transforms._sph_to_cart",
    "mne.transforms._topo_to_sph",
    "numpy.genfromtxt",
    "numpy.loadtxt",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests._utils._sph_to_cart": {
  "data": {
   "shadows": "mne.transforms._sph_to_cart"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests._utils._topo_to_sph": {
  "data": {
   "shadows": "mne.transforms._topo_to_sph"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests._utils.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.eeglab.tests.test_eeglab.base_dir",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_h5",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_h5",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_mat",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_h5",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_h5",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_mat",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.eeglab.tests.test_eeglab.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab._assert_array_allclose_nan": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab._check_h5": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab._read_eeglab_montage": {
  "data": {
   "shadows": "mne.io.eeglab.tests._utils._read_eeglab_montage"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_h5": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_h5": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile_mat": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_h5_fnames": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_mat_fnames": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.events_from_annotations": {
  "data": {
   "shadows": "mne.annotations.events_from_annotations"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.montage_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.one_chanpos_fname": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dict",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "numpy.array",
    "numpy.empty",
    "numpy.nan",
    "scipy.io.savemat",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_event_duration": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_h5": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_mat": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_h5": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile_mat": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fnames": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_h5_fnames": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_mat_fnames": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.read_annotations": {
  "data": {
   "shadows": "mne.annotations.read_annotations"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.read_epochs_eeglab": {
  "data": {
   "shadows": "mne.read_epochs_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.read_raw_eeglab": {
  "data": {
   "shadows": "mne.io.read_raw_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.test_degenerate": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab.base_dir",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "mne.io.eeglab.tests.test_eeglab.shutil",
    "mne.read_epochs_eeglab",
    "os.path.join",
    "scipy.io.loadmat",
    "scipy.io.savemat",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_eeglab_annotations": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "mne.annotations.read_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab._check_h5",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "mne.io.eeglab.tests.test_eeglab.raw_fnames",
    "numpy.all",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_eeglab_event_from_annot": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len",
    "mne.annotations.events_from_annotations",
    "mne.annotations.read_annotations",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab.base_dir",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat",
    "mne.io.read_raw_eeglab",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_eeglab_read_annotations": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "mne.annotations.read_annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_event_duration",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat",
    "mne.io.read_raw_eeglab",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_epochs": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab.epochs_h5_fnames",
    "mne.io.eeglab.tests.test_eeglab.epochs_mat_fnames",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "mne.read_epochs_eeglab",
    "mne.utils.requires_h5py",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_epochs_events": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_mat",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "mne.read_epochs_eeglab",
    "mne.write_events",
    "numpy.array",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_raw": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests._utils._read_eeglab_montage",
    "mne.io.eeglab.tests.test_eeglab.montage_path",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_h5",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat",
    "mne.io.read_raw_eeglab",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.utils.requires_h5py",
    "os.path.basename",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set_raw_more": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "FileNotFoundError",
    "RuntimeWarning",
    "ValueError",
    "copy.deepcopy",
    "distutils.version.LooseVersion",
    "enumerate",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab.base_dir",
    "mne.io.eeglab.tests.test_eeglab.pytest",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_mat",
    "mne.io.eeglab.tests.test_eeglab.shutil",
    "mne.io.read_raw_eeglab",
    "numpy.__version__",
    "numpy.array",
    "numpy.nan",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "os.path.join",
    "range",
    "scipy.io.loadmat",
    "scipy.io.savemat",
    "str",
    "unittest.SkipTest",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.test_position_information": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.eeglab.tests.test_eeglab._assert_array_allclose_nan",
    "mne.io.eeglab.tests.test_eeglab.one_chanpos_fname",
    "mne.io.read_raw_eeglab",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.write_events": {
  "data": {
   "shadows": "mne.write_events"
  },
  "type": "import"
 },
 "mne.io.egi": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egi": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egi.RawEGI": {
  "data": {
   "lineno": 158
  },
  "type": "class"
 },
 "mne.io.egi.egi.RawEGI.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "_combine_triggers",
    "_create_chs",
    "_empty_info",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.io.egi.egi.RawEGI",
    "mne.io.egi.egi._read_events",
    "mne.io.egi.egi._read_header",
    "mne.io.egi.egi.datetime",
    "mne.io.egi.egi.time",
    "numpy.arange",
    "numpy.repeat",
    "open",
    "range",
    "super",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi.RawEGI._read_segment_file": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_events": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "events",
    "numpy.fromfile",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "dict",
    "my_fread",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.dtype",
    "numpy.fromfile",
    "numpy.int32",
    "numpy.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_header.my_fread": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.egi.egi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.egi.read_raw_egi": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "_read_raw_egi_mff",
    "mne.io.egi.egi.RawEGI"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.egi.egimff": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egimff.RawMff": {
  "data": {
   "lineno": 280
  },
  "type": "class"
 },
 "mne.io.egi.egimff.RawMff.__init__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "_combine_triggers",
    "_create_chs",
    "_empty_info",
    "_get_gains",
    "_read_events",
    "dict",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "mne.io.egi.egimff.RawMff",
    "mne.io.egi.egimff._read_header",
    "mne.io.egi.egimff._read_locs",
    "mne.io.egi.egimff.datetime",
    "mne.io.egi.egimff.time",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.where",
    "os.path.join",
    "range",
    "super",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff.RawMff._read_segment_file": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "_block_r",
    "_mult_cal_one",
    "_sync_onset",
    "enumerate",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.cumsum",
    "numpy.fromfile",
    "numpy.max",
    "numpy.sum",
    "numpy.vstack",
    "open",
    "slice",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "mne.io.egi.egimff.datetime"
   ]
  },
  "type": "class"
 },
 "mne.io.egi.egimff._FixedOffset.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mne.io.egi.egimff.datetime"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset.dst": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mne.io.egi.egimff.datetime"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset.tzname": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "mne.io.egi.egimff._FixedOffset.utcoffset": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_header": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "int",
    "mne.io.egi.egimff._FixedOffset",
    "mne.io.egi.egimff._read_mff_header",
    "mne.io.egi.egimff.datetime",
    "numpy.fromfile",
    "numpy.int32",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_locs": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "id",
    "len",
    "numpy.array",
    "numpy.where",
    "os.path.exists",
    "os.path.join",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_mff_header": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_extract",
    "_get_blocks",
    "_get_ep_info",
    "_get_signalfname",
    "dict",
    "int",
    "len",
    "list",
    "numpy.sum",
    "os.path.isfile",
    "os.path.join",
    "print",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_raw_egi_mff": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "mne.io.egi.egimff.RawMff"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.egi.events": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.events._combine_triggers": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bool",
    "numpy.any",
    "numpy.arange",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._ns": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "mne.io.egi.events._ns2py_time": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datetime.datetime.strptime"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._parse_xml": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mne.io.egi.events._xml2list",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._read_events": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "len",
    "mne.io.egi.events._read_mff_events",
    "numpy.asarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._read_mff_events": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "float",
    "glob.glob",
    "int",
    "list",
    "mne.io.egi.events._ns2py_time",
    "mne.io.egi.events._parse_xml",
    "numpy.fix",
    "os.path.basename",
    "os.path.join",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._xml2dict": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.io.egi.events._ns",
    "mne.io.egi.events._xml2list"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._xml2list": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "mne.io.egi.events._ns",
    "mne.io.egi.events._xml2dict"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "mne.io.egi.events.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.egi.events.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.io.egi.events.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mne.io.egi.events.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.events.parse": {
  "data": {
   "shadows": "xml.etree.ElementTree.parse"
  },
  "type": "import"
 },
 "mne.io.egi.events.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "mne.io.egi.general": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.general._block_r": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "numpy.dtype",
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._extract": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "range",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_blocks": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "dict",
    "len",
    "mne.io.egi.general._block_r",
    "mne.io.egi.general.os",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_ep_info": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "list",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_gains": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dict",
    "mne.io.egi.general._extract",
    "numpy.asarray",
    "numpy.float64",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_signalfname": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.io.egi.general.os",
    "mne.io.egi.general.re",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.general.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.egi.general.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "mne.io.egi.general.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.egi.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.tests.test_egi": {
  "data": {
   "symbols_in_volume": [
    "mne.io.egi.tests.test_egi.FILE",
    "mne.io.egi.tests.test_egi.base_dir",
    "mne.io.egi.tests.test_egi.inspect",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.egi.tests.test_egi.FILE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi._combine_triggers": {
  "data": {
   "shadows": "mne.io.egi.egi._combine_triggers"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.base_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.egi_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_txt_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.read_raw_egi": {
  "data": {
   "shadows": "mne.io.read_raw_egi"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.test_io_egi": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "enumerate",
    "events",
    "len",
    "mne.find_events",
    "mne.io.egi.egi._combine_triggers",
    "mne.io.egi.tests.test_egi.egi_fname",
    "mne.io.egi.tests.test_egi.egi_txt_fname",
    "mne.io.egi.tests.test_egi.pytest",
    "mne.io.read_raw_egi",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.array",
    "numpy.loadtxt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "open",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_crop_no_preload": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_egi",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_mff": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "events",
    "len",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.egi.tests.test_egi.pytest",
    "mne.io.read_raw_egi",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_pns_mff": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_egi",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "print",
    "repr",
    "scipy.io.loadmat",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_pns_mff_bug": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.egi.tests.test_egi.pytest",
    "mne.io.read_raw_egi",
    "mne.pick_types",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "print",
    "scipy.io.loadmat",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.eximia": {
  "data": {},
  "type": "module"
 },
 "mne.io.eximia.eximia": {
  "data": {},
  "type": "module"
 },
 "mne.io.eximia.eximia.RawEximia": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "mne.io.eximia.eximia.RawEximia.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "_file_size",
    "create_info",
    "divmod",
    "len",
    "mne.io.eximia.eximia.RawEximia",
    "os.path.basename",
    "super",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.eximia.eximia.RawEximia._read_segment_file": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.eximia.eximia.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eximia.eximia.read_raw_eximia": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mne.io.eximia.eximia.RawEximia"
   ]
  },
  "type": "function"
 },
 "mne.io.eximia.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.eximia.tests.test_eximia": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.io.eximia.tests.test_eximia._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.read_raw_eximia": {
  "data": {
   "shadows": "mne.io.read_raw_eximia"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.eximia.tests.test_eximia.test_eximia_nxe": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_eximia",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "range",
    "repr",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.fieldtrip": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.fieldtrip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.fieldtrip.read_epochs_fieldtrip": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "EpochsArray",
    "_create_event_metadata",
    "_create_events",
    "_create_info",
    "_set_tmin",
    "_validate_ft_struct",
    "events",
    "numpy.array",
    "read_mat"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.fieldtrip.read_evoked_fieldtrip": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "EvokedArray",
    "_create_info",
    "_validate_ft_struct",
    "read_mat"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.fieldtrip.read_raw_fieldtrip": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RawArray",
    "RuntimeError",
    "_create_info",
    "_validate_ft_struct",
    "numpy.array",
    "numpy.newaxis",
    "numpy.squeeze",
    "read_mat"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.tests.helpers": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.io.fieldtrip.tests.helpers.mne"
   ]
  },
  "type": "module"
 },
 "mne.io.fieldtrip.tests.helpers._has_h5py": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers._remove_ignored_ch_fields": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers.ch_ignore_fields"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers._remove_ignored_info_fields": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers._remove_ignored_ch_fields",
    "mne.io.fieldtrip.tests.helpers.info_ignored_fields"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers._remove_long_info_fields": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers.info_long_fields"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.assert_deep_almost_equal": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "complex",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.fieldtrip.tests.helpers.types",
    "numpy.ndarray",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range",
    "repr",
    "reversed",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.assert_warning_in_record": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.ch_ignore_fields": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.check_data": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers.system_decimal_accuracy_dict",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.check_info_fields": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers._remove_ignored_info_fields",
    "mne.io.fieldtrip.tests.helpers._remove_long_info_fields",
    "mne.io.fieldtrip.tests.helpers.assert_deep_almost_equal",
    "mne.io.fieldtrip.tests.helpers.info_long_fields"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.drop_extra_chans_dict": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.get_cfg_local": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mne.externals.pymatreader.read_mat",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.os"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_data_paths": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers.mne",
    "mne.io.fieldtrip.tests.helpers.os"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_epochs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "events",
    "id",
    "int",
    "isinstance",
    "list",
    "mne.io.fieldtrip.tests.helpers.get_cfg_local",
    "mne.io.fieldtrip.tests.helpers.get_raw_data",
    "mne.io.fieldtrip.tests.helpers.mne",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_evoked": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "mne.io.fieldtrip.tests.helpers.get_epochs",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_raw_data": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "min",
    "mne.io.fieldtrip.tests.helpers.drop_extra_chans_dict",
    "mne.io.fieldtrip.tests.helpers.get_cfg_local",
    "mne.io.fieldtrip.tests.helpers.ignore_channels_dict",
    "mne.io.fieldtrip.tests.helpers.mne",
    "mne.io.fieldtrip.tests.helpers.os",
    "mne.io.fieldtrip.tests.helpers.system_to_reader_fn_dict",
    "numpy.max",
    "reader_function"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.get_raw_info": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mne.io.fieldtrip.tests.helpers.get_cfg_local",
    "mne.io.fieldtrip.tests.helpers.mne",
    "mne.io.fieldtrip.tests.helpers.os",
    "mne.io.fieldtrip.tests.helpers.system_to_reader_fn_dict",
    "reader_function"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.helpers.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.ignore_channels_dict": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.info_ignored_fields": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.info_long_fields": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.pandas_not_found_warning_msg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.helpers.system_decimal_accuracy_dict": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.system_to_reader_fn_dict": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.helpers.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip": {
  "data": {
   "symbols_in_volume": [
    "RuntimeWarning",
    "list",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_epochs",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_raw",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_versions",
    "mne.io.fieldtrip.tests.test_fieldtrip.itertools",
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info",
    "mne.io.fieldtrip.utils.NOINFO_WARNING"
   ]
  },
  "type": "module"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.NOINFO_WARNING": {
  "data": {
   "shadows": "mne.io.fieldtrip.utils.NOINFO_WARNING"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip._check_pandas_installed": {
  "data": {
   "shadows": "mne.utils._check_pandas_installed"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip._create_events": {
  "data": {
   "shadows": "mne.io.fieldtrip.utils._create_events"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip._has_h5py": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers._has_h5py"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_epochs": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_systems_raw": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_epochs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_raw": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.all_versions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.assert_warning_in_record": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.assert_warning_in_record"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.check_data": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.check_data"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.check_info_fields": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.check_info_fields"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_data_paths": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_data_paths"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_epochs": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_epochs"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_evoked": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_evoked"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_raw_data": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_raw_data"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.get_raw_info": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.get_raw_info"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.pandas_not_found_warning_msg": {
  "data": {
   "shadows": "mne.io.fieldtrip.tests.helpers.pandas_not_found_warning_msg"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_create_events": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.pymatreader.read_mat",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.test_fieldtrip.copy",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest",
    "mne.io.fieldtrip.utils._create_events",
    "numpy.all",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_evoked_with_missing_channels": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_invalid_trialinfocolumn": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_load_epoched_as_raw": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_one_channel_elec_bug": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_versions",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest",
    "mne.utils.requires_h5py"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_raw": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ImportError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers._has_h5py",
    "mne.io.fieldtrip.tests.helpers.check_data",
    "mne.io.fieldtrip.tests.helpers.check_info_fields",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_raw_data",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_raw",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest",
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_read_epochs": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers._has_h5py",
    "mne.io.fieldtrip.tests.helpers.assert_warning_in_record",
    "mne.io.fieldtrip.tests.helpers.check_data",
    "mne.io.fieldtrip.tests.helpers.check_info_fields",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_epochs",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.helpers.pandas_not_found_warning_msg",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_epochs",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest",
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info",
    "mne.utils._check_pandas_installed"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_read_evoked": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ImportError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers._has_h5py",
    "mne.io.fieldtrip.tests.helpers.check_data",
    "mne.io.fieldtrip.tests.helpers.check_info_fields",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_evoked",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_test_params_epochs",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.no_info_warning",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest",
    "mne.io.fieldtrip.tests.test_fieldtrip.use_info"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.test_throw_exception_on_cellarray": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fieldtrip.tests.helpers.get_data_paths",
    "mne.io.fieldtrip.tests.helpers.get_raw_info",
    "mne.io.fieldtrip.tests.test_fieldtrip.all_versions",
    "mne.io.fieldtrip.tests.test_fieldtrip.mne",
    "mne.io.fieldtrip.tests.test_fieldtrip.pytest",
    "mne.utils.requires_h5py",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.fieldtrip.tests.test_fieldtrip.use_info": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.fieldtrip.utils.NOINFO_WARNING": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils._create_event_metadata": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "_check_pandas_installed",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_events": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "numpy.array",
    "numpy.vstack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_info": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "create_info",
    "mne.io.fieldtrip.utils.NOINFO_WARNING",
    "mne.io.fieldtrip.utils._create_info_chs",
    "mne.io.fieldtrip.utils._create_montage",
    "mne.io.fieldtrip.utils._set_sfreq",
    "numpy.delete",
    "pick_info",
    "set",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_info_chs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "enumerate",
    "list",
    "mne.io.fieldtrip.utils._process_channel_eeg",
    "mne.io.fieldtrip.utils._process_channel_meg",
    "numpy.array",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._create_montage": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "make_dig_montage",
    "numpy.asanyarray",
    "numpy.in1d",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._process_channel_eeg": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "mne.io.fieldtrip.utils._unit_dict",
    "numpy.asanyarray",
    "numpy.hstack",
    "numpy.log10",
    "numpy.squeeze",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._process_channel_meg": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "mne.io.fieldtrip.utils._unit_dict",
    "numpy.asanyarray",
    "numpy.average",
    "numpy.eye",
    "numpy.hstack",
    "numpy.log10",
    "numpy.squeeze",
    "numpy.where",
    "rotation3d_align_z_axis"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._set_sfreq": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "abs"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._set_tmin": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "all",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils._supported_megs": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils._unit_dict": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.fieldtrip.utils._validate_ft_struct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.io.fieldtrip.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fiff": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.tests.test_raw_fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.fiff.tests.test_raw_fiff.base_dir",
    "mne.io.fiff.tests.test_raw_fiff.data_dir",
    "mne.io.fiff.tests.test_raw_fiff.testing_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.fiff.tests.test_raw_fiff.Annotations": {
  "data": {
   "shadows": "mne.annotations.Annotations"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._compare_combo": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._test_concat": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_concat"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_and_remove_boundary_annot": {
  "data": {
   "shadows": "mne.utils.assert_and_remove_boundary_annot"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_object_equal": {
  "data": {
   "shadows": "mne.utils.assert_object_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.bad_file_works": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.bad_file_wrong": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.base_dir": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.concatenate_events": {
  "data": {
   "shadows": "mne.concatenate_events"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.concatenate_raws": {
  "data": {
   "shadows": "mne.io.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.ctf_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.data_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.fif_bad_marked_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.hp_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.ms_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.skip_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_acq_skip": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "int",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.filter.filter_data",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.skip_fname",
    "mne.io.read_raw_fif",
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "os.path.getsize",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_add_channels": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "list",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils.assert_object_equal",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_annotation_crop": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.annotations.Annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.utils._dt_to_stamp",
    "mne.utils.assert_and_remove_boundary_annot",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "mne.compute_proj_raw",
    "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw_mne": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "compensate_mne",
    "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname",
    "mne.io.read_raw_fif",
    "mne.utils.requires_mne",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw_mne.compensate_mne": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.utils.run_subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_concat": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "functools.partial",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_concat"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_copy_append": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_crop": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.r_",
    "numpy.round",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_drop_channels_mixin": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_equalize_channels": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.equalize_channels",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fif_gz_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_file_like": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "io.BytesIO",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "open",
    "os.path.isfile",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_filter": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "dict",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.arange",
    "numpy.may_share_memory",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_filter_picks": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fix_types": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "len",
    "mne.io.constants.FIFF.FIFFV_COIL_VV_MAG_T2",
    "mne.io.constants.FIFF.FIFFV_COIL_VV_MAG_T3.all",
    "mne.io.fiff.tests.test_raw_fiff.ctf_fname",
    "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.arange",
    "numpy.array",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_getitem": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_hash_raw": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "hash",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pickle",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_hilbert": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.abs",
    "numpy.ceil",
    "numpy.log2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_complex": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "RuntimeWarning",
    "enumerate",
    "functools.partial",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_raw": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "os.path.basename",
    "repr",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_raw_additional": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_MNE_COORD_CTF_HEAD",
    "mne.io.fiff.tests.test_raw_fiff.ctf_fname",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_gz_fname",
    "mne.io.read_raw_fif",
    "mne.pick_channels",
    "mne.pick_types",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_load_bad_channels": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "mne.io.fiff.tests.test_raw_fiff.bad_file_works",
    "mne.io.fiff.tests.test_raw_fiff.bad_file_wrong",
    "mne.io.fiff.tests.test_raw_fiff.fif_bad_marked_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_maxshield": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.ms_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_memmap": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "mne.io.RawArray",
    "mne.io.fiff.tests.test_raw_fiff.sys",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.pick_info",
    "numpy.linspace",
    "numpy.memmap",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_multiple_files": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "int",
    "len",
    "list",
    "mne.concatenate_events",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff._compare_combo",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_output_formats": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "IOError",
    "enumerate",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_pick_channels_mixin": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_preload_modify": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_proj": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_raw_copy": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_resample": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "int",
    "len",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.array",
    "numpy.minimum",
    "numpy.random.randn",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_save": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "mne.annotations.Annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.utils._dt_to_stamp",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_split_files": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ValueError",
    "mne.annotations.Annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "numpy.arange",
    "numpy.diff",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_str_like": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "mne.io.fiff.tests.test_raw_fiff.pathlib",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_subject_info": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_to_data_frame": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "isinstance",
    "len",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils.requires_pandas",
    "numpy.round",
    "numpy.testing.assert_array_equal",
    "pandas.Timedelta",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_to_data_frame_time_format": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "isinstance",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils.requires_pandas",
    "numpy.float64",
    "numpy.int64",
    "pandas.Timedelta",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_with_statement": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.testing_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.kit": {
  "data": {},
  "type": "module"
 },
 "mne.io.kit.constants": {
  "data": {
   "symbols_in_volume": [
    "BunchConst",
    "mne.io.kit.constants.KIT"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.constants.KIT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_LAYOUT": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_NEIGHBORS": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_SYSNAMES": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "mne.io.kit.constants.LEGACY_AMP_PARAMS": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "mne.io.kit.coreg": {
  "data": {},
  "type": "module"
 },
 "mne.io.kit.coreg.SEEK_CUR": {
  "data": {
   "shadows": "os.SEEK_CUR"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.read_mrk": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_read_dig_points",
    "mne.io.kit.coreg.pickle",
    "numpy.array",
    "numpy.asarray",
    "numpy.fromfile",
    "open",
    "os.SEEK_CUR",
    "os.path.splitext",
    "range",
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.coreg.read_sns": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "mne.io.kit.coreg.re",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.coreg.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "mne.io.kit.tests": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.tests.data_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.io.kit.tests.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.io.kit.tests.test_coreg.FILE",
    "mne.io.kit.tests.test_coreg.data_dir",
    "mne.io.kit.tests.test_coreg.inspect",
    "mne.io.kit.tests.test_coreg.os",
    "mne.io.kit.tests.test_coreg.parent_dir"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.tests.test_coreg.FILE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg._write_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._write_dig_points"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.data_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.mrk_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.parent_dir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.read_mrk": {
  "data": {
   "shadows": "mne.io.kit.read_mrk"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.test_io_mrk": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.io._digitization._write_dig_points",
    "mne.io.kit.read_mrk",
    "mne.io.kit.tests.test_coreg.mrk_fname",
    "mne.io.kit.tests.test_coreg.os",
    "mne.io.kit.tests.test_coreg.pickle",
    "mne.io.kit.tests.test_coreg.pytest",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit": {
  "data": {
   "symbols_in_volume": [
    "mne.io.kit.__file__",
    "mne.io.kit.tests.test_kit.data_dir",
    "mne.io.kit.tests.test_kit.data_path",
    "mne.io.kit.tests.test_kit.mne",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.tests.test_kit.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.KIT": {
  "data": {
   "shadows": "mne.io.kit.constants.KIT"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._KIT_INIT_FILE": {
  "data": {
   "shadows": "mne.io.kit.__file__"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._get_ico_surface": {
  "data": {
   "shadows": "mne.surface._get_ico_surface"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_dig_allclose": {
  "data": {
   "shadows": "mne.utils.assert_dig_allclose"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.data_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.data_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.elp_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.elp_txt_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.epochs_path": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.events_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.hsp_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.hsp_txt_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.mrk2_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.mrk3_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.mrk_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_epochs_kit": {
  "data": {
   "shadows": "mne.io.read_epochs_kit"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_sns": {
  "data": {
   "shadows": "mne.io.kit.coreg.read_sns"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.sqd_as_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.sqd_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.sqd_umd_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.test_ch_loc": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "mne.io.kit.coreg.read_sns",
    "mne.io.kit.tests.test_kit.data_dir",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.hsp_txt_path",
    "mne.io.kit.tests.test_kit.mrk2_path",
    "mne.io.kit.tests.test_kit.mrk3_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.utils.assert_dig_allclose",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_data": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_GRAD",
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_REF_MAG",
    "mne.io.constants.FIFF.FIFFV_COIL_NONE",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_MEG_CH",
    "mne.io.constants.FIFF.FIFFV_MISC_CH",
    "mne.io.constants.FIFF.FIFFV_REF_MEG_CH",
    "mne.io.constants.FIFF.FIFFV_STIM_CH",
    "mne.io.kit.constants.KIT.SYSTEM_AS_2008",
    "mne.io.kit.constants.KIT.SYSTEM_NYU_2010",
    "mne.io.kit.constants.KIT.SYSTEM_UMD_2014_12",
    "mne.io.kit.tests.test_kit.data_dir",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.epochs_path",
    "mne.io.kit.tests.test_kit.hsp_txt_path",
    "mne.io.kit.tests.test_kit.mrk2_path",
    "mne.io.kit.tests.test_kit.mrk3_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.pytest",
    "mne.io.kit.tests.test_kit.sqd_as_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.kit.tests.test_kit.sqd_umd_path",
    "mne.io.read_epochs_kit",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range",
    "repr",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_decimate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.pytest",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_kit",
    "mne.surface._get_ico_surface",
    "numpy.array",
    "numpy.mean",
    "numpy.savetxt",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_epochs": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.kit.tests.test_kit.epochs_path",
    "mne.io.kit.tests.test_kit.events_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_epochs_kit",
    "mne.io.read_raw_kit",
    "mne.read_events",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_hsp_elp": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "mne.io.kit.tests.test_kit.elp_path",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.hsp_path",
    "mne.io.kit.tests.test_kit.hsp_txt_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_kit",
    "mne.transforms.apply_trans",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_raw_events": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "evts",
    "mne.find_events",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_kit",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_raw_events.evts": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "mne.io.matrix": {
  "data": {},
  "type": "module"
 },
 "mne.io.matrix._read_named_matrix": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "find_tag",
    "has_tag",
    "mne.io.matrix._transpose_named_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.matrix._transpose_named_matrix": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mne.io.matrix.write_named_matrix": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "end_block",
    "float",
    "len",
    "start_block",
    "write_float_matrix",
    "write_int",
    "write_name_list"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "dict",
    "object"
   ]
  },
  "type": "module"
 },
 "mne.io.meas_info.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.meas_info.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.io.meas_info.DEPRECATED_PARAM": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "mne.io.meas_info.Info": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "dict",
    "mne.io.meas_info.MontageMixin"
   ]
  },
  "type": "class"
 },
 "mne.io.meas_info.Info.__deepcopy__": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "copy.deepcopy",
    "list",
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.__init__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "Transform",
    "isinstance",
    "mne.io.meas_info.Info",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.__repr__": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "Transform",
    "TypeError",
    "_coord_frame_name",
    "_pl",
    "bool",
    "channel_type",
    "collections.Counter",
    "isinstance",
    "len",
    "numpy.allclose",
    "numpy.eye",
    "range",
    "sorted",
    "str",
    "textwrap.shorten",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info._check_ch_name_length": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "len",
    "list",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info._check_consistency": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_is_numeric",
    "any",
    "enumerate",
    "float",
    "isinstance",
    "len",
    "mne.io.meas_info._unique_channel_names",
    "mne.io.meas_info.datetime",
    "numpy.ndarray",
    "repr",
    "str",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info._update_redundant": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.ch_names": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.copy": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.normalize_proj": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "_normalize_proj"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.pick_channels": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pick_channels",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.MontageMixin": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.meas_info.MontageMixin.set_montage": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_set_montage",
    "isinstance",
    "mne.io.meas_info.DEPRECATED_PARAM"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.RAW_INFO_FIELDS": {
  "data": {
   "lineno": 2005
  },
  "type": "constant"
 },
 "mne.io.meas_info._add_timedelta_to_stamp": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "_dt_to_stamp",
    "_stamp_to_dt"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._bad_chans_comp": {
  "data": {
   "lineno": 2256,
   "symbols_in_volume": [
    "get_current_comp",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._check_dates": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "RuntimeError",
    "_dt_to_stamp",
    "numpy.iinfo"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._dig_write_dig": {
  "data": {
   "shadows": "write_dig"
  },
  "type": "import"
 },
 "mne.io.meas_info._empty_info": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "Transform",
    "float",
    "list",
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._force_update_info": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.io.meas_info.Info",
    "numpy.atleast_1d",
    "numpy.hstack",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._get_valid_units": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._kind_dict": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.meas_info._merge_info": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "len",
    "list",
    "mne.io.meas_info.Info",
    "mne.io.meas_info._force_update_info",
    "mne.io.meas_info._merge_info_values",
    "numpy.all",
    "object_diff",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_info_values": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_isinstance",
    "_flatten",
    "_uniquify_projs",
    "_where_isinstance",
    "all",
    "any",
    "dict",
    "int",
    "io.BytesIO",
    "isinstance",
    "len",
    "list",
    "numpy.array_equal",
    "numpy.ndarray",
    "object_diff",
    "set",
    "sorted",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_info_values._check_isinstance": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "func",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_info_values._flatten": {
  "data": {
   "lineno": 1735
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_info_values._where_isinstance": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "isinstance",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._simplify_info": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._unique_channel_names": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "min",
    "numpy.array",
    "numpy.ceil",
    "numpy.log10",
    "numpy.setdiff1d",
    "numpy.unique",
    "numpy.where",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.anonymize_info": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "_validate_type",
    "mne.io.meas_info._add_timedelta_to_stamp",
    "mne.io.meas_info._check_dates",
    "mne.io.meas_info.datetime",
    "numpy.zeros_like",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.b": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.meas_info.create_info": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "DeprecationWarning",
    "KeyError",
    "TypeError",
    "ValueError",
    "_set_montage",
    "_validate_type",
    "dict",
    "enumerate",
    "float",
    "isinstance",
    "len",
    "list",
    "mne.io.meas_info._empty_info",
    "mne.io.meas_info._kind_dict",
    "mne.io.meas_info.operator",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.full",
    "numpy.nan",
    "numpy.str",
    "str",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.meas_info.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.meas_info.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.meas_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.meas_info.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mne.io.meas_info.read_bad_channels": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "dir_tree_find",
    "find_tag",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.read_fiducials": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "dir_tree_find",
    "fiff_open",
    "range",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.read_info": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "fiff_open",
    "mne.io.meas_info.read_meas_info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.read_meas_info": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "OverflowError",
    "Transform",
    "ValueError",
    "_format_dig_points",
    "_read_dig_fif",
    "_read_proc_history",
    "_read_proj",
    "_stamp_to_dt",
    "dict",
    "dir_tree_find",
    "events",
    "float",
    "int",
    "invert_transform",
    "len",
    "list",
    "mne.io.meas_info.Info",
    "mne.io.meas_info.b",
    "mne.io.meas_info.read_bad_channels",
    "numpy.array",
    "numpy.array_equal",
    "numpy.dot",
    "numpy.isnan",
    "range",
    "read_ctf_comp",
    "read_tag",
    "scipy.linalg.inv",
    "str",
    "tuple",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.shorten": {
  "data": {
   "shadows": "textwrap.shorten"
  },
  "type": "import"
 },
 "mne.io.meas_info.write_dig": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "mne.io.meas_info.write_fiducials": {
  "data": {
   "lineno": 842
  },
  "type": "function"
 },
 "mne.io.meas_info.write_info": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "end_block",
    "end_file",
    "mne.io.meas_info.write_meas_info",
    "start_block",
    "start_file"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.write_meas_info": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "_dt_to_stamp",
    "_write_proc_history",
    "_write_proj",
    "copy.deepcopy",
    "end_block",
    "enumerate",
    "getattr",
    "len",
    "mne.io.meas_info._check_dates",
    "start_block",
    "write_ch_info",
    "write_coord_trans",
    "write_ctf_comp",
    "write_dig_points",
    "write_float",
    "write_float_matrix",
    "write_id",
    "write_int",
    "write_julian",
    "write_name_list",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.nicolet": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.nicolet.RawNicolet": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "mne.io.nicolet.nicolet.RawNicolet.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "mne.io.nicolet.nicolet.RawNicolet",
    "mne.io.nicolet.nicolet._get_nicolet_info",
    "os.path.abspath",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet.RawNicolet._read_segment_file": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet._get_nicolet_info": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeError",
    "_create_chs",
    "_empty_info",
    "_find_channels",
    "dict",
    "float",
    "int",
    "len",
    "mne.io.nicolet.nicolet.calendar",
    "mne.io.nicolet.nicolet.datetime",
    "numpy.repeat",
    "open",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.read_raw_nicolet": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.io.nicolet.nicolet.RawNicolet"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.tests.test_nicolet": {
  "data": {
   "symbols_in_volume": [
    "mne.io.nicolet.tests.test_nicolet.FILE",
    "mne.io.nicolet.tests.test_nicolet.base_dir",
    "mne.io.nicolet.tests.test_nicolet.inspect",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.nicolet.tests.test_nicolet.FILE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.base_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet.fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.read_raw_nicolet": {
  "data": {
   "shadows": "mne.io.read_raw_nicolet"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.test_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mne.io.nicolet.tests.test_nicolet.fname",
    "mne.io.read_raw_nicolet",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx": {
  "data": {},
  "type": "module"
 },
 "mne.io.nirx.nirx": {
  "data": {},
  "type": "module"
 },
 "mne.io.nirx.nirx.ConfigParser": {
  "data": {
   "shadows": "configparser.ConfigParser"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.RawConfigParser": {
  "data": {
   "shadows": "configparser.RawConfigParser"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.RawNIRX": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "mne.io.nirx.nirx.RawNIRX.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Annotations",
    "RuntimeError",
    "_format_dig_points",
    "_get_trans",
    "any",
    "apply_trans",
    "configparser.ConfigParser",
    "configparser.RawConfigParser",
    "create_info",
    "dict",
    "enumerate",
    "float",
    "get_mni_fiducials",
    "int",
    "len",
    "mne.io.nirx.nirx.RawNIRX",
    "mne.io.nirx.nirx._open",
    "mne.io.nirx.nirx.glob",
    "mne.io.nirx.nirx.re",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.where",
    "numpy.zeros",
    "prepend",
    "range",
    "read_mat",
    "str",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.nirx.RawNIRX.__init__.prepend": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "list",
    "str",
    "str.format"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.nirx.RawNIRX._read_segment_file": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "len",
    "mne.io.nirx.nirx._read_csv_rows_cols",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.nirx._open": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.nirx._read_csv_rows_cols": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "mne.io.nirx.nirx._open",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.nirx.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.nirx.nirx.read_raw_nirx": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.io.nirx.nirx.RawNIRX"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.nirx.tests.test_nirx": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.nirx.tests.test_nirx._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_0": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.nirx.tests.test_nirx.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.short_channels": {
  "data": {
   "shadows": "mne.preprocessing.nirs.short_channels"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.source_detector_distances": {
  "data": {
   "shadows": "mne.preprocessing.nirs.source_detector_distances"
  },
  "type": "import"
 },
 "mne.io.nirx.tests.test_nirx.test_encoding": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2",
    "mne.io.nirx.tests.test_nirx.shutil",
    "mne.io.read_raw_nirx",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_0": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_0",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.source_detector_distances",
    "mne.transforms._get_trans",
    "mne.transforms.apply_trans",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_2": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2",
    "mne.io.read_raw_nirx",
    "mne.transforms._get_trans",
    "mne.transforms.apply_trans",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_15_2_short": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.short_channels",
    "mne.preprocessing.nirs.source_detector_distances",
    "mne.transforms._get_trans",
    "mne.transforms.apply_trans",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.nirx.tests.test_nirx.test_nirx_standard": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_0",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2",
    "mne.io.nirx.tests.test_nirx.fname_nirx_15_2_short",
    "mne.io.nirx.tests.test_nirx.pytest",
    "mne.io.read_raw_nirx",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.open": {
  "data": {},
  "type": "module"
 },
 "mne.io.open.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.open.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "mne.io.open.SEEK_SET": {
  "data": {
   "shadows": "io.SEEK_SET"
  },
  "type": "import"
 },
 "mne.io.open._NoCloseRead": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.open._NoCloseRead.__enter__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.__exit__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.read": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "mne.io.open._NoCloseRead.seek": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "io.SEEK_SET"
   ]
  },
  "type": "function"
 },
 "mne.io.open._fiff_get_fid": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_file_like",
    "gzip.GzipFile",
    "mne.io.open._NoCloseRead",
    "open",
    "os.path.splitext",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.open._find_type": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "any",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.open._get_next_fname": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dir_tree_find",
    "int",
    "os.path.dirname",
    "os.path.join",
    "os.path.split",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.open._show_tree": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Exception",
    "Tag",
    "dict",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.open._find_type",
    "numpy.ndarray",
    "read_tag",
    "scipy.sparse.issparse",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.open.fiff_open": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.BytesIO",
    "list",
    "make_dir_tree",
    "mne.io.open._fiff_get_fid",
    "read_tag",
    "read_tag_info"
   ]
  },
  "type": "function"
 },
 "mne.io.open.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.open.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.open.show_fiff": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "list",
    "mne.io.open._show_tree",
    "mne.io.open.fiff_open",
    "numpy.inf",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.open.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.proj": {
  "data": {},
  "type": "module"
 },
 "mne.io.proj.ProjMixin": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.proj.ProjMixin.add_proj": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "isinstance",
    "list",
    "mne.io.proj.Projection",
    "mne.io.proj._uniquify_projs",
    "mne.io.proj.deactivate_proj"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.apply_proj": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "all",
    "copy.deepcopy",
    "enumerate",
    "isinstance",
    "len",
    "mne.io.proj.setup_proj",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.del_proj": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.ones",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.plot_projs_topomap": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "plot_projs_topomap"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.proj": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "all",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.Projection": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.io.proj.Projection.__deepcopy__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "mne.io.proj.Projection.__repr__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "mne.io.proj.Projection.plot_topomap": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "plot_projs_topomap"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._check_projs": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "TypeError",
    "copy.deepcopy",
    "enumerate",
    "isinstance",
    "list",
    "mne.io.proj.Projection",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._has_eeg_average_ref_proj": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "mne.io.proj._make_projector": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "len",
    "math.sqrt",
    "numpy.dot",
    "numpy.empty",
    "numpy.eye",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.linalg.svd",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._needs_eeg_average_ref_proj": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "len",
    "mne.io.proj._has_eeg_average_ref_proj",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._normalize_proj": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "mne.io.proj._make_projector"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._proj_equal": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._read_proj": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "dir_tree_find",
    "find_tag",
    "int",
    "len",
    "list",
    "mne.io.proj.Projection",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._uniquify_projs": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "any",
    "itertools.count",
    "len",
    "mne.io.proj._proj_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._uniquify_projs.sorter": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "int",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._write_proj": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "end_block",
    "len",
    "start_block",
    "write_float",
    "write_float_matrix",
    "write_int",
    "write_name_list",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.activate_proj": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "mne.io.proj.deactivate_proj": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.proj.make_eeg_average_ref_proj": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "len",
    "mne.io.proj.Projection",
    "numpy.ones",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.make_projector": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mne.io.proj._make_projector"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.make_projector_info": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "mne.io.proj.make_projector"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.proj.setup_proj": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "mne.io.proj._needs_eeg_average_ref_proj",
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_eeg_average_ref_proj",
    "mne.io.proj.make_projector_info"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.io.reference": {
  "data": {},
  "type": "module"
 },
 "mne.io.reference._apply_reference": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_preload",
    "enumerate",
    "len",
    "numpy.intersect1d",
    "pick_channels",
    "pick_types",
    "setup_proj"
   ]
  },
  "type": "function"
 },
 "mne.io.reference._check_can_reref": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "RuntimeError",
    "_validate_type",
    "mne.io.reference._ref_dict"
   ]
  },
  "type": "function"
 },
 "mne.io.reference._copy_channel": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "mne.io.reference._ref_dict": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "mne.io.reference.add_reference_channels": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_has_eeg_average_ref_proj",
    "isinstance",
    "len",
    "list",
    "mne.io.reference.set_eeg_reference",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.vstack",
    "numpy.zeros",
    "pick_types",
    "str",
    "type",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.reference.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.reference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.reference.set_bipolar_reference": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.io.reference._apply_reference",
    "mne.io.reference._check_can_reref",
    "mne.io.reference._copy_channel",
    "numpy.zeros",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.reference.set_eeg_reference": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_check_option",
    "_has_eeg_average_ref_proj",
    "make_eeg_average_ref_proj",
    "mne.io.reference._apply_reference",
    "mne.io.reference._check_can_reref",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.tag": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.io.tag._call_dict",
    "mne.io.tag._call_dict_names",
    "mne.io.tag._read_ch_info_struct",
    "mne.io.tag._read_complex_double",
    "mne.io.tag._read_complex_float",
    "mne.io.tag._read_coord_trans_struct",
    "mne.io.tag._read_dig_point_struct",
    "mne.io.tag._read_dir_entry_struct",
    "mne.io.tag._read_id_struct",
    "mne.io.tag._read_julian",
    "mne.io.tag._read_old_pack",
    "mne.io.tag._read_simple",
    "mne.io.tag._read_string",
    "mne.io.tag._simple_dict"
   ]
  },
  "type": "module"
 },
 "mne.io.tag.Tag": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.tag.Tag.__cmp__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.Tag.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.Tag.__repr__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._call_dict": {
  "data": {
   "lineno": 376
  },
  "type": "constant"
 },
 "mne.io.tag._call_dict_names": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "mne.io.tag._coil_trans_to_loc": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._coord_dict": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "mne.io.tag._data_type": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "mne.io.tag._frombuffer_rows": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.dtype",
    "numpy.frombuffer",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._is_matrix": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "mne.io.tag._loc_to_coil_trans": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._loc_to_eeg_loc": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.array",
    "numpy.isfinite",
    "numpy.newaxis.copy"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._matrix_bit_dtype": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_CCS": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_RCS": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_dense": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mne.io.tag._read_ch_info_struct": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "mne.io.tag._coord_dict",
    "numpy.argmax",
    "numpy.float64",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_complex_double": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "mne.io.tag._frombuffer_rows"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_complex_float": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "mne.io.tag._frombuffer_rows"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_coord_trans_struct": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "Transform",
    "int",
    "numpy.array",
    "numpy.c_",
    "numpy.frombuffer",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_dig_point_struct": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_dir_entry_struct": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mne.io.tag._read_tag_header",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_id_struct": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_julian": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "_julian_to_cal",
    "int",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_matrix": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "RuntimeError",
    "ValueError",
    "int",
    "len",
    "mne.io.tag._data_type",
    "mne.io.tag._matrix_bit_dtype",
    "mne.io.tag._matrix_coding_CCS",
    "mne.io.tag._matrix_coding_RCS",
    "mne.io.tag._matrix_coding_dense",
    "numpy.any",
    "numpy.concatenate",
    "numpy.frombuffer",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_old_pack": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "float",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_simple": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mne.io.tag._frombuffer_rows"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_string": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "mne.io.tag._frombuffer_rows",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_tag_header": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "mne.io.tag.Tag",
    "mne.io.tag.struct"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._simple_dict": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "mne.io.tag.find_tag": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "mne.io.tag.read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.has_tag": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "mne.io.tag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tag.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.tag.read_tag": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "Exception",
    "fun",
    "mne.io.tag._call_dict",
    "mne.io.tag._is_matrix",
    "mne.io.tag._read_matrix",
    "mne.io.tag._read_tag_header"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.read_tag_info": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mne.io.tag._read_tag_header"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.tag.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.io.tests": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.data_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.io.tests.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_apply_function.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.bad_1": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.bad_2": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.bad_3": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.printer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mne.utils.logger.info"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.test_apply_function_verbose": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.tests.test_apply_function.bad_1",
    "mne.io.tests.test_apply_function.bad_2",
    "mne.io.tests.test_apply_function.bad_3",
    "mne.io.tests.test_apply_function.printer",
    "mne.io.tests.test_apply_function.pytest",
    "mne.utils.catch_logging",
    "numpy.zeros",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator": {
  "data": {
   "symbols_in_volume": [
    "mne.io.tests.test_compensator.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_compensator.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.base_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.tests.test_compensator.ctf_comp_fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.tests.test_compensator.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.make_compensator": {
  "data": {
   "shadows": "mne.io.compensator.make_compensator"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.test_compensation": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mne.io.compensator.get_current_comp",
    "mne.io.compensator.make_compensator",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_compensator.ctf_comp_fname",
    "mne.utils._TempDir",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "compensate_mne",
    "make_evoked",
    "mne.io.tests.test_compensator.ctf_comp_fname",
    "mne.pick_types",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne.compensate_mne": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mne.read_evokeds",
    "mne.utils.run_subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne.make_evoked": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.array",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_constants": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_constants.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.FWD": {
  "data": {
   "shadows": "mne.io.constants.FWD"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._aliases": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._dir_ignore_names": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._fetch_file": {
  "data": {
   "shadows": "mne.utils._fetch_file"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._ignore_incomplete_enums": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._missing_coil_def": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants._read_coil_defs": {
  "data": {
   "shadows": "mne.forward._make_forward._read_coil_defs"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants._tag_ignore_names": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.commit": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.iod_dups": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.tests.test_constants.tag_dups": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.tests.test_constants.test_constants": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "dir",
    "enumerate",
    "getattr",
    "int",
    "len",
    "list",
    "mne.forward._make_forward._read_coil_defs",
    "mne.io.constants.FIFF",
    "mne.io.constants.FIFF.FIFFC_MAJOR_VERSION",
    "mne.io.constants.FIFF.FIFFC_MINOR_VERSION",
    "mne.io.constants.FWD.COIL_ACCURACY_ACCURATE",
    "mne.io.tests.test_constants._aliases",
    "mne.io.tests.test_constants._dir_ignore_names",
    "mne.io.tests.test_constants._ignore_incomplete_enums",
    "mne.io.tests.test_constants._missing_coil_def",
    "mne.io.tests.test_constants._tag_ignore_names",
    "mne.io.tests.test_constants.commit",
    "mne.io.tests.test_constants.iod_dups",
    "mne.io.tests.test_constants.re",
    "mne.io.tests.test_constants.shutil",
    "mne.io.tests.test_constants.tag_dups",
    "mne.io.tests.test_constants.zipfile",
    "mne.utils._fetch_file",
    "mne.utils.requires_good_network",
    "numpy.array",
    "open",
    "os.path.basename",
    "os.path.join",
    "set",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_constants.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.tests.test_meas_info.base_dir",
    "mne.io.tests.test_meas_info.data_path",
    "mne.io.tests.test_meas_info.kit_data_dir",
    "mne.io.tests.test_meas_info.pre",
    "mne.io.tests.test_meas_info.sss_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_meas_info.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.DATE_NONE": {
  "data": {
   "shadows": "mne.io.write.DATE_NONE"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Info": {
  "data": {
   "shadows": "mne.io.meas_info.Info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.RAW_INFO_FIELDS": {
  "data": {
   "shadows": "mne.io.meas_info.RAW_INFO_FIELDS"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._add_timedelta_to_stamp": {
  "data": {
   "shadows": "mne.io.meas_info._add_timedelta_to_stamp"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._bad_chans_comp": {
  "data": {
   "shadows": "mne.io.meas_info._bad_chans_comp"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._coil_trans_to_loc": {
  "data": {
   "shadows": "mne.io._coil_trans_to_loc"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._dt_to_stamp": {
  "data": {
   "shadows": "mne.io.meas_info._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._force_update_info": {
  "data": {
   "shadows": "mne.io.meas_info._force_update_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._generate_meas_id": {
  "data": {
   "shadows": "mne.io.write._generate_meas_id"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._get_valid_units": {
  "data": {
   "shadows": "mne.io.meas_info._get_valid_units"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._make_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._make_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._merge_info": {
  "data": {
   "shadows": "mne.io.meas_info._merge_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._read_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._read_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._stamp_to_dt": {
  "data": {
   "shadows": "mne.io.meas_info._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._test_anonymize_info": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "datetime.datetime",
    "datetime.timedelta",
    "datetime.timezone.utc",
    "dict",
    "mne.io.meas_info._add_timedelta_to_stamp",
    "mne.io.meas_info.anonymize_info",
    "mne.io.tests.test_meas_info.pytest",
    "mne.io.write.DATE_NONE",
    "mne.utils.assert_object_equal",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info._write_dig_points": {
  "data": {
   "shadows": "mne.io._digitization._write_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.anonymize_info": {
  "data": {
   "shadows": "mne.io.meas_info.anonymize_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_object_equal": {
  "data": {
   "shadows": "mne.utils.assert_object_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.base_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.chpi_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.create_info": {
  "data": {
   "shadows": "mne.io.meas_info.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.ctf_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.data_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.elp_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.event_name": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.fiducials_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.hsp_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.kit_data_dir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.make_fixed_length_events": {
  "data": {
   "shadows": "mne.event.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.pre": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.raw_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.raw_invalid_bday_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_fiducials": {
  "data": {
   "shadows": "mne.io.read_fiducials"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.sss_ctc_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.sss_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.test_anonymize": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "events",
    "mne.Annotations",
    "mne.Epochs",
    "mne.io.meas_info._dt_to_stamp",
    "mne.io.meas_info._stamp_to_dt",
    "mne.io.meas_info.anonymize_info",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_meas_info._test_anonymize_info",
    "mne.io.tests.test_meas_info.event_name",
    "mne.io.tests.test_meas_info.pytest",
    "mne.io.tests.test_meas_info.raw_fname",
    "mne.read_events",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_check_compensation_consistency": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.make_fixed_length_events",
    "mne.io.meas_info._bad_chans_comp",
    "mne.io.read_raw_ctf",
    "mne.io.tests.test_meas_info.ctf_fname",
    "mne.pick_types",
    "mne.utils.catch_logging",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_check_consistency": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "float",
    "isinstance",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.pytest",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_coil_trans": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mne.io._coil_trans_to_loc",
    "mne.io._loc_to_coil_trans",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_csr_csc": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_info",
    "mne.io.tests.test_meas_info.sss_ctc_fname",
    "mne.io.write_info",
    "mne.pick_info",
    "mne.pick_types",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_duplicate_name_correction": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_equalize_channels": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "mne.channels.equalize_channels",
    "mne.io.meas_info.create_info"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_fiducials_io": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI",
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL",
    "mne.io.read_fiducials",
    "mne.io.tests.test_meas_info.fiducials_fname",
    "mne.io.tests.test_meas_info.pytest",
    "mne.io.write_fiducials",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_field_round_trip": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "dict",
    "mne.io.meas_info.create_info",
    "mne.io.read_info",
    "mne.io.write._generate_meas_id",
    "mne.io.write_info",
    "mne.utils.assert_object_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_get_valid_units": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "mne.io.meas_info._get_valid_units",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_info": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "dict",
    "events",
    "func",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.Epochs",
    "mne.io.meas_info.Info",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_meas_info.event_name",
    "mne.io.tests.test_meas_info.raw_fname",
    "mne.read_events",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_invalid_subject_birthday": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_meas_info.pytest",
    "mne.io.tests.test_meas_info.raw_invalid_bday_fname"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_io_dig_points": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "mne.io._digitization._read_dig_points",
    "mne.io._digitization._write_dig_points",
    "mne.io.tests.test_meas_info.hsp_fname",
    "mne.io.tests.test_meas_info.pytest",
    "numpy.array",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_make_dig_points": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "mne.io._digitization._make_dig_points",
    "mne.io._digitization._read_dig_points",
    "mne.io.constants.FIFF.FIFFV_POINT_NASION",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.elp_fname",
    "mne.io.tests.test_meas_info.hsp_fname",
    "mne.io.tests.test_meas_info.pytest",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_make_info": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "mne.channels.make_standard_montage",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.meas_info.RAW_INFO_FIELDS",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.pytest",
    "numpy.array",
    "numpy.longlong",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_meas_date_convert": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timezone.utc",
    "mne.io.meas_info._dt_to_stamp",
    "mne.io.meas_info._stamp_to_dt",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_merge_info": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "len",
    "mne.io.meas_info._force_update_info",
    "mne.io.meas_info._merge_info",
    "mne.io.meas_info.create_info",
    "mne.io.read_info",
    "mne.io.tests.test_meas_info.pytest",
    "mne.io.tests.test_meas_info.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_read_write_info": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "RuntimeError",
    "datetime.datetime",
    "datetime.timezone.utc",
    "len",
    "mne.io.meas_info.anonymize_info",
    "mne.io.read_info",
    "mne.io.tests.test_meas_info.chpi_fname",
    "mne.io.tests.test_meas_info.hashlib",
    "mne.io.tests.test_meas_info.pytest",
    "mne.io.tests.test_meas_info.raw_fname",
    "mne.io.write_info",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_redundant": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "mne.io.meas_info.create_info"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_repr": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "mne.io.meas_info.create_info",
    "mne.transforms.Transform",
    "numpy.ones",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.write_fiducials": {
  "data": {
   "shadows": "mne.io.write_fiducials"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.write_info": {
  "data": {
   "shadows": "mne.io.write_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick": {
  "data": {
   "symbols_in_volume": [
    "mne.__file__",
    "mne.datasets.testing.data_path",
    "mne.io.tests.test_pick.base_dir",
    "mne.io.tests.test_pick.data_path",
    "mne.io.tests.test_pick.inspect",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_pick.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._assert_channel_types": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mne.io.pick.channel_type",
    "mne.io.tests.test_pick._channel_type_old",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._channel_type_old": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.io.pick.get_channel_type_constants",
    "numpy.array",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._check_fwd_n_chan_consistent": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._contains_ch_type": {
  "data": {
   "shadows": "mne.io.pick._contains_ch_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._get_channel_types": {
  "data": {
   "shadows": "mne.io.pick._get_channel_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._picks_by_type_old": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "mne.io.pick._DATA_CH_TYPES_SPLIT",
    "mne.io.pick._contains_ch_type",
    "mne.pick_types",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._picks_to_idx": {
  "data": {
   "shadows": "mne.io.pick._picks_to_idx"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._root_init_fname": {
  "data": {
   "shadows": "mne.__file__"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_indexing": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "copy.deepcopy",
    "int",
    "len",
    "mne.io.pick._DATA_CH_TYPES_SPLIT",
    "mne.io.pick._picks_by_type",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.tests.test_pick._assert_channel_types",
    "mne.io.tests.test_pick._picks_by_type_old",
    "mne.io.tests.test_pick.pytest",
    "mne.utils.assert_object_equal",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.assert_object_equal": {
  "data": {
   "shadows": "mne.utils.assert_object_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.base_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.channel_type": {
  "data": {
   "shadows": "mne.io.pick.channel_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.ctf_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.fname_mc": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.fname_meeg": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.get_channel_type_constants": {
  "data": {
   "shadows": "mne.io.pick.get_channel_type_constants"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.get_channel_types": {
  "data": {
   "shadows": "mne.io.pick.get_channel_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.io_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels_cov": {
  "data": {
   "shadows": "mne.io.pick.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels_regexp": {
  "data": {
   "shadows": "mne.pick_channels_regexp"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_types_forward": {
  "data": {
   "shadows": "mne.io.pick.pick_types_forward"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.rename_channels": {
  "data": {
   "shadows": "mne.rename_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.test_clean_info_bads": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.__file__",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_pick._assert_channel_types",
    "mne.io.tests.test_pick.pytest",
    "mne.pick_info",
    "mne.pick_types",
    "numpy.testing.assert_equal",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_deprecation": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "mne.io.pick.get_channel_types",
    "mne.io.tests.test_pick.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_bio": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.tests.test_pick.assert_indexing"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_channels_cov": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.pick.pick_channels_cov",
    "mne.make_ad_hoc_cov",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_channels_regexp": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "mne.pick_channels_regexp",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_chpi": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mne.io.pick._get_channel_types",
    "mne.io.read_info",
    "mne.io.tests.test_pick._assert_channel_types",
    "mne.io.tests.test_pick.io_dir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_csd": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.tests.test_pick.assert_indexing"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_fnirs": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.tests.test_pick.assert_indexing"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_forward_seeg_ecog": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_ECOG_CH",
    "mne.io.constants.FIFF.FIFFV_SEEG_CH",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.pick.pick_types_forward",
    "mne.io.tests.test_pick._check_fwd_n_chan_consistent",
    "mne.io.tests.test_pick.fname_meeg",
    "mne.io.tests.test_pick.pytest",
    "mne.read_forward_solution",
    "mne.rename_channels",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_ref": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "mne.io.read_info",
    "mne.io.tests.test_pick.assert_indexing",
    "mne.io.tests.test_pick.ctf_fname",
    "numpy.arange",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_refs": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.io.tests.test_pick._assert_channel_types",
    "mne.io.tests.test_pick.io_dir",
    "mne.io.tests.test_pick.pytest",
    "mne.pick_info",
    "mne.pick_types",
    "mne.utils.catch_logging",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_seeg_ecog": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.pick.channel_type",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_pick.assert_indexing",
    "mne.io.tests.test_pick.io_dir",
    "mne.pick_types",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_picks_by_channels": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.pick._picks_by_type",
    "mne.io.tests.test_pick._assert_channel_types",
    "mne.io.tests.test_pick.pytest",
    "mne.pick_channels",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_picks_to_idx": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dict",
    "len",
    "list",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.pick._picks_to_idx",
    "mne.io.read_info",
    "mne.io.tests.test_pick._assert_channel_types",
    "mne.io.tests.test_pick.fname_mc",
    "mne.io.tests.test_pick.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history": {
  "data": {
   "symbols_in_volume": [
    "mne.io.tests.test_proc_history.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_proc_history.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.base_dir": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.tests.test_proc_history.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.raw_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.tests.test_proc_history.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.test_maxfilter_io": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "all",
    "len",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.items",
    "mne.io.read_info",
    "mne.io.tests.test_proc_history.raw_fname",
    "numpy.array",
    "numpy.diag",
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw": {
  "data": {},
  "type": "module"
 },
 "mne.io.tests.test_raw.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.BaseRaw": {
  "data": {
   "shadows": "mne.io.BaseRaw"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.DigPoint": {
  "data": {
   "shadows": "mne.io._digitization.DigPoint"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._get_valid_units": {
  "data": {
   "shadows": "mne.io.meas_info._get_valid_units"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._raw_annot": {
  "data": {
   "shadows": "mne.utils._raw_annot"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._test_concat": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmin",
    "numpy.testing.assert_allclose",
    "reader"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._test_raw_reader": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "mne.Annotations",
    "mne.concatenate_raws",
    "mne.io._digitization.DigPoint",
    "mne.io.meas_info._get_valid_units",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw.math",
    "mne.utils._TempDir",
    "mne.utils._stamp_to_dt",
    "numpy.append",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "os.path.join",
    "reader",
    "repr",
    "round",
    "set",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.test_5839": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "mne.utils._stamp_to_dt",
    "numpy.testing.assert_array_equal",
    "raw_factory"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_5839.raw_factory": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "mne.Annotations",
    "mne.create_info",
    "mne.io.RawArray",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_get_data_reject": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "mne.Annotations",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.utils.catch_logging",
    "numpy.isnan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_meas_date_orig_time": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.io.tests.test_raw.pytest",
    "mne.utils._raw_annot",
    "mne.utils._stamp_to_dt"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_orig_units": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "mne.create_info",
    "mne.io.BaseRaw",
    "mne.io.tests.test_raw.pytest"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_repr": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.tests.test_raw.re",
    "numpy.zeros",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_time_as_index": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "os.path.dirname",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.test_time_as_index_ref": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.tests.test_raw.pytest",
    "numpy.arange",
    "numpy.empty",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.tests.test_reference.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_reference.BaseEpochs": {
  "data": {
   "shadows": "mne.epochs.BaseEpochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.Projection": {
  "data": {
   "shadows": "mne.io.proj.Projection"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._apply_reference": {
  "data": {
   "shadows": "mne.io.reference._apply_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._check_channel_names": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.pick_channels",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._test_reference": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "mne.epochs.BaseEpochs",
    "mne.pick_types",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.add_reference_channels": {
  "data": {
   "shadows": "mne.add_reference_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.ave_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.data_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.eve_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.fif_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.set_bipolar_reference": {
  "data": {
   "shadows": "mne.set_bipolar_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.set_eeg_reference": {
  "data": {
   "shadows": "mne.set_eeg_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.test_add_reference": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.add_reference_channels",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_reference._check_channel_names",
    "mne.io.tests.test_reference.eve_fname",
    "mne.io.tests.test_reference.fif_fname",
    "mne.io.tests.test_reference.pytest",
    "mne.pick_types",
    "mne.read_events",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_apply_reference": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_MNE_CUSTOM_REF_CSD",
    "mne.io.proj.Projection",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.io.reference._apply_reference",
    "mne.io.tests.test_reference._test_reference",
    "mne.io.tests.test_reference.eve_fname",
    "mne.io.tests.test_reference.fif_fname",
    "mne.io.tests.test_reference.pytest",
    "mne.pick_types",
    "mne.read_events",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_bipolar_combinations": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "_check_bipolar",
    "enumerate",
    "len",
    "list",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.tests.test_reference.itertools",
    "mne.set_bipolar_reference",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_bipolar_combinations._check_bipolar": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_bipolar_reference": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG_BIPOLAR",
    "mne.io.constants.FIFF.FIFFV_EOG_CH",
    "mne.io.constants.FIFF.FIFFV_MEG_CH",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_reference.fif_fname",
    "mne.io.tests.test_reference.pytest",
    "mne.set_bipolar_reference",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_eeg_reference": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.constants.FIFF.FIFFV_MNE_CUSTOM_REF_ON",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_reference._test_reference",
    "mne.io.tests.test_reference.fif_fname",
    "mne.io.tests.test_reference.pytest",
    "mne.pick_types",
    "mne.set_eeg_reference",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_show_fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.io.tests.test_show_fiff.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_show_fiff.base_dir": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.fname_c_annot": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.fname_evoked": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.fname_raw": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.tests.test_show_fiff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_show_fiff.show_fiff": {
  "data": {
   "shadows": "mne.io.show_fiff"
  },
  "type": "import"
 },
 "mne.io.tests.test_show_fiff.test_show_fiff": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "all",
    "mne.io.show_fiff",
    "mne.io.tests.test_show_fiff.fname_c_annot",
    "mne.io.tests.test_show_fiff.fname_evoked",
    "mne.io.tests.test_show_fiff.fname_raw"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.tests.test_utils._check_orig_units": {
  "data": {
   "shadows": "mne.io.utils._check_orig_units"
  },
  "type": "import"
 },
 "mne.io.tests.test_utils.test_check_orig_units": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "mne.io.utils._check_orig_units"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_what": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_what.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.data_path": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.io.tests.test_what.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.test_what": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.tests.test_what.data_path",
    "mne.io.tests.test_what.glob",
    "mne.io.tests.test_what.pytest",
    "mne.preprocessing.ICA",
    "mne.utils.requires_sklearn",
    "mne.what",
    "numpy.random.RandomState",
    "os.path.join",
    "os.path.splitext",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_what.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_what.what": {
  "data": {
   "shadows": "mne.what"
  },
  "type": "import"
 },
 "mne.io.tree": {
  "data": {},
  "type": "module"
 },
 "mne.io.tree.copy_tree": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Tag",
    "_write",
    "end_block",
    "isinstance",
    "len",
    "list",
    "numpy.fromfile",
    "start_block",
    "write_id"
   ]
  },
  "type": "function"
 },
 "mne.io.tree.dir_tree_find": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.io.tree.make_dir_tree": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.utils._blk_read_lims": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._check_orig_units": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_get_valid_units",
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._construct_bids_filename": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "mne.io.utils._create_chs": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._file_size": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "mne.io.utils.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._find_channels": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "any",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._mult_cal_one": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.dot",
    "numpy.take",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._read_segments_file": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "min",
    "mne.io.utils._mult_cal_one",
    "numpy.arange",
    "numpy.dtype",
    "numpy.fromfile",
    "numpy.vstack",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._synthesize_stim_channel": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "events",
    "events.copy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.utils.read_str": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.frombuffer",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.what": {
  "data": {},
  "type": "module"
 },
 "mne.io.what.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.io.what.what": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "_check_fname",
    "_get_args",
    "collections.OrderedDict",
    "dict",
    "func"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm._eloreta": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm._eloreta._R_sqrt_mult": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.matmul",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta._compute_eloreta": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "RuntimeError",
    "_compute_reginv",
    "_handle_default",
    "_normalize_R",
    "_safe_svd",
    "abs",
    "bool",
    "compute_rank_inverse",
    "eigh",
    "mne.minimum_norm._eloreta._R_sqrt_mult",
    "mne.minimum_norm._eloreta._get_G_3",
    "numpy.argsort",
    "numpy.dot",
    "numpy.empty",
    "numpy.errstate",
    "numpy.eye",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.matmul",
    "numpy.mean",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.where",
    "range",
    "sqrtm_sym",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta._compute_eloreta._normalize_R": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta._get_G_3": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.ascontiguousarray"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm._eloreta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.inverse.INVERSE_METHODS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.minimum_norm.inverse.InverseOperator": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.minimum_norm.inverse.InverseOperator.__repr__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.InverseOperator.copy": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mne.minimum_norm.inverse.InverseOperator"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._apply_inverse": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "_check_option",
    "_get_src_type",
    "_make_stc",
    "float",
    "len",
    "mne.minimum_norm.inverse.INVERSE_METHODS",
    "mne.minimum_norm.inverse._assemble_kernel",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_or_prepare",
    "mne.minimum_norm.inverse._check_ori",
    "mne.minimum_norm.inverse._check_reference",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse._subject_from_inverse",
    "mne.minimum_norm.inverse.combine_xyz",
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._apply_inverse_epochs_gen": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_option",
    "_get_src_type",
    "_make_stc",
    "enumerate",
    "is_fixed_orient",
    "len",
    "mne.minimum_norm.inverse.INVERSE_METHODS",
    "mne.minimum_norm.inverse._assemble_kernel",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_or_prepare",
    "mne.minimum_norm.inverse._check_ori",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse._subject_from_inverse",
    "mne.minimum_norm.inverse.combine_xyz",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._assemble_kernel": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ValueError",
    "_get_src_nn",
    "_get_vertno",
    "_normal_orth",
    "all",
    "label_src_vertno_sel",
    "len",
    "numpy.allclose",
    "numpy.c_",
    "numpy.dot",
    "numpy.eye",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.sqrt",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_ch_names": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "_check_compensation_grade",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_or_prepare": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "mne.minimum_norm.inverse.prepare_inverse_operator"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_ori": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_option",
    "_check_src_normal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_reference": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "_needs_eeg_average_ref_proj",
    "enumerate",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._compute_reginv": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "mne.minimum_norm.inverse.compute_rank_inverse",
    "numpy.array",
    "numpy.errstate",
    "numpy.float64",
    "numpy.where",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._prepare_forward": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "ValueError",
    "_select_orient_forward",
    "compute_depth_prior",
    "compute_orient_prior",
    "compute_whitener",
    "convert_forward_solution",
    "float",
    "is_fixed_orient",
    "len",
    "mne.minimum_norm.inverse.combine_xyz",
    "numpy.dot",
    "numpy.ones",
    "numpy.sqrt",
    "prepare_noise_cov",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._subject_from_inverse": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "mne.minimum_norm.inverse._apply_inverse"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_cov": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "Covariance",
    "EvokedArray",
    "_check_option",
    "_validate_type",
    "len",
    "mne.minimum_norm.inverse.InverseOperator",
    "mne.minimum_norm.inverse._apply_inverse",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "numpy.eye",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.sum",
    "pick_channels",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_epochs": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "mne.minimum_norm.inverse._apply_inverse_epochs_gen"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_raw": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "_check_option",
    "_get_src_type",
    "_make_stc",
    "float",
    "int",
    "len",
    "mne.minimum_norm.inverse.INVERSE_METHODS",
    "mne.minimum_norm.inverse._assemble_kernel",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_or_prepare",
    "mne.minimum_norm.inverse._check_ori",
    "mne.minimum_norm.inverse._check_reference",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse._subject_from_inverse",
    "mne.minimum_norm.inverse.combine_xyz",
    "numpy.ceil",
    "numpy.dot",
    "numpy.empty",
    "numpy.result_type",
    "range",
    "time_func"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.combine_xyz": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.iscomplexobj",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.compute_rank_inverse": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "make_projector",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.estimate_snr": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "bool",
    "len",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_reference",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse.compute_rank_inverse",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "numpy.dot",
    "numpy.empty",
    "numpy.inf",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "range",
    "scipy.stats.chi2.isf",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.make_inverse_operator": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "_check_depth",
    "_safe_svd",
    "channel_type",
    "copy.deepcopy",
    "dict",
    "mne.minimum_norm.inverse.InverseOperator",
    "mne.minimum_norm.inverse._prepare_forward",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.prepare_inverse_operator": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "_compute_eloreta",
    "compute_whitener",
    "float",
    "len",
    "make_projector",
    "math.sqrt",
    "mne.minimum_norm.inverse.InverseOperator",
    "mne.minimum_norm.inverse._compute_reginv",
    "mne.minimum_norm.inverse.combine_xyz",
    "nrm2",
    "numpy.abs",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.linalg.get_blas_funcs"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.read_inverse_operator": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Covariance",
    "Exception",
    "ValueError",
    "_ensure_trans",
    "_read_cov",
    "_read_forward_meas_info",
    "_read_named_matrix",
    "_read_proj",
    "_read_source_spaces_from_tree",
    "check_fname",
    "dict",
    "dir_tree_find",
    "fiff_open",
    "find_source_space_hemi",
    "find_tag",
    "getattr",
    "int",
    "len",
    "mne.minimum_norm.inverse.InverseOperator",
    "range",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.write_inverse_operator": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "_transpose_named_matrix",
    "_validate_type",
    "_write_cov",
    "_write_proj",
    "_write_source_spaces_to_fid",
    "check_fname",
    "end_block",
    "end_file",
    "mne.minimum_norm.inverse.InverseOperator",
    "start_block",
    "start_file",
    "write_coord_trans",
    "write_float",
    "write_float_matrix",
    "write_forward_meas_info",
    "write_int",
    "write_named_matrix",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.psf_ctf._get_matrix_from_inverse_operator": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "EvokedArray",
    "RuntimeError",
    "apply_inverse",
    "len",
    "mne.minimum_norm.psf_ctf._prepare_info",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.intersect1d",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.sum",
    "numpy.vstack",
    "scipy.linalg.svd",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf._pick_leadfield": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pick_channels"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf._prepare_info": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf.cross_talk_function": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "SourceEstimate",
    "_subject_from_inverse",
    "convert_forward_solution",
    "deprecated",
    "mne.minimum_norm.psf_ctf._get_matrix_from_inverse_operator",
    "mne.minimum_norm.psf_ctf._pick_leadfield",
    "numpy.abs",
    "numpy.dot",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.minimum_norm.psf_ctf.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.psf_ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.psf_ctf.point_spread_function": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "EvokedArray",
    "_check_option",
    "apply_inverse",
    "convert_forward_solution",
    "deprecated",
    "len",
    "mne.minimum_norm.psf_ctf._pick_leadfield",
    "mne.minimum_norm.psf_ctf._prepare_info",
    "numpy.concatenate",
    "numpy.intersect1d",
    "numpy.newaxis",
    "numpy.newaxis.T",
    "numpy.r_.T",
    "numpy.searchsorted",
    "numpy.sum",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.tests.test_inverse": {
  "data": {
   "symbols_in_volume": [
    "list",
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.tests.test_inverse._fast_methods",
    "mne.minimum_norm.tests.test_inverse.s_path",
    "mne.minimum_norm.tests.test_inverse.s_path_bem",
    "mne.minimum_norm.tests.test_inverse.snr",
    "mne.minimum_norm.tests.test_inverse.test_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_inverse.Covariance": {
  "data": {
   "shadows": "mne.Covariance"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.INVERSE_METHODS": {
  "data": {
   "shadows": "mne.minimum_norm.INVERSE_METHODS"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._compare": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "mne.minimum_norm.tests.test_inverse.last_keys",
    "numpy.ndarray",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "print",
    "scipy.sparse.csr.csr_matrix",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.EvokedArray",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.eye",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._compare_io": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare",
    "mne.minimum_norm.tests.test_inverse.copy",
    "mne.minimum_norm.write_inverse_operator",
    "mne.utils._TempDir",
    "os.path.join",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._fast_methods": {
  "data": {
   "lineno": 800
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse._get_src_nn": {
  "data": {
   "shadows": "mne.source_space._get_src_nn"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._normal_orth": {
  "data": {
   "shadows": "mne.surface._normal_orth"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_forward": {
  "data": {
   "shadows": "mne.forward.apply_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_cov": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_raw": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_raw"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.compute_rank_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.compute_rank_inverse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.fname_bem": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_cov": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_data": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_event": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_full": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_fwd": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_nodepth": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_meeg_diag": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_label": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_raw": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_raw_ctf": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_trans": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_vol_inv": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.is_fixed_orient": {
  "data": {
   "shadows": "mne.forward.is_fixed_orient"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.lambda2": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.last_keys": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_channels_forward": {
  "data": {
   "shadows": "mne.pick_channels_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.prepare_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.prepare_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution_eeg": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.pick_types_forward",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.pick_types_forward",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_source_estimate": {
  "data": {
   "shadows": "mne.source_estimate.read_source_estimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.restrict_forward_to_stc": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_stc"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.s_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.s_path_bem": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.snr": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.src_fname": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_cov": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "ValueError",
    "mne.compute_raw_covariance",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.apply_inverse_cov",
    "mne.minimum_norm.apply_inverse_raw",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._fast_methods",
    "mne.minimum_norm.tests.test_inverse.fname_inv",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "numpy.cov",
    "numpy.diag",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_eLORETA_MNE_equiv": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_operator": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "mne.label.read_label",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.compute_rank_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv",
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_sphere": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.EvokedArray",
    "mne.SourceEstimate",
    "mne.forward.restrict_forward_to_stc",
    "mne.make_ad_hoc_cov",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.write_inverse_operator",
    "mne.read_forward_solution",
    "mne.utils._TempDir",
    "numpy.arange",
    "numpy.argmax",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "os.path.join",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_epochs": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.epochs.Epochs",
    "mne.event.read_events",
    "mne.io.read_raw_fif",
    "mne.label.label_sign_flip",
    "mne.label.read_label",
    "mne.minimum_norm.apply_inverse_epochs",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_event",
    "mne.minimum_norm.tests.test_inverse.fname_full",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.pick_types",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_fixed_raw": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.apply_inverse_raw",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_raw": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.apply_inverse_raw",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_full",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_ctf_comp": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_ad_hoc_cov",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.minimum_norm.apply_inverse_raw",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_raw_ctf",
    "mne.minimum_norm.tests.test_inverse.mne",
    "mne.minimum_norm.tests.test_inverse.pytest"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_channel_ordering": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.convert_forward_solution",
    "mne.make_forward_solution",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_bem",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_trans",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.src_fname",
    "mne.read_cov",
    "mne.utils.catch_logging",
    "numpy.arange",
    "numpy.ix_",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_noise_cov_rank": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "dict",
    "mne.minimum_norm.compute_rank_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_eeg",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_volume": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_vol_inv",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.source_estimate.VolSourceEstimate",
    "mne.source_estimate.read_source_estimate",
    "mne.utils._TempDir",
    "numpy.all",
    "numpy.linalg.norm",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_residual": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "float",
    "mne.convert_forward_solution",
    "mne.forward.apply_forward",
    "mne.io.proj.make_projector",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.re",
    "mne.pick_channels_forward",
    "mne.read_forward_solution",
    "mne.utils.catch_logging",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_io_inverse_operator": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "mne.Covariance",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare",
    "mne.minimum_norm.tests.test_inverse._compare_io",
    "mne.minimum_norm.tests.test_inverse.fname_inv",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.write_inverse_operator",
    "mne.utils._TempDir",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_localization_bias_fixed": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "dict",
    "mne.convert_forward_solution",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "numpy.abs",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_localization_bias_free": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "dict",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "numpy.argmax",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_localization_bias_loose": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "dict",
    "mne.convert_forward_solution",
    "mne.forward.is_fixed_orient",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_bads": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "len",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_diag": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.minimum_norm.compute_rank_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse._compare_io",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv_meeg_diag",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_fixed": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.convert_forward_solution",
    "mne.minimum_norm.compute_rank_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth",
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_nodepth",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.utils.catch_logging",
    "numpy.testing.assert_allclose",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_free": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ValueError",
    "mne.convert_forward_solution",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_loose": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "dict",
    "mne.convert_forward_solution",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse._compare_io",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "mne.utils.catch_logging",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_vector": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "mne.combine_evoked",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_data",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_evokeds",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_orientation_prior": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "list",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.source_space._get_src_nn",
    "mne.surface._normal_orth",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "numpy.matmul",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.test_warn_inverse_operator": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "RuntimeWarning",
    "list",
    "mne.convert_forward_solution",
    "mne.minimum_norm.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.write_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.write_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_psf_ctf.data_path",
    "mne.minimum_norm.tests.test_psf_ctf.snr",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_psf_ctf.cross_talk_function": {
  "data": {
   "shadows": "mne.minimum_norm.cross_talk_function"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.data_path": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_fwd": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meeg": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meg": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_label": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.lambda2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.point_spread_function": {
  "data": {
   "shadows": "mne.minimum_norm.point_spread_function"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.snr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.test_psf_ctf": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.cross_talk_function",
    "mne.minimum_norm.point_spread_function",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_psf_ctf.fname_fwd",
    "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meeg",
    "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meg",
    "mne.minimum_norm.tests.test_psf_ctf.fname_label",
    "mne.minimum_norm.tests.test_psf_ctf.lambda2",
    "mne.minimum_norm.tests.test_psf_ctf.mne",
    "mne.minimum_norm.tests.test_psf_ctf.pytest",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_psf_ctf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_resolution_matrix.data_path",
    "numpy.random.RandomState",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_cov": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_evoked": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_fwd": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_inv": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_inv_vol": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_raw": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_src": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_src_3": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_src_fs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_stc": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_t1": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_vol": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.fname_vsrc": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.get_cross_talk": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.get_cross_talk"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.get_point_spread": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.get_point_spread"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.make_inverse_resolution_matrix": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.rng": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.subjects_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.test_resolution_matrix": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.resolution_matrix.get_cross_talk",
    "mne.minimum_norm.resolution_matrix.get_point_spread",
    "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix",
    "mne.minimum_norm.tests.test_resolution_matrix.fname_cov",
    "mne.minimum_norm.tests.test_resolution_matrix.fname_evoked",
    "mne.minimum_norm.tests.test_resolution_matrix.fname_fwd",
    "mne.minimum_norm.tests.test_resolution_matrix.mne",
    "numpy.abs",
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_resolution_matrix.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_resolution_metrics.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_resolution_metrics._rectify_resolution_matrix": {
  "data": {
   "shadows": "mne.minimum_norm.spatial_resolution._rectify_resolution_matrix"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.data_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_cov": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_evoked": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_fwd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.fname_inv": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.make_inverse_resolution_matrix": {
  "data": {
   "shadows": "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.resolution_metrics": {
  "data": {
   "shadows": "mne.minimum_norm.spatial_resolution.resolution_metrics"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.subjects_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.test_resolution_metrics": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.resolution_matrix.make_inverse_resolution_matrix",
    "mne.minimum_norm.spatial_resolution._rectify_resolution_matrix",
    "mne.minimum_norm.spatial_resolution.resolution_metrics",
    "mne.minimum_norm.tests.test_resolution_metrics.fname_cov",
    "mne.minimum_norm.tests.test_resolution_metrics.fname_evoked",
    "mne.minimum_norm.tests.test_resolution_metrics.fname_fwd",
    "mne.minimum_norm.tests.test_resolution_metrics.mne",
    "mne.minimum_norm.tests.test_resolution_metrics.pytest",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_resolution_metrics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_snr.s_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_snr._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.estimate_snr": {
  "data": {
   "shadows": "mne.minimum_norm.estimate_snr"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.fname_evoked": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.fname_inv": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.s_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.test_snr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.estimate_snr",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_snr.fname_evoked",
    "mne.minimum_norm.tests.test_snr.fname_inv",
    "mne.minimum_norm.tests.test_snr.os",
    "mne.read_evokeds",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.loadtxt",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_snr.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_time_frequency.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_time_frequency.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.INVERSE_METHODS": {
  "data": {
   "shadows": "mne.minimum_norm.INVERSE_METHODS"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.compute_source_psd": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.compute_source_psd"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.compute_source_psd_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.compute_source_psd_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_data": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_inv": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_label": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.prepare_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.prepare_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.psd_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.multitaper.psd_array_multitaper"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.source_band_induced_power": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.source_band_induced_power"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.source_induced_power": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.source_induced_power"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_source_psd": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_MNE_FREE_ORI",
    "mne.io.read_raw_fif",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_time_frequency.fname_data",
    "mne.minimum_norm.tests.test_time_frequency.fname_inv",
    "mne.minimum_norm.tests.test_time_frequency.pytest",
    "mne.minimum_norm.time_frequency.compute_source_psd",
    "numpy.argmax",
    "numpy.sum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_source_psd_epochs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.apply_inverse_epochs",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_time_frequency.fname_data",
    "mne.minimum_norm.tests.test_time_frequency.fname_inv",
    "mne.minimum_norm.tests.test_time_frequency.fname_label",
    "mne.minimum_norm.tests.test_time_frequency.pytest",
    "mne.minimum_norm.time_frequency.compute_source_psd_epochs",
    "mne.pick_types",
    "mne.time_frequency.multitaper.psd_array_multitaper",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_tfr_with_inverse_operator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "list",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.INVERSE_METHODS",
    "mne.minimum_norm.prepare_inverse_operator",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_time_frequency.fname_data",
    "mne.minimum_norm.tests.test_time_frequency.fname_inv",
    "mne.minimum_norm.tests.test_time_frequency.fname_label",
    "mne.minimum_norm.tests.test_time_frequency.pytest",
    "mne.minimum_norm.time_frequency.source_band_induced_power",
    "mne.minimum_norm.time_frequency.source_induced_power",
    "mne.pick_types",
    "numpy.all",
    "numpy.arange",
    "numpy.max",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.time_frequency._compute_pow_plv": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mne.minimum_norm.time_frequency._prepare_tfr",
    "mne.minimum_norm.time_frequency._single_epoch_tfr",
    "numpy.complex",
    "numpy.dot",
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._compute_source_psd_epochs": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "EvokedArray",
    "ProgressBar",
    "RuntimeError",
    "_compute_mt_params",
    "_make_stc",
    "_mt_spectra",
    "_psd_from_mt",
    "_subject_from_inverse",
    "combine_xyz",
    "enumerate",
    "isinstance",
    "len",
    "min",
    "mne.minimum_norm.time_frequency._prepare_source_params",
    "my_psd_from_mt_adaptive",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.dot",
    "numpy.empty",
    "numpy.eye",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "parallel",
    "parallel_func",
    "pick_info",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._prepare_source_params": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_assemble_kernel",
    "_check_or_prepare",
    "_pick_channels_inverse_operator",
    "len",
    "numpy.sum",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._prepare_tfr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._single_epoch_tfr": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "combine_xyz",
    "cwt",
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.asfortranarray",
    "numpy.complex",
    "numpy.dot",
    "numpy.float",
    "numpy.imag",
    "numpy.real",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._source_induced_power": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "len",
    "min",
    "mne.minimum_norm.time_frequency._compute_pow_plv",
    "mne.minimum_norm.time_frequency._prepare_source_params",
    "morlet",
    "my_compute_source_tfrs",
    "numpy.abs",
    "numpy.array_split",
    "numpy.newaxis",
    "parallel",
    "parallel_func",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.compute_source_psd": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "Epochs",
    "ValueError",
    "events",
    "float",
    "int",
    "make_fixed_length_events",
    "mne.minimum_norm.time_frequency.compute_source_psd_epochs",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.compute_source_psd_epochs": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "list",
    "mne.minimum_norm.time_frequency._compute_source_psd_epochs"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.source_band_induced_power": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_check_option",
    "_log_rescale",
    "_make_stc",
    "_subject_from_inverse",
    "dict",
    "enumerate",
    "float",
    "mne.minimum_norm.time_frequency._source_induced_power",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.mean",
    "rescale"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.source_induced_power": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_check_option",
    "_check_ori",
    "mne.minimum_norm.time_frequency._source_induced_power",
    "rescale"
   ]
  },
  "type": "function"
 },
 "mne.misc": {
  "data": {},
  "type": "module"
 },
 "mne.misc.parse_config": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "mne.misc.read_reject_parameters",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.misc.read_flat_parameters": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict",
    "float",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.misc.read_reject_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "float",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.parallel": {
  "data": {
   "symbols_in_volume": [
    "mne.parallel.os"
   ]
  },
  "type": "module"
 },
 "mne.parallel.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "mne.parallel._check_wrapper": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "mne.parallel._check_wrapper.run": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "RuntimeError",
    "fun",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.parallel._force_serial": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.parallel.check_n_jobs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "isinstance",
    "min",
    "mne.parallel._force_serial",
    "mne.parallel.multiprocessing",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.parallel.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "mne.parallel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.parallel.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "mne.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.parallel.parallel_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ImportError",
    "_get_args",
    "get_config",
    "isinstance",
    "list",
    "mne.parallel._check_wrapper",
    "mne.parallel.check_n_jobs",
    "mne.parallel.logging",
    "parallel",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.Parallel.__init__",
    "sklearn.externals.joblib.delayed",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.parallel.parallel_func.parallel_progress": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ProgressBar",
    "parallel"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._csd": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._csd._compute_csd": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing._csd._prepare_G": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "numpy.sum",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing._csd.compute_current_source_density": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "_calc_g",
    "_calc_h",
    "_ensure_int",
    "_validate_type",
    "any",
    "bool",
    "fit_sphere_to_headshape",
    "isinstance",
    "len",
    "mne.preprocessing._csd._compute_csd",
    "mne.preprocessing._csd._prepare_G",
    "numpy.array",
    "numpy.dot",
    "numpy.isclose",
    "numpy.isfinite",
    "pick_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing._csd.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing._csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._fine_cal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal.read_fine_calibration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_fname",
    "check_fname",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal.write_fine_calibration": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_check_fname",
    "check_fname",
    "enumerate",
    "map",
    "numpy.concatenate",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing._peak_finder": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._peak_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._peak_finder.peak_finder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "_pl",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.argmax",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.finfo",
    "numpy.int",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "numpy.sign",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.artifact_detection": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.artifact_detection._annotations_from_mask": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Annotations",
    "len",
    "numpy.nonzero",
    "range",
    "scipy.ndimage.measurements.label"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.artifact_detection.annotate_movement": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Annotations",
    "_angle_between_quats",
    "_annotations_starts_stops",
    "_mask_to_onsets_offsets",
    "_quat_to_affine",
    "apply_trans",
    "len",
    "mne.preprocessing.artifact_detection._annotations_from_mask",
    "numpy.any",
    "numpy.append",
    "numpy.array",
    "numpy.average",
    "numpy.concatenate",
    "numpy.deg2rad",
    "numpy.diff",
    "numpy.linalg.norm",
    "numpy.rad2deg",
    "numpy.sqrt",
    "numpy.tile",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.artifact_detection.compute_average_dev_head_t": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Transform",
    "_annotations_starts_stops",
    "_average_quats",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "quat_to_rot",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.artifact_detection.label": {
  "data": {
   "shadows": "scipy.ndimage.measurements.label"
  },
  "type": "import"
 },
 "mne.preprocessing.artifact_detection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.bads": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.bads._find_outliers": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.bool",
    "numpy.ma.masked_array",
    "numpy.max",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.stats.zscore"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.bads.find_outliers": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "deprecated",
    "mne.preprocessing.bads._find_outliers"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.bads.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.bads.zscore": {
  "data": {
   "shadows": "scipy.stats.zscore"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ctps_._compute_normalized_phase": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.angle",
    "numpy.pi",
    "scipy.signal.hilbert"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_._prob_kuiper": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mne.preprocessing.ctps_.math",
    "numpy.arange",
    "numpy.size",
    "numpy.where",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.ctps": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "mne.preprocessing.ctps_._compute_normalized_phase",
    "mne.preprocessing.ctps_.kuiper",
    "numpy.transpose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.kuiper": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.preprocessing.ctps_._prob_kuiper",
    "numpy.arange",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.ecg": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ecg._get_ecg_channel_index": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pick_channels",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg._make_ecg": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "numpy.hstack",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.create_ecg_epochs": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "Epochs",
    "RawArray",
    "ValueError",
    "_picks_to_idx",
    "create_info",
    "events",
    "mne.preprocessing.ecg.find_ecg_events"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.find_ecg_events": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_annotations_starts_stops",
    "enumerate",
    "filter_data",
    "int",
    "len",
    "list",
    "mne.preprocessing.ecg._get_ecg_channel_index",
    "mne.preprocessing.ecg._make_ecg",
    "mne.preprocessing.ecg.qrs_detector",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.ecg.qrs_detector": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "filter_data",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.diff",
    "numpy.empty",
    "numpy.int",
    "numpy.logical_and",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.sqrt",
    "numpy.std",
    "numpy.sum",
    "numpy.where",
    "round",
    "str",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.eog._find_eog_events": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "filter_data",
    "int",
    "len",
    "numpy.abs",
    "numpy.argmax",
    "numpy.array",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.minimum",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "peak_finder"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog._get_eog_channel_index": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_pl",
    "isinstance",
    "len",
    "pick_channels",
    "pick_types",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog.create_eog_epochs": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Epochs",
    "events",
    "mne.preprocessing.eog.find_eog_events"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog.find_eog_events": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "mne.preprocessing.eog._find_eog_events",
    "mne.preprocessing.eog._get_eog_channel_index",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.flat": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.flat.mark_flat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ProgressBar",
    "_annotations_starts_stops",
    "_mask_to_onsets_offsets",
    "_picks_to_idx",
    "_pl",
    "_validate_type",
    "bool",
    "float",
    "int",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.round",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.flat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.infomax_.infomax": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "int",
    "min",
    "mne.preprocessing.infomax_.math",
    "numpy.abs",
    "numpy.dot",
    "numpy.exp",
    "numpy.fix",
    "numpy.float64",
    "numpy.floor",
    "numpy.identity",
    "numpy.max",
    "numpy.ones",
    "numpy.pi",
    "numpy.reshape",
    "numpy.sign",
    "numpy.sum",
    "numpy.tanh",
    "numpy.zeros",
    "random_permutation",
    "range",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.infomax_.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.maxfilter": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.maxfilter._mxwarn": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.maxfilter.apply_maxfilter": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError",
    "fit_sphere_to_headshape",
    "isinstance",
    "list",
    "map",
    "mne.preprocessing.maxfilter._mxwarn",
    "mne.preprocessing.maxfilter.os",
    "print",
    "read_raw_fif",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.maxfilter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._beer_lambert_law": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._beer_lambert_law._load_absorption": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "interp_hb",
    "interp_hbo",
    "numpy.array",
    "os.path.dirname",
    "os.path.join",
    "scipy.interpolate.interp1d",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._beer_lambert_law.beer_lambert_law": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_channel_frequencies",
    "_check_channels_ordered",
    "_validate_type",
    "dict",
    "enumerate",
    "mne.preprocessing.nirs._beer_lambert_law._load_absorption",
    "numpy.unique",
    "scipy.linalg.pinv",
    "source_detector_distances"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._beer_lambert_law.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._beer_lambert_law.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._optical_density": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._optical_density.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._optical_density.optical_density": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_picks_to_idx",
    "_validate_type",
    "numpy.abs",
    "numpy.any",
    "numpy.log",
    "numpy.mean",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs._scalp_coupling_index": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs._scalp_coupling_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs._scalp_coupling_index.scalp_coupling_index": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "_channel_frequencies",
    "_check_channels_ordered",
    "_validate_type",
    "filter_data",
    "len",
    "numpy.corrcoef",
    "numpy.unique",
    "numpy.zeros",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.nirs.nirs._channel_frequencies": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_picks_to_idx",
    "int",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs._check_channels_ordered": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "float",
    "int",
    "len",
    "mne.preprocessing.nirs.nirs.re"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs._fnirs_check_bads": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeError",
    "_picks_to_idx",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs._fnirs_spread_bads": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_picks_to_idx",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs.nirs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs.nirs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.preprocessing.nirs.nirs.short_channels": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mne.preprocessing.nirs.nirs.source_detector_distances"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.nirs.nirs.source_detector_distances": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_picks_to_idx",
    "float",
    "numpy.array",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.otp": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.otp._svd_cov": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "float",
    "numpy.dot",
    "numpy.finfo",
    "numpy.ones",
    "numpy.sqrt",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.otp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.otp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.otp.oversampled_temporal_projection": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_get_lims_cola",
    "_normalize_vectors",
    "_picks_to_idx",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "mne.preprocessing.otp._svd_cov",
    "numpy.array",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.ix_",
    "numpy.mean",
    "range",
    "round",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ssp._compute_exg_proj": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Epochs",
    "compute_proj_epochs",
    "compute_proj_evoked",
    "copy",
    "copy.deepcopy",
    "events",
    "events.shape",
    "find_ecg_events",
    "find_eog_events",
    "len",
    "make_eeg_average_ref_proj",
    "mne.preprocessing.ssp._safe_del_key",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp._safe_del_key": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.compute_proj_ecg": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "copy",
    "dict",
    "mne.preprocessing.ssp._compute_exg_proj"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.compute_proj_eog": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "copy",
    "dict",
    "mne.preprocessing.ssp._compute_exg_proj",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.preprocessing.ssp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.stim": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.stim._fix_artifact": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.stim._get_window": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.ones",
    "numpy.r_.T",
    "scipy.signal.hann"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.stim.fix_stim_artifact": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_check_option",
    "_check_preload",
    "_pick_data_channels",
    "events",
    "find_events",
    "int",
    "isinstance",
    "len",
    "mne.preprocessing.stim._fix_artifact",
    "mne.preprocessing.stim._get_window",
    "numpy.arange",
    "numpy.ceil",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.stim.hann": {
  "data": {
   "shadows": "scipy.signal.hann"
  },
  "type": "import"
 },
 "mne.preprocessing.stim.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.preprocessing.stim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.tests.test_artifact_detection": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_artifact_detection.data_path",
    "mne.preprocessing.tests.test_artifact_detection.pre",
    "mne.preprocessing.tests.test_artifact_detection.sss_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_artifact_detection.annotate_movement": {
  "data": {
   "shadows": "mne.preprocessing.annotate_movement"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.compute_average_dev_head_t": {
  "data": {
   "shadows": "mne.preprocessing.compute_average_dev_head_t"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.data_path": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.pos_fname": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.pre": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.raw_fname": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_artifact_detection.sss_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_artifact_detection.test_movement_annotation_head_correction": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.preprocessing.annotate_movement",
    "mne.preprocessing.compute_average_dev_head_t",
    "mne.preprocessing.tests.test_artifact_detection.pos_fname",
    "mne.preprocessing.tests.test_artifact_detection.raw_fname",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_artifact_detection.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.BaseRaw": {
  "data": {
   "shadows": "mne.io.BaseRaw"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law._validate_type": {
  "data": {
   "shadows": "mne.utils._validate_type"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2_short": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.read_mat": {
  "data": {
   "shadows": "mne.externals.pymatreader.read_mat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.test_beer_lambert": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.BaseRaw",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0",
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2",
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_2_short",
    "mne.preprocessing.tests.test_beer_lambert_law.pytest",
    "mne.utils._validate_type"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.test_beer_lambert_unordered_errors": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0",
    "mne.preprocessing.tests.test_beer_lambert_law.pytest"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.test_beer_lambert_v_matlab": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.pymatreader.read_mat",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_beer_lambert_law.fname_nirx_15_0",
    "numpy.mean",
    "os.path.join",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_beer_lambert_law.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_csd.data_path",
    "mne.preprocessing.tests.test_csd.io_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_csd.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd._calc_g": {
  "data": {
   "shadows": "mne.channels.interpolation._calc_g"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd._calc_h": {
  "data": {
   "shadows": "mne.channels.interpolation._calc_h"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.compute_current_source_density": {
  "data": {
   "shadows": "mne.preprocessing.compute_current_source_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.csd_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.data_path": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.eeg_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.io_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.raw_epochs_sphere": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "events",
    "mne.Annotations",
    "mne.Epochs",
    "mne.channels.make_standard_montage",
    "mne.create_info",
    "mne.datasets.testing._pytest_param",
    "mne.events_from_annotations",
    "mne.io.RawArray",
    "mne.preprocessing.tests.test_csd.eeg_fname",
    "mne.preprocessing.tests.test_csd.pytest",
    "numpy.arange",
    "numpy.repeat",
    "range",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.raw_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_csd.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_csd.test_csd_degenerate": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.preprocessing.compute_current_source_density",
    "mne.preprocessing.tests.test_csd.pytest",
    "mne.preprocessing.tests.test_csd.raw_epochs_sphere",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.test_csd_fif": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG_CSD",
    "mne.io.constants.FIFF.FIFFV_MNE_CUSTOM_REF_CSD",
    "mne.io.constants.FIFF.FIFF_UNIT_V",
    "mne.io.constants.FIFF.FIFF_UNIT_V_M2",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.compute_current_source_density",
    "mne.preprocessing.tests.test_csd.raw_fname",
    "mne.utils.object_diff"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.test_csd_matlab": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.channels.interpolation._calc_g",
    "mne.channels.interpolation._calc_h",
    "mne.channels.make_standard_montage",
    "mne.pick_types",
    "mne.preprocessing.compute_current_source_density",
    "mne.preprocessing.tests.test_csd.csd_fname",
    "mne.preprocessing.tests.test_csd.pytest",
    "mne.preprocessing.tests.test_csd.raw_epochs_sphere",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_csd.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps": {
  "data": {
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.preprocessing.tests.test_ctps.Ws",
    "mne.preprocessing.tests.test_ctps.n_samples",
    "mne.preprocessing.tests.test_ctps.roll_to",
    "mne.preprocessing.tests.test_ctps.sfreq",
    "mne.preprocessing.tests.test_ctps.single_trial",
    "mne.preprocessing.tests.test_ctps.times",
    "mne.preprocessing.tests.test_ctps.tmin",
    "mne.preprocessing.tests.test_ctps.tstep",
    "mne.time_frequency.morlet",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.real",
    "numpy.roll",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ctps.Ws": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps._compute_normalized_phase": {
  "data": {
   "shadows": "mne.preprocessing.ctps_._compute_normalized_phase"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps._prob_kuiper": {
  "data": {
   "shadows": "mne.preprocessing.ctps_._prob_kuiper"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.ctps": {
  "data": {
   "shadows": "mne.preprocessing.ctps_.ctps"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.get_data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_ctps.rng",
    "mne.preprocessing.tests.test_ctps.single_trial",
    "numpy.array",
    "numpy.concatenate",
    "numpy.roll",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ctps.iter_test_ctps": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.morlet": {
  "data": {
   "shadows": "mne.time_frequency.morlet"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.n_samples": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.rng": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.roll_to": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.sfreq": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.single_trial": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.test_ctps": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.preprocessing.ctps_._compute_normalized_phase",
    "mne.preprocessing.ctps_._prob_kuiper",
    "mne.preprocessing.ctps_.ctps",
    "mne.preprocessing.tests.test_ctps.get_data",
    "mne.preprocessing.tests.test_ctps.iter_test_ctps",
    "mne.preprocessing.tests.test_ctps.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ctps.times": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.tmin": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.tstep": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_ecg.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ecg.create_ecg_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_ecg_epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.data_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.event_fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.find_ecg_events": {
  "data": {
   "shadows": "mne.preprocessing.find_ecg_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.proj_fname": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.raw_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.test_find_ecg": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "len",
    "list",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.create_ecg_epochs",
    "mne.preprocessing.find_ecg_events",
    "mne.preprocessing.tests.test_ecg.pytest",
    "mne.preprocessing.tests.test_ecg.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.base_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.generate_data_for_comparing_against_eeglab_infomax": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.utils.random_permutation",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.std",
    "os.path.join",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.infomax": {
  "data": {
   "shadows": "mne.preprocessing.infomax_.infomax"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pinv": {
  "data": {
   "shadows": "scipy.linalg.pinv"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.random_permutation": {
  "data": {
   "shadows": "mne.utils.random_permutation"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.test_mne_python_vs_eeglab": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict",
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.preprocessing.infomax_.infomax",
    "mne.preprocessing.tests.test_eeglab_infomax.base_dir",
    "mne.preprocessing.tests.test_eeglab_infomax.generate_data_for_comparing_against_eeglab_infomax",
    "mne.preprocessing.tests.test_eeglab_infomax.pytest",
    "numpy.abs",
    "numpy.argsort",
    "numpy.ceil",
    "numpy.dot",
    "numpy.log",
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "os.path.join",
    "scipy.io.loadmat",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_eog.data_path",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_eog.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.data_path": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.event_fname": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.find_eog_events": {
  "data": {
   "shadows": "mne.preprocessing.eog.find_eog_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.proj_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.raw_fname": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.test_find_eog": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "all",
    "events",
    "len",
    "mne.Annotations",
    "mne.io.read_raw_fif",
    "mne.preprocessing.eog.find_eog_events",
    "mne.preprocessing.tests.test_eog.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_fine_cal.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_fine_cal._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.data_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.fine_cal_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.fine_cal_fname_3d": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.object_hash": {
  "data": {
   "shadows": "mne.utils.object_hash"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.read_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing._fine_cal.read_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.test_read_write_fine_cal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.preprocessing._fine_cal.read_fine_calibration",
    "mne.preprocessing._fine_cal.write_fine_calibration",
    "mne.preprocessing.tests.test_fine_cal.fine_cal_fname",
    "mne.preprocessing.tests.test_fine_cal.fine_cal_fname_3d",
    "mne.utils._TempDir",
    "mne.utils.object_hash",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.write_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing._fine_cal.write_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_flat.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_flat.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.data_path": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_flat.mark_flat": {
  "data": {
   "shadows": "mne.preprocessing.mark_flat"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_flat.skip_fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_flat.test_flat_acq_skip": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.preprocessing.mark_flat",
    "mne.preprocessing.tests.test_flat.skip_fname"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_flat.test_mark_flat": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "int",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.preprocessing.mark_flat",
    "mne.preprocessing.tests.test_flat.pytest",
    "numpy.diff",
    "numpy.random.RandomState",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_flat.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_nirs._fnirs_check_bads": {
  "data": {
   "shadows": "mne.preprocessing.nirs._fnirs_check_bads"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs._fnirs_spread_bads": {
  "data": {
   "shadows": "mne.preprocessing.nirs._fnirs_spread_bads"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.fname_nirx_15_0": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_nirs.fname_nirx_15_2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_nirs.fname_nirx_15_2_short": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_nirs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_nirs.test_fnirs_check_bads": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs._fnirs_check_bads",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_0",
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2",
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2_short",
    "mne.preprocessing.tests.test_nirs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_nirs.test_fnirs_spread_bads": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs._fnirs_spread_bads",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_0",
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2",
    "mne.preprocessing.tests.test_nirs.fname_nirx_15_2_short",
    "mne.preprocessing.tests.test_nirs.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_nirs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_optical_density.BaseRaw": {
  "data": {
   "shadows": "mne.io.BaseRaw"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density._validate_type": {
  "data": {
   "shadows": "mne.utils._validate_type"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.fname_nirx": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_optical_density.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_optical_density.test_optical_density": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.BaseRaw",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_optical_density.fname_nirx",
    "mne.utils._validate_type"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_optical_density.test_optical_density_manual": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_optical_density.fname_nirx",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_optical_density.test_optical_density_zeromean": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.tests.test_optical_density.fname_nirx",
    "mne.preprocessing.tests.test_optical_density.pytest",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_optical_density.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_otp.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_otp.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp._pick_data_channels": {
  "data": {
   "shadows": "mne.io.pick._pick_data_channels"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_otp.erm_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_otp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.oversampled_temporal_projection": {
  "data": {
   "shadows": "mne.preprocessing.oversampled_temporal_projection"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.rfft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.rfftfreq": {
  "data": {
   "shadows": "numpy.fft.rfftfreq"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.skip_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_otp.test_otp_array": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.preprocessing.oversampled_temporal_projection",
    "mne.preprocessing.tests.test_otp.pytest",
    "mne.utils.catch_logging",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.zeros",
    "snr"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_otp.test_otp_array.snr": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.fft.rfft",
    "numpy.fft.rfftfreq",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_otp.test_otp_real": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.pick._pick_data_channels",
    "mne.io.read_raw_fif",
    "mne.preprocessing.oversampled_temporal_projection",
    "mne.preprocessing.tests.test_otp.erm_fname",
    "mne.preprocessing.tests.test_otp.skip_fname",
    "mne.preprocessing.tests.test_otp.triux_fname",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_otp.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_otp.triux_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_peak_finder": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_peak_finder.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.peak_finder": {
  "data": {
   "shadows": "mne.preprocessing.peak_finder"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.test_peak_finder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "mne.preprocessing.peak_finder",
    "mne.preprocessing.tests.test_peak_finder.pytest",
    "numpy.arange",
    "numpy.dtype",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_0": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2_short": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.scalp_coupling_index": {
  "data": {
   "shadows": "mne.preprocessing.nirs.scalp_coupling_index"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.test_scalp_coupling_index": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.preprocessing.nirs.scalp_coupling_index",
    "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_0",
    "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2",
    "mne.preprocessing.tests.test_scalp_coupling_index.fname_nirx_15_2_short",
    "mne.preprocessing.tests.test_scalp_coupling_index.pytest",
    "numpy.abs",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_scalp_coupling_index.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_ssp.data_path",
    "mne.utils.run_tests_if_main",
    "numpy.array",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ssp._check_projs_for_expected_channels": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.activate_proj": {
  "data": {
   "shadows": "mne.io.proj.activate_proj"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.compute_proj_ecg": {
  "data": {
   "shadows": "mne.preprocessing.ssp.compute_proj_ecg"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.compute_proj_eog": {
  "data": {
   "shadows": "mne.preprocessing.ssp.compute_proj_eog"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.ctf_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.data_path": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.dur_use": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.eog_times": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.raw_fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_ctf": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_ctf",
    "mne.pick_types",
    "mne.preprocessing.ssp.compute_proj_ecg",
    "mne.preprocessing.ssp.compute_proj_eog",
    "mne.preprocessing.tests.test_ssp._check_projs_for_expected_channels",
    "mne.preprocessing.tests.test_ssp.ctf_fname",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.pytest"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_ecg": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "events.shape",
    "len",
    "mne.io.read_raw_fif",
    "mne.preprocessing.ssp.compute_proj_ecg",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.pytest",
    "mne.preprocessing.tests.test_ssp.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_eog": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "events.shape",
    "len",
    "mne.io.read_raw_fif",
    "mne.preprocessing.ssp.compute_proj_eog",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.eog_times",
    "mne.preprocessing.tests.test_ssp.pytest",
    "mne.preprocessing.tests.test_ssp.raw_fname",
    "numpy.abs",
    "numpy.less",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_parallel": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_projector",
    "mne.io.read_raw_fif",
    "mne.preprocessing.ssp.compute_proj_eog",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.pytest",
    "mne.preprocessing.tests.test_ssp.raw_fname",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_stim.data_path",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_stim.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.data_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.event_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.fix_stim_artifact": {
  "data": {
   "shadows": "mne.preprocessing.stim.fix_stim_artifact"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.pick_types": {
  "data": {
   "shadows": "mne.io.pick.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.raw_fname": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.test_fix_stim_artifact": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "int",
    "len",
    "mne.epochs.Epochs",
    "mne.event.read_events",
    "mne.io.pick.pick_types",
    "mne.io.read_raw_fif",
    "mne.preprocessing.stim.fix_stim_artifact",
    "mne.preprocessing.tests.test_stim.event_fname",
    "mne.preprocessing.tests.test_stim.pytest",
    "mne.preprocessing.tests.test_stim.raw_fname",
    "numpy.all",
    "numpy.array",
    "numpy.ceil",
    "numpy.diff",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.preprocessing.tests.test_xdawn.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_xdawn.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.MinMaxScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MinMaxScaler"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.Vectorizer"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.Xdawn": {
  "data": {
   "shadows": "mne.preprocessing.xdawn.Xdawn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._XdawnTransformer": {
  "data": {
   "shadows": "mne.preprocessing.xdawn._XdawnTransformer"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._get_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "events",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.tests.test_xdawn.event_name",
    "mne.preprocessing.tests.test_xdawn.raw_fname",
    "mne.read_events"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn._get_numpy_libs": {
  "data": {
   "shadows": "mne.utils._get_numpy_libs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._simulate_erplike_mixed_data": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "events",
    "int",
    "mne.EpochsArray",
    "mne.create_info",
    "numpy.arange",
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.zeros",
    "range",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.base_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.event_id": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.event_name": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.raw_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.test_XdawnTransformer": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_raw_covariance",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.tests.test_xdawn.pytest",
    "mne.preprocessing.xdawn.Xdawn",
    "mne.preprocessing.xdawn._XdawnTransformer",
    "mne.utils.requires_sklearn",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "mne.preprocessing.tests.test_xdawn.pytest",
    "mne.preprocessing.xdawn.Xdawn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_apply_transform": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.tests.test_xdawn.pytest",
    "mne.preprocessing.xdawn.Xdawn",
    "numpy.arange",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_decoding_performance": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "mne.decoding.Vectorizer",
    "mne.preprocessing.tests.test_xdawn._simulate_erplike_mixed_data",
    "mne.preprocessing.xdawn.Xdawn",
    "mne.preprocessing.xdawn._XdawnTransformer",
    "mne.utils.requires_sklearn",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.empty_like",
    "numpy.testing.assert_allclose",
    "range",
    "scipy.stats.pearsonr",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.KFold",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.MinMaxScaler"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_fit": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_raw_covariance",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.tests.test_xdawn.pytest",
    "mne.preprocessing.xdawn.Xdawn",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_picks": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mne.EpochsArray",
    "mne.create_info",
    "mne.preprocessing.xdawn.Xdawn",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_regularization": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.tests.test_xdawn.event_name",
    "mne.preprocessing.tests.test_xdawn.pytest",
    "mne.preprocessing.tests.test_xdawn.raw_fname",
    "mne.preprocessing.tests.test_xdawn.sys",
    "mne.preprocessing.xdawn.Xdawn",
    "mne.read_events",
    "mne.utils._get_numpy_libs",
    "mne.utils.check_version",
    "mne.utils.requires_sklearn",
    "numpy.abs",
    "numpy.eye",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.utils": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.utils._get_lims_cola": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "list",
    "mne.preprocessing.utils.check_cola",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.tile",
    "scipy.signal.get_window"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.utils.check_cola": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.abs",
    "numpy.max",
    "numpy.median",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.utils.get_window": {
  "data": {
   "shadows": "scipy.signal.get_window"
  },
  "type": "import"
 },
 "mne.preprocessing.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.xdawn": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.xdawn.Xdawn": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "mne.preprocessing.xdawn._XdawnTransformer"
   ]
  },
  "type": "class"
 },
 "mne.preprocessing.xdawn.Xdawn.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "_check_option",
    "mne.preprocessing.xdawn.Xdawn",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_epochs": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_evoked": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_raw": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._pick_sources": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.bool",
    "numpy.dot",
    "numpy.ones",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.apply": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "_pick_data_channels",
    "isinstance",
    "len",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.fit": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "EvokedArray",
    "ValueError",
    "_pick_data_channels",
    "dict",
    "events",
    "int",
    "isinstance",
    "len",
    "mne.preprocessing.xdawn._fit_xdawn",
    "numpy.argsort",
    "numpy.diff",
    "numpy.sort",
    "pick_info",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.inverse_transform": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.transform": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer._check_Xy": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.fit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mne.preprocessing.xdawn._fit_xdawn",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.inverse_transform": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._construct_signal_from_epochs": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "events",
    "float",
    "int",
    "numpy.max",
    "numpy.min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._fit_xdawn": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "_regularized_covariance",
    "events",
    "isinstance",
    "list",
    "mne.preprocessing.xdawn._least_square_evoked",
    "numpy.apply_along_axis",
    "numpy.argsort",
    "numpy.array",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.hstack",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.norm",
    "numpy.linalg.pinv",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.tile",
    "numpy.unique",
    "scipy.linalg.eigh",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._least_square_evoked": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "events.copy",
    "float",
    "int",
    "len",
    "list",
    "mne.preprocessing.xdawn._construct_signal_from_epochs",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.transpose",
    "numpy.unique",
    "numpy.vsplit",
    "numpy.zeros",
    "scipy.linalg.pinv",
    "scipy.linalg.toeplitz"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.xdawn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.proj": {
  "data": {},
  "type": "module"
 },
 "mne.proj._compute_cov_epochs": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_n_samples",
    "len",
    "numpy.dot",
    "p_fun",
    "parallel",
    "parallel_func",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.proj._compute_proj": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Projection",
    "ValueError",
    "_check_option",
    "_get_rank_sss",
    "dict",
    "enumerate",
    "len",
    "numpy.newaxis",
    "pick_types",
    "scipy.linalg.svd",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.proj.compute_proj_epochs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.proj._compute_cov_epochs",
    "mne.proj._compute_proj",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.proj.compute_proj_evoked": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mne.proj._compute_proj",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.proj.compute_proj_raw": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "Epochs",
    "_check_n_samples",
    "events",
    "make_fixed_length_events",
    "max",
    "min",
    "mne.proj._compute_cov_epochs",
    "mne.proj._compute_proj",
    "numpy.dot",
    "numpy.round",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.proj.read_proj": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_read_proj",
    "check_fname",
    "fiff_open"
   ]
  },
  "type": "function"
 },
 "mne.proj.sensitivity_map": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "RuntimeError",
    "SEClass",
    "ValueError",
    "_check_option",
    "_has_eeg_average_ref_proj",
    "_subject_from_forward",
    "convert_forward_solution",
    "is_fixed_orient",
    "make_eeg_average_ref_proj",
    "make_projector",
    "numpy.dot",
    "numpy.empty",
    "numpy.max",
    "numpy.newaxis",
    "pick_types_forward",
    "range",
    "scipy.linalg.norm",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.proj.write_proj": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_write_proj",
    "check_fname",
    "end_file",
    "start_file"
   ]
  },
  "type": "function"
 },
 "mne.rank": {
  "data": {},
  "type": "module"
 },
 "mne.rank._compute_rank_int": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "mne.rank.compute_rank",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_from_s": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "numpy.amax",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.sum",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_meeg_cov": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "_apply_scaling_cov",
    "_handle_default",
    "_picks_by_type",
    "_undo_scaling_cov",
    "isinstance",
    "list",
    "mne.rank.estimate_rank",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_meeg_signals": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "_picks_by_type",
    "_scaled_array",
    "isinstance",
    "list",
    "mne.rank.estimate_rank",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.rank._estimate_rank_raw": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "_picks_to_idx",
    "mne.rank._estimate_rank_meeg_signals",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.rank._get_rank_sss": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.rank._info_rank": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.rank._get_rank_sss"
   ]
  },
  "type": "function"
 },
 "mne.rank.compute_rank": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "_check_rank",
    "_handle_default",
    "_picks_by_type",
    "_pl",
    "_simplify_info",
    "_validate_type",
    "dict",
    "isinstance",
    "len",
    "make_projector",
    "mne.rank._estimate_rank_meeg_cov",
    "mne.rank._estimate_rank_meeg_signals",
    "mne.rank._info_rank",
    "numpy.concatenate",
    "numpy.dot",
    "pick_channels_cov",
    "pick_info",
    "set",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.rank.estimate_rank": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_compute_row_norms",
    "mne.rank._estimate_rank_from_s",
    "numpy.newaxis",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "mne.rank.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.rank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.report": {
  "data": {
   "symbols_in_volume": [
    "HTMLTemplate",
    "Template"
   ]
  },
  "type": "module"
 },
 "mne.report.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.report.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "mne.report.FigureCanvas": {
  "data": {
   "shadows": "matplotlib.backends.backend_agg.FigureCanvasAgg"
  },
  "type": "import"
 },
 "mne.report.FigureCanvasAgg": {
  "data": {
   "shadows": "matplotlib.backends.backend_agg.FigureCanvasAgg"
  },
  "type": "import"
 },
 "mne.report.Report": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.report.Report.__enter__": {
  "data": {
   "lineno": 1597
  },
  "type": "function"
 },
 "mne.report.Report.__exit__": {
  "data": {
   "lineno": 1601
  },
  "type": "function"
 },
 "mne.report.Report.__getstate__": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.__init__": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "dict",
    "get_subjects_dir",
    "isinstance",
    "mne.report._check_image_format",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.__len__": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.__repr__": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "len",
    "mne.report._get_fname"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.__setstate__": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._add_or_replace": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "max",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._get_id": {
  "data": {
   "lineno": 918
  },
  "type": "function"
 },
 "mne.report.Report._get_state_params": {
  "data": {
   "lineno": 1479
  },
  "type": "function"
 },
 "mne.report.Report._init_render": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "list",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_array": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "mne.report._iterate_axial_slices",
    "mne.report._iterate_coronal_slices",
    "mne.report._iterate_sagittal_slices"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_bem": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "_get_img_fdata",
    "get_subjects_dir",
    "glob.glob",
    "len",
    "nibabel.load",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_cov": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "fig",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "plot_cov",
    "read_cov",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_epochs": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "dict",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "read_epochs"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_eve": {
  "data": {
   "lineno": 1882,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "read_events"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_evoked": {
  "data": {
   "lineno": 1847,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "pick_types",
    "read_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_forward": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "mne.report.re",
    "mne.report.repr_template",
    "read_forward_solution",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_image_png": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "_get_img_fdata",
    "nibabel.load",
    "os.path.basename",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_inverse": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "mne.report.re",
    "mne.report.repr_template",
    "read_inverse_operator",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_one_axis": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "max",
    "min",
    "mne.report._build_html_slider",
    "mne.report._iterate_mri_slices",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_one_bem_axis": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "mne.report._build_html_image",
    "mne.report._build_html_slider",
    "mne.report._figs_to_mrislices",
    "numpy.arange",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_raw": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "dict",
    "fig",
    "isinstance",
    "len",
    "matplotlib.backends.backend_agg.FigureCanvasAgg",
    "matplotlib.pyplot.subplots",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "mne.report.raw_template",
    "numpy.array",
    "pick_types",
    "read_raw_fif",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_toc": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "getattr",
    "list",
    "mne.report.SECTION_ORDER",
    "mne.report.VALID_EXTENSIONS",
    "mne.report._get_fname",
    "mne.report._get_toc_property",
    "mne.report._is_bad_fname",
    "mne.report.header_template",
    "mne.report.os",
    "mne.report.toc_list",
    "numpy.array",
    "read_evokeds",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_trans": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "mne.report._iterate_trans_views",
    "mne.report.image_template"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_whitened_evoked": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "dict",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "read_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._validate_input": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mne.report._clean_varnames",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_bem_to_section": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_figs_to_section": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "fig",
    "mne.report._check_image_format",
    "mne.report._check_scale",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_htmls_to_section": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "mne.report.html_template",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_images_to_section": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "_check_option",
    "mne.report._check_scale",
    "mne.report.base64",
    "mne.report.image_template",
    "mne.report.os",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_slider_to_section": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "enumerate",
    "fig",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.report._build_html_image",
    "mne.report._build_html_slider",
    "mne.report._check_image_format",
    "mne.report._check_scale",
    "mne.report._fig_to_img",
    "mne.report.slider_full_template",
    "numpy.arange",
    "numpy.ndarray",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.parse_folder": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "_check_option",
    "any",
    "check_n_jobs",
    "dict",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "mne.report._check_image_format",
    "mne.report._iterate_files",
    "mne.report._recursive_search",
    "numpy.array_split",
    "p_fun",
    "parallel",
    "parallel_func",
    "read_cov",
    "read_info",
    "set",
    "sorted",
    "sum",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.remove": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "max",
    "mne.report.re"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.save": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "hasattr",
    "input",
    "mne.report._fix_global_ids",
    "mne.report.codecs",
    "mne.report.footer_template",
    "mne.report.os",
    "mne.report.time",
    "mne.report.warnings",
    "mne.report.webbrowser",
    "os.path.isfile",
    "os.path.join",
    "os.path.realpath",
    "os.path.splitext",
    "warn",
    "write_hdf5"
   ]
  },
  "type": "function"
 },
 "mne.report.SECTION_ORDER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.report.VALID_EXTENSIONS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.report._FA_FILE_CODE": {
  "data": {
   "lineno": 2073
  },
  "type": "constant"
 },
 "mne.report._ReportScraper": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.report._ReportScraper.__call__": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "mne.report.Report",
    "mne.report._FA_FILE_CODE",
    "mne.report._SCRAPER_TEXT",
    "next",
    "open",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "mne.report._ReportScraper.__init__": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.report._ReportScraper.__repr__": {
  "data": {
   "lineno": 2087
  },
  "type": "function"
 },
 "mne.report._ReportScraper.copyfiles": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "shutil.copyfile"
   ]
  },
  "type": "function"
 },
 "mne.report._SCRAPER_TEXT": {
  "data": {
   "lineno": 2060
  },
  "type": "constant"
 },
 "mne.report._build_html_image": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "mne.report._build_html_slider": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "mne.report.slider_template",
    "mne.report.warnings"
   ]
  },
  "type": "function"
 },
 "mne.report._build_image_png": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "fig",
    "fig.figimage",
    "fig.get_dpi",
    "fig.savefig",
    "getattr",
    "io.BytesIO",
    "matplotlib.pyplot.cm",
    "matplotlib.pyplot.cm.gray",
    "mne.report._figure_agg",
    "mne.report.base64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report._check_image_format": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "_check_option"
   ]
  },
  "type": "function"
 },
 "mne.report._check_scale": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "mne.report._clean_varnames": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "mne.report.re"
   ]
  },
  "type": "function"
 },
 "mne.report._fig_to_img": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "callable",
    "fig",
    "fig.get_dpi",
    "fig.get_size_inches",
    "fig.savefig",
    "io.BytesIO",
    "isinstance",
    "matplotlib.figure.Figure",
    "matplotlib.pyplot.close",
    "mne.report._ndarray_to_fig",
    "mne.report._scale_mpl_figure",
    "mne.report.base64",
    "mne.report.warnings",
    "numpy.ndarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.report._figs_to_mrislices": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "max",
    "min",
    "numpy.array_split",
    "p_fun",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.report._figure_agg": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "fig",
    "matplotlib.backends.backend_agg.FigureCanvasAgg",
    "matplotlib.figure.Figure"
   ]
  },
  "type": "function"
 },
 "mne.report._fix_global_ids": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "len",
    "mne.report.re"
   ]
  },
  "type": "function"
 },
 "mne.report._get_fname": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "mne.report._get_toc_property": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "mne.report._is_bad_fname": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "mne.report.VALID_EXTENSIONS",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_axial_slices": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_coronal_slices": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.flipud",
    "numpy.rot90",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_files": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "_update_html",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_files._update_html": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "mne.report._iterate_mri_slices": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mne.report._build_html_image",
    "mne.report._build_image_png"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_sagittal_slices": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_trans_views": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "fig",
    "function",
    "len",
    "matplotlib.pyplot.subplots",
    "mne.report._fig_to_img",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report._ndarray_to_fig": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.report._figure_agg",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.report._recursive_search": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "list",
    "mne.report.VALID_EXTENSIONS",
    "mne.report.fnmatch",
    "mne.report.os",
    "os.path.join",
    "os.path.realpath",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report._scale_mpl_figure": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "fig.canvas.draw",
    "fig.findobj",
    "fig.get_dpi",
    "fig.get_size_inches",
    "fig.set_dpi",
    "fig.set_size_inches",
    "float",
    "matplotlib.text.Text"
   ]
  },
  "type": "function"
 },
 "mne.report.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mne.report.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mne.report.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.report.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.report.footer_template": {
  "data": {
   "lineno": 651
  },
  "type": "constant"
 },
 "mne.report.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.report.header_template": {
  "data": {
   "lineno": 509
  },
  "type": "constant"
 },
 "mne.report.html_template": {
  "data": {
   "lineno": 661
  },
  "type": "constant"
 },
 "mne.report.image_template": {
  "data": {
   "lineno": 668
  },
  "type": "constant"
 },
 "mne.report.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.report.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.report.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.report.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.report.open_report": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "mne.report.Report",
    "os.path.exists",
    "read_hdf5"
   ]
  },
  "type": "function"
 },
 "mne.report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.report.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.report.raw_template": {
  "data": {
   "lineno": 731
  },
  "type": "constant"
 },
 "mne.report.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.report.repr_template": {
  "data": {
   "lineno": 724
  },
  "type": "constant"
 },
 "mne.report.slider_full_template": {
  "data": {
   "lineno": 471
  },
  "type": "constant"
 },
 "mne.report.slider_template": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "mne.report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.report.toc_list": {
  "data": {
   "lineno": 794
  },
  "type": "constant"
 },
 "mne.report.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.report.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.selection": {
  "data": {},
  "type": "module"
 },
 "mne.selection._EEG_SELECTIONS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.selection._SELECTIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.selection._divide_side": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.median",
    "numpy.sort",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.selection._divide_to_regions": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_get_stim_channel",
    "_pick_data_channels",
    "abs",
    "len",
    "list",
    "mne.selection._divide_side",
    "numpy.abs",
    "numpy.append",
    "numpy.argsort",
    "numpy.array",
    "numpy.errstate",
    "numpy.mean",
    "numpy.setdiff1d",
    "numpy.where",
    "scipy.stats.zscore"
   ]
  },
  "type": "function"
 },
 "mne.selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.selection.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.selection.read_selection": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "open",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "pick_types",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.selection.zscore": {
  "data": {
   "shadows": "scipy.stats.zscore"
  },
  "type": "import"
 },
 "mne.simulation": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.metrics": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.metrics._check_stc": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "mne.simulation.metrics.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "mne.simulation.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.metrics.source_estimate_quantification": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "_check_option",
    "mne.simulation.metrics._check_stc",
    "numpy.dot",
    "numpy.mean",
    "numpy.sqrt",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.source.SourceSimulator": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.simulation.source.SourceSimulator.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "int",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.__iter__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.add_data": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "events",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.ndim",
    "numpy.vstack",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.duration": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.max",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.get_stc": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.simulation.source.simulate_stc",
    "numpy.arange",
    "numpy.in1d",
    "numpy.logical_and",
    "numpy.where",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.get_stim_channel": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.logical_and",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.SourceSimulator.n_times": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.source.select_source_in_label": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_check_option",
    "check_random_state",
    "len",
    "list",
    "numpy.intersect1d",
    "rng_uniform"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.simulate_sparse_stc": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "_ensure_src",
    "check_random_state",
    "cls",
    "data_fun",
    "enumerate",
    "int",
    "len",
    "min",
    "mne.simulation.source.select_source_in_label",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.empty",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sin",
    "numpy.sort",
    "numpy.zeros",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.simulate_stc": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "RuntimeError",
    "SourceEstimate",
    "ValueError",
    "_compute_nearest",
    "enumerate",
    "len",
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.delete",
    "numpy.intersect1d",
    "numpy.outer",
    "numpy.searchsorted",
    "numpy.tile",
    "numpy.unique",
    "numpy.vstack",
    "numpy.where",
    "range",
    "value_fun",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.tests.test_evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_evoked.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_evoked.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.add_noise": {
  "data": {
   "shadows": "mne.simulation.add_noise"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.ave_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.cov_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.fwd_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_channels_cov": {
  "data": {
   "shadows": "mne.io.pick.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.test_add_noise": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "len",
    "mne.EpochsArray",
    "mne.compute_covariance",
    "mne.compute_raw_covariance",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.simulation.add_noise",
    "mne.simulation.tests.test_evoked.pytest",
    "mne.simulation.tests.test_evoked.raw_fname",
    "mne.utils.catch_logging",
    "mne.utils.check_version",
    "numpy.arange",
    "numpy.corrcoef",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.random.default_rng",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.test_rank_deficiency": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mne.EpochsArray",
    "mne.compute_covariance",
    "mne.cov.regularize",
    "mne.io.pick.pick_channels_cov",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.simulation.add_noise",
    "mne.simulation.tests.test_evoked.ave_fname",
    "mne.simulation.tests.test_evoked.cov_fname",
    "numpy.corrcoef",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.test_simulate_evoked": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError",
    "abs",
    "len",
    "mne.convert_forward_solution",
    "mne.cov.regularize",
    "mne.cov.whiten_evoked",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.pick_types_forward",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.simulation.simulate_evoked",
    "mne.simulation.simulate_sparse_stc",
    "mne.simulation.tests.test_evoked.ave_fname",
    "mne.simulation.tests.test_evoked.cov_fname",
    "mne.simulation.tests.test_evoked.fwd_fname",
    "mne.simulation.tests.test_evoked.pytest",
    "mne.simulation.tests.test_evoked.raw_fname",
    "numpy.inf",
    "numpy.linspace",
    "numpy.max",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.whiten_evoked": {
  "data": {
   "shadows": "mne.cov.whiten_evoked"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_metrics.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_metrics.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.data_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.source_estimate_quantification": {
  "data": {
   "shadows": "mne.simulation.source_estimate_quantification"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.src_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_metrics.test_metrics": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.simulation.simulate_sparse_stc",
    "mne.simulation.source_estimate_quantification",
    "mne.simulation.tests.test_metrics.pytest",
    "mne.simulation.tests.test_metrics.src_fname",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_metrics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_raw.base_path",
    "mne.simulation.tests.test_raw.bem_path",
    "mne.simulation.tests.test_raw.data_path",
    "mne.simulation.tests.test_raw.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_raw.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._assert_iter_sim": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "events",
    "mne.find_events",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._assert_quats": {
  "data": {
   "shadows": "mne.tests.test_chpi._assert_quats"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._get_head_pos_sim": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._get_hpi_info": {
  "data": {
   "shadows": "mne.chpi._get_hpi_info"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._get_ico_surface": {
  "data": {
   "shadows": "mne.surface._get_ico_surface"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._make_stc": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "mne.simulation.simulate_sparse_stc",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._surfaces_to_bem": {
  "data": {
   "shadows": "mne.bem._surfaces_to_bem"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.add_chpi": {
  "data": {
   "shadows": "mne.simulation.add_chpi"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.add_ecg": {
  "data": {
   "shadows": "mne.simulation.add_ecg"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.add_eog": {
  "data": {
   "shadows": "mne.simulation.add_eog"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.base_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_1_fname": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.compute_chpi_amplitudes": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_amplitudes"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.compute_chpi_locs": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_locs"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.compute_head_pos": {
  "data": {
   "shadows": "mne.chpi.compute_head_pos"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.cov_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.data_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.fit_dipole": {
  "data": {
   "shadows": "mne.fit_dipole"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_bem_solution": {
  "data": {
   "shadows": "mne.make_bem_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pos_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.psd_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_welch"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.raw_chpi_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.raw_data": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "len",
    "mne.create_info",
    "mne.datasets.testing._pytest_param",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.read_source_spaces",
    "mne.read_trans",
    "mne.simulation.tests.test_raw._make_stc",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_fname",
    "mne.simulation.tests.test_raw.src_fname",
    "mne.simulation.tests.test_raw.trans_fname",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.raw_fname_short": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.setup_source_space": {
  "data": {
   "shadows": "mne.setup_source_space"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.simulate_raw": {
  "data": {
   "shadows": "mne.simulation.simulate_raw"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.src_fname": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.subjects_dir": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.test_degenerate": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "mne.simulation.add_eog",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._get_head_pos_sim",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_data"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_iterable": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "int",
    "isinstance",
    "len",
    "mne.VolSourceEstimate",
    "mne.bem._surfaces_to_bem",
    "mne.find_events",
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN",
    "mne.io.read_raw_fif",
    "mne.make_bem_solution",
    "mne.make_sphere_model",
    "mne.setup_volume_source_space",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._assert_iter_sim",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_fname_short",
    "mne.surface._get_ico_surface",
    "numpy.array",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "stc_iter",
    "stc_iter_bad"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_iterable.stc_iter": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_iterable.stc_iter_bad": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_bem": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.SourceEstimate",
    "mne.find_events",
    "mne.fit_dipole",
    "mne.make_ad_hoc_cov",
    "mne.pick_types",
    "mne.setup_source_space",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw.bem_fname",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_data",
    "mne.simulation.tests.test_raw.subjects_dir",
    "mne.transform_surface_to",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.diag",
    "numpy.eye",
    "numpy.median",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_chpi": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "len",
    "mne.chpi._get_hpi_info",
    "mne.chpi.compute_chpi_amplitudes",
    "mne.chpi.compute_chpi_locs",
    "mne.chpi.compute_head_pos",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.setup_volume_source_space",
    "mne.simulation.add_chpi",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._make_stc",
    "mne.simulation.tests.test_raw.pos_fname",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_chpi_fname",
    "mne.tests.test_chpi._assert_quats",
    "mne.time_frequency.psd_welch",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmin",
    "numpy.setdiff1d",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_sphere": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.io.read_raw_fif",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.read_cov",
    "mne.simulation.add_ecg",
    "mne.simulation.add_eog",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._get_head_pos_sim",
    "mne.simulation.tests.test_raw.cov_fname",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_data",
    "mne.utils.catch_logging",
    "mne.utils.check_version",
    "numpy.concatenate",
    "numpy.random.default_rng",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_round_trip": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "mne.SourceEstimate",
    "mne.convert_forward_solution",
    "mne.make_forward_solution",
    "mne.read_bem_solution",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw.bem_1_fname",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_data",
    "mne.source_space._compare_source_spaces",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.trans_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.transform_surface_to": {
  "data": {
   "shadows": "mne.transform_surface_to"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_source.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_source.Label": {
  "data": {
   "shadows": "mne.label.Label"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.SourceSimulator": {
  "data": {
   "shadows": "mne.simulation.source.SourceSimulator"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source._get_fwd_labels": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.datasets.testing._pytest_param",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.read_label",
    "mne.simulation.tests.test_source.data_path",
    "mne.simulation.tests.test_source.fname_fwd",
    "mne.simulation.tests.test_source.label_names",
    "mne.simulation.tests.test_source.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source._get_idx_label_stc": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.intersect1d",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.fname_fwd": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.label_names": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.read_label": {
  "data": {
   "shadows": "mne.read_label"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.source.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.simulate_stc": {
  "data": {
   "shadows": "mne.simulation.source.simulate_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.subjects_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.test_generate_stc_single_hemi": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.label.Label",
    "mne.simulation.source.simulate_stc",
    "mne.simulation.tests.test_source._get_fwd_labels",
    "mne.simulation.tests.test_source._get_idx_label_stc",
    "numpy.all",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_generate_stc_single_hemi.fun": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_sparse_stc": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.simulation.source.simulate_sparse_stc",
    "mne.simulation.tests.test_source._get_fwd_labels",
    "mne.simulation.tests.test_source.pytest",
    "mne.simulation.tests.test_source.subjects_dir",
    "numpy.arange",
    "numpy.float",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_sparse_stc_single_hemi": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "len",
    "mne.simulation.source.simulate_sparse_stc",
    "mne.simulation.tests.test_source._get_fwd_labels",
    "mne.utils.check_version",
    "numpy.arange",
    "numpy.float",
    "numpy.random.default_rng",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "len",
    "mne.label.Label",
    "mne.simulation.source.simulate_stc",
    "mne.simulation.tests.test_source._get_fwd_labels",
    "mne.simulation.tests.test_source._get_idx_label_stc",
    "mne.simulation.tests.test_source.pytest",
    "numpy.all",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc.fun": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc_labels_overlap": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.simulation.source.simulate_stc",
    "mne.simulation.tests.test_source._get_fwd_labels",
    "mne.simulation.tests.test_source.pytest",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_source_simulator": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "events",
    "len",
    "mne.label.Label",
    "mne.simulation.source.SourceSimulator",
    "mne.simulation.tests.test_source._get_fwd_labels",
    "mne.simulation.tests.test_source.pytest",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.intersect1d",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tile",
    "numpy.vstack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.stats": {
  "data": {},
  "type": "module"
 },
 "mne.stats.multi_comp": {
  "data": {},
  "type": "module"
 },
 "mne.stats.multi_comp._ecdf": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.stats.multi_comp.bonferroni_correction": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "float",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.stats.multi_comp.fdr_correction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "mne.stats.multi_comp._ecdf",
    "numpy.arange",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.minimum.accumulate",
    "numpy.nonzero",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.stats.multi_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.parametric": {
  "data": {},
  "type": "module"
 },
 "mne.stats.parametric._get_contrast_indices": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.binary_repr"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._iter_contrasts": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "len",
    "mne.stats.parametric._get_contrast_indices",
    "numpy.eye",
    "numpy.kron",
    "numpy.linalg.matrix_rank",
    "numpy.ones",
    "range",
    "scipy.signal.detrend"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._map_effects": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mne.stats.parametric._get_contrast_indices",
    "numpy.arange",
    "numpy.where",
    "str",
    "string.ascii_uppercase"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._parametric_ci": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "len",
    "numpy.full_like",
    "numpy.nan",
    "scipy.stats.sem",
    "scipy.stats.t.interval"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.ascii_uppercase": {
  "data": {
   "shadows": "string.ascii_uppercase"
  },
  "type": "import"
 },
 "mne.stats.parametric.detrend": {
  "data": {
   "shadows": "scipy.signal.detrend"
  },
  "type": "import"
 },
 "mne.stats.parametric.f": {
  "data": {
   "shadows": "scipy.stats.f"
  },
  "type": "import"
 },
 "mne.stats.parametric.f_mway_rm": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "mne.stats.parametric._iter_contrasts",
    "mne.stats.parametric._map_effects",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.prod",
    "numpy.rollaxis",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.trace",
    "numpy.zeros",
    "scipy.stats.f"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.f_oneway": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "functools.reduce",
    "len",
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.f_threshold_mway_rm": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "mne.stats.parametric._iter_contrasts",
    "mne.stats.parametric._map_effects",
    "scipy.stats.f"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.parametric.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.stats.parametric.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.parametric.ttest_1samp_no_p": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_check_option",
    "numpy.max",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations": {
  "data": {},
  "type": "module"
 },
 "mne.stats.permutations._ci": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_parametric_ci",
    "mne.stats.permutations.bootstrap_confidence_interval"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations._max_stat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "float",
    "len",
    "math.sqrt",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.bootstrap_confidence_interval": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_random_state",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.percentile",
    "stat_fun"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.bootstrap_confidence_interval.stat_fun": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.permutations.permutation_t_test": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_get_1samp_orders",
    "check_random_state",
    "len",
    "math.sqrt",
    "mne.stats.permutations._max_stat",
    "my_max_stat",
    "numpy.abs",
    "numpy.array",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.newaxis.mean",
    "numpy.sort",
    "numpy.sqrt",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.stats.regression": {
  "data": {},
  "type": "module"
 },
 "mne.stats.regression._clean_rerp_input": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "_reject_data_segments",
    "numpy.setdiff1d",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._fit_lm": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.abs",
    "numpy.clip",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty_like",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.log10",
    "numpy.product",
    "numpy.reshape",
    "numpy.sign",
    "numpy.sqrt",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.lstsq",
    "scipy.stats.t.cdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._make_evokeds": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "EvokedArray",
    "dict",
    "float"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._prepare_rerp_data": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "events",
    "events.copy",
    "int",
    "len",
    "pick_info",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._prepare_rerp_preds": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.in1d",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.where",
    "round",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "mne.stats.regression.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.stats.regression.linear_regression": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "EvokedArray",
    "RuntimeError",
    "ValueError",
    "collections.namedtuple",
    "enumerate",
    "inspect.isgenerator",
    "isinstance",
    "len",
    "list",
    "lm",
    "mne.stats.regression._fit_lm",
    "next",
    "numpy.array",
    "numpy.product",
    "numpy.zeros",
    "pick_types",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.linear_regression_raw": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "events",
    "isinstance",
    "mne.stats.regression._clean_rerp_input",
    "mne.stats.regression._make_evokeds",
    "mne.stats.regression._prepare_rerp_data",
    "mne.stats.regression._prepare_rerp_preds",
    "set",
    "solver",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.linear_regression_raw.solver": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.stats.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.regression.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.regression.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_cluster_level": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_cluster_level._force_serial": {
  "data": {
   "shadows": "mne.parallel._force_serial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level._get_conditions": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mne.stats.tests.test_cluster_level.n_space",
    "numpy.convolve",
    "numpy.hanning",
    "numpy.newaxis",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.cluster_level": {
  "data": {
   "shadows": "mne.stats.cluster_level"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.f_oneway": {
  "data": {
   "shadows": "mne.stats.cluster_level.f_oneway"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.grid_to_graph": {
  "data": {
   "shadows": "sklearn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.has_numba": {
  "data": {
   "shadows": "mne.fixes.has_numba"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.n_space": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.stats.tests.test_cluster_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.numba_conditional": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mne.fixes.has_numba",
    "mne.stats.cluster_level",
    "mne.stats.cluster_level._get_buddies_fallback",
    "mne.stats.cluster_level._get_selves_fallback",
    "mne.stats.cluster_level._where_first_fallback",
    "mne.stats.tests.test_cluster_level.pytest"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.permutation_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.permutation_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.permutation_cluster_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.permutation_cluster_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.spatio_temporal_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.spatio_temporal_cluster_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.spatio_temporal_cluster_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.summarize_clusters_stc": {
  "data": {
   "shadows": "mne.stats.cluster_level.summarize_clusters_stc"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.test_cache_dir": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "RuntimeWarning",
    "functools.partial",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level.os",
    "mne.stats.tests.test_cluster_level.pytest",
    "mne.utils.catch_logging",
    "mne.utils.check_version",
    "numpy.random.RandomState",
    "numpy.random.default_rng",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_t_test": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "functools.partial",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "mne.stats.tests.test_cluster_level.pytest",
    "numpy.min",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "stat_fun"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_test": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.stats.cluster_level.permutation_cluster_test",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "mne.stats.tests.test_cluster_level.pytest",
    "numpy.min",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_test.stat_fun": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "scipy.stats.f_oneway"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_with_connectivity": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "dict",
    "func",
    "isinstance",
    "len",
    "list",
    "mne.parallel._force_serial",
    "mne.stats.cluster_level.f_oneway",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.permutation_cluster_test",
    "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test",
    "mne.stats.cluster_level.spatio_temporal_cluster_test",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "mne.stats.tests.test_cluster_level.n_space",
    "mne.stats.tests.test_cluster_level.pytest",
    "mne.utils.requires_sklearn",
    "numpy.all",
    "numpy.concatenate",
    "numpy.min",
    "numpy.reshape",
    "numpy.sort",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "scipy.linalg.block_diag",
    "scipy.sparse.coo_matrix",
    "sklearn.feature_extraction.image.grid_to_graph",
    "spatio_temporal_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_connectivity_equiv": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "bool",
    "dict",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level.n_space",
    "mne.utils.requires_sklearn",
    "numpy.all",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "numpy.zeros",
    "sklearn.feature_extraction.image.grid_to_graph",
    "stat_fun",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_large_n_samples": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "numpy.random.RandomState",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_step_down_p": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "numpy.all",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_test_H0": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "len",
    "min",
    "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test",
    "mne.stats.tests.test_cluster_level.pytest",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_spatio_temporal_cluster_connectivity": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.stats.cluster_level.spatio_temporal_cluster_test",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "mne.stats.tests.test_cluster_level.pytest",
    "mne.utils.requires_sklearn",
    "numpy.dstack",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.transpose",
    "sklearn.feature_extraction.image.grid_to_graph"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_summarize_clusters": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.stats.cluster_level.summarize_clusters_stc",
    "mne.stats.tests.test_cluster_level.pytest",
    "numpy.array",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_tfce_thresholds": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.tests.test_cluster_level.pytest",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_thresholds": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "RuntimeWarning",
    "functools.partial",
    "len",
    "mne.stats.cluster_level.f_oneway",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.permutation_cluster_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level.pytest",
    "mne.utils.catch_logging",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "scipy.stats.f.ppf",
    "scipy.stats.f_oneway",
    "scipy.stats.t.ppf",
    "scipy.stats.ttest_1samp",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.ttest_1samp": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "scipy.stats.ttest_1samp"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.ttest_1samp_no_p": {
  "data": {
   "shadows": "mne.stats.cluster_level.ttest_1samp_no_p"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_multi_comp.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.bonferroni_correction": {
  "data": {
   "shadows": "mne.stats.bonferroni_correction"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.fdr_correction": {
  "data": {
   "shadows": "mne.stats.fdr_correction"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.test_bonferroni_pval_clip": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mne.stats.bonferroni_correction"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_multi_comp.test_multi_pval_correction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "mne.stats.bonferroni_correction",
    "mne.stats.fdr_correction",
    "mne.stats.tests.test_multi_comp.pytest",
    "numpy.abs",
    "numpy.all",
    "numpy.mean",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "scipy.stats.t.ppf",
    "scipy.stats.ttest_1samp"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_parametric._map_effects": {
  "data": {
   "shadows": "mne.stats.parametric._map_effects"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.f_mway_rm": {
  "data": {
   "shadows": "mne.stats.parametric.f_mway_rm"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.f_threshold_mway_rm": {
  "data": {
   "shadows": "mne.stats.parametric.f_threshold_mway_rm"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.generate_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.test_external": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.stats.tests.test_parametric.test_f_twoway_rm": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "len",
    "mne.stats.parametric._map_effects",
    "mne.stats.parametric.f_mway_rm",
    "mne.stats.parametric.f_threshold_mway_rm",
    "mne.stats.tests.test_parametric.generate_data",
    "mne.stats.tests.test_parametric.pytest",
    "mne.stats.tests.test_parametric.test_external",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.test_map_effects": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "mne.stats.parametric._map_effects",
    "mne.stats.tests.test_parametric.pytest"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_permutations": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_permutations._ci": {
  "data": {
   "shadows": "mne.stats.permutations._ci"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.bootstrap_confidence_interval": {
  "data": {
   "shadows": "mne.stats.permutations.bootstrap_confidence_interval"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.permutation_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.permutation_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.permutation_t_test": {
  "data": {
   "shadows": "mne.stats.permutations.permutation_t_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.test_ci": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mne.stats.permutations._ci",
    "mne.stats.permutations.bootstrap_confidence_interval",
    "mne.utils.check_version",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.random.default_rng",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_permutations.test_permutation_t_test": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "mne.stats.permutation_cluster_1samp_test",
    "mne.stats.permutations.permutation_t_test",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.eye",
    "scipy.stats.ttest_1samp"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.stats.tests.test_regression.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_regression.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.event_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.hann": {
  "data": {
   "shadows": "scipy.signal.hann"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.linear_regression": {
  "data": {
   "shadows": "mne.stats.regression.linear_regression"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.linear_regression_raw": {
  "data": {
   "shadows": "mne.stats.regression.linear_regression_raw"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.raw_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.ridge_regression": {
  "data": {
   "shadows": "sklearn.linear_model.ridge_regression"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.stc_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_no_overlap": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.stats.regression.linear_regression_raw",
    "mne.stats.tests.test_regression.event_fname",
    "mne.stats.tests.test_regression.mne",
    "mne.stats.tests.test_regression.pytest",
    "mne.stats.tests.test_regression.raw_fname",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "events",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.stats.regression.linear_regression_raw",
    "mne.stats.tests.test_regression.mne",
    "mne.stats.tests.test_regression.pytest",
    "mne.utils.requires_sklearn",
    "numpy.convolve",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "scipy.signal.hann"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap.solT": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge_regression"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap.solver": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge_regression"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_regression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.stats.regression.linear_regression",
    "mne.stats.tests.test_regression.event_fname",
    "mne.stats.tests.test_regression.mne",
    "mne.stats.tests.test_regression.pytest",
    "mne.stats.tests.test_regression.raw_fname",
    "mne.stats.tests.test_regression.stc_fname",
    "numpy.arange",
    "numpy.errstate",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_annotations": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_annotations.pytest",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_annotations.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._assert_annotations_equal": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations._create_annotation_based_on_descr": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "RuntimeWarning",
    "all",
    "len",
    "mne.Annotations",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.tests.test_annotations.pytest",
    "numpy.empty",
    "numpy.float64",
    "numpy.full_like",
    "pytest.approx",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._handle_meas_date": {
  "data": {
   "shadows": "mne.annotations._handle_meas_date"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._raw_annot": {
  "data": {
   "shadows": "mne.utils._raw_annot"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._read_annotations_txt_parse_header": {
  "data": {
   "shadows": "mne.annotations._read_annotations_txt_parse_header"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._stamp_to_dt": {
  "data": {
   "shadows": "mne.utils._stamp_to_dt"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._sync_onset": {
  "data": {
   "shadows": "mne.annotations._sync_onset"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._windows_datetime": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "class"
 },
 "mne.tests.test_annotations._windows_datetime.fromtimestamp": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "OSError",
    "classmethod",
    "datetime.datetime.fromtimestamp"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.annotations_from_events": {
  "data": {
   "shadows": "mne.annotations_from_events"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_and_remove_boundary_annot": {
  "data": {
   "shadows": "mne.utils.assert_and_remove_boundary_annot"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.concatenate_raws": {
  "data": {
   "shadows": "mne.io.concatenate_raws"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.data_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.dummy_annotation_csv_file": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_file": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_file_empty": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_file_with_orig_time": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_header": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_annotation_txt_one_segment": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.dummy_broken_annotation_csv_file": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.fif_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.first_samps": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.read_annotations": {
  "data": {
   "shadows": "mne.read_annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.test_allow_nan_durations": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "RuntimeWarning",
    "float",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.tests.test_annotations.mne",
    "mne.tests.test_annotations.pytest",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annot_sanitizing": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "mne.Annotations",
    "mne.read_annotations",
    "mne.tests.test_annotations._assert_annotations_equal",
    "mne.tests.test_annotations.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_concat": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.Annotations",
    "mne.annotations._handle_meas_date",
    "mne.tests.test_annotations.pytest",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_epoching": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "numpy.array",
    "numpy.in1d",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_filtering": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "dict",
    "mne.Annotations",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.tests.test_annotations.first_samps",
    "mne.utils.catch_logging",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_omit": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "mne.Annotations",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.tests.test_annotations.first_samps",
    "mne.tests.test_annotations.pytest",
    "numpy.concatenate",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_crop": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "mne.Annotations",
    "mne.tests.test_annotations.pytest",
    "numpy.arange",
    "numpy.full_like",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_from_events": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "events.shape",
    "int",
    "len",
    "mne.annotations_from_events",
    "mne.datasets.testing.requires_testing_data",
    "mne.events_from_annotations",
    "mne.io.read_raw_fif",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.mne",
    "mne.tests.test_annotations.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_simple_iteration": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "isinstance",
    "mne.Annotations",
    "numpy.float64",
    "numpy.isscalar",
    "numpy.str_",
    "range",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations_slices": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "dict",
    "isinstance",
    "len",
    "mne.Annotations",
    "mne.tests.test_annotations.pytest",
    "mne.utils.requires_version",
    "numpy.array",
    "range",
    "slice",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_basics": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "datetime.datetime",
    "datetime.timezone.utc",
    "isinstance",
    "len",
    "mne.Annotations",
    "mne.annotations._handle_meas_date",
    "mne.io.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.read_annotations",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.pytest",
    "mne.utils._dt_to_stamp",
    "mne.utils.assert_and_remove_boundary_annot",
    "numpy.array",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_chunk_duration": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "events",
    "mne.Annotations",
    "mne.annotations._handle_meas_date",
    "mne.create_info",
    "mne.events_from_annotations",
    "mne.io.RawArray",
    "mne.tests.test_annotations.first_samps",
    "numpy.arange",
    "numpy.atleast_2d",
    "numpy.empty",
    "numpy.float64",
    "numpy.insert",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_crop": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IOError",
    "events",
    "getattr",
    "isinstance",
    "len",
    "mne.Annotations",
    "mne.io.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.read_annotations",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.mne",
    "mne.tests.test_annotations.pytest",
    "mne.utils._TempDir",
    "mne.utils.assert_and_remove_boundary_annot",
    "numpy.full_like",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_crop_more": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.mne",
    "mne.utils.assert_and_remove_boundary_annot",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_crop_when_negative_orig_time": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "len",
    "mne.Annotations",
    "mne.utils._dt_to_stamp",
    "mne.utils._stamp_to_dt",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_date_none": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "numpy.random.random_sample",
    "os.path.join",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_event_id_function_default": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.events_from_annotations",
    "mne.tests.test_annotations._create_annotation_based_on_descr",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_event_id_function_using_custom_function": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "dict",
    "events",
    "itertools.repeat",
    "len",
    "mne.events_from_annotations",
    "mne.tests.test_annotations._create_annotation_based_on_descr",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_event_id_function_using_custom_function._constant_id": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_events_from_annot_in_raw_objects": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "events",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.Annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.events_from_annotations",
    "mne.io.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.mne",
    "mne.tests.test_annotations.pytest",
    "numpy.arange",
    "numpy.empty",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "numpy.zeros",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_events_from_annot_onset_alingment": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "mne.annotations._handle_meas_date",
    "mne.events_from_annotations",
    "mne.utils._raw_annot"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_handle_meas_date": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.timezone.utc",
    "mne.annotations._handle_meas_date",
    "mne.tests.test_annotations.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_io_annotation_csv": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.annotations._handle_meas_date",
    "mne.read_annotations",
    "mne.tests.test_annotations._assert_annotations_equal",
    "mne.tests.test_annotations.dummy_annotation_csv_file",
    "mne.tests.test_annotations.dummy_broken_annotation_csv_file",
    "mne.tests.test_annotations.pytest",
    "mne.utils.requires_version",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_io_annotation_txt": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "mne.annotations._handle_meas_date",
    "mne.read_annotations",
    "mne.tests.test_annotations._assert_annotations_equal",
    "mne.tests.test_annotations.dummy_annotation_txt_file",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_negative_meas_dates": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "events",
    "mne.Annotations",
    "mne.create_info",
    "mne.events_from_annotations",
    "mne.io.RawArray",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_raw_array_orig_times": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.Annotations",
    "mne.annotations._handle_meas_date",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.utils._dt_to_stamp",
    "mne.utils.assert_and_remove_boundary_annot",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_raw_reject": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "RuntimeWarning",
    "int",
    "len",
    "mne.Annotations",
    "mne.annotations._sync_onset",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.first_samps",
    "mne.tests.test_annotations.pytest",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.isnan",
    "numpy.ones",
    "numpy.setdiff1d",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_empty": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "mne.read_annotations",
    "mne.tests.test_annotations.dummy_annotation_txt_file_empty",
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_header": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.timezone.utc",
    "mne.annotations._read_annotations_txt_parse_header",
    "mne.tests.test_annotations.dummy_annotation_txt_header"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_one_segment": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "mne.read_annotations",
    "mne.tests.test_annotations.dummy_annotation_txt_one_segment",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_annotation_txt_orig_time": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.timezone.utc",
    "mne.Annotations",
    "mne.read_annotations",
    "mne.tests.test_annotations.dummy_annotation_txt_file_with_orig_time",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_read_brainstorm_annotations": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_annotations",
    "mne.tests.test_annotations.data_dir",
    "numpy.unique",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_repr": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "list",
    "mne.Annotations",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_sorting": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "list",
    "mne.Annotations",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.windows_like_datetime": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mne.tests.test_annotations._windows_datetime",
    "mne.tests.test_annotations.pytest",
    "mne.tests.test_annotations.sys"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_bem.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_bem.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_bem.Info": {
  "data": {
   "shadows": "mne.Info"
  },
  "type": "import"
 },
 "mne.tests.test_bem.Transform": {
  "data": {
   "shadows": "mne.Transform"
  },
  "type": "import"
 },
 "mne.tests.test_bem._assert_complete_surface": {
  "data": {
   "shadows": "mne.bem._assert_complete_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem._assert_inside": {
  "data": {
   "shadows": "mne.bem._assert_inside"
  },
  "type": "import"
 },
 "mne.tests.test_bem._bem_find_surface": {
  "data": {
   "shadows": "mne.bem._bem_find_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem._check_surface_size": {
  "data": {
   "shadows": "mne.bem._check_surface_size"
  },
  "type": "import"
 },
 "mne.tests.test_bem._compare_bem_solutions": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.tests.test_bem._compare_bem_surfaces",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem._compare_bem_surfaces": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem._get_ico_map": {
  "data": {
   "shadows": "mne.bem._get_ico_map"
  },
  "type": "import"
 },
 "mne.tests.test_bem._ico_downsample": {
  "data": {
   "shadows": "mne.bem._ico_downsample"
  },
  "type": "import"
 },
 "mne.tests.test_bem._order_surfaces": {
  "data": {
   "shadows": "mne.bem._order_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_bem.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_bem.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.fit_sphere_to_headshape": {
  "data": {
   "shadows": "mne.preprocessing.maxfilter.fit_sphere_to_headshape"
  },
  "type": "import"
 },
 "mne.tests.test_bem.fname_bem_1": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_3": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_sol_1": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_sol_3": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_raw": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_bem.make_bem_model": {
  "data": {
   "shadows": "mne.make_bem_model"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_bem_solution": {
  "data": {
   "shadows": "mne.make_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_flash_bem": {
  "data": {
   "shadows": "mne.bem.make_flash_bem"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_bem.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "mne.tests.test_bem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_bem.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_bem.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_bem.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_surface": {
  "data": {
   "shadows": "mne.surface.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "mne.tests.test_bem.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.tests.test_bem.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_bem.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_bem.subjects_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_bem.test_bem_model_topology": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_bem_model",
    "mne.surface.read_surface",
    "mne.tests.test_bem.pytest",
    "mne.tests.test_bem.subjects_dir",
    "mne.write_surface",
    "numpy.concatenate",
    "numpy.mean",
    "os.makedirs",
    "os.path.join",
    "shutil.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_bem_solution": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "len",
    "mne.bem._assert_complete_surface",
    "mne.bem._assert_inside",
    "mne.bem._check_surface_size",
    "mne.bem._get_ico_map",
    "mne.bem._ico_downsample",
    "mne.bem._order_surfaces",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_bem_model",
    "mne.make_bem_solution",
    "mne.read_bem_solution",
    "mne.read_bem_surfaces",
    "mne.tests.test_bem._compare_bem_solutions",
    "mne.tests.test_bem.fname_bem_1",
    "mne.tests.test_bem.fname_bem_3",
    "mne.tests.test_bem.fname_bem_sol_1",
    "mne.tests.test_bem.fname_bem_sol_3",
    "mne.tests.test_bem.pytest",
    "mne.tests.test_bem.subjects_dir",
    "mne.write_bem_solution",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_fit_sphere_to_headshape": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "copy.deepcopy",
    "dict",
    "mne.Info",
    "mne.Transform",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL",
    "mne.io.constants.FIFF.FIFFV_POINT_EEG",
    "mne.io.constants.FIFF.FIFFV_POINT_EXTRA",
    "mne.io.constants.FIFF.FIFFV_POINT_HPI",
    "mne.io.constants.FIFF.FIFFV_POINT_LPA",
    "mne.io.constants.FIFF.FIFFV_POINT_NASION",
    "mne.io.constants.FIFF.FIFFV_POINT_RPA",
    "mne.preprocessing.maxfilter.fit_sphere_to_headshape",
    "mne.tests.test_bem.pytest",
    "mne.transforms.translation",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_io_bem": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.bem._bem_find_surface",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_bem_solution",
    "mne.read_bem_surfaces",
    "mne.tests.test_bem._compare_bem_solutions",
    "mne.tests.test_bem._compare_bem_surfaces",
    "mne.tests.test_bem.fname_bem_3",
    "mne.tests.test_bem.fname_bem_sol_1",
    "mne.tests.test_bem.fname_bem_sol_3",
    "mne.tests.test_bem.fname_raw",
    "mne.tests.test_bem.pytest",
    "mne.write_bem_solution",
    "mne.write_bem_surfaces",
    "os.path.join",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_bem_model": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_bem_model",
    "mne.read_bem_surfaces",
    "mne.tests.test_bem._compare_bem_surfaces",
    "mne.tests.test_bem.fname_bem_1",
    "mne.tests.test_bem.fname_bem_3",
    "mne.tests.test_bem.pytest",
    "mne.tests.test_bem.re",
    "mne.tests.test_bem.subjects_dir",
    "mne.utils.catch_logging",
    "mne.write_bem_surfaces"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_flash_bem": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.bem.make_flash_bem",
    "mne.datasets.testing.requires_testing_data",
    "mne.surface.read_surface",
    "mne.tests.test_bem.subjects_dir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "os.remove",
    "shutil.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_sphere_model": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.io.read_info",
    "mne.make_sphere_model",
    "mne.tests.test_bem.fname_raw",
    "mne.tests.test_bem.pytest",
    "mne.utils.catch_logging",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_bem.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_bem_solution": {
  "data": {
   "shadows": "mne.write_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_bem_surfaces": {
  "data": {
   "shadows": "mne.write_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_surface": {
  "data": {
   "shadows": "mne.write_surface"
  },
  "type": "import"
 },
 "mne.tests.test_chpi": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_chpi.base_dir",
    "mne.tests.test_chpi.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_chpi.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._MAG_FACTOR": {
  "data": {
   "shadows": "mne.forward._compute_forward._MAG_FACTOR"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._assert_quats": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AssertionError",
    "mne.chpi.head_pos_to_trans_rot_t",
    "mne.transforms._angle_between_quats",
    "mne.transforms.rot_to_quat",
    "numpy.argmax",
    "numpy.isclose",
    "numpy.isfinite",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._calculate_chpi_coil_locs": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "mne.chpi._chpi_locs_to_times_dig",
    "mne.chpi.compute_chpi_amplitudes",
    "mne.chpi.compute_chpi_locs",
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._calculate_chpi_positions": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mne.chpi.compute_chpi_amplitudes",
    "mne.chpi.compute_chpi_locs",
    "mne.chpi.compute_head_pos",
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._check_dists": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "len",
    "mne.chpi._compute_good_distances",
    "mne.chpi._get_hpi_initial_fit",
    "numpy.array",
    "numpy.empty",
    "numpy.median",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_less",
    "numpy.where",
    "range",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._chpi_locs_to_times_dig": {
  "data": {
   "shadows": "mne.chpi._chpi_locs_to_times_dig"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._compute_good_distances": {
  "data": {
   "shadows": "mne.chpi._compute_good_distances"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._decimate_chpi": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "mne.io.RawArray",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._get_hpi_info": {
  "data": {
   "shadows": "mne.chpi._get_hpi_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._get_hpi_initial_fit": {
  "data": {
   "shadows": "mne.chpi._get_hpi_initial_fit"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._setup_ext_proj": {
  "data": {
   "shadows": "mne.chpi._setup_ext_proj"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.add_chpi": {
  "data": {
   "shadows": "mne.simulation.add_chpi"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.art_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.art_mc_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_meg_snr": {
  "data": {
   "shadows": "mne.utils.assert_meg_snr"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_suppressed": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "mne.pick_types",
    "numpy.abs",
    "numpy.argmin",
    "numpy.log10",
    "numpy.median",
    "scipy.signal.welch"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.base_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.calculate_head_pos_ctf": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "mne.chpi.compute_head_pos",
    "mne.chpi.extract_chpi_locs_ctf"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.chpi5_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.chpi5_pos_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.chpi_fif_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.compute_chpi_amplitudes": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_amplitudes"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.compute_chpi_locs": {
  "data": {
   "shadows": "mne.chpi.compute_chpi_locs"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.compute_head_pos": {
  "data": {
   "shadows": "mne.chpi.compute_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.ctf_chpi_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.ctf_chpi_pos_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.ctf_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.data_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.extract_chpi_locs_ctf": {
  "data": {
   "shadows": "mne.chpi.extract_chpi_locs_ctf"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.filter_chpi": {
  "data": {
   "shadows": "mne.chpi.filter_chpi"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.head_pos_to_trans_rot_t": {
  "data": {
   "shadows": "mne.chpi.head_pos_to_trans_rot_t"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.hp_fif_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.hp_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pos_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.raw_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_artemis123": {
  "data": {
   "shadows": "mne.io.read_raw_artemis123"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.sample_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.sss_fif_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.sss_hpisubt_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.test_calculate_chpi_coil_locs_artemis": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.chpi.compute_chpi_amplitudes",
    "mne.chpi.compute_chpi_locs",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_artemis123",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._calculate_chpi_coil_locs",
    "mne.tests.test_chpi._check_dists",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.art_fname",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.pytest",
    "numpy.linalg.norm",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions_artemis": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "mne.chpi.read_head_pos",
    "mne.io.read_raw_artemis123",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._calculate_chpi_positions",
    "mne.tests.test_chpi.art_fname",
    "mne.tests.test_chpi.art_mc_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions_vv": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "len",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_COORD_UNKNOWN",
    "mne.io.constants.FIFF.FIFFV_POINT_HPI",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._calculate_chpi_positions",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.pos_fname",
    "mne.tests.test_chpi.pytest",
    "mne.tests.test_chpi.sample_fname",
    "mne.utils.catch_logging",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_head_pos_chpi_on_chpi5_in_one_second_steps": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._calculate_chpi_positions",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.chpi5_fif_fname",
    "mne.tests.test_chpi.chpi5_pos_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_head_pos_chpi_on_chpi5_in_shorter_steps": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._calculate_chpi_positions",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.chpi5_fif_fname",
    "mne.tests.test_chpi.chpi5_pos_fname",
    "mne.tests.test_chpi.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_head_pos_ctf": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi.calculate_head_pos_ctf",
    "mne.tests.test_chpi.ctf_chpi_fname",
    "mne.tests.test_chpi.ctf_chpi_pos_fname",
    "mne.tests.test_chpi.ctf_fname",
    "mne.tests.test_chpi.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_chpi_adjust": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mne.chpi._get_hpi_info",
    "mne.chpi._get_hpi_initial_fit",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.utils.catch_logging",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_chpi_subtraction_filter_chpi": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.chpi.filter_chpi",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi.assert_suppressed",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.pytest",
    "mne.tests.test_chpi.sample_fname",
    "mne.tests.test_chpi.sss_hpisubt_fname",
    "mne.utils.assert_meg_snr",
    "mne.utils.catch_logging",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_hpi_info": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_info",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.sss_fif_fname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_initial_fit_redo": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "dict",
    "mne.chpi._setup_ext_proj",
    "mne.chpi.compute_chpi_locs",
    "mne.chpi.compute_head_pos",
    "mne.forward._compute_forward._MAG_FACTOR",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.transforms._angle_between_quats",
    "mne.transforms.rot_to_quat",
    "numpy.abs",
    "numpy.arccos",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.rad2deg",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_read_write_head_pos": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "mne.chpi.read_head_pos",
    "mne.chpi.write_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_chpi.pos_fname",
    "mne.tests.test_chpi.pytest",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_simulate_calculate_head_pos_chpi": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "mne.io.RawArray",
    "mne.io.read_info",
    "mne.pick_info",
    "mne.pick_types",
    "mne.simulation.add_chpi",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._calculate_chpi_positions",
    "mne.tests.test_chpi.raw_fname",
    "mne.transforms.rot_to_quat",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.int32",
    "numpy.outer",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.welch": {
  "data": {
   "shadows": "scipy.signal.welch"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.write_head_pos": {
  "data": {
   "shadows": "mne.chpi.write_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_coreg.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.tests.test_coreg._is_mri_subject": {
  "data": {
   "shadows": "mne.coreg._is_mri_subject"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.copytree": {
  "data": {
   "shadows": "shutil.copytree"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.coregister_fiducials": {
  "data": {
   "shadows": "mne.coreg.coregister_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.create_default_subject": {
  "data": {
   "shadows": "mne.coreg.create_default_subject"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_coreg.few_surfaces": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mne.tests.test_coreg.pytest",
    "mne.utils.modified_env"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.fit_matched_points": {
  "data": {
   "shadows": "mne.coreg.fit_matched_points"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.get_mni_fiducials": {
  "data": {
   "shadows": "mne.coreg.get_mni_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.read_fiducials": {
  "data": {
   "shadows": "mne.io.read_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.rotation": {
  "data": {
   "shadows": "mne.transforms.rotation"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_labels": {
  "data": {
   "shadows": "mne.coreg.scale_labels"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_mri": {
  "data": {
   "shadows": "mne.coreg.scale_mri"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_source_space": {
  "data": {
   "shadows": "mne.coreg.scale_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scaling": {
  "data": {
   "shadows": "mne.transforms.scaling"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.test_coregister_fiducials": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "make_dig",
    "mne.coreg.coregister_fiducials",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI",
    "mne.transforms.Transform",
    "mne.transforms.apply_trans",
    "mne.transforms.rotation",
    "mne.transforms.translation",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_coregister_fiducials.make_dig": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_fit_matched_points": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "RuntimeError",
    "functools.reduce",
    "mne.coreg.fit_matched_points",
    "mne.tests.test_coreg.pytest",
    "mne.transforms.apply_trans",
    "mne.transforms.rotation",
    "mne.transforms.scaling",
    "mne.transforms.translation",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_get_mni_fiducials": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "list",
    "mne.coreg.get_mni_fiducials",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI",
    "mne.io.read_fiducials",
    "mne.tests.test_coreg.data_path",
    "mne.utils.requires_nibabel",
    "numpy.array",
    "numpy.linalg.norm",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_scale_mri": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "glob.glob",
    "int",
    "len",
    "mne.coreg._is_mri_subject",
    "mne.coreg.create_default_subject",
    "mne.coreg.scale_labels",
    "mne.coreg.scale_mri",
    "mne.coreg.scale_source_space",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.write_source_spaces",
    "mne.tests.test_coreg.mne",
    "mne.tests.test_coreg.os",
    "mne.tests.test_coreg.pytest",
    "mne.transforms.apply_trans",
    "mne.utils.check_version",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "os.path.exists",
    "os.path.join",
    "print",
    "shutil.copyfile",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_scale_mri_xfm": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.coreg._is_mri_subject",
    "mne.coreg.create_default_subject",
    "mne.coreg.scale_mri",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.write_source_spaces",
    "mne.tests.test_coreg.mne",
    "mne.tests.test_coreg.os",
    "mne.tests.test_coreg.pytest",
    "mne.utils.requires_nibabel",
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.exists",
    "os.path.join",
    "shutil.copytree",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.write_source_spaces": {
  "data": {
   "shadows": "mne.source_space.write_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_cov": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_cov.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_cov.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_cov.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_cov._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.tests.test_cov._assert_cov": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov._assert_reorder": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov._auto_low_rank_model": {
  "data": {
   "shadows": "mne.cov._auto_low_rank_model"
  },
  "type": "import"
 },
 "mne.tests.test_cov._compute_rank_int": {
  "data": {
   "shadows": "mne.rank._compute_rank_int"
  },
  "type": "import"
 },
 "mne.tests.test_cov._cov_rank": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "mne.rank._compute_rank_int",
    "mne.tests.test_cov.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.tests.test_cov._regularized_covariance": {
  "data": {
   "shadows": "mne.cov._regularized_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_snr": {
  "data": {
   "shadows": "mne.utils.assert_snr"
  },
  "type": "import"
 },
 "mne.tests.test_cov.ave_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_cov.base_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_cov.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_whitener": {
  "data": {
   "shadows": "mne.cov.compute_whitener"
  },
  "type": "import"
 },
 "mne.tests.test_cov.cov_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_cov.cov_gz_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_cov.cov_km_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_cov.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_cov.ctf_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_cov.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_cov.erm_cov_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_cov.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.hp_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_cov.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.tests.test_cov.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.tests.test_cov.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_cov.merge_events": {
  "data": {
   "shadows": "mne.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_cov.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_channels_cov": {
  "data": {
   "shadows": "mne.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_cov.prepare_noise_cov": {
  "data": {
   "shadows": "mne.cov.prepare_noise_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_cov.raw_epochs_events": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.preprocessing.maxwell_filter",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_cov.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_cov.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.tests.test_cov.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_cov.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_cov.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_cov.test_ad_hoc_cov": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "mne.make_ad_hoc_cov",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.pytest",
    "numpy.diag",
    "numpy.testing.assert_array_almost_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_arithmetic_cov": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "mne.read_cov",
    "mne.tests.test_cov.cov_fname",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_auto_low_rank": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "RuntimeWarning",
    "get_data",
    "mne.cov._auto_low_rank_model",
    "mne.tests.test_cov.pytest",
    "mne.utils.requires_sklearn",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_auto_low_rank.get_data": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_compute_covariance_auto_reg": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "events",
    "itertools.combinations",
    "len",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.merge_events",
    "mne.pick_types",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "mne.utils.catch_logging",
    "mne.utils.requires_sklearn",
    "numpy.any",
    "numpy.diff",
    "numpy.eye",
    "numpy.invert",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_compute_whitener": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.compute_raw_covariance",
    "mne.cov.compute_whitener",
    "mne.io.read_raw_fif",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_ctf": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.cov.prepare_noise_cov",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_ctf",
    "mne.make_fixed_length_events",
    "mne.pick_types",
    "mne.tests.test_cov.ctf_fname",
    "mne.tests.test_cov.pytest",
    "mne.utils.requires_sklearn"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_on_raw": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Exception",
    "RuntimeWarning",
    "ValueError",
    "dict",
    "len",
    "mne.compute_raw_covariance",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_cov",
    "mne.tests.test_cov.erm_cov_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "mne.utils.assert_snr",
    "numpy.cov",
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.triu_indices"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_on_raw_reg": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.compute_raw_covariance",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.read_cov",
    "mne.tests.test_cov.erm_cov_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "mne.utils.assert_snr",
    "mne.utils.requires_sklearn"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_with_triggers": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.merge_events",
    "mne.read_cov",
    "mne.tests.test_cov._assert_cov",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.cov_km_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_mismatch": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_order": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "mne.cov.compute_whitener",
    "mne.cov.prepare_noise_cov",
    "mne.cov.regularize",
    "mne.cov.whiten_evoked",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov._assert_reorder",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_equalize_channels": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "mne.channels.equalize_channels",
    "mne.create_info",
    "mne.make_ad_hoc_cov"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_io_cov": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.pick_channels_cov",
    "mne.read_cov",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.cov_gz_fname",
    "mne.tests.test_cov.pytest",
    "mne.write_cov",
    "numpy.inf",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_low_rank_cov": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.compute_proj_raw",
    "mne.cov.regularize",
    "mne.rank._compute_rank_int",
    "mne.tests.test_cov._cov_rank",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_epochs_events",
    "mne.utils.catch_logging",
    "mne.utils.requires_sklearn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_low_rank_methods": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "mne.compute_covariance",
    "mne.tests.test_cov._cov_rank",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_epochs_events",
    "mne.utils.requires_sklearn",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_regularize_cov": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "mne.cov.regularize",
    "mne.fixes._get_args",
    "mne.io.pick._DATA_CH_TYPES_SPLIT",
    "mne.io.read_raw_fif",
    "mne.read_cov",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.raw_fname",
    "numpy.mean",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_regularized_covariance": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "mne.cov._regularized_covariance",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_whiten_evoked": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.cov.regularize",
    "mne.cov.whiten_evoked",
    "mne.pick_channels_cov",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.pytest",
    "numpy.abs",
    "numpy.all",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_cov.whiten_evoked": {
  "data": {
   "shadows": "mne.cov.whiten_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_cov.write_cov": {
  "data": {
   "shadows": "mne.write_cov"
  },
  "type": "import"
 },
 "mne.tests.test_defaults": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_defaults._handle_default": {
  "data": {
   "shadows": "mne.defaults._handle_default"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.test_handle_default": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "mne.defaults._handle_default",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "mne.tests.test_docstring_parameters.mne",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_docstring_parameters.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters._func_name": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mne.tests.test_docstring_parameters.inspect"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters._pl": {
  "data": {
   "shadows": "mne.utils._pl"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.char_limit": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.check_parameters_match": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "any",
    "getattr",
    "issubclass",
    "list",
    "mne.tests.test_docstring_parameters._func_name",
    "mne.tests.test_docstring_parameters.docstring_ignores",
    "mne.tests.test_docstring_parameters.error_ignores",
    "mne.tests.test_docstring_parameters.re",
    "mne.tests.test_docstring_parameters.subclass_name_ignores",
    "numpydoc.validate.validate"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.docscrape": {
  "data": {
   "shadows": "numpydoc.docscrape"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.docstring_ignores": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.documented_ignored_mods": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.documented_ignored_names": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.error_ignores": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.getsource": {
  "data": {
   "shadows": "inspect.getsource"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.mayavi": {
  "data": {
   "shadows": "mayavi"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.public_modules": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.requires_numpydoc": {
  "data": {
   "shadows": "mne.utils.requires_numpydoc"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.subclass_name_ignores": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.tab_ignores": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.test_docstring_parameters": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "__import__",
    "getattr",
    "globals",
    "hasattr",
    "len",
    "list",
    "mne.tests.test_docstring_parameters.check_parameters_match",
    "mne.tests.test_docstring_parameters.inspect",
    "mne.tests.test_docstring_parameters.mne",
    "mne.tests.test_docstring_parameters.public_modules",
    "mne.tests.test_docstring_parameters.pytest",
    "mne.utils._pl",
    "mne.utils.requires_numpydoc",
    "numpydoc.docscrape.ClassDoc",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.test_documented": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "__import__",
    "any",
    "getattr",
    "globals",
    "len",
    "list",
    "mne.tests.test_docstring_parameters.documented_ignored_mods",
    "mne.tests.test_docstring_parameters.documented_ignored_names",
    "mne.tests.test_docstring_parameters.inspect",
    "mne.tests.test_docstring_parameters.public_modules",
    "mne.tests.test_docstring_parameters.pytest",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "set",
    "sorted",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.test_tabs": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ImportError",
    "__import__",
    "inspect.getsource",
    "mne.tests.test_docstring_parameters.mne",
    "mne.tests.test_docstring_parameters.pytest",
    "mne.tests.test_docstring_parameters.sys",
    "mne.tests.test_docstring_parameters.tab_ignores",
    "pkgutil.walk_packages"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.validate": {
  "data": {
   "shadows": "numpydoc.validate.validate"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.walk_packages": {
  "data": {
   "shadows": "pkgutil.walk_packages"
  },
  "type": "import"
 },
 "mne.tests.test_epochs": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.data_path",
    "mne.tests.test_epochs.base_dir",
    "mne.tests.test_epochs.data_path",
    "mne.utils.run_tests_if_main",
    "numpy.int64",
    "numpy.random.RandomState",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_epochs.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.BaseEpochs": {
  "data": {
   "shadows": "mne.epochs.BaseEpochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.EpochsArray": {
  "data": {
   "shadows": "mne.epochs.EpochsArray"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._FakeNoPandas": {
  "data": {
   "shadows": "mne.utils._FakeNoPandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._get_data": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "events",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.tests.test_epochs.event_name",
    "mne.tests.test_epochs.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs._handle_event_repeated": {
  "data": {
   "shadows": "mne.epochs._handle_event_repeated"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.add_channels_epochs": {
  "data": {
   "shadows": "mne.epochs.add_channels_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_meg_snr": {
  "data": {
   "shadows": "mne.utils.assert_meg_snr"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_metadata_equal": {
  "data": {
   "lineno": 2607,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.tests.test_epochs.pandas",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.average_movements": {
  "data": {
   "shadows": "mne.epochs.average_movements"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.base_dir": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.bootstrap": {
  "data": {
   "shadows": "mne.epochs.bootstrap"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.combine_event_ids": {
  "data": {
   "shadows": "mne.epochs.combine_event_ids"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.concatenate_epochs": {
  "data": {
   "shadows": "mne.epochs.concatenate_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.data_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.equalize_epoch_counts": {
  "data": {
   "shadows": "mne.epochs.equalize_epoch_counts"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.event_id_2": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.event_name": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.evoked_nf_name": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.flat": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_move": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_move_pos": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_movecomp_sss": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_testing": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.head_pos_to_trans_rot_t": {
  "data": {
   "shadows": "mne.chpi.head_pos_to_trans_rot_t"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.merge_events": {
  "data": {
   "shadows": "mne.event.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.raw_fname": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.read_epochs": {
  "data": {
   "shadows": "mne.read_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.reject": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rescale": {
  "data": {
   "shadows": "mne.baseline.rescale"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rfft": {
  "data": {
   "shadows": "mne.fixes.rfft"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rfftfreq": {
  "data": {
   "shadows": "mne.fixes.rfftfreq"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rng": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.test_access_by_name": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "events",
    "int",
    "len",
    "list",
    "mne.Epochs",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.logical_or",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels_epochs": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "events",
    "len",
    "make_epochs",
    "mne.epochs.add_channels_epochs",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels_epochs.make_epochs": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "events",
    "mne.Epochs"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_array_epochs": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "int",
    "len",
    "matplotlib.pyplot.close",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.read_epochs",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.rng",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "numpy.zeros",
    "numpy.zeros_like",
    "os.path.join",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_methods": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "events",
    "fun",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.tests.test_epochs.rng",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_methods.fun": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_movements": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "TypeError",
    "copy.deepcopy",
    "events",
    "len",
    "mne.Epochs",
    "mne.chpi.head_pos_to_trans_rot_t",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.epochs.average_movements",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.pick_types",
    "mne.preprocessing.maxwell_filter",
    "mne.tests.test_epochs.fname_raw_move",
    "mne.tests.test_epochs.fname_raw_move_pos",
    "mne.tests.test_epochs.fname_raw_movecomp_sss",
    "mne.tests.test_epochs.pytest",
    "mne.utils.assert_meg_snr",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_base_epochs": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "mne.epochs.BaseEpochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_bootstrap": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.epochs.bootstrap",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "mne.utils.check_version",
    "numpy.random.default_rng"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_channel_types_mixin": {
  "data": {
   "lineno": 2732,
   "symbols_in_volume": [
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.in1d"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_comparision_with_c": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.pick_channels",
    "mne.read_evokeds",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.evoked_nf_name",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_concatenate_epochs": {
  "data": {
   "lineno": 2315,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "list",
    "mne.Epochs",
    "mne.epochs.concatenate_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.delete",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_concatenate_epochs_large": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.epochs.concatenate_epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.max",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_contains": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "events",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_crop": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_decim": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "float",
    "mne.Epochs",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.rng",
    "numpy.arange",
    "numpy.array",
    "numpy.isclose",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_default_values": {
  "data": {
   "lineno": 2447,
   "symbols_in_volume": [
    "events",
    "hash",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_delayed_epochs": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.epochs.EpochsArray",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.reject",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_detrend": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.allclose",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_channels_mixin": {
  "data": {
   "lineno": 2053,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_epochs": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_epochs_mult": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_combine_ids": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.epochs.combine_event_ids",
    "mne.event.merge_events",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_eq": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "copy.deepcopy",
    "events",
    "len",
    "mne.Epochs",
    "mne.epochs.combine_event_ids",
    "mne.epochs.equalize_epoch_counts",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.event_id_2",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.int32",
    "numpy.logical_or",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_multi_ids": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_bad_baseline": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "float",
    "mne.Epochs",
    "mne.baseline.rescale",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_baseline": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "events",
    "float",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_copy": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_drop_selection": {
  "data": {
   "lineno": 2788,
   "symbols_in_volume": [
    "_get_selection",
    "dict",
    "events",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_epochs.fname_raw_testing",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.raw_fname",
    "mne.tests.test_epochs.reject",
    "numpy.arange",
    "numpy.round",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_drop_selection._get_selection": {
  "data": {
   "lineno": 2806,
   "symbols_in_volume": [
    "int",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_get_data_item": {
  "data": {
   "lineno": 2876,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_hash": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "hash",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pickle",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_io_preload": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "isinstance",
    "len",
    "mne.Epochs",
    "mne.epochs.BaseEpochs",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_io_proj": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.Epochs",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "mne.utils.object_diff",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_proj": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "AssertionError",
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.raw_fname",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_proj_mixin": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_equalize_channels": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.equalize_channels",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_event_ordering": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "dict",
    "events",
    "events.copy",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_event_repeated": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "events",
    "mne.tests.test_epochs.mne",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_events_list": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": [
    "events",
    "mne.tests.test_epochs.mne",
    "numpy.array",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_events_type": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "TypeError",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_arithmetic": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.combine_evoked",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_io_from_epochs": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.read_evokeds",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_standard_error": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.constants.FIFF.FIFFV_ASPECT_AVERAGE",
    "mne.io.constants.FIFF.FIFFV_ASPECT_STD_ERR",
    "mne.read_evokeds",
    "mne.tests.test_epochs._get_data",
    "mne.write_evokeds",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_file_like": {
  "data": {
   "lineno": 2853,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "io.BytesIO",
    "mne.read_epochs",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "numpy.random.RandomState",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_filter": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "len",
    "mne.Epochs",
    "mne.fixes.rfft",
    "mne.fixes.rfftfreq",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_handle_event_repeated": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "copy.deepcopy",
    "events",
    "len",
    "list",
    "mne.epochs._handle_event_repeated",
    "mne.tests.test_epochs.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_equal",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_hierarchical": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_illegal_event_id": {
  "data": {
   "lineno": 2111,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_indexing_slicing": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "mne.tests.test_epochs.rng",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_io_epochs_basic": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.pick_events",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_iter_evoked": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_metadata": {
  "data": {
   "lineno": 2455,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.read_epochs",
    "mne.tests.test_epochs.assert_metadata_equal",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "mne.utils._FakeNoPandas",
    "mne.utils.catch_logging",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.array",
    "numpy.column_stack",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "os.path.join",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_no_epochs": {
  "data": {
   "lineno": 2702,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "events",
    "len",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_own_data": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.mne"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_pick_channels_mixin": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_preload_epochs": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_read_epochs_bad_events": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_readonly_times": {
  "data": {
   "lineno": 2720,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Annotations",
    "mne.Epochs",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "mne.utils._dt_to_stamp",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject_epochs": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "all",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_resample": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.epochs.concatenate_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "numpy.allclose",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_rescale": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "float",
    "functools.partial",
    "mne.baseline.rescale",
    "numpy.array",
    "numpy.log10",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "tester"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_save_complex_data": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.complex128",
    "numpy.float64",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_save_overwrite": {
  "data": {
   "lineno": 2639,
   "symbols_in_volume": [
    "IOError",
    "events",
    "mne.tests.test_epochs.mne",
    "mne.tests.test_epochs.pytest",
    "numpy.random.RandomState",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_savgol_filter": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "len",
    "mne.Epochs",
    "mne.fixes.rfft",
    "mne.fixes.rfftfreq",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_seeg_ecog": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.pick_types",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_shift_time": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_shift_time_raises_when_not_loaded": {
  "data": {
   "lineno": 2776,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_split_saving": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "events",
    "mne.tests.test_epochs.mne",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_subtract_evoked": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.hstack",
    "numpy.in1d",
    "numpy.testing.assert_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame_index": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "all",
    "events",
    "isinstance",
    "len",
    "list",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.utils.requires_pandas",
    "numpy.in1d",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame_time_format": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "events",
    "isinstance",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.utils.requires_pandas",
    "numpy.float64",
    "numpy.int64",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.write_evokeds": {
  "data": {
   "shadows": "mne.write_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_event": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_event.base_dir",
    "mne.tests.test_event.elekta_base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_event.AcqParserFIF": {
  "data": {
   "shadows": "mne.event.AcqParserFIF"
  },
  "type": "import"
 },
 "mne.tests.test_event.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_event.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_event.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.base_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_event.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_event.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_event.define_target_events": {
  "data": {
   "shadows": "mne.event.define_target_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.elekta_base_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_event.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.find_stim_steps": {
  "data": {
   "shadows": "mne.find_stim_steps"
  },
  "type": "import"
 },
 "mne.tests.test_event.fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_1": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_ave_elekta": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_c_annot": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_gz": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_old_txt": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_raw": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_raw_elekta": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt_1": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt_mpr": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_event.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.merge_events": {
  "data": {
   "shadows": "mne.event.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_event.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_event.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_event.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.tests.test_event.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_event.raw_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_event.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_event.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_event.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_event.shift_time_events": {
  "data": {
   "shadows": "mne.event.shift_time_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.test_acqparser": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.AcqParserFIF",
    "mne.io.read_raw_fif",
    "mne.tests.test_event.fname_raw_elekta",
    "mne.tests.test_event.pytest",
    "mne.tests.test_event.raw_fname",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_acqparser_averaging": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.AcqParserFIF",
    "mne.io.read_raw_fif",
    "mne.read_evokeds",
    "mne.tests.test_event.fname_ave_elekta",
    "mne.tests.test_event.fname_raw_elekta",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_add_events": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.tests.test_event.pytest",
    "mne.tests.test_event.raw_fname",
    "numpy.array",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_define_events": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "mne.event.define_target_events",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.tests.test_event.fname",
    "mne.tests.test_event.raw_fname",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_find_events": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "events",
    "mne.Annotations",
    "mne.create_info",
    "mne.find_events",
    "mne.find_stim_steps",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.pick_channels",
    "mne.read_events",
    "mne.tests.test_event.fname",
    "mne.tests.test_event.os",
    "mne.tests.test_event.pytest",
    "mne.tests.test_event.raw_fname",
    "numpy.arange",
    "numpy.empty",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_fix_stim": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.tests.test_event.pytest",
    "mne.tests.test_event.raw_fname",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_io_c_annot": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "events",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.tests.test_event.fname_c_annot",
    "mne.tests.test_event.fname_raw",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_io_events": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "events",
    "events.copy",
    "mne.read_events",
    "mne.tests.test_event.fname",
    "mne.tests.test_event.fname_1",
    "mne.tests.test_event.fname_gz",
    "mne.tests.test_event.fname_old_txt",
    "mne.tests.test_event.fname_txt_mpr",
    "mne.tests.test_event.pytest",
    "mne.write_events",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_make_fixed_length_events": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "events",
    "events.shape",
    "len",
    "mne.compute_raw_covariance",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.tests.test_event.pytest",
    "mne.tests.test_event.raw_fname",
    "numpy.cov",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_merge_events": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "events",
    "mne.event.merge_events",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_pick_events": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "events",
    "mne.pick_events",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_shift_time_events": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "all",
    "events",
    "mne.event.shift_time_events",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_event.write_events": {
  "data": {
   "shadows": "mne.write_events"
  },
  "type": "import"
 },
 "mne.tests.test_evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.tests.test_evoked.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_evoked.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.Evoked": {
  "data": {
   "shadows": "mne.evoked.Evoked"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.EvokedArray": {
  "data": {
   "shadows": "mne.evoked.EvokedArray"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "mne.tests.test_evoked._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_evoked._aspect_kinds": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "getattr",
    "list",
    "mne.io.constants.FIFF",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked._get_peak": {
  "data": {
   "shadows": "mne.evoked._get_peak"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.event_name": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.fname_gz": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.test_add_channels": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_arithmetic": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "mne.combine_evoked",
    "mne.evoked.EvokedArray",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "mne.utils.grand_average",
    "numpy.allclose",
    "numpy.full_like",
    "numpy.ones_like",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_array_epochs": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.evoked.EvokedArray",
    "mne.read_evokeds",
    "mne.tests.test_evoked.pytest",
    "mne.utils._TempDir",
    "numpy.c_",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_decim": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "events",
    "float",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.evoked.EvokedArray",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.tests.test_evoked.event_name",
    "mne.tests.test_evoked.raw_fname",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmin",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_drop_channels_mixin": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_equalize_channels": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mne.equalize_channels",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_aspects": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mne.read_evokeds",
    "mne.tests.test_evoked._aspect_kinds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_baseline": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "mne.evoked.EvokedArray",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.ones_like",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_detrend": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "mne.pick_types",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_filter": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_allclose",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_proj": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "numpy.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_resample": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.utils._TempDir",
    "mne.write_evokeds",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_get_peak": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.evoked._get_peak",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_hash_evoked": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "hash",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pickle"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_hilbert": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.tests.test_evoked.event_name",
    "mne.tests.test_evoked.pytest",
    "mne.tests.test_evoked.raw_fname",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_io_evoked": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "all",
    "mne.evoked.Evoked",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.fname_gz",
    "mne.tests.test_evoked.pytest",
    "mne.write_evokeds",
    "numpy.allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_pick_channels_mixin": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_savgol_filter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "numpy.abs",
    "numpy.logical_and",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_shift_time_evoked": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.utils._TempDir",
    "mne.write_evokeds",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_time_as_index_and_crop": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_to_data_frame": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.in1d",
    "numpy.testing.assert_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_to_data_frame_time_format": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "isinstance",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.pytest",
    "mne.utils.requires_pandas",
    "numpy.float64",
    "numpy.int64",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.write_evokeds": {
  "data": {
   "shadows": "mne.write_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_filter": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_filter.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_filter._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.tests.test_filter._Interp2": {
  "data": {
   "shadows": "mne.filter._Interp2"
  },
  "type": "import"
 },
 "mne.tests.test_filter._cuda_capable": {
  "data": {
   "shadows": "mne.cuda._cuda_capable"
  },
  "type": "import"
 },
 "mne.tests.test_filter._overlap_add_filter": {
  "data": {
   "shadows": "mne.filter._overlap_add_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter._resample_stim_channels": {
  "data": {
   "shadows": "mne.filter._resample_stim_channels"
  },
  "type": "import"
 },
 "mne.tests.test_filter._smart_pad": {
  "data": {
   "shadows": "mne.filter._smart_pad"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_filter.butter": {
  "data": {
   "shadows": "scipy.signal.butter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_filter.construct_iir_filter": {
  "data": {
   "shadows": "mne.filter.construct_iir_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.create_filter": {
  "data": {
   "shadows": "mne.filter.create_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_filter.design_mne_c_filter": {
  "data": {
   "shadows": "mne.filter.design_mne_c_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.detrend": {
  "data": {
   "shadows": "mne.filter.detrend"
  },
  "type": "import"
 },
 "mne.tests.test_filter.estimate_ringing_samples": {
  "data": {
   "shadows": "mne.filter.estimate_ringing_samples"
  },
  "type": "import"
 },
 "mne.tests.test_filter.fft": {
  "data": {
   "shadows": "mne.fixes.fft"
  },
  "type": "import"
 },
 "mne.tests.test_filter.fftfreq": {
  "data": {
   "shadows": "mne.fixes.fftfreq"
  },
  "type": "import"
 },
 "mne.tests.test_filter.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.tests.test_filter.freqz": {
  "data": {
   "shadows": "scipy.signal.freqz"
  },
  "type": "import"
 },
 "mne.tests.test_filter.notch_filter": {
  "data": {
   "shadows": "mne.filter.notch_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_filter.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_filter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_filter.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_filter.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.tests.test_filter.resample": {
  "data": {
   "shadows": "mne.filter.resample"
  },
  "type": "import"
 },
 "mne.tests.test_filter.rng": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.tests.test_filter.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_filter.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sosfreqz": {
  "data": {
   "shadows": "scipy.signal.sosfreqz"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sp_resample": {
  "data": {
   "shadows": "scipy.signal.resample"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.tests.test_filter.test_1d_filter": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "max",
    "mne.filter._overlap_add_filter",
    "mne.filter._smart_pad",
    "mne.tests.test_filter.pytest",
    "mne.tests.test_filter.rng",
    "numpy.concatenate",
    "numpy.convolve",
    "numpy.newaxis",
    "numpy.newaxis.copy",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_cuda_fir": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "dict",
    "mne.cuda._cuda_capable",
    "mne.filter.filter_data",
    "mne.tests.test_filter.pytest",
    "mne.tests.test_filter.rng",
    "mne.utils.catch_logging",
    "numpy.testing.assert_array_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_cuda_resampling": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "mne.filter.resample",
    "mne.tests.test_filter.rng",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_detrend": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "mne.filter.detrend",
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_estimate_ringing": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.filter.estimate_ringing_samples",
    "mne.tests.test_filter.pytest",
    "scipy.signal.butter"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_array": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict",
    "mne.filter.filter_data",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_auto": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.filter.filter_data",
    "mne.tests.test_filter.pytest",
    "numpy.arange",
    "numpy.float32",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_picks": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.create_info",
    "mne.filter.filter_data",
    "mne.io.RawArray",
    "mne.io.pick._DATA_CH_TYPES_SPLIT",
    "mne.tests.test_filter.pytest",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filters": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "float",
    "len",
    "list",
    "mne.filter.construct_iir_filter",
    "mne.filter.create_filter",
    "mne.filter.filter_data",
    "mne.filter.resample",
    "mne.fixes.fft",
    "mne.fixes.fftfreq",
    "mne.tests.test_filter.pytest",
    "mne.tests.test_filter.rng",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.mean",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "scipy.signal.resample"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_iir_stability": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dict",
    "mne.filter.construct_iir_filter",
    "mne.filter.filter_data",
    "mne.tests.test_filter.pytest",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_interp2": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "mne.filter._Interp2",
    "numpy.array",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_mne_c_design": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "mne.create_info",
    "mne.filter.design_mne_c_filter",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "os.path.join",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_n_jobs": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "mne.filter.filter_data",
    "mne.filter.resample",
    "mne.tests.test_filter.pytest",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_notch_filters": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.filter.notch_filter",
    "mne.tests.test_filter.pytest",
    "mne.tests.test_filter.rng",
    "mne.utils.catch_logging",
    "mne.utils.sum_squared",
    "numpy.arange",
    "numpy.fromstring",
    "numpy.mean",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_reporting_fir": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "len",
    "mne.filter.create_filter",
    "mne.tests.test_filter.pytest",
    "mne.utils.catch_logging",
    "numpy.abs",
    "numpy.argmin",
    "numpy.convolve",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "scipy.signal.freqz"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_reporting_iir": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.filter.create_filter",
    "mne.tests.test_filter.pytest",
    "mne.utils.catch_logging",
    "numpy.abs",
    "numpy.argmin",
    "numpy.log10",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less",
    "scipy.signal.freqz",
    "scipy.signal.sosfreqz"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resamp_stim_channel": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "mne.filter._resample_stim_channels",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "mne.filter.resample",
    "mne.tests.test_filter.rng",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample_raw": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.RawArray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample_scipy": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "mne.filter.resample",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "round",
    "scipy.signal.resample"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_import_nesting": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_import_nesting.run_script": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.tests.test_import_nesting.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.test_module_nesting": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.tests.test_import_nesting.run_script",
    "mne.tests.test_import_nesting.sys",
    "mne.utils.run_subprocess"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_label.data_path",
    "mne.tests.test_label.subjects_dir",
    "mne.tests.test_label.test_path",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_label.Label": {
  "data": {
   "shadows": "mne.label.Label"
  },
  "type": "import"
 },
 "mne.tests.test_label.SourceSpaces": {
  "data": {
   "shadows": "mne.source_space.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_label._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_label._assert_labels_equal": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label._blend_colors": {
  "data": {
   "shadows": "mne.label._blend_colors"
  },
  "type": "import"
 },
 "mne.tests.test_label._load_vert_pos": {
  "data": {
   "shadows": "mne.label._load_vert_pos"
  },
  "type": "import"
 },
 "mne.tests.test_label._n_colors": {
  "data": {
   "shadows": "mne.label._n_colors"
  },
  "type": "import"
 },
 "mne.tests.test_label._stc_to_label": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "mne.label.Label",
    "mne.label._n_colors",
    "mne.read_surface",
    "mne.source_estimate.mesh_edges",
    "mne.source_space.SourceSpaces",
    "mne.tests.test_label.subjects_dir",
    "mne.utils.get_subjects_dir",
    "numpy.any",
    "numpy.ones",
    "numpy.where",
    "os.path.join",
    "range",
    "scipy.sparse.eye",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_labels_equal": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "getattr",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_label.data_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_label.fwd_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_label.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.tests.test_label.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.tests.test_label.grow_labels": {
  "data": {
   "shadows": "mne.grow_labels"
  },
  "type": "import"
 },
 "mne.tests.test_label.label_dir": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_rh_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.tests.test_label.labels_to_stc": {
  "data": {
   "shadows": "mne.labels_to_stc"
  },
  "type": "import"
 },
 "mne.tests.test_label.mesh_edges": {
  "data": {
   "shadows": "mne.source_estimate.mesh_edges"
  },
  "type": "import"
 },
 "mne.tests.test_label.morph_labels": {
  "data": {
   "shadows": "mne.morph_labels"
  },
  "type": "import"
 },
 "mne.tests.test_label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_label.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_label.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_label.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.tests.test_label.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.tests.test_label.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_label.random_parcellation": {
  "data": {
   "shadows": "mne.random_parcellation"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_label": {
  "data": {
   "shadows": "mne.read_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_labels_from_annot": {
  "data": {
   "shadows": "mne.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_label.real_label_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_label.real_label_rh_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_label.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_label.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_label.select_sources": {
  "data": {
   "shadows": "mne.label.select_sources"
  },
  "type": "import"
 },
 "mne.tests.test_label.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.tests.test_label.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_label.spatial_tris_connectivity": {
  "data": {
   "shadows": "mne.spatial_tris_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_label.split_label": {
  "data": {
   "shadows": "mne.split_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.src_bad_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_label.src_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_label.stc_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_label.stc_to_label": {
  "data": {
   "shadows": "mne.stc_to_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_label.test_annot_io": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_labels_from_annot",
    "mne.read_surface",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.label_dir",
    "mne.tests.test_label.os",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.shutil",
    "mne.tests.test_label.subjects_dir",
    "mne.utils._TempDir",
    "mne.write_labels_to_annot",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_copy": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mne.read_label",
    "mne.tests.test_label.label_fname",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_grow_labels": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.grow_labels",
    "mne.tests.test_label.subjects_dir",
    "numpy.all",
    "numpy.any",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_addition": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "mne.label.Label",
    "mne.label._blend_colors",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.pytest",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "numpy.where",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_center_of_mass": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.src_fname",
    "mne.tests.test_label.stc_fname",
    "mne.tests.test_label.subjects_dir",
    "numpy.argmin",
    "numpy.intersect1d",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_fill_restrict": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_label",
    "mne.read_source_spaces",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.real_label_fname",
    "mne.tests.test_label.src_fname",
    "mne.tests.test_label.v1_label_fname",
    "mne.utils.check_version",
    "numpy.append",
    "numpy.array",
    "numpy.digitize",
    "numpy.in1d",
    "numpy.logical_not",
    "numpy.nonzero",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_io": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.label_fname",
    "mne.tests.test_label.pickle",
    "mne.utils._TempDir",
    "numpy.testing.assert_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_io_and_time_course_estimates": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.read_source_estimate",
    "mne.tests.test_label.real_label_fname",
    "mne.tests.test_label.stc_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_sign_flip": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.label.label_sign_flip",
    "mne.read_source_spaces",
    "mne.tests.test_label.src_fname",
    "numpy.array",
    "numpy.dot",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_subject": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mne.read_label",
    "mne.tests.test_label.label_fname",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_labels_to_stc": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.labels_to_stc",
    "mne.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.stc_fname",
    "mne.tests.test_label.subjects_dir",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_morph": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.real_label_fname",
    "mne.tests.test_label.subjects_dir",
    "numpy.arange",
    "numpy.in1d",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_morph_labels": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.label._load_vert_pos",
    "mne.morph_labels",
    "mne.read_labels_from_annot",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.subjects_dir",
    "numpy.in1d",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_path": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_label.test_random_parcellation": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.random_parcellation",
    "mne.read_surface",
    "mne.tests.test_label.subjects_dir",
    "numpy.append",
    "numpy.arange",
    "numpy.atleast_1d",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_read_labels_from_annot": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_labels_from_annot",
    "mne.tests.test_label._assert_labels_equal",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.subjects_dir",
    "os.path.join",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_read_labels_from_annot_annot2labels": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.read_labels_from_annot",
    "mne.tests.test_label._assert_labels_equal",
    "mne.tests.test_label.glob",
    "mne.tests.test_label.label_dir",
    "mne.tests.test_label.subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_select_sources": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.select_sources",
    "mne.read_label",
    "mne.tests.test_label.subjects_dir",
    "os.path.join",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_split_label": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.read_labels_from_annot",
    "mne.split_label",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.subjects_dir",
    "mne.utils.requires_sklearn",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_stc_to_label": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.source_space.SourceSpaces",
    "mne.spatial_tris_connectivity",
    "mne.stc_to_label",
    "mne.tests.test_label._stc_to_label",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.data_path",
    "mne.tests.test_label.fwd_fname",
    "mne.tests.test_label.os",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.src_bad_fname",
    "mne.tests.test_label.stc_fname",
    "mne.tests.test_label.subjects_dir",
    "mne.utils.requires_sklearn",
    "numpy.testing.assert_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_write_labels_to_annot": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_labels_from_annot",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.os",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.shutil",
    "mne.tests.test_label.subjects_dir",
    "mne.utils._TempDir",
    "mne.write_labels_to_annot",
    "numpy.all",
    "numpy.in1d",
    "numpy.testing.assert_equal",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_label.v1_label_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_label.write_labels_to_annot": {
  "data": {
   "shadows": "mne.write_labels_to_annot"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_line_endings.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings._assert_line_endings": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AssertionError",
    "UnicodeDecodeError",
    "len",
    "list",
    "mne.tests.test_line_endings.os",
    "mne.tests.test_line_endings.skip_files",
    "mne.tests.test_line_endings.sys",
    "open",
    "os.path.join",
    "os.path.relpath",
    "os.path.splitext",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_line_endings._get_root_dir": {
  "data": {
   "shadows": "mne.utils._get_root_dir"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.skip_files": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.tests.test_line_endings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.test_line_endings": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AssertionError",
    "mne.tests.test_line_endings._assert_line_endings",
    "mne.tests.test_line_endings.pytest",
    "mne.utils._TempDir",
    "mne.utils._get_root_dir",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_misc": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_misc.ave_fname": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mne.tests.test_misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_misc.parse_config": {
  "data": {
   "shadows": "mne.misc.parse_config"
  },
  "type": "import"
 },
 "mne.tests.test_misc.test_parse_ave": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "mne.misc.parse_config",
    "mne.tests.test_misc.ave_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_morph.data_path",
    "mne.tests.test_morph.sample_dir",
    "mne.tests.test_morph.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_morph.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.SourceMorph": {
  "data": {
   "shadows": "mne.SourceMorph"
  },
  "type": "import"
 },
 "mne.tests.test_morph.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.tests.test_morph._real_vec_stc": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_evokeds",
    "mne.tests.test_morph.fname_evoked",
    "mne.tests.test_morph.fname_inv_surf"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_morph.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_morph.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.tests.test_morph.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_morph.compute_source_morph": {
  "data": {
   "shadows": "mne.compute_source_morph"
  },
  "type": "import"
 },
 "mne.tests.test_morph.data_path": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_brain": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_evoked": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_fmorph": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_fwd_vol": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_inv_surf": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_inv_vol": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_smorph": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_stc": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_t1": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_trans": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_morph.fname_vol": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_morph.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.tests.test_morph.grade_to_vertices": {
  "data": {
   "shadows": "mne.grade_to_vertices"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_morph.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_morph.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_morph.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_morph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_morph.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_morph.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_morph.read_source_morph": {
  "data": {
   "shadows": "mne.read_source_morph"
  },
  "type": "import"
 },
 "mne.tests.test_morph.requires_dipy": {
  "data": {
   "shadows": "mne.utils.requires_dipy"
  },
  "type": "import"
 },
 "mne.tests.test_morph.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_morph.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_morph.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_morph.sample_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_morph.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_morph.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_morph.test_morph_stc_dense": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.grade_to_vertices",
    "mne.read_source_estimate",
    "mne.tests.test_morph._real_vec_stc",
    "mne.tests.test_morph.fname_fmorph",
    "mne.tests.test_morph.fname_smorph",
    "mne.tests.test_morph.pytest",
    "mne.tests.test_morph.subjects_dir",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_morph_stc_sparse": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.tests.test_morph.fname_smorph",
    "mne.tests.test_morph.pytest",
    "mne.tests.test_morph.subjects_dir",
    "numpy.array",
    "numpy.int64",
    "numpy.sort",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_sourcemorph_consistency": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mne.SourceMorph.__init__",
    "mne.fixes._get_args",
    "mne.tests.test_morph.mne"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_sparse_morph": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.SourceEstimate",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_morph.mne",
    "mne.tests.test_morph.subjects_dir",
    "numpy.arange",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.random.RandomState",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less",
    "os.path.join",
    "scipy.spatial.distance.cdist",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_surface_source_morph_round_trip": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_morph.fname_smorph",
    "mne.tests.test_morph.mne",
    "mne.tests.test_morph.pytest",
    "mne.tests.test_morph.subjects_dir",
    "mne.utils.check_version",
    "numpy.corrcoef",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_surface_vector_source_morph": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "list",
    "mne.SourceEstimate",
    "mne.SourceMorph",
    "mne.VectorSourceEstimate",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_source_estimate",
    "mne.read_source_morph",
    "mne.tests.test_morph._real_vec_stc",
    "mne.tests.test_morph.fname_inv_surf",
    "mne.tests.test_morph.fname_smorph",
    "mne.tests.test_morph.fname_vol",
    "mne.tests.test_morph.pytest",
    "mne.tests.test_morph.subjects_dir",
    "mne.utils.requires_h5py",
    "repr",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_volume_labels_morph": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "bool",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_ad_hoc_cov",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.setup_volume_source_space",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_morph.fname_evoked",
    "mne.tests.test_morph.fname_trans",
    "mne.tests.test_morph.mne",
    "mne.tests.test_morph.subjects_dir",
    "mne.utils.requires_nibabel",
    "numpy.array",
    "os.path.join",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_volume_source_morph": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "IOError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "mne.VolSourceEstimate",
    "mne.VolVectorSourceEstimate",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_forward_solution",
    "mne.read_source_estimate",
    "mne.read_source_morph",
    "mne.tests.test_morph.fname_fwd_vol",
    "mne.tests.test_morph.fname_inv_vol",
    "mne.tests.test_morph.fname_stc",
    "mne.tests.test_morph.fname_vol",
    "mne.tests.test_morph.pytest",
    "mne.tests.test_morph.subjects_dir",
    "mne.utils.requires_dipy",
    "mne.utils.requires_h5py",
    "mne.utils.requires_nibabel",
    "nibabel.Nifti1Image",
    "nibabel.Nifti2Image",
    "numpy.array_equal",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "range",
    "repr",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.test_xhemi_morph": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.tests.test_morph.fname_stc",
    "mne.tests.test_morph.subjects_dir",
    "numpy.arange",
    "numpy.corrcoef",
    "numpy.in1d",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_morph.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_proj": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_proj.base_dir",
    "mne.tests.test_proj.sample_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_proj.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_proj.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_proj._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_proj._check_warnings": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "all",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_proj.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj._compute_rank_int": {
  "data": {
   "shadows": "mne.rank._compute_rank_int"
  },
  "type": "import"
 },
 "mne.tests.test_proj._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj._needs_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._needs_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.activate_proj": {
  "data": {
   "shadows": "mne.io.proj.activate_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_proj.bads_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_proj.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_proj.compute_proj_epochs": {
  "data": {
   "shadows": "mne.compute_proj_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_whitener": {
  "data": {
   "shadows": "mne.cov.compute_whitener"
  },
  "type": "import"
 },
 "mne.tests.test_proj.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_proj.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.tests.test_proj.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_proj.ecg_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_proj.eog_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_proj.event_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_proj.fwd_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.tests.test_proj.make_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.proj.make_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.tests.test_proj.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_proj.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_proj.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_proj.proj_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_proj.proj_gz_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_proj.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_proj.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_proj.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_proj": {
  "data": {
   "shadows": "mne.proj.read_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_proj.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.tests.test_proj.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_proj.sample_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_proj.sensitivity_map": {
  "data": {
   "shadows": "mne.sensitivity_map"
  },
  "type": "import"
 },
 "mne.tests.test_proj.sensmap_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_proj.test_bad_proj": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.compute_raw_covariance",
    "mne.cov.regularize",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.tests.test_proj._check_warnings",
    "mne.tests.test_proj.event_fname",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.raw_fname",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_compute_proj_epochs": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "RuntimeWarning",
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_proj_epochs",
    "mne.compute_proj_evoked",
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_projector",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.proj.read_proj",
    "mne.proj.write_proj",
    "mne.read_events",
    "mne.tests.test_proj.event_fname",
    "mne.tests.test_proj.proj_fname",
    "mne.tests.test_proj.proj_gz_fname",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.raw_fname",
    "mne.utils._TempDir",
    "numpy.bool",
    "numpy.corrcoef",
    "numpy.ones",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_compute_proj_raw": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "RuntimeWarning",
    "copy.deepcopy",
    "len",
    "mne.compute_proj_raw",
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_projector",
    "mne.io.read_raw_fif",
    "mne.tests.test_proj.bads_fname",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.raw_fname",
    "mne.utils._TempDir",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_has_eeg_average_ref_proj": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.proj._has_eeg_average_ref_proj",
    "mne.tests.test_proj.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_make_eeg_average_ref_proj": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.proj._has_eeg_average_ref_proj",
    "mne.proj.make_eeg_average_ref_proj",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.raw_fname",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_needs_eeg_average_ref_proj": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "mne.io.proj._needs_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.tests.test_proj.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_proj_raw_duration": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.compute_proj_raw",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.tests.test_proj.pytest",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.pi",
    "numpy.rad2deg",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "round",
    "scipy.linalg.subspace_angles",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_sensitivity_maps": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.proj.make_eeg_average_ref_proj",
    "mne.proj.read_proj",
    "mne.read_forward_solution",
    "mne.read_source_estimate",
    "mne.sensitivity_map",
    "mne.tests.test_proj.ecg_fname",
    "mne.tests.test_proj.eog_fname",
    "mne.tests.test_proj.fwd_fname",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.sample_path",
    "mne.tests.test_proj.sensmap_fname",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_sss_proj": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.compute_proj_raw",
    "mne.compute_raw_covariance",
    "mne.cov.compute_whitener",
    "mne.io.read_raw_fif",
    "mne.preprocessing.maxwell_filter",
    "mne.rank._compute_rank_int",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_proj.write_proj": {
  "data": {
   "shadows": "mne.proj.write_proj"
  },
  "type": "import"
 },
 "mne.tests.test_rank": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_rank.base_dir",
    "mne.tests.test_rank.testing_path",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_rank._compute_rank_int": {
  "data": {
   "shadows": "mne.rank._compute_rank_int"
  },
  "type": "import"
 },
 "mne.tests.test_rank._estimate_rank_raw": {
  "data": {
   "shadows": "mne.rank._estimate_rank_raw"
  },
  "type": "import"
 },
 "mne.tests.test_rank._get_channel_types": {
  "data": {
   "shadows": "mne.io.pick._get_channel_types"
  },
  "type": "import"
 },
 "mne.tests.test_rank._get_rank_sss": {
  "data": {
   "shadows": "mne.rank._get_rank_sss"
  },
  "type": "import"
 },
 "mne.tests.test_rank._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_rank._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.tests.test_rank.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_rank.ave_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_rank.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.tests.test_rank.compute_proj_raw": {
  "data": {
   "shadows": "mne.proj.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_rank.compute_rank": {
  "data": {
   "shadows": "mne.rank.compute_rank"
  },
  "type": "import"
 },
 "mne.tests.test_rank.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_rank.cov_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.tests.test_rank.ctf_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_rank.data_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_rank.estimate_rank": {
  "data": {
   "shadows": "mne.rank.estimate_rank"
  },
  "type": "import"
 },
 "mne.tests.test_rank.hp_fif_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_rank.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.tests.test_rank.mf_fif_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_rank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_rank.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_rank.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.tests.test_rank.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_rank.prepare_noise_cov": {
  "data": {
   "shadows": "mne.cov.prepare_noise_cov"
  },
  "type": "import"
 },
 "mne.tests.test_rank.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_rank.raw_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.tests.test_rank.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_rank.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_rank.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_rank.test_cov_rank_estimation": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "len",
    "list",
    "mne.compute_raw_covariance",
    "mne.cov.prepare_noise_cov",
    "mne.io.pick._get_channel_types",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.pick_info",
    "mne.pick_types",
    "mne.proj.compute_proj_raw",
    "mne.rank._get_rank_sss",
    "mne.rank.compute_rank",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_rank.ave_fname",
    "mne.tests.test_rank.cov_fname",
    "mne.tests.test_rank.hp_fif_fname",
    "mne.tests.test_rank.pytest",
    "mne.tests.test_rank.raw_fname",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_rank.test_estimate_rank": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "mne.rank.estimate_rank",
    "mne.tests.test_rank.pytest",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_rank.test_maxfilter_get_rank": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.proj.compute_proj_raw",
    "mne.rank._compute_rank_int",
    "mne.rank._estimate_rank_raw",
    "mne.rank._get_rank_sss",
    "mne.tests.test_rank.hp_fif_fname",
    "mne.tests.test_rank.mf_fif_fname",
    "mne.tests.test_rank.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_rank.test_raw_rank_estimation": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "len",
    "min",
    "mne.io.pick._picks_by_type",
    "mne.io.read_raw_fif",
    "mne.proj.compute_proj_raw",
    "mne.rank._estimate_rank_raw",
    "mne.rank._get_rank_sss",
    "mne.tests.test_rank.ctf_fname",
    "mne.tests.test_rank.hp_fif_fname",
    "mne.tests.test_rank.pytest",
    "mne.tests.test_rank.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_rank.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_rank.testing_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_report": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_report.base_dir",
    "mne.tests.test_report.data_dir",
    "mne.tests.test_report.report_dir",
    "mne.tests.test_report.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_report.Bunch": {
  "data": {
   "shadows": "mne.utils.Bunch"
  },
  "type": "import"
 },
 "mne.tests.test_report.DATE_NONE": {
  "data": {
   "shadows": "mne.io.write.DATE_NONE"
  },
  "type": "import"
 },
 "mne.tests.test_report.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_report.Report": {
  "data": {
   "shadows": "mne.report.Report"
  },
  "type": "import"
 },
 "mne.tests.test_report._ReportScraper": {
  "data": {
   "shadows": "mne.report._ReportScraper"
  },
  "type": "import"
 },
 "mne.tests.test_report._get_example_figures": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "matplotlib.pyplot.plot"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_report.base_dir": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_report.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.tests.test_report.cov_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_report.data_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_report.event_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_report.evoked_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_report.fwd_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_report.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.tests.test_report.inv_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_report.mri_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_report.ms_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_report.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_report.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_report.open_report": {
  "data": {
   "shadows": "mne.report.open_report"
  },
  "type": "import"
 },
 "mne.tests.test_report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_report.plot_alignment": {
  "data": {
   "shadows": "mne.viz.plot_alignment"
  },
  "type": "import"
 },
 "mne.tests.test_report.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_report.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_report.raw_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_report.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_report.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_report.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_report.report_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_report.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_report.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_report.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_report.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.tests.test_report.subjects_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_report.test_add_htmls_to_section": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.report.Report",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.subjects_dir",
    "mne.utils.requires_nibabel",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_add_or_replace": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "len",
    "mne.report.Report",
    "mne.tests.test_report._get_example_figures",
    "mne.tests.test_report.copy"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_add_slider_to_section": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "matplotlib.pyplot.subplots",
    "mne.report.Report",
    "mne.tests.test_report._get_example_figures",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.subjects_dir",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_open_report": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "ValueError",
    "ZeroDivisionError",
    "mne.report.open_report",
    "mne.tests.test_report._get_example_figures",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.subjects_dir",
    "mne.utils.requires_h5py",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_remove": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "len",
    "mne.report.Report",
    "mne.tests.test_report._get_example_figures",
    "mne.tests.test_report.copy"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_add_sections": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.plot",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_evokeds",
    "mne.report.Report",
    "mne.tests.test_report.evoked_fname",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.subjects_dir",
    "mne.tests.test_report.trans_fname",
    "mne.viz.plot_alignment",
    "os.path.join",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_mri": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.report.Report",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.shutil",
    "mne.tests.test_report.subjects_dir",
    "mne.tests.test_report.trans_fname",
    "mne.utils.requires_nibabel",
    "os.path.join",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_mri_without_bem": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.report.Report",
    "mne.tests.test_report.mri_fname",
    "mne.tests.test_report.os",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.shutil",
    "mne.utils.requires_nibabel",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_report": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.report.Report",
    "mne.tests.test_report.cov_fname",
    "mne.tests.test_report.event_fname",
    "mne.tests.test_report.evoked_fname",
    "mne.tests.test_report.fwd_fname",
    "mne.tests.test_report.glob",
    "mne.tests.test_report.inv_fname",
    "mne.tests.test_report.ms_fname",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.shutil",
    "mne.tests.test_report.subjects_dir",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "open",
    "os.path.basename",
    "os.path.isfile",
    "os.path.join",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_report_raw_psd_and_date": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.io.write.DATE_NONE",
    "mne.report.Report",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.raw_fname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_scraper": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "dict",
    "mne.report.Report",
    "mne.report._ReportScraper",
    "mne.tests.test_report._get_example_figures",
    "mne.tests.test_report.os",
    "mne.utils.Bunch",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "scraper",
    "scraper.copyfiles",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_validate_input": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.report.Report",
    "mne.tests.test_report.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_report.trans_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_selection": {
  "data": {
   "symbols_in_volume": [
    "mne.tests.test_selection.test_path",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_selection.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_selection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_selection.raw_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.tests.test_selection.raw_new_fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.tests.test_selection.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_selection.read_selection": {
  "data": {
   "shadows": "mne.read_selection"
  },
  "type": "import"
 },
 "mne.tests.test_selection.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_selection.test_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.tests.test_selection.test_read_selection": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "mne.io.read_raw_fif",
    "mne.read_selection",
    "mne.tests.test_selection.pytest",
    "mne.tests.test_selection.raw_fname",
    "mne.tests.test_selection.raw_new_fname",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate": {
  "data": {
   "symbols_in_volume": [
    "AssertionError",
    "mne.datasets.testing.data_path",
    "mne.tests.test_source_estimate.data_path",
    "mne.tests.test_source_estimate.pytest",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_source_estimate.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.Label": {
  "data": {
   "shadows": "mne.Label"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.MixedSourceEstimate": {
  "data": {
   "shadows": "mne.MixedSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.SourceSpaces": {
  "data": {
   "shadows": "mne.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._fake_stc": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mne.SourceEstimate",
    "numpy.arange",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._fake_vec_stc": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "mne.VectorSourceEstimate",
    "numpy.arange",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._get_img_fdata": {
  "data": {
   "shadows": "mne.fixes._get_img_fdata"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._get_src_nn": {
  "data": {
   "shadows": "mne.source_space._get_src_nn"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._get_vol_mask": {
  "data": {
   "shadows": "mne.source_estimate._get_vol_mask"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._my_trans": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "mne.fixes.fft",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.bad_normal": {
  "data": {
   "lineno": 961
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.data_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.extract_label_time_course": {
  "data": {
   "shadows": "mne.extract_label_time_course"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fft": {
  "data": {
   "shadows": "mne.fixes.fft"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fname_cov": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_evoked": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_fwd": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv_fixed": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv_vol": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_raw": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src_3": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src_fs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_stc": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_t1": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_vol": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_vsrc": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.grade_to_tris": {
  "data": {
   "shadows": "mne.source_estimate.grade_to_tris"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.invs": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.datasets.testing._pytest_param",
    "mne.minimum_norm.make_inverse_operator",
    "mne.pick_types_forward",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.source_space._get_src_nn",
    "mne.tests.test_source_estimate.fname_cov",
    "mne.tests.test_source_estimate.fname_evoked",
    "mne.tests.test_source_estimate.fname_fwd",
    "mne.tests.test_source_estimate.pytest",
    "numpy.allclose",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.kron",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_labels_from_annot": {
  "data": {
   "shadows": "mne.label.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.rng": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_inter_hemi_connectivity": {
  "data": {
   "shadows": "mne.spatial_inter_hemi_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_src_connectivity": {
  "data": {
   "shadows": "mne.spatial_src_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_tris_connectivity": {
  "data": {
   "shadows": "mne.spatial_tris_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatio_temporal_src_connectivity": {
  "data": {
   "shadows": "mne.spatio_temporal_src_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatio_temporal_tris_connectivity": {
  "data": {
   "shadows": "mne.spatio_temporal_tris_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.stats": {
  "data": {
   "shadows": "mne.stats"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.subjects_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.test_center_of_mass": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_stc",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "numpy.round",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_epochs_vector_inverse": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.apply_inverse_epochs",
    "mne.minimum_norm.read_inverse_operator",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.fname_raw",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_expand": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.VectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_stc",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "numpy.zeros",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "enumerate",
    "len",
    "list",
    "mne.Label",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.extract_label_time_course",
    "mne.label.label_sign_flip",
    "mne.label.read_labels_from_annot",
    "mne.minimum_norm.read_inverse_operator",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "numpy.allclose",
    "numpy.arange",
    "numpy.intersect1d",
    "numpy.mean",
    "numpy.ones",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course_equiv": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_evokeds",
    "mne.tests.test_source_estimate.fname_evoked",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_get_peak": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "mne.SourceEstimate",
    "mne.VolSourceEstimate",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.rng",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.int",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_stc": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "len",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate._fake_stc",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_stc_h5": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.tests.test_source_estimate._fake_vec_stc",
    "mne.tests.test_source_estimate.pytest",
    "mne.utils.requires_h5py",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_w": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate._fake_stc",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_mixed_stc": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.MixedSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.rng",
    "mne.utils.requires_h5py",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_save_vol_stc_as_nifti": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.SourceSpaces",
    "mne.VolSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.tests.test_source_estimate.fname_t1",
    "mne.tests.test_source_estimate.fname_vol",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.tests.test_source_estimate.pytest",
    "mne.utils.requires_nibabel",
    "nibabel.load",
    "numpy.r_",
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatial_inter_hemi_connectivity": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "enumerate",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.read_source_spaces",
    "mne.spatial_inter_hemi_connectivity",
    "mne.tests.test_source_estimate.fname_src_3",
    "mne.tests.test_source_estimate.subjects_dir",
    "numpy.any",
    "numpy.in1d",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "numpy.where",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatial_src_connectivity": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.source_estimate.grade_to_tris",
    "mne.spatial_src_connectivity",
    "mne.spatial_tris_connectivity",
    "mne.tests.test_source_estimate.fname_src",
    "mne.tests.test_source_estimate.fname_src_fs",
    "mne.tests.test_source_estimate.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatio_temporal_src_connectivity": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.source_estimate.grade_to_tris",
    "mne.spatio_temporal_src_connectivity",
    "mne.spatio_temporal_tris_connectivity",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.pytest",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatio_temporal_tris_connectivity": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "len",
    "mne.spatio_temporal_tris_connectivity",
    "mne.stats.cluster_level._get_components",
    "mne.utils.requires_sklearn",
    "numpy.array",
    "numpy.nonzero",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_arithmetic": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "abs",
    "list",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.tests.test_source_estimate._fake_vec_stc",
    "numpy.errstate",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_as_volume": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_inv_vol",
    "mne.tests.test_source_estimate.fname_t1",
    "mne.tests.test_source_estimate.fname_vol",
    "mne.tests.test_source_estimate.pytest",
    "mne.utils.requires_nibabel",
    "nibabel.Nifti1Image",
    "nibabel.load"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "mne.SourceEstimate",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.tests.test_source_estimate._fake_vec_stc",
    "mne.tests.test_source_estimate.pytest",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes.attempt_assignment": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes.attempt_times_mutation": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_methods": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "copy.deepcopy",
    "isinstance",
    "len",
    "mne.VectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_stc",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_snr": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.tests.test_source_estimate.fname_cov",
    "mne.tests.test_source_estimate.fname_evoked",
    "mne.tests.test_source_estimate.fname_fwd",
    "mne.tests.test_source_estimate.fname_inv_fixed",
    "mne.tests.test_source_estimate.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_to_data_frame": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "len",
    "mne.SourceEstimate",
    "mne.VolSourceEstimate",
    "mne.tests.test_source_estimate.rng",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.empty",
    "numpy.int",
    "numpy.testing.assert_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_to_data_frame_index": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list",
    "mne.SourceEstimate",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.rng",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.empty",
    "numpy.in1d",
    "numpy.int",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_transform": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "isinstance",
    "len",
    "list",
    "mne.SourceEstimate",
    "mne.tests.test_source_estimate._my_trans",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.rng",
    "numpy.abs",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.round",
    "numpy.searchsorted",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_transform_data": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "mne.VolSourceEstimate",
    "mne.tests.test_source_estimate._my_trans",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.rng",
    "numpy.arange",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_basic": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "klass",
    "len",
    "mne.SourceSpaces",
    "mne.VectorSourceEstimate",
    "mne.VolVectorSourceEstimate",
    "mne.tests.test_source_estimate.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_inv_fixed": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "abs",
    "mne.minimum_norm.apply_inverse",
    "mne.tests.test_source_estimate.invs",
    "mne.tests.test_source_estimate.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_inv_free": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "mne.minimum_norm.apply_inverse",
    "mne.tests.test_source_estimate.invs",
    "mne.tests.test_source_estimate.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc_inv_free_surf": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "mne.minimum_norm.apply_inverse",
    "mne.tests.test_source_estimate.invs",
    "mne.tests.test_source_estimate.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vol_connectivity": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.spatial_src_connectivity",
    "mne.spatio_temporal_src_connectivity",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.tests.test_source_estimate.pytest",
    "mne.utils.requires_sklearn",
    "numpy.all",
    "numpy.testing.assert_equal",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vol_mask": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "len",
    "mne.VolSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.fixes._get_img_fdata",
    "mne.read_source_spaces",
    "mne.source_estimate._get_vol_mask",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.utils.requires_nibabel",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_volume_stc": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.VolSourceEstimate",
    "mne.VolVectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_vol",
    "mne.tests.test_source_estimate.pytest",
    "mne.utils.requires_h5py",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_source_space": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_source_space.base_dir",
    "mne.tests.test_source_space.data_path",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_source_space.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.SourceSpaces": {
  "data": {
   "shadows": "mne.source_space.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._accumulate_normals": {
  "data": {
   "shadows": "mne.surface._accumulate_normals"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_mgz_header": {
  "data": {
   "shadows": "mne.source_space._get_mgz_header"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_src_type": {
  "data": {
   "shadows": "mne.source_estimate._get_src_type"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._read_small_src": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname_small"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space._read_talxfm": {
  "data": {
   "shadows": "mne.source_space._read_talxfm"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._triangle_neighbors": {
  "data": {
   "shadows": "mne.surface._triangle_neighbors"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.add_source_space_distances": {
  "data": {
   "shadows": "mne.add_source_space_distances"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.base_dir": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.compute_source_morph": {
  "data": {
   "shadows": "mne.compute_source_morph"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.copytree": {
  "data": {
   "shadows": "shutil.copytree"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.data_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem_3": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem_3_sol": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem_sol": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_fs": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_morph": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_mri": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_small": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_vol": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.get_volume_labels_from_src": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_src"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.head_to_mni": {
  "data": {
   "shadows": "mne.head_to_mni"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.morph_source_spaces": {
  "data": {
   "shadows": "mne.morph_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.rng": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.setup_source_space": {
  "data": {
   "shadows": "mne.setup_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.subjects_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.test_accumulate_normals": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "dict",
    "int",
    "mne.surface._accumulate_normals",
    "mne.tests.test_source_space.rng",
    "numpy.c_",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_patch_info": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "all",
    "mne.add_source_space_distances",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space._read_small_src",
    "mne.tests.test_source_space.mne",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.scipy",
    "mne.utils.check_version"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_source_space_distances": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "mne.add_source_space_distances",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.write_source_spaces",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_source_space_distances_limited": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "mne.add_source_space_distances",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.write_source_spaces",
    "numpy.array",
    "numpy.float32",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_combine_source_spaces": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI.all",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space.SourceSpaces",
    "mne.source_space._compare_source_spaces",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.rng",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_nibabel",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "os.path.join",
    "range",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_discrete_source_space": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_estimate._get_src_type",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.pytest",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "mne.write_source_spaces",
    "numpy.c_",
    "numpy.savetxt",
    "numpy.testing.assert_allclose",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_get_volume_label_names": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_head_to_mni": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.head_to_mni",
    "mne.read_trans",
    "mne.source_space._read_talxfm",
    "mne.tests.test_source_space.subjects_dir",
    "mne.tests.test_source_space.trans_fname",
    "mne.transforms.apply_trans",
    "mne.transforms.invert_transform",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_mgz_header": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space._get_mgz_header",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.nibabel",
    "mne.utils.requires_nibabel",
    "numpy.linalg.inv",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_morph_source_spaces": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.morph_source_spaces",
    "mne.read_source_spaces",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname_fs",
    "mne.tests.test_source_space.fname_morph",
    "mne.tests.test_source_space.subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_morphed_source_space_return": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "ValueError",
    "len",
    "mne.SourceEstimate",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.morph_source_spaces",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.fname_fs",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.rng",
    "mne.tests.test_source_space.subjects_dir",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_other_volume_source_spaces": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.in1d",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_source_spaces": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_volume_from_src": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space.get_volume_labels_from_src",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.fname_bem",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_setup_source_space": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.data_path",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.write_source_spaces",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_setup_source_space_spacing": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.modified_env",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "os.path.join",
    "shutil.copytree",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_source_space_exclusive": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.setup_volume_source_space",
    "mne.tests.test_source_space.subjects_dir",
    "numpy.in1d"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_source_space_from_label": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_nibabel",
    "mne.write_source_spaces",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_triangle_neighbors": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "all",
    "int",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.surface._triangle_neighbors",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "numpy.array",
    "numpy.array_equal",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_vertex_to_mni": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_source_space.subjects_dir",
    "mne.vertex_to_mni",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_vertex_to_mni_fs_nibabel": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_source_space.mne",
    "mne.tests.test_source_space.rng",
    "mne.tests.test_source_space.subjects_dir",
    "mne.vertex_to_mni",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_volume_source_space": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.make_sphere_model",
    "mne.read_bem_solution",
    "mne.read_bem_surfaces",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname_bem",
    "mne.tests.test_source_space.fname_bem_3",
    "mne.tests.test_source_space.fname_bem_3_sol",
    "mne.tests.test_source_space.fname_bem_sol",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.fname_vol",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.write_source_spaces",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_write_source_space": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.write_source_spaces"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.trans_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.vertex_to_mni": {
  "data": {
   "shadows": "mne.vertex_to_mni"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.write_source_spaces": {
  "data": {
   "shadows": "mne.write_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_surface": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_surface.data_path",
    "mne.tests.test_surface.subjects_dir",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_surface.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_surface._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_surface._compute_nearest": {
  "data": {
   "shadows": "mne.surface._compute_nearest"
  },
  "type": "import"
 },
 "mne.tests.test_surface._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.tests.test_surface._normal_orth": {
  "data": {
   "shadows": "mne.surface._normal_orth"
  },
  "type": "import"
 },
 "mne.tests.test_surface._tessellate_sphere": {
  "data": {
   "shadows": "mne.surface._tessellate_sphere"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_surface.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_surface.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.tests.test_surface.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.tests.test_surface.decimate_surface": {
  "data": {
   "shadows": "mne.decimate_surface"
  },
  "type": "import"
 },
 "mne.tests.test_surface.dig_mri_distances": {
  "data": {
   "shadows": "mne.dig_mri_distances"
  },
  "type": "import"
 },
 "mne.tests.test_surface.fast_cross_3d": {
  "data": {
   "shadows": "mne.surface.fast_cross_3d"
  },
  "type": "import"
 },
 "mne.tests.test_surface.fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_surface.fname_raw": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_surface.fname_trans": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_surface.get_head_surf": {
  "data": {
   "shadows": "mne.surface.get_head_surf"
  },
  "type": "import"
 },
 "mne.tests.test_surface.get_meg_helmet_surf": {
  "data": {
   "shadows": "mne.surface.get_meg_helmet_surf"
  },
  "type": "import"
 },
 "mne.tests.test_surface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_surface.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.tests.test_surface.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_surface.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_surface.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_surface.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_curvature": {
  "data": {
   "shadows": "mne.surface.read_curvature"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_morph_map": {
  "data": {
   "shadows": "mne.surface.read_morph_map"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_surface.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.tests.test_surface.requires_vtk": {
  "data": {
   "shadows": "mne.utils.requires_vtk"
  },
  "type": "import"
 },
 "mne.tests.test_surface.rng": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_surface.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_surface.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_surface.subjects_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_surface.test_compute_nearest": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "mne.surface._compute_nearest",
    "mne.tests.test_surface.rng",
    "numpy.arange",
    "numpy.int",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_decimate_surface_sphere": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len",
    "mne.decimate_surface",
    "mne.surface._tessellate_sphere",
    "mne.utils.catch_logging",
    "mne.utils.requires_freesurfer"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_decimate_surface_vtk": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.decimate_surface",
    "mne.tests.test_surface.pytest",
    "mne.utils.requires_vtk",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_dig_mri_distances": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.dig_mri_distances",
    "mne.io.read_info",
    "mne.tests.test_surface.fname_raw",
    "mne.tests.test_surface.fname_trans",
    "mne.tests.test_surface.pytest",
    "mne.tests.test_surface.subjects_dir",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_fast_cross_3d": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mne.surface.fast_cross_3d",
    "mne.tests.test_surface.rng",
    "numpy.cross",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_head": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.surface.get_head_surf",
    "mne.tests.test_surface.pytest",
    "mne.tests.test_surface.subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_helmet": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "mne.io.constants.FIFF.FIFFV_COIL_ARTEMIS123_GRAD",
    "mne.io.read_info",
    "mne.pick_types",
    "mne.surface.get_meg_helmet_surf",
    "mne.tests.test_surface.fname_raw",
    "mne.tests.test_surface.fname_trans",
    "mne.transforms._get_trans",
    "mne.utils.catch_logging",
    "numpy.testing.assert_equal",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_io_surface": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_surface",
    "mne.tests.test_surface.data_path",
    "mne.tests.test_surface.fname",
    "mne.tests.test_surface.pytest",
    "mne.utils._TempDir",
    "mne.utils.object_diff",
    "mne.write_surface",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_make_morph_maps": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.surface.read_morph_map",
    "mne.tests.test_surface.os",
    "mne.tests.test_surface.pytest",
    "mne.tests.test_surface.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.catch_logging",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "os.path.join",
    "scipy.sparse.eye",
    "shutil.copyfile",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_normal_orth": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mne.surface._normal_orth",
    "numpy.eye",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_read_curv": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_surface",
    "mne.surface.read_curvature",
    "mne.tests.test_surface.data_path",
    "numpy.logical_or",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_surface.write_surface": {
  "data": {
   "shadows": "mne.write_surface"
  },
  "type": "import"
 },
 "mne.tests.test_transforms": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_transforms.base_dir",
    "mne.tests.test_transforms.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_transforms.SphericalSurfaceWarp": {
  "data": {
   "shadows": "mne.transforms._SphericalSurfaceWarp"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._average_quats": {
  "data": {
   "shadows": "mne.transforms._average_quats"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._cart_to_sph": {
  "data": {
   "shadows": "mne.transforms._cart_to_sph"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._cartesian_to_sphere": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._check_fit_matched_points": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.tests.test_transforms.mne",
    "mne.transforms._angle_between_quats",
    "mne.transforms._euler_to_quat",
    "mne.transforms._fit_matched_points",
    "mne.transforms._quat_to_affine",
    "mne.transforms.apply_trans",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.rad2deg",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._euler_to_quat": {
  "data": {
   "shadows": "mne.transforms._euler_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._find_trans": {
  "data": {
   "shadows": "mne.transforms._find_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._find_vector_rotation": {
  "data": {
   "shadows": "mne.transforms._find_vector_rotation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._fit_matched_points": {
  "data": {
   "shadows": "mne.transforms._fit_matched_points"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._pol_to_cart": {
  "data": {
   "shadows": "mne.transforms._pol_to_cart"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._polar_to_cartesian": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._quat_real": {
  "data": {
   "shadows": "mne.transforms._quat_real"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._quat_to_affine": {
  "data": {
   "shadows": "mne.transforms._quat_to_affine"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._quat_to_euler": {
  "data": {
   "shadows": "mne.transforms._quat_to_euler"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._read_fs_xfm": {
  "data": {
   "shadows": "mne.transforms._read_fs_xfm"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._sph_to_cart": {
  "data": {
   "shadows": "mne.transforms._sph_to_cart"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._sphere_to_cartesian": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._topo_to_phi_theta": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "mne.tests.test_transforms._topo_to_sph": {
  "data": {
   "shadows": "mne.transforms._topo_to_sph"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._write_fs_xfm": {
  "data": {
   "shadows": "mne.transforms._write_fs_xfm"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.base_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.combine_transforms": {
  "data": {
   "shadows": "mne.transforms.combine_transforms"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.ctf_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.data_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname_eve": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname_trans": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.get_ras_to_neuromag_trans": {
  "data": {
   "shadows": "mne.transforms.get_ras_to_neuromag_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.hp_fif_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.quat_to_rot": {
  "data": {
   "shadows": "mne.transforms.quat_to_rot"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.quats": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "mne.tests.test_transforms.pytest",
    "numpy.linalg.norm",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation": {
  "data": {
   "shadows": "mne.transforms.rotation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation3d": {
  "data": {
   "shadows": "mne.transforms.rotation3d"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation3d_align_z_axis": {
  "data": {
   "shadows": "mne.transforms.rotation3d_align_z_axis"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation_angles": {
  "data": {
   "shadows": "mne.transforms.rotation_angles"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.test_average_quats": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "list",
    "mne.transforms._angle_between_quats",
    "mne.transforms._average_quats",
    "mne.transforms._quat_real",
    "mne.transforms.quat_to_rot",
    "numpy.array",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.isclose",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_combine": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_trans",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.pytest",
    "mne.transforms.combine_transforms",
    "mne.transforms.invert_transform"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_euler": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "mne.tests.test_transforms.quats",
    "mne.transforms._euler_to_quat",
    "mne.transforms._quat_to_euler",
    "mne.transforms.quat_to_rot",
    "mne.transforms.rotation",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_fif_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.test_fit_matched_points": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.tests.test_transforms._check_fit_matched_points",
    "mne.tests.test_transforms.pytest",
    "mne.tests.test_transforms.quats",
    "mne.transforms._angle_between_quats",
    "mne.transforms.quat_to_rot",
    "mne.transforms.translation",
    "numpy.allclose",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.rad2deg",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_fs_xfm": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_transforms.data_path",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.pytest",
    "mne.transforms._read_fs_xfm",
    "mne.transforms._write_fs_xfm",
    "mne.utils._TempDir",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_get_ras_to_neuromag_trans": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mne.transforms.apply_trans",
    "mne.transforms.get_ras_to_neuromag_trans",
    "mne.transforms.rotation",
    "mne.transforms.translation",
    "numpy.dot",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_get_trans": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_trans",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.fname_trans",
    "mne.transforms._get_trans",
    "mne.transforms.invert_transform"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_io_trans": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "RuntimeWarning",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_trans",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.fname_eve",
    "mne.tests.test_transforms.os",
    "mne.tests.test_transforms.pytest",
    "mne.transforms._find_trans",
    "mne.utils._TempDir",
    "mne.write_trans",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_polar_to_cartesian": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mne.tests.test_transforms._polar_to_cartesian",
    "mne.transforms._pol_to_cart",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_quaternions": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "mne.io.read_info",
    "mne.tests.test_transforms.ctf_fname",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.hp_fif_fname",
    "mne.tests.test_transforms.test_fif_fname",
    "mne.transforms._angle_between_quats",
    "mne.transforms.quat_to_rot",
    "mne.transforms.rot_to_quat",
    "numpy.array",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_rotation": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mne.transforms.rotation",
    "mne.transforms.rotation3d",
    "mne.transforms.rotation_angles",
    "numpy.pi",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_rotation3d_align_z_axis": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "mne.transforms.rotation3d_align_z_axis",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_sph_to_cart": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mne.tests.test_transforms._cartesian_to_sphere",
    "mne.tests.test_transforms._sphere_to_cartesian",
    "mne.transforms._cart_to_sph",
    "mne.transforms._sph_to_cart",
    "numpy.array",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_topo_to_sph": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "enumerate",
    "mne.tests.test_transforms._sphere_to_cartesian",
    "mne.tests.test_transforms._topo_to_phi_theta",
    "mne.transforms._sph_to_cart",
    "mne.transforms._topo_to_sph",
    "numpy.array",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_tps": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mne.transforms._SphericalSurfaceWarp",
    "mne.transforms._sph_to_cart",
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_vector_rotation": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "mne.transforms._angle_between_quats",
    "mne.transforms._find_vector_rotation",
    "mne.transforms.rot_to_quat",
    "numpy.array",
    "numpy.eye",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.write_trans": {
  "data": {
   "shadows": "mne.write_trans"
  },
  "type": "import"
 },
 "mne.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stft": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stft.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "mne.time_frequency._stft.istft": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "ifft",
    "numpy.arange",
    "numpy.conj",
    "numpy.empty",
    "numpy.float",
    "numpy.pi",
    "numpy.real",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency._stft.stft": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "fft",
    "float",
    "int",
    "math.ceil",
    "numpy.arange",
    "numpy.complex",
    "numpy.isrealobj",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stft.stft_norm1": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stft.stft_norm2": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stft.stftfreq": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "fftfreq",
    "float",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stockwell._check_input_st": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "_is_power_of_two",
    "int",
    "mne.time_frequency._stockwell.math",
    "numpy.concatenate",
    "numpy.zeros",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._check_input_st._is_power_of_two": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._precompute_st_windows": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.complex",
    "numpy.empty",
    "numpy.exp",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.sqrt",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._st": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.complex",
    "numpy.concatenate",
    "numpy.empty",
    "scipy.fftpack.fft",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._st_power_itc": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.mean",
    "scipy.fftpack.fft",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.tfr_array_stockwell": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "iter",
    "mne.time_frequency._stockwell._check_input_st",
    "mne.time_frequency._stockwell._precompute_st_windows",
    "mne.time_frequency._stockwell._st_power_itc",
    "my_st",
    "numpy.abs",
    "numpy.empty",
    "parallel",
    "parallel_func",
    "range",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell.tfr_stockwell": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "AverageTFR",
    "_get_data",
    "_pick_data_channels",
    "check_n_jobs",
    "copy.deepcopy",
    "len",
    "mne.time_frequency._stockwell.tfr_array_stockwell",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.ar": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.ar._yule_walker": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.linalg.solve",
    "scipy.linalg.toeplitz"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.ar.fit_iir_model_raw": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_apply_scaling_array",
    "_handle_default",
    "_picks_by_type",
    "_picks_to_idx",
    "mne.time_frequency.ar._yule_walker",
    "numpy.array",
    "numpy.concatenate",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.ar.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.ar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.multitaper._compute_mt_params": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "mne.time_frequency.multitaper.dpss_windows",
    "numpy.newaxis",
    "numpy.ones",
    "scipy.signal.get_window",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._csd_from_mt": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._mt_spectra": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.complex128",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "rfft",
    "rfftfreq"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._psd_from_mt": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._psd_from_mt_adaptive": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.time_frequency.multitaper._psd_from_mt",
    "numpy.empty",
    "numpy.max",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.trapz",
    "numpy.zeros_like",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.dpss_windows": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "_get_dpss",
    "float",
    "irfft",
    "len",
    "mne.time_frequency.multitaper.operator",
    "next_fast_len",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.dot",
    "numpy.int32",
    "numpy.linspace",
    "numpy.sinc",
    "numpy.sqrt",
    "rfft",
    "scipy.interpolate.interp1d",
    "sum_squared",
    "tmp",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.get_window": {
  "data": {
   "shadows": "scipy.signal.get_window"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.psd_array_multitaper": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "_check_option",
    "len",
    "max",
    "min",
    "mne.time_frequency.multitaper._compute_mt_params",
    "mne.time_frequency.multitaper._mt_spectra",
    "mne.time_frequency.multitaper._psd_from_mt",
    "mne.time_frequency.multitaper._psd_from_mt_adaptive",
    "my_psd_from_mt_adaptive",
    "numpy.arange",
    "numpy.array_split",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.inf",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "parallel",
    "parallel_func",
    "rfftfreq",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.tfr_array_multitaper": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "_compute_tfr"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.psd._check_nfft": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd._check_psd_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "_time_mask",
    "isinstance",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd._spect_func": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "func",
    "numpy.nanmean",
    "numpy.nanmedian"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.psd.psd_array_welch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_check_option",
    "float",
    "len",
    "mne.time_frequency.psd._check_nfft",
    "mne.time_frequency.psd._spect_func",
    "my_spect_func",
    "numpy.arange",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.inf",
    "parallel",
    "parallel_func",
    "scipy.signal.spectrogram"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.psd_multitaper": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mne.time_frequency.psd._check_psd_data",
    "numpy.inf",
    "psd_array_multitaper"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.psd_welch": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "mne.time_frequency.psd._check_psd_data",
    "mne.time_frequency.psd.psd_array_welch",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.spectrogram": {
  "data": {
   "shadows": "scipy.signal.spectrogram"
  },
  "type": "import"
 },
 "mne.time_frequency.tests": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_ar": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_ar._yule_walker": {
  "data": {
   "shadows": "mne.time_frequency.ar._yule_walker"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.fit_iir_model_raw": {
  "data": {
   "shadows": "mne.time_frequency.ar.fit_iir_model_raw"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.raw_fname": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_ar.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.sm_yw": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.yule_walker"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.test_ar_raw": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.time_frequency.ar.fit_iir_model_raw",
    "mne.time_frequency.tests.test_ar.raw_fname",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "scipy.signal.lfilter"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_ar.test_yule_walker": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.time_frequency.ar._yule_walker",
    "mne.utils.requires_version",
    "numpy.newaxis",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "statsmodels.regression.linear_model.yule_walker"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_csd.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_csd.CrossSpectralDensity": {
  "data": {
   "shadows": "mne.time_frequency.CrossSpectralDensity"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd._generate_coherence_data": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "events",
    "int",
    "mne.time_frequency.tests.test_csd.mne",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._make_csd": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "mne.time_frequency.CrossSpectralDensity",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._sym_mat_to_vector": {
  "data": {
   "shadows": "mne.time_frequency.csd._sym_mat_to_vector"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd._test_csd_matrix": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.diag",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._test_fourier_multitaper_parameters": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd._vector_to_sym_mat": {
  "data": {
   "shadows": "mne.time_frequency.csd._vector_to_sym_mat"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.base_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.csd_array_fourier": {
  "data": {
   "shadows": "mne.time_frequency.csd_array_fourier"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_array_morlet": {
  "data": {
   "shadows": "mne.time_frequency.csd_array_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.csd_array_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_fourier": {
  "data": {
   "shadows": "mne.time_frequency.csd_fourier"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_morlet": {
  "data": {
   "shadows": "mne.time_frequency.csd_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.csd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.equalize_channels": {
  "data": {
   "shadows": "mne.channels.equalize_channels"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.event_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.pick_channels_csd": {
  "data": {
   "shadows": "mne.time_frequency.pick_channels_csd"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.raw_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.read_csd": {
  "data": {
   "shadows": "mne.time_frequency.read_csd"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.test_csd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "mne.time_frequency.CrossSpectralDensity",
    "numpy.testing.assert_array_equal",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_fourier": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "abs",
    "itertools.product",
    "len",
    "mne.time_frequency.csd_array_fourier",
    "mne.time_frequency.csd_fourier",
    "mne.time_frequency.tests.test_csd._generate_coherence_data",
    "mne.time_frequency.tests.test_csd._test_csd_matrix",
    "mne.time_frequency.tests.test_csd._test_fourier_multitaper_parameters",
    "mne.utils.sum_squared",
    "numpy.abs",
    "numpy.arange",
    "numpy.pi",
    "numpy.sin",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_get_data": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "mne.time_frequency.tests.test_csd._make_csd",
    "numpy.testing.assert_array_equal",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_get_frequency_index": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "IndexError",
    "mne.time_frequency.tests.test_csd._make_csd",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_mean": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.time_frequency.tests.test_csd._make_csd",
    "numpy.testing.assert_array_equal",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_morlet": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "mne.time_frequency.csd_array_morlet",
    "mne.time_frequency.csd_morlet",
    "mne.time_frequency.tests.test_csd._generate_coherence_data",
    "mne.time_frequency.tests.test_csd._test_csd_matrix",
    "mne.time_frequency.tests.test_csd.pytest",
    "mne.time_frequency.tfr_morlet",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_multitaper": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "abs",
    "float",
    "itertools.product",
    "len",
    "mne.time_frequency.csd_array_multitaper",
    "mne.time_frequency.csd_multitaper",
    "mne.time_frequency.psd_multitaper",
    "mne.time_frequency.tests.test_csd._generate_coherence_data",
    "mne.time_frequency.tests.test_csd._test_csd_matrix",
    "mne.time_frequency.tests.test_csd._test_fourier_multitaper_parameters",
    "mne.utils.sum_squared",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.diag",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_pick_frequency": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "mne.time_frequency.tests.test_csd._make_csd",
    "numpy.testing.assert_array_equal",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_pickle": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_csd._make_csd",
    "mne.time_frequency.tests.test_csd.pickle",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_repr": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_csd._make_csd",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_save": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mne.time_frequency.read_csd",
    "mne.time_frequency.tests.test_csd._make_csd",
    "mne.utils._TempDir",
    "mne.utils.requires_h5py",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_equalize_channels": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "mne.channels.equalize_channels",
    "mne.time_frequency.tests.test_csd._make_csd"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_pick_channels_csd": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mne.time_frequency.pick_channels_csd",
    "mne.time_frequency.tests.test_csd._make_csd",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_sym_mat_to_vector": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "mne.time_frequency.csd._sym_mat_to_vector",
    "mne.time_frequency.csd._vector_to_sym_mat",
    "numpy.arange",
    "numpy.array",
    "numpy.float16",
    "numpy.int8",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_multitaper.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.dpss_windows": {
  "data": {
   "shadows": "mne.time_frequency.multitaper.dpss_windows"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.ni": {
  "data": {
   "shadows": "nitime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.requires_nitime": {
  "data": {
   "shadows": "mne.utils.requires_nitime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.test_dpss_windows": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "mne.time_frequency.multitaper.dpss_windows",
    "mne.time_frequency.tests.test_multitaper.pytest",
    "mne.utils.requires_nitime",
    "nitime.algorithms.dpss_windows",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_multitaper.test_multitaper_psd": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.time_frequency.psd_multitaper",
    "mne.time_frequency.tests.test_multitaper.pytest",
    "mne.utils.requires_nitime",
    "nitime.__version__",
    "nitime.algorithms.spectral.multi_taper_psd",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_psd.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_psd.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.base_dir": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.event_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_array_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_array_welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.raw_fname": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.test_compares_psd": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.time_frequency.psd_welch",
    "mne.time_frequency.tests.test_psd.pytest",
    "mne.time_frequency.tests.test_psd.raw_fname",
    "numpy.array",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "scipy.signal.welch"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "func",
    "len",
    "mne.Epochs",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.time_frequency.psd_multitaper",
    "mne.time_frequency.psd_welch",
    "mne.time_frequency.tests.test_psd.event_fname",
    "mne.time_frequency.tests.test_psd.pytest",
    "mne.time_frequency.tests.test_psd.raw_fname",
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.floor",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd_nan": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "mne.time_frequency.psd_array_welch",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd_welch_average_kwarg": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.time_frequency.psd_welch",
    "mne.time_frequency.tests.test_psd.event_fname",
    "mne.time_frequency.tests.test_psd.pytest",
    "mne.time_frequency.tests.test_psd.raw_fname",
    "numpy.inf",
    "numpy.median",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.welch": {
  "data": {
   "shadows": "scipy.signal.welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_stft.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.istft": {
  "data": {
   "shadows": "mne.time_frequency.istft"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stft": {
  "data": {
   "shadows": "mne.time_frequency.stft"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stft_norm2": {
  "data": {
   "shadows": "mne.time_frequency._stft.stft_norm2"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stftfreq": {
  "data": {
   "shadows": "mne.time_frequency.stftfreq"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.test_stft": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "mne.time_frequency._stft.stft_norm2",
    "mne.time_frequency.istft",
    "mne.time_frequency.stft",
    "mne.time_frequency.stftfreq",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.float",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_stockwell.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_stockwell.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._check_input_st": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._check_input_st"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._precompute_st_windows": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._precompute_st_windows"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._st": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._st"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._st_power_itc": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._st_power_itc"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.raw_ctf_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_api": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "isinstance",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.time_frequency._stockwell.tfr_stockwell",
    "mne.time_frequency.tests.test_stockwell.base_dir",
    "mne.time_frequency.tests.test_stockwell.pytest",
    "mne.time_frequency.tests.test_stockwell.raw_fname",
    "mne.time_frequency.tfr.AverageTFR",
    "numpy.log",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_check_input": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.time_frequency._stockwell._check_input_st",
    "mne.time_frequency.tests.test_stockwell.pytest",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_core": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.time_frequency._stockwell._precompute_st_windows",
    "mne.time_frequency._stockwell._st",
    "numpy.abs",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "scipy.fftpack.fftfreq",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_ctf": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.time_frequency._stockwell.tfr_stockwell",
    "mne.time_frequency.tests.test_stockwell.raw_ctf_fname"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_st_no_zero_pad": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mne.time_frequency._stockwell._precompute_st_windows",
    "mne.time_frequency._stockwell._st_power_itc",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.tfr_stockwell": {
  "data": {
   "shadows": "mne.time_frequency._stockwell.tfr_stockwell"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_tfr.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_tfr.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.EpochsTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.EpochsTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Info": {
  "data": {
   "shadows": "mne.Info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Transform": {
  "data": {
   "shadows": "mne.Transform"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._compute_tfr": {
  "data": {
   "shadows": "mne.time_frequency.tfr._compute_tfr"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._make_dpss": {
  "data": {
   "shadows": "mne.time_frequency.tfr._make_dpss"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_metadata_equal": {
  "data": {
   "shadows": "mne.tests.test_epochs.assert_metadata_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.combine_tfr": {
  "data": {
   "shadows": "mne.time_frequency.tfr.combine_tfr"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.cwt": {
  "data": {
   "shadows": "mne.time_frequency.tfr.cwt"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.event_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr.morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.raw_ctf_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.read_tfrs": {
  "data": {
   "shadows": "mne.time_frequency.tfr.read_tfrs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.test_add_channels": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tfr.AverageTFR",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_compute_tfr": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "events",
    "float",
    "func",
    "int",
    "isinstance",
    "itertools.product",
    "len",
    "method",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.time_frequency.tests.test_tfr.event_fname",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tests.test_tfr.raw_fname",
    "mne.time_frequency.tfr._compute_tfr",
    "mne.time_frequency.tfr_array_morlet",
    "mne.time_frequency.tfr_array_multitaper",
    "numpy.all",
    "numpy.arange",
    "numpy.complex",
    "numpy.float",
    "numpy.isfinite",
    "numpy.r_",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_compute_tfr_correct": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "method",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tfr._compute_tfr",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.hanning",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sin",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_crop": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tfr.AverageTFR",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_dpsswavelet": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "len",
    "mne.time_frequency.tfr._make_dpss",
    "numpy.abs",
    "numpy.arange",
    "numpy.mean",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_getitem_epochsTFR": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "dict",
    "enumerate",
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.tests.test_epochs.assert_metadata_equal",
    "mne.time_frequency.tests.test_tfr.event_fname",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tests.test_tfr.raw_fname",
    "mne.time_frequency.tfr.tfr_multitaper",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_io": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dict",
    "events",
    "int",
    "isinstance",
    "len",
    "mne.Info",
    "mne.Transform",
    "mne.tests.test_epochs.assert_metadata_equal",
    "mne.time_frequency.tests.test_tfr.datetime",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.time_frequency.tfr.EpochsTFR",
    "mne.time_frequency.tfr.read_tfrs",
    "mne.time_frequency.tfr.write_tfrs",
    "mne.utils._TempDir",
    "mne.utils.requires_h5py",
    "mne.utils.requires_pandas",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.round",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "os.path.join",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_morlet": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.time_frequency.tfr.morlet",
    "numpy.abs",
    "numpy.mean",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_plot": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "bool",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot2grid",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.viz.utils._fake_click",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_plot_joint": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.io.read_raw_fif",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tests.test_tfr.raw_fname",
    "mne.time_frequency.tfr.AverageTFR",
    "numpy.arange",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_tfr_ctf": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "events",
    "method",
    "mne.io.read_raw_fif",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tests.test_tfr.raw_ctf_fname",
    "mne.time_frequency.tfr.tfr_morlet",
    "mne.time_frequency.tfr.tfr_multitaper"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_tfr_multitaper": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "int",
    "len",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tfr.tfr_multitaper",
    "numpy.any",
    "numpy.arange",
    "numpy.argmax",
    "numpy.empty",
    "numpy.float",
    "numpy.hanning",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "print",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_time_frequency": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "ValueError",
    "abs",
    "events",
    "float",
    "len",
    "list",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.time_frequency.tests.test_tfr.event_fname",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tests.test_tfr.raw_fname",
    "mne.time_frequency.tfr.combine_tfr",
    "mne.time_frequency.tfr.cwt",
    "mne.time_frequency.tfr.morlet",
    "mne.time_frequency.tfr.tfr_morlet",
    "mne.utils.grand_average",
    "numpy.arange",
    "numpy.ceil",
    "numpy.inf",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "print",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.tfr_array_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr.tfr_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.tfr.tfr_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.write_tfrs": {
  "data": {
   "shadows": "mne.time_frequency.tfr.write_tfrs"
  },
  "type": "import"
 },
 "mne.utils": {
  "data": {},
  "type": "module"
 },
 "mne.utils._doc_special_members": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.utils._testing": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.utils._testing._mayavi_call",
    "mne.utils._testing._mne_call",
    "mne.utils._testing._n2ft_call",
    "mne.utils._testing._pandas_call",
    "mne.utils._testing.requires_module"
   ]
  },
  "type": "module"
 },
 "mne.utils._testing.AffineMap": {
  "data": {
   "shadows": "dipy.align.imaffine.AffineMap"
  },
  "type": "import"
 },
 "mne.utils._testing.ArgvSetter": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils._testing.ArgvSetter.__enter__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "mne.utils._testing.sys"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.ArgvSetter.__exit__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "mne.utils._testing.sys"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.ArgvSetter.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "io.StringIO",
    "list",
    "mne.utils._testing.sys"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.DiffeomorphicMap": {
  "data": {
   "shadows": "dipy.align.imwarp.DiffeomorphicMap"
  },
  "type": "import"
 },
 "mne.utils._testing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.utils._testing.SilenceStdout": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils._testing.SilenceStdout.__enter__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "io.StringIO",
    "mne.utils._testing.sys"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.SilenceStdout.__exit__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mne.utils._testing.sys"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.utils._testing.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.utils._testing._TempDir": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "mne.utils._testing._TempDir.__del__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._TempDir.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "mne.utils._testing._TempDir.__new__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mne.utils._testing.tempfile",
    "str.__new__"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._check_mayavi_version": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils._testing.check_version"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._check_snr": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "len",
    "mne.utils._testing._get_data",
    "numpy.clip",
    "numpy.inf",
    "numpy.mean",
    "numpy.median",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._dig_sort_key": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "mne.utils._testing._explain_exception": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mne.utils._testing.sys",
    "mne.utils._testing.traceback"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._fs_call": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mne.utils._testing._get_data": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._import_mlab": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mayavi.mlab",
    "mne.utils._testing.warnings"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing._mayavi_call": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "mne.utils._testing._mne_call": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mne.utils._testing._n2ft_call": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mne.utils._testing._pandas_call": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "mne.utils._testing._raw_annot": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "Annotations",
    "RawArray",
    "_handle_meas_date",
    "create_info",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.utils._testing.assert_and_remove_boundary_annot": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils._testing.assert_dig_allclose": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "fit_sphere_to_headshape",
    "len",
    "mne.utils._testing._dig_sort_key",
    "numpy.testing.assert_allclose",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.assert_meg_snr": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len",
    "mne.utils._testing._check_snr",
    "mne.utils._testing._get_data",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.setdiff1d",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.assert_object_equal": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "object_diff"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.assert_snr": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.errstate",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.assert_stcs_equal": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.buggy_mkl_svd": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "mne.utils._testing.buggy_mkl_svd.dec": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "function",
    "functools.wraps",
    "numpy.linalg.LinAlgError",
    "str",
    "unittest.SkipTest",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.check_version": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "distutils.version.LooseVersion",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.utils._testing.has_freesurfer": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "mne.utils._testing.os"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.has_mne_c": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "mne.utils._testing.os"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.has_nibabel": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.imaffine": {
  "data": {
   "shadows": "dipy.align.imaffine"
  },
  "type": "import"
 },
 "mne.utils._testing.imwarp": {
  "data": {
   "shadows": "dipy.align.imwarp"
  },
  "type": "import"
 },
 "mne.utils._testing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.utils._testing.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.utils._testing.metrics": {
  "data": {
   "shadows": "dipy.align.metrics"
  },
  "type": "import"
 },
 "mne.utils._testing.mlab": {
  "data": {
   "shadows": "mayavi.mlab"
  },
  "type": "import"
 },
 "mne.utils._testing.modified_env": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "dict",
    "isinstance",
    "mne.utils._testing.os",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.utils._testing.nottest": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mne.utils._testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils._testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils._testing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.utils._testing.push_exception_handler": {
  "data": {
   "shadows": "traits.api.push_exception_handler"
  },
  "type": "import"
 },
 "mne.utils._testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils._testing.requires_dipy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "mne.utils._testing.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.requires_freesurfer": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "functools.partial",
    "isinstance",
    "mne.utils._testing._fs_call",
    "mne.utils._testing.requires_module",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.requires_good_network": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_h5py": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_mayavi": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_mne": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_module": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception",
    "exec",
    "globals",
    "len",
    "locals",
    "mne.utils._testing.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.requires_neuromag2ft": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_nibabel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.requires_nitime": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_numpydoc": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "mne.utils._testing.requires_version"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.requires_pandas": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_pylsl": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_pysurfer": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_sklearn": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "mne.utils._testing.requires_version": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mne.utils._testing.check_version",
    "mne.utils._testing.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.requires_vtk": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "mne.utils._testing.reslice": {
  "data": {
   "shadows": "dipy.align.reslice.reslice"
  },
  "type": "import"
 },
 "mne.utils._testing.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "mne.utils._testing.run_command_if_main": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "mne.utils._testing.inspect"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.run_tests_if_main": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "AssertionError",
    "mne.utils._testing.inspect",
    "mne.utils._testing.nottest",
    "mne.utils._testing.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils._testing.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.utils._testing.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.utils._testing.traits_test": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "mne.utils._testing.traits_test.dec": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "functools.wraps",
    "mne.utils._testing.traits_test_context",
    "test_func"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.traits_test_context": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "traits.api.push_exception_handler"
   ]
  },
  "type": "function"
 },
 "mne.utils._testing.transforms": {
  "data": {
   "shadows": "dipy.align.transforms"
  },
  "type": "import"
 },
 "mne.utils._testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.utils._testing.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mne.utils.dataframe": {
  "data": {},
  "type": "module"
 },
 "mne.utils.dataframe.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.utils.dataframe._build_data_frame": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "mne.utils.dataframe._set_pandas_dtype",
    "numpy.array",
    "pandas.DataFrame",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.utils.dataframe._check_scaling_time": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "DeprecationWarning",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.utils.dataframe._convert_times": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.round",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "mne.utils.dataframe._scale_dataframe_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_handle_default",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.dataframe._set_pandas_dtype": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mne.utils.dataframe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.dataframe.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "mne.utils.docs": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "filldoc",
    "mne.utils.docs._pick_ori_novec",
    "mne.utils.docs.ch_type",
    "mne.utils.docs.datetime",
    "mne.utils.docs.docdict",
    "mne.utils.docs.epo",
    "mne.utils.docs.evk",
    "mne.utils.docs.f_test",
    "mne.utils.docs.groups",
    "mne.utils.docs.mem",
    "mne.utils.docs.multiindex",
    "mne.utils.docs.nogroups",
    "mne.utils.docs.nperm_all",
    "mne.utils.docs.raw",
    "mne.utils.docs.raw_tf",
    "mne.utils.docs.st",
    "mne.utils.docs.stc",
    "mne.utils.docs.t_test",
    "mne.utils.docs.tf",
    "mne.utils.docs.warnings",
    "unindent_dict"
   ]
  },
  "type": "module"
 },
 "mne.utils.docs._pick_ori_novec": {
  "data": {
   "lineno": 455
  },
  "type": "constant"
 },
 "mne.utils.docs.ch_type": {
  "data": {
   "lineno": 1009
  },
  "type": "constant"
 },
 "mne.utils.docs.copy_base_doc_to_subclass_doc": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "callable",
    "dir",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.copy_doc": {
  "data": {
   "lineno": 1031
  },
  "type": "function"
 },
 "mne.utils.docs.copy_doc.wrapper": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.copy_function_doc_to_method_doc": {
  "data": {
   "lineno": 1075
  },
  "type": "function"
 },
 "mne.utils.docs.copy_function_doc_to_method_doc.wrapper": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.datetime": {
  "data": {
   "lineno": 970
  },
  "type": "constant"
 },
 "mne.utils.docs.deprecated": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.docs.deprecated.__call__": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated.__init__": {
  "data": {
   "lineno": 1377
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_class": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "init",
    "init.__doc__"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_class.deprecation_wrapped": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "DeprecationWarning",
    "init",
    "mne.utils.docs.warnings"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_fun": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "fun.__dict__",
    "fun.__doc__",
    "fun.__name__"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._decorate_fun.deprecation_wrapped": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "DeprecationWarning",
    "fun",
    "mne.utils.docs.warnings"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.deprecated._update_doc": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.docdict": {
  "data": {
   "lineno": 1024
  },
  "type": "constant"
 },
 "mne.utils.docs.epo": {
  "data": {
   "lineno": 1012
  },
  "type": "constant"
 },
 "mne.utils.docs.evk": {
  "data": {
   "lineno": 975
  },
  "type": "constant"
 },
 "mne.utils.docs.f_test": {
  "data": {
   "lineno": 855
  },
  "type": "constant"
 },
 "mne.utils.docs.fill_doc": {
  "data": {
   "lineno": 1025
  },
  "type": "constant"
 },
 "mne.utils.docs.groups": {
  "data": {
   "lineno": 903
  },
  "type": "constant"
 },
 "mne.utils.docs.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.utils.docs.linkcode_resolve": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "hasattr",
    "len",
    "mne.utils.docs.inspect",
    "mne.utils.docs.mne",
    "mne.utils.docs.os",
    "mne.utils.docs.sys",
    "os.path.dirname",
    "os.path.normpath",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.mem": {
  "data": {
   "lineno": 894
  },
  "type": "constant"
 },
 "mne.utils.docs.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.utils.docs.multiindex": {
  "data": {
   "lineno": 971
  },
  "type": "constant"
 },
 "mne.utils.docs.nogroups": {
  "data": {
   "lineno": 902
  },
  "type": "constant"
 },
 "mne.utils.docs.nperm_all": {
  "data": {
   "lineno": 863
  },
  "type": "constant"
 },
 "mne.utils.docs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.docs.open_docs": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "_check_option",
    "dict",
    "get_config",
    "mne.utils.docs.webbrowser",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.utils.docs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.docs.raw": {
  "data": {
   "lineno": 1011
  },
  "type": "constant"
 },
 "mne.utils.docs.raw_tf": {
  "data": {
   "lineno": 987
  },
  "type": "constant"
 },
 "mne.utils.docs.st": {
  "data": {
   "lineno": 898
  },
  "type": "constant"
 },
 "mne.utils.docs.stc": {
  "data": {
   "lineno": 1013
  },
  "type": "constant"
 },
 "mne.utils.docs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils.docs.t_test": {
  "data": {
   "lineno": 856
  },
  "type": "constant"
 },
 "mne.utils.docs.tf": {
  "data": {
   "lineno": 900
  },
  "type": "constant"
 },
 "mne.utils.docs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.utils.docs.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.utils.fetching": {
  "data": {},
  "type": "module"
 },
 "mne.utils.fetching.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "mne.utils.fetching.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "mne.utils.fetching._fetch_file": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "hashfunc",
    "isinstance",
    "len",
    "mne.utils.fetching._get_http",
    "mne.utils.fetching.os",
    "mne.utils.fetching.shutil",
    "open",
    "str",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mne.utils.fetching._get_http": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "ProgressBar",
    "int",
    "len",
    "mne.utils.fetching.time",
    "open",
    "sizeof_fmt",
    "urllib.error.HTTPError",
    "urllib.error.URLError",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "mne.utils.fetching._url_to_local_path": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.utils.fetching.os",
    "urllib.parse.urlparse",
    "urllib.request.url2pathname"
   ]
  },
  "type": "function"
 },
 "mne.utils.fetching.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.fetching.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "mne.utils.fetching.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "mne.utils.fetching.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.utils.fetching.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.utils.linalg": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.linalg._d",
    "mne.utils.linalg._z",
    "numpy.cast",
    "numpy.complex128",
    "numpy.empty",
    "numpy.float64",
    "scipy.linalg.get_blas_funcs",
    "scipy.linalg.get_lapack_funcs"
   ]
  },
  "type": "module"
 },
 "mne.utils.linalg.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "mne.utils.linalg._I": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.utils.linalg._asarray_validated": {
  "data": {
   "shadows": "scipy._lib._util._asarray_validated"
  },
  "type": "import"
 },
 "mne.utils.linalg._d": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.utils.linalg._pos_semidef_inv": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linalg.eigh",
    "numpy.matmul",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.utils.linalg._repeated_svd": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "gesdd",
    "gesvd",
    "numpy.complex128",
    "numpy.float64",
    "scipy.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "mne.utils.linalg._svd_lwork": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.float64",
    "scipy.linalg.decomp_svd._compute_lwork"
   ]
  },
  "type": "function"
 },
 "mne.utils.linalg._z": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.utils.linalg.ddot": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.utils.linalg.dgemm": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.utils.linalg.dgemv": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.utils.linalg.eigh": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "evr",
    "numpy.complex128",
    "numpy.float64",
    "scipy._lib._util._asarray_validated",
    "scipy.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "mne.utils.linalg.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.utils.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.linalg.sqrtm_sym": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.linalg.eigh",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.utils.linalg.zgemm": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.utils.misc": {
  "data": {},
  "type": "module"
 },
 "mne.utils.misc.Empty": {
  "data": {
   "shadows": "queue.Empty"
  },
  "type": "import"
 },
 "mne.utils.misc.Formatter": {
  "data": {
   "shadows": "string.Formatter"
  },
  "type": "import"
 },
 "mne.utils.misc.Queue": {
  "data": {
   "shadows": "queue.Queue"
  },
  "type": "import"
 },
 "mne.utils.misc.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.utils.misc._DefaultEventParser": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "mne.utils.misc._DefaultEventParser.__call__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._DefaultEventParser.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._FormatDict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.utils.misc._FormatDict.__missing__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mne.utils.misc._clean_names": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "mne.utils.misc._enqueue_output": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._explain_exception": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.utils.misc.sys",
    "mne.utils.misc.traceback"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._file_like": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "all",
    "callable",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._get_argvalues": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dict",
    "mne.utils.misc.fnmatch",
    "mne.utils.misc.inspect",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._pl": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.generic"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc._sort_keys": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "list",
    "numpy.argsort",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.utils.misc.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.utils.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.utils.misc.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "mne.utils.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.misc.pformat": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mne.utils.misc._FormatDict",
    "string.Formatter"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc.run_subprocess": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_get_args",
    "mne.utils.misc._enqueue_output",
    "mne.utils.misc.running_subprocess",
    "mne.utils.misc.subprocess",
    "print",
    "queue.Empty",
    "queue.Queue",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc.running_subprocess": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "_check_option",
    "_validate_type",
    "any",
    "contextlib.contextmanager",
    "getattr",
    "isinstance",
    "mne.utils.misc.os",
    "mne.utils.misc.subprocess",
    "mne.utils.misc.sys",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc.sizeof_fmt": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "math.log",
    "min"
   ]
  },
  "type": "function"
 },
 "mne.utils.misc.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mne.utils.misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils.misc.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.utils.mixin": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.mixin.logger",
    "mne.utils.mixin.logging"
   ]
  },
  "type": "module"
 },
 "mne.utils.mixin.GetEpochsMixin": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.mixin.GetEpochsMixin.__getitem__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.__iter__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.__len__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.__next__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "StopIteration",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._check_metadata": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "_check_pandas_installed",
    "_validate_type",
    "copy.deepcopy",
    "hasattr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._getitem": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "_check_pandas_installed",
    "hasattr",
    "mne.utils.mixin.GetEpochsMixin",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.require",
    "numpy.setdiff1d"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._item_to_select": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "slice",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin._keys_to_idx": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "_check_pandas_installed",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "mne.utils.mixin._hid_match",
    "numpy.any",
    "numpy.array",
    "numpy.where",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.GetEpochsMixin.metadata": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "_check_pandas_installed",
    "hasattr",
    "len",
    "mne.utils.mixin.logger"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.utils.mixin.ShiftTimeMixin": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.mixin.ShiftTimeMixin._update_first_last": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "int",
    "len",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.ShiftTimeMixin.shift_time": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "_check_preload",
    "isinstance",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.SizeMixin": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.mixin.SizeMixin.__eq__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "hash",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.SizeMixin.__hash__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_preload",
    "dict",
    "isinstance",
    "object_hash",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.SizeMixin._size": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "object_size",
    "property",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin._FakeNoPandas": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.mixin._FakeNoPandas.__enter__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "_check_pandas_installed",
    "mne.utils.mixin.mne"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin._FakeNoPandas.__enter__._check": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin._FakeNoPandas.__exit__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "mne.utils.mixin.mne"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin._hid_match": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "len",
    "list",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin._prepare_read_metadata": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "_check_pandas_installed",
    "collections.OrderedDict",
    "isinstance",
    "list",
    "mne.utils.mixin.json"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin._prepare_write_metadata": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "mne.utils.mixin.json",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.mixin.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.utils.mixin.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.utils.mixin.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.utils.mixin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.utils.mixin.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.utils.mixin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.progressbar": {
  "data": {},
  "type": "module"
 },
 "mne.utils.progressbar.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "mne.utils.progressbar.ProgressBar": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.progressbar.ProgressBar.__del__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__enter__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "max",
    "mne.utils.progressbar._UpdateThread",
    "mne.utils.progressbar.os",
    "numpy.memmap",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__exit__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "mne.utils.progressbar.os",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "dict",
    "int",
    "isinstance",
    "len",
    "mne.utils.progressbar.logging",
    "mne.utils.progressbar.tempfile",
    "tqdm"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.__iter__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.subset": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mne.utils.progressbar._PBSubsetUpdater"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.update": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mne.utils.progressbar.ProgressBar.update_with_increment_value": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.utils.progressbar.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.utils.progressbar._PBSubsetUpdater": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.progressbar._PBSubsetUpdater.__init__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "mne.utils.progressbar._PBSubsetUpdater.update": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "mne.utils.progressbar._UpdateThread": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "class"
 },
 "mne.utils.progressbar._UpdateThread.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "mne.utils.progressbar._UpdateThread",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar._UpdateThread.run": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mne.utils.progressbar.time"
   ]
  },
  "type": "function"
 },
 "mne.utils.progressbar.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.utils.progressbar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.progressbar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.progressbar.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.progressbar.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.utils.progressbar.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_bunch.BunchConstNamed": {
  "data": {
   "shadows": "mne.utils.BunchConstNamed"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.NamedFloat": {
  "data": {
   "shadows": "mne.utils._bunch.NamedFloat"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.NamedInt": {
  "data": {
   "shadows": "mne.utils._bunch.NamedInt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mne.utils.tests.test_bunch.test_pickle": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "mne.utils.BunchConstNamed",
    "mne.utils._bunch.NamedFloat",
    "mne.utils._bunch.NamedInt",
    "mne.utils.tests.test_bunch.pickle",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.data_path",
    "mne.utils.tests.test_check.base_dir",
    "mne.utils.tests.test_check.data_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.utils.tests.test_check.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_fname": {
  "data": {
   "shadows": "mne.utils._check_fname"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_info_inv": {
  "data": {
   "shadows": "mne.utils._check_info_inv"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_mayavi_version": {
  "data": {
   "shadows": "mne.utils._check_mayavi_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_option": {
  "data": {
   "shadows": "mne.utils._check_option"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_path_like": {
  "data": {
   "shadows": "mne.utils._check_path_like"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._check_subject": {
  "data": {
   "shadows": "mne.utils._check_subject"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check._get_data": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "events",
    "mne.utils.tests.test_check.fname_event",
    "mne.utils.tests.test_check.fname_fwd",
    "mne.utils.tests.test_check.fname_raw",
    "mne.utils.tests.test_check.mne",
    "mne.utils.tests.test_check.reject"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check._validate_type": {
  "data": {
   "shadows": "mne.utils._validate_type"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.base_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.check_fname": {
  "data": {
   "shadows": "mne.utils.check_fname"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.check_random_state": {
  "data": {
   "shadows": "mne.utils.check_random_state"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_event": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_fwd": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.fname_raw": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.pick_channels_cov": {
  "data": {
   "shadows": "mne.io.pick.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.reject": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.utils.tests.test_check.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.test_check": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "IOError",
    "PermissionError",
    "TypeError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils._check_fname",
    "mne.utils._check_subject",
    "mne.utils.check_fname",
    "mne.utils.check_random_state",
    "mne.utils.check_version",
    "mne.utils.tests.test_check.fname_raw",
    "mne.utils.tests.test_check.mne",
    "mne.utils.tests.test_check.os",
    "mne.utils.tests.test_check.pytest",
    "mne.utils.tests.test_check.shutil",
    "mne.utils.tests.test_check.sys",
    "numpy.random.RandomState",
    "numpy.random.default_rng",
    "open",
    "os.path.basename",
    "os.path.isfile",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_info_inv": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.pick.pick_channels_cov",
    "mne.utils._check_info_inv",
    "mne.utils.tests.test_check._get_data",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_mayavi": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils._check_mayavi_version",
    "mne.utils.requires_mayavi",
    "mne.utils.tests.test_check.pytest",
    "mne.utils.traits_test"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_option": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils._check_option",
    "mne.utils.tests.test_check.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_check_path_like": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dict",
    "mne.utils._check_path_like",
    "mne.utils.tests.test_check.base_dir",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.test_validate_type": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TypeError",
    "mne.utils._validate_type",
    "mne.utils.tests.test_check.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_check.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.utils.tests.test_check.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_config.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config._get_stim_channel": {
  "data": {
   "shadows": "mne.utils._get_stim_channel"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.get_config": {
  "data": {
   "shadows": "mne.utils.get_config"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.get_config_path": {
  "data": {
   "shadows": "mne.utils.get_config_path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.set_config": {
  "data": {
   "shadows": "mne.utils.set_config"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.set_memmap_min_size": {
  "data": {
   "shadows": "mne.utils.set_memmap_min_size"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.sys_info": {
  "data": {
   "shadows": "mne.utils.sys_info"
  },
  "type": "import"
 },
 "mne.utils.tests.test_config.test_config": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "mne.utils._get_stim_channel",
    "mne.utils.get_config",
    "mne.utils.get_config_path",
    "mne.utils.set_config",
    "mne.utils.set_memmap_min_size",
    "mne.utils.tests.test_config.os",
    "mne.utils.tests.test_config.pytest",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_config.test_sys_info": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "io.StringIO",
    "mne.utils.sys_info"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_docs.add_channels_epochs": {
  "data": {
   "shadows": "mne.epochs.add_channels_epochs"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.copy_doc": {
  "data": {
   "shadows": "mne.utils.copy_doc"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.copy_function_doc_to_method_doc": {
  "data": {
   "shadows": "mne.utils.copy_function_doc_to_method_doc"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.deprecated": {
  "data": {
   "shadows": "mne.utils.deprecated"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.deprecated_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mne.utils.deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.deprecated_class.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.deprecated_func": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.grade_to_tris": {
  "data": {
   "shadows": "mne.grade_to_tris"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.linkcode_resolve": {
  "data": {
   "shadows": "mne.utils.linkcode_resolve"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.myfun": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.open_docs": {
  "data": {
   "shadows": "mne.open_docs"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_docs.test_copy_doc": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.copy_doc",
    "mne.utils.tests.test_docs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_doc.A": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_doc.A.m1": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_doc.B": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_doc.B.m1": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_doc.C": {
  "data": {
   "lineno": 49
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_doc.C.m1": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mne.utils.copy_doc"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.copy_function_doc_to_method_doc",
    "mne.utils.tests.test_docs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A.method_f1": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mne.utils.copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A.method_f2": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mne.utils.copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.A.method_f3": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "mne.utils.copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f1": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f2": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f3": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f4": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_copy_function_doc_to_method_doc.f5": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_deprecated": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.utils.tests.test_docs.deprecated_class",
    "mne.utils.tests.test_docs.deprecated_func",
    "mne.utils.tests.test_docs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_doc_filling": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mne.epochs.add_channels_epochs",
    "mne.grade_to_tris",
    "mne.utils.tests.test_docs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_linkcode_resolve": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict",
    "mne.utils.linkcode_resolve"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.test_open_docs": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "mne.open_docs",
    "mne.utils.tests.test_docs.myfun",
    "mne.utils.tests.test_docs.pytest",
    "mne.utils.tests.test_docs.webbrowser"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_docs.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_fetching._fetch_file": {
  "data": {
   "shadows": "mne.utils._fetch_file"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.sizeof_fmt": {
  "data": {
   "shadows": "mne.utils.sizeof_fmt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_fetching.test_fetch_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "len",
    "mne.utils._fetch_file",
    "mne.utils.catch_logging",
    "mne.utils.requires_good_network",
    "mne.utils.sizeof_fmt",
    "mne.utils.tests.test_fetching.os",
    "mne.utils.tests.test_fetching.pytest",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_linalg": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.utils.tests.test_linalg._pos_semidef_inv": {
  "data": {
   "shadows": "mne.utils._pos_semidef_inv"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.utils.tests.test_linalg.test_pos_semidef_inv": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "mne.utils._pos_semidef_inv",
    "mne.utils.requires_version",
    "mne.utils.tests.test_linalg.pytest",
    "numpy.allclose",
    "numpy.complex128",
    "numpy.dot",
    "numpy.eye",
    "numpy.float64",
    "numpy.iscomplexobj",
    "numpy.linalg.pinv",
    "numpy.linalg.svd",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.outer",
    "numpy.random.RandomState",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.tests.test_logging.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.utils.tests.test_logging._get_call_line": {
  "data": {
   "shadows": "mne.utils._get_call_line"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.base_dir": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.clean_lines": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.filter_out_warnings": {
  "data": {
   "shadows": "mne.utils.filter_out_warnings"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.fname_evoked": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.fname_log": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.fname_log_2": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.utils.tests.test_logging.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.set_log_file": {
  "data": {
   "shadows": "mne.utils.set_log_file"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.set_log_level": {
  "data": {
   "shadows": "mne.utils.set_log_level"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.test_get_call_line": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bar",
    "foo"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_get_call_line.bar": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mne.utils._get_call_line"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_get_call_line.foo": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mne.utils._get_call_line",
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_how_to_deal_with_warnings": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "RuntimeWarning",
    "UserWarning",
    "len",
    "mne.utils.filter_out_warnings",
    "mne.utils.tests.test_logging.pytest",
    "mne.utils.tests.test_logging.warnings"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_logging": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "mne.read_evokeds",
    "mne.utils.set_log_file",
    "mne.utils.set_log_level",
    "mne.utils.tests.test_logging.clean_lines",
    "mne.utils.tests.test_logging.fname_evoked",
    "mne.utils.tests.test_logging.fname_log",
    "mne.utils.tests.test_logging.fname_log_2",
    "mne.utils.tests.test_logging.os",
    "mne.utils.tests.test_logging.pytest",
    "open",
    "os.path.isfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "Okay",
    "RuntimeError",
    "bad_verbose",
    "mne.utils.tests.test_logging.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness.Okay": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness.Okay.meth": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_verbose_strictness.bad_verbose": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.test_warn": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.utils.tests.test_logging.pytest",
    "mne.utils.warn"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_logging.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.warn": {
  "data": {
   "shadows": "mne.utils.warn"
  },
  "type": "import"
 },
 "mne.utils.tests.test_logging.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.utils.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_misc.sizeof_fmt": {
  "data": {
   "shadows": "mne.utils.sizeof_fmt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_misc.test_sizeof_fmt": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mne.utils.sizeof_fmt"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_mixin": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_numerics": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.tests.test_numerics.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.utils.tests.test_numerics.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._PCA": {
  "data": {
   "shadows": "mne.utils._PCA"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._ReuseCycle": {
  "data": {
   "shadows": "mne.utils._ReuseCycle"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._apply_scaling_array": {
  "data": {
   "shadows": "mne.utils._apply_scaling_array"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._apply_scaling_cov": {
  "data": {
   "shadows": "mne.utils._apply_scaling_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._array_equal_nan": {
  "data": {
   "shadows": "mne.utils._array_equal_nan"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._cal_to_julian": {
  "data": {
   "shadows": "mne.utils._cal_to_julian"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._dt_to_julian": {
  "data": {
   "shadows": "mne.utils._dt_to_julian"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._freq_mask": {
  "data": {
   "shadows": "mne.utils._freq_mask"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._get_inst_data": {
  "data": {
   "shadows": "mne.utils._get_inst_data"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._julian_to_cal": {
  "data": {
   "shadows": "mne.utils._julian_to_cal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._julian_to_dt": {
  "data": {
   "shadows": "mne.utils._julian_to_dt"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._reg_pinv": {
  "data": {
   "shadows": "mne.utils._reg_pinv"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._time_mask": {
  "data": {
   "shadows": "mne.utils._time_mask"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._undo_scaling_array": {
  "data": {
   "shadows": "mne.utils._undo_scaling_array"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics._undo_scaling_cov": {
  "data": {
   "shadows": "mne.utils._undo_scaling_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.ave_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.compute_corr": {
  "data": {
   "shadows": "mne.utils.compute_corr"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.cov_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.create_slices": {
  "data": {
   "shadows": "mne.utils.create_slices"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.fname_raw": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.utils.tests.test_numerics.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.hashfunc": {
  "data": {
   "shadows": "mne.utils.hashfunc"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.make_fixed_length_epochs": {
  "data": {
   "shadows": "mne.epochs.make_fixed_length_epochs"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.object_hash": {
  "data": {
   "shadows": "mne.utils.object_hash"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.object_size": {
  "data": {
   "shadows": "mne.utils.object_size"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.random_permutation": {
  "data": {
   "shadows": "mne.utils.random_permutation"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.test_array_equal_nan": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "mne.utils._array_equal_nan",
    "numpy.array_equal",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_compute_corr": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.utils.compute_corr",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_cov_scaling": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "dict",
    "mne.io.pick._picks_by_type",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.utils._apply_scaling_array",
    "mne.utils._apply_scaling_cov",
    "mne.utils._undo_scaling_array",
    "mne.utils._undo_scaling_cov",
    "mne.utils.tests.test_numerics.ave_fname",
    "mne.utils.tests.test_numerics.cov_fname",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_create_slices": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "mne.utils.create_slices"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_freq_mask": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.utils._freq_mask",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_get_inst_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "mne.epochs.make_fixed_length_epochs",
    "mne.io.read_raw_fif",
    "mne.time_frequency.tfr_morlet",
    "mne.utils._get_inst_data",
    "mne.utils.tests.test_numerics.fname_raw",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_grand_average_empty_sequence": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.grand_average",
    "mne.utils.tests.test_numerics.pytest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_grand_average_len_1": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.read_evokeds",
    "mne.utils.grand_average",
    "mne.utils.tests.test_numerics.ave_fname",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_hash": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "dict",
    "int",
    "io.StringIO",
    "len",
    "mne.utils.object_diff",
    "mne.utils.object_hash",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.bool_",
    "numpy.int64",
    "numpy.ones",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_hashfunc": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.utils.hashfunc",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_julian_conversions": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timezone.utc",
    "mne.utils._cal_to_julian",
    "mne.utils._dt_to_julian",
    "mne.utils._julian_to_cal",
    "mne.utils._julian_to_dt",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_object_diff_with_nan": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "mne.utils.object_diff",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_object_size": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dict",
    "mne.utils.object_size",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_pca": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "isinstance",
    "mne.utils._PCA",
    "mne.utils.requires_sklearn",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_random_permutation": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mne.utils.random_permutation",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_reg_pinv": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.utils._reg_pinv",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.array",
    "numpy.eye",
    "numpy.linalg.pinv",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_reuse_cycle": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "mne.utils._ReuseCycle",
    "mne.utils.tests.test_numerics.pytest",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_sum_squared": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mne.utils.sum_squared",
    "numpy.random.RandomState",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.test_time_mask": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.utils._time_mask",
    "mne.utils.tests.test_numerics.pytest",
    "numpy.arange",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_numerics.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_morlet"
  },
  "type": "import"
 },
 "mne.utils.tests.test_numerics.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar": {
  "data": {},
  "type": "module"
 },
 "mne.utils.tests.test_progressbar.ProgressBar": {
  "data": {
   "shadows": "mne.utils.ProgressBar"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar._identity": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar._identity_block": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar._identity_block_wide": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.array_split_idx": {
  "data": {
   "shadows": "mne.utils.array_split_idx"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.parallel_func": {
  "data": {
   "shadows": "mne.parallel.parallel_func"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_progressbar.test_progressbar": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "mne.utils.ProgressBar",
    "mne.utils.tests.test_progressbar.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar.iter_func": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar_parallel_advanced": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "mne.parallel.parallel_func",
    "mne.utils.ProgressBar",
    "mne.utils.array_split_idx",
    "mne.utils.tests.test_progressbar._identity_block",
    "mne.utils.use_log_level",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.memmap",
    "numpy.testing.assert_array_equal",
    "os.path.isfile",
    "p_fun",
    "parallel"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar_parallel_basic": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "list",
    "mne.parallel.parallel_func",
    "mne.utils.tests.test_progressbar._identity",
    "mne.utils.use_log_level",
    "p_fun",
    "parallel",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.test_progressbar_parallel_more": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "mne.parallel.parallel_func",
    "mne.utils.ProgressBar",
    "mne.utils.array_split_idx",
    "mne.utils.tests.test_progressbar._identity_block_wide",
    "mne.utils.use_log_level",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.memmap",
    "numpy.testing.assert_array_equal",
    "os.path.isfile",
    "p_fun",
    "parallel"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_progressbar.use_log_level": {
  "data": {
   "shadows": "mne.utils.use_log_level"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.utils.tests.test_testing.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing._url_to_local_path": {
  "data": {
   "shadows": "mne.utils._url_to_local_path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.buggy_mkl_svd": {
  "data": {
   "shadows": "mne.utils.buggy_mkl_svd"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.utils.tests.test_testing.test_buggy_mkl": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "mne.utils.tests.test_testing.pytest",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_buggy_mkl.bar": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils.buggy_mkl_svd"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_buggy_mkl.foo": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.utils.buggy_mkl_svd",
    "numpy.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_datasets": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.tests.test_testing.os",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_tempdir": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.utils._TempDir",
    "os.path.isdir",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.test_url_to_local_path": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mne.utils._url_to_local_path",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.utils.tests.test_testing.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz": {
  "data": {},
  "type": "module"
 },
 "mne.viz._3d": {
  "data": {
   "symbols_in_volume": [
    "mne.viz._3d.RAS_AFFINE",
    "numpy.eye"
   ]
  },
  "type": "module"
 },
 "mne.viz._3d.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "mne.viz._3d.Brain": {
  "data": {
   "shadows": "_Brain"
  },
  "type": "import"
 },
 "mne.viz._3d.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.viz._3d.ColorConverter": {
  "data": {
   "shadows": "matplotlib.colors.ColorConverter"
  },
  "type": "import"
 },
 "mne.viz._3d.ColorbarBase": {
  "data": {
   "shadows": "matplotlib.colorbar.ColorbarBase"
  },
  "type": "import"
 },
 "mne.viz._3d.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "mne.viz._3d.ConvexHull": {
  "data": {
   "shadows": "scipy.spatial.ConvexHull"
  },
  "type": "import"
 },
 "mne.viz._3d.FIDUCIAL_ORDER": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.viz._3d.Line3DCollection": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.art3d.Line3DCollection"
  },
  "type": "import"
 },
 "mne.viz._3d.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz._3d.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz._3d.Normalize": {
  "data": {
   "shadows": "matplotlib.colors.Normalize"
  },
  "type": "import"
 },
 "mne.viz._3d.RAS_AFFINE": {
  "data": {
   "lineno": 3008
  },
  "type": "constant"
 },
 "mne.viz._3d.RAS_SHAPE": {
  "data": {
   "lineno": 3010
  },
  "type": "constant"
 },
 "mne.viz._3d.Slider": {
  "data": {
   "shadows": "matplotlib.widgets.Slider"
  },
  "type": "import"
 },
 "mne.viz._3d.TimeViewer": {
  "data": {
   "shadows": "_TimeViewer"
  },
  "type": "import"
 },
 "mne.viz._3d._check_time_viewer_compatibility": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "_TimeViewer",
    "_check_option",
    "all",
    "check_version",
    "get_3d_backend",
    "len",
    "mne.viz._3d.os",
    "surfer.TimeViewer"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._cut_coords_to_ijk": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "apply_trans",
    "int",
    "numpy.array",
    "numpy.clip",
    "numpy.round",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._dipole_changed": {
  "data": {
   "lineno": 3131,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "mne.viz._3d._plot_dipole"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._fiducial_coords": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mne.viz._3d.FIDUCIAL_ORDER",
    "numpy.array",
    "numpy.empty",
    "numpy.isclose",
    "numpy.isfinite",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._get_dipole_loc": {
  "data": {
   "lineno": 3013,
   "symbols_in_volume": [
    "_check_option",
    "_get_img_fdata",
    "_get_trans",
    "_read_mri_info",
    "apply_trans",
    "combine_transforms",
    "get_subjects_dir",
    "mne.viz._3d.RAS_AFFINE",
    "mne.viz._3d.RAS_SHAPE",
    "nibabel.load",
    "nibabel.processing.resample_from_to",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.linalg.solve",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._get_map_ticks": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._get_ps_kwargs": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "distutils.version.LooseVersion",
    "mne.viz._3d.surfer"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._glass_brain_crosshairs": {
  "data": {
   "lineno": 1889
  },
  "type": "function"
 },
 "mne.viz._3d._handle_time": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "_check_time_unit",
    "_validate_type",
    "callable",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._handle_time.time_label": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._ijk_to_cut_coords": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "apply_trans"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._key_pressed_slider": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.argmin",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._linearize_map": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "matplotlib.colors.ListedColormap",
    "numpy.array",
    "numpy.concatenate",
    "numpy.interp",
    "numpy.linspace",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._make_tris_fan": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._plot_dipole": {
  "data": {
   "lineno": 3063,
   "symbols_in_volume": [
    "int",
    "len",
    "matplotlib.colors",
    "matplotlib.colors.ColorConverter",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.suptitle",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.min",
    "numpy.newaxis",
    "numpy.repeat",
    "numpy.round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._plot_dipole_mri_orthoview": {
  "data": {
   "lineno": 2955,
   "symbols_in_volume": [
    "ImportError",
    "_check_option",
    "_concatenate_dipoles",
    "_ensure_int",
    "_validate_type",
    "functools.partial",
    "has_nibabel",
    "isinstance",
    "len",
    "matplotlib.pyplot.figure",
    "mne.viz._3d._get_dipole_loc",
    "mne.viz._3d._plot_dipole",
    "mpl_toolkits.mplot3d.Axes3D",
    "numpy.abs",
    "numpy.argmax",
    "numpy.linspace",
    "numpy.meshgrid",
    "plt_show"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._plot_mpl_stc": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_check_option",
    "_check_spacing",
    "_create_surf_spacing",
    "_get_subject_sphere_tris",
    "cmap",
    "dict",
    "figure_nobar",
    "functools.partial",
    "greymap",
    "int",
    "len",
    "matplotlib.cm.get_cmap",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.cm.ScalarMappable",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.getp",
    "matplotlib.pyplot.setp",
    "matplotlib.pyplot.show",
    "matplotlib.widgets.Slider",
    "mesh_edges",
    "mne.viz._3d._handle_time",
    "mne.viz._3d._key_pressed_slider",
    "mne.viz._3d._linearize_map",
    "mne.viz._3d._process_clim",
    "mne.viz._3d._separate_map",
    "mne.viz._3d._smooth_plot",
    "mpl_toolkits.axes_grid1.inset_locator.inset_axes",
    "mpl_toolkits.mplot3d.Axes3D",
    "nibabel.freesurfer.read_geometry",
    "nibabel.freesurfer.read_morph_data",
    "numpy.array",
    "numpy.clip",
    "numpy.int",
    "numpy.linspace",
    "numpy.round",
    "os.path.join",
    "scipy.sparse.eye",
    "scipy.sparse.identity",
    "scipy.stats.rankdata",
    "slice",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._plot_mri_contours": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "AttributeError",
    "_check_option",
    "_get_img_fdata",
    "_prepare_trellis",
    "dict",
    "float",
    "io.BytesIO",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.cm.gray",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.subplots_adjust",
    "mne.viz._3d.base64",
    "mne.viz._3d.warnings",
    "nibabel.affines.apply_affine",
    "nibabel.load",
    "numpy.int",
    "numpy.linspace",
    "plt_show",
    "read_surface",
    "scipy.linalg.inv",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._process_clim": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "_validate_type",
    "dict",
    "float",
    "isinstance",
    "len",
    "matplotlib.colors.Colormap",
    "matplotlib.pyplot.get_cmap",
    "mne_analyze_colormap",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.diff",
    "numpy.percentile",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._sensor_shape": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "_reorder_ccw",
    "float",
    "mne.viz._3d._make_tris_fan",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.exp",
    "numpy.pad",
    "numpy.pi",
    "scipy.spatial.ConvexHull"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._separate_map": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._set_aspect_equal": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._smooth_plot": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "_morph_buffer",
    "cmap",
    "greymap",
    "len",
    "mne.viz._3d._set_aspect_equal",
    "numpy.abs",
    "numpy.argmin",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d._update_coord_frame": {
  "data": {
   "lineno": 3149,
   "symbols_in_volume": [
    "apply_trans"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.axes3d": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.axes3d"
  },
  "type": "import"
 },
 "mne.viz._3d.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mne.viz._3d.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.viz._3d.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz._3d.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mne.viz._3d.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "mne.viz._3d.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz._3d.index_img": {
  "data": {
   "shadows": "nilearn.image.index_img"
  },
  "type": "import"
 },
 "mne.viz._3d.inset_axes": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.inset_locator.inset_axes"
  },
  "type": "import"
 },
 "mne.viz._3d.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.viz._3d.link_brains": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "_LinkViewer",
    "_TimeViewer",
    "get_3d_backend",
    "hasattr",
    "isinstance",
    "len",
    "mne.viz._3d.collections",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.mplDeprecation": {
  "data": {
   "shadows": "matplotlib.cbook.mplDeprecation"
  },
  "type": "import"
 },
 "mne.viz._3d.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.viz._3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._3d.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz._3d.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz._3d.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz._3d.plot_alignment": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "Transform",
    "TypeError",
    "ValueError",
    "_bem_find_surface",
    "_check_option",
    "_complete_sphere_surf",
    "_create_meg_coils",
    "_ensure_src",
    "_find_trans",
    "_get_renderer",
    "_get_trans",
    "_loc_to_coil_trans",
    "_pl",
    "_project_onto_surface",
    "_validate_type",
    "all",
    "any",
    "apply_trans",
    "bool",
    "combine_transforms",
    "create_info",
    "dict",
    "enumerate",
    "get_meg_helmet_surf",
    "get_subjects_dir",
    "invert_transform",
    "isinstance",
    "len",
    "list",
    "mne.viz._3d._fiducial_coords",
    "mne.viz._3d._sensor_shape",
    "mne.viz._3d._update_coord_frame",
    "numpy.allclose",
    "numpy.arange",
    "numpy.array",
    "numpy.column_stack",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.eye",
    "numpy.intersect1d",
    "numpy.newaxis",
    "numpy.tile",
    "os.path.basename",
    "os.path.exists",
    "os.path.isfile",
    "os.path.join",
    "os.path.splitext",
    "pick_types",
    "range",
    "read_bem_surfaces",
    "read_fiducials",
    "read_surface",
    "repr",
    "sorted",
    "str",
    "transform_surface_to",
    "tuple",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_brain_colorbar": {
  "data": {
   "lineno": 3159,
   "symbols_in_volume": [
    "colormap",
    "matplotlib.colorbar.ColorbarBase",
    "matplotlib.colors.Normalize",
    "mne.viz._3d._get_map_ticks",
    "mne.viz._3d._linearize_map",
    "mne.viz._3d._process_clim"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_dipole_locations": {
  "data": {
   "lineno": 2683,
   "symbols_in_volume": [
    "ValueError",
    "_get_renderer",
    "_get_trans",
    "apply_trans",
    "mne.viz._3d._plot_dipole_mri_orthoview"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_evoked_field": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_get_renderer",
    "enumerate",
    "len",
    "list",
    "mne_analyze_colormap",
    "numpy.abs",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.max",
    "numpy.mean",
    "numpy.tile",
    "pick_types",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_glass_brain": {
  "data": {
   "shadows": "nilearn.plotting.plot_glass_brain"
  },
  "type": "import"
 },
 "mne.viz._3d.plot_head_positions": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "_check_destination",
    "_check_option",
    "_ensure_trans",
    "dict",
    "einsum",
    "enumerate",
    "float",
    "get_meg_helmet_surf",
    "head_pos_to_trans_rot_t",
    "isinstance",
    "len",
    "list",
    "matplotlib.colors.Normalize",
    "matplotlib.pyplot.subplots",
    "mne.viz._3d._set_aspect_equal",
    "mpl_toolkits.mplot3d.art3d.Line3DCollection",
    "numpy.any",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.repeat",
    "pick_types",
    "plt_show",
    "range",
    "rot_to_quat",
    "scipy.spatial.distance.cdist",
    "tight_layout",
    "transform_surface_to",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_sensors_connectivity": {
  "data": {
   "lineno": 2871,
   "symbols_in_volume": [
    "ValueError",
    "_get_renderer",
    "_picks_to_idx",
    "_validate_type",
    "len",
    "list",
    "numpy.array",
    "numpy.c_",
    "numpy.max",
    "numpy.min",
    "numpy.sort",
    "numpy.where",
    "scipy.linalg.norm",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_source_estimates": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "_check_option",
    "_check_subject",
    "_validate_type",
    "get_3d_backend",
    "get_subjects_dir",
    "getattr",
    "len",
    "mne.viz._3d._check_time_viewer_compatibility",
    "mne.viz._3d._handle_time",
    "mne.viz._3d._plot_mpl_stc",
    "mne.viz._3d._process_clim",
    "mne.viz._3d._separate_map",
    "mne.viz._3d.warnings",
    "set_3d_backend",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_sparse_source_estimates": {
  "data": {
   "lineno": 2514,
   "symbols_in_volume": [
    "ValueError",
    "_get_color_list",
    "_get_renderer",
    "all",
    "enumerate",
    "isinstance",
    "itertools.cycle",
    "len",
    "list",
    "matplotlib.colors",
    "matplotlib.colors.ColorConverter",
    "matplotlib.pyplot.figure",
    "next",
    "numpy.concatenate",
    "numpy.ndarray",
    "numpy.r_",
    "numpy.sum",
    "numpy.unique",
    "plt_show",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_stat_map": {
  "data": {
   "shadows": "nilearn.plotting.plot_stat_map"
  },
  "type": "import"
 },
 "mne.viz._3d.plot_vector_source_estimates": {
  "data": {
   "lineno": 2313,
   "symbols_in_volume": [
    "_check_option",
    "_check_subject",
    "_validate_type",
    "colormap",
    "get_3d_backend",
    "get_subjects_dir",
    "getattr",
    "len",
    "mne.viz._3d._check_time_viewer_compatibility",
    "mne.viz._3d._get_ps_kwargs",
    "mne.viz._3d._handle_time",
    "mne.viz._3d._process_clim",
    "mne.viz._3d.warnings",
    "numpy.mean",
    "numpy.ptp"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "ValueError",
    "_DistanceQuery",
    "_check_option",
    "_check_subject",
    "_cut_coords_to_idx",
    "_ensure_src",
    "_print_coord_trans",
    "_validate_type",
    "check_version",
    "colormap",
    "dict",
    "float",
    "functools.partial",
    "get_subjects_dir",
    "isinstance",
    "len",
    "list",
    "matplotlib.colors.ListedColormap",
    "matplotlib.pyplot.get_cmap",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.subplots",
    "max",
    "min",
    "mne.viz._3d._cut_coords_to_ijk",
    "mne.viz._3d._get_map_ticks",
    "mne.viz._3d._ijk_to_cut_coords",
    "mne.viz._3d._linearize_map",
    "mne.viz._3d._process_clim",
    "mne.viz._3d._separate_map",
    "nibabel.Nifti1Image",
    "nibabel.load",
    "nilearn.image.index_img",
    "nilearn.plotting.plot_glass_brain",
    "nilearn.plotting.plot_stat_map",
    "numpy.abs",
    "numpy.allclose",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.diff",
    "numpy.dot",
    "numpy.eye",
    "numpy.interp",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "numpy.unique",
    "numpy.unravel_index",
    "os.path.join",
    "plot_and_correct",
    "read_ras_mni_t",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._click_to_cut_coords": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "_get_img_fdata",
    "dict",
    "len",
    "mne.viz._3d._cut_coords_to_ijk",
    "mne.viz._3d._ijk_to_cut_coords",
    "nibabel.aff2axcodes",
    "numpy.abs",
    "numpy.argmax",
    "numpy.array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._cut_coords_to_idx": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "mne.viz._3d._cut_coords_to_ijk",
    "numpy.newaxis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._onclick": {
  "data": {
   "lineno": 2123,
   "symbols_in_volume": [
    "_click_to_cut_coords",
    "_cut_coords_to_idx",
    "_update_timeslice",
    "mne.viz._3d.verbose_dec",
    "plot_map_callback"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._press": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": [
    "_update_timeslice",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates._update_timeslice": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "nilearn.image.index_img",
    "plot_map_callback"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plot_volume_source_estimates.plot_and_correct": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "_crop_colorbar",
    "functools.partial",
    "matplotlib.cbook.mplDeprecation",
    "mne.viz._3d._glass_brain_crosshairs",
    "mne.viz._3d.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz._3d.resample_from_to": {
  "data": {
   "shadows": "nibabel.processing.resample_from_to"
  },
  "type": "import"
 },
 "mne.viz._3d.snapshot_brain_montage": {
  "data": {
   "lineno": 2811,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_get_renderer",
    "all",
    "dict",
    "isinstance",
    "len",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz._3d.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.viz._3d.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.viz._3d.surfer": {
  "data": {
   "shadows": "surfer"
  },
  "type": "import"
 },
 "mne.viz._3d.verbose_dec": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.viz._3d.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz._brain": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.viz._brain._brain": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._brain._Brain": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._brain._Brain.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "KeyError",
    "Surface",
    "ValueError",
    "_get_renderer",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "matplotlib.colors.colorConverter.to_rgb",
    "numpy.atleast_1d",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain._check_hemi": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain._n_times": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain._show": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain._to_time_index": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.add_data": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_option",
    "_handle_time",
    "_validate_type",
    "bool",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.viz._brain._brain._update_limits",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.zeros",
    "time_label",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.add_foci": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "_check_option",
    "enumerate",
    "isinstance",
    "matplotlib.colors.colorConverter.to_rgb",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.add_label": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "enumerate",
    "hasattr",
    "isinstance",
    "matplotlib.colors.colorConverter.to_rgba",
    "mne.viz._brain._brain.os",
    "numpy.array",
    "numpy.round",
    "numpy.uint8",
    "numpy.zeros",
    "os.path.join",
    "read_label",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.add_text": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.close": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.data": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.enable_depth_peeling": {
  "data": {
   "lineno": 1155
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.hemis": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.remove_labels": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.save_image": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.scale_data_colormap": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.screenshot": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.set_data_smoothing": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "ValueError",
    "_hemi_morph",
    "len",
    "numpy.arange",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.set_time_interpolation": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "_check_option",
    "dict",
    "mne.viz._brain._brain._safe_interp1d",
    "numpy.arange",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.set_time_point": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "_set_mesh_scalars",
    "list",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "time_label"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.show_view": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "View",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.time_interpolation": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_auto_scaling": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "_process_clim",
    "_set_colormap_range",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_fmax": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "_set_colormap_range",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_fmid": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "_set_colormap_range",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_fmin": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "_set_colormap_range",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_fscale": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "_set_colormap_range",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_glyphs": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "_add_polydata_actor",
    "_set_colormap_range",
    "numpy.array",
    "numpy.uint8",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.update_lut": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "all",
    "calculate_lut",
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._Brain.views": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._safe_interp1d": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain._safe_interp1d.func": {
  "data": {
   "lineno": 1164
  },
  "type": "function"
 },
 "mne.viz._brain._brain._update_limits": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._brain.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz._brain._brain.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain._timeviewer.BumpColorbarPoints": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.BumpColorbarPoints.__call__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "getattr",
    "mne.viz._brain._timeviewer.time"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.BumpColorbarPoints.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mne.viz._brain._timeviewer.time"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.FigureCanvasQTAgg": {
  "data": {
   "shadows": "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.IntSlider": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.IntSlider.__call__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "all",
    "getattr",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.IntSlider.__init__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.MplCanvas.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "PyQt5.QtWidgets.QSizePolicy.Expanding",
    "getattr",
    "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg",
    "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.setSizePolicy",
    "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg.updateGeometry",
    "matplotlib.figure.Figure",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas.close": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas.on_button_press": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas.plot": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas.plot_time_line": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas.show": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.MplCanvas.update_plot": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.QtWidgets": {
  "data": {
   "shadows": "PyQt5.QtWidgets"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.ShowView": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.ShowView.__call__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.ShowView.__init__": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.SmartSlider": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.SmartSlider.__call__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.SmartSlider.__init__": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.TimeSlider": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.TimeSlider.__call__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "all",
    "float",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.TimeSlider.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.UpdateColorbarScale": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer.UpdateColorbarScale.__call__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.UpdateColorbarScale.__init__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._LinkViewer": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer._LinkViewer.__init__": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._LinkViewer.link_sliders": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "_update_slider_callback",
    "callback",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._LinkViewer.set_playback_speed": {
  "data": {
   "lineno": 1009
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._LinkViewer.set_time_point": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._LinkViewer.toggle_playback": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain._timeviewer._TimeViewer.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "_check_option",
    "_require_minimum_version",
    "bool",
    "int",
    "isinstance",
    "list",
    "max",
    "round",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer._advance": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "min",
    "mne.viz._brain._timeviewer.time",
    "numpy.arange",
    "numpy.interp",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.add_point": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.apply_auto_scaling": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.clean": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "hasattr",
    "mne.viz._brain._timeviewer.safe_event"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.clear_points": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_menu": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_playback": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_point_picking": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "UserWarning",
    "_ReuseCycle",
    "_get_color_list",
    "_update_picking_callback",
    "enumerate",
    "mne.viz._brain._timeviewer.MplCanvas",
    "mne.viz._brain._timeviewer.warnings",
    "next",
    "numpy.argmax",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_scalar_bar": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_sliders": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "callable",
    "enumerate",
    "len",
    "mne.viz._brain._timeviewer.BumpColorbarPoints",
    "mne.viz._brain._timeviewer.IntSlider",
    "mne.viz._brain._timeviewer.ShowView",
    "mne.viz._brain._timeviewer.SmartSlider",
    "mne.viz._brain._timeviewer.TimeSlider",
    "mne.viz._brain._timeviewer.UpdateColorbarScale",
    "mne.viz._brain._timeviewer._get_range",
    "numpy.array",
    "str",
    "time_label"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.configure_time_label": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.help": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "_show_help",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.keyPressEvent": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "callback",
    "mne.viz._brain._timeviewer.safe_event"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_button_press": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_button_release": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_mouse_move": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.on_pick": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "abs",
    "hasattr",
    "next",
    "numpy.argmin",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.play": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Exception",
    "mne.viz._brain._timeviewer.safe_event"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.plot_time_course": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "hasattr",
    "mne.viz._brain._timeviewer.time",
    "str",
    "vertex_to_mni"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.plot_time_line": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.remove_point": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "mne.viz._brain._timeviewer.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.restore_user_scaling": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.set_playback_speed": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.set_slider_style": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.toggle_interface": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "len",
    "time_label"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._TimeViewer.toggle_playback": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "mne.viz._brain._timeviewer.time",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._get_range": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer._normalize": {
  "data": {
   "lineno": 1036
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.safe_event": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "fun",
    "mne.viz._brain._timeviewer.sys",
    "mne.viz._brain._timeviewer.traceback"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain._timeviewer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.viz._brain._timeviewer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz._brain.colormap": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.colormap.calculate_lut": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "mne.viz._brain.colormap.create_lut",
    "mne.viz._brain.colormap.get_fill_colors",
    "mne.viz._brain.colormap.scale_sequential_lut",
    "numpy.arange",
    "numpy.float",
    "numpy.full",
    "numpy.hstack",
    "numpy.interp",
    "numpy.linspace",
    "numpy.mod",
    "numpy.r_",
    "numpy.round",
    "numpy.zeros",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.colormap.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz._brain.colormap.create_lut": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cmap",
    "matplotlib.cm.get_cmap",
    "numpy.int",
    "numpy.linspace",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.colormap.get_fill_colors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.linalg.norm",
    "numpy.r_",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.colormap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain.colormap.scale_sequential_lut": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.clip",
    "numpy.interp",
    "numpy.linspace",
    "numpy.round",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface": {
  "data": {},
  "type": "module"
 },
 "mne.viz._brain.surface.Surface": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz._brain.surface.Surface.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "dict",
    "float",
    "get_subjects_dir",
    "int",
    "isinstance",
    "os.path.join",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.__len__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.load_curvature": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.int",
    "numpy.newaxis",
    "os.path.join",
    "read_curvature"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.load_geometry": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "complete_surface_info",
    "dict",
    "numpy.max",
    "numpy.min",
    "os.path.join",
    "read_surface"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.x": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.y": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.Surface.z": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.viz._brain.surface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz._brain.surface.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz._brain.view": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "dict",
    "mne.viz._brain.view.View",
    "mne.viz._brain.view._lh_views_dict",
    "mne.viz._brain.view._rh_views_dict",
    "mne.viz._brain.view.lh_views_dict",
    "mne.viz._brain.view.rh_views_dict"
   ]
  },
  "type": "module"
 },
 "mne.viz._brain.view.View": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.viz._brain.view._lh_views_dict": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz._brain.view._rh_views_dict": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz._brain.view.lh_views_dict": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.viz._brain.view.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.viz._brain.view.rh_views_dict": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.backends": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends._pyvista": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "module"
 },
 "mne.viz.backends._pyvista.BackgroundPlotter": {
  "data": {
   "shadows": "pyvista.BackgroundPlotter"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.Line": {
  "data": {
   "shadows": "pyvista.Line"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.Plotter": {
  "data": {
   "shadows": "pyvista.Plotter"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.PolyData": {
  "data": {
   "shadows": "pyvista.PolyData"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.UnstructuredGrid": {
  "data": {
   "shadows": "pyvista.UnstructuredGrid"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista._3d_to_2d": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista._get_view_to_display_matrix",
    "mne.viz.backends._pyvista._get_world_to_view_matrix",
    "numpy.column_stack",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._FIGURES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.backends._pyvista._Figure": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz.backends._pyvista._Figure.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Figure.build": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyvista.BackgroundPlotter",
    "pyvista.Plotter"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Figure.is_active": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Projection": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.viz.backends._pyvista._Projection.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Projection.visible": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "mne.viz.backends._pyvista._Renderer.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "isinstance",
    "mne.viz.backends._pyvista._FIGURES",
    "mne.viz.backends._pyvista._Figure",
    "mne.viz.backends._pyvista._disabled_depth_peeling",
    "mne.viz.backends._pyvista._enable_aa",
    "mne.viz.backends._pyvista.pyvista",
    "mne.viz.backends._pyvista.warnings",
    "pyvista.Plotter"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.close": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista._close_3d_figure"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.contour": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "FutureWarning",
    "_get_colormap_from_array",
    "len",
    "mne.viz.backends._pyvista.warnings",
    "numpy.array",
    "numpy.c_",
    "numpy.full",
    "pyvista.PolyData"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.enable_depth_peeling": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.mesh": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "len",
    "matplotlib.colors.ListedColormap",
    "mne.viz.backends._pyvista.warnings",
    "numpy.c_",
    "numpy.float",
    "numpy.full",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.uint8",
    "pyvista.PolyData"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.project": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "dict",
    "mne.viz.backends._pyvista._3d_to_2d",
    "mne.viz.backends._pyvista._Projection",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.quiver3d": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "mne.viz.backends._pyvista._arrow_glyph",
    "mne.viz.backends._pyvista.vtk",
    "mne.viz.backends._pyvista.warnings",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.full",
    "numpy.vstack",
    "pyvista.UnstructuredGrid",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.reset_camera": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.scalarbar": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.scene": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.screenshot": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista._take_3d_screenshot"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.set_camera": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista._set_3d_view"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.set_interactive": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.show": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.sphere": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.vtk",
    "mne.viz.backends._pyvista.warnings",
    "numpy.array",
    "pyvista.PolyData"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.subplot": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista._enable_aa",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.surface": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "FutureWarning",
    "_get_colormap_from_array",
    "len",
    "mne.viz.backends._pyvista.warnings",
    "numpy.array",
    "numpy.c_",
    "numpy.full",
    "pyvista.PolyData"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.text2d": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "isinstance",
    "mne.viz.backends._pyvista.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.text3d": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._Renderer.tube": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "FutureWarning",
    "_get_colormap_from_array",
    "mne.viz.backends._pyvista.warnings",
    "pyvista.Line",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._add_polydata_actor": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista.vtk"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._arrow_glyph": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista._glyph",
    "mne.viz.backends._pyvista.pyvista",
    "mne.viz.backends._pyvista.vtk"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._check_3d_figure": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mne.viz.backends._pyvista._Figure"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._close_3d_figure": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._close_all": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "DeprecationWarning",
    "mne.viz.backends._pyvista.warnings",
    "pyvista.close_all"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._deg2rad": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._disabled_depth_peeling": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pyvista.rcParams"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._enable_aa": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista.os"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._get_camera_direction": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._get_view_to_display_matrix": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._get_world_to_view_matrix": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "float",
    "mne.viz.backends._pyvista._mat_to_array"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._glyph": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "isinstance",
    "mne.viz.backends._pyvista.vtk",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._mat_to_array": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._rad2deg": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._require_minimum_version": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "mne.viz.backends._pyvista.pyvista"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._set_3d_title": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._set_3d_view": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "abs",
    "max",
    "mne.viz.backends._pyvista._deg2rad",
    "mne.viz.backends._pyvista._get_camera_direction",
    "numpy.array",
    "numpy.asarray",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._set_colormap_range": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings",
    "vtk.util.numpy_support.numpy_to_vtk"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._set_mesh_scalars": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._take_3d_screenshot": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "FutureWarning",
    "mne.viz.backends._pyvista.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._testing_context": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mne.viz.backends._pyvista.pyvista"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._update_picking_callback": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista.vtk"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._update_slider_callback": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "mne.viz.backends._pyvista.vtk"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista._update_slider_callback._the_callback": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "hasattr",
    "pyvista.utilities.try_callback"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._pyvista.close_all": {
  "data": {
   "shadows": "pyvista.close_all"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.numpy_to_vtk": {
  "data": {
   "shadows": "vtk.util.numpy_support.numpy_to_vtk"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.pyvista": {
  "data": {
   "shadows": "pyvista"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.rcParams": {
  "data": {
   "shadows": "pyvista.rcParams"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.try_callback": {
  "data": {
   "shadows": "pyvista.utilities.try_callback"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.vtk": {
  "data": {
   "shadows": "vtk"
  },
  "type": "import"
 },
 "mne.viz.backends._pyvista.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.backends._utils": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends._utils.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.VALID_3D_BACKENDS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.viz.backends._utils._check_color": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "matplotlib.colors.colorConverter.to_rgb",
    "numpy.array",
    "numpy.float",
    "numpy.int",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._utils._get_colormap_from_array": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.cm.get_cmap",
    "matplotlib.colors.ListedColormap",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends._utils.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.backends._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.backends.base_renderer": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends.base_renderer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mne.viz.backends.base_renderer._BaseRenderer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.close": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.contour": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.mesh": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.project": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.quiver3d": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.reset_camera": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.scalarbar": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.scene": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.screenshot": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.set_camera": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.set_interactive": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.show": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.sphere": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.subplot": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.surface": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.text2d": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.text3d": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer._BaseRenderer.tube": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "abc.abstractclassmethod"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.base_renderer.abstractclassmethod": {
  "data": {
   "shadows": "abc.abstractclassmethod"
  },
  "type": "import"
 },
 "mne.viz.backends.renderer": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.viz.backends.renderer.MNE_3D_BACKEND": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.viz.backends.renderer.MNE_3D_BACKEND_TESTING": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.viz.backends.renderer._backend_name_map": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.viz.backends.renderer._get_renderer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mne.viz.backends.renderer.backend",
    "mne.viz.backends.renderer.get_3d_backend",
    "mne.viz.backends.renderer.set_3d_backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer._reload_backend": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mne.viz.backends.renderer._backend_name_map",
    "mne.viz.backends.renderer.backend",
    "mne.viz.backends.renderer.importlib"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer._use_test_3d_backend": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "mne.viz.backends.renderer.MNE_3D_BACKEND_TESTING",
    "mne.viz.backends.renderer.backend",
    "mne.viz.backends.renderer.use_3d_backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer.backend": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.viz.backends.renderer.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mne.viz.backends.renderer.create_3d_figure": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mne.viz.backends.renderer._get_renderer"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer.get_3d_backend": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "_check_option",
    "get_config",
    "mne.viz.backends.renderer.MNE_3D_BACKEND",
    "mne.viz.backends.renderer._reload_backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mne.viz.backends.renderer.set_3d_backend": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NameError",
    "_check_option",
    "mne.viz.backends.renderer.MNE_3D_BACKEND",
    "mne.viz.backends.renderer._reload_backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer.set_3d_title": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mne.viz.backends.renderer.backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer.set_3d_view": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mne.viz.backends.renderer.backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.renderer.use_3d_backend": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Exception",
    "contextlib.contextmanager",
    "mne.viz.backends.renderer.get_3d_backend",
    "mne.viz.backends.renderer.set_3d_backend"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils": {
  "data": {
   "symbols_in_volume": [
    "mne.viz.backends.tests._utils.has_mayavi",
    "mne.viz.backends.tests._utils.has_pyvista",
    "mne.viz.backends.tests._utils.pytest"
   ]
  },
  "type": "module"
 },
 "mne.viz.backends.tests._utils.has_mayavi": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ImportError",
    "mne.viz.backends.tests._utils.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils.has_pyvista": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ImportError",
    "mne.viz.backends.tests._utils.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests._utils.mlab": {
  "data": {
   "shadows": "mayavi.mlab"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.pyvista": {
  "data": {
   "shadows": "pyvista"
  },
  "type": "import"
 },
 "mne.viz.backends.tests._utils.skips_if_not_mayavi": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.backends.tests._utils.skips_if_not_pyvista": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.backends.tests._utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends.tests.test_renderer.backend_mocker": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.viz.backends.renderer.MNE_3D_BACKEND",
    "mne.viz.backends.tests.test_renderer.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.renderer": {
  "data": {
   "shadows": "mne.viz.backends.renderer"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.skips_if_not_mayavi": {
  "data": {
   "shadows": "mne.viz.backends.tests._utils.skips_if_not_mayavi"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.skips_if_not_pyvista": {
  "data": {
   "shadows": "mne.viz.backends.tests._utils.skips_if_not_pyvista"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_renderer.test_3d_backend": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mne.viz.backends.renderer.backend._Renderer",
    "numpy.array",
    "numpy.column_stack",
    "numpy.linspace",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.test_3d_functions": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.viz.backends.renderer.backend._Renderer",
    "mne.viz.backends.renderer.backend._check_3d_figure",
    "mne.viz.backends.renderer.backend._close_all",
    "mne.viz.backends.renderer.backend._set_3d_title",
    "mne.viz.backends.renderer.backend._set_3d_view",
    "mne.viz.backends.renderer.backend._take_3d_screenshot",
    "mne.viz.backends.renderer.create_3d_figure",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_renderer.test_backend_environment_setup": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "mne.viz.backends.renderer.MNE_3D_BACKEND",
    "mne.viz.backends.renderer.get_3d_backend",
    "mne.viz.backends.renderer.set_3d_backend",
    "mne.viz.backends.tests._utils.skips_if_not_mayavi",
    "mne.viz.backends.tests._utils.skips_if_not_pyvista",
    "mne.viz.backends.tests.test_renderer.os",
    "mne.viz.backends.tests.test_renderer.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.viz.backends.tests.test_utils.LinearSegmentedColormap": {
  "data": {
   "shadows": "matplotlib.colors.LinearSegmentedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils._check_color": {
  "data": {
   "shadows": "mne.viz.backends._utils._check_color"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils._get_colormap_from_array": {
  "data": {
   "shadows": "mne.viz.backends._utils._get_colormap_from_array"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.backends.tests.test_utils.test_check_color": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.viz.backends._utils._check_color",
    "mne.viz.backends.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.backends.tests.test_utils.test_get_colormap_from_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.colors.LinearSegmentedColormap",
    "matplotlib.colors.ListedColormap",
    "mne.viz.backends._utils._get_colormap_from_array"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle": {
  "data": {},
  "type": "module"
 },
 "mne.viz.circle._plot_connectivity_circle_onpick": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.argmin",
    "numpy.pi",
    "numpy.size",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle.circular_layout": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.float",
    "numpy.int",
    "numpy.ones",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.circle.m_patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "mne.viz.circle.m_path": {
  "data": {
   "shadows": "matplotlib.path"
  },
  "type": "import"
 },
 "mne.viz.circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.circle.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.circle.plot_connectivity_circle": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "colormap",
    "enumerate",
    "float",
    "functools.partial",
    "isinstance",
    "itertools.cycle",
    "len",
    "matplotlib.patches.PathPatch",
    "matplotlib.path.Path",
    "matplotlib.path.Path.CURVE4",
    "matplotlib.path.Path.LINETO",
    "matplotlib.path.Path.MOVETO",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.cm.ScalarMappable",
    "matplotlib.pyplot.cm.Spectral",
    "matplotlib.pyplot.cm.spectral",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_cmap",
    "matplotlib.pyplot.getp",
    "matplotlib.pyplot.setp",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.ylim",
    "matplotlib.pyplot.yticks",
    "mne.viz.circle._plot_connectivity_circle_onpick",
    "numpy.abs",
    "numpy.argsort",
    "numpy.diag_indices",
    "numpy.int",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.mtrand.RandomState",
    "numpy.sort",
    "numpy.tril_indices",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "plt_show",
    "range",
    "spectral",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.evoked": {
  "data": {},
  "type": "module"
 },
 "mne.viz.evoked.Bbox": {
  "data": {
   "shadows": "matplotlib.transforms.Bbox"
  },
  "type": "import"
 },
 "mne.viz.evoked.ColorbarBase": {
  "data": {
   "shadows": "matplotlib.colorbar.ColorbarBase"
  },
  "type": "import"
 },
 "mne.viz.evoked.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "mne.viz.evoked.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "mne.viz.evoked.SpanSelector": {
  "data": {
   "shadows": "matplotlib.widgets.SpanSelector"
  },
  "type": "import"
 },
 "mne.viz.evoked._add_nave": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "mne.viz.evoked._butterfly_on_button_press": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._butterfly_onpick": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._check_loc_legal": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "numpy.bool_",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._draw_axes_pce": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "ValueError",
    "_setup_ax_spines",
    "_trim_ticks",
    "bool",
    "isinstance",
    "numpy.array",
    "numpy.isfinite",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._draw_colorbar_pce": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "all",
    "cmap",
    "isinstance",
    "len",
    "matplotlib.colorbar.ColorbarBase",
    "matplotlib.transforms.Bbox",
    "max",
    "mpl_toolkits.axes_grid1.make_axes_locatable",
    "numbers.Integral",
    "numpy.divide",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._draw_legend_pce": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "any",
    "bool",
    "cmap",
    "dict",
    "isinstance",
    "len",
    "list",
    "matplotlib.lines.Line2D",
    "mne.viz.evoked._check_loc_legal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._evoked_sensor_legend": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "_get_pos_outlines",
    "len",
    "list",
    "mne.viz.evoked._check_loc_legal",
    "mne.viz.evoked._plot_legend",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._get_ci_function_pce": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "callable",
    "float",
    "functools.partial",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._get_data_and_ci": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "_check_if_nan",
    "ci_fun",
    "combine_func",
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._handle_spatial_colors": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "_clean_names",
    "_get_pos_outlines",
    "mne.viz.evoked._plot_legend",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._handle_styles_pce": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "all",
    "cmap",
    "copy.deepcopy",
    "dict",
    "isinstance",
    "len",
    "mne.viz.evoked._populate_style_dict_pce",
    "mne.viz.evoked._validate_cmap_pce",
    "mne.viz.evoked._validate_colors_pce",
    "mne.viz.evoked._validate_linestyles_pce",
    "mne.viz.evoked._validate_style_keys_pce",
    "numbers.Integral",
    "numpy.linspace",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._line_plot_onselect": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "_make_head_outlines",
    "_merge_ch_data",
    "_pair_grad_sensors",
    "_prepare_topomap_plot",
    "enumerate",
    "functools.partial",
    "len",
    "list",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplots",
    "max",
    "min",
    "numpy.abs",
    "numpy.average",
    "plot_topomap",
    "plt_show",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_compare_evokeds": {
  "data": {
   "lineno": 1854
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_cov",
    "_check_delayed_ssp",
    "_check_time_unit",
    "_draw_proj_checkbox",
    "_get_channel_types",
    "_handle_default",
    "_picks_to_idx",
    "_setup_plot_projector",
    "_validate_if_list_of_axes",
    "all",
    "any",
    "channel_type",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.setp",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.subplots_adjust",
    "max",
    "min",
    "mne.viz.evoked._plot_image",
    "mne.viz.evoked._plot_lines",
    "numpy.array",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.unicode",
    "plt_show",
    "set",
    "sorted",
    "str",
    "tight_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked_white": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_time_unit",
    "_handle_default",
    "_pl",
    "_triage_rank_sss",
    "any",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.cm.Set1",
    "matplotlib.pyplot.subplots",
    "numpy.linspace",
    "plt_show",
    "read_cov",
    "str",
    "tuple",
    "whiten_evoked",
    "whitened_gfp",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked_white.whitened_gfp": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_image": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "DraggableColorbar",
    "_check_if_nan",
    "_pl",
    "_plot_masked_image",
    "_setup_cmap",
    "int",
    "len",
    "matplotlib.pyplot.colorbar",
    "mne.viz.evoked._add_nave",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.intersect1d",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_legend": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_draw_outlines",
    "_prepare_topomap",
    "mpl_toolkits.axes_grid1.inset_locator.inset_axes",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_lines": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "TypeError",
    "_check_ch_locs",
    "_check_if_nan",
    "_check_sphere",
    "_pl",
    "bool",
    "callable",
    "dict",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "list",
    "matplotlib.patheffects.withStroke",
    "matplotlib.pyplot.get_backend",
    "matplotlib.widgets.SpanSelector",
    "mne.viz.evoked._add_nave",
    "mne.viz.evoked._butterfly_on_button_press",
    "mne.viz.evoked._butterfly_onpick",
    "mne.viz.evoked._handle_spatial_colors",
    "mne.viz.evoked._line_plot_onselect",
    "mne.viz.evoked._rgb",
    "numpy.array",
    "numpy.diff",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "str",
    "tuple",
    "type",
    "warn",
    "zip",
    "zorder"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_update_evoked": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.where",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._populate_style_dict_pce": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "KeyError",
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._rgb": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._title_helper_pce": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "_handle_default",
    "_set_title_multiple_electrodes",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._topo_closed": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_cmap_pce": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "list",
    "matplotlib.cm.get_cmap",
    "matplotlib.colors.Colormap",
    "numbers.Integral",
    "numpy.ndarray",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_colors_pce": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_get_color_list",
    "_is_numeric",
    "all",
    "copy.deepcopy",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numbers.Integral",
    "numpy.ndarray",
    "range",
    "set",
    "sorted",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_linestyles_pce": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "set",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._validate_style_keys_pce": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "dict",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.evoked.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "mne.viz.evoked.inset_axes": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.inset_locator.inset_axes"
  },
  "type": "import"
 },
 "mne.viz.evoked.make_axes_locatable": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.make_axes_locatable"
  },
  "type": "import"
 },
 "mne.viz.evoked.mlines": {
  "data": {
   "shadows": "matplotlib.lines"
  },
  "type": "import"
 },
 "mne.viz.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.evoked.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.evoked.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.evoked.plot_compare_evokeds": {
  "data": {
   "lineno": 1889,
   "symbols_in_volume": [
    "TypeError",
    "_check_ch_locs",
    "_check_evokeds_ch_names_times",
    "_check_sphere",
    "_get_channel_types",
    "_handle_default",
    "_make_combine_callable",
    "_picks_to_idx",
    "_setup_vmin_vmax",
    "_validate_if_list_of_axes",
    "_validate_type",
    "bool",
    "channel_indices_by_type",
    "ci_fun",
    "cmap",
    "combine_func",
    "copy.deepcopy",
    "dict",
    "enumerate",
    "find_layout",
    "isinstance",
    "iter_topography",
    "len",
    "list",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplots",
    "mne.viz.evoked._draw_axes_pce",
    "mne.viz.evoked._draw_colorbar_pce",
    "mne.viz.evoked._draw_legend_pce",
    "mne.viz.evoked._evoked_sensor_legend",
    "mne.viz.evoked._get_ci_function_pce",
    "mne.viz.evoked._get_data_and_ci",
    "mne.viz.evoked._handle_styles_pce",
    "mne.viz.evoked._plot_compare_evokeds",
    "mne.viz.evoked._title_helper_pce",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.int",
    "numpy.intersect1d",
    "numpy.newaxis",
    "pick_info",
    "plt_show",
    "str",
    "sum",
    "tuple",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_compare_evokeds.click_func": {
  "data": {
   "lineno": 2227,
   "symbols_in_volume": [
    "cmap",
    "mne.viz.evoked.plot_compare_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "mne.viz.evoked._plot_evoked",
    "zorder"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_image": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "mne.viz.evoked._plot_evoked"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_joint": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_check_time_unit",
    "_connection_line",
    "_get_channel_types",
    "_pick_inst",
    "_prepare_joint_axes",
    "_process_times",
    "_set_contour_locator",
    "_setup_vmin_vmax",
    "_validate_if_list_of_axes",
    "any",
    "channel_type",
    "dict",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.subplots_adjust",
    "matplotlib.ticker.MaxNLocator",
    "mne.viz.evoked._plot_evoked",
    "numpy.ndarray",
    "plt_show",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_topo": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "_get_color_list",
    "_plot_evoked_topo",
    "len",
    "list",
    "matplotlib.colors.colorConverter.to_rgb",
    "numpy.mean",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_white": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "mne.viz.evoked._plot_evoked_white"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_snr_estimate": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "estimate_snr",
    "matplotlib.pyplot.subplots",
    "numpy.concatenate",
    "plt_show"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.evoked.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "mne.viz.ica": {
  "data": {},
  "type": "module"
 },
 "mne.viz.ica._close_epochs_event": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "mne.viz.ica._close_event": {
  "data": {
   "lineno": 951
  },
  "type": "function"
 },
 "mne.viz.ica._create_properties_layout": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._get_psd_label_and_std": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "_convert_psds",
    "mne.viz.ica.warnings",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._label_clicked": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "Exception",
    "_hide_frame",
    "_make_head_outlines",
    "_merge_ch_data",
    "_prepare_topomap_plot",
    "_prepare_trellis",
    "enumerate",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.searchsorted",
    "pick_types",
    "plot_topomap",
    "plt_show",
    "str",
    "tight_layout",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._pick_bads": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "_select_bads"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_overlay_evoked": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "matplotlib.pyplot.subplots",
    "numpy.ndarray",
    "plt_show",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_overlay_raw": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.suptitle",
    "plt_show",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_properties": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "EpochsArray",
    "_plot_ica_topomap",
    "float",
    "int",
    "kde",
    "len",
    "mpl_toolkits.axes_grid1.axes_divider.make_axes_locatable",
    "numpy.arange",
    "numpy.diff",
    "numpy.insert",
    "numpy.linalg.LinAlgError",
    "numpy.linspace",
    "plot_epochs_image",
    "range",
    "scipy.stats.gaussian_kde",
    "set_title_and_labels"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_sources_evoked": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "len",
    "list",
    "matplotlib.patheffects.withStroke",
    "matplotlib.pyplot.cm.rainbow",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.subplots",
    "numpy.linspace",
    "numpy.sort",
    "plt_show",
    "tight_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_sources_epochs": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_handle_default",
    "_prepare_mne_browse_epochs",
    "create_info",
    "dict",
    "functools.partial",
    "int",
    "len",
    "list",
    "min",
    "mne.viz.ica._update_epoch_data",
    "numpy.append",
    "numpy.concatenate",
    "numpy.repeat",
    "pick_types",
    "plt_show",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_sources_raw": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_handle_default",
    "_prepare_mne_browse_raw",
    "create_info",
    "dict",
    "functools.partial",
    "int",
    "len",
    "list",
    "min",
    "numpy.append",
    "numpy.array",
    "pick_types",
    "plt_show",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._update_data": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._update_epoch_data": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "mne.viz.ica.make_axes_locatable": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.axes_divider.make_axes_locatable"
  },
  "type": "import"
 },
 "mne.viz.ica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.ica.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.ica.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.ica.plot_ica_overlay": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "TypeError",
    "_check_start_stop",
    "_picks_to_idx",
    "_validate_type",
    "isinstance",
    "list",
    "mne.viz.ica._plot_ica_overlay_evoked",
    "mne.viz.ica._plot_ica_overlay_raw",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_properties": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "RawArray",
    "ValueError",
    "_picks_to_idx",
    "_reject_data_segments",
    "_validate_if_list_of_axes",
    "_validate_type",
    "bool",
    "dict",
    "enumerate",
    "float",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "make_fixed_length_epochs",
    "min",
    "mne.viz.ica._create_properties_layout",
    "mne.viz.ica._get_psd_label_and_std",
    "mne.viz.ica._plot_ica_properties",
    "numpy.arange",
    "numpy.insert",
    "numpy.swapaxes",
    "numpy.var",
    "plt_show",
    "psd_multitaper",
    "set_title_and_labels",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_properties.set_title_and_labels": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_scores": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.unique",
    "plt_show",
    "str",
    "tight_layout",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_sources": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "_picks_to_idx",
    "getattr",
    "isinstance",
    "mne.viz.ica._plot_ica_sources_evoked",
    "mne.viz.ica._plot_sources_epochs",
    "mne.viz.ica._plot_sources_raw"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.ica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.misc": {
  "data": {},
  "type": "module"
 },
 "mne.viz.misc.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz.misc.Normalize": {
  "data": {
   "shadows": "matplotlib.colors.Normalize"
  },
  "type": "import"
 },
 "mne.viz.misc._DEFAULT_ALIM": {
  "data": {
   "lineno": 767
  },
  "type": "constant"
 },
 "mne.viz.misc._check_fscale": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._filter_ticks": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.floor",
    "numpy.log10",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._get_flim": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._get_presser": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "mne.viz.misc.matplotlib",
    "val",
    "val.func"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._handle_event_colors": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "_get_color_list",
    "_pl",
    "dict",
    "itertools.cycle",
    "len",
    "set",
    "sorted",
    "str",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._plot_mri_contours": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_option",
    "_get_img_fdata",
    "_prepare_trellis",
    "_read_mri_info",
    "apply_trans",
    "bool",
    "dict",
    "invert_transform",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.cm.gray",
    "matplotlib.pyplot.subplots_adjust",
    "mne.viz.misc.warnings",
    "nibabel.load",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.inf",
    "numpy.int",
    "numpy.linspace",
    "numpy.round",
    "numpy.sort",
    "plt_show",
    "read_surface",
    "repr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.adjust_axes": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.viz.misc.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.misc.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mne.viz.misc.filtfilt": {
  "data": {
   "shadows": "scipy.signal.filtfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.freqz": {
  "data": {
   "shadows": "scipy.signal.freqz"
  },
  "type": "import"
 },
 "mne.viz.misc.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.viz.misc.group_delay": {
  "data": {
   "shadows": "scipy.signal.group_delay"
  },
  "type": "import"
 },
 "mne.viz.misc.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.viz.misc.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.viz.misc.make_axes_locatable": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.make_axes_locatable"
  },
  "type": "import"
 },
 "mne.viz.misc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.misc.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.viz.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.misc.plot_bem": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "get_subjects_dir",
    "glob.glob",
    "isinstance",
    "len",
    "mne.viz.misc._plot_mri_contours",
    "os.path.exists",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "read_source_spaces",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_cov": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Covariance",
    "_picks_by_type",
    "collections.defaultdict",
    "compute_rank",
    "dict",
    "enumerate",
    "len",
    "list",
    "make_projector",
    "matplotlib.colors.Normalize",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.subplots",
    "mne.viz.misc.copy",
    "mpl_toolkits.axes_grid1.make_axes_locatable",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.sqrt",
    "pick_channels",
    "pick_info",
    "plt_show",
    "scipy.linalg.svd",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_csd": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.subplots_adjust",
    "matplotlib.pyplot.suptitle",
    "numpy.abs",
    "numpy.arange",
    "numpy.ceil",
    "numpy.diag",
    "numpy.max",
    "numpy.min",
    "numpy.newaxis",
    "numpy.sqrt",
    "pick_types",
    "plt_show",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_dipole_amplitudes": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "_get_color_list",
    "itertools.cycle",
    "matplotlib.pyplot.subplots",
    "max",
    "min",
    "numpy.inf",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_events": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "events",
    "events.max",
    "len",
    "list",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "mne.viz.misc._handle_event_colors",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.full",
    "numpy.in1d",
    "numpy.max",
    "numpy.min",
    "numpy.unique",
    "plt_show",
    "sorted",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_filter": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "_check_option",
    "_mask_to_onsets_offsets",
    "dict",
    "estimate_ringing_samples",
    "float",
    "func",
    "isinstance",
    "len",
    "matplotlib.pyplot.subplots",
    "mne.viz.misc._DEFAULT_ALIM",
    "mne.viz.misc._filter_ticks",
    "mne.viz.misc._get_flim",
    "mne.viz.misc.adjust_axes",
    "mne.viz.misc.plot_ideal_filter",
    "mne.viz.misc.warnings",
    "numpy.abs",
    "numpy.arange",
    "numpy.complex128",
    "numpy.linspace",
    "numpy.log10",
    "numpy.logspace",
    "numpy.maximum",
    "numpy.ones",
    "numpy.pad",
    "numpy.pi",
    "numpy.zeros",
    "plt_show",
    "scipy.signal.filtfilt",
    "scipy.signal.freqz",
    "scipy.signal.group_delay",
    "scipy.signal.lfilter",
    "scipy.signal.sosfilt",
    "scipy.signal.sosfiltfilt",
    "slice",
    "tight_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_ideal_filter": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "min",
    "mne.viz.misc._DEFAULT_ALIM",
    "mne.viz.misc._filter_ticks",
    "mne.viz.misc._get_flim",
    "mne.viz.misc.adjust_axes",
    "numpy.array",
    "numpy.linspace",
    "numpy.log10",
    "numpy.maximum",
    "plt_show",
    "range",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_source_spectrogram": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.barh",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.pcolor",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylim",
    "matplotlib.pyplot.yscale",
    "mne.viz.misc.copy",
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.ravel",
    "numpy.round",
    "numpy.unravel_index",
    "plt_show",
    "range",
    "set",
    "sorted",
    "str",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.misc.sosfilt": {
  "data": {
   "shadows": "scipy.signal.sosfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.sosfiltfilt": {
  "data": {
   "shadows": "scipy.signal.sosfiltfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.montage": {
  "data": {},
  "type": "module"
 },
 "mne.viz.montage.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.viz.montage.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.montage.plot_montage": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "RawArray",
    "RuntimeError",
    "_check_option",
    "_get_fid_coords",
    "_validate_type",
    "copy.deepcopy",
    "create_info",
    "dict",
    "len",
    "list",
    "make_dig_montage",
    "numpy.arange",
    "numpy.argwhere",
    "numpy.array",
    "numpy.isclose",
    "numpy.nan",
    "numpy.setdiff1d",
    "numpy.tril_indices",
    "numpy.zeros",
    "plot_sensors",
    "scipy.spatial.distance.cdist",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw": {
  "data": {},
  "type": "module"
 },
 "mne.viz.raw.RadioButtons": {
  "data": {
   "shadows": "matplotlib.widgets.RadioButtons"
  },
  "type": "import"
 },
 "mne.viz.raw._close_event": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._label_clicked": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "_find_channel_idx",
    "_handle_topomap_bads",
    "len",
    "mne.viz.raw._plot_update_raw_proj",
    "numpy.array",
    "numpy.searchsorted",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._pick_bad_channels": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "_select_bads",
    "mne.viz.raw._plot_update_raw_proj"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._plot_raw_traces": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "_set_ax_label_style",
    "_simplify_float",
    "bool",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.abs",
    "numpy.any",
    "numpy.clip",
    "numpy.logical_and",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "sorted",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._plot_update_raw_proj": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_setup_plot_projector",
    "mne.viz.raw.copy",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._prepare_mne_browse_raw": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "_get_figsize_from_config",
    "_prepare_mne_browse",
    "_setup_browser_offsets",
    "dict",
    "enumerate",
    "figure_nobar",
    "float",
    "isinstance",
    "len",
    "matplotlib.patches.Rectangle",
    "max",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._selection_key_press": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "_change_channel_group",
    "mne.viz.raw._close_event"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._selection_scroll": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "_change_channel_group"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._set_custom_selection": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "_set_radio_button",
    "len",
    "numpy.in1d",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._setup_browser_selection": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "ValueError",
    "_check_option",
    "_divide_to_regions",
    "_get_stim_channel",
    "dict",
    "figure_nobar",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplot2grid",
    "matplotlib.widgets.RadioButtons",
    "numpy.concatenate",
    "pick_channels",
    "pick_types",
    "plot_sensors",
    "read_selection"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._update_raw_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_filtfilt",
    "_overlap_add_filter",
    "_pick_data_channels",
    "float",
    "isinstance",
    "max",
    "numpy.dot",
    "numpy.maximum",
    "numpy.mean",
    "numpy.minimum",
    "numpy.ndarray",
    "numpy.newaxis",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.viz.raw.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.raw.plot_raw": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_annotations_starts_stops",
    "_check_cov",
    "_check_option",
    "_compute_scalings",
    "_ensure_int",
    "_handle_decim",
    "_handle_default",
    "_plot_annotations",
    "_radio_clicked",
    "_setup_butterfly",
    "_toggle_options",
    "_validate_type",
    "callback_proj",
    "create_filter",
    "dict",
    "events",
    "events.astype",
    "float",
    "functools.partial",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.widgets.Button",
    "min",
    "mne.viz.raw._pick_bad_channels",
    "mne.viz.raw._plot_update_raw_proj",
    "mne.viz.raw._prepare_mne_browse_raw",
    "mne.viz.raw._setup_browser_selection",
    "mne.viz.raw._update_raw_data",
    "numpy.arange",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.intersect1d",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.zeros",
    "pick_types",
    "plt_show",
    "round",
    "sorted",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.plot_raw_psd": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "_check_psd_fmax",
    "_plot_psd",
    "_set_psd_plot_params",
    "list",
    "min",
    "numpy.diff",
    "numpy.inf",
    "numpy.isfinite",
    "plt_show",
    "psd_welch"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.plot_raw_psd_topo": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "TypeError",
    "_pick_data_channels",
    "_plot_topo",
    "find_layout",
    "functools.partial",
    "numpy.log10",
    "pick_info",
    "plt_show",
    "psd_welch"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.conftest.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.beer_lambert_law": {
  "data": {
   "shadows": "mne.preprocessing.nirs.beer_lambert_law"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.events_from_annotations": {
  "data": {
   "shadows": "mne.events_from_annotations"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.fnirs_epochs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.Epochs",
    "mne.datasets.testing.data_path",
    "mne.events_from_annotations",
    "mne.io.read_raw_nirx",
    "mne.preprocessing.nirs.beer_lambert_law",
    "mne.preprocessing.nirs.optical_density",
    "mne.viz.tests.conftest.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.conftest.fnirs_evoked": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mne.EvokedArray",
    "mne.channels.make_standard_montage",
    "mne.create_info",
    "mne.viz.tests.conftest.pytest",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.conftest.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.optical_density": {
  "data": {
   "shadows": "mne.preprocessing.nirs.optical_density"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.conftest.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_3d.base_dir",
    "mne.viz.tests.test_3d.data_dir",
    "mne.viz.tests.test_3d.io_dir",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_3d.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.MixedSourceEstimate": {
  "data": {
   "shadows": "mne.MixedSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.VolVectorSourceEstimate": {
  "data": {
   "shadows": "mne.VolVectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._assert_mapdata_equal": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.colors.Colormap",
    "numpy.testing.assert_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._get_map_ticks": {
  "data": {
   "shadows": "mne.viz._3d._get_map_ticks"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._linearize_map": {
  "data": {
   "shadows": "mne.viz._3d._linearize_map"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._process_clim": {
  "data": {
   "shadows": "mne.viz._3d._process_clim"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.base_dir": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.coil_3d": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.compute_source_morph": {
  "data": {
   "shadows": "mne.compute_source_morph"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.config_fname": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.ctf_fname": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.data_dir": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.dip_fname": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.evoked_fname": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.fwd_fname": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.fwd_fname2": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.hs_fname": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.io_dir": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.link_brains": {
  "data": {
   "shadows": "mne.viz.link_brains"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.make_field_map": {
  "data": {
   "shadows": "mne.make_field_map"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.mayavi": {
  "data": {
   "shadows": "mayavi"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.modified_env": {
  "data": {
   "shadows": "mne.utils.modified_env"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.nirx_fname": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pdf_fname": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.pick_channels_evoked": {
  "data": {
   "shadows": "mne.pick_channels_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_alignment": {
  "data": {
   "shadows": "mne.viz.plot_alignment"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_brain_colorbar": {
  "data": {
   "shadows": "mne.viz.plot_brain_colorbar"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_head_positions": {
  "data": {
   "shadows": "mne.viz.plot_head_positions"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_sensors_connectivity": {
  "data": {
   "shadows": "mne.viz.plot_sensors_connectivity"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_sparse_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_sparse_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_volume_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_volume_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_bem_solution": {
  "data": {
   "shadows": "mne.bem.read_bem_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_bem_surfaces": {
  "data": {
   "shadows": "mne.bem.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_nirx": {
  "data": {
   "shadows": "mne.io.read_raw_nirx"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_source_spaces": {
  "data": {
   "shadows": "mne.source_space.read_source_spaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_dipy": {
  "data": {
   "shadows": "mne.utils.requires_dipy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_pysurfer": {
  "data": {
   "shadows": "mne.utils.requires_pysurfer"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.snapshot_brain_montage": {
  "data": {
   "shadows": "mne.viz.snapshot_brain_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.sqd_fname": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.src_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.subjects_dir": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.test_brain_colorbar": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "dict",
    "empty",
    "float",
    "have",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.subplots",
    "mne.viz.plot_brain_colorbar",
    "mne.viz.tests.test_3d.pytest",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_link_brains": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "int",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.traits_test",
    "mne.viz.link_brains",
    "mne.viz.plot_source_estimates",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_mixed_sources_plot_surface": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "mne.MixedSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_pysurfer",
    "mne.utils.traits_test",
    "mne.viz.tests.test_3d.fwd_fname2",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_alignment": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "isinstance",
    "mne.bem.read_bem_solution",
    "mne.bem.read_bem_surfaces",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.io._digitization.write_dig",
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_kit",
    "mne.io.read_raw_nirx",
    "mne.make_sphere_model",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.read_trans",
    "mne.setup_volume_source_space",
    "mne.source_space.read_source_spaces",
    "mne.use_coil_def",
    "mne.utils.catch_logging",
    "mne.utils.traits_test",
    "mne.viz.plot_alignment",
    "mne.viz.tests.test_3d.coil_3d",
    "mne.viz.tests.test_3d.config_fname",
    "mne.viz.tests.test_3d.ctf_fname",
    "mne.viz.tests.test_3d.data_dir",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.fwd_fname",
    "mne.viz.tests.test_3d.hs_fname",
    "mne.viz.tests.test_3d.mayavi",
    "mne.viz.tests.test_3d.nirx_fname",
    "mne.viz.tests.test_3d.pdf_fname",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.sqd_fname",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname",
    "open",
    "os.path.join",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_dipole_mri_orthoview": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "TypeError",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_dipole",
    "mne.read_trans",
    "mne.utils.requires_nibabel",
    "mne.viz.tests.test_3d.dip_fname",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_dipole_orientations": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_dipole",
    "mne.read_trans",
    "mne.viz.tests.test_3d.dip_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_evoked_field": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_field_map",
    "mne.pick_channels_evoked",
    "mne.read_evokeds",
    "mne.utils.traits_test",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.mayavi",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_head_positions": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.io.read_info",
    "mne.viz.plot_head_positions",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.pytest",
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_sensors_connectivity": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.viz.plot_sensors_connectivity",
    "mne.viz.tests.test_3d.data_dir",
    "mne.viz.tests.test_3d.pytest",
    "numpy.random.RandomState",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_sparse_source_estimates": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_pysurfer",
    "mne.utils.traits_test",
    "mne.viz.plot_source_estimates",
    "mne.viz.plot_sparse_source_estimates",
    "mne.viz.tests.test_3d.mayavi",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.empty",
    "numpy.int",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_vector_source_estimates": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "mne.VectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_pysurfer",
    "mne.utils.traits_test",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.random.RandomState",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_volume_source_estimates": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "len",
    "mne.VolSourceEstimate",
    "mne.VolVectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_forward_solution",
    "mne.utils.catch_logging",
    "mne.utils.requires_dipy",
    "mne.utils.requires_nibabel",
    "mne.utils.requires_version",
    "mne.viz.tests.test_3d.fwd_fname",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.utils._fake_click",
    "numpy.array",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.tile",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_volume_source_estimates_morph": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "len",
    "mne.SourceEstimate",
    "mne.VolSourceEstimate",
    "mne.compute_source_morph",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_forward_solution",
    "mne.utils.catch_logging",
    "mne.utils.requires_dipy",
    "mne.utils.requires_nibabel",
    "mne.utils.requires_version",
    "mne.viz.plot_volume_source_estimates",
    "mne.viz.tests.test_3d.fwd_fname",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.random.RandomState",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_process_clim_plot": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "dict",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_pysurfer",
    "mne.utils.traits_test",
    "mne.viz.plot_source_estimates",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.random.RandomState",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_process_clim_round_trip": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dict",
    "matplotlib.pyplot.get_cmap",
    "mne.viz._3d._get_map_ticks",
    "mne.viz._3d._linearize_map",
    "mne.viz._3d._process_clim",
    "mne.viz.mne_analyze_colormap",
    "mne.viz.tests.test_3d._assert_mapdata_equal",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_renderer": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "mne.utils.modified_env",
    "mne.utils.run_subprocess",
    "mne.viz.tests.test_3d.sys"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_snapshot_brain_montage": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_info",
    "mne.utils.traits_test",
    "mne.viz.plot_alignment",
    "mne.viz.snapshot_brain_montage",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_stc_mpl": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_nibabel",
    "mne.viz.tests.test_3d.pytest",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.utils._fake_click",
    "numpy.ones",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.traits_test": {
  "data": {
   "shadows": "mne.utils.traits_test"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.trans_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.use_coil_def": {
  "data": {
   "shadows": "mne.use_coil_def"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.write_dig": {
  "data": {
   "shadows": "mne.io._digitization.write_dig"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.test_circle.circular_layout": {
  "data": {
   "shadows": "mne.viz.circular_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.plot_connectivity_circle": {
  "data": {
   "shadows": "mne.viz.plot_connectivity_circle"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.test_plot_connectivity_circle": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.viz.circular_layout",
    "mne.viz.plot_connectivity_circle",
    "mne.viz.tests.test_circle.pytest",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_epochs.base_dir",
    "mne.viz.tests.test_epochs.test_base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_epochs.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs._get_epochs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.viz.tests.test_epochs.event_name",
    "mne.viz.tests.test_epochs.pytest",
    "mne.viz.tests.test_epochs.raw_fname",
    "numpy.linspace",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.cov_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.ctf_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.event_name": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.evoked_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.layout": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.make_fixed_length_events": {
  "data": {
   "shadows": "mne.event.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.plot_drop_log": {
  "data": {
   "shadows": "mne.viz.plot_drop_log"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.raw_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.test_base_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.test_plot_butterfly": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "events",
    "matplotlib.pyplot.close",
    "mne.EpochsArray",
    "mne.create_info",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_drop_log": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "mne.viz.plot_drop_log",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_basic": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.read_cov",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.cov_fname",
    "mne.viz.tests.test_epochs.pytest",
    "mne.viz.utils._fake_click",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_ctf": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.make_fixed_length_events",
    "mne.io.read_raw_ctf",
    "mne.viz.tests.test_epochs.ctf_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_image": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "dict",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_fignums",
    "matplotlib.pyplot.subplots",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_nodata": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.viz.tests.test_epochs.pytest",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_psd_epochs": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "RuntimeError",
    "UserWarning",
    "matplotlib.pyplot.close",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_psd_epochs_ctf": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "RuntimeError",
    "UserWarning",
    "matplotlib.pyplot.close",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.make_fixed_length_events",
    "mne.io.read_raw_ctf",
    "mne.viz.tests.test_epochs.ctf_fname",
    "mne.viz.tests.test_epochs.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_evoked.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_evoked.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._get_epochs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.viz.tests.test_evoked.event_name",
    "mne.viz.tests.test_evoked.picks",
    "mne.viz.tests.test_evoked.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._get_epochs_delayed_ssp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.viz.tests.test_evoked.event_name",
    "mne.viz.tests.test_evoked.picks",
    "mne.viz.tests.test_evoked.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._parametric_ci": {
  "data": {
   "shadows": "mne.stats.parametric._parametric_ci"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.base_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.cov_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.event_name": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.evoked_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.gridspec": {
  "data": {
   "shadows": "matplotlib.gridspec"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.picks": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.plot_compare_evokeds": {
  "data": {
   "shadows": "mne.viz.evoked.plot_compare_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.raw_sss_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.sel": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.test_plot_compare_evokeds": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "len",
    "list",
    "matplotlib.cm.get_cmap",
    "matplotlib.pyplot.close",
    "mne.stats.parametric._parametric_ci",
    "mne.viz.evoked.plot_compare_evokeds",
    "mne.viz.tests.test_evoked._get_epochs",
    "mne.viz.tests.test_evoked.picks",
    "mne.viz.tests.test_evoked.pytest",
    "numpy.allclose",
    "numpy.min",
    "numpy.stack",
    "numpy.zeros_like",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_compare_evokeds_neuromag122": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "mne.io.constants.FIFF.FIFFV_COIL_NM_122",
    "mne.viz.tests.test_evoked.evoked_fname",
    "mne.viz.tests.test_evoked.mne",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_ctf": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "events",
    "get_axes_midpoints",
    "len",
    "matplotlib.gridspec.GridSpec",
    "matplotlib.pyplot.figure",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.viz.tests.test_evoked.mne",
    "mne.viz.tests.test_evoked.picks",
    "mne.viz.tests.test_evoked.raw_fname",
    "numpy.array",
    "numpy.linalg.norm",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_ctf.get_axes_midpoints": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dict",
    "matplotlib.pyplot.close",
    "mne.utils.catch_logging",
    "mne.viz.tests.test_evoked._get_epochs",
    "mne.viz.tests.test_evoked._get_epochs_delayed_ssp",
    "mne.viz.tests.test_evoked.pytest",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked_cov": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IOError",
    "RuntimeWarning",
    "TypeError",
    "events",
    "matplotlib.pyplot.close",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.read_cov",
    "mne.viz.tests.test_evoked._get_epochs",
    "mne.viz.tests.test_evoked.cov_fname",
    "mne.viz.tests.test_evoked.picks",
    "mne.viz.tests.test_evoked.pytest",
    "mne.viz.tests.test_evoked.raw_sss_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked_image": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "bool",
    "dict",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gca",
    "mne.viz.tests.test_evoked._get_epochs",
    "mne.viz.tests.test_evoked.picks",
    "mne.viz.tests.test_evoked.pytest",
    "mne.viz.tests.test_evoked.sel",
    "numpy.errstate",
    "numpy.nan",
    "numpy.ones",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.test_plot_white": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "matplotlib.pyplot.close",
    "mne.read_cov",
    "mne.viz.tests.test_evoked._get_epochs",
    "mne.viz.tests.test_evoked.cov_fname",
    "mne.viz.tests.test_evoked.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_ica.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_ica.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._create_properties_layout": {
  "data": {
   "shadows": "mne.viz.ica._create_properties_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._get_epochs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeWarning",
    "events",
    "mne.Epochs",
    "mne.viz.tests.test_ica._get_events",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_events": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_ica.event_name"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_picks": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_raw": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_ica.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.base_dir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.cov_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.create_ecg_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_ecg_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.create_eog_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_eog_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.event_name": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.evoked_fname": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.plot_ica_properties": {
  "data": {
   "shadows": "mne.viz.ica.plot_ica_properties"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.raw_ctf_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.raw_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.test_plot_ica_components": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "int",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.pytest",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_overlay": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "matplotlib.pyplot.close",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.create_ecg_epochs",
    "mne.preprocessing.create_eog_epochs",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.pytest",
    "mne.viz.tests.test_ica.raw_ctf_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_properties": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "UserWarning",
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.Epochs",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.ica._create_properties_layout",
    "mne.viz.ica.plot_ica_properties",
    "mne.viz.tests.test_ica._get_events",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_scores": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "matplotlib.pyplot.close",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_sources": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.get_fignums",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_epochs",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica.pytest",
    "mne.viz.tests.test_ica.raw_fname",
    "mne.viz.utils._fake_click",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_instance_components": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "RuntimeWarning",
    "matplotlib.pyplot.close",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_epochs",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.pytest",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_misc.base_dir",
    "mne.viz.tests.test_misc.data_path",
    "mne.viz.tests.test_misc.subjects_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_misc.CrossSpectralDensity": {
  "data": {
   "shadows": "mne.time_frequency.CrossSpectralDensity"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc._get_color_list": {
  "data": {
   "shadows": "mne.viz.utils._get_color_list"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc._get_events": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_misc.event_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc._get_raw": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_misc.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc._handle_event_colors": {
  "data": {
   "shadows": "mne.viz.misc._handle_event_colors"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.base_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.cov_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.create_filter": {
  "data": {
   "shadows": "mne.filter.create_filter"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.data_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.dip_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.event_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.evoked_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.inv_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_bem": {
  "data": {
   "shadows": "mne.viz.plot_bem"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_csd": {
  "data": {
   "shadows": "mne.viz.plot_csd"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_events": {
  "data": {
   "shadows": "mne.viz.plot_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_filter": {
  "data": {
   "shadows": "mne.viz.plot_filter"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_snr_estimate": {
  "data": {
   "shadows": "mne.viz.plot_snr_estimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_source_spectrogram": {
  "data": {
   "shadows": "mne.viz.plot_source_spectrogram"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.raw_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.src_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.subjects_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.test_event_colors": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.pick_events",
    "mne.viz.misc._handle_event_colors",
    "mne.viz.tests.test_misc._get_events",
    "mne.viz.utils._get_color_list",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_bem": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.requires_nibabel",
    "mne.viz.plot_bem",
    "mne.viz.tests.test_misc.pytest",
    "mne.viz.tests.test_misc.src_fname",
    "mne.viz.tests.test_misc.subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_cov": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "RuntimeWarning",
    "matplotlib.pyplot.close",
    "mne.read_cov",
    "mne.viz.tests.test_misc._get_raw",
    "mne.viz.tests.test_misc.cov_fname",
    "mne.viz.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_csd": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.time_frequency.CrossSpectralDensity",
    "mne.viz.plot_csd"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_dipole_amplitudes": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_dipole",
    "mne.viz.tests.test_misc.dip_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_events": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "events",
    "matplotlib.pyplot.close",
    "mne.viz.plot_events",
    "mne.viz.tests.test_misc._get_events",
    "mne.viz.tests.test_misc._get_raw",
    "mne.viz.tests.test_misc.pytest",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_filter": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "matplotlib.pyplot.close",
    "mne.filter.create_filter",
    "mne.viz.plot_filter",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_snr": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_evokeds",
    "mne.viz.plot_snr_estimate",
    "mne.viz.tests.test_misc.evoked_fname",
    "mne.viz.tests.test_misc.inv_fname",
    "mne.viz.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_source_spectrogram": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.viz.plot_source_spectrogram",
    "mne.viz.tests.test_misc.pytest",
    "mne.viz.tests.test_misc.subjects_dir",
    "numpy.ones",
    "os.path.join",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage": {
  "data": {
   "symbols_in_volume": [
    "mne.viz.tests.test_montage.io_dir",
    "mne.viz.tests.test_montage.p_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_montage.elp": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.fif_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.hpi": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.hsp": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.io_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.make_standard_montage": {
  "data": {
   "shadows": "mne.channels.make_standard_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.p_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.point_names": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.read_dig_fif": {
  "data": {
   "shadows": "mne.channels.read_dig_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.test_plot_defect_montage": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mne.channels.make_standard_montage",
    "mne.viz.tests.test_montage.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_montage.test_plot_digmontage": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dict",
    "list",
    "matplotlib.pyplot.close",
    "mne.channels.make_dig_montage",
    "numpy.eye",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_montage.test_plot_montage": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeError",
    "matplotlib.pyplot.close",
    "mne.channels.make_dig_montage",
    "mne.channels.make_standard_montage",
    "mne.channels.read_dig_fif",
    "mne.viz.tests.test_montage.fif_fname",
    "mne.viz.tests.test_montage.pytest",
    "numpy.full",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_raw.base_dir",
    "mne.viz.tests.test_raw.ctf_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_raw.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._annotation_helper": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "events",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.get_fignums",
    "mne.viz.tests.test_raw.matplotlib",
    "mne.viz.utils._annotation_radio_clicked",
    "mne.viz.utils._fake_click",
    "mne.viz.utils._sync_onset",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._annotation_radio_clicked": {
  "data": {
   "shadows": "mne.viz.utils._annotation_radio_clicked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._dt_to_stamp": {
  "data": {
   "shadows": "mne.utils._dt_to_stamp"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._get_events": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_raw.event_name"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._get_raw": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeWarning",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_raw.pytest",
    "mne.viz.tests.test_raw.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._proj_status": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mne.viz.tests.test_raw.matplotlib"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._sync_onset": {
  "data": {
   "shadows": "mne.viz.utils._sync_onset"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.cov_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.ctf_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.ctf_fname_continuous": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.event_name": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plot_raw": {
  "data": {
   "shadows": "mne.viz.plot_raw"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plot_sensors": {
  "data": {
   "shadows": "mne.viz.plot_sensors"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.test_plot_annotations": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "RuntimeWarning",
    "matplotlib.pyplot.close",
    "mne.Annotations",
    "mne.viz.tests.test_raw._annotation_helper",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_misc_auto": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.create_info",
    "mne.io.RawArray",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeWarning",
    "TypeError",
    "dict",
    "events",
    "hasattr",
    "isinstance",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_fignums",
    "mne.Annotations",
    "mne.utils._dt_to_stamp",
    "mne.viz.plot_raw",
    "mne.viz.tests.test_raw._get_events",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw._proj_status",
    "mne.viz.tests.test_raw.matplotlib",
    "mne.viz.tests.test_raw.pytest",
    "mne.viz.utils._fake_click",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_filtered": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_psd": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "RuntimeWarning",
    "UserWarning",
    "ValueError",
    "len",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.subplots",
    "mne.Annotations",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.itertools",
    "mne.viz.tests.test_raw.pytest",
    "mne.viz.tests.test_raw.raw_fname",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_white": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_raw.cov_fname",
    "mne.viz.tests.test_raw.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_ref_meg": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_ctf",
    "mne.viz.tests.test_raw.ctf_fname_continuous",
    "mne.viz.tests.test_raw.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_sensors": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.subplot",
    "mne.viz.plot_sensors",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.pytest",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_scale_bar": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "mne.create_info",
    "mne.io.RawArray",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_topo.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_topo.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._get_epochs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_topo._get_events",
    "mne.viz.tests.test_topo._get_picks",
    "mne.viz.tests.test_topo.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_epochs_delayed_ssp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dict",
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_topo._get_events",
    "mne.viz.tests.test_topo._get_picks",
    "mne.viz.tests.test_topo.pytest",
    "mne.viz.tests.test_topo.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_events": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_topo.event_name"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_picks": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_presser": {
  "data": {
   "shadows": "mne.viz._get_presser"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._imshow_tfr": {
  "data": {
   "shadows": "mne.viz.topo._imshow_tfr"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._line_plot_onselect": {
  "data": {
   "shadows": "mne.viz.evoked._line_plot_onselect"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._plot_update_evoked_topo_proj": {
  "data": {
   "shadows": "mne.viz.topo._plot_update_evoked_topo_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.base_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.cov_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.event_name": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.evoked_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.iter_topography": {
  "data": {
   "shadows": "mne.viz.topo.iter_topography"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.layout": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.pick_channels_evoked": {
  "data": {
   "shadows": "mne.pick_channels_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plot_evoked_topo": {
  "data": {
   "shadows": "mne.viz.plot_evoked_topo"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plot_topo_image_epochs": {
  "data": {
   "shadows": "mne.viz.plot_topo_image_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.raw_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.test_plot_joint": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_joint.return_inds": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_tfr_topo": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.get_fignums",
    "matplotlib.pyplot.subplots",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo.pytest",
    "mne.viz.topo._imshow_tfr",
    "mne.viz.utils._fake_click",
    "numpy.arange",
    "numpy.log10",
    "numpy.logspace",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "collections.namedtuple",
    "dict",
    "event",
    "func",
    "len",
    "matplotlib.pyplot.close",
    "mne.pick_channels_evoked",
    "mne.read_cov",
    "mne.viz._get_presser",
    "mne.viz.evoked._line_plot_onselect",
    "mne.viz.plot_evoked_topo",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo._get_epochs_delayed_ssp",
    "mne.viz.tests.test_topo.cov_fname",
    "mne.viz.tests.test_topo.layout",
    "mne.viz.tests.test_topo.pytest",
    "mne.viz.topo._plot_update_evoked_topo_proj",
    "mne.viz.topo.iter_topography",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_image_epochs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.get_fignums",
    "mne.viz.mne_analyze_colormap",
    "mne.viz.plot_topo_image_epochs",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo.matplotlib",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_nirs": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "mne.viz.plot_evoked_topo"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_single_ch": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.get_fignums",
    "mne.viz.plot_evoked_topo",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo.matplotlib",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_topomap.base_dir",
    "mne.viz.tests.test_topomap.data_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_topomap.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.FigureCanvas": {
  "data": {
   "shadows": "matplotlib.backends.backend_agg.FigureCanvasAgg"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Projection": {
  "data": {
   "shadows": "mne.io.proj.Projection"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._find_peaks": {
  "data": {
   "shadows": "mne.viz.utils._find_peaks"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._get_pos_outlines": {
  "data": {
   "shadows": "mne.viz.topomap._get_pos_outlines"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._onselect": {
  "data": {
   "shadows": "mne.viz.topomap._onselect"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.base_dir": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.ctf_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.data_dir": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.ecg_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.event_name": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.evoked_fname": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.find_layout": {
  "data": {
   "shadows": "mne.find_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.layout": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.make_dig_montage": {
  "data": {
   "shadows": "mne.channels.make_dig_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.make_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj.make_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_arrowmap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_arrowmap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_evoked_topomap": {
  "data": {
   "shadows": "mne.viz.plot_evoked_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_projs_topomap": {
  "data": {
   "shadows": "mne.viz.plot_projs_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_psds_topomap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_psds_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_topomap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.raw_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_proj": {
  "data": {
   "shadows": "mne.read_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.subjects_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.test_ctf_plotting": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.io.compensator.get_current_comp",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.viz.tests.test_topomap.ctf_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_arrowmap": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_evokeds",
    "mne.viz.tests.test_topomap.evoked_fname",
    "mne.viz.tests.test_topomap.pytest",
    "mne.viz.topomap.plot_arrowmap"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_projs_topomap": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.proj.make_eeg_average_ref_proj",
    "mne.io.read_info",
    "mne.read_proj",
    "mne.viz.plot_projs_topomap",
    "mne.viz.tests.test_topomap.ecg_fname",
    "mne.viz.tests.test_topomap.raw_fname",
    "mne.viz.tests.test_topomap.triux_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_tfr_topomap": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplots",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_fif",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.viz.tests.test_topomap.matplotlib",
    "mne.viz.tests.test_topomap.raw_fname",
    "mne.viz.topomap._onselect",
    "mne.viz.topomap.plot_psds_topomap",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_animation": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.read_evokeds",
    "mne.viz.tests.test_topomap.evoked_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_animation_nirs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_bads": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.channels.make_dig_montage",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.viz.topomap.plot_topomap",
    "numpy.eye",
    "numpy.random.RandomState",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "all",
    "bool",
    "dict",
    "functools.partial",
    "get_texts",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplot",
    "mne.channels.make_dig_montage",
    "mne.create_info",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.pick.pick_info",
    "mne.pick_types",
    "mne.read_evokeds",
    "mne.viz.plot_evoked_topomap",
    "mne.viz.tests.test_topomap.evoked_fname",
    "mne.viz.tests.test_topomap.layout",
    "mne.viz.tests.test_topomap.matplotlib",
    "mne.viz.tests.test_topomap.pytest",
    "mne.viz.topomap",
    "mne.viz.topomap._get_pos_outlines",
    "mne.viz.topomap.plot_topomap",
    "mne.viz.utils._fake_click",
    "mne.viz.utils._find_peaks",
    "numpy.abs",
    "numpy.array",
    "numpy.c_",
    "numpy.full",
    "numpy.max",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "plt_topomap",
    "sorted",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic.get_texts": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "isinstance",
    "mne.viz.tests.test_topomap.matplotlib"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic.patch": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "matplotlib.patches.Circle",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_basic.proc_names": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_interactive": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "len",
    "matplotlib.backends.backend_agg.FigureCanvasAgg",
    "matplotlib.figure.Figure",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_fignums",
    "mne.compute_proj_evoked",
    "mne.read_evokeds",
    "mne.viz.tests.test_topomap.evoked_fname",
    "mne.viz.utils._fake_click",
    "numpy.array_equal",
    "numpy.frombuffer",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_neuromag122": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_layout",
    "mne.io.constants.FIFF.FIFFV_COIL_NM_122",
    "mne.io.proj.Projection",
    "mne.read_evokeds",
    "mne.viz.plot_projs_topomap",
    "mne.viz.tests.test_topomap.evoked_fname",
    "mne.viz.tests.test_topomap.layout",
    "mne.viz.tests.test_topomap.pytest",
    "numpy.ones",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_nirs_ica": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "mne.preprocessing.ICA",
    "mne.utils.requires_sklearn",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap_nirs_overlap": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.topomap": {
  "data": {
   "shadows": "mne.viz.topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.triux_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_utils.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_utils.ClickableImage": {
  "data": {
   "shadows": "mne.viz.ClickableImage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.LinearSegmentedColormap": {
  "data": {
   "shadows": "matplotlib.colors.LinearSegmentedColormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.Normalize": {
  "data": {
   "shadows": "matplotlib.pyplot.Normalize"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._compute_scalings": {
  "data": {
   "shadows": "mne.viz.utils._compute_scalings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._get_color_list": {
  "data": {
   "shadows": "mne.viz.utils._get_color_list"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._setup_vmin_vmax": {
  "data": {
   "shadows": "mne.viz.utils._setup_vmin_vmax"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._validate_if_list_of_axes": {
  "data": {
   "shadows": "mne.viz.utils._validate_if_list_of_axes"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.add_background_image": {
  "data": {
   "shadows": "mne.viz.add_background_image"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.base_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.center_cmap": {
  "data": {
   "shadows": "mne.viz.utils.center_cmap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.compare_fiff": {
  "data": {
   "shadows": "mne.viz.utils.compare_fiff"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.cov_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.ev_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.raw_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.test_add_background_image": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.viz.add_background_image",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_auto_scale": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.epochs.Epochs",
    "mne.event.read_events",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_utils.ev_fname",
    "mne.viz.tests.test_utils.pytest",
    "mne.viz.tests.test_utils.raw_fname",
    "mne.viz.utils._compute_scalings",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_center_cmap": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "cmap",
    "isinstance",
    "matplotlib.cm.RdBu",
    "matplotlib.cm.get_cmap",
    "matplotlib.colors.LinearSegmentedColormap",
    "matplotlib.pyplot.Normalize",
    "mne.viz.utils.center_cmap",
    "numpy.allclose",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_clickable_image": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "len",
    "matplotlib.pyplot.close",
    "mne.viz.ClickableImage",
    "mne.viz.utils._fake_click",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_compare_fiff": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.viz.tests.test_utils.cov_fname",
    "mne.viz.tests.test_utils.raw_fname",
    "mne.viz.utils.compare_fiff"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_get_color_list": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "mne.viz.utils._get_color_list"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_mne_analyze_colormap": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "mne.viz.mne_analyze_colormap",
    "mne.viz.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_setup_vmin_vmax_warns": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "UserWarning",
    "mne.viz.tests.test_utils.pytest",
    "mne.viz.utils._setup_vmin_vmax"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_validate_if_list_of_axes": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.viz.tests.test_utils.pytest",
    "mne.viz.utils._validate_if_list_of_axes"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo": {
  "data": {},
  "type": "module"
 },
 "mne.viz.topo.RectangleSelector": {
  "data": {
   "shadows": "matplotlib.widgets.RectangleSelector"
  },
  "type": "import"
 },
 "mne.viz.topo._check_vlim": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._compute_ax_scalings": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._erfimage_imshow": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "callable",
    "len",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.gca",
    "order",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._erfimage_imshow_unified": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "callable",
    "len",
    "mne.viz.topo._compute_ax_scalings",
    "order",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._imshow_tfr": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "DraggableColorbar",
    "_check_option",
    "_plot_masked_image",
    "isinstance",
    "matplotlib.pyplot.colorbar",
    "matplotlib.widgets.RectangleSelector",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._imshow_tfr_unified": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "mne.viz.topo._compute_ax_scalings"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Bunch",
    "_clean_names",
    "enumerate",
    "find_layout",
    "functools.partial",
    "list",
    "matplotlib.collections.PolyCollection",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "mne.viz.topo._legend_axis",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography.format_coord_multiaxis": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography.format_coord_unified": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._legend_axis": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "matplotlib.pyplot.axes"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_evoked_topo": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_cov",
    "_check_delayed_ssp",
    "_clean_names",
    "_draw_proj_checkbox",
    "_handle_default",
    "_merge_ch_data",
    "_pair_grad_sensors",
    "add_background_image",
    "all",
    "channel_type",
    "dict",
    "find_layout",
    "functools.partial",
    "isinstance",
    "itertools.cycle",
    "len",
    "list",
    "matplotlib.pyplot.legend",
    "max",
    "min",
    "mne.viz.topo._plot_timeseries",
    "mne.viz.topo._plot_timeseries_unified",
    "mne.viz.topo._plot_topo",
    "numpy.abs",
    "numpy.array",
    "pick_types",
    "plt_show",
    "range",
    "set",
    "set.difference",
    "set.intersection",
    "show_func",
    "slice",
    "tuple",
    "type",
    "warn",
    "whiten_evoked",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "AttributeError",
    "_format_coord",
    "_setup_ax_spines",
    "isinstance",
    "list",
    "matplotlib.colors.colorConverter.to_rgb",
    "matplotlib.pyplot.axhline",
    "matplotlib.pyplot.axvline",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.connect",
    "numpy.array",
    "numpy.dot",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._cursor_vline": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._format_coord": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.abs",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._rm_cursor": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries_unified": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "list",
    "matplotlib.pyplot.colorbar",
    "max",
    "min",
    "mne.viz.topo._compute_ax_scalings",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_topo": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "channel_type",
    "copy.deepcopy",
    "functools.partial",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.cm.ScalarMappable",
    "matplotlib.pyplot.figtext",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.getp",
    "matplotlib.pyplot.setp",
    "mne.viz.topo._check_vlim",
    "mne.viz.topo._iter_topography",
    "numpy.linspace",
    "show_func"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_topo_onpick": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.title",
    "plt_show",
    "print",
    "show_func"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_update_evoked_topo_proj": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo.collections": {
  "data": {
   "shadows": "matplotlib.collections"
  },
  "type": "import"
 },
 "mne.viz.topo.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.topo.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.topo.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.topo.iter_topography": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mne.viz.topo._iter_topography"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "mne.viz.topo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.topo.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.topo.plot_topo_image_epochs": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "_handle_default",
    "_setup_vmin_vmax",
    "add_background_image",
    "dict",
    "find_layout",
    "functools.partial",
    "len",
    "mne.viz.topo._erfimage_imshow",
    "mne.viz.topo._erfimage_imshow_unified",
    "mne.viz.topo._plot_topo",
    "numpy.array",
    "numpy.newaxis",
    "numpy.where",
    "order",
    "plt_show",
    "set",
    "show_func"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 }
}