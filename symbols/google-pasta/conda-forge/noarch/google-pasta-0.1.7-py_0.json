{
 "pasta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.augment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.augment.errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.augment.errors.InvalidAstError": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.augment.import_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.augment.import_utils.add_import": {
  "lineno": 30,
  "symbols_in_volume": [
   "ast.Import",
   "ast.ImportFrom",
   "pasta.base.ast_utils.has_docstring",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils.add_import.make_safe_alias_node": {
  "lineno": 65,
  "symbols_in_volume": [
   "ast.alias"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils.get_unused_import_aliases": {
  "lineno": 137,
  "symbols_in_volume": [
   "ast.alias",
   "ast.walk",
   "logging.warning",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils.remove_import_alias_node": {
  "lineno": 167,
  "symbols_in_volume": [
   "pasta.base.ast_utils.remove_child"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils.split_import": {
  "lineno": 105,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pasta.augment.errors.InvalidAstError"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.augment.import_utils_test.AddImportTest": {
  "lineno": 234,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_existing_import": {
  "lineno": 278,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_existing_import_aliased": {
  "lineno": 283,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_existing_import_aliased_with_asname": {
  "lineno": 288,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_existing_import_normal_import": {
  "lineno": 293,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_existing_import_normal_import_aliased": {
  "lineno": 299,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_from_import": {
  "lineno": 250,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_from_import_with_asname": {
  "lineno": 256,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_import_after_docstring": {
  "lineno": 336,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_import_with_asname_with_conflict": {
  "lineno": 314,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_import_with_conflict": {
  "lineno": 307,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_normal_import": {
  "lineno": 236,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_normal_import_with_asname": {
  "lineno": 242,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_single_name_from_import": {
  "lineno": 264,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_add_single_name_from_import_with_asname": {
  "lineno": 270,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.AddImportTest.test_merge_from_import": {
  "lineno": 321,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.add_import",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.GetUnusedImportsTest": {
  "lineno": 120,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.augment.import_utils_test.GetUnusedImportsTest.test_dynamic_import": {
  "lineno": 165,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.get_unused_import_aliases"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.GetUnusedImportsTest.test_import_asname": {
  "lineno": 153,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.get_unused_import_aliases"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.GetUnusedImportsTest.test_import_from": {
  "lineno": 132,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.get_unused_import_aliases"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.GetUnusedImportsTest.test_import_from_alias": {
  "lineno": 144,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.get_unused_import_aliases"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.GetUnusedImportsTest.test_normal_imports": {
  "lineno": 122,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.get_unused_import_aliases"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.RemoveImportTest": {
  "lineno": 179,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.augment.import_utils_test.RemoveImportTest.test_remove_full_import": {
  "lineno": 211,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.remove_import_alias_node",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.RemoveImportTest.test_remove_full_importfrom": {
  "lineno": 222,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.remove_import_alias_node",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.RemoveImportTest.test_remove_just_alias": {
  "lineno": 183,
  "symbols_in_volume": [
   "ast.Import",
   "ast.parse",
   "pasta.augment.import_utils.remove_import_alias_node",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.RemoveImportTest.test_remove_just_alias_import_from": {
  "lineno": 197,
  "symbols_in_volume": [
   "ast.ImportFrom",
   "ast.parse",
   "pasta.augment.import_utils.remove_import_alias_node",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.SplitImportTest": {
  "lineno": 32,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.augment.import_utils_test.SplitImportTest.test_split_from_import": {
  "lineno": 46,
  "symbols_in_volume": [
   "ast.ImportFrom",
   "ast.parse",
   "pasta.augment.import_utils.split_import",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.SplitImportTest.test_split_imports_multiple": {
  "lineno": 71,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.split_import",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.SplitImportTest.test_split_imports_with_alias": {
  "lineno": 59,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.import_utils.split_import",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.SplitImportTest.test_split_nested_imports": {
  "lineno": 86,
  "symbols_in_volume": [
   "ast.Import",
   "ast.parse",
   "pasta.augment.import_utils.split_import",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.base.scope.analyze",
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.SplitImportTest.test_split_normal_import": {
  "lineno": 34,
  "symbols_in_volume": [
   "ast.Import",
   "ast.parse",
   "pasta.augment.import_utils.split_import",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.import_utils_test.suite": {
  "lineno": 342,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.augment.inline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.augment.inline.InlineError": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.augment.inline.inline_name": {
  "lineno": 32,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Module",
   "ast.Name",
   "ast.Store",
   "copy.deepcopy",
   "pasta.base.ast_utils.remove_child",
   "pasta.base.ast_utils.replace_child",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.augment.inline_test.InlineTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_conditional_fails": {
  "lineno": 76,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.inline.InlineError",
   "pasta.augment.inline.inline_name"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_function_fails": {
  "lineno": 67,
  "symbols_in_volume": [
   "ast.FunctionDef",
   "ast.parse",
   "pasta.augment.inline.InlineError",
   "pasta.augment.inline.inline_name"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_multiple_reads": {
  "lineno": 43,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.inline.inline_name",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_multiple_targets": {
  "lineno": 37,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.inline.inline_name"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_non_assign_fails": {
  "lineno": 83,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.inline.InlineError",
   "pasta.augment.inline.inline_name"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_non_constant_fails": {
  "lineno": 57,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.inline.InlineError",
   "pasta.augment.inline.inline_name",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.InlineTest.test_inline_simple": {
  "lineno": 31,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.inline.inline_name"
  ],
  "type": "function"
 },
 "pasta.augment.inline_test.suite": {
  "lineno": 91,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.augment.rename": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.augment.rename._rename_name_in_importfrom": {
  "lineno": 94,
  "symbols_in_volume": [
   "pasta.augment.import_utils.split_import"
  ],
  "type": "function"
 },
 "pasta.augment.rename._rename_reads": {
  "lineno": 127,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Name",
   "ast.parse",
   "pasta.base.ast_utils.replace_child"
  ],
  "type": "function"
 },
 "pasta.augment.rename.rename_external": {
  "lineno": 29,
  "symbols_in_volume": [
   "ast.ImportFrom",
   "ast.alias",
   "pasta.base.scope.analyze",
   "six.iteritems"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.augment.rename_test.RenameTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_external_in_import": {
  "lineno": 31,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename.rename_external"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_external_in_import_multiple_aliases": {
  "lineno": 51,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename.rename_external"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_external_in_import_with_asname": {
  "lineno": 45,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename.rename_external"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_external_in_importfrom": {
  "lineno": 57,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename.rename_external"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_external_in_importfrom_alias": {
  "lineno": 71,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename.rename_external"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_external_in_importfrom_alias_with_asname": {
  "lineno": 77,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename.rename_external"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_reads_attribute": {
  "lineno": 97,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename._rename_reads",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_reads_name": {
  "lineno": 83,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename._rename_reads",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_reads_name_as_attribute": {
  "lineno": 90,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename._rename_reads",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.RenameTest.test_rename_reads_noop": {
  "lineno": 104,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.augment.rename._rename_reads",
   "pasta.base.scope.analyze"
  ],
  "type": "function"
 },
 "pasta.augment.rename_test.suite": {
  "lineno": 113,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.annotate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.annotate.AnnotationError": {
  "lineno": 1180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.annotate.AstAnnotator": {
  "lineno": 1184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.annotate.AstAnnotator.__init__": {
  "lineno": 1186,
  "symbols_in_volume": [
   "pasta.base.token_generator.TokenGenerator"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator._optional_token": {
  "lineno": 1427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.attr": {
  "lineno": 1368,
  "symbols_in_volume": [
   "pasta.base.formatting.set",
   "six.string_types"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.block_suffix": {
  "lineno": 1325,
  "symbols_in_volume": [
   "pasta.base.formatting.set"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.check_is_continued_try": {
  "lineno": 1291,
  "symbols_in_volume": [
   "ast.TryExcept"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.check_is_continued_with": {
  "lineno": 1296,
  "symbols_in_volume": [
   "ast.With"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.check_is_elif": {
  "lineno": 1286,
  "symbols_in_volume": [
   "ast.If"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.check_slice_includes_step": {
  "lineno": 1300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.dots": {
  "lineno": 1319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.dots._parse_dots": {
  "lineno": 1321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.indented": {
  "lineno": 1198,
  "symbols_in_volume": [
   "pasta.base.formatting.set",
   "pasta.base.token_generator.TOKENS.INDENT"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.one_of_symbols": {
  "lineno": 1357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.one_of_symbols._one_of_symbols": {
  "lineno": 1359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.optional_token": {
  "lineno": 1343,
  "symbols_in_volume": [
   "pasta.base.formatting.append"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.scope": {
  "lineno": 1412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.token": {
  "lineno": 1328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.visit": {
  "lineno": 1190,
  "symbols_in_volume": [
   "pasta.base.formatting.set"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.visit_Bytes": {
  "lineno": 1271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.visit_Ellipsis": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.visit_JoinedStr": {
  "lineno": 1253,
  "symbols_in_volume": [
   "ast.FormattedValue"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.visit_Num": {
  "lineno": 1239,
  "symbols_in_volume": [
   "pasta.base.token_generator.TOKENS.NUMBER"
  ],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.visit_Str": {
  "lineno": 1248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.AstAnnotator.ws": {
  "lineno": 1307,
  "symbols_in_volume": [
   "pasta.base.token_generator.TOKENS.NEWLINE",
   "pasta.base.token_generator.TOKENS.NL"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor": {
  "lineno": 111,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "pasta.base.annotate.BaseVisitor.__init__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor._comp_exp": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.attr": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.check_is_continued_try": {
  "lineno": 320,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.check_is_continued_with": {
  "lineno": 324,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.check_is_elif": {
  "lineno": 246,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.check_slice_includes_step": {
  "lineno": 1156,
  "symbols_in_volume": [
   "ast.Name"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.dots": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.indented": {
  "lineno": 146,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.one_of_symbols": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.optional_token": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.prefix": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.scope": {
  "lineno": 160,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.suffix": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.suffix._ws": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.token": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Add": {
  "lineno": 940,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_AnnAssign": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Assert": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Assign": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Attribute": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_AugAssign": {
  "lineno": 532,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_BinOp": {
  "lineno": 688,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_BitAnd": {
  "lineno": 964,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_BitOr": {
  "lineno": 967,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_BitXor": {
  "lineno": 970,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_BoolOp": {
  "lineno": 696,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Break": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call": {
  "lineno": 705,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call_arguments": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call_arguments.arg_location": {
  "lineno": 721,
  "symbols_in_volume": [
   "ast.keyword"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call_arguments35": {
  "lineno": 745,
  "symbols_in_volume": [
   "functools.cmp_to_key"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call_arguments35.arg_compare": {
  "lineno": 746,
  "symbols_in_volume": [
   "ast.keyword"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call_arguments35.arg_compare.get_pos": {
  "lineno": 760,
  "symbols_in_volume": [
   "ast.keyword"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Call_arguments35.arg_compare.is_arg": {
  "lineno": 748,
  "symbols_in_volume": [
   "ast.Starred",
   "ast.keyword"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_ClassDef": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Compare": {
  "lineno": 790,
  "symbols_in_volume": [
   "six.moves.zip"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Continue": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Delete": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Dict": {
  "lineno": 799,
  "symbols_in_volume": [
   "six.moves.zip"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_DictComp": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Div": {
  "lineno": 949,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Ellipsis": {
  "lineno": 936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Eq": {
  "lineno": 988,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_ExceptHandler": {
  "lineno": 468,
  "symbols_in_volume": [
   "ast.AST"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Exec": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Expr": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_ExtSlice": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_FloorDiv": {
  "lineno": 973,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_For": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_FormattedValue": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_FunctionDef": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_GeneratorExp": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Global": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Gt": {
  "lineno": 1000,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_GtE": {
  "lineno": 1003,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_If": {
  "lineno": 222,
  "symbols_in_volume": [
   "ast.If",
   "pasta.base.formatting.get",
   "pasta.base.formatting.set"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_IfExp": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Import": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_ImportFrom": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_In": {
  "lineno": 1012,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Index": {
  "lineno": 1128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Invert": {
  "lineno": 976,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Is": {
  "lineno": 1006,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_IsNot": {
  "lineno": 1009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_LShift": {
  "lineno": 958,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Lambda": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_List": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_ListComp": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Lt": {
  "lineno": 994,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_LtE": {
  "lineno": 997,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Mod": {
  "lineno": 952,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Module": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Mult": {
  "lineno": 946,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Name": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_NameConstant": {
  "lineno": 878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Nonlocal": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Not": {
  "lineno": 979,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_NotEq": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_NotIn": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Pass": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Pow": {
  "lineno": 955,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Print": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_RShift": {
  "lineno": 961,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Raise": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Raise_3": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Repr": {
  "lineno": 882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Return": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Set": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_SetComp": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Slice": {
  "lineno": 1140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Starred": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Sub": {
  "lineno": 943,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Subscript": {
  "lineno": 906,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Try": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_TryExcept": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_TryFinally": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Tuple": {
  "lineno": 913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_UAdd": {
  "lineno": 982,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_USub": {
  "lineno": 985,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_UnaryOp": {
  "lineno": 926,
  "symbols_in_volume": [
   "pasta.base.ast_constants.NODE_TYPE_TO_TOKENS"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_While": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_With": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_With_3": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_Yield": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_alias": {
  "lineno": 1022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_arg": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_arguments": {
  "lineno": 1043,
  "symbols_in_volume": [
   "ast.AST",
   "six.moves.zip"
  ],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_comprehension": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_keyword": {
  "lineno": 1119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.visit_withitem": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.ws": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.BaseVisitor.ws_oneline": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate._gen_wrapper": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate._gen_wrapper.wrapped": {
  "lineno": 42,
  "symbols_in_volume": [
   "contextlib.wraps"
  ],
  "type": "function"
 },
 "pasta.base.annotate._noop_context": {
  "lineno": 54,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pasta.base.annotate.block_statement": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.block_statement.wrapped": {
  "lineno": 92,
  "symbols_in_volume": [
   "contextlib.wraps",
   "pasta.base.ast_utils.get_last_child",
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.annotate.expression": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.fstring_expression": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.module": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.space_around": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.space_left": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate.statement": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate_test": {
  "lineno": null,
  "symbols_in_volume": [
   "pasta.__file__",
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.base.annotate_test.FstringTest": {
  "lineno": 387,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.annotate_test.FstringTest.test_fstring": {
  "lineno": 390,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.base.test_utils.requires_features",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.FstringTest.test_fstring_escaping": {
  "lineno": 399,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.base.test_utils.requires_features",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest": {
  "lineno": 115,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_depths": {
  "lineno": 151,
  "symbols_in_volume": [
   "itertools.product",
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_extra_newlines": {
  "lineno": 212,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_extra_newlines_with_comment": {
  "lineno": 223,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_levels": {
  "lineno": 117,
  "symbols_in_volume": [
   "ast.Call",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.base.formatting.get",
   "pasta.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_levels_same_line": {
  "lineno": 143,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_multiline_string": {
  "lineno": 169,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_indent_multiline_string_with_newline": {
  "lineno": 181,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.IndentationTest.test_scope_trailing_comma": {
  "lineno": 193,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.ManualEditsTest": {
  "lineno": 359,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.annotate_test.ManualEditsTest.test_call_illegal_pos": {
  "lineno": 373,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Num",
   "ast.keyword",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.dump",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.ManualEditsTest.test_call_no_pos": {
  "lineno": 365,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Num",
   "ast.keyword",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.dump",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixGoldenTest": {
  "lineno": 348,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase",
   "six.with_metaclass"
  ],
  "type": "class"
 },
 "pasta.base.annotate_test.PrefixSuffixGoldenTestMeta": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.annotate_test.PrefixSuffixGoldenTestMeta.__new__": {
  "lineno": 291,
  "symbols_in_volume": [
   "sys.version_info",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixGoldenTestMeta.__new__.golden_test_generator": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixGoldenTestMeta.__new__.golden_test_generator.test": {
  "lineno": 294,
  "symbols_in_volume": [
   "ast.walk",
   "pasta.base.annotate.AstAnnotator",
   "pasta.base.ast_utils.parse",
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixGoldenTestMeta.__new__.golden_test_generator.test.escape": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixTest": {
  "lineno": 41,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.annotate_test.PrefixSuffixTest.test_block_suffix": {
  "lineno": 43,
  "symbols_in_volume": [
   "pasta.base.ast_utils.FindNodeVisitor",
   "pasta.base.formatting.get",
   "pasta.dump",
   "pasta.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixTest.test_block_suffix.is_node_for_suffix": {
  "lineno": 72,
  "symbols_in_volume": [
   "ast.Pass"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixTest.test_expression_prefix_suffix": {
  "lineno": 102,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixTest.test_module_suffix": {
  "lineno": 92,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixTest.test_no_block_suffix_for_single_line_statement": {
  "lineno": 97,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.PrefixSuffixTest.test_statement_prefix_suffix": {
  "lineno": 108,
  "symbols_in_volume": [
   "pasta.base.formatting.get",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.SymmetricTest": {
  "lineno": 274,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase",
   "six.with_metaclass"
  ],
  "type": "class"
 },
 "pasta.base.annotate_test.SymmetricTestMeta": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.annotate_test.SymmetricTestMeta.__new__": {
  "lineno": 247,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.SymmetricTestMeta.__new__.symmetric_test_generator": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate_test.SymmetricTestMeta.__new__.symmetric_test_generator.test": {
  "lineno": 250,
  "symbols_in_volume": [
   "pasta.base.annotate.AstAnnotator",
   "pasta.base.ast_utils.parse",
   "pasta.base.codegen.to_str"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test._get_diff": {
  "lineno": 409,
  "symbols_in_volume": [
   "difflib.ndiff"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test._get_node_identifier": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.annotate_test._is_syntax_valid": {
  "lineno": 236,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.generate_goldens": {
  "lineno": 423,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.base.annotate_test.suite": {
  "lineno": 413,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.base.ast_constants": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Add",
   "ast.And",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.Div",
   "ast.Eq",
   "ast.FloorDiv",
   "ast.Gt",
   "ast.GtE",
   "ast.In",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.LShift",
   "ast.Lt",
   "ast.LtE",
   "ast.Mod",
   "ast.Mult",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Or",
   "ast.Pow",
   "ast.RShift",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub"
  ],
  "type": "module"
 },
 "pasta.base.ast_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Add",
   "ast.And",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.Div",
   "ast.Eq",
   "ast.FloorDiv",
   "ast.Gt",
   "ast.GtE",
   "ast.In",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.LShift",
   "ast.Lt",
   "ast.LtE",
   "ast.Mod",
   "ast.Mult",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Or",
   "ast.Pow",
   "ast.RShift",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub",
   "re.compile"
  ],
  "type": "module"
 },
 "pasta.base.ast_utils.FindNodeVisitor": {
  "lineno": 79,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "pasta.base.ast_utils.FindNodeVisitor.__init__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.ast_utils.FindNodeVisitor.visit": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.ast_utils._TreeNormalizer": {
  "lineno": 39,
  "symbols_in_volume": [
   "ast.NodeTransformer"
  ],
  "type": "class"
 },
 "pasta.base.ast_utils._TreeNormalizer.visit": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.ast_utils.find_nodes_by_type": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.ast_utils.get_last_child": {
  "lineno": 91,
  "symbols_in_volume": [
   "ast",
   "ast.If",
   "ast.Module",
   "ast.Try",
   "ast.TryExcept",
   "ast.TryFinally",
   "ast.With",
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils.has_docstring": {
  "lineno": 176,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.Str"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils.parse": {
  "lineno": 51,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils.remove_child": {
  "lineno": 141,
  "symbols_in_volume": [
   "ast.iter_fields",
   "pasta.augment.errors.InvalidAstError"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils.replace_child": {
  "lineno": 150,
  "symbols_in_volume": [
   "pasta.augment.errors.InvalidAstError",
   "pasta.base.formatting.PASTA_DICT",
   "pasta.base.formatting.get",
   "pasta.base.formatting.set"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils.sanitize_source": {
  "lineno": 61,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.ast_utils_test.AlterChildTest": {
  "lineno": 53,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.ast_utils_test.AlterChildTest.testRemoveAlias": {
  "lineno": 77,
  "symbols_in_volume": [
   "pasta.base.ast_utils.remove_child",
   "pasta.dump",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils_test.AlterChildTest.testRemoveChildMethod": {
  "lineno": 55,
  "symbols_in_volume": [
   "pasta.base.ast_utils.remove_child",
   "pasta.dump",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils_test.AlterChildTest.testRemoveFromBlock": {
  "lineno": 86,
  "symbols_in_volume": [
   "pasta.base.ast_utils.remove_child",
   "pasta.dump",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils_test.AlterChildTest.testReplaceChildInBody": {
  "lineno": 103,
  "symbols_in_volume": [
   "pasta.base.ast_utils.replace_child",
   "pasta.dump",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils_test.AlterChildTest.testReplaceChildInvalid": {
  "lineno": 115,
  "symbols_in_volume": [
   "pasta.augment.errors.InvalidAstError",
   "pasta.base.ast_utils.replace_child",
   "pasta.parse"
  ],
  "type": "function"
 },
 "pasta.base.ast_utils_test.UtilsTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.ast_utils_test.UtilsTest.test_sanitize_source": {
  "lineno": 29,
  "symbols_in_volume": [
   "pasta.base.ast_utils.sanitize_source"
  ],
  "type": "function"
 },
 "pasta.base.codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.codegen.PrintError": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.codegen.Printer": {
  "lineno": 33,
  "symbols_in_volume": [
   "pasta.base.annotate.BaseVisitor"
  ],
  "type": "class"
 },
 "pasta.base.codegen.Printer.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.codegen.Printer.attr": {
  "lineno": 101,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.check_is_continued_try": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.codegen.Printer.check_is_continued_with": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.codegen.Printer.check_is_elif": {
  "lineno": 127,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.optional_token": {
  "lineno": 93,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.token": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.codegen.Printer.visit": {
  "lineno": 47,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.visit_Bytes": {
  "lineno": 84,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.visit_JoinedStr": {
  "lineno": 67,
  "symbols_in_volume": [
   "ast.Str",
   "pasta.base.formatting.get",
   "pasta.base.fstring_utils.get_formatted_values",
   "pasta.base.fstring_utils.perform_replacements",
   "pasta.base.fstring_utils.placeholder"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.visit_Num": {
  "lineno": 55,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.codegen.Printer.visit_Str": {
  "lineno": 61,
  "symbols_in_volume": [
   "pasta.base.formatting.get"
  ],
  "type": "function"
 },
 "pasta.base.codegen.to_str": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.codegen_test": {
  "lineno": null,
  "symbols_in_volume": [
   "pasta.__file__",
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.base.codegen_test.AutoFormatTest": {
  "lineno": 70,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase",
   "six.with_metaclass"
  ],
  "type": "class"
 },
 "pasta.base.codegen_test.AutoFormatTest.test_bytes": {
  "lineno": 84,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.test_utils.requires_features",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.base.codegen_test.AutoFormatTest.test_exec_node_default": {
  "lineno": 78,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.test_utils.requires_features",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.base.codegen_test.AutoFormatTest.test_imports": {
  "lineno": 73,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.dump"
  ],
  "type": "function"
 },
 "pasta.base.codegen_test.AutoFormatTestMeta": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.codegen_test.AutoFormatTestMeta.__new__": {
  "lineno": 45,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "pasta.base.codegen_test.AutoFormatTestMeta.__new__.auto_format_test_generator": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.codegen_test.AutoFormatTestMeta.__new__.auto_format_test_generator.test": {
  "lineno": 48,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.codegen.to_str"
  ],
  "type": "function"
 },
 "pasta.base.codegen_test._is_syntax_valid": {
  "lineno": 34,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.codegen_test.suite": {
  "lineno": 91,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.base.formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.formatting._formatting_dict": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.formatting.append": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.formatting.get": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.formatting.prepend": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.formatting.set": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.fstring_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.fstring_utils._wrap": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.fstring_utils.get_formatted_values": {
  "lineno": 26,
  "symbols_in_volume": [
   "ast.FormattedValue"
  ],
  "type": "function"
 },
 "pasta.base.fstring_utils.perform_replacements": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.fstring_utils.placeholder": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pasta.base.scope.Name": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.scope.Name.__init__": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Name.add_reference": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Name.define": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Name.lookup_name": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.scope.RootScope.__init__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope._set_scope_for_node": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.add_external_reference": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.get_name_for_node": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.get_root_scope": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.lookup_scope": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.parent": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.set_name_for_node": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.RootScope.set_parent": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Scope": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.scope.Scope.__init__": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Scope.create_scope": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Scope.define_name": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Scope.get_root_scope": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Scope.lookup_name": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.Scope.lookup_scope": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor": {
  "lineno": 37,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "pasta.base.scope.ScopeVisitor.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_Attribute": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_ClassDef": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_FunctionDef": {
  "lineno": 118,
  "symbols_in_volume": [
   "ast.ClassDef"
  ],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_Import": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_ImportFrom": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_Name": {
  "lineno": 110,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Param",
   "ast.Store"
  ],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_arg": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_arguments": {
  "lineno": 131,
  "symbols_in_volume": [
   "six.PY2"
  ],
  "type": "function"
 },
 "pasta.base.scope.ScopeVisitor.visit_in_order": {
  "lineno": 55,
  "symbols_in_volume": [
   "ast.AST"
  ],
  "type": "function"
 },
 "pasta.base.scope.analyze": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.scope_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.base.scope_test.ScopeTest": {
  "lineno": 30,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.scope_test.ScopeTest.test_class_methods": {
  "lineno": 418,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_classdef_nested_imports": {
  "lineno": 189,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_functiondef_nested_imports": {
  "lineno": 174,
  "symbols_in_volume": [
   "ast.alias",
   "ast.parse",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_if_nested_imports": {
  "lineno": 117,
  "symbols_in_volume": [
   "ast.alias",
   "ast.parse",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_attribute_references": {
  "lineno": 354,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_in_argument_type": {
  "lineno": 335,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "pasta.base.test_utils.requires_features",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_in_decortator": {
  "lineno": 299,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_in_return_type": {
  "lineno": 317,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "pasta.base.test_utils.requires_features",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_masked_by_assign": {
  "lineno": 280,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_masked_by_function_arg": {
  "lineno": 263,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_reads_in_classdef": {
  "lineno": 243,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_import_reads_in_functiondef": {
  "lineno": 224,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_lookup_scope": {
  "lineno": 380,
  "symbols_in_volume": [
   "ast.Name",
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_multilevel_import_reads": {
  "lineno": 204,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_top_level_imports": {
  "lineno": 32,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.ExternalReference",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_try_nested_imports": {
  "lineno": 147,
  "symbols_in_volume": [
   "ast.alias",
   "ast.parse",
   "pasta.base.ast_utils.find_nodes_by_type",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.ScopeTest.test_vararg_kwarg_references_in_function_body": {
  "lineno": 440,
  "symbols_in_volume": [
   "ast.parse",
   "pasta.base.scope.analyze",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pasta.base.scope_test.suite": {
  "lineno": 460,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.base.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pasta.base.test_utils.TestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.test_utils.TestCase.checkAstsEqual": {
  "lineno": 29,
  "symbols_in_volume": [
   "ast.AST",
   "ast.Load",
   "ast.Param",
   "ast.Store",
   "ast.dump",
   "ast.walk",
   "six.moves.zip"
  ],
  "type": "function"
 },
 "pasta.base.test_utils.requires_features": {
  "lineno": 65,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "pasta.base.test_utils.supports_feature": {
  "lineno": 72,
  "symbols_in_volume": [
   "ast",
   "ast.AST",
   "ast.Bytes",
   "ast.Exec",
   "ast.JoinedStr",
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.test_utils_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "pasta.base.test_utils_test.CheckAstEqualityTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "pasta.base.test_utils.TestCase"
  ],
  "type": "class"
 },
 "pasta.base.test_utils_test.CheckAstEqualityTest.test_different_number_of_nodes": {
  "lineno": 44,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.test_utils_test.CheckAstEqualityTest.test_empty": {
  "lineno": 29,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.test_utils_test.CheckAstEqualityTest.test_one_global": {
  "lineno": 34,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.test_utils_test.CheckAstEqualityTest.test_simple_function_def": {
  "lineno": 52,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.test_utils_test.CheckAstEqualityTest.test_two_globals": {
  "lineno": 39,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "pasta.base.test_utils_test.suite": {
  "lineno": 59,
  "symbols_in_volume": [
   "unittest.TestSuite",
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "pasta.base.token_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "tokenize"
  ],
  "type": "module"
 },
 "pasta.base.token_generator.TokenGenerator": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pasta.base.token_generator.TokenGenerator.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator._space_between": {
  "lineno": 413,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.block_whitespace": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.chars_consumed": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.close_scope": {
  "lineno": 243,
  "symbols_in_volume": [
   "pasta.base.formatting.append",
   "pasta.base.formatting.get",
   "pasta.base.formatting.prepend",
   "pasta.base.formatting.set"
  ],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.dots": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.eat_tokens": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.fstr": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.fstr.fstr_parser": {
  "lineno": 352,
  "symbols_in_volume": [
   "itertools.chain",
   "pasta.base.fstring_utils.placeholder"
  ],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.fstr.fstr_parser.fstr_eater": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.hint_closed": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.hint_open": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.is_in_scope": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.loc_begin": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.loc_end": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.next": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.next_name": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.next_name.predicate": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.next_of_type": {
  "lineno": 442,
  "symbols_in_volume": [
   "tokenize.tok_name"
  ],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.open_scope": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.peek": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.peek_conditional": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.peek_non_whitespace": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.rewind": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.scope": {
  "lineno": 303,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.str": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.str.predicate": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.takewhile": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.whitespace": {
  "lineno": 114,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pasta.base.token_generator.TokenGenerator.whitespace.predicate": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pasta.base.token_generator._generate_tokens": {
  "lineno": 506,
  "symbols_in_volume": [
   "six.StringIO",
   "tokenize.TokenError",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "pasta.base.token_generator._scope_helper": {
  "lineno": 463,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.AugAssign",
   "ast.BinOp",
   "ast.BoolOp",
   "ast.Call",
   "ast.Compare",
   "ast.Expr",
   "ast.GeneratorExp",
   "ast.IfExp",
   "ast.Subscript",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "pasta.dump": {
  "lineno": 29,
  "symbols_in_volume": [
   "pasta.base.codegen.to_str"
  ],
  "type": "function"
 },
 "pasta.parse": {
  "lineno": 22,
  "symbols_in_volume": [
   "pasta.base.annotate.AstAnnotator",
   "pasta.base.ast_utils.parse"
  ],
  "type": "function"
 }
}