{
 "boa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.cli.boa": {
  "lineno": null,
  "symbols_in_volume": [
   "rich.console.Console"
  ],
  "type": "module"
 },
 "boa.cli.boa.main": {
  "lineno": 20,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "boa.cli.convert.main",
   "boa.cli.transmute.main",
   "boa.core.run_build.run_build"
  ],
  "type": "function"
 },
 "boa.cli.convert": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "ruamel.yaml.add_representer"
  ],
  "type": "module"
 },
 "boa.cli.convert.MyRepresenter": {
  "lineno": 10,
  "symbols_in_volume": [
   "ruamel.yaml.representer.RoundTripRepresenter"
  ],
  "type": "class"
 },
 "boa.cli.convert.main": {
  "lineno": 19,
  "symbols_in_volume": [
   "io.StringIO",
   "re.search",
   "ruamel.yaml.RoundTripLoader",
   "ruamel.yaml.YAML",
   "ruamel.yaml.comments.CommentedMap",
   "ruamel.yaml.load"
  ],
  "type": "function"
 },
 "boa.cli.convert.main.check_if_quoted": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.cli.convert.main.has_selector": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.cli.mambabuild": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "boa.cli.mambabuild.main": {
  "lineno": 57,
  "symbols_in_volume": [
   "boa.core.solver.MambaSolver",
   "conda.base.context.context.local_repodata_ttl",
   "conda.base.context.context.subdir",
   "conda_build.api.build",
   "conda_build.cli.main_build.parse_args",
   "conda_build.conda_interface.get_rc_urls",
   "conda_build.config.Config",
   "conda_build.config.get_channel_urls",
   "conda_build.index.update_index",
   "sys.argv"
  ],
  "type": "function"
 },
 "boa.cli.mambabuild.mamba_get_install_actions": {
  "lineno": 21,
  "symbols_in_volume": [
   "conda.models.match_spec.MatchSpec",
   "re.match"
  ],
  "type": "function"
 },
 "boa.cli.transmute": {
  "lineno": null,
  "symbols_in_volume": [
   "rich.console.Console"
  ],
  "type": "module"
 },
 "boa.cli.transmute.main": {
  "lineno": 27,
  "symbols_in_volume": [
   "glob.glob",
   "mamba.mamba_api.transmute",
   "os.path.abspath",
   "os.path.basename",
   "os.path.exists",
   "os.path.join",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "boa.cli.transmute.sizeof_fmt": {
  "lineno": 13,
  "symbols_in_volume": [
   "math.log"
  ],
  "type": "function"
 },
 "boa.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.build": {
  "lineno": null,
  "symbols_in_volume": [
   "conda_build.utils.on_win",
   "sys.platform"
  ],
  "type": "module"
 },
 "boa.core.build.build": {
  "lineno": 513,
  "symbols_in_volume": [
   "conda_build.conda_interface.env_path_backup_var_exists",
   "conda_build.environ.get_dict",
   "conda_build.utils.get_skip_message",
   "conda_build.utils.path_prepended",
   "conda_build.utils.prefix_files",
   "conda_build.utils.rm_rf",
   "os.environ",
   "os.makedirs",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.build.bundle_conda": {
  "lineno": 227,
  "symbols_in_volume": [
   "conda_build.conda_interface.TemporaryDirectory",
   "conda_build.index.update_index",
   "conda_build.utils.copy_into",
   "conda_build.utils.filter_files",
   "conda_build.utils.prefix_files",
   "conda_build.utils.rm_rf",
   "conda_build.utils.tmp_chdir",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isfile",
   "os.path.join",
   "shutil.move"
  ],
  "type": "function"
 },
 "boa.core.build.create_info_files": {
  "lineno": 73,
  "symbols_in_volume": [
   "conda_build.build.copy_license",
   "conda_build.build.copy_readme",
   "conda_build.build.copy_recipe_log",
   "conda_build.build.create_info_files_json_v1",
   "conda_build.build.get_files_with_prefix",
   "conda_build.build.record_prefix_files",
   "conda_build.build.write_about_json",
   "conda_build.build.write_hash_input",
   "conda_build.build.write_info_files_file",
   "conda_build.build.write_info_json",
   "conda_build.build.write_link_json",
   "conda_build.build.write_run_exports",
   "conda_build.source.git_info",
   "conda_build.utils.copy_into",
   "conda_build.utils.on_win",
   "io.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.build.create_post_scripts": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.build.download_source": {
  "lineno": 507,
  "symbols_in_volume": [
   "conda_build.render.try_download",
   "conda_build.utils.path_prepended"
  ],
  "type": "function"
 },
 "boa.core.build.execute_build_script": {
  "lineno": 428,
  "symbols_in_volume": [
   "conda_build.utils.check_call_env",
   "conda_build.utils.ensure_list",
   "conda_build.utils.on_win",
   "conda_build.utils.remove_pycache_from_scripts",
   "conda_build.windows.build",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.build.post_process_files": {
  "lineno": 138,
  "symbols_in_volume": [
   "conda_build.build.get_entry_point_script_names",
   "conda_build.exceptions.indent",
   "conda_build.noarch_python.populate_files",
   "conda_build.noarch_python.transform",
   "conda_build.post.fix_permissions",
   "conda_build.post.get_build_metadata",
   "conda_build.post.post_build",
   "conda_build.post.post_process",
   "conda_build.utils.create_entry_points",
   "conda_build.utils.filter_files",
   "conda_build.utils.prefix_files",
   "os.path.isfile",
   "os.path.join",
   "sys.exit"
  ],
  "type": "function"
 },
 "boa.core.build.select_files": {
  "lineno": 212,
  "symbols_in_volume": [
   "fnmatch.filter"
  ],
  "type": "function"
 },
 "boa.core.build.write_build_scripts": {
  "lineno": 351,
  "symbols_in_volume": [
   "conda_build.build._write_sh_activation_text",
   "conda_build.environ.get_dict",
   "conda_build.utils.path_prepended",
   "os.chmod",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.jinja_support": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.jinja_support.compiler": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.jinja_support.jinja_functions": {
  "lineno": 25,
  "symbols_in_volume": [
   "conda_build.jinja_context.cdt",
   "functools.partial",
   "os.environ"
  ],
  "type": "function"
 },
 "boa.core.jinja_support.pin_compatible": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.jinja_support.pin_subpackage": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.metadata.MetaData": {
  "lineno": 89,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "class"
 },
 "boa.core.metadata.MetaData.__init__": {
  "lineno": 109,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.always_include_files": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.binary_has_prefix_files": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.binary_relocation": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.build_features": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.build_features.truefalse": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.build_id": {
  "lineno": 266,
  "symbols_in_volume": [
   "re.findall",
   "re.sub"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.build_number": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.build_string": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.copy": {
  "lineno": 439,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.dist": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.get_dependencies": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.get_hash_contents": {
  "lineno": 308,
  "symbols_in_volume": [
   "conda_build.utils.ensure_list",
   "re.compile"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.get_section": {
  "lineno": 124,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.get_value": {
  "lineno": 130,
  "symbols_in_volume": [
   "conda_build.metadata.default_structs",
   "typing.Any"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.has_prefix_files": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.hash_dependencies": {
  "lineno": 244,
  "symbols_in_volume": [
   "hashlib.sha1",
   "json.dumps"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.ignore_prefix_files": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.include_recipe": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.info_index": {
  "lineno": 373,
  "symbols_in_volume": [
   "conda_build.metadata.ARCH_MAP.get",
   "conda_build.utils.ensure_list",
   "time.time"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.meta_path": {
  "lineno": 235,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.ms_depends": {
  "lineno": 150,
  "symbols_in_volume": [
   "sys.exit"
  ],
  "type": "function"
 },
 "boa.core.metadata.MetaData.name": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.skip": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.use_feature_map": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.MetaData.version": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.metadata.build_string_from_metadata": {
  "lineno": 24,
  "symbols_in_volume": [
   "conda_build.utils.ensure_list"
  ],
  "type": "function"
 },
 "boa.core.metadata.get_package_version_pin": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output": {
  "lineno": null,
  "symbols_in_volume": [
   "rich.console.Console"
  ],
  "type": "module"
 },
 "boa.core.recipe_output.CondaBuildSpec": {
  "lineno": 26,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "boa.core.recipe_output.CondaBuildSpec.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.CondaBuildSpec.__repr__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.CondaBuildSpec.eval_pin_compatible": {
  "lineno": 112,
  "symbols_in_volume": [
   "conda_build.utils.apply_pin_expressions"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.CondaBuildSpec.eval_pin_subpackage": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.CondaBuildSpec.final_name": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.CondaBuildSpec.loosen_spec": {
  "lineno": 60,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "boa.core.recipe_output.Output.__init__": {
  "lineno": 149,
  "symbols_in_volume": [
   "copy.copy",
   "rich.table.Table"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.__init__.set_section": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.Output.__repr__": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.Output.__repr__.spec_format": {
  "lineno": 380,
  "symbols_in_volume": [
   "conda.models.channel.Channel.from_url"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.__rich__": {
  "lineno": 292,
  "symbols_in_volume": [
   "rich.box.MINIMAL_DOUBLE_HEAD",
   "rich.table.Table"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.__rich__.add_header": {
  "lineno": 350,
  "symbols_in_volume": [
   "rich.padding.Padding"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.__rich__.spec_format": {
  "lineno": 308,
  "symbols_in_volume": [
   "conda.models.channel.Channel.from_url"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output._solve_env": {
  "lineno": 474,
  "symbols_in_volume": [
   "conda.core.package_cache_data.PackageCacheData.first_writable",
   "json.loads"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.all_requirements": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.Output.apply_variant": {
  "lineno": 243,
  "symbols_in_volume": [
   "conda_build.config.get_or_merge_config",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.finalize_solve": {
  "lineno": 520,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.propagate_run_exports": {
  "lineno": 417,
  "symbols_in_volume": [
   "conda.core.package_cache_data.PackageCacheData.first_writable",
   "json.load",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.recipe_output.Output.propagate_run_exports.append_or_replace": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.recipe_output.Output.skip": {
  "lineno": 228,
  "symbols_in_volume": [
   "conda_build.metadata.eval_selector",
   "conda_build.metadata.ns_cfg"
  ],
  "type": "function"
 },
 "boa.core.render": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.render.flatten_selectors": {
  "lineno": 32,
  "symbols_in_volume": [
   "collections.Iterable",
   "collections.Mapping",
   "conda_build.metadata.eval_selector"
  ],
  "type": "function"
 },
 "boa.core.render.render": {
  "lineno": 74,
  "symbols_in_volume": [
   "boa.core.jinja_support.jinja_functions",
   "conda_build.metadata.ns_cfg",
   "jinja2.Environment",
   "ruamel.yaml.YAML"
  ],
  "type": "function"
 },
 "boa.core.render.render_recursive": {
  "lineno": 8,
  "symbols_in_volume": [
   "collections.Iterable",
   "collections.Mapping"
  ],
  "type": "function"
 },
 "boa.core.run_build": {
  "lineno": null,
  "symbols_in_volume": [
   "rich.console.Console"
  ],
  "type": "module"
 },
 "boa.core.run_build.find_all_recipes": {
  "lineno": 30,
  "symbols_in_volume": [
   "boa.core.render.render",
   "glob.glob",
   "os.getcwd",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.run_build.get_dependency_variants": {
  "lineno": 47,
  "symbols_in_volume": [
   "boa.core.build.build"
  ],
  "type": "function"
 },
 "boa.core.run_build.get_dependency_variants.get_variants": {
  "lineno": 52,
  "symbols_in_volume": [
   "boa.core.recipe_output.CondaBuildSpec",
   "conda.models.match_spec.MatchSpec"
  ],
  "type": "function"
 },
 "boa.core.run_build.run_build": {
  "lineno": 218,
  "symbols_in_volume": [
   "boa.core.build.build",
   "boa.core.build.download_source",
   "boa.core.metadata.MetaData",
   "boa.core.render.render",
   "boa.core.solver.MambaSolver",
   "boa.core.utils.get_config",
   "conda.base.context.context.subdir",
   "conda.core.package_cache_data.PackageCacheData.first_writable",
   "conda.gateways.disk.create.mkdir_p",
   "conda_build.index.update_index",
   "conda_build.utils.rm_rf",
   "mamba.mamba_api.PrefixData",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "boa.core.run_build.to_build_tree": {
  "lineno": 124,
  "symbols_in_volume": [
   "boa.core.recipe_output.Output",
   "conda.common.toposort.toposort",
   "itertools.product",
   "rich.table.Table"
  ],
  "type": "function"
 },
 "boa.core.run_build.to_build_tree.merge_requirements": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "boa.core.solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.solver.MambaSolver": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "boa.core.solver.MambaSolver.__init__": {
  "lineno": 49,
  "symbols_in_volume": [
   "conda.base.context.context.conda_prefix",
   "mamba.mamba_api.Context",
   "mamba.mamba_api.Pool",
   "mamba.mamba_api.Repo",
   "mamba.utils.get_index"
  ],
  "type": "function"
 },
 "boa.core.solver.MambaSolver.replace_channels": {
  "lineno": 76,
  "symbols_in_volume": [
   "mamba.mamba_api.Repo",
   "mamba.utils.get_index",
   "os.remove"
  ],
  "type": "function"
 },
 "boa.core.solver.MambaSolver.solve": {
  "lineno": 98,
  "symbols_in_volume": [
   "conda_build.conda_interface.pkgs_dirs",
   "mamba.mamba_api.MultiPackageCache",
   "mamba.mamba_api.SOLVER_FLAG_ALLOW_DOWNGRADE",
   "mamba.mamba_api.SOLVER_INSTALL",
   "mamba.mamba_api.Solver",
   "mamba.mamba_api.Transaction"
  ],
  "type": "function"
 },
 "boa.core.solver.MambaSolver.solve_for_action": {
  "lineno": 136,
  "symbols_in_volume": [
   "conda.models.match_spec.MatchSpec"
  ],
  "type": "function"
 },
 "boa.core.solver.to_action": {
  "lineno": 18,
  "symbols_in_volume": [
   "conda._vendor.boltons.setutils.IndexedSet",
   "conda.core.prefix_data.PrefixData",
   "conda.core.solve.diff_for_unlink_link_precs",
   "conda.models.dist.Dist",
   "conda.models.prefix_graph.PrefixGraph",
   "conda.plan.get_blank_actions",
   "mamba.utils.to_package_record_from_subjson"
  ],
  "type": "function"
 },
 "boa.core.transmute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "boa.core.utils.get_config": {
  "lineno": 7,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "conda_build.config.get_or_merge_config",
   "conda_build.variants.find_config_files",
   "conda_build.variants.parse_config_file"
  ],
  "type": "function"
 }
}