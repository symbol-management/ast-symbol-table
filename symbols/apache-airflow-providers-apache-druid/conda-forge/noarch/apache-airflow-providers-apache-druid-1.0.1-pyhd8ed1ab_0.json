{
 "airflow.providers.apache.druid": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.hooks.druid": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.hooks.druid.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.DbApiHook": {
  "data": {
   "shadows": "airflow.hooks.dbapi.DbApiHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "airflow.hooks.dbapi.DbApiHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook.get_conn": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pydruid.db.connect"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook.get_uri": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook.insert_rows": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Iterable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook.set_autocommit": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "bool",
    "pydruid.db.connect"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidHook": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidHook.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidHook.get_auth": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "airflow.providers.apache.druid.hooks.druid.requests",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidHook.get_conn_url": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.DruidHook.submit_indexing_job": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.apache.druid.hooks.druid.requests",
    "airflow.providers.apache.druid.hooks.druid.time",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.hooks.druid.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.connect": {
  "data": {
   "shadows": "pydruid.db.connect"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.hooks.druid.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.operators.druid": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.operators.druid.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid.BaseOperator": {
  "data": {
   "shadows": "airflow.models.BaseOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid.DruidHook": {
  "data": {
   "shadows": "airflow.providers.apache.druid.hooks.druid.DruidHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid.DruidOperator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "airflow.models.BaseOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.druid.operators.druid.DruidOperator.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.operators.druid.DruidOperator.execute": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "airflow.providers.apache.druid.hooks.druid.DruidHook",
    "airflow.providers.apache.druid.operators.druid.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.operators.druid.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.operators.druid_check.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check.CheckOperator": {
  "data": {
   "shadows": "airflow.operators.check_operator.CheckOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check.DruidCheckOperator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "airflow.operators.check_operator.CheckOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.druid.operators.druid_check.DruidCheckOperator.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.operators.druid_check.DruidCheckOperator.execute": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.operators.druid_check.DruidCheckOperator.get_db_hook": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.operators.druid_check.DruidCheckOperator.get_first": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.operators.druid_check.DruidDbApiHook": {
  "data": {
   "shadows": "airflow.providers.apache.druid.hooks.druid.DruidDbApiHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.operators.druid_check.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.BaseOperator": {
  "data": {
   "shadows": "airflow.models.BaseOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.DEFAULT_TARGET_PARTITION_SIZE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.DruidHook": {
  "data": {
   "shadows": "airflow.providers.apache.druid.hooks.druid.DruidHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.HiveCliHook": {
  "data": {
   "shadows": "airflow.providers.apache.hive.hooks.hive.HiveCliHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.HiveMetastoreHook": {
  "data": {
   "shadows": "airflow.providers.apache.hive.hooks.hive.HiveMetastoreHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.HiveToDruidOperator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "airflow.models.BaseOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.HiveToDruidOperator.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.HiveToDruidOperator.construct_ingest_query": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "airflow.providers.apache.druid.transfers.hive_to_druid.DEFAULT_TARGET_PARTITION_SIZE",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.HiveToDruidOperator.execute": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "airflow.providers.apache.druid.hooks.druid.DruidHook",
    "airflow.providers.apache.hive.hooks.hive.HiveCliHook",
    "airflow.providers.apache.hive.hooks.hive.HiveMetastoreHook",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.LOAD_CHECK_INTERVAL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.druid.transfers.hive_to_druid.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 }
}