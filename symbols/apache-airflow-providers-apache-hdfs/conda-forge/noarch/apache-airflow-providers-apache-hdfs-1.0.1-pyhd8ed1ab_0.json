{
 "airflow.providers.apache.hdfs": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.hdfs.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.hdfs.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.AutoConfigClient": {
  "data": {
   "shadows": "snakebite.client.AutoConfigClient"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.Client": {
  "data": {
   "shadows": "snakebite.client.Client"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.HAClient": {
  "data": {
   "shadows": "snakebite.client.HAClient"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHook": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHook.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ImportError",
    "airflow.providers.apache.hdfs.hooks.hdfs.snakebite_loaded",
    "bool",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHook.get_conn": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "airflow.configuration.conf.get",
    "airflow.exceptions.AirflowException",
    "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHookException",
    "len",
    "snakebite.client.AutoConfigClient",
    "snakebite.client.Client",
    "snakebite.client.HAClient",
    "snakebite.client.Namenode",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHookException": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.Namenode": {
  "data": {
   "shadows": "snakebite.client.Namenode"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.conf": {
  "data": {
   "shadows": "airflow.configuration.conf"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.hdfs.snakebite_loaded": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "airflow.configuration.conf.get",
    "airflow.providers.apache.hdfs.hooks.webhdfs._kerberos_security_mode",
    "airflow.providers.apache.hdfs.hooks.webhdfs.log",
    "airflow.providers.apache.hdfs.hooks.webhdfs.logging"
   ]
  },
  "type": "module"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.AirflowWebHDFSHookException": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.Connection": {
  "data": {
   "shadows": "airflow.models.connection.Connection"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.HdfsError": {
  "data": {
   "shadows": "hdfs.HdfsError"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.InsecureClient": {
  "data": {
   "shadows": "hdfs.InsecureClient"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.KerberosClient": {
  "data": {
   "shadows": "hdfs.ext.kerberos.KerberosClient"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook._find_valid_server": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.hooks.webhdfs.socket",
    "hdfs.HdfsError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook._get_client": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "airflow.models.connection.Connection",
    "airflow.providers.apache.hdfs.hooks.webhdfs._kerberos_security_mode",
    "hdfs.InsecureClient",
    "hdfs.ext.kerberos.KerberosClient",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook.check_for_path": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook.get_conn": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.hooks.webhdfs.AirflowWebHDFSHookException",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook.load_file": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs._kerberos_security_mode": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.conf": {
  "data": {
   "shadows": "airflow.configuration.conf"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.log": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.hooks.webhdfs.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "airflow.providers.apache.hdfs.sensors.hdfs.logging"
   ]
  },
  "type": "module"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.BaseSensorOperator": {
  "data": {
   "shadows": "airflow.sensors.base.BaseSensorOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HDFSHook": {
  "data": {
   "shadows": "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsFolderSensor": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsFolderSensor.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bool",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsFolderSensor.poke": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bool",
    "len",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsRegexSensor": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsRegexSensor.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Any",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsRegexSensor.poke": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "airflow.sensors.base.BaseSensorOperator",
    "airflow.settings.WEB_COLORS"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.hooks.hdfs.HDFSHook",
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor.filter_for_filesize": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.sensors.hdfs.log",
    "airflow.settings.MEGABYTE",
    "int",
    "map",
    "staticmethod",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor.filter_for_ignored_ext": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.sensors.hdfs.log",
    "airflow.providers.apache.hdfs.sensors.hdfs.re",
    "bool",
    "map",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.HdfsSensor.poke": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Exception",
    "airflow.providers.apache.hdfs.sensors.hdfs.sys",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.log": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.settings": {
  "data": {
   "shadows": "airflow.settings"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.hdfs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.BaseSensorOperator": {
  "data": {
   "shadows": "airflow.sensors.base.BaseSensorOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.WebHDFSHook": {
  "data": {
   "shadows": "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.WebHdfsSensor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "airflow.sensors.base.BaseSensorOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.WebHdfsSensor.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.WebHdfsSensor.poke": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "airflow.providers.apache.hdfs.hooks.webhdfs.WebHDFSHook",
    "bool",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.hdfs.sensors.web_hdfs.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 }
}