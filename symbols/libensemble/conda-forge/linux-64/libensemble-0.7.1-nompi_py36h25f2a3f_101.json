{
 "libensemble": {
  "data": {},
  "type": "module"
 },
 "libensemble.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "libensemble.__credits__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "libensemble.alloc_funcs": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.defaults": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
   ]
  },
  "type": "module"
 },
 "libensemble.alloc_funcs.defaults.alloc_specs": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "libensemble.alloc_funcs.defaults.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.fast_alloc.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc.count_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc.give_sim_work_first": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.fast_alloc.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing.count_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing.give_sim_work_first": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "all",
    "bool",
    "enumerate",
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "list",
    "min",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.in1d",
    "numpy.isnan",
    "numpy.logical_or",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_and_pausing.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm.count_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm.give_sim_work_first": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "all",
    "bool",
    "enumerate",
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "numpy.any",
    "numpy.logical_or",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.fast_alloc_to_aposmm.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_pregenerated_work": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.give_pregenerated_work.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_pregenerated_work.give_pregenerated_sim_work": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.sim_work"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.give_pregenerated_work.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_sim_work_first": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.give_sim_work_first.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_sim_work_first.count_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_sim_work_first.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "list",
    "numpy.all",
    "numpy.any",
    "numpy.argmax",
    "numpy.atleast_1d",
    "numpy.logical_and",
    "numpy.max",
    "numpy.nonzero",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.give_sim_work_first.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.give_sim_work_first.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf.count_persis_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_persis_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf.only_persistent_gens_for_inverse_bayes": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_persis_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "numpy.all",
    "numpy.any",
    "numpy.atleast_1d",
    "numpy.logical_and",
    "numpy.max",
    "numpy.min",
    "numpy.nonzero",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.inverse_bayes_allocf.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.only_one_gen_alloc": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.only_one_gen_alloc.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.only_one_gen_alloc.ensure_one_active_gen": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "all",
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "libensemble.tools.alloc_support.test_any_gen",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.only_one_gen_alloc.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.only_one_gen_alloc.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.only_one_gen_alloc.test_any_gen": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.test_any_gen"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc.count_persis_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_persis_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_persis_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "numpy.all",
    "numpy.any",
    "numpy.atleast_1d",
    "numpy.logical_and",
    "numpy.where",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.persistent_aposmm_alloc.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_fd_persistent": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.start_fd_persistent.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_fd_persistent.count_persis_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_persis_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_fd_persistent.finite_diff_alloc": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "int",
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_persis_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "list",
    "numpy.any",
    "numpy.append",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.logical_and.reduce",
    "numpy.nonzero",
    "range",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.start_fd_persistent.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_fd_persistent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_fd_persistent.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_only_persistent": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.start_only_persistent.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_only_persistent.count_persis_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_persis_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_only_persistent.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_only_persistent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_persis_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "numpy.all",
    "numpy.any",
    "numpy.atleast_1d",
    "numpy.max",
    "numpy.nonzero",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.start_only_persistent.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens": {
  "data": {},
  "type": "module"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.EVAL_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.avail_worker_ids": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.avail_worker_ids"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.count_persis_gens": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.count_persis_gens"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.decide_where_to_start_localopt": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.decide_where_to_start_localopt"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.gen_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.gen_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.initialize_APOSMM": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.initialize_APOSMM"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.sim_work": {
  "data": {
   "shadows": "libensemble.tools.alloc_support.sim_work"
  },
  "type": "import"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.start_persistent_local_opt_gens": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.old_aposmm.decide_where_to_start_localopt",
    "libensemble.gen_funcs.old_aposmm.initialize_APOSMM",
    "libensemble.gen_funcs.old_aposmm.update_history_dist",
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.tools.alloc_support.avail_worker_ids",
    "libensemble.tools.alloc_support.count_persis_gens",
    "libensemble.tools.alloc_support.gen_work",
    "libensemble.tools.alloc_support.sim_work",
    "numpy.all",
    "numpy.any",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.atleast_1d",
    "numpy.logical_and",
    "numpy.nonzero",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.alloc_funcs.start_persistent_local_opt_gens.update_history_dist": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.update_history_dist"
  },
  "type": "import"
 },
 "libensemble.comms": {
  "data": {},
  "type": "module"
 },
 "libensemble.comms.comms": {
  "data": {},
  "type": "module"
 },
 "libensemble.comms.comms.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libensemble.comms.comms.Comm": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.Comm.kill_pending": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "libensemble.comms.comms.Comm.mail_flag": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "libensemble.comms.comms.Comm.recv": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.Comm.send": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "libensemble.comms.comms.GenCommHandler"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.CommEval.__call__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.__init__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.on_killed": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.on_queued": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "libensemble.comms.comms.Future",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.on_result": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.on_update": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.on_worker_avail": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.request": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.wait_all": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommEval.wait_any": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommFinishedException": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.CommHandler": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.CommHandler.__init__": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommHandler.on_unhandled_message": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommHandler.process_message": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "handler"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommHandler.send": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommResult": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "libensemble.comms.comms.CommResult.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "libensemble.comms.comms.CommResultErr": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "libensemble.comms.comms.CommResultErr.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future": {
  "data": {
   "lineno": 523
  },
  "type": "class"
 },
 "libensemble.comms.comms.Future.__init__": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.cancel": {
  "data": {
   "lineno": 551
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.cancelled": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.current_result": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.done": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.on_killed": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.on_result": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.on_update": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "libensemble.comms.comms.Future.result": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "libensemble.comms.comms.Timeout",
    "time.time"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "libensemble.comms.comms.CommHandler"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.GenCommHandler.on_killed": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.on_queued": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.on_result": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.on_stop": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "libensemble.comms.comms.ManagerStop"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.on_update": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.on_worker_avail": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.send_get_history": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.send_kill": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.send_request": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "libensemble.comms.comms.GenCommHandler.send_subscribe": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "libensemble.comms.comms.Lock": {
  "data": {
   "shadows": "multiprocessing.Lock"
  },
  "type": "import"
 },
 "libensemble.comms.comms.ManagerStop": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "libensemble.comms.comms.QComm": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "libensemble.comms.comms.Comm",
    "multiprocessing.Lock",
    "multiprocessing.Value"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.QComm.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "libensemble.comms.comms.QComm.get_num_workers": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QComm.mail_flag": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "libensemble.comms.comms.QComm.push_to_buffer": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "libensemble.comms.comms.QComm.recv": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "libensemble.comms.comms.Timeout",
    "libensemble.comms.comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QComm.send": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "libensemble.comms.comms.copy"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "libensemble.comms.comms.Comm"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.QCommProcess.__enter__": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.__exit__": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.QCommProcess",
    "multiprocessing.Process",
    "multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess._is_result_msg": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libensemble.comms.comms.CommResult",
    "libensemble.comms.comms.CommResultErr"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess._qcomm_main": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Exception",
    "libensemble.comms.comms.CommResult",
    "libensemble.comms.comms.CommResultErr",
    "main",
    "staticmethod",
    "str",
    "traceback.format_exc"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.mail_flag": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.recv": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "libensemble.comms.comms.CommFinishedException",
    "libensemble.comms.comms.Timeout",
    "libensemble.comms.comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.result": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "get_timeout",
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.RemoteException",
    "libensemble.comms.comms.Timeout",
    "libensemble.comms.comms._timeout_fun",
    "libensemble.comms.comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.run": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.running": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.send": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommProcess.terminate": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.Timeout"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "libensemble.comms.comms.Comm"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.QCommThread.__enter__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.__exit__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.queue",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread._qcomm_main": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.mail_flag": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.recv": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "libensemble.comms.comms.Timeout",
    "libensemble.comms.comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.result": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "Exception",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.run": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.running": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.QCommThread.send": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "libensemble.comms.comms.copy"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "libensemble.comms.comms.RemoteException": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.RemoteException.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.SimCommHandler": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "libensemble.comms.comms.CommHandler"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.SimCommHandler.on_kill": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.SimCommHandler.on_request": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.SimCommHandler.on_stop": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "libensemble.comms.comms.ManagerStop"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.SimCommHandler.send_killed": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "libensemble.comms.comms.SimCommHandler.send_result": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "libensemble.comms.comms.SimCommHandler.send_update": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "libensemble.comms.comms.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "libensemble.comms.comms.Timeout": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.comms.Value": {
  "data": {
   "shadows": "multiprocessing.Value"
  },
  "type": "import"
 },
 "libensemble.comms.comms._timeout_fun": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.comms.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libensemble.comms.comms.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "libensemble.comms.comms.format_exc": {
  "data": {
   "shadows": "traceback.format_exc"
  },
  "type": "import"
 },
 "libensemble.comms.comms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.comms.comms.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "libensemble.comms.comms.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.comms.logs": {
  "data": {},
  "type": "module"
 },
 "libensemble.comms.logs.CommLogHandler": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.logs.CommLogHandler.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "libensemble.comms.logs.logging",
    "super"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.CommLogHandler.emit": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "libensemble.comms.logs.ErrorFilter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.logs.ErrorFilter.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.ErrorFilter.filter": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "libensemble.comms.logs.LogConfig": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "libensemble.comms.logs.LogConfig.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libensemble.comms.logs.LogConfig",
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.LogConfig.set_level": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "getattr",
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.LogConfig.set_stderr_level": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "getattr",
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.WorkerIDFilter": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.logs.WorkerIDFilter.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.WorkerIDFilter.filter": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.comms.logs.manager_logging_config": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "libensemble.comms.logs.ErrorFilter",
    "libensemble.comms.logs.LogConfig",
    "libensemble.comms.logs.WorkerIDFilter",
    "libensemble.comms.logs.logging",
    "libensemble.comms.logs.sys"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.logs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.comms.logs.worker_logging_config": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "libensemble.comms.logs.CommLogHandler",
    "libensemble.comms.logs.LogConfig",
    "libensemble.comms.logs.WorkerIDFilter",
    "libensemble.comms.logs.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.mpi": {
  "data": {},
  "type": "module"
 },
 "libensemble.comms.mpi.Comm": {
  "data": {
   "shadows": "libensemble.comms.comms.Comm"
  },
  "type": "import"
 },
 "libensemble.comms.mpi.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.comms.mpi.MPIComm": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libensemble.comms.comms.Comm"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.mpi.MPIComm.__del__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mpi4py.MPI.Status"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.clean_outbox": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.get_num_workers": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.kill_pending": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.mail_flag": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.process_incoming": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.process_outgoing": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.push_to_buffer": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.rank": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.recv": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libensemble.comms.comms.Timeout",
    "libensemble.comms.mpi.time"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MPIComm.send": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MainMPIComm": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libensemble.comms.mpi.MPIComm"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.mpi.MainMPIComm.process_incoming": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "libensemble.comms.mpi.MainMPIComm.process_outgoing": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "libensemble.comms.mpi.Timeout": {
  "data": {
   "shadows": "libensemble.comms.comms.Timeout"
  },
  "type": "import"
 },
 "libensemble.comms.mpi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.comms.tcp_mgr": {
  "data": {},
  "type": "module"
 },
 "libensemble.comms.tcp_mgr.BaseManager": {
  "data": {
   "shadows": "multiprocessing.managers.BaseManager"
  },
  "type": "import"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager": {
  "data": {
   "lineno": 80
  },
  "type": "class"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.__enter__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.__exit__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ClientQueueManager"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.__init__.ClientQueueManager": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "multiprocessing.managers.BaseManager"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.get_inbox": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.get_outbox": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.get_queue": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ClientQCommManager.get_shared": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.QComm": {
  "data": {
   "shadows": "libensemble.comms.comms.QComm"
  },
  "type": "import"
 },
 "libensemble.comms.tcp_mgr.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.__enter__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.__exit__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ServerQueueManager",
    "multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.__init__.ServerQueueManager": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "multiprocessing.managers.BaseManager"
   ]
  },
  "type": "class"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.__init__.get_queue": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.address": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.await_workers": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.get_inbox": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.get_outbox": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.get_queue": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.get_shared": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "libensemble.comms.tcp_mgr.ServerQCommManager.shutdown": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "libensemble.executors": {
  "data": {
   "symbols_in_volume": [
    "int",
    "libensemble.executors.os",
    "libensemble.executors.sys"
   ]
  },
  "type": "module"
 },
 "libensemble.executors.BalsamMPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.balsam_executor.BalsamMPIExecutor"
  },
  "type": "import"
 },
 "libensemble.executors.Executor": {
  "data": {
   "shadows": "libensemble.executors.executor.Executor"
  },
  "type": "import"
 },
 "libensemble.executors.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.executors.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.executors.balsam_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.executors.balsam_executor.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.executors.balsam_executor.Application": {
  "data": {
   "shadows": "libensemble.executors.executor.Application"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "libensemble.executors.mpi_executor.MPIExecutor"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor._serial_setup": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.BalsamMPIExecutor"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor.add_app": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "AppDef",
    "balsam.core.models.ApplicationDefinition",
    "libensemble.executors.balsam_executor.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor.del_apps": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "balsam.core.models.ApplicationDefinition",
    "libensemble.executors.balsam_executor.logger",
    "libensemble.executors.executor.Application.prefix",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor.del_tasks": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "balsam.core.models.BalsamJob.objects.filter",
    "libensemble.executors.balsam_executor.logger",
    "libensemble.executors.executor.Task.prefix",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamMPIExecutor.submit": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "balsam.launcher.dag.add_job",
    "libensemble.executors.balsam_executor.BalsamTask",
    "libensemble.executors.balsam_executor.logger",
    "libensemble.executors.balsam_executor.os",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.executors.executor.jassert",
    "libensemble.resources.mpi_resources.MPIResources.task_partition"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "libensemble.executors.executor.Task"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.balsam_executor.BalsamTask.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libensemble.executors.executor.Task.__init__"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask._get_time_since_balsam_submit": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.datetime"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask._set_complete": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.logger",
    "libensemble.executors.executor.STATES"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.calc_task_timing": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.logger",
    "libensemble.executors.balsam_executor.time"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.kill": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "balsam.launcher.dag.kill",
    "libensemble.executors.balsam_executor.logger"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.poll": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "balsam.core.models.ACTIVE_STATES",
    "balsam.core.models.END_STATES",
    "balsam.core.models.PROCESSABLE_STATES",
    "balsam.core.models.RUNNABLE_STATES",
    "libensemble.executors.executor.ExecutorException"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.read_file_in_workdir": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.read_stderr": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.read_stdout": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.BalsamTask.wait": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "balsam.core.models.END_STATES",
    "libensemble.executors.balsam_executor.time",
    "libensemble.executors.executor.TimeoutExpired"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.balsam_executor.ExecutorException": {
  "data": {
   "shadows": "libensemble.executors.executor.ExecutorException"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.MPIResources": {
  "data": {
   "shadows": "libensemble.resources.mpi_resources.MPIResources"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.STATES": {
  "data": {
   "shadows": "libensemble.executors.executor.STATES"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.Task": {
  "data": {
   "shadows": "libensemble.executors.executor.Task"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.TimeoutExpired": {
  "data": {
   "shadows": "libensemble.executors.executor.TimeoutExpired"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.dag": {
  "data": {
   "shadows": "balsam.launcher.dag"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.jassert": {
  "data": {
   "shadows": "libensemble.executors.executor.jassert"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.executors.balsam_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.models": {
  "data": {
   "shadows": "balsam.core.models"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.executors.balsam_executor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.executors.executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.executors.executor.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.executors.executor.Application": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "libensemble.executors.executor.Application.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libensemble.executors.executor.Application",
    "libensemble.executors.executor.os",
    "libensemble.executors.executor.sys"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.END_STATES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.executors.executor.Executor": {
  "data": {
   "lineno": 280
  },
  "type": "class"
 },
 "libensemble.executors.executor.Executor.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor",
    "libensemble.executors.executor.os"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor._serial_setup": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor._wait_on_run": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "libensemble.executors.executor.END_STATES",
    "libensemble.executors.executor.NOT_STARTED_STATES",
    "libensemble.executors.executor.logger",
    "libensemble.executors.executor.time",
    "min"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.default_app": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "libensemble.executors.executor.jassert"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.gen_default_app": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.get_app": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "KeyError",
    "libensemble.executors.executor.ExecutorException",
    "list"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.get_task": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "libensemble.executors.executor.logger",
    "next"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.kill": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "isinstance",
    "libensemble.executors.executor.Task",
    "libensemble.executors.executor.jassert"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.manager_poll": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "libensemble.executors.executor.logger",
    "libensemble.message_numbers.MAN_SIGNAL_FINISH",
    "libensemble.message_numbers.MAN_SIGNAL_KILL",
    "libensemble.message_numbers.STOP_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.poll": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.register_calc": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "libensemble.executors.executor.Application",
    "libensemble.executors.executor.jassert",
    "libensemble.executors.executor.os"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.set_workerID": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.set_worker_info": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "libensemble.executors.executor.Executor.sim_default_app": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.ExecutorException": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.executor.MAN_SIGNAL_FINISH": {
  "data": {
   "shadows": "libensemble.message_numbers.MAN_SIGNAL_FINISH"
  },
  "type": "import"
 },
 "libensemble.executors.executor.MAN_SIGNAL_KILL": {
  "data": {
   "shadows": "libensemble.message_numbers.MAN_SIGNAL_KILL"
  },
  "type": "import"
 },
 "libensemble.executors.executor.NOT_STARTED_STATES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.executors.executor.STATES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.executors.executor.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.executors.executor.Task": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "libensemble.executors.executor.itertools"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.executor.Task.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libensemble.executors.executor.Task",
    "libensemble.executors.executor.jassert",
    "libensemble.utils.timer.TaskTimer",
    "next"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task._check_poll": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "libensemble.executors.executor.jassert",
    "libensemble.executors.executor.logger"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task._set_complete": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "libensemble.executors.executor.logger"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.calc_task_timing": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "libensemble.executors.executor.logger"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.file_exists_in_workdir": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "libensemble.executors.executor.os"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.kill": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "libensemble.executors.executor.jassert",
    "libensemble.executors.executor.logger",
    "libensemble.executors.executor.time",
    "libensemble.utils.launcher.cancel"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.poll": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.read_file_in_workdir": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "libensemble.executors.executor.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.read_stderr": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.read_stdout": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.reset": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.stderr_exists": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.stdout_exists": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.wait": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "libensemble.executors.executor.TimeoutExpired",
    "libensemble.utils.launcher.wait"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.Task.workdir_exists": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "libensemble.executors.executor.os"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.TaskTimer": {
  "data": {
   "shadows": "libensemble.utils.timer.TaskTimer"
  },
  "type": "import"
 },
 "libensemble.executors.executor.TimeoutExpired": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.executor.TimeoutExpired.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "libensemble.executors.executor.TimeoutExpired.__str__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "libensemble.executors.executor.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "libensemble.executors.executor.jassert": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libensemble.executors.executor.ExecutorException"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.executor.launcher": {
  "data": {
   "shadows": "libensemble.utils.launcher"
  },
  "type": "import"
 },
 "libensemble.executors.executor.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "libensemble.executors.executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.executors.executor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.executors.executor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.executors.executor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.executors.mpi_executor.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.executors.mpi_executor.Executor": {
  "data": {
   "shadows": "libensemble.executors.executor.Executor"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.ExecutorException": {
  "data": {
   "shadows": "libensemble.executors.executor.ExecutorException"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.MPIExecutor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.mpi_executor.MPIExecutor.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.__init__",
    "libensemble.executors.mpi_runner.MPIRunner.get_runner",
    "libensemble.resources.mpi_resources.MPIResources",
    "libensemble.resources.mpi_resources.MPIResources.get_MPI_variant"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_executor.MPIExecutor._launch_with_retries": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Exception",
    "libensemble.executors.mpi_executor.logger",
    "libensemble.executors.mpi_executor.time",
    "libensemble.utils.launcher.launch",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_executor.MPIExecutor.add_comm_info": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "libensemble.executors.mpi_executor.MPIExecutor.set_worker_info": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "libensemble.executors.mpi_executor.MPIExecutor.submit": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "libensemble.executors.executor.ExecutorException",
    "libensemble.executors.executor.Task",
    "libensemble.executors.mpi_executor.logger",
    "libensemble.executors.mpi_executor.os",
    "libensemble.utils.launcher.form_command"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_executor.MPIResources": {
  "data": {
   "shadows": "libensemble.resources.mpi_resources.MPIResources"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.MPIRunner": {
  "data": {
   "shadows": "libensemble.executors.mpi_runner.MPIRunner"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.Task": {
  "data": {
   "shadows": "libensemble.executors.executor.Task"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.launcher": {
  "data": {
   "shadows": "libensemble.utils.launcher"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "libensemble.executors.mpi_executor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_executor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.executors.mpi_runner.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.executors.mpi_runner.APRUN_MPIRunner": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.MPIRunner"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.mpi_runner.APRUN_MPIRunner.__init__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.JSRUN_MPIRunner": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.MPIRunner"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.mpi_runner.JSRUN_MPIRunner.__init__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.JSRUN_MPIRunner.get_mpi_specs": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.logger",
    "libensemble.resources.mpi_resources.MPIResources.task_partition"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPICH_MPIRunner": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.MPIRunner"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.mpi_runner.MPICH_MPIRunner.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPIResources": {
  "data": {
   "shadows": "libensemble.resources.mpi_resources.MPIResources"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_runner.MPIRunner": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "libensemble.executors.mpi_runner.MPIRunner.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPIRunner._get_parser": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "libensemble.executors.mpi_runner.argparse"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPIRunner._parse_extra_args": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPIRunner._rm_replicated_args": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPIRunner.get_mpi_specs": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libensemble.executors.executor.jassert",
    "libensemble.executors.mpi_runner.logger",
    "libensemble.resources.mpi_resources.MPIResources.task_partition"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.MPIRunner.get_runner": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.MPIRunner",
    "mpi_runner",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.OPENMPI_MPIRunner": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.MPIRunner"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.mpi_runner.OPENMPI_MPIRunner.__init__": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.SRUN_MPIRunner": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "libensemble.executors.mpi_runner.MPIRunner"
   ]
  },
  "type": "class"
 },
 "libensemble.executors.mpi_runner.SRUN_MPIRunner.__init__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "libensemble.executors.mpi_runner.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_runner.jassert": {
  "data": {
   "shadows": "libensemble.executors.executor.jassert"
  },
  "type": "import"
 },
 "libensemble.executors.mpi_runner.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "libensemble.executors.mpi_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.executors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.executors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.gen_funcs": {
  "data": {
   "symbols_in_volume": [
    "__import__",
    "__name__",
    "libensemble.gen_funcs.rc"
   ]
  },
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_aposmm": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_aposmm.ConvergedMsg": {
  "data": {
   "shadows": "libensemble.gen_funcs.aposmm_localopt_support.ConvergedMsg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.LocalOptInterfacer": {
  "data": {
   "shadows": "libensemble.gen_funcs.aposmm_localopt_support.LocalOptInterfacer"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.gen_funcs.persistent_aposmm.add_k_sample_points_to_local_H": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.persistent_aposmm.add_to_local_H",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.add_to_local_H": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.persistent_aposmm.initialize_dists_and_inds",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.aposmm": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NameError",
    "isinstance",
    "len",
    "libensemble.gen_funcs.aposmm_localopt_support.ConvergedMsg",
    "libensemble.gen_funcs.aposmm_localopt_support.LocalOptInterfacer",
    "libensemble.gen_funcs.aposmm_localopt_support.simulate_recv_from_manager",
    "libensemble.gen_funcs.persistent_aposmm.add_k_sample_points_to_local_H",
    "libensemble.gen_funcs.persistent_aposmm.add_to_local_H",
    "libensemble.gen_funcs.persistent_aposmm.clean_up_and_stop",
    "libensemble.gen_funcs.persistent_aposmm.decide_where_to_start_localopt",
    "libensemble.gen_funcs.persistent_aposmm.initialize_APOSMM",
    "libensemble.gen_funcs.persistent_aposmm.initialize_children",
    "libensemble.gen_funcs.persistent_aposmm.update_history_optimal",
    "libensemble.gen_funcs.persistent_aposmm.update_local_H_after_receiving",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.tools.gen_support.get_mgr_worker_msg",
    "libensemble.tools.gen_support.send_mgr_worker_msg",
    "list",
    "numpy.inf",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.calc_rk": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "int",
    "math.log",
    "numpy.floor",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.clean_up_and_stop": {
  "data": {
   "lineno": 686
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.decide_where_to_start_localopt": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "libensemble.gen_funcs.persistent_aposmm.calc_rk",
    "list",
    "numpy.all",
    "numpy.argsort",
    "numpy.array",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.ix_",
    "numpy.logical_and.reduce",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.gamma": {
  "data": {
   "shadows": "mpmath.gamma"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.get_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.get_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.initialize_APOSMM": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "any",
    "bool",
    "float",
    "int",
    "isinstance",
    "len",
    "libensemble.gen_funcs.persistent_aposmm.initialize_dists_and_inds",
    "libensemble.gen_funcs.persistent_aposmm.update_history_dist",
    "math.pi",
    "math.sqrt",
    "mpmath.gamma",
    "numpy.all",
    "numpy.ndarray",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.initialize_children": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.initialize_dists_and_inds": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.send_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.send_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.simulate_recv_from_manager": {
  "data": {
   "shadows": "libensemble.gen_funcs.aposmm_localopt_support.simulate_recv_from_manager"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_aposmm.update_history_dist": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.any",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.logical_and",
    "numpy.logical_and.reduce",
    "numpy.min",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.update_history_optimal": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.argmin",
    "numpy.linalg.norm",
    "numpy.logical_and",
    "numpy.unique",
    "print",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_aposmm.update_local_H_after_receiving": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.persistent_aposmm.update_history_dist",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.base": {
  "data": {
   "shadows": "deap.base"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.creator": {
  "data": {
   "shadows": "deap.creator"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.deap_nsga2": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "deap.tools.selTournamentDCD",
    "enumerate",
    "float",
    "isinstance",
    "len",
    "libensemble.gen_funcs.persistent_deap_nsga2.array",
    "libensemble.gen_funcs.persistent_deap_nsga2.evaluate_pop",
    "libensemble.gen_funcs.persistent_deap_nsga2.nsga2_toolbox",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "list",
    "max",
    "numpy.min",
    "numpy.random.uniform",
    "numpy.zeros",
    "print",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.evaluate_pop": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "isinstance",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.tools.gen_support.sendrecv_mgr_worker_msg",
    "list"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.nsga2_toolbox": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "deap.base.Fitness",
    "deap.base.Toolbox",
    "deap.creator.Individual",
    "deap.creator.MyFitness",
    "deap.creator.create",
    "deap.tools.cxSimulatedBinaryBounded",
    "deap.tools.initIterate",
    "deap.tools.initRepeat",
    "deap.tools.mutPolynomialBounded",
    "deap.tools.selNSGA2",
    "libensemble.gen_funcs.persistent_deap_nsga2.array",
    "libensemble.gen_funcs.persistent_deap_nsga2.uniform",
    "list"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.sendrecv_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.sendrecv_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.tools": {
  "data": {
   "shadows": "deap.tools"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_deap_nsga2.uniform": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "zip"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.build_H0": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "numpy.eye",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.fd_param_finder": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.persistent_fd_param_finder.build_H0",
    "libensemble.gen_funcs.persistent_fd_param_finder.os",
    "libensemble.gen_funcs.persistent_fd_param_finder.subprocess",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.tools.gen_support.sendrecv_mgr_worker_msg",
    "numpy.all",
    "numpy.array",
    "numpy.loadtxt",
    "numpy.logical_and.reduce",
    "numpy.meshgrid",
    "numpy.ones_like",
    "numpy.unique",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.sendrecv_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.sendrecv_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_fd_param_finder.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes.persistent_updater_after_likelihood": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.tools.gen_support.sendrecv_mgr_worker_msg",
    "numpy.all",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_inverse_bayes.sendrecv_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.sendrecv_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_tasmanian.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian.Tasmanian": {
  "data": {
   "shadows": "Tasmanian"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian.sendrecv_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.sendrecv_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_tasmanian.sparse_grid": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.persistent_tasmanian.Tasmanian",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.tools.gen_support.sendrecv_mgr_worker_msg",
    "numpy.atleast_2d",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling.persistent_uniform": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.tools.gen_support.sendrecv_mgr_worker_msg",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.persistent_uniform_sampling.sendrecv_mgr_worker_msg": {
  "data": {
   "shadows": "libensemble.tools.gen_support.sendrecv_mgr_worker_msg"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.rc": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.sampling": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.sampling.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "libensemble.gen_funcs.sampling.latin_hypercube_sample": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.sampling.lhs_sample",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.sampling.lhs_sample": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.permutation",
    "numpy.random.uniform",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.sampling.uniform_random_sample": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.sampling.uniform_random_sample_obj_components": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.tile",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.sampling.uniform_random_sample_with_different_nodes_and_ranks": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.gen_funcs.vtmop": {
  "data": {},
  "type": "module"
 },
 "libensemble.gen_funcs.vtmop.FortranFile": {
  "data": {
   "shadows": "scipy.io.FortranFile"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.vtmop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.vtmop.system": {
  "data": {
   "shadows": "os.system"
  },
  "type": "import"
 },
 "libensemble.gen_funcs.vtmop.vtmop_gen": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.size",
    "numpy.zeros",
    "os.system",
    "range",
    "scipy.io.FortranFile"
   ]
  },
  "type": "function"
 },
 "libensemble.history": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.history.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.history.History": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "libensemble.history.History.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.fields_keys.libE_fields",
    "list",
    "numpy.arange",
    "numpy.inf",
    "numpy.zeros",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.history.History.grow_H": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.inf",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.history.History.trim_H": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "libensemble.history.History.update_history_f": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "libensemble.history.History.update_history_x_in": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "libensemble.history.time",
    "numpy.all",
    "numpy.arange",
    "numpy.in1d",
    "numpy.max",
    "numpy.setdiff1d",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.history.History.update_history_x_out": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "libensemble.history.time",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "libensemble.history.libE_fields": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.libE_fields"
  },
  "type": "import"
 },
 "libensemble.history.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "libensemble.history.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.history.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.history.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.libE": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.libE.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.libE.ClientQCommManager": {
  "data": {
   "shadows": "libensemble.comms.tcp_mgr.ClientQCommManager"
  },
  "type": "import"
 },
 "libensemble.libE.DupComm": {
  "data": {
   "lineno": 182
  },
  "type": "class"
 },
 "libensemble.libE.DupComm.__enter__": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "libensemble.libE.DupComm.__exit__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "libensemble.libE.DupComm.__init__": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "libensemble.libE.Executor": {
  "data": {
   "shadows": "libensemble.executors.executor.Executor"
  },
  "type": "import"
 },
 "libensemble.libE.History": {
  "data": {
   "shadows": "libensemble.history.History"
  },
  "type": "import"
 },
 "libensemble.libE.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.libE.MainMPIComm": {
  "data": {
   "shadows": "libensemble.comms.mpi.MainMPIComm"
  },
  "type": "import"
 },
 "libensemble.libE.ManagerException": {
  "data": {
   "shadows": "libensemble.libE_manager.ManagerException"
  },
  "type": "import"
 },
 "libensemble.libE.QCommProcess": {
  "data": {
   "shadows": "libensemble.comms.comms.QCommProcess"
  },
  "type": "import"
 },
 "libensemble.libE.ServerQCommManager": {
  "data": {
   "shadows": "libensemble.comms.tcp_mgr.ServerQCommManager"
  },
  "type": "import"
 },
 "libensemble.libE.Timeout": {
  "data": {
   "shadows": "libensemble.comms.comms.Timeout"
  },
  "type": "import"
 },
 "libensemble.libE.Timer": {
  "data": {
   "shadows": "libensemble.utils.timer.Timer"
  },
  "type": "import"
 },
 "libensemble.libE._USER_SIM_ID_WARNING": {
  "data": {
   "shadows": "libensemble.tools.tools._USER_SIM_ID_WARNING"
  },
  "type": "import"
 },
 "libensemble.libE.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "libensemble.libE._report_manager_exception": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "libensemble.libE.logger",
    "libensemble.libE.pickle",
    "libensemble.libE.traceback",
    "numpy.save",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.alloc_defaults": {
  "data": {
   "shadows": "libensemble.alloc_funcs.defaults"
  },
  "type": "import"
 },
 "libensemble.libE.check_inputs": {
  "data": {
   "shadows": "libensemble.tools.check_inputs.check_inputs"
  },
  "type": "import"
 },
 "libensemble.libE.comms_abort": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "libensemble.libE.get_ip": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "libensemble.libE.socket"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.kill_proc_team": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "libensemble.comms.comms.Timeout"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.launcher": {
  "data": {
   "shadows": "libensemble.utils.launcher"
  },
  "type": "import"
 },
 "libensemble.libE.libE": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libensemble.alloc_funcs.defaults.alloc_specs",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_local": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "libensemble.comms.logs.manager_logging_config",
    "libensemble.executors.executor.Executor.executor",
    "libensemble.history.History",
    "libensemble.libE.libE_manager",
    "libensemble.libE.os",
    "libensemble.libE.socket",
    "libensemble.libE.start_proc_team",
    "libensemble.tools.check_inputs.check_inputs",
    "multiprocessing.set_start_method"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_local.cleanup": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "libensemble.libE.kill_proc_team"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_manager": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "libensemble.libE._report_manager_exception",
    "libensemble.libE.logger",
    "libensemble.libE_manager.ManagerException",
    "libensemble.libE_manager.manager_main",
    "libensemble.tools.tools._USER_SIM_ID_WARNING",
    "on_abort",
    "on_cleanup"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_mpi": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.libE.DupComm",
    "libensemble.libE.libE_mpi_defaults",
    "libensemble.libE.libE_mpi_manager",
    "libensemble.libE.libE_mpi_worker",
    "libensemble.libE.socket",
    "libensemble.tools.check_inputs.check_inputs",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_mpi_defaults": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_NULL",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_mpi_manager": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "libensemble.comms.logs.manager_logging_config",
    "libensemble.comms.mpi.MainMPIComm",
    "libensemble.history.History",
    "libensemble.libE.libE_manager",
    "on_abort",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_mpi_manager.on_abort": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "libensemble.libE.comms_abort"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_mpi_worker": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "libensemble.comms.mpi.MainMPIComm",
    "libensemble.libE.logger",
    "libensemble.libE_worker.worker_main"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.libE.libE_tcp_mgr",
    "libensemble.libE.libE_tcp_worker",
    "libensemble.libE.socket",
    "libensemble.tools.check_inputs.check_inputs"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_authkey": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "libensemble.libE.random"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_default_ID": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "libensemble.libE.get_ip",
    "libensemble.libE.os"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_mgr": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "launchf",
    "len",
    "libensemble.comms.logs.manager_logging_config",
    "libensemble.comms.tcp_mgr.ServerQCommManager",
    "libensemble.history.History",
    "libensemble.libE.get_ip",
    "libensemble.libE.libE_manager",
    "libensemble.libE.libE_tcp_authkey",
    "libensemble.libE.libE_tcp_start_team",
    "libensemble.libE.libE_tcp_worker_launcher",
    "libensemble.libE.logger"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_mgr.cleanup": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "libensemble.utils.launcher.cancel"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_start_team": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "launchf",
    "libensemble.libE.logger",
    "libensemble.utils.timer.Timer",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_worker": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "libensemble.comms.tcp_mgr.ClientQCommManager",
    "libensemble.libE.logger",
    "libensemble.libE_worker.worker_main"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_worker_launcher": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "libensemble.libE.libE_tcp_worker_launcher.worker_launcher": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "libensemble.utils.launcher.launch"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.libE.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.libE.manager_logging_config": {
  "data": {
   "shadows": "libensemble.comms.logs.manager_logging_config"
  },
  "type": "import"
 },
 "libensemble.libE.manager_main": {
  "data": {
   "shadows": "libensemble.libE_manager.manager_main"
  },
  "type": "import"
 },
 "libensemble.libE.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.libE.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.libE.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "libensemble.libE.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "libensemble.libE.set_start_method": {
  "data": {
   "shadows": "multiprocessing.set_start_method"
  },
  "type": "import"
 },
 "libensemble.libE.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "libensemble.libE.start_proc_team": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "libensemble.comms.comms.QCommProcess",
    "libensemble.libE_worker.worker_main",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.libE.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "libensemble.libE.worker_main": {
  "data": {
   "shadows": "libensemble.libE_worker.worker_main"
  },
  "type": "import"
 },
 "libensemble.libE_logger": {
  "data": {
   "shadows": "libensemble.libE_logger"
  },
  "type": "import"
 },
 "libensemble.libE_logger.LogConfig": {
  "data": {
   "shadows": "libensemble.comms.logs.LogConfig"
  },
  "type": "import"
 },
 "libensemble.libE_logger.MANAGER_WARNING": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "libensemble.libE_logger.get_level": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libensemble.comms.logs.LogConfig.config"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_logger.get_stderr_level": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "libensemble.comms.logs.LogConfig.config"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.libE_logger.manager_warning": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libensemble.libE_logger.MANAGER_WARNING"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_logger.set_filename": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "libensemble.comms.logs.LogConfig.config",
    "libensemble.libE_logger.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_logger.set_level": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libensemble.comms.logs.LogConfig.config"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_logger.set_stderr_level": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libensemble.comms.logs.LogConfig.config"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.libE_manager.logging",
    "numpy.__version__.split",
    "tuple"
   ]
  },
  "type": "module"
 },
 "libensemble.libE_manager.CommFinishedException": {
  "data": {
   "shadows": "libensemble.comms.comms.CommFinishedException"
  },
  "type": "import"
 },
 "libensemble.libE_manager.EVAL_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_manager.EVAL_SIM_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_SIM_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_manager.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_manager.FINISHED_PERSISTENT_SIM_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_SIM_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_manager.MAN_SIGNAL_FINISH": {
  "data": {
   "shadows": "libensemble.message_numbers.MAN_SIGNAL_FINISH"
  },
  "type": "import"
 },
 "libensemble.libE_manager.MAN_SIGNAL_KILL": {
  "data": {
   "shadows": "libensemble.message_numbers.MAN_SIGNAL_KILL"
  },
  "type": "import"
 },
 "libensemble.libE_manager.Manager": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "class"
 },
 "libensemble.libE_manager.Manager.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "any",
    "len",
    "libensemble.libE_manager.Manager",
    "libensemble.tools.fields_keys.libE_spec_calc_dir_combined",
    "libensemble.utils.timer.Timer",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._alloc_work": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "alloc_f",
    "dict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._check_received_calc": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.FINISHED_PERSISTENT_SIM_TAG",
    "libensemble.message_numbers.MAN_SIGNAL_FINISH",
    "libensemble.message_numbers.MAN_SIGNAL_KILL",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.TASK_FAILED",
    "libensemble.message_numbers.UNSET_TAG",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.message_numbers.WORKER_KILL",
    "libensemble.message_numbers.WORKER_KILL_ON_ERR",
    "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._check_work_order": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._final_receive_and_kill": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "any",
    "libensemble.libE_manager._WALLCLOCK_MSG_ACTIVE",
    "libensemble.libE_manager._WALLCLOCK_MSG_ALL_RETURNED",
    "libensemble.libE_manager.logger",
    "libensemble.message_numbers.MAN_SIGNAL_KILL",
    "libensemble.message_numbers.PERSIS_STOP"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._handle_msg_from_worker": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "isinstance",
    "libensemble.comms.comms.CommFinishedException",
    "libensemble.libE_manager.ManagerException",
    "libensemble.libE_manager.logger",
    "libensemble.libE_manager.logging",
    "libensemble.libE_worker.WorkerErrMsg"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._kill_workers": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "libensemble.message_numbers.MAN_SIGNAL_FINISH",
    "libensemble.message_numbers.STOP_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._receive_from_workers": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._save_every_k": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "libensemble.libE_manager.glob",
    "libensemble.libE_manager.os",
    "numpy.save"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._save_every_k_gens": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._save_every_k_sims": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._send_work_order": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "dir",
    "len",
    "libensemble.libE_manager.logger",
    "numpy.lib.recfunctions.repack_fields"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._update_state_on_alloc": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_SIM_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager._update_state_on_worker_msg": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "len",
    "libensemble.libE_manager.Manager",
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.FINISHED_PERSISTENT_SIM_TAG",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.check_ensemble_dir": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "FileNotFoundError",
    "OSError",
    "libensemble.libE_manager.ManagerException",
    "libensemble.libE_manager.logger",
    "libensemble.libE_manager.os",
    "libensemble.tools.tools._USER_CALC_DIR_WARNING.format"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.make_copyback_dir": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "libensemble.libE_manager.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.run": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "any",
    "libensemble.libE_manager.logger",
    "libensemble.libE_manager.socket",
    "libensemble.libE_manager.sys"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.term_test": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "libensemble.libE_manager.logger",
    "testf"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.term_test_gen_max": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.term_test_sim_max": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.term_test_stop_val": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "libensemble.libE_manager.filter_nans",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.Manager.term_test_wallclock": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "libensemble.libE_manager.ManagerException": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.libE_manager.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.libE_manager.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_manager.TASK_FAILED": {
  "data": {
   "shadows": "libensemble.message_numbers.TASK_FAILED"
  },
  "type": "import"
 },
 "libensemble.libE_manager.Timer": {
  "data": {
   "shadows": "libensemble.utils.timer.Timer"
  },
  "type": "import"
 },
 "libensemble.libE_manager.UNSET_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.UNSET_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_manager.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.libE_manager.WORKER_KILL": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL"
  },
  "type": "import"
 },
 "libensemble.libE_manager.WORKER_KILL_ON_ERR": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_ERR"
  },
  "type": "import"
 },
 "libensemble.libE_manager.WORKER_KILL_ON_TIMEOUT": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT"
  },
  "type": "import"
 },
 "libensemble.libE_manager.WorkerErrMsg": {
  "data": {
   "shadows": "libensemble.libE_worker.WorkerErrMsg"
  },
  "type": "import"
 },
 "libensemble.libE_manager._USER_CALC_DIR_WARNING": {
  "data": {
   "shadows": "libensemble.tools.tools._USER_CALC_DIR_WARNING"
  },
  "type": "import"
 },
 "libensemble.libE_manager._WALLCLOCK_MSG_ACTIVE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "libensemble.libE_manager._WALLCLOCK_MSG_ALL_RETURNED": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "libensemble.libE_manager.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "libensemble.libE_manager.filter_nans": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "libensemble.libE_manager.libE_spec_calc_dir_combined": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.libE_spec_calc_dir_combined"
  },
  "type": "import"
 },
 "libensemble.libE_manager.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.libE_manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.libE_manager.manager_main": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libensemble.libE_manager.Manager",
    "libensemble.libE_manager.cProfile",
    "libensemble.libE_manager.pstats",
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_manager.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.libE_manager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.libE_manager.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "libensemble.libE_manager.repack_fields": {
  "data": {
   "shadows": "numpy.lib.recfunctions.repack_fields"
  },
  "type": "import"
 },
 "libensemble.libE_manager.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "libensemble.libE_manager.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.libE_worker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.libE_worker.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.libE_worker.CALC_EXCEPTION": {
  "data": {
   "shadows": "libensemble.message_numbers.CALC_EXCEPTION"
  },
  "type": "import"
 },
 "libensemble.libE_worker.EVAL_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_worker.EVAL_SIM_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_SIM_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_worker.Executor": {
  "data": {
   "shadows": "libensemble.executors.executor.Executor"
  },
  "type": "import"
 },
 "libensemble.libE_worker.LocationStack": {
  "data": {
   "shadows": "libensemble.utils.loc_stack.LocationStack"
  },
  "type": "import"
 },
 "libensemble.libE_worker.LogConfig": {
  "data": {
   "shadows": "libensemble.comms.logs.LogConfig"
  },
  "type": "import"
 },
 "libensemble.libE_worker.MAN_SIGNAL_FINISH": {
  "data": {
   "shadows": "libensemble.message_numbers.MAN_SIGNAL_FINISH"
  },
  "type": "import"
 },
 "libensemble.libE_worker.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.libE_worker.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_worker.Timer": {
  "data": {
   "shadows": "libensemble.utils.timer.Timer"
  },
  "type": "import"
 },
 "libensemble.libE_worker.UNSET_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.UNSET_TAG"
  },
  "type": "import"
 },
 "libensemble.libE_worker.Worker": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "libensemble.libE_worker.Worker.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "itertools.count",
    "libensemble.libE_worker.Worker",
    "libensemble.libE_worker.os",
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._copy_back": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "FileExistsError",
    "dir",
    "libensemble.libE_worker.os",
    "libensemble.libE_worker.re",
    "libensemble.libE_worker.shutil"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._determine_dir_then_calc": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "calc",
    "libensemble.libE_worker.Worker",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.message_numbers.calc_type_strings",
    "libensemble.utils.loc_stack.LocationStack",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._extract_H_ranges": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "enumerate",
    "itertools.groupby",
    "len",
    "list",
    "map",
    "operator.itemgetter",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._handle": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "libensemble.libE_worker.logger",
    "libensemble.message_numbers.MAN_SIGNAL_FINISH"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._handle_calc": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "Exception",
    "calc",
    "isinstance",
    "len",
    "libensemble.comms.logs.LogConfig.config.stats_name",
    "libensemble.executors.executor.Executor.executor.list_of_tasks",
    "libensemble.libE_worker.logger",
    "libensemble.libE_worker.logging",
    "libensemble.libE_worker.task_timing",
    "libensemble.message_numbers.CALC_EXCEPTION",
    "libensemble.message_numbers.MAN_SIGNAL_FINISH",
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG",
    "libensemble.message_numbers.UNSET_TAG",
    "libensemble.message_numbers.calc_status_strings.get",
    "libensemble.message_numbers.calc_type_strings",
    "libensemble.utils.timer.Timer",
    "next",
    "tuple"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._make_calc_dir": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "dir",
    "len",
    "libensemble.libE_worker.os",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._make_runners": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._make_runners.run_gen": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "gen_f"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._make_runners.run_sim": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "sim_f"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._recv_H_rows": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "len",
    "libensemble.libE_worker.logger",
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.message_numbers.calc_type_strings",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._set_executor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "libensemble.executors.executor.Executor",
    "libensemble.executors.executor.Executor.executor",
    "libensemble.libE_worker.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker._use_calc_dirs": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "any",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.tools.fields_keys.libE_spec_gen_dir_keys",
    "libensemble.tools.fields_keys.libE_spec_sim_dir_keys",
    "type"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.Worker.run": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "Exception",
    "itertools.count",
    "libensemble.libE_worker.WorkerErrMsg",
    "libensemble.libE_worker.logger",
    "libensemble.libE_worker.socket",
    "libensemble.message_numbers.STOP_TAG",
    "str",
    "traceback.format_exc"
   ]
  },
  "type": "function"
 },
 "libensemble.libE_worker.WorkerErrMsg": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "libensemble.libE_worker.WorkerErrMsg.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "libensemble.libE_worker.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "libensemble.libE_worker.calc_status_strings": {
  "data": {
   "shadows": "libensemble.message_numbers.calc_status_strings"
  },
  "type": "import"
 },
 "libensemble.libE_worker.calc_type_strings": {
  "data": {
   "shadows": "libensemble.message_numbers.calc_type_strings"
  },
  "type": "import"
 },
 "libensemble.libE_worker.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "libensemble.libE_worker.format_exc": {
  "data": {
   "shadows": "traceback.format_exc"
  },
  "type": "import"
 },
 "libensemble.libE_worker.groupby": {
  "data": {
   "shadows": "itertools.groupby"
  },
  "type": "import"
 },
 "libensemble.libE_worker.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "libensemble.libE_worker.libE_spec_gen_dir_keys": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.libE_spec_gen_dir_keys"
  },
  "type": "import"
 },
 "libensemble.libE_worker.libE_spec_sim_dir_keys": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.libE_spec_sim_dir_keys"
  },
  "type": "import"
 },
 "libensemble.libE_worker.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.libE_worker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.libE_worker.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "libensemble.libE_worker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.libE_worker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.libE_worker.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "libensemble.libE_worker.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libensemble.libE_worker.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.libE_worker.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "libensemble.libE_worker.task_timing": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.libE_worker.worker_logging_config": {
  "data": {
   "shadows": "libensemble.comms.logs.worker_logging_config"
  },
  "type": "import"
 },
 "libensemble.libE_worker.worker_main": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libensemble.comms.logs.worker_logging_config",
    "libensemble.libE_worker.Worker",
    "libensemble.libE_worker.cProfile",
    "libensemble.libE_worker.pstats",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.message_numbers": {
  "data": {
   "symbols_in_volume": [
    "libensemble.message_numbers.CALC_EXCEPTION",
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.message_numbers.FINISHED_PERSISTENT_SIM_TAG",
    "libensemble.message_numbers.MAN_SIGNAL_FINISH",
    "libensemble.message_numbers.MAN_SIGNAL_KILL",
    "libensemble.message_numbers.TASK_FAILED",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.message_numbers.WORKER_KILL",
    "libensemble.message_numbers.WORKER_KILL_ON_ERR",
    "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT"
   ]
  },
  "type": "module"
 },
 "libensemble.message_numbers.CALC_EXCEPTION": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.message_numbers.EVAL_GEN_TAG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "libensemble.message_numbers.EVAL_SIM_TAG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.message_numbers.FINISHED_PERSISTENT_SIM_TAG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.message_numbers.MAN_SIGNAL_FINISH": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.message_numbers.MAN_SIGNAL_KILL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.message_numbers.PERSIS_STOP": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "libensemble.message_numbers.STOP_TAG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "libensemble.message_numbers.TASK_FAILED": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.message_numbers.UNSET_TAG": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "libensemble.message_numbers.WORKER_DONE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.message_numbers.WORKER_KILL": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.message_numbers.WORKER_KILL_ON_ERR": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libensemble.message_numbers.calc_status_strings": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.message_numbers.calc_type_strings": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "libensemble.resources": {
  "data": {},
  "type": "module"
 },
 "libensemble.resources.env_resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.resources.env_resources.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.resources.env_resources.EnvResources": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "libensemble.resources.env_resources.EnvResources.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources._noderange_append": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources._range_split": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.abbrev_nodenames": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.cobalt_abbrev_nodenames": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.get_cobalt_nodelist": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "int",
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.env_resources.os",
    "range",
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "collections.OrderedDict.fromkeys",
    "libensemble.resources.env_resources.os",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist_frm_shortform": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "iter",
    "libensemble.resources.env_resources.os",
    "list",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.get_nodelist": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "get_list_func",
    "libensemble.resources.env_resources.logger"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.env_resources.os",
    "range",
    "sorted",
    "staticmethod",
    "str",
    "str.split"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.EnvResources.shortnames": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.env_resources.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "libensemble.resources.env_resources.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.resources.env_resources.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.resources.env_resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.resources.mpi_resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.resources.mpi_resources.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.resources.mpi_resources.MPIResources": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libensemble.resources.resources.Resources"
   ]
  },
  "type": "class"
 },
 "libensemble.resources.mpi_resources.MPIResources.create_machinefile": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Exception",
    "libensemble.resources.mpi_resources.logger",
    "libensemble.resources.mpi_resources.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.mpi_resources.MPIResources.get_hostlist": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.mpi_resources.MPIResources.get_resources": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "libensemble.resources.mpi_resources.MPIResources",
    "libensemble.resources.mpi_resources.logger",
    "libensemble.resources.mpi_resources.rassert"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.mpi_resources.MPIResources.task_partition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "libensemble.resources.mpi_resources.logger",
    "libensemble.resources.mpi_resources.rassert",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.mpi_resources.Resources": {
  "data": {
   "shadows": "libensemble.resources.resources.Resources"
  },
  "type": "import"
 },
 "libensemble.resources.mpi_resources.ResourcesException": {
  "data": {
   "shadows": "libensemble.resources.resources.ResourcesException"
  },
  "type": "import"
 },
 "libensemble.resources.mpi_resources.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "libensemble.resources.mpi_resources.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.resources.mpi_resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.resources.mpi_resources.rassert": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libensemble.resources.resources.ResourcesException"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.resources.node_resources._print_local_cpu_resources",
    "libensemble.resources.node_resources.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.resources.node_resources.REMOTE_LAUNCH_LIST": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "libensemble.resources.node_resources._get_cpu_resources_from_env": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "int",
    "iter",
    "len",
    "libensemble.resources.node_resources.collections",
    "libensemble.resources.node_resources.logger",
    "libensemble.resources.node_resources.os",
    "list",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources._get_local_cpu_resources": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libensemble.resources.node_resources.get_cpu_cores"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources._get_remote_cpu_resources": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libensemble.resources.node_resources.subprocess"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources._print_local_cpu_resources": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libensemble.resources.node_resources._get_local_cpu_resources",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "libensemble.resources.node_resources.get_cpu_cores": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libensemble.resources.node_resources.psutil"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources.get_sub_node_resources": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "int",
    "libensemble.resources.node_resources.REMOTE_LAUNCH_LIST",
    "libensemble.resources.node_resources._get_cpu_resources_from_env",
    "libensemble.resources.node_resources._get_local_cpu_resources",
    "libensemble.resources.node_resources._get_remote_cpu_resources"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.node_resources.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "libensemble.resources.node_resources.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.resources.node_resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.resources.node_resources.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "libensemble.resources.node_resources.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.resources.resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.resources.resources.logging"
   ]
  },
  "type": "module"
 },
 "libensemble.resources.resources.EnvResources": {
  "data": {
   "shadows": "libensemble.resources.env_resources.EnvResources"
  },
  "type": "import"
 },
 "libensemble.resources.resources.Resources": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "libensemble.resources.resources.Resources.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.node_resources.get_sub_node_resources",
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.logger",
    "libensemble.resources.resources.os",
    "libensemble.resources.resources.socket"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.Resources.add_comm_info": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "filter",
    "len",
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.logger",
    "list"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.Resources.best_split": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "divmod",
    "len",
    "min",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.Resources.get_MPI_variant": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "libensemble.resources.resources.subprocess",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.Resources.get_global_nodelist": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "libensemble.resources.resources.ResourcesException",
    "libensemble.resources.resources.logger",
    "libensemble.resources.resources.os",
    "libensemble.resources.resources.socket",
    "open",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.Resources.remove_nodes": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "filter",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.Resources.set_worker_resources": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "libensemble.resources.resources.WorkerResources"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.ResourcesException": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.resources.resources.WorkerResources": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "libensemble.resources.resources.WorkerResources.__init__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "len",
    "libensemble.resources.resources.WorkerResources"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.WorkerResources.get_local_nodelist": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "divmod",
    "len",
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.ResourcesException",
    "libensemble.resources.resources.WorkerResources",
    "libensemble.resources.resources.itertools",
    "libensemble.resources.resources.logger",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.WorkerResources.get_workers_on_a_node": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.WorkerResources.map_workerid_to_index": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "libensemble.resources.resources.ResourcesException",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libensemble.resources.resources.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "libensemble.resources.resources.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "libensemble.resources.resources.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.resources.resources.node_resources": {
  "data": {
   "shadows": "libensemble.resources.node_resources"
  },
  "type": "import"
 },
 "libensemble.resources.resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.resources.resources.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "libensemble.resources.resources.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.sim_funcs": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.borehole": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "module"
 },
 "libensemble.sim_funcs.borehole.borehole": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libensemble.sim_funcs.borehole.borehole_func",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.borehole.borehole_func": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libensemble.sim_funcs.borehole.bounds",
    "numpy.all",
    "numpy.log",
    "numpy.pi",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.borehole.bounds": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.borehole.gen_borehole_input": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.random.lognormal",
    "numpy.random.normal",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.borehole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.branin": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.branin.branin": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "libensemble.sim_funcs.branin.branin.branin",
    "libensemble.sim_funcs.branin.branin.f",
    "libensemble.sim_funcs.branin.branin.x",
    "numpy.loadtxt",
    "numpy.savetxt"
   ]
  },
  "type": "module"
 },
 "libensemble.sim_funcs.branin.branin.branin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.pi",
    "pow"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.branin.branin.f": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.branin.branin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.branin.branin.x": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.branin.branin_obj": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.branin.branin_obj.branin": {
  "data": {
   "shadows": "libensemble.sim_funcs.branin.branin.branin"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.branin.branin_obj.call_branin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libensemble.sim_funcs.branin.branin.branin",
    "libensemble.sim_funcs.branin.branin_obj.time",
    "numpy.random.uniform",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.branin.branin_obj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.branin.branin_obj.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.chwirut1": {
  "data": {
   "symbols_in_volume": [
    "libensemble.sim_funcs.chwirut1.t",
    "libensemble.sim_funcs.chwirut1.y",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "libensemble.sim_funcs.chwirut1.EvaluateFunction": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "libensemble.sim_funcs.chwirut1.NOBSERVATIONS",
    "libensemble.sim_funcs.chwirut1.t",
    "libensemble.sim_funcs.chwirut1.y",
    "numpy.exp",
    "numpy.isnan",
    "numpy.nan",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.chwirut1.EvaluateJacobian": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "libensemble.sim_funcs.chwirut1.NOBSERVATIONS",
    "libensemble.sim_funcs.chwirut1.t",
    "numpy.exp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.chwirut1.NOBSERVATIONS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.chwirut1.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.chwirut1.chwirut_eval": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libensemble.sim_funcs.chwirut1.EvaluateFunction",
    "numpy.nan",
    "numpy.random.uniform",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.chwirut1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.chwirut1.t": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.chwirut1.y": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.comms_testing": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.comms_testing.float_x1000": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.comms_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.executor_hworld.MAN_SIGNAL_FINISH": {
  "data": {
   "shadows": "libensemble.message_numbers.MAN_SIGNAL_FINISH"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.TASK_FAILED": {
  "data": {
   "shadows": "libensemble.message_numbers.TASK_FAILED"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.UNSET_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.UNSET_TAG"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.WORKER_KILL_ON_ERR": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_ERR"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.WORKER_KILL_ON_TIMEOUT": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.executor_hworld.executor_hworld": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "libensemble.executors.mpi_executor.MPIExecutor.executor",
    "libensemble.message_numbers.TASK_FAILED",
    "libensemble.message_numbers.UNSET_TAG",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.sim_funcs.executor_hworld.polling_loop",
    "libensemble.sim_funcs.executor_hworld.sim_count",
    "libensemble.sim_funcs.executor_hworld.six_hump_camel_func",
    "list",
    "numpy.float64",
    "numpy.isclose",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.executor_hworld.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.executor_hworld.polling_loop": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libensemble.message_numbers.MAN_SIGNAL_FINISH",
    "libensemble.message_numbers.TASK_FAILED",
    "libensemble.message_numbers.UNSET_TAG",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.message_numbers.WORKER_KILL_ON_ERR",
    "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT",
    "libensemble.sim_funcs.executor_hworld.time",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.executor_hworld.sim_count": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.executor_hworld.six_hump_camel_func": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "libensemble.sim_funcs.executor_hworld.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.helloworld": {
  "data": {
   "symbols_in_volume": [
    "libensemble.sim_funcs.helloworld.name",
    "libensemble.sim_funcs.helloworld.rank",
    "libensemble.sim_funcs.helloworld.size",
    "libensemble.sim_funcs.helloworld.sys",
    "mpi4py.MPI.COMM_WORLD.Get_rank",
    "mpi4py.MPI.COMM_WORLD.Get_size",
    "mpi4py.MPI.Get_processor_name"
   ]
  },
  "type": "module"
 },
 "libensemble.sim_funcs.helloworld.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.helloworld.name": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.helloworld.rank": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.helloworld.size": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.helloworld.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.inverse_bayes": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.inverse_bayes.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.inverse_bayes.likelihood_calculator": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libensemble.sim_funcs.inverse_bayes.six_hump_camel_func",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.inverse_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.inverse_bayes.six_hump_camel_func": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "libensemble.sim_funcs.mop_funcs": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.mop_funcs.convex_mop": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.mop_funcs.dtlz2": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "len",
    "libensemble.sim_funcs.mop_funcs.math",
    "numpy.dot",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.mop_funcs.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.mop_funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.noisy_vector_mapping": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.noisy_vector_mapping.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.noisy_vector_mapping.func_wrapper": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libensemble.sim_funcs.noisy_vector_mapping.noisy_function",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.noisy_vector_mapping.noisy_function": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.noisy_vector_mapping.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.noisy_vector_mapping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.noisy_vector_mapping.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.one_d_func": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.one_d_func.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "libensemble.sim_funcs.one_d_func.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.one_d_func.one_d_example": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.periodic_func": {
  "data": {},
  "type": "module"
 },
 "libensemble.sim_funcs.periodic_func.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.periodic_func.func_wrapper": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libensemble.sim_funcs.periodic_func.periodic_func",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.periodic_func.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.sim_funcs.periodic_func.periodic_func": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "libensemble.sim_funcs.periodic_func.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "libensemble.tests": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.regression_tests": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.regression_tests.common": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.regression_tests.common.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.common.balsam": {
  "data": {
   "shadows": "balsam"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.common.build_simfunc": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libensemble.tests.regression_tests.common.subprocess"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.common.modify_Balsam_JobEnv": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "len",
    "libensemble.tests.regression_tests.common.balsam",
    "libensemble.tests.regression_tests.common.os",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.common.modify_Balsam_pyCoverage": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "libensemble.tests.regression_tests.common.balsam",
    "libensemble.tests.regression_tests.common.os",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.common.modify_Balsam_worker": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libensemble.tests.regression_tests.common.balsam",
    "libensemble.tests.regression_tests.common.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.common.mpi_comm_excl": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_NULL",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.common.mpi_comm_split": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.common.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.common.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "libensemble.executors.balsam_executor.BalsamMPIExecutor",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.message_numbers.TASK_FAILED",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.message_numbers.WORKER_KILL_ON_ERR",
    "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT",
    "libensemble.sim_funcs.executor_hworld.executor_hworld",
    "libensemble.sim_funcs.six_hump_camel.__file__",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.build_simfunc",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_desc_list_in",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_status_list",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_status_list_in",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.cores_per_task",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.exctr",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.exit_criteria",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.gen_specs",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.is_master",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.libE_specs",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.mpi4py",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.nworkers",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.os",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.persis_info",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.sim_app",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.sim_app2",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "mpi4py.MPI.COMM_WORLD",
    "mpi4py.MPI.COMM_WORLD.Get_rank",
    "mpi4py.MPI.COMM_WORLD.Get_size",
    "numpy.array",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.repeat",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.BalsamMPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.balsam_executor.BalsamMPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.TASK_FAILED": {
  "data": {
   "shadows": "libensemble.message_numbers.TASK_FAILED"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.WORKER_KILL_ON_ERR": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_ERR"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.WORKER_KILL_ON_TIMEOUT": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.build_simfunc": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libensemble.tests.regression_tests.script_test_balsam_hworld.os",
    "libensemble.tests.regression_tests.script_test_balsam_hworld.subprocess",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_desc_list": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_desc_list_in": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_status_list": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.calc_status_list_in": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.cores_per_task": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.exctr": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.executor_hworld": {
  "data": {
   "shadows": "libensemble.sim_funcs.executor_hworld.executor_hworld"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.exit_criteria": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.gen_specs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.is_master": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.libE_specs": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.mpi4py": {
  "data": {
   "shadows": "mpi4py"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.nworkers": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.persis_info": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.sim_app": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.sim_app2": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.sim_specs": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.six_hump_camel": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.script_test_balsam_hworld.uniform_random_sample": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.support": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.copy",
    "libensemble.tests.regression_tests.support.persis_info_1",
    "libensemble.tests.regression_tests.support.persis_info_2",
    "libensemble.tests.regression_tests.support.persis_info_3",
    "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out",
    "numpy.array",
    "numpy.inf",
    "numpy.random.RandomState",
    "set"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.support.aposmm_gen_out": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.branin_vals_and_minima": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.support.nan_func": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.support.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.support.persis_info_1": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.persis_info_2": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.persis_info_3": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.six_hump_camel_minima": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.support.write_sim_func": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.support.write_uniform_gen_func": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_1d_sampling": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.sampling.latin_hypercube_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.one_d_func.one_d_example",
    "libensemble.tests.regression_tests.test_1d_sampling.exit_criteria",
    "libensemble.tests.regression_tests.test_1d_sampling.gen_specs",
    "libensemble.tests.regression_tests.test_1d_sampling.persis_info",
    "libensemble.tests.regression_tests.test_1d_sampling.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "print"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.exit_criteria": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.latin_hypercube_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.gen_specs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.persis_info": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.one_d_func.one_d_example"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_sampling.sim_specs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.one_d_func.one_d_example",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.exit_criteria",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.exp_worker_ids",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.gen_specs",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.libE_specs",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.mpi_status",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.persis_info",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.sim_specs",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.sys",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.worker_ids",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.worker_rank",
    "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.world",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "list",
    "mpi4py.MPI.COMM_WORLD",
    "mpi4py.MPI.Status",
    "numpy.array",
    "print",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.exit_criteria": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.exp_worker_ids": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.gen_specs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.libE_specs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.mpi_status": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.persis_info": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.one_d_func.one_d_example"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.sim_specs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.worker_ids": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.worker_rank": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_uniform_sampling_with_comm_dup.world": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.sampling.latin_hypercube_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.one_d_func.one_d_example",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.data",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.exit_criteria",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.gen_specs",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.num_worker_funcs_profiled",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.os",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.persis_info",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.prof_files",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.sim_specs",
    "libensemble.tests.regression_tests.test_1d_with_profile_sampling.time",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "open",
    "print",
    "range",
    "str",
    "sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.data": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.exit_criteria": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.latin_hypercube_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.gen_specs": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.num_worker_funcs_profiled": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.persis_info": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.prof_files": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.one_d_func.one_d_example"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.sim_specs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_1d_with_profile_sampling.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort": {
  "data": {
   "symbols_in_volume": [
    "float",
    "libensemble.alloc_funcs.start_persistent_local_opt_gens.start_persistent_local_opt_gens",
    "libensemble.gen_funcs.uniform_or_localopt.uniform_or_localopt",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out",
    "libensemble.tests.regression_tests.test_active_persistent_worker_abort.alloc_specs",
    "libensemble.tests.regression_tests.test_active_persistent_worker_abort.exit_criteria",
    "libensemble.tests.regression_tests.test_active_persistent_worker_abort.gen_specs",
    "libensemble.tests.regression_tests.test_active_persistent_worker_abort.persis_info",
    "libensemble.tests.regression_tests.test_active_persistent_worker_abort.sim_specs",
    "libensemble.tests.regression_tests.test_active_persistent_worker_abort.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_persistent_local_opt_gens.start_persistent_local_opt_gens"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.alloc_specs": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.exit_criteria": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.uniform_or_localopt.uniform_or_localopt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.gen_specs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.persis_info": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.sim_specs": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_active_persistent_worker_abort.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception": {
  "data": {
   "symbols_in_volume": [
    "float",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.libE_manager.ManagerException",
    "libensemble.tests.regression_tests.test_calc_exception.exit_criteria",
    "libensemble.tests.regression_tests.test_calc_exception.gen_specs",
    "libensemble.tests.regression_tests.test_calc_exception.persis_info",
    "libensemble.tests.regression_tests.test_calc_exception.return_flag",
    "libensemble.tests.regression_tests.test_calc_exception.sim_specs",
    "libensemble.tests.regression_tests.test_calc_exception.six_hump_camel_err",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "print"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_calc_exception.ManagerException": {
  "data": {
   "shadows": "libensemble.libE_manager.ManagerException"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception.exit_criteria": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_calc_exception.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception.gen_specs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_calc_exception.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_calc_exception.persis_info": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_calc_exception.return_flag": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_calc_exception.sim_specs": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_calc_exception.six_hump_camel_err": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_comms": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.comms_testing.float_x1000",
    "libensemble.tests.regression_tests.test_comms.array_size",
    "libensemble.tests.regression_tests.test_comms.exit_criteria",
    "libensemble.tests.regression_tests.test_comms.gen_specs",
    "libensemble.tests.regression_tests.test_comms.persis_info",
    "libensemble.tests.regression_tests.test_comms.rounds",
    "libensemble.tests.regression_tests.test_comms.sim_max",
    "libensemble.tests.regression_tests.test_comms.sim_specs",
    "libensemble.tests.regression_tests.test_comms.x1",
    "libensemble.tests.regression_tests.test_comms.x2",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.all",
    "numpy.array",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_comms.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.array_size": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.exctr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.exit_criteria": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.gen_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.persis_info": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.rounds": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.comms_testing.float_x1000"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_comms.sim_max": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.sim_specs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.x1": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_comms.x2": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens",
    "libensemble.gen_funcs.persistent_deap_nsga2.deap_nsga2",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func",
    "libensemble.tests.regression_tests.test_deap_nsga2.H0",
    "libensemble.tests.regression_tests.test_deap_nsga2.alloc_specs",
    "libensemble.tests.regression_tests.test_deap_nsga2.deap_six_hump",
    "libensemble.tests.regression_tests.test_deap_nsga2.exit_criteria",
    "libensemble.tests.regression_tests.test_deap_nsga2.gen_specs",
    "libensemble.tests.regression_tests.test_deap_nsga2.ind_size",
    "libensemble.tests.regression_tests.test_deap_nsga2.lb",
    "libensemble.tests.regression_tests.test_deap_nsga2.ngen",
    "libensemble.tests.regression_tests.test_deap_nsga2.num_samp",
    "libensemble.tests.regression_tests.test_deap_nsga2.os",
    "libensemble.tests.regression_tests.test_deap_nsga2.persis_info",
    "libensemble.tests.regression_tests.test_deap_nsga2.pop_size",
    "libensemble.tests.regression_tests.test_deap_nsga2.script_name",
    "libensemble.tests.regression_tests.test_deap_nsga2.sim_specs",
    "libensemble.tests.regression_tests.test_deap_nsga2.ub",
    "libensemble.tests.regression_tests.test_deap_nsga2.w",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "min",
    "numpy.random.uniform",
    "numpy.zeros",
    "range",
    "sum",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.H0": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.alloc_specs": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.deap_six_hump": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.exit_criteria": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_deap_nsga2.deap_nsga2"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.gen_specs": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.ind_size": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.lb": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.ngen": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.num_objectives": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.num_samp": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.persis_info": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.pop_size": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.script_name": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.sim_specs": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.six_hump_camel_func": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.start_time": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.ub": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_deap_nsga2.w": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.test_elapsed_time_abort.alloc_specs",
    "libensemble.tests.regression_tests.test_elapsed_time_abort.exit_criteria",
    "libensemble.tests.regression_tests.test_elapsed_time_abort.gen_specs",
    "libensemble.tests.regression_tests.test_elapsed_time_abort.persis_info",
    "libensemble.tests.regression_tests.test_elapsed_time_abort.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.eprint",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.alloc_specs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.eprint": {
  "data": {
   "shadows": "libensemble.tools.eprint"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.exit_criteria": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.gen_specs": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.persis_info": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_elapsed_time_abort.sim_specs": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.give_pregenerated_work.give_pregenerated_sim_work",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.borehole.borehole",
    "libensemble.sim_funcs.borehole.gen_borehole_input",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.H0",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.alloc_specs",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.exit_criteria",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.gen_specs",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.n",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.n_samp",
    "libensemble.tests.regression_tests.test_evaluate_existing_sample.sim_specs",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.all",
    "numpy.array_equal",
    "numpy.random.seed",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.H0": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_pregenerated_work.give_pregenerated_sim_work"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.alloc_specs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.exit_criteria": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.gen_borehole_input": {
  "data": {
   "shadows": "libensemble.sim_funcs.borehole.gen_borehole_input"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.gen_specs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.n": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.n_samp": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.borehole.borehole"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_evaluate_existing_sample.sim_specs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "libensemble.executors.balsam_executor.BalsamMPIExecutor",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.message_numbers.TASK_FAILED",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.message_numbers.WORKER_KILL_ON_ERR",
    "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT",
    "libensemble.sim_funcs.executor_hworld.executor_hworld",
    "libensemble.sim_funcs.six_hump_camel.__file__",
    "libensemble.tests.regression_tests.common.build_simfunc",
    "libensemble.tests.regression_tests.test_executor_hworld.USE_BALSAM",
    "libensemble.tests.regression_tests.test_executor_hworld.calc_desc_list_in",
    "libensemble.tests.regression_tests.test_executor_hworld.calc_status_list",
    "libensemble.tests.regression_tests.test_executor_hworld.calc_status_list_in",
    "libensemble.tests.regression_tests.test_executor_hworld.cores_all_tasks",
    "libensemble.tests.regression_tests.test_executor_hworld.cores_per_task",
    "libensemble.tests.regression_tests.test_executor_hworld.exctr",
    "libensemble.tests.regression_tests.test_executor_hworld.exit_criteria",
    "libensemble.tests.regression_tests.test_executor_hworld.gen_specs",
    "libensemble.tests.regression_tests.test_executor_hworld.logical_cores",
    "libensemble.tests.regression_tests.test_executor_hworld.mess_resources",
    "libensemble.tests.regression_tests.test_executor_hworld.multiprocessing",
    "libensemble.tests.regression_tests.test_executor_hworld.os",
    "libensemble.tests.regression_tests.test_executor_hworld.persis_info",
    "libensemble.tests.regression_tests.test_executor_hworld.sim_app",
    "libensemble.tests.regression_tests.test_executor_hworld.sim_app2",
    "libensemble.tests.regression_tests.test_executor_hworld.sim_specs",
    "libensemble.tests.regression_tests.test_executor_hworld.use_auto_resources",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.repeat",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.BalsamMPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.balsam_executor.BalsamMPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.TASK_FAILED": {
  "data": {
   "shadows": "libensemble.message_numbers.TASK_FAILED"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.USE_BALSAM": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.WORKER_KILL_ON_ERR": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_ERR"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.WORKER_KILL_ON_TIMEOUT": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_KILL_ON_TIMEOUT"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.build_simfunc": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.common.build_simfunc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.calc_desc_list": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.calc_desc_list_in": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.calc_status_list": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.calc_status_list_in": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.cores_all_tasks": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.cores_per_task": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.exctr": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.exit_criteria": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.gen_specs": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.logical_cores": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.mess_resources": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.persis_info": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.sim_app": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.sim_app2": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.executor_hworld.executor_hworld"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.sim_specs": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.six_hump_camel": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_executor_hworld.use_auto_resources": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.alloc_funcs.fast_alloc.give_sim_work_first",
    "libensemble.alloc_funcs.only_one_gen_alloc.ensure_one_active_gen",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_simple",
    "libensemble.tests.regression_tests.test_fast_alloc.alloc_specs",
    "libensemble.tests.regression_tests.test_fast_alloc.exit_criteria",
    "libensemble.tests.regression_tests.test_fast_alloc.gen_specs",
    "libensemble.tests.regression_tests.test_fast_alloc.num_pts",
    "libensemble.tests.regression_tests.test_fast_alloc.persis_info",
    "libensemble.tests.regression_tests.test_fast_alloc.sim_specs",
    "libensemble.tests.regression_tests.test_fast_alloc.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.append",
    "numpy.array",
    "numpy.logspace",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.fast_alloc.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.alloc_f2": {
  "data": {
   "shadows": "libensemble.alloc_funcs.only_one_gen_alloc.ensure_one_active_gen"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.alloc_specs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.exit_criteria": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.gen_specs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.num_pts": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.persis_info": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_simple"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.sim_specs": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_fast_alloc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.inverse_bayes_allocf.only_persistent_gens_for_inverse_bayes",
    "libensemble.gen_funcs.persistent_inverse_bayes.persistent_updater_after_likelihood",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.inverse_bayes.likelihood_calculator",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.alloc_specs",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.exit_criteria",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.gen_specs",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.ind",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.persis_info",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.sim_specs",
    "libensemble.tests.regression_tests.test_inverse_bayes_example.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.inverse_bayes_allocf.only_persistent_gens_for_inverse_bayes"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.alloc_specs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.exit_criteria": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_inverse_bayes.persistent_updater_after_likelihood"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.gen_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.ind": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.persis_info": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.inverse_bayes.likelihood_calculator"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.sim_specs": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_inverse_bayes_example.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_comms": {
  "data": {
   "symbols_in_volume": [
    "len",
    "libensemble.tests.regression_tests.test_mpi_comms.all_ranks",
    "libensemble.tests.regression_tests.test_mpi_comms.check_ranks",
    "libensemble.tests.regression_tests.test_mpi_comms.is_master",
    "libensemble.tests.regression_tests.test_mpi_comms.manager_main",
    "libensemble.tests.regression_tests.test_mpi_comms.mpi_comm",
    "libensemble.tests.regression_tests.test_mpi_comms.mpi_comm_excl",
    "libensemble.tests.regression_tests.test_mpi_comms.test_exp",
    "libensemble.tests.regression_tests.test_mpi_comms.tests",
    "libensemble.tests.regression_tests.test_mpi_comms.worker_main",
    "libensemble.tools.parse_args",
    "list",
    "mpi4py.MPI.COMM_WORLD.Dup",
    "mpi4py.MPI.COMM_WORLD.Get_size",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.MPIComm": {
  "data": {
   "shadows": "libensemble.comms.mpi.MPIComm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.Timeout": {
  "data": {
   "shadows": "libensemble.comms.mpi.Timeout"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.all_ranks": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.check_ranks": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "mpi4py.MPI.COMM_WORLD.allgather",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.check_recv": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.is_master": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.manager_main": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "libensemble.comms.mpi.MPIComm",
    "libensemble.comms.mpi.Timeout",
    "libensemble.tests.regression_tests.test_mpi_comms.check_recv",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.mpi_comm": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.mpi_comm_excl": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD.Create",
    "mpi4py.MPI.COMM_WORLD.Get_group"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.test_exp": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.tests": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_comms.worker_main": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libensemble.comms.mpi.MPIComm",
    "libensemble.tests.regression_tests.test_mpi_comms.check_recv"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_runners": {
  "data": {
   "symbols_in_volume": [
    "float",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE_logger.set_filename",
    "libensemble.libE_logger.set_level",
    "libensemble.tests.regression_tests.test_mpi_runners.comms",
    "libensemble.tests.regression_tests.test_mpi_runners.eargs_aprun",
    "libensemble.tests.regression_tests.test_mpi_runners.eargs_custom",
    "libensemble.tests.regression_tests.test_mpi_runners.eargs_jsrun",
    "libensemble.tests.regression_tests.test_mpi_runners.eargs_mpich",
    "libensemble.tests.regression_tests.test_mpi_runners.eargs_openmpi",
    "libensemble.tests.regression_tests.test_mpi_runners.eargs_srun",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_aprun",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_custom",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_jsrun",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_list",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_mpich",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_openmpi",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_rename_mpich",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_srun",
    "libensemble.tests.regression_tests.test_mpi_runners.log_file",
    "libensemble.tests.regression_tests.test_mpi_runners.node_file",
    "libensemble.tests.regression_tests.test_mpi_runners.nodes_per_worker",
    "libensemble.tests.regression_tests.test_mpi_runners.os",
    "libensemble.tests.regression_tests.test_mpi_runners.rounds",
    "libensemble.tests.regression_tests.test_mpi_runners.run_tests",
    "libensemble.tests.regression_tests.test_mpi_runners.runline_check",
    "libensemble.tests.regression_tests.test_mpi_runners.runner",
    "libensemble.tests.regression_tests.test_mpi_runners.runner_name",
    "libensemble.tests.regression_tests.test_mpi_runners.test_list_exargs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "open",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.comms": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.eargs_aprun": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.eargs_custom": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.eargs_jsrun": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.eargs_mpich": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.eargs_openmpi": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.eargs_srun": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exit_criteria": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_aprun": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_custom": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_jsrun": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_list": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_mpich": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_nodelist_for_worker": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "libensemble.tests.regression_tests.test_mpi_runners.nodes_per_worker",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_openmpi": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_rename_mpich": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.exp_srun": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.gen_specs": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.libE_logger": {
  "data": {
   "shadows": "libensemble.libE_logger"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.log_file": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.node_file": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.nodes_per_worker": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.persis_info": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.rounds": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.run_tests": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.test_mpi_runners.exit_criteria",
    "libensemble.tests.regression_tests.test_mpi_runners.gen_specs",
    "libensemble.tests.regression_tests.test_mpi_runners.node_file",
    "libensemble.tests.regression_tests.test_mpi_runners.persis_info",
    "libensemble.tests.regression_tests.test_mpi_runners.sim_app",
    "libensemble.tests.regression_tests.test_mpi_runners.sim_specs",
    "libensemble.tests.regression_tests.test_mpi_runners.test_list_base"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.runline_check": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "enumerate",
    "libensemble.executors.mpi_executor.MPIExecutor.executor",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.tests.regression_tests.test_mpi_runners.exp_nodelist_for_worker",
    "numpy.linalg.norm",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.runner": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.runner_name": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.sim_app": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.sim_specs": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.test_list_base": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_mpi_runners.test_list_exargs": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.test_nan_func_old_aposmm.exit_criteria",
    "libensemble.tests.regression_tests.test_nan_func_old_aposmm.gen_specs",
    "libensemble.tests.regression_tests.test_nan_func_old_aposmm.n",
    "libensemble.tests.regression_tests.test_nan_func_old_aposmm.persis_info",
    "libensemble.tests.regression_tests.test_nan_func_old_aposmm.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.all",
    "numpy.linalg.norm",
    "numpy.ones",
    "support.aposmm_gen_out",
    "support.nan_func"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.exit_criteria": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.gen_out": {
  "data": {
   "shadows": "support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.gen_specs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.n": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.persis_info": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.sim_f": {
  "data": {
   "shadows": "support.nan_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_nan_func_old_aposmm.sim_specs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.fast_alloc_and_pausing.give_sim_work_first",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.persis_info_3",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.LB",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.UB",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.alloc_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.budget",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.exit_criteria",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.gen_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.m",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.n",
    "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.random.RandomState",
    "numpy.random.uniform",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.LB": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.UB": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.fast_alloc_and_pausing.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.alloc_specs": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.budget": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.exit_criteria": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.gen_specs": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.m": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.n": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.persis_info": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_one_residual_at_a_time.sim_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.EvaluateJacobian",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.persis_info_2",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.J",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.budget",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.exit_criteria",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.gen_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.m",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.n",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.argmin",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.EvaluateJacobian": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.EvaluateJacobian"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.J": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.budget": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.exit_criteria": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.gen_specs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.m": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.n": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.persis_info": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders.sim_specs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.EvaluateJacobian",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.common.mpi_comm_split",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.persis_info_2",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.J",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.budget",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.exit_criteria",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.gen_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.is_master",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.m",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.n",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.num_comms",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.os",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.outname",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.argmin",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.sum",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.EvaluateJacobian": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.EvaluateJacobian"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.J": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.budget": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.exit_criteria": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.gen_specs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.is_master": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.m": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.mpi_comm_split": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.common.mpi_comm_split"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.n": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.num_comms": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.outname": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.persis_info": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_splitcomm.sim_specs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.EvaluateJacobian",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.common.mpi_comm_excl",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.persis_info_2",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.J",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.budget",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.exit_criteria",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.gen_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.is_excluded",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.is_master",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.m",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.n",
    "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.argmin",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.EvaluateJacobian": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.EvaluateJacobian"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.J": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.budget": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.exit_criteria": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.gen_specs": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.is_excluded": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.is_master": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.m": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.mpi_comm_excl": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.common.mpi_comm_excl"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.n": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.persis_info": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_pounders_subcomm.sim_specs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs": {
  "data": {
   "symbols_in_volume": [
    "copy.deepcopy",
    "float",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.branin.branin_obj.call_branin",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.branin_vals_and_minima",
    "libensemble.tests.regression_tests.support.branin_vals_and_minima.argsort",
    "libensemble.tests.regression_tests.support.branin_vals_and_minima.shape",
    "libensemble.tests.regression_tests.support.persis_info_2",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.dist",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.exit_criteria",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.gen_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.k",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.n",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.persis_info_safe",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.shutil",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.sim_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.sys",
    "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.min",
    "numpy.sum",
    "pkg_resources.resource_filename",
    "print",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.M": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.dist": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.exit_criteria": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.gen_specs": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.k": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.n": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.persis_info": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.persis_info_safe": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.branin.branin_obj.call_branin"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.sim_specs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_sim_dirs.tol": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "copy.deepcopy",
    "float",
    "int",
    "libensemble.alloc_funcs.fast_alloc_to_aposmm.give_sim_work_first",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.libE.libE",
    "libensemble.libE.libE_tcp_worker",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.aposmm_gen_out",
    "libensemble.tests.regression_tests.support.persis_info_1",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.alloc_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.exit_criteria",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.gen_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libE_abort",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libE_mpi_abort",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.n",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.persis_info_safe",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.run",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.sim_specs",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.sys",
    "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "math.gamma",
    "math.pi",
    "math.sqrt",
    "numpy.array",
    "numpy.min",
    "numpy.round",
    "numpy.shape",
    "numpy.sum",
    "print",
    "quit",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.fast_alloc_to_aposmm.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.alloc_specs": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.exit_criteria": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.gamma": {
  "data": {
   "shadows": "math.gamma"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm.aposmm_logic"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.aposmm_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.gen_specs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libE_abort": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libE_mpi_abort": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD.Abort"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libE_tcp_worker": {
  "data": {
   "shadows": "libensemble.libE.libE_tcp_worker"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.minima": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.n": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.persis_info": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.persis_info_safe": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.run": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.sim_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_old_aposmm_with_gradients.tol": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.budget",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.m",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.alloc_specs": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.budget": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.exit_criteria": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.gen_out": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.gen_specs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.m": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.n": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.persis_info": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.sim_specs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_dfols.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.periodic_func.func_wrapper",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.assertion",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_exception.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.alloc_specs": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.assertion": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD.Abort",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.exit_criteria": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.gen_out": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.gen_specs": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.n": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.persis_info": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.periodic_func.func_wrapper"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.sim_specs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_exception.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.shutil",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.start_time",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.min",
    "numpy.round",
    "numpy.set_printoptions",
    "numpy.sum",
    "numpy.where",
    "print",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.alloc_specs": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.exit_criteria": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.gen_out": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.gen_specs": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.minima": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.n": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.persis_info": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.sim_specs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.start_time": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_external_localopt.tol": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.start_time",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "math.gamma",
    "math.pi",
    "math.sqrt",
    "numpy.array",
    "numpy.min",
    "numpy.round",
    "numpy.sum",
    "numpy.where",
    "print",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.alloc_specs": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.exit_criteria": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.gamma": {
  "data": {
   "shadows": "math.gamma"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.gen_out": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.gen_specs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.n": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.persis_info": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.sim_specs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.start_time": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_nlopt.tol": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.periodic_func.func_wrapper",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.min_ids",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.minima",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.where",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.alloc_specs": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.exit_criteria": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.gen_out": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.gen_specs": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.min_ids": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.minima": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.n": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.persis_info": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.periodic_func.func_wrapper"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.sim_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_periodic.tol": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.gen_funcs.sampling.lhs_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.budget",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.lb",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.m",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sample_points",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.ub",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "math.ceil",
    "math.gamma",
    "math.pi",
    "math.sqrt",
    "numpy.append",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.alloc_specs": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.budget": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.exit_criteria": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.gamma": {
  "data": {
   "shadows": "math.gamma"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.gen_out": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.gen_specs": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.lb": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.lhs_sample": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.lhs_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.m": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.n": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.persis_info": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sample_points": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sim_specs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_pounders.ub": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.min_found",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.start_time",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.min",
    "numpy.ones",
    "numpy.round",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print",
    "range",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.alloc_specs": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.exit_criteria": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.gen_out": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.gen_specs": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.min_found": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.n": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.persis_info": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.sim_specs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.start_time": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_scipy.tol": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.start_time",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "math.gamma",
    "math.pi",
    "math.sqrt",
    "numpy.array",
    "numpy.min",
    "numpy.round",
    "numpy.sum",
    "numpy.where",
    "print",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.alloc_specs": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.exit_criteria": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.gamma": {
  "data": {
   "shadows": "math.gamma"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.gen_out": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.gen_specs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.n": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.persis_info": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.sim_specs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.start_time": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_blmvm.tol": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "numpy.sum",
    "numpy.where",
    "print"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.alloc_specs": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.exit_criteria": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.gen_out": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.gen_specs": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.n": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.persis_info": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.sim_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_tao_nm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.periodic_func.func_wrapper",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.pi",
    "numpy.where"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.alloc_specs": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.exit_criteria": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.gen_out": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.gen_specs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.min_ids": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.n": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.persis_info": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.periodic_func.func_wrapper"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.sim_specs": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_timeout.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_grad",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.H0",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.gen_out",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.n",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.persis_info",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sample_size",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.start_time",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sys",
    "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "math.gamma",
    "math.pi",
    "math.sqrt",
    "numpy.array",
    "numpy.min",
    "numpy.round",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print",
    "range",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.H0": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.persistent_aposmm_alloc.persistent_aposmm_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.alloc_specs": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.exit_criteria": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.gamma": {
  "data": {
   "shadows": "math.gamma"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm.aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.gen_out": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.gen_specs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.libensemble.gen_funcs": {
  "data": {
   "shadows": "libensemble.gen_funcs"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.n": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.persis_info": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sample_size": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sim_specs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.six_hump_camel_func": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.six_hump_camel_grad": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_grad"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.start_time": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_aposmm_with_grad.tol": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.start_fd_persistent.finite_diff_alloc",
    "libensemble.gen_funcs.persistent_fd_param_finder.fd_param_finder",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.noisy_vector_mapping.func_wrapper",
    "libensemble.sim_funcs.noisy_vector_mapping.noisy_function",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.f0",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.n",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.p",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.persis_info",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.shutil",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.sys",
    "libensemble.tests.regression_tests.test_persistent_fd_param_finder.x0",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.all",
    "numpy.array",
    "numpy.logspace",
    "numpy.multiply",
    "numpy.ones"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_fd_persistent.finite_diff_alloc"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.alloc_specs": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.exit_criteria": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.f0": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_fd_param_finder.fd_param_finder"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.gen_specs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.n": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.noisy_function": {
  "data": {
   "shadows": "libensemble.sim_funcs.noisy_vector_mapping.noisy_function"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.p": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.persis_info": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.noisy_vector_mapping.func_wrapper"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.sim_specs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_fd_param_finder.x0": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens",
    "libensemble.gen_funcs.persistent_tasmanian.sparse_grid",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.n",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.persis_info",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.start_time",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.sys",
    "libensemble.tests.regression_tests.test_persistent_tasmanian.true_val",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.abs",
    "numpy.array",
    "print",
    "range",
    "time.time"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.alloc_specs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.exit_criteria": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_tasmanian.sparse_grid"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.gen_specs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.n": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.persis_info": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.sim_specs": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.six_hump_camel_func": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.start_time": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_tasmanian.true_val": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "len",
    "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens",
    "libensemble.gen_funcs.persistent_uniform_sampling.persistent_uniform",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.alloc_specs",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.exit_criteria",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.gen_specs",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.n",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.persis_info",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.sim_specs",
    "libensemble.tests.regression_tests.test_persistent_uniform_sampling.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.unique"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.alloc_specs": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.exit_criteria": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_uniform_sampling.persistent_uniform"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.gen_specs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.n": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.persis_info": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.sim_specs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_persistent_uniform_sampling.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc": {
  "data": {
   "symbols_in_volume": [
    "all",
    "dir",
    "float",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.support.write_sim_func",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.basedir",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.c_ensemble",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.dir_sum",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.dir_to_copy",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.dir_to_symlink",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.exit_criteria",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.gen_specs",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.input_copied",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.os",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.persis_info",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.sim_input_dir",
    "libensemble.tests.regression_tests.test_sim_dirs_per_calc.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "print",
    "str",
    "sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.basedir": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.c_ensemble": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.dir_sum": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.dir_to_copy": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.dir_to_symlink": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.exit_criteria": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.gen_specs": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.input_copied": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.persis_info": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.sim_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.write_sim_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.sim_input_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_calc.sim_specs": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker": {
  "data": {
   "symbols_in_volume": [
    "all",
    "dir",
    "float",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.support.write_sim_func",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.basedir",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.dir_to_copy",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.dir_to_symlink",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.exit_criteria",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.gen_specs",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.input_copied",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.os",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.persis_info",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_dir_sum",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_input_dir",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_specs",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.w_ensemble",
    "libensemble.tests.regression_tests.test_sim_dirs_per_worker.worker_dir_sum",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "print",
    "str",
    "sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.basedir": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.dir_to_copy": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.dir_to_symlink": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.exit_criteria": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.gen_specs": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.input_copied": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.persis_info": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_dir_sum": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.write_sim_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_input_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.sim_specs": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.w_ensemble": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_per_worker.worker_dir_sum": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception": {
  "data": {
   "symbols_in_volume": [
    "float",
    "len",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.libE_manager.ManagerException",
    "libensemble.tests.regression_tests.support.write_sim_func",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.dir_to_copy",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.dir_to_symlink",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.e_ensemble",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.exit_criteria",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.gen_specs",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.os",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.persis_info",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.return_flag",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.sim_input_dir",
    "libensemble.tests.regression_tests.test_sim_dirs_with_exception.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.ManagerException": {
  "data": {
   "shadows": "libensemble.libE_manager.ManagerException"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.dir_to_copy": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.dir_to_symlink": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.e_ensemble": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.exit_criteria": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.gen_specs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.persis_info": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.return_flag": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.sim_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.write_sim_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.sim_input_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_exception.sim_specs": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs": {
  "data": {
   "symbols_in_volume": [
    "all",
    "any",
    "dir",
    "float",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.support.write_sim_func",
    "libensemble.tests.regression_tests.support.write_uniform_gen_func",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.c_ensemble",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.check_copied",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_copy_gen",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_copy_sim",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_symlink_gen",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_symlink_sim",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.exit_criteria",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.gen_input_dir",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.gen_specs",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.os",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.persis_info",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_dir_sum",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_input_dir",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "print",
    "str",
    "sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.c_ensemble": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.check_copied": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "all",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.c_ensemble",
    "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.os",
    "type"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_copy_gen": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_copy_sim": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_symlink_gen": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.dir_to_symlink_sim": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.exit_criteria": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.gen_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.write_uniform_gen_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.gen_input_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.gen_specs": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.persis_info": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_dir_sum": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.write_sim_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_input_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_dirs_with_gen_dirs.sim_specs": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option": {
  "data": {
   "symbols_in_volume": [
    "dir",
    "float",
    "len",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.support.write_sim_func",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.dir_to_copy",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.exit_criteria",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.gen_specs",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.lines",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.o_ensemble",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.os",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.persis_info",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.sim_input_dir",
    "libensemble.tests.regression_tests.test_sim_input_dir_option.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "open",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.dir_to_copy": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.exit_criteria": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.gen_specs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.lines": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.o_ensemble": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.persis_info": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.sim_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.write_sim_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.sim_input_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_sim_input_dir_option.sim_specs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling": {
  "data": {
   "symbols_in_volume": [
    "float",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.test_uniform_sampling.exit_criteria",
    "libensemble.tests.regression_tests.test_uniform_sampling.gen_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling.persis_info",
    "libensemble.tests.regression_tests.test_uniform_sampling.sim_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.min",
    "numpy.sum",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.exit_criteria": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.gen_specs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.persis_info": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.sim_specs": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.six_hump_camel": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.tol": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling.uniform_random_sample": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "copy.deepcopy",
    "float",
    "int",
    "libensemble.alloc_funcs.fast_alloc_and_pausing.give_sim_work_first",
    "libensemble.gen_funcs.sampling.uniform_random_sample_obj_components",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.chwirut1.chwirut_eval",
    "libensemble.tests.regression_tests.support.persis_info_3",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.alloc_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.budget",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.exit_criteria",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.gen_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.m",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.n",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.persis_info_safe",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.sim_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.ones",
    "numpy.pi",
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.alloc_specs": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.budget": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.exit_criteria": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample_obj_components"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.gen_specs": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.fast_alloc_and_pausing.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.m": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.n": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.persis_info": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.persis_info_safe": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.chwirut1.chwirut_eval"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.sim_specs": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_one_residual_at_a_time.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs": {
  "data": {
   "symbols_in_volume": [
    "float",
    "libensemble.alloc_funcs.start_persistent_local_opt_gens.start_persistent_local_opt_gens",
    "libensemble.gen_funcs.uniform_or_localopt.uniform_or_localopt",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.alloc_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.exit_criteria",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.gen_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.n",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.persis_info",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.sim_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.sys",
    "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.tol",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "numpy.array",
    "numpy.min",
    "numpy.sum",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_persistent_local_opt_gens.start_persistent_local_opt_gens"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.alloc_specs": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.exit_criteria": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.uniform_or_localopt.uniform_or_localopt"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.gen_specs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.n": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.persis_info": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.sim_specs": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_then_persistent_localopt_runs.tol": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "TypeError",
    "bool",
    "float",
    "int",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.gen_funcs.sampling.uniform_random_sample_with_different_nodes_and_ranks",
    "libensemble.libE.libE",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_with_different_ranks_and_nodes",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.alloc_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.argparse",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.args",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.exctr",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.exit_criteria",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.gen_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.libE_machinefile",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.mpi4py",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.n",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.parser",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.persis_info",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.pkg_resources",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sim_app",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sim_specs",
    "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sys",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "mpi4py.MPI.COMM_WORLD.Get_size",
    "mpi4py.MPI.Get_processor_name",
    "numpy.array",
    "open",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.alloc_specs": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.args": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.exctr": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.exit_criteria": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample_with_different_nodes_and_ranks"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.gen_specs": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.libE_machinefile": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.mpi4py": {
  "data": {
   "shadows": "mpi4py"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.n": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.parser": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.persis_info": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sim_app": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sim_f": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_with_different_ranks_and_nodes"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sim_specs": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_uniform_sampling_with_different_resources.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "bool",
    "float",
    "int",
    "len",
    "libensemble.alloc_funcs.only_one_gen_alloc.ensure_one_active_gen",
    "libensemble.gen_funcs.vtmop.vtmop_gen",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.test_vtmop.H",
    "libensemble.tests.regression_tests.test_vtmop.H0",
    "libensemble.tests.regression_tests.test_vtmop.X",
    "libensemble.tests.regression_tests.test_vtmop.alloc_specs",
    "libensemble.tests.regression_tests.test_vtmop.exit_criteria",
    "libensemble.tests.regression_tests.test_vtmop.gen_specs",
    "libensemble.tests.regression_tests.test_vtmop.lower",
    "libensemble.tests.regression_tests.test_vtmop.lower_bounds",
    "libensemble.tests.regression_tests.test_vtmop.num_dims",
    "libensemble.tests.regression_tests.test_vtmop.num_objs",
    "libensemble.tests.regression_tests.test_vtmop.os",
    "libensemble.tests.regression_tests.test_vtmop.persis_info",
    "libensemble.tests.regression_tests.test_vtmop.s1",
    "libensemble.tests.regression_tests.test_vtmop.sim_f",
    "libensemble.tests.regression_tests.test_vtmop.sim_specs",
    "libensemble.tests.regression_tests.test_vtmop.size",
    "libensemble.tests.regression_tests.test_vtmop.time",
    "libensemble.tests.regression_tests.test_vtmop.timer",
    "libensemble.tests.regression_tests.test_vtmop.upper",
    "libensemble.tests.regression_tests.test_vtmop.upper_bounds",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "libensemble.tools.save_libE_output",
    "libensemble.utils.timer.Timer",
    "numpy.ceil",
    "numpy.load",
    "numpy.ones",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.save",
    "numpy.zeros",
    "open",
    "range",
    "sum"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_vtmop.H": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.H0": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.Timer": {
  "data": {
   "shadows": "libensemble.utils.timer.Timer"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.X": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.only_one_gen_alloc.ensure_one_active_gen"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.alloc_specs": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.exit_criteria": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.f": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.func": {
  "data": {
   "shadows": "libensemble.sim_funcs.mop_funcs.dtlz2"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.vtmop.vtmop_gen"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.gen_specs": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.lower": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.lower_bounds": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.num_dims": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.num_objs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.persis_info": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.s1": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.save_libE_output": {
  "data": {
   "shadows": "libensemble.tools.save_libE_output"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.sim_f": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libensemble.sim_funcs.mop_funcs.dtlz2",
    "numpy.ones",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_vtmop.sim_specs": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.size": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_vtmop.timer": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.upper": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_vtmop.upper_bounds": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions": {
  "data": {
   "symbols_in_volume": [
    "float",
    "libensemble.gen_funcs.sampling.uniform_random_sample",
    "libensemble.libE.libE",
    "libensemble.libE_manager.ManagerException",
    "libensemble.tests.regression_tests.support.nan_func",
    "libensemble.tests.regression_tests.test_worker_exceptions.exit_criteria",
    "libensemble.tests.regression_tests.test_worker_exceptions.gen_specs",
    "libensemble.tests.regression_tests.test_worker_exceptions.persis_info",
    "libensemble.tests.regression_tests.test_worker_exceptions.return_flag",
    "libensemble.tests.regression_tests.test_worker_exceptions.sim_specs",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "print"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.ManagerException": {
  "data": {
   "shadows": "libensemble.libE_manager.ManagerException"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.exit_criteria": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.sampling.uniform_random_sample"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.gen_specs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.n": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.persis_info": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.return_flag": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.sim_f": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.nan_func"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_worker_exceptions.sim_specs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "len",
    "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.gen_funcs.persistent_uniform_sampling.persistent_uniform",
    "libensemble.libE.libE",
    "libensemble.libE_logger.set_filename",
    "libensemble.libE_logger.set_level",
    "libensemble.tests.regression_tests.test_zero_resource_workers.alloc_specs",
    "libensemble.tests.regression_tests.test_zero_resource_workers.comms",
    "libensemble.tests.regression_tests.test_zero_resource_workers.customizer",
    "libensemble.tests.regression_tests.test_zero_resource_workers.exctr",
    "libensemble.tests.regression_tests.test_zero_resource_workers.exit_criteria",
    "libensemble.tests.regression_tests.test_zero_resource_workers.exp_list",
    "libensemble.tests.regression_tests.test_zero_resource_workers.exp_mpich",
    "libensemble.tests.regression_tests.test_zero_resource_workers.gen_specs",
    "libensemble.tests.regression_tests.test_zero_resource_workers.in_place",
    "libensemble.tests.regression_tests.test_zero_resource_workers.log_file",
    "libensemble.tests.regression_tests.test_zero_resource_workers.n",
    "libensemble.tests.regression_tests.test_zero_resource_workers.node_file",
    "libensemble.tests.regression_tests.test_zero_resource_workers.nodes_per_worker",
    "libensemble.tests.regression_tests.test_zero_resource_workers.nsim_workers",
    "libensemble.tests.regression_tests.test_zero_resource_workers.os",
    "libensemble.tests.regression_tests.test_zero_resource_workers.persis_info",
    "libensemble.tests.regression_tests.test_zero_resource_workers.rounds",
    "libensemble.tests.regression_tests.test_zero_resource_workers.runline_check",
    "libensemble.tests.regression_tests.test_zero_resource_workers.sim_app",
    "libensemble.tests.regression_tests.test_zero_resource_workers.sim_specs",
    "libensemble.tests.regression_tests.test_zero_resource_workers.sys",
    "libensemble.tests.regression_tests.test_zero_resource_workers.test_list",
    "libensemble.tests.regression_tests.test_zero_resource_workers.test_list_base",
    "libensemble.tools.add_unique_random_streams",
    "libensemble.tools.parse_args",
    "numpy.array",
    "open",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.add_unique_random_streams": {
  "data": {
   "shadows": "libensemble.tools.add_unique_random_streams"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.alloc_f": {
  "data": {
   "shadows": "libensemble.alloc_funcs.start_only_persistent.only_persistent_gens"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.alloc_specs": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.comms": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.customizer": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.exctr": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.exit_criteria": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.exp_list": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.exp_mpich": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.exp_nodelist_for_worker": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "libensemble.tests.regression_tests.test_zero_resource_workers.nodes_per_worker",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.gen_f": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_uniform_sampling.persistent_uniform"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.gen_specs": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.in_place": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.libE_logger": {
  "data": {
   "shadows": "libensemble.libE_logger"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.log_file": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.n": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.node_file": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.nodes_per_worker": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.nsim_workers": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.parse_args": {
  "data": {
   "shadows": "libensemble.tools.parse_args"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.persis_info": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.rounds": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.runline_check": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "enumerate",
    "libensemble.executors.mpi_executor.MPIExecutor.executor",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.tests.regression_tests.test_zero_resource_workers.exp_nodelist_for_worker",
    "numpy.linalg.norm",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.sim_app": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.sim_specs": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.test_list": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "libensemble.tests.regression_tests.test_zero_resource_workers.test_list_base": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.unit_tests.launch_busy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "libensemble.tests.unit_tests.launch_busy.main",
    "libensemble.tests.unit_tests.launch_busy.sys"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.launch_busy.ignore_handler": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.launch_busy.main": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.launch_busy.ignore_handler",
    "libensemble.tests.unit_tests.launch_busy.signal",
    "libensemble.tests.unit_tests.launch_busy.time",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.launch_busy.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.launch_busy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.launch_busy.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.setup": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.unit_tests.setup.History": {
  "data": {
   "shadows": "libensemble.history.History"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.setup.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.setup.hist_setup1": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.history.History",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.setup.hist_setup2": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.history.History",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_1"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.setup.hist_setup2A_genout_sim_ids": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.history.History",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_1A"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.random.uniform",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.setup.make_criteria_and_specs_1": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "numpy.linalg.norm",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.setup.make_criteria_and_specs_1A": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.linalg.norm",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.setup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.tests.unit_tests.test_allocation_funcs.test_decide_work_and_resources",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.H0": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.History": {
  "data": {
   "shadows": "libensemble.history.History"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.al": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.libE_specs": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.man": {
  "data": {
   "shadows": "libensemble.libE_manager"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_allocation_funcs.test_decide_work_and_resources": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "libensemble.history.History",
    "libensemble.libE_manager.Manager",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_1",
    "libensemble.tests.unit_tests.test_allocation_funcs.H0",
    "libensemble.tests.unit_tests.test_allocation_funcs.al",
    "libensemble.tests.unit_tests.test_allocation_funcs.libE_specs"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_comms.commlogs": {
  "data": {
   "shadows": "libensemble.comms.logs"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_comms.comms": {
  "data": {
   "shadows": "libensemble.comms.comms"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_comms.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_comms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_comms.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_comms.run_qcomm_threadproc_test": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "BadWorkerException",
    "ThreadProc",
    "bool",
    "float",
    "libensemble.comms.comms.CommFinishedException",
    "libensemble.comms.comms.RemoteException",
    "libensemble.comms.comms.Timeout",
    "libensemble.tests.unit_tests.test_comms.time",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.run_qcomm_threadproc_test.BadWorkerException": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_comms.run_qcomm_threadproc_test.bad_worker_thread": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "BadWorkerException"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.run_qcomm_threadproc_test.worker_thread": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "gcomm",
    "gcomm.wait_all",
    "gcomm.wait_any",
    "libensemble.comms.comms.CommEval"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_comm_eval": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bool",
    "float",
    "gcomm",
    "gcomm.process_message",
    "gcomm.sim_pending",
    "gcomm.sim_started",
    "len",
    "libensemble.comms.comms.CommEval",
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.Timeout",
    "libensemble.tests.unit_tests.test_comms.queue",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_comm_logging": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "isinstance",
    "libensemble.comms.comms.QCommProcess",
    "libensemble.tests.unit_tests.test_comms.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_comm_logging.worker_main": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "libensemble.comms.logs.CommLogHandler",
    "libensemble.tests.unit_tests.test_comms.logging"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TestGenComm",
    "ValueError",
    "libensemble.comms.comms.ManagerStop",
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.Timeout",
    "libensemble.tests.unit_tests.test_comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler.TestGenComm": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "libensemble.comms.comms.GenCommHandler"
   ]
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler.TestGenComm.on_killed": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler.TestGenComm.on_queued": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler.TestGenComm.on_result": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler.TestGenComm.on_update": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_gen_comm_handler.TestGenComm.on_worker_avail": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_missing_handler": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TestHandler",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_missing_handler.TestHandler": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libensemble.comms.comms.GenCommHandler"
   ]
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_comms.test_missing_handler.TestHandler.on_killed": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_missing_handler.TestHandler.on_queued": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_missing_handler.TestHandler.on_update": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_missing_handler.TestHandler.on_worker_avail": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_qcomm": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.Timeout",
    "libensemble.tests.unit_tests.test_comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_qcomm_threadproc": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "libensemble.comms.comms.QCommProcess",
    "libensemble.comms.comms.QCommThread",
    "libensemble.tests.unit_tests.test_comms.run_qcomm_threadproc_test"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_sim_comm_handler": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TestSimComm",
    "ValueError",
    "libensemble.comms.comms.ManagerStop",
    "libensemble.comms.comms.QComm",
    "libensemble.comms.comms.Timeout",
    "libensemble.tests.unit_tests.test_comms.queue"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_sim_comm_handler.TestSimComm": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "libensemble.comms.comms.SimCommHandler"
   ]
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_comms.test_sim_comm_handler.TestSimComm.on_kill": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.test_sim_comm_handler.TestSimComm.on_request": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_comms.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_env_resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_env_resources.setup_standalone_run",
    "libensemble.tests.unit_tests.test_env_resources.teardown_standalone_run",
    "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_empty",
    "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_groups",
    "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_reverse_grp",
    "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_seq",
    "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_single",
    "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_empty",
    "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_seq",
    "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_shortform_empty",
    "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_shortform_seq",
    "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_shortform_single",
    "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_single",
    "libensemble.tests.unit_tests.test_env_resources.test_shortnames_cobalt",
    "libensemble.tests.unit_tests.test_env_resources.test_shortnames_nochange_cobalt",
    "libensemble.tests.unit_tests.test_env_resources.test_shortnames_nochange_slurm",
    "libensemble.tests.unit_tests.test_env_resources.test_shortnames_slurm",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_bdw_seq",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_empty",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups_longprefix",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups_nodash",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups_partitions",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_knl_seq",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_reverse_grp",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_single",
    "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_single_nodash"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_env_resources.EnvResources": {
  "data": {
   "shadows": "libensemble.resources.env_resources.EnvResources"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_env_resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_env_resources.setup_function": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_env_resources.os",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.setup_standalone_run": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.teardown_function": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_env_resources.os",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.teardown_standalone_run": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_empty": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_cobalt_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_groups": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_cobalt_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_reverse_grp": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_cobalt_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_seq": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_cobalt_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_cobalt_nodelist_single": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_cobalt_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_empty": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_seq": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_shortform_empty": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist_frm_shortform",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_shortform_seq": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist_frm_shortform",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_shortform_single": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist_frm_shortform",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_lsf_nodelist_single": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_lsf_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_shortnames_cobalt": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_shortnames_nochange_cobalt": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_shortnames_nochange_slurm": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_shortnames_slurm": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_bdw_seq": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_empty": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups_longprefix": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups_nodash": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_groups_partitions": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_knl_seq": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_reverse_grp": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_single": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_env_resources.test_slurm_nodelist_single_nodash": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources.get_slurm_nodelist",
    "libensemble.tests.unit_tests.test_env_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_executor.test_doublekill",
    "libensemble.tests.unit_tests.test_executor.test_finish_and_kill",
    "libensemble.tests.unit_tests.test_executor.test_get_task",
    "libensemble.tests.unit_tests.test_executor.test_kill_on_file",
    "libensemble.tests.unit_tests.test_executor.test_kill_on_timeout",
    "libensemble.tests.unit_tests.test_executor.test_kill_task_with_no_submit",
    "libensemble.tests.unit_tests.test_executor.test_launch_and_kill",
    "libensemble.tests.unit_tests.test_executor.test_launch_and_poll",
    "libensemble.tests.unit_tests.test_executor.test_launch_and_poll_multitasks",
    "libensemble.tests.unit_tests.test_executor.test_launch_and_wait",
    "libensemble.tests.unit_tests.test_executor.test_launch_and_wait_timeout",
    "libensemble.tests.unit_tests.test_executor.test_launch_as_gen",
    "libensemble.tests.unit_tests.test_executor.test_launch_default_reg",
    "libensemble.tests.unit_tests.test_executor.test_launch_no_app",
    "libensemble.tests.unit_tests.test_executor.test_launch_wait_on_run",
    "libensemble.tests.unit_tests.test_executor.test_poll_task_with_no_submit",
    "libensemble.tests.unit_tests.test_executor.test_procs_and_machinefile_logic",
    "libensemble.tests.unit_tests.test_executor.test_register_apps",
    "libensemble.tests.unit_tests.test_executor.test_retries_launch_fail",
    "libensemble.tests.unit_tests.test_executor.test_retries_run_fail",
    "libensemble.tests.unit_tests.test_executor.test_task_failure"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_executor.BalsamMPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.balsam_executor.BalsamMPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.Executor": {
  "data": {
   "shadows": "libensemble.executors.executor.Executor"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.ExecutorException": {
  "data": {
   "shadows": "libensemble.executors.executor.ExecutorException"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.NCORES": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_executor.NOT_STARTED_STATES": {
  "data": {
   "shadows": "libensemble.executors.executor.NOT_STARTED_STATES"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.ResourcesException": {
  "data": {
   "shadows": "libensemble.resources.resources.ResourcesException"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.Task": {
  "data": {
   "shadows": "libensemble.executors.executor.Task"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.TimeoutExpired": {
  "data": {
   "shadows": "libensemble.executors.executor.TimeoutExpired"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.USE_BALSAM": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_executor.build_simfunc": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_executor.subprocess"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.polling_loop": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_executor.time",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.polling_loop_multitask": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_executor.time",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.setup_executor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.BalsamMPIExecutor",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.tests.unit_tests.test_executor.USE_BALSAM",
    "libensemble.tests.unit_tests.test_executor.build_simfunc",
    "libensemble.tests.unit_tests.test_executor.os",
    "libensemble.tests.unit_tests.test_executor.sim_app"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.setup_executor_fakerunner": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.tests.unit_tests.test_executor.USE_BALSAM",
    "libensemble.tests.unit_tests.test_executor.build_simfunc",
    "libensemble.tests.unit_tests.test_executor.os",
    "libensemble.tests.unit_tests.test_executor.sim_app",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.setup_executor_noapp": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.BalsamMPIExecutor",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.tests.unit_tests.test_executor.USE_BALSAM",
    "libensemble.tests.unit_tests.test_executor.build_simfunc",
    "libensemble.tests.unit_tests.test_executor.os",
    "libensemble.tests.unit_tests.test_executor.sim_app",
    "libensemble.tests.unit_tests.test_executor.sys"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.setup_executor_noreg": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "libensemble.executors.balsam_executor.BalsamMPIExecutor",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.tests.unit_tests.test_executor.USE_BALSAM",
    "libensemble.tests.unit_tests.test_executor.build_simfunc",
    "libensemble.tests.unit_tests.test_executor.os",
    "libensemble.tests.unit_tests.test_executor.sim_app"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.setup_function": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.setup_module": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.sim_app": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_executor.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_executor.teardown_module": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_doublekill": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.pytest",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_finish_and_kill": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.pytest",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "libensemble.tests.unit_tests.test_executor.time",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_get_task": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_kill_on_file": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_kill_on_timeout": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_kill_task_with_no_submit": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "bool",
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.executors.executor.Task",
    "libensemble.tests.unit_tests.test_executor.re",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_and_kill": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.pytest",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_and_poll": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_and_poll_multitasks": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop_multitask",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_and_wait": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_and_wait_timeout": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.TimeoutExpired",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_as_gen": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sim_app",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_default_reg": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor_noreg",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_no_app": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.setup_executor_noapp",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_launch_wait_on_run": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.NOT_STARTED_STATES",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_poll_task_with_no_submit": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "bool",
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.executors.executor.Task",
    "libensemble.tests.unit_tests.test_executor.re",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_procs_and_machinefile_logic": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.resources.resources.ResourcesException",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.pytest",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.socket",
    "libensemble.tests.unit_tests.test_executor.sys",
    "open",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_register_apps": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.tests.unit_tests.test_executor.os",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_retries_launch_fail": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.setup_executor_fakerunner",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_retries_run_fail": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.test_task_failure": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "libensemble.tests.unit_tests.test_executor.NCORES",
    "libensemble.tests.unit_tests.test_executor.polling_loop",
    "libensemble.tests.unit_tests.test_executor.setup_executor",
    "libensemble.tests.unit_tests.test_executor.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_executor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_history": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_history.test_grow_H",
    "libensemble.tests.unit_tests.test_history.test_hist_init_1",
    "libensemble.tests.unit_tests.test_history.test_hist_init_1A_H0",
    "libensemble.tests.unit_tests.test_history.test_hist_init_2",
    "libensemble.tests.unit_tests.test_history.test_trim_H",
    "libensemble.tests.unit_tests.test_history.test_update_history_f",
    "libensemble.tests.unit_tests.test_history.test_update_history_f_vec",
    "libensemble.tests.unit_tests.test_history.test_update_history_x_in",
    "libensemble.tests.unit_tests.test_history.test_update_history_x_in_Oempty",
    "libensemble.tests.unit_tests.test_history.test_update_history_x_in_sim_ids",
    "libensemble.tests.unit_tests.test_history.test_update_history_x_out",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_history.WORKER_DONE": {
  "data": {
   "shadows": "libensemble.message_numbers.WORKER_DONE"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_history.exp_H0_H": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_history.exp_x_in_setup2": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_history.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_history.isclose": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abs",
    "max"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_history.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_history.test_grow_H": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_history.wrs",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_hist_init_1": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_history.wrs",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_hist_init_1A_H0": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_history.exp_H0_H",
    "libensemble.tests.unit_tests.test_history.wrs_H0",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_hist_init_2": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup2",
    "libensemble.tests.unit_tests.test_history.wrs2",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_trim_H": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_history.wrs",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_update_history_f": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.tests.unit_tests.setup.hist_setup2",
    "libensemble.tests.unit_tests.test_history.isclose",
    "numpy.all",
    "numpy.allclose",
    "numpy.arange",
    "numpy.atleast_1d",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_update_history_f_vec": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "float",
    "libensemble.message_numbers.WORKER_DONE",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_history.isclose",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_update_history_x_in": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup2",
    "libensemble.tests.unit_tests.test_history.exp_x_in_setup2",
    "libensemble.tests.unit_tests.test_history.isclose",
    "numpy.allclose",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_update_history_x_in_Oempty": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup2",
    "libensemble.tests.unit_tests.test_history.wrs2",
    "numpy.array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_update_history_x_in_sim_ids": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup2A_genout_sim_ids",
    "libensemble.tests.unit_tests.test_history.exp_x_in_setup2",
    "libensemble.tests.unit_tests.test_history.isclose",
    "numpy.allclose",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.test_update_history_x_out": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_history.wrs",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_history.wrs": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_history.wrs2": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_history.wrs_H0": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_launcher": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_launcher.launcher": {
  "data": {
   "shadows": "libensemble.utils.launcher"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_launcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_launcher.test_form_command": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libensemble.utils.launcher.form_command"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_launcher.test_launch32": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_launcher.xtest_submit",
    "libensemble.utils.launcher.wait",
    "libensemble.utils.launcher.wait_py32"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_launcher.test_launch33": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_launcher.xtest_submit",
    "libensemble.utils.launcher.wait",
    "libensemble.utils.launcher.wait_py33"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_launcher.xtest_submit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_launcher.sys",
    "libensemble.utils.launcher.cancel",
    "libensemble.utils.launcher.killpg",
    "libensemble.utils.launcher.launch",
    "libensemble.utils.launcher.process_is_stopped",
    "libensemble.utils.launcher.terminatepg"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first",
    "libensemble.tests.unit_tests.test_libE_main.Fake_MPI",
    "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_H0",
    "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_exit_crit",
    "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_noworkers",
    "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_single",
    "libensemble.tests.unit_tests.test_libE_main.test_exception_raising_check_inputs",
    "libensemble.tests.unit_tests.test_libE_main.test_exception_raising_manager_no_abort",
    "libensemble.tests.unit_tests.test_libE_main.test_exception_raising_manager_with_abort",
    "libensemble.tests.unit_tests.test_libE_main.test_logging_disabling",
    "libensemble.tests.unit_tests.test_libE_main.test_manager_exception",
    "libensemble.tests.unit_tests.test_libE_main.test_proc_not_in_communicator",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.Abort": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_libE_main.MPIAbortException"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.Barrier": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.Dup": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.Free": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.Get_rank": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.Get_size": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.Fake_MPI.isend": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_libE_main.MPISendException"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.LogConfig": {
  "data": {
   "shadows": "libensemble.comms.logs.LogConfig"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.MPIAbortException": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_libE_main.MPISendException": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_libE_main.alloc_specs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_libE_main.check_assertion": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AssertionError",
    "libensemble.libE.check_inputs",
    "libensemble.tests.unit_tests.test_libE_main.alloc_specs",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "libensemble.tests.unit_tests.test_libE_main.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.check_inputs": {
  "data": {
   "shadows": "libensemble.libE.check_inputs"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.fake_mpi": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_libE_main.give_sim_work_first": {
  "data": {
   "shadows": "libensemble.alloc_funcs.give_sim_work_first.give_sim_work_first"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.hfile_abort": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_libE_main.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.libE": {
  "data": {
   "shadows": "libensemble.libE.libE"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.libE_specs": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_libE_main.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.mpi_comm_excl": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.common.mpi_comm_excl"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.pfile_abort": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_libE_main.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.remove_file_if_exists": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "OSError",
    "libensemble.tests.unit_tests.test_libE_main.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.rmfield": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_H0": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bool",
    "len",
    "libensemble.libE.check_inputs",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.alloc_specs",
    "libensemble.tests.unit_tests.test_libE_main.check_assertion",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "libensemble.tests.unit_tests.test_libE_main.rmfield",
    "numpy.array",
    "numpy.inf",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_exit_crit": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.alloc_specs",
    "libensemble.tests.unit_tests.test_libE_main.check_assertion",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_noworkers": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.alloc_specs",
    "libensemble.tests.unit_tests.test_libE_main.check_assertion",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "mpi4py.MPI.COMM_WORLD",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_checking_inputs_single": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "AssertionError",
    "libensemble.libE.check_inputs",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.alloc_specs",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_exception_raising_check_inputs": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "libensemble.libE.libE",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.pytest"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_exception_raising_manager_no_abort": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "libensemble.libE.libE",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.MPISendException",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "libensemble.tests.unit_tests.test_libE_main.pytest"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_exception_raising_manager_with_abort": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "libensemble.libE.libE",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.MPIAbortException",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.pytest"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_logging_disabling": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "Exception",
    "libensemble.comms.logs.LogConfig.config",
    "libensemble.libE.libE",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "libensemble.tests.unit_tests.test_libE_main.mock",
    "libensemble.tests.unit_tests.test_libE_main.os",
    "libensemble.tests.unit_tests.test_libE_main.pytest",
    "libensemble.tests.unit_tests.test_libE_main.remove_file_if_exists"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_manager_exception": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "libensemble.libE.libE",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tests.unit_tests.test_libE_main.fake_mpi",
    "libensemble.tests.unit_tests.test_libE_main.hfile_abort",
    "libensemble.tests.unit_tests.test_libE_main.mock",
    "libensemble.tests.unit_tests.test_libE_main.os",
    "libensemble.tests.unit_tests.test_libE_main.pfile_abort",
    "libensemble.tests.unit_tests.test_libE_main.pytest",
    "libensemble.tests.unit_tests.test_libE_main.remove_file_if_exists"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_libE_main.test_proc_not_in_communicator": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "float",
    "libensemble.libE.libE",
    "libensemble.tests.regression_tests.common.mpi_comm_excl",
    "libensemble.tests.unit_tests.test_libE_main.libE_specs",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_loc_stack": {
  "data": {},
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_loc_stack.LocationStack": {
  "data": {
   "shadows": "libensemble.utils.loc_stack.LocationStack"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_loc_stack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_loc_stack.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_loc_stack.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_loc_stack.test_location_stack": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_loc_stack.os",
    "libensemble.tests.unit_tests.test_loc_stack.shutil",
    "libensemble.tests.unit_tests.test_loc_stack.tempfile",
    "libensemble.utils.loc_stack.LocationStack",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_manager_main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_manager_main.test_term_test_1",
    "libensemble.tests.unit_tests.test_manager_main.test_term_test_2",
    "libensemble.tests.unit_tests.test_manager_main.test_term_test_3",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_manager_main.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_manager_main.libE_specs": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_manager_main.man": {
  "data": {
   "shadows": "libensemble.libE_manager"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_manager_main.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_manager_main.numpy.lib.recfunctions": {
  "data": {
   "shadows": "numpy.lib.recfunctions"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_manager_main.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_manager_main.test_term_test_1": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libensemble.libE_manager.Manager",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_manager_main.libE_specs"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_manager_main.test_term_test_2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "libensemble.libE_manager.Manager",
    "libensemble.tests.unit_tests.setup.hist_setup2",
    "libensemble.tests.unit_tests.test_manager_main.libE_specs",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_manager_main.test_term_test_3": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "libensemble.libE_manager.Manager",
    "libensemble.tests.unit_tests.setup.hist_setup2",
    "libensemble.tests.unit_tests.test_manager_main.libE_specs",
    "libensemble.tests.unit_tests.test_manager_main.time",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_manager_main.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_mpi4py": {
  "data": {
   "symbols_in_volume": [
    "len",
    "libensemble.sim_funcs.helloworld.name",
    "libensemble.sim_funcs.helloworld.rank",
    "libensemble.sim_funcs.helloworld.size"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_mpi4py.name": {
  "data": {
   "shadows": "libensemble.sim_funcs.helloworld.name"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_mpi4py.rank": {
  "data": {
   "shadows": "libensemble.sim_funcs.helloworld.rank"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_mpi4py.size": {
  "data": {
   "shadows": "libensemble.sim_funcs.helloworld.size"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_node_resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_node_resources.setup_standalone_run",
    "libensemble.tests.unit_tests.test_node_resources.teardown_standalone_run",
    "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_empty",
    "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_lsf",
    "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_lsf_shortform",
    "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_unknown_env"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_node_resources.EnvResources": {
  "data": {
   "shadows": "libensemble.resources.env_resources.EnvResources"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_node_resources.node_resources": {
  "data": {
   "shadows": "libensemble.resources.node_resources"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_node_resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_node_resources.setup_function": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_node_resources.os",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.setup_standalone_run": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_node_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.teardown_function": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_node_resources.os",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.teardown_standalone_run": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_node_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_empty": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libensemble.resources.node_resources._get_cpu_resources_from_env"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_lsf": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.node_resources._get_cpu_resources_from_env",
    "libensemble.tests.unit_tests.test_node_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_lsf_shortform": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.node_resources._get_cpu_resources_from_env",
    "libensemble.tests.unit_tests.test_node_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_node_resources.test_get_cpu_resources_from_env_unknown_env": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.node_resources._get_cpu_resources_from_env",
    "libensemble.tests.unit_tests.test_node_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "float",
    "int",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.n",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_calc_rk",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_decide_where_to_start_localopt",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_declare_opt",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_exception_raising",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_failing_localopt_method",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_initialize_APOSMM",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.test_localopt_error_saving",
    "print"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.al": {
  "data": {
   "shadows": "libensemble.gen_funcs.old_aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.gen_out": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.libE_specs": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.n": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_calc_rk": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libensemble.gen_funcs.old_aposmm.calc_rk",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_decide_where_to_start_localopt": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "float",
    "len",
    "libensemble.gen_funcs.old_aposmm.decide_where_to_start_localopt",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.gen_out",
    "numpy.random.uniform",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_declare_opt": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "AssertionError",
    "float",
    "libensemble.gen_funcs.old_aposmm.update_history_optimal",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "numpy.arange",
    "numpy.finfo",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_exception_raising": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libensemble.gen_funcs.old_aposmm.advance_local_run",
    "libensemble.tests.unit_tests.setup.hist_setup1"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_failing_localopt_method": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libensemble.gen_funcs.old_aposmm.APOSMMException",
    "libensemble.gen_funcs.old_aposmm.advance_local_run",
    "libensemble.tests.unit_tests.setup.hist_setup1"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_initialize_APOSMM": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "libensemble.gen_funcs.old_aposmm.initialize_APOSMM",
    "libensemble.tests.unit_tests.setup.hist_setup1"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_old_aposmm_logic.test_localopt_error_saving": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "float",
    "libensemble.gen_funcs.old_aposmm.aposmm_logic",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_old_aposmm_logic.gen_out",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.random.uniform",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_persistent_aposmm.test_persis_aposmm_localopt_test",
    "libensemble.tests.unit_tests.test_persistent_aposmm.test_standalone_persistent_aposmm",
    "libensemble.tests.unit_tests.test_persistent_aposmm.test_update_history_optimal"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.FINISHED_PERSISTENT_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.al": {
  "data": {
   "shadows": "libensemble.gen_funcs.persistent_aposmm"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.gamma": {
  "data": {
   "shadows": "math.gamma"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.libE_specs": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.minima": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.six_hump_camel_minima"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.six_hump_camel_func": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.six_hump_camel_grad": {
  "data": {
   "shadows": "libensemble.sim_funcs.six_hump_camel.six_hump_camel_grad"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.test_persis_aposmm_localopt_test": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "float",
    "len",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "libensemble.tests.unit_tests.test_persistent_aposmm.libE_specs",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.test_standalone_persistent_aposmm": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.gen_funcs.persistent_aposmm.aposmm",
    "libensemble.message_numbers.FINISHED_PERSISTENT_GEN_TAG",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_grad",
    "libensemble.tests.regression_tests.support.six_hump_camel_minima",
    "math.gamma",
    "math.pi",
    "math.sqrt",
    "numpy.array",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.round",
    "numpy.sum",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.test_standalone_persistent_aposmm.combined_func": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_func",
    "libensemble.sim_funcs.six_hump_camel.six_hump_camel_grad"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_persistent_aposmm.test_update_history_optimal": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "libensemble.gen_funcs.persistent_aposmm.update_history_optimal",
    "libensemble.tests.unit_tests.setup.hist_setup1",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_resources.setup_standalone_run",
    "libensemble.tests.unit_tests.test_resources.teardown_standalone_run",
    "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_cobalt",
    "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_lsf",
    "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_lsf_shortform",
    "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_slurm",
    "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_wrklst_file",
    "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_standalone",
    "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_central_mode",
    "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_central_mode_remove_libE_proc",
    "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_distrib_mode",
    "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_distrib_mode_host_not_in_list",
    "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_distrib_mode_uneven_split",
    "libensemble.tests.unit_tests.test_resources.test_map_workerid_to_index",
    "libensemble.tests.unit_tests.test_resources.test_remove_libE_nodes",
    "libensemble.tests.unit_tests.test_resources.test_worker_resources"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_resources.EnvResources": {
  "data": {
   "shadows": "libensemble.resources.env_resources.EnvResources"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_resources.Fake_comm": {
  "data": {
   "lineno": 346
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_resources.Fake_comm.__init__": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.Fake_comm.get_num_workers": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.Resources": {
  "data": {
   "shadows": "libensemble.resources.resources.Resources"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_resources.ResourcesException": {
  "data": {
   "shadows": "libensemble.resources.resources.ResourcesException"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_resources.WorkerResources": {
  "data": {
   "shadows": "libensemble.resources.resources.WorkerResources"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_resources.setup_function": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_resources.os",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.setup_standalone_run": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.sname": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_resources.teardown_function": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_resources.os",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.teardown_standalone_run": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_cobalt": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.resources.Resources.get_global_nodelist",
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_lsf": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.resources.Resources.get_global_nodelist",
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_lsf_shortform": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.resources.Resources.get_global_nodelist",
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_slurm": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.resources.Resources.get_global_nodelist",
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_frm_wrklst_file": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.resources.Resources.get_global_nodelist",
    "libensemble.resources.resources.ResourcesException",
    "libensemble.tests.unit_tests.test_resources.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_global_nodelist_standalone": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libensemble.resources.env_resources.EnvResources",
    "libensemble.resources.resources.Resources.get_global_nodelist",
    "libensemble.tests.unit_tests.test_resources.os",
    "libensemble.tests.unit_tests.test_resources.socket"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_central_mode": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.WorkerResources.get_local_nodelist",
    "libensemble.tests.unit_tests.test_resources.os",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_central_mode_remove_libE_proc": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "enumerate",
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.WorkerResources.get_local_nodelist",
    "libensemble.tests.unit_tests.test_resources.os",
    "libensemble.tests.unit_tests.test_resources.socket",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_distrib_mode": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "enumerate",
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.WorkerResources.get_local_nodelist",
    "libensemble.tests.unit_tests.test_resources.os",
    "libensemble.tests.unit_tests.test_resources.socket",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_distrib_mode_host_not_in_list": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.WorkerResources.get_local_nodelist",
    "libensemble.tests.unit_tests.test_resources.os"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_get_local_nodelist_distrib_mode_uneven_split": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "enumerate",
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.WorkerResources.get_local_nodelist",
    "libensemble.tests.unit_tests.test_resources.os",
    "libensemble.tests.unit_tests.test_resources.socket",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_map_workerid_to_index": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "libensemble.resources.resources.WorkerResources.map_workerid_to_index",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_remove_libE_nodes": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "enumerate",
    "libensemble.resources.resources.Resources.remove_nodes",
    "libensemble.tests.unit_tests.test_resources.socket"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_resources.test_worker_resources": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "libensemble.resources.resources.Resources",
    "libensemble.resources.resources.WorkerResources",
    "libensemble.tests.unit_tests.test_resources.Fake_comm",
    "libensemble.tests.unit_tests.test_resources.os",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_scipy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_scipy.test_cdist_issue",
    "libensemble.tests.unit_tests.test_scipy.test_save"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_scipy.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_scipy.gen_out": {
  "data": {
   "shadows": "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_scipy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_scipy.test_cdist_issue": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_2d",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.zeros",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_scipy.test_save": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "libensemble.tests.regression_tests.support.uniform_or_localopt_gen_out",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.save",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_copy_back",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_loc_stack_FileExists_exceptions",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_mixes",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_single_element",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_two_ranges",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_two_separate_elements",
    "libensemble.tests.unit_tests.test_sim_dir_properties.test_worker_dirs_but_no_sim_dirs"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.LocationStack": {
  "data": {
   "shadows": "libensemble.utils.loc_stack.LocationStack"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.Worker": {
  "data": {
   "shadows": "libensemble.libE_worker.Worker"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_copy_back": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "FakeWorker",
    "dir",
    "libensemble.libE_worker.Worker._copy_back",
    "libensemble.tests.unit_tests.test_sim_dir_properties.os",
    "libensemble.tests.unit_tests.test_sim_dir_properties.shutil",
    "libensemble.utils.loc_stack.LocationStack"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_copy_back.FakeWorker": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_copy_back.FakeWorker.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_loc_stack_FileExists_exceptions": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "FileExistsError",
    "all",
    "dir",
    "len",
    "libensemble.libE_worker.Worker._make_calc_dir",
    "libensemble.tests.unit_tests.test_sim_dir_properties.os",
    "libensemble.tests.unit_tests.test_sim_dir_properties.shutil",
    "libensemble.utils.loc_stack.LocationStack",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_mixes": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libensemble.libE_worker.Worker._extract_H_ranges",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_single_element": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "libensemble.libE_worker.Worker._extract_H_ranges",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_two_ranges": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libensemble.libE_worker.Worker._extract_H_ranges",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_range_two_separate_elements": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libensemble.libE_worker.Worker._extract_H_ranges",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_sim_dir_properties.test_worker_dirs_but_no_sim_dirs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dir",
    "libensemble.libE_worker.Worker._make_calc_dir",
    "libensemble.tests.unit_tests.test_sim_dir_properties.os",
    "libensemble.tests.unit_tests.test_sim_dir_properties.shutil",
    "libensemble.utils.loc_stack.LocationStack",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_task_funcs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_task_funcs.test_task_funcs"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_task_funcs.Executor": {
  "data": {
   "shadows": "libensemble.executors.executor.Executor"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_task_funcs.ExecutorException": {
  "data": {
   "shadows": "libensemble.executors.executor.ExecutorException"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_task_funcs.MPIExecutor": {
  "data": {
   "shadows": "libensemble.executors.mpi_executor.MPIExecutor"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_task_funcs.Task": {
  "data": {
   "shadows": "libensemble.executors.executor.Task"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_task_funcs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_task_funcs.setup_function": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_task_funcs.setup_module": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_task_funcs.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_task_funcs.teardown_module": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libensemble.executors.executor.Executor.executor",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_task_funcs.test_task_funcs": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "libensemble.executors.executor.ExecutorException",
    "libensemble.executors.executor.Task",
    "libensemble.executors.mpi_executor.MPIExecutor",
    "libensemble.tests.unit_tests.test_task_funcs.os",
    "libensemble.tests.unit_tests.test_task_funcs.shutil",
    "libensemble.tests.unit_tests.test_task_funcs.time",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_task_funcs.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_timer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.test_timer.test_timer"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.test_timer.Timer": {
  "data": {
   "shadows": "libensemble.utils.timer.Timer"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.test_timer.test_timer": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libensemble.tests.unit_tests.test_timer.time",
    "libensemble.utils.timer.Timer"
   ]
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.test_timer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.tofix__test_worker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tests.unit_tests.tofix__test_worker.test_worker_init_run"
   ]
  },
  "type": "module"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.EVAL_SIM_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_SIM_TAG"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.Worker": {
  "data": {
   "shadows": "libensemble.libE_worker.Worker"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.libE_fields": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.libE_fields"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.setup": {
  "data": {
   "shadows": "libensemble.tests.unit_tests.setup"
  },
  "type": "import"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.simfunc": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "libensemble.tests.unit_tests.tofix__test_worker.test_worker_init_run": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "int",
    "libensemble.libE_worker.Worker",
    "libensemble.libE_worker.Worker.init_workers",
    "libensemble.message_numbers.EVAL_SIM_TAG",
    "libensemble.tests.unit_tests.setup.make_criteria_and_specs_0",
    "libensemble.tools.fields_keys.libE_fields",
    "list",
    "numpy.inf",
    "numpy.zeros",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "libensemble.tools": {
  "data": {},
  "type": "module"
 },
 "libensemble.tools.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "libensemble.tools.alloc_support": {
  "data": {},
  "type": "module"
 },
 "libensemble.tools.alloc_support.EVAL_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.tools.alloc_support.EVAL_SIM_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_SIM_TAG"
  },
  "type": "import"
 },
 "libensemble.tools.alloc_support.avail_worker_ids": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.logical_and"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.alloc_support.count_gens": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.alloc_support.count_persis_gens": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.alloc_support.gen_work": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_GEN_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.alloc_support.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tools.alloc_support.sim_work": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_SIM_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.alloc_support.test_any_gen": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "any",
    "libensemble.message_numbers.EVAL_GEN_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs": {
  "data": {},
  "type": "module"
 },
 "libensemble.tools.check_inputs._check_consistent_field": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.allowed_alloc_spec_keys": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.allowed_alloc_spec_keys"
  },
  "type": "import"
 },
 "libensemble.tools.check_inputs.allowed_gen_spec_keys": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.allowed_gen_spec_keys"
  },
  "type": "import"
 },
 "libensemble.tools.check_inputs.allowed_libE_spec_keys": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.allowed_libE_spec_keys"
  },
  "type": "import"
 },
 "libensemble.tools.check_inputs.allowed_sim_spec_keys": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.allowed_sim_spec_keys"
  },
  "type": "import"
 },
 "libensemble.tools.check_inputs.check_H": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.check_inputs._check_consistent_field",
    "libensemble.tools.fields_keys.libE_fields",
    "list",
    "numpy.all",
    "numpy.zeros",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.check_alloc_specs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "libensemble.tools.fields_keys.allowed_alloc_spec_keys"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.check_exit_criteria": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.check_gen_specs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "all",
    "bool",
    "dict",
    "isinstance",
    "len",
    "libensemble.tools.fields_keys.allowed_gen_spec_keys",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.check_inputs": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "libensemble.tools.check_inputs.check_H",
    "libensemble.tools.check_inputs.check_alloc_specs",
    "libensemble.tools.check_inputs.check_exit_criteria",
    "libensemble.tools.check_inputs.check_gen_specs",
    "libensemble.tools.check_inputs.check_libE_specs",
    "libensemble.tools.check_inputs.check_sim_specs",
    "libensemble.tools.fields_keys.libE_fields"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.check_libE_specs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "libensemble.tools.fields_keys.allowed_libE_spec_keys"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.check_sim_specs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "all",
    "any",
    "dict",
    "isinstance",
    "len",
    "libensemble.tools.fields_keys.allowed_sim_spec_keys",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.check_inputs.libE_fields": {
  "data": {
   "shadows": "libensemble.tools.fields_keys.libE_fields"
  },
  "type": "import"
 },
 "libensemble.tools.check_inputs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tools.fields_keys": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "libensemble.tools.fields_keys.libE_spec_calc_dir_combined",
    "libensemble.tools.fields_keys.libE_spec_calc_dir_misc",
    "libensemble.tools.fields_keys.libE_spec_gen_dir_keys",
    "libensemble.tools.fields_keys.libE_spec_sim_dir_keys"
   ]
  },
  "type": "module"
 },
 "libensemble.tools.fields_keys.allowed_alloc_spec_keys": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.allowed_gen_spec_keys": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.allowed_libE_spec_keys": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.allowed_sim_spec_keys": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.libE_fields": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.libE_spec_calc_dir_combined": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.libE_spec_calc_dir_misc": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.libE_spec_gen_dir_keys": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libensemble.tools.fields_keys.libE_spec_sim_dir_keys": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tools.forkable_pdb": {
  "data": {},
  "type": "module"
 },
 "libensemble.tools.forkable_pdb.ForkablePdb": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libensemble.tools.forkable_pdb.pdb"
   ]
  },
  "type": "class"
 },
 "libensemble.tools.forkable_pdb.ForkablePdb.interaction": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "libensemble.tools.forkable_pdb.pdb",
    "libensemble.tools.forkable_pdb.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.forkable_pdb.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "libensemble.tools.forkable_pdb.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tools.gen_support": {
  "data": {},
  "type": "module"
 },
 "libensemble.tools.gen_support.EVAL_GEN_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.EVAL_GEN_TAG"
  },
  "type": "import"
 },
 "libensemble.tools.gen_support.PERSIS_STOP": {
  "data": {
   "shadows": "libensemble.message_numbers.PERSIS_STOP"
  },
  "type": "import"
 },
 "libensemble.tools.gen_support.STOP_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.STOP_TAG"
  },
  "type": "import"
 },
 "libensemble.tools.gen_support.UNSET_TAG": {
  "data": {
   "shadows": "libensemble.message_numbers.UNSET_TAG"
  },
  "type": "import"
 },
 "libensemble.tools.gen_support.get_mgr_worker_msg": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libensemble.message_numbers.PERSIS_STOP",
    "libensemble.message_numbers.STOP_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.gen_support.send_mgr_worker_msg": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libensemble.message_numbers.EVAL_GEN_TAG",
    "libensemble.message_numbers.UNSET_TAG"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.gen_support.sendrecv_mgr_worker_msg": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "libensemble.tools.gen_support.get_mgr_worker_msg",
    "libensemble.tools.gen_support.send_mgr_worker_msg"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.parse_args": {
  "data": {
   "symbols_in_volume": [
    "int",
    "libensemble.tools.parse_args.argparse",
    "libensemble.tools.parse_args.parser",
    "libensemble.tools.parse_args.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "libensemble.tools.parse_args.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "libensemble.tools.parse_args._client_parse_args": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.parse_args._local_parse_args": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "libensemble.tools.parse_args._mpi_parse_args": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD",
    "mpi4py.MPI.COMM_WORLD.Get_rank",
    "mpi4py.MPI.COMM_WORLD.Get_size"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.parse_args._ssh_parse_args": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.parse_args.os",
    "libensemble.tools.parse_args.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.parse_args._tcp_parse_args": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libensemble.tools.parse_args.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.parse_args.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libensemble.tools.parse_args.logger": {
  "data": {
   "shadows": "libensemble.tools.tools.logger"
  },
  "type": "import"
 },
 "libensemble.tools.parse_args.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tools.parse_args.parse_args": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libensemble.tools.parse_args._client_parse_args",
    "libensemble.tools.parse_args._local_parse_args",
    "libensemble.tools.parse_args._mpi_parse_args",
    "libensemble.tools.parse_args._ssh_parse_args",
    "libensemble.tools.parse_args._tcp_parse_args",
    "libensemble.tools.parse_args.os",
    "libensemble.tools.parse_args.parser",
    "libensemble.tools.parse_args.sys",
    "libensemble.tools.tools.logger.warning"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.parse_args.parser": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libensemble.tools.parse_args.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tools.tools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libensemble.tools.tools.formatter",
    "libensemble.tools.tools.logger",
    "libensemble.tools.tools.logging",
    "libensemble.tools.tools.sth",
    "libensemble.tools.tools.sys",
    "libensemble.tools.tools.utils_logformat"
   ]
  },
  "type": "module"
 },
 "libensemble.tools.tools._USER_CALC_DIR_WARNING": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libensemble.tools.tools._USER_SIM_ID_WARNING": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libensemble.tools.tools.add_unique_random_streams": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.tools.eprint": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "libensemble.tools.tools.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.tools.formatter": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "libensemble.tools.tools.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "libensemble.tools.tools.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "libensemble.tools.tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "libensemble.tools.tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.tools.tools.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "libensemble.tools.tools.save_libE_output": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "libensemble.tools.tools.logger",
    "libensemble.tools.tools.os",
    "libensemble.tools.tools.pickle",
    "numpy.save",
    "open",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "libensemble.tools.tools.sth": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libensemble.tools.tools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.tools.tools.utils_logformat": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "libensemble.utils": {
  "data": {},
  "type": "module"
 },
 "libensemble.utils.launcher": {
  "data": {
   "symbols_in_volume": [
    "libensemble.utils.launcher.sys",
    "libensemble.utils.launcher.wait_py32",
    "libensemble.utils.launcher.wait_py33"
   ]
  },
  "type": "module"
 },
 "libensemble.utils.launcher.cancel": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "libensemble.utils.launcher.terminatepg",
    "libensemble.utils.launcher.wait_and_kill"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.form_command": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "filter",
    "itertools.chain.from_iterable",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.form_command.fill": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError",
    "libensemble.utils.launcher.shlex"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.killpg": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "OSError",
    "hasattr",
    "libensemble.utils.launcher.os",
    "libensemble.utils.launcher.signal"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.launch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libensemble.utils.launcher.form_command",
    "libensemble.utils.launcher.subprocess"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.process_is_stopped": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libensemble.utils.launcher.time"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.terminatepg": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "OSError",
    "hasattr",
    "libensemble.utils.launcher.os",
    "libensemble.utils.launcher.signal"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libensemble.utils.launcher.wait": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "libensemble.utils.launcher.wait_and_kill": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libensemble.utils.launcher.killpg",
    "libensemble.utils.launcher.wait"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.wait_py32": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libensemble.utils.launcher.process_is_stopped"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.launcher.wait_py33": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libensemble.utils.launcher.subprocess"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack": {
  "data": {},
  "type": "module"
 },
 "libensemble.utils.loc_stack.LocationStack": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "libensemble.utils.loc_stack.LocationStack.Saved": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "libensemble.utils.loc_stack.LocationStack.Saved.__enter__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.Saved.__exit__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.Saved.__init__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.clean_locs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "libensemble.utils.loc_stack.os",
    "libensemble.utils.loc_stack.shutil"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.copy_or_symlink": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "FileExistsError",
    "libensemble.utils.loc_stack.os",
    "libensemble.utils.loc_stack.shutil"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.dir": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "libensemble.utils.loc_stack.LocationStack"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.loc": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "libensemble.utils.loc_stack.LocationStack"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.pop": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "libensemble.utils.loc_stack.os"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.push": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "libensemble.utils.loc_stack.os"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.push_loc": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.LocationStack.register_loc": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "libensemble.utils.loc_stack.os"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.loc_stack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libensemble.utils.loc_stack.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libensemble.utils.timer": {
  "data": {},
  "type": "module"
 },
 "libensemble.utils.timer.TaskTimer": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libensemble.utils.timer.Timer"
   ]
  },
  "type": "class"
 },
 "libensemble.utils.timer.TaskTimer.__str__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "libensemble.utils.timer.Timer.__enter__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.__exit__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.__str__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.date_end": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "libensemble.utils.timer.datetime",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.date_start": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libensemble.utils.timer.datetime",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.elapsed": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libensemble.utils.timer.TimestampMillisec64",
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.start": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "libensemble.utils.timer.TimestampMillisec64"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.stop": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libensemble.utils.timer.TimestampMillisec64"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.Timer.total": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.TimestampMillisec64": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "libensemble.utils.timer.datetime"
   ]
  },
  "type": "function"
 },
 "libensemble.utils.timer.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 }
}