{
 "grakel": {
  "data": {},
  "type": "module"
 },
 "grakel.CoreFramework": {
  "data": {
   "shadows": "grakel.kernels.CoreFramework"
  },
  "type": "import"
 },
 "grakel.EdgeHistogram": {
  "data": {
   "shadows": "grakel.kernels.EdgeHistogram"
  },
  "type": "import"
 },
 "grakel.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.GraphHopper": {
  "data": {
   "shadows": "grakel.kernels.GraphHopper"
  },
  "type": "import"
 },
 "grakel.GraphKernel": {
  "data": {
   "shadows": "grakel.graph_kernels.GraphKernel"
  },
  "type": "import"
 },
 "grakel.GraphletSampling": {
  "data": {
   "shadows": "grakel.kernels.GraphletSampling"
  },
  "type": "import"
 },
 "grakel.HadamardCode": {
  "data": {
   "shadows": "grakel.kernels.HadamardCode"
  },
  "type": "import"
 },
 "grakel.KMTransformer": {
  "data": {
   "shadows": "grakel.utils.KMTransformer"
  },
  "type": "import"
 },
 "grakel.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.LovaszTheta": {
  "data": {
   "shadows": "grakel.kernels.LovaszTheta"
  },
  "type": "import"
 },
 "grakel.MultiscaleLaplacian": {
  "data": {
   "shadows": "grakel.kernels.MultiscaleLaplacian"
  },
  "type": "import"
 },
 "grakel.NeighborhoodHash": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodHash"
  },
  "type": "import"
 },
 "grakel.NeighborhoodSubgraphPairwiseDistance": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodSubgraphPairwiseDistance"
  },
  "type": "import"
 },
 "grakel.OddSth": {
  "data": {
   "shadows": "grakel.kernels.OddSth"
  },
  "type": "import"
 },
 "grakel.Propagation": {
  "data": {
   "shadows": "grakel.kernels.Propagation"
  },
  "type": "import"
 },
 "grakel.PropagationAttr": {
  "data": {
   "shadows": "grakel.kernels.PropagationAttr"
  },
  "type": "import"
 },
 "grakel.PyramidMatch": {
  "data": {
   "shadows": "grakel.kernels.PyramidMatch"
  },
  "type": "import"
 },
 "grakel.RandomWalk": {
  "data": {
   "shadows": "grakel.kernels.RandomWalk"
  },
  "type": "import"
 },
 "grakel.RandomWalkLabeled": {
  "data": {
   "shadows": "grakel.kernels.RandomWalkLabeled"
  },
  "type": "import"
 },
 "grakel.ShortestPath": {
  "data": {
   "shadows": "grakel.kernels.ShortestPath"
  },
  "type": "import"
 },
 "grakel.ShortestPathAttr": {
  "data": {
   "shadows": "grakel.kernels.ShortestPathAttr"
  },
  "type": "import"
 },
 "grakel.SubgraphMatching": {
  "data": {
   "shadows": "grakel.kernels.SubgraphMatching"
  },
  "type": "import"
 },
 "grakel.SvmTheta": {
  "data": {
   "shadows": "grakel.kernels.SvmTheta"
  },
  "type": "import"
 },
 "grakel.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.WeisfeilerLehmanOptimalAssignment": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehmanOptimalAssignment"
  },
  "type": "import"
 },
 "grakel.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "grakel.__version__": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "grakel.cross_validate_Kfold_SVM": {
  "data": {
   "shadows": "grakel.utils.cross_validate_Kfold_SVM"
  },
  "type": "import"
 },
 "grakel.datasets": {
  "data": {},
  "type": "module"
 },
 "grakel.datasets.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "grakel.datasets.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "grakel.datasets.base.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "grakel.datasets.base.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "grakel.datasets.base.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.datasets.base.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "grakel.datasets.base._download_zip": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.base.os",
    "grakel.datasets.base.ssl",
    "open",
    "shutil.copyfileobj",
    "urllib.error.HTTPError",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.base.copyfileobj": {
  "data": {
   "shadows": "shutil.copyfileobj"
  },
  "type": "import"
 },
 "grakel.datasets.base.dataset_metadata": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "grakel.datasets.base.fetch_dataset": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "grakel.datasets.base._download_zip",
    "grakel.datasets.base.dataset_metadata",
    "grakel.datasets.base.os",
    "grakel.datasets.base.read_data",
    "grakel.datasets.base.shutil",
    "grakel.datasets.base.symmetric_dataset",
    "grakel.datasets.base.zipfile",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.base.get_dataset_info": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "grakel.datasets.base.dataset_metadata"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.datasets.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "grakel.datasets.base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "grakel.datasets.base.read_data": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "collections.Counter",
    "dict",
    "enumerate",
    "float",
    "grakel.datasets.base.dataset_metadata",
    "grakel.datasets.base.os",
    "grakel.datasets.base.symmetric_dataset",
    "grakel.graph.Graph",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.int",
    "open",
    "range",
    "set",
    "sklearn.utils.Bunch",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "grakel.datasets.base.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "grakel.datasets.base.symmetric_dataset": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "grakel.datasets.base.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "grakel.datasets.base.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "grakel.datasets.fetch_dataset": {
  "data": {
   "shadows": "grakel.datasets.base.fetch_dataset"
  },
  "type": "import"
 },
 "grakel.datasets.generate_dataset": {
  "data": {
   "shadows": "grakel.datasets.testing.generate_dataset"
  },
  "type": "import"
 },
 "grakel.datasets.get_dataset_info": {
  "data": {
   "shadows": "grakel.datasets.base.get_dataset_info"
  },
  "type": "import"
 },
 "grakel.datasets.testing": {
  "data": {},
  "type": "module"
 },
 "grakel.datasets.testing.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "grakel.datasets.testing.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.datasets.testing.generate_dataset": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "StopIteration",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "next",
    "numbers.Real",
    "numpy.triu",
    "numpy.where",
    "numpy.zeros",
    "rand",
    "randint",
    "range",
    "set",
    "sklearn.utils.check_random_state",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.testing.generate_dataset.rand": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.testing.generate_dataset.randint": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "grakel.datasets.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.graph_from_csv": {
  "data": {
   "shadows": "grakel.utils.graph_from_csv"
  },
  "type": "import"
 },
 "grakel.graph_from_networkx": {
  "data": {
   "shadows": "grakel.utils.graph_from_networkx"
  },
  "type": "import"
 },
 "grakel.graph_from_pandas": {
  "data": {
   "shadows": "grakel.utils.graph_from_pandas"
  },
  "type": "import"
 },
 "grakel.graph_kernels": {
  "data": {
   "symbols_in_volume": [
    "grakel.graph_kernels.sbk",
    "grakel.graph_kernels.sep",
    "grakel.graph_kernels.sf",
    "set"
   ]
  },
  "type": "module"
 },
 "grakel.graph_kernels.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "grakel.graph_kernels.CoreFramework": {
  "data": {
   "shadows": "grakel.kernels.CoreFramework"
  },
  "type": "import"
 },
 "grakel.graph_kernels.EdgeHistogram": {
  "data": {
   "shadows": "grakel.kernels.EdgeHistogram"
  },
  "type": "import"
 },
 "grakel.graph_kernels.GraphHopper": {
  "data": {
   "shadows": "grakel.kernels.GraphHopper"
  },
  "type": "import"
 },
 "grakel.graph_kernels.GraphKernel": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "grakel.graph_kernels.GraphKernel.__init__": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.fit": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "bool",
    "grakel.graph_kernels.warnings",
    "len",
    "list",
    "min",
    "numpy.dot",
    "numpy.maximum",
    "numpy.sqrt",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.fit_transform": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.initialize": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "dict",
    "grakel.graph_kernels.copy",
    "grakel.graph_kernels.default_n_components",
    "int",
    "kernel",
    "list",
    "sklearn.utils.check_random_state",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.make_kernel_": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "future.utils.iteritems",
    "get_random_state_",
    "grakel.graph_kernels.sbk",
    "grakel.graph_kernels.sbks",
    "grakel.graph_kernels.sf",
    "grakel.graph_kernels.sfs",
    "grakel.graph_kernels.sk_msg",
    "grakel.graph_kernels.warnings",
    "grakel.kernels.CoreFramework",
    "grakel.kernels.EdgeHistogram",
    "grakel.kernels.GraphHopper",
    "grakel.kernels.GraphletSampling",
    "grakel.kernels.HadamardCode",
    "grakel.kernels.LovaszTheta",
    "grakel.kernels.MultiscaleLaplacian",
    "grakel.kernels.NeighborhoodHash",
    "grakel.kernels.NeighborhoodSubgraphPairwiseDistance",
    "grakel.kernels.OddSth",
    "grakel.kernels.Propagation",
    "grakel.kernels.PropagationAttr",
    "grakel.kernels.PyramidMatch",
    "grakel.kernels.RandomWalk",
    "grakel.kernels.RandomWalkLabeled",
    "grakel.kernels.ShortestPath",
    "grakel.kernels.ShortestPathAttr",
    "grakel.kernels.SubgraphMatching",
    "grakel.kernels.SvmTheta",
    "grakel.kernels.VertexHistogram",
    "grakel.kernels.WeisfeilerLehman",
    "grakel.kernels.WeisfeilerLehmanOptimalAssignment",
    "kernel",
    "kernel.pop",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.make_kernel_.get_random_state_": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "kernel.pop"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.set_params": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "future.utils.iteritems",
    "grakel.graph_kernels.GraphKernel",
    "grakel.graph_kernels.copy",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphKernel.transform": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.graph_kernels.GraphletSampling": {
  "data": {
   "shadows": "grakel.kernels.GraphletSampling"
  },
  "type": "import"
 },
 "grakel.graph_kernels.HadamardCode": {
  "data": {
   "shadows": "grakel.kernels.HadamardCode"
  },
  "type": "import"
 },
 "grakel.graph_kernels.LovaszTheta": {
  "data": {
   "shadows": "grakel.kernels.LovaszTheta"
  },
  "type": "import"
 },
 "grakel.graph_kernels.MultiscaleLaplacian": {
  "data": {
   "shadows": "grakel.kernels.MultiscaleLaplacian"
  },
  "type": "import"
 },
 "grakel.graph_kernels.NeighborhoodHash": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodHash"
  },
  "type": "import"
 },
 "grakel.graph_kernels.NeighborhoodSubgraphPairwiseDistance": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodSubgraphPairwiseDistance"
  },
  "type": "import"
 },
 "grakel.graph_kernels.OddSth": {
  "data": {
   "shadows": "grakel.kernels.OddSth"
  },
  "type": "import"
 },
 "grakel.graph_kernels.Propagation": {
  "data": {
   "shadows": "grakel.kernels.Propagation"
  },
  "type": "import"
 },
 "grakel.graph_kernels.PropagationAttr": {
  "data": {
   "shadows": "grakel.kernels.PropagationAttr"
  },
  "type": "import"
 },
 "grakel.graph_kernels.PyramidMatch": {
  "data": {
   "shadows": "grakel.kernels.PyramidMatch"
  },
  "type": "import"
 },
 "grakel.graph_kernels.RandomWalk": {
  "data": {
   "shadows": "grakel.kernels.RandomWalk"
  },
  "type": "import"
 },
 "grakel.graph_kernels.RandomWalkLabeled": {
  "data": {
   "shadows": "grakel.kernels.RandomWalkLabeled"
  },
  "type": "import"
 },
 "grakel.graph_kernels.ShortestPath": {
  "data": {
   "shadows": "grakel.kernels.ShortestPath"
  },
  "type": "import"
 },
 "grakel.graph_kernels.ShortestPathAttr": {
  "data": {
   "shadows": "grakel.kernels.ShortestPathAttr"
  },
  "type": "import"
 },
 "grakel.graph_kernels.SubgraphMatching": {
  "data": {
   "shadows": "grakel.kernels.SubgraphMatching"
  },
  "type": "import"
 },
 "grakel.graph_kernels.SvmTheta": {
  "data": {
   "shadows": "grakel.kernels.SvmTheta"
  },
  "type": "import"
 },
 "grakel.graph_kernels.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "grakel.graph_kernels.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.graph_kernels.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.graph_kernels.WeisfeilerLehmanOptimalAssignment": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehmanOptimalAssignment"
  },
  "type": "import"
 },
 "grakel.graph_kernels.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.graph_kernels.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.graph_kernels.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "grakel.graph_kernels.default_n_components": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "grakel.graph_kernels.iteritems": {
  "data": {
   "shadows": "future.utils.iteritems"
  },
  "type": "import"
 },
 "grakel.graph_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.graph_kernels.sbk": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "grakel.graph_kernels.sbks": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "grakel.graph_kernels.sep": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "grakel.graph_kernels.sf": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "grakel.graph_kernels.sfs": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "grakel.graph_kernels.sk_msg": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "grakel.graph_kernels.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "grakel.graph_kernels.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.CoreFramework": {
  "data": {
   "shadows": "grakel.kernels.core_framework.CoreFramework"
  },
  "type": "import"
 },
 "grakel.kernels.EdgeHistogram": {
  "data": {
   "shadows": "grakel.kernels.edge_histogram.EdgeHistogram"
  },
  "type": "import"
 },
 "grakel.kernels.GraphHopper": {
  "data": {
   "shadows": "grakel.kernels.graph_hopper.GraphHopper"
  },
  "type": "import"
 },
 "grakel.kernels.GraphletSampling": {
  "data": {
   "shadows": "grakel.kernels.graphlet_sampling.GraphletSampling"
  },
  "type": "import"
 },
 "grakel.kernels.HadamardCode": {
  "data": {
   "shadows": "grakel.kernels.hadamard_code.HadamardCode"
  },
  "type": "import"
 },
 "grakel.kernels.Kernel": {
  "data": {
   "shadows": "grakel.kernels.kernel.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.LovaszTheta": {
  "data": {
   "shadows": "grakel.kernels.lovasz_theta.LovaszTheta"
  },
  "type": "import"
 },
 "grakel.kernels.MultiscaleLaplacian": {
  "data": {
   "shadows": "grakel.kernels.multiscale_laplacian.MultiscaleLaplacian"
  },
  "type": "import"
 },
 "grakel.kernels.NeighborhoodHash": {
  "data": {
   "shadows": "grakel.kernels.neighborhood_hash.NeighborhoodHash"
  },
  "type": "import"
 },
 "grakel.kernels.NeighborhoodSubgraphPairwiseDistance": {
  "data": {
   "shadows": "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance"
  },
  "type": "import"
 },
 "grakel.kernels.OddSth": {
  "data": {
   "shadows": "grakel.kernels.odd_sth.OddSth"
  },
  "type": "import"
 },
 "grakel.kernels.Propagation": {
  "data": {
   "shadows": "grakel.kernels.propagation.Propagation"
  },
  "type": "import"
 },
 "grakel.kernels.PropagationAttr": {
  "data": {
   "shadows": "grakel.kernels.propagation.PropagationAttr"
  },
  "type": "import"
 },
 "grakel.kernels.PyramidMatch": {
  "data": {
   "shadows": "grakel.kernels.pyramid_match.PyramidMatch"
  },
  "type": "import"
 },
 "grakel.kernels.RandomWalk": {
  "data": {
   "shadows": "grakel.kernels.random_walk.RandomWalk"
  },
  "type": "import"
 },
 "grakel.kernels.RandomWalkLabeled": {
  "data": {
   "shadows": "grakel.kernels.random_walk.RandomWalkLabeled"
  },
  "type": "import"
 },
 "grakel.kernels.ShortestPath": {
  "data": {
   "shadows": "grakel.kernels.shortest_path.ShortestPath"
  },
  "type": "import"
 },
 "grakel.kernels.ShortestPathAttr": {
  "data": {
   "shadows": "grakel.kernels.shortest_path.ShortestPathAttr"
  },
  "type": "import"
 },
 "grakel.kernels.SubgraphMatching": {
  "data": {
   "shadows": "grakel.kernels.subgraph_matching.SubgraphMatching"
  },
  "type": "import"
 },
 "grakel.kernels.SvmTheta": {
  "data": {
   "shadows": "grakel.kernels.svm_theta.SvmTheta"
  },
  "type": "import"
 },
 "grakel.kernels.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.vertex_histogram.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.kernels.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.kernels.WeisfeilerLehmanOptimalAssignment": {
  "data": {
   "shadows": "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment"
  },
  "type": "import"
 },
 "grakel.kernels.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "grakel.kernels._isomorphism": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels._isomorphism.Graph": {
  "data": {
   "shadows": "grakel.kernels._isomorphism.bliss.Graph"
  },
  "type": "import"
 },
 "grakel.kernels._isomorphism.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "dict",
    "enumerate",
    "grakel.datasets.fetch_dataset",
    "grakel.kernels.VertexHistogram",
    "grakel.kernels.WeisfeilerLehman",
    "grakel.kernels.core_framework.C_grid",
    "grakel.kernels.core_framework.CoreFramework",
    "grakel.kernels.core_framework.K",
    "grakel.kernels.core_framework.K_test",
    "grakel.kernels.core_framework.K_train",
    "grakel.kernels.core_framework.acc",
    "grakel.kernels.core_framework.argparse",
    "grakel.kernels.core_framework.args",
    "grakel.kernels.core_framework.bk",
    "grakel.kernels.core_framework.clf",
    "grakel.kernels.core_framework.dataset_attr",
    "grakel.kernels.core_framework.dataset_name",
    "grakel.kernels.core_framework.end",
    "grakel.kernels.core_framework.full",
    "grakel.kernels.core_framework.gk",
    "grakel.kernels.core_framework.kf",
    "grakel.kernels.core_framework.mc",
    "grakel.kernels.core_framework.niter",
    "grakel.kernels.core_framework.parser",
    "grakel.kernels.core_framework.sec_to_time",
    "grakel.kernels.core_framework.start",
    "grakel.kernels.core_framework.stats",
    "grakel.kernels.core_framework.tei",
    "grakel.kernels.core_framework.tri",
    "grakel.kernels.core_framework.y_pred",
    "int",
    "len",
    "list",
    "max",
    "numpy.arange",
    "numpy.mean",
    "print",
    "round",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.KFold",
    "sklearn.svm.SVC",
    "str",
    "time.time",
    "tqdm.tqdm",
    "zip"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.core_framework.C_grid": {
  "data": {
   "lineno": 497
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.CoreFramework": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.core_framework.CoreFramework.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "grakel.kernels.core_framework.CoreFramework",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.CoreFramework.diagonal": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.zeros",
    "range",
    "six.iteritems",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.CoreFramework.fit_transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diagonal",
    "numpy.divide",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.CoreFramework.initialize": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "dict",
    "grakel.kernels.Kernel",
    "grakel.kernels.core_framework.warnings",
    "grakel.kernels.shortest_path.ShortestPath",
    "int",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.CoreFramework.parse_input": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.core_framework.collections",
    "grakel.kernels.core_framework.core_number",
    "grakel.kernels.core_framework.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.zeros",
    "range",
    "six.iteritems",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.CoreFramework.transform": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.K": {
  "data": {
   "lineno": 530
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.K_test": {
  "data": {
   "lineno": 535
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.K_train": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.ShortestPath": {
  "data": {
   "shadows": "grakel.kernels.shortest_path.ShortestPath"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.acc": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.args": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.bk": {
  "data": {
   "lineno": 523
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.clf": {
  "data": {
   "lineno": 542
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.core_number": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.dataset_attr": {
  "data": {
   "lineno": 455
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.dataset_name": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.end": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.fetch_dataset": {
  "data": {
   "shadows": "grakel.datasets.fetch_dataset"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.full": {
  "data": {
   "lineno": 452
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.gk": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.kf": {
  "data": {
   "lineno": 501
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.mc": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.niter": {
  "data": {
   "lineno": 502
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.parser": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.sec_to_time": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "int",
    "list",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.core_framework.start": {
  "data": {
   "lineno": 522
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.stats": {
  "data": {
   "lineno": 499
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.tei": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.tri": {
  "data": {
   "lineno": 507
  },
  "type": "constant"
 },
 "grakel.kernels.core_framework.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.core_framework.y_pred": {
  "data": {
   "lineno": 548
  },
  "type": "constant"
 },
 "grakel.kernels.edge_histogram": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.edge_histogram.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.EdgeHistogram": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.edge_histogram.EdgeHistogram.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "grakel.kernels.edge_histogram.EdgeHistogram",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.edge_histogram.EdgeHistogram._calculate_kernel_matrix": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "grakel.kernels.edge_histogram.EdgeHistogram.diagonal": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.squeeze",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.edge_histogram.EdgeHistogram.initialize": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.edge_histogram.EdgeHistogram.parse_input": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "MemoryError",
    "TypeError",
    "ValueError",
    "bool",
    "collections.Counter",
    "collections.Iterable",
    "dict",
    "enumerate",
    "float",
    "grakel.graph.Graph",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "six.iteritems",
    "six.itervalues",
    "str",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.edge_histogram.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.einsum": {
  "data": {
   "shadows": "numpy.einsum"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.squeeze": {
  "data": {
   "shadows": "numpy.squeeze"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "grakel.kernels.edge_histogram.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "enumerate",
    "float",
    "grakel.datasets.fetch_dataset",
    "grakel.kernels.graph_hopper.C_grid",
    "grakel.kernels.graph_hopper.GraphHopper",
    "grakel.kernels.graph_hopper.K",
    "grakel.kernels.graph_hopper.K_test",
    "grakel.kernels.graph_hopper.K_train",
    "grakel.kernels.graph_hopper.acc",
    "grakel.kernels.graph_hopper.argparse",
    "grakel.kernels.graph_hopper.args",
    "grakel.kernels.graph_hopper.clf",
    "grakel.kernels.graph_hopper.dataset_attr",
    "grakel.kernels.graph_hopper.dataset_name",
    "grakel.kernels.graph_hopper.end",
    "grakel.kernels.graph_hopper.full",
    "grakel.kernels.graph_hopper.gk",
    "grakel.kernels.graph_hopper.kernel_type",
    "grakel.kernels.graph_hopper.kf",
    "grakel.kernels.graph_hopper.mec",
    "grakel.kernels.graph_hopper.niter",
    "grakel.kernels.graph_hopper.parser",
    "grakel.kernels.graph_hopper.sec_to_time",
    "grakel.kernels.graph_hopper.start",
    "grakel.kernels.graph_hopper.stats",
    "grakel.kernels.graph_hopper.tei",
    "grakel.kernels.graph_hopper.tri",
    "grakel.kernels.graph_hopper.y_pred",
    "len",
    "list",
    "max",
    "numpy.arange",
    "numpy.mean",
    "print",
    "round",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.KFold",
    "sklearn.svm.SVC",
    "str",
    "time.time",
    "tqdm.tqdm",
    "zip"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.graph_hopper.C_grid": {
  "data": {
   "lineno": 513
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.GraphHopper": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.graph_hopper.GraphHopper.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "grakel.kernels.graph_hopper.GraphHopper",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.GraphHopper.initialize": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "grakel.kernels.graph_hopper.GraphHopper",
    "grakel.kernels.graph_hopper.gaussian_kernel",
    "isinstance",
    "len",
    "numbers.Real",
    "str",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.GraphHopper.pairwise_operation": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.GraphHopper.parse_input": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "collections.Iterable",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "float",
    "grakel.graph.Graph",
    "grakel.graph.dijkstra",
    "grakel.kernels.graph_hopper.od_vectors_dag",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.max",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "range",
    "six.moves.filterfalse",
    "str",
    "type",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.K": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.K_test": {
  "data": {
   "lineno": 548
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.K_train": {
  "data": {
   "lineno": 547
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.acc": {
  "data": {
   "lineno": 564
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.args": {
  "data": {
   "lineno": 463
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.bridge_kernel": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "grakel.kernels.graph_hopper.kernelmatrix2distmatrix",
    "numpy.dot",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.clf": {
  "data": {
   "lineno": 555
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.dataset_attr": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.dataset_name": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.dijkstra": {
  "data": {
   "shadows": "grakel.graph.dijkstra"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.end": {
  "data": {
   "lineno": 549
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.fetch_dataset": {
  "data": {
   "shadows": "grakel.datasets.fetch_dataset"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.filterfalse": {
  "data": {
   "shadows": "six.moves.filterfalse"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.full": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.gaussian_kernel": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.gk": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.kernel_type": {
  "data": {
   "lineno": 471
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.kernelmatrix2distmatrix": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.kf": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.linear_kernel": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.mec": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.niter": {
  "data": {
   "lineno": 518
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.od_vectors_dag": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "int",
    "numpy.hstack",
    "numpy.matlib.repmat",
    "numpy.max",
    "numpy.ones",
    "numpy.squeeze",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.parser": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.repmat": {
  "data": {
   "shadows": "numpy.matlib.repmat"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.sec_to_time": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "int",
    "list",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graph_hopper.start": {
  "data": {
   "lineno": 538
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.stats": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.tei": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.tri": {
  "data": {
   "lineno": 523
  },
  "type": "constant"
 },
 "grakel.kernels.graph_hopper.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "grakel.kernels.graph_hopper.y_pred": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "grakel.kernels.graphlet_sampling": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.graphlet_sampling.ConSubg": {
  "data": {
   "shadows": "grakel.kernels._c_functions.ConSubg"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "grakel.kernels.graphlet_sampling.GraphletSampling",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.diagonal": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.square",
    "numpy.sum",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.fit_transform": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "len",
    "numpy.diagonal",
    "numpy.divide",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.zeros",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.initialize": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "grakel.kernels.graphlet_sampling.math",
    "grakel.kernels.graphlet_sampling.warnings",
    "int",
    "isomorphism_prediction",
    "len",
    "list",
    "numpy.log10",
    "scipy.interpolate.interp1d",
    "six.itervalues",
    "sklearn.utils.check_random_state",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.initialize.sample_graphlets": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "grakel.kernels.graphlet_sampling.sample_graphlets_all_connected"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.parse_input": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "builtins.range",
    "dict",
    "enumerate",
    "grakel.kernels._isomorphism.Graph",
    "grakel.kernels.graphlet_sampling.collections",
    "grakel.kernels.graphlet_sampling.warnings",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.GraphletSampling.transform": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.zeros",
    "six.iteritems",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.bGraph": {
  "data": {
   "shadows": "grakel.kernels._isomorphism.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "grakel.kernels.graphlet_sampling.sample_graphlets_all_connected": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "builtins.range",
    "enumerate",
    "grakel.kernels._c_functions.ConSubg",
    "grakel.kernels._isomorphism.Graph",
    "iter",
    "len",
    "numpy.all",
    "numpy.where",
    "set"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.sample_graphlets_probabilistic": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "builtins.range",
    "grakel.kernels._isomorphism.Graph",
    "list",
    "min",
    "numpy.where",
    "rsamp",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.sample_graphlets_probabilistic.rsamp": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "grakel.kernels.graphlet_sampling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.hadamard_code.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.HadamardCode": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.hadamard_code.HadamardCode.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "grakel.kernels.hadamard_code.HadamardCode",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.HadamardCode.diagonal": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "range",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.HadamardCode.fit_transform": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diagonal",
    "numpy.divide",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.HadamardCode.initialize": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "dict",
    "grakel.kernels.Kernel",
    "grakel.kernels.hadamard_code.HadamardCode",
    "grakel.kernels.vertex_histogram.VertexHistogram",
    "int",
    "issubclass",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.HadamardCode.parse_input": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "generate_graphs",
    "grakel.graph.Graph",
    "grakel.kernels.hadamard_code.collections",
    "grakel.kernels.hadamard_code.joblib",
    "grakel.kernels.hadamard_code.warnings",
    "int",
    "isinstance",
    "iter",
    "len",
    "list",
    "math.ceil",
    "numpy.log2",
    "numpy.sum",
    "range",
    "scipy.linalg.hadamard",
    "set",
    "six.itervalues",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.HadamardCode.parse_input.generate_graphs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.add",
    "range",
    "six.iteritems",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.HadamardCode.transform": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.vertex_histogram.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.efit": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "object.fit"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.efit_transform": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "object.fit_transform"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.etransform": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "object.transform"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.hadamard_code.hadamard": {
  "data": {
   "shadows": "scipy.linalg.hadamard"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.log2": {
  "data": {
   "shadows": "numpy.log2"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.hadamard_code.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.kernel.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.Kernel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.kernel.Kernel.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel._calculate_kernel_matrix": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "enumerate",
    "grakel.kernels.kernel.indexes",
    "grakel.kernels.kernel.joblib",
    "iter",
    "itertools.imap",
    "len",
    "list",
    "numpy.triu",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel._calculate_kernel_matrix.kij": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "grakel.kernels._c_functions.k_to_ij_rectangular"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.diagonal": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.fit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.fit_transform": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.diagonal",
    "numpy.outer",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.initialize": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "grakel.kernels.kernel.joblib",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.pairwise_operation": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.parse_input": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.kernel.collections",
    "grakel.kernels.kernel.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.set_params": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "grakel.kernels.kernel.Kernel",
    "grakel.kernels.kernel.copy",
    "len",
    "six.iteritems",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.Kernel.transform": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "numpy.outer",
    "numpy.sqrt",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.assign": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "pairwise_operation"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.indexes": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.kernel.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.k_to_ij_rectangular": {
  "data": {
   "shadows": "grakel.kernels._c_functions.k_to_ij_rectangular"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.k_to_ij_triangular": {
  "data": {
   "shadows": "grakel.kernels._c_functions.k_to_ij_triangular"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.map": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.kernel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cvxopt.solvers.options",
    "float"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.lovasz_theta.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.LinAlgError": {
  "data": {
   "shadows": "numpy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.LovaszTheta": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.lovasz_theta.LovaszTheta.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ImportError",
    "grakel.kernels.lovasz_theta.LovaszTheta",
    "grakel.kernels.lovasz_theta.cvxopt_installed",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta.LovaszTheta._calculate_MEC_": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "enumerate",
    "grakel.kernels.lovasz_theta._minimum_cone_",
    "grakel.tools.distribute_samples",
    "list",
    "numpy.mean",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta.LovaszTheta.initialize": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "callable",
    "grakel.kernels.lovasz_theta.LovaszTheta",
    "int",
    "len",
    "sklearn.utils.check_random_state",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta.LovaszTheta.pairwise_operation": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta.LovaszTheta.parse_input": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.lovasz_theta._calculate_lovasz_embeddings_",
    "grakel.kernels.lovasz_theta._calculate_lovasz_labelling_",
    "grakel.kernels.lovasz_theta.collections",
    "grakel.kernels.lovasz_theta.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "max",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta._b_minidisk_": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "grakel.kernels.lovasz_theta._fitball_",
    "grakel.kernels.lovasz_theta.tolerance",
    "numpy.delete",
    "numpy.linalg.norm",
    "numpy.pad",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta._calculate_lovasz_embeddings_": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "cvxopt.base.matrix",
    "cvxopt.base.spmatrix",
    "cvxopt.solvers.sdp",
    "enumerate",
    "grakel.kernels.lovasz_theta.min_weight",
    "int",
    "len",
    "list",
    "numpy.abs",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.nonzero",
    "numpy.triu",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta._calculate_lovasz_labelling_": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "abs",
    "math.sqrt",
    "numpy.linalg.LinAlgError",
    "numpy.ones",
    "numpy.outer",
    "numpy.pad",
    "numpy.zeros",
    "scipy.linalg.cholesky",
    "scipy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta._fitball_": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.ones",
    "numpy.outer",
    "numpy.pad",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta._minimum_cone_": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "grakel.kernels.lovasz_theta._b_minidisk_",
    "grakel.kernels.lovasz_theta.angle_precision",
    "int",
    "min",
    "numpy.array",
    "numpy.dot",
    "numpy.errstate",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta.angle_precision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "grakel.kernels.lovasz_theta.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.cholesky": {
  "data": {
   "shadows": "scipy.linalg.cholesky"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.cvxopt_installed": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "grakel.kernels.lovasz_theta.distribute_samples": {
  "data": {
   "shadows": "grakel.tools.distribute_samples"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.eigvalsh": {
  "data": {
   "shadows": "scipy.linalg.eigvalsh"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.inner_product": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "grakel.kernels.lovasz_theta.matrix": {
  "data": {
   "shadows": "cvxopt.base.matrix"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.min_weight": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "grakel.kernels.lovasz_theta.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.options": {
  "data": {
   "shadows": "cvxopt.solvers.options"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.pad": {
  "data": {
   "shadows": "numpy.pad"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.sdp": {
  "data": {
   "shadows": "cvxopt.solvers.sdp"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.spmatrix": {
  "data": {
   "shadows": "cvxopt.base.spmatrix"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "grakel.kernels.lovasz_theta.tolerance": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "grakel.kernels.lovasz_theta.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.neighborhood_hash.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.ROT": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "grakel.kernels.neighborhood_hash.NeighborhoodHash",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash._vertex_sort": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "float",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.diagonal": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.neighborhood_hash.collections",
    "grakel.kernels.neighborhood_hash.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "range",
    "set",
    "six.iteritems",
    "six.itervalues",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.fit_transform": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.initialize": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "grakel.kernels.neighborhood_hash.NeighborhoodHash",
    "int",
    "sklearn.utils.check_random_state",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.neighborhood_hash_count_sensitive": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "any",
    "dict",
    "tuple"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.neighborhood_hash_simple": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "any",
    "dict",
    "tuple"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.pairwise_operation": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "grakel.kernels.neighborhood_hash.nh_compare_labels",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.radix_sort_rot": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.NeighborhoodHash.transform": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.neighborhood_hash.collections",
    "grakel.kernels.neighborhood_hash.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "range",
    "six.iteritems",
    "sklearn.utils.validation.check_is_fitted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_hash.nh_compare_labels": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_hash.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.APHash": {
  "data": {
   "shadows": "grakel.kernels._c_functions.APHash"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance._hash_neighborhoods": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "builtins.range",
    "dict",
    "grakel.kernels.neighborhood_subgraph_pairwise_distance.hash_graph",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance.diagonal": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "len",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance.fit_transform": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.zeros",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance.initialize": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "grakel.kernels.neighborhood_subgraph_pairwise_distance.warnings",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance.parse_input": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "builtins.range",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.neighborhood_subgraph_pairwise_distance.collections",
    "grakel.kernels.neighborhood_subgraph_pairwise_distance.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.int64",
    "scipy.sparse.csr_matrix",
    "set",
    "six.iteritems",
    "six.moves.filterfalse",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NeighborhoodSubgraphPairwiseDistance.transform": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.zeros",
    "six.iteritems",
    "six.moves.filterfalse",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.filterfalse": {
  "data": {
   "shadows": "six.moves.filterfalse"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.hash_graph": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "dict",
    "grakel.kernels._c_functions.APHash",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "grakel.kernels.neighborhood_subgraph_pairwise_distance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.propagation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "enumerate",
    "float",
    "grakel.datasets.fetch_dataset",
    "grakel.kernels.propagation.C_grid",
    "grakel.kernels.propagation.K",
    "grakel.kernels.propagation.K_test",
    "grakel.kernels.propagation.K_train",
    "grakel.kernels.propagation.Propagation",
    "grakel.kernels.propagation.PropagationAttr",
    "grakel.kernels.propagation.acc",
    "grakel.kernels.propagation.argparse",
    "grakel.kernels.propagation.args",
    "grakel.kernels.propagation.clf",
    "grakel.kernels.propagation.dataset_attr",
    "grakel.kernels.propagation.dataset_name",
    "grakel.kernels.propagation.end",
    "grakel.kernels.propagation.full",
    "grakel.kernels.propagation.gk",
    "grakel.kernels.propagation.has_attributes",
    "grakel.kernels.propagation.kf",
    "grakel.kernels.propagation.niter",
    "grakel.kernels.propagation.parser",
    "grakel.kernels.propagation.sec_to_time",
    "grakel.kernels.propagation.start",
    "grakel.kernels.propagation.stats",
    "grakel.kernels.propagation.tei",
    "grakel.kernels.propagation.tmax",
    "grakel.kernels.propagation.tri",
    "grakel.kernels.propagation.w",
    "grakel.kernels.propagation.y_pred",
    "int",
    "len",
    "list",
    "max",
    "numpy.arange",
    "numpy.mean",
    "print",
    "round",
    "sklearn.metrics.accuracy_score",
    "sklearn.model_selection.KFold",
    "sklearn.svm.SVC",
    "str",
    "time.time",
    "tqdm.tqdm",
    "zip"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.propagation.C_grid": {
  "data": {
   "lineno": 731
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.K": {
  "data": {
   "lineno": 764
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.K_test": {
  "data": {
   "lineno": 769
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.K_train": {
  "data": {
   "lineno": 768
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.Propagation": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.propagation.Propagation.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "grakel.kernels.propagation.Propagation",
    "grakel.kernels.propagation._dot",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.Propagation.calculate_LSH": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.floor",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.Propagation.initialize": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "grakel.kernels.propagation.Propagation",
    "int",
    "isinstance",
    "numbers.Real",
    "sklearn.utils.check_random_state",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.Propagation.pairwise_operation": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.Propagation.parse_input": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.Counter",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.propagation.collections",
    "grakel.kernels.propagation.warnings",
    "int",
    "isinstance",
    "iter",
    "itertools.chain",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.divide",
    "numpy.dot",
    "numpy.hstack",
    "numpy.logical_and",
    "numpy.sum",
    "numpy.unique",
    "numpy.vectorize",
    "numpy.where",
    "numpy.zeros",
    "range",
    "set",
    "six.iteritems",
    "six.itervalues",
    "six.moves.filterfalse",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.PropagationAttr": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "grakel.kernels.propagation.Propagation"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.propagation.PropagationAttr.__init__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "grakel.kernels.propagation.PropagationAttr",
    "grakel.kernels.propagation._dot",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.PropagationAttr.calculate_LSH": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.PropagationAttr.initialize": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "grakel.kernels.propagation.PropagationAttr",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.PropagationAttr.parse_input": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.Counter",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.propagation.collections",
    "grakel.kernels.propagation.warnings",
    "isinstance",
    "iter",
    "itertools.chain",
    "len",
    "list",
    "numpy.array",
    "numpy.divide",
    "numpy.dot",
    "numpy.sum",
    "numpy.vstack",
    "range",
    "six.iteritems",
    "six.moves.filterfalse",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "grakel.kernels.propagation._dot": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.acc": {
  "data": {
   "lineno": 785
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.args": {
  "data": {
   "lineno": 680
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.clf": {
  "data": {
   "lineno": 776
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.dataset_attr": {
  "data": {
   "lineno": 693
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.dataset_name": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.end": {
  "data": {
   "lineno": 770
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.fetch_dataset": {
  "data": {
   "shadows": "grakel.datasets.fetch_dataset"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.filterfalse": {
  "data": {
   "shadows": "six.moves.filterfalse"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.full": {
  "data": {
   "lineno": 685
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.gk": {
  "data": {
   "lineno": 760
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.has_attributes": {
  "data": {
   "lineno": 681
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.kf": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.niter": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.parser": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.sec_to_time": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "int",
    "list",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.propagation.start": {
  "data": {
   "lineno": 756
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.stats": {
  "data": {
   "lineno": 733
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.tei": {
  "data": {
   "lineno": 742
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.tmax": {
  "data": {
   "lineno": 683
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.tri": {
  "data": {
   "lineno": 741
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.w": {
  "data": {
   "lineno": 684
  },
  "type": "constant"
 },
 "grakel.kernels.propagation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.propagation.y_pred": {
  "data": {
   "lineno": 782
  },
  "type": "constant"
 },
 "grakel.kernels.pyramid_match": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.pyramid_match.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.PyramidMatch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.pyramid_match.PyramidMatch.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "grakel.kernels.pyramid_match.PyramidMatch",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.pyramid_match.PyramidMatch._histogram_calculation": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.floor",
    "numpy.where",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.pyramid_match.PyramidMatch.initialize": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "grakel.kernels.pyramid_match.PyramidMatch",
    "int",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.pyramid_match.PyramidMatch.pairwise_operation": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "len",
    "numpy.minimum",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.pyramid_match.PyramidMatch.parse_input": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.pyramid_match.collections",
    "grakel.kernels.pyramid_match.warnings",
    "isinstance",
    "iter",
    "itertools.chain",
    "len",
    "list",
    "numpy.absolute",
    "numpy.float",
    "numpy.linalg.eig",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.linalg.eigs",
    "set",
    "six.iteritems",
    "six.itervalues",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.pyramid_match.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.eigs": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigs"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.pyramid_match.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.random_walk.ComplexWarning": {
  "data": {
   "shadows": "numpy.ComplexWarning"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.LinearOperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.LinearOperator"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.RandomWalk": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.random_walk.RandomWalk.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "grakel.kernels.random_walk.RandomWalk",
    "grakel.kernels.random_walk.warnings",
    "numpy.ComplexWarning",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalk.initialize": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "builtins.range",
    "grakel.kernels.random_walk.RandomWalk",
    "grakel.kernels.random_walk.warnings",
    "int",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalk.pairwise_operation": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "lsf",
    "numpy.diagflat",
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.eye",
    "numpy.identity",
    "numpy.kron",
    "numpy.linalg.inv",
    "numpy.matmul",
    "numpy.ones",
    "numpy.sum",
    "scipy.linalg.expm",
    "scipy.sparse.linalg.LinearOperator",
    "scipy.sparse.linalg.cg"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalk.pairwise_operation.lsf": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.linalg.multi_dot",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalk.parse_input": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.random_walk.collections",
    "grakel.kernels.random_walk.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalkLabeled": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "grakel.kernels.random_walk.RandomWalk"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.random_walk.RandomWalkLabeled.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "grakel.kernels.random_walk.RandomWalkLabeled",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalkLabeled.pairwise_operation": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "len",
    "lsf",
    "numpy.eye",
    "numpy.identity",
    "numpy.kron",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.expm",
    "scipy.sparse.linalg.LinearOperator",
    "scipy.sparse.linalg.cg",
    "set"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalkLabeled.pairwise_operation.lsf": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.RandomWalkLabeled.parse_input": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "builtins.range",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.random_walk.collections",
    "grakel.kernels.random_walk.warnings",
    "isinstance",
    "iter",
    "itertools.product",
    "len",
    "list",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.matmul",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.cg": {
  "data": {
   "shadows": "scipy.sparse.linalg.cg"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.eig": {
  "data": {
   "shadows": "numpy.linalg.eig"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.expm": {
  "data": {
   "shadows": "scipy.linalg.expm"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.idem": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.invert": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "numpy.real",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.multi_dot": {
  "data": {
   "shadows": "numpy.linalg.multi_dot"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "grakel.kernels.random_walk.sd": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "grakel.kernels.random_walk.invert",
    "numpy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.random_walk.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.shortest_path.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path.ShortestPath": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.shortest_path.ShortestPath.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "grakel.kernels.shortest_path.ShortestPath",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPath.diagonal": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "numpy.reshape",
    "numpy.square",
    "numpy.sum",
    "numpy.zeros",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPath.fit_transform": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len",
    "numpy.diagonal",
    "numpy.divide",
    "numpy.dot",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPath.initialize": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "grakel.kernels.shortest_path.warnings"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPath.parse_input": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "grakel.graph.Graph",
    "grakel.kernels.shortest_path.collections",
    "grakel.kernels.shortest_path.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPath.transform": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.zeros",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPathAttr": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.shortest_path.ShortestPathAttr.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "grakel.kernels.shortest_path.ShortestPathAttr",
    "numpy.dot",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPathAttr.initialize": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "grakel.kernels.shortest_path.ShortestPathAttr",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPathAttr.pairwise_operation": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.ShortestPathAttr.parse_input": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.shortest_path.collections",
    "grakel.kernels.shortest_path.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path.decompose_input": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.decompose_input_labels": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.lhash": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.lhash_labels": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "grakel.kernels.shortest_path.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.shortest_path.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "grakel.kernels.subgraph_matching.SubgraphMatching",
    "grakel.kernels.subgraph_matching.k",
    "print"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.subgraph_matching.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching.SubgraphMatching": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.subgraph_matching.SubgraphMatching.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "grakel.kernels.subgraph_matching.SubgraphMatching",
    "grakel.kernels.subgraph_matching._dirac",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.subgraph_matching.SubgraphMatching.initialize": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "all",
    "callable",
    "float",
    "grakel.kernels.subgraph_matching.SubgraphMatching",
    "grakel.kernels.subgraph_matching.collections",
    "int",
    "isinstance",
    "len",
    "list",
    "numbers.Real",
    "numpy.arange",
    "numpy.array",
    "numpy.full",
    "numpy.square",
    "range",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.subgraph_matching.SubgraphMatching.pairwise_operation": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "grakel.kernels._c_functions.sm_kernel",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.subgraph_matching.SubgraphMatching.parse_input": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.subgraph_matching.collections",
    "grakel.kernels.subgraph_matching.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.subgraph_matching._dirac": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.subgraph_matching.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching.k": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "grakel.kernels.subgraph_matching.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching.sm_kernel": {
  "data": {
   "shadows": "grakel.kernels._c_functions.sm_kernel"
  },
  "type": "import"
 },
 "grakel.kernels.subgraph_matching.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta": {
  "data": {
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "module"
 },
 "grakel.kernels.svm_theta.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.OneClassSVM": {
  "data": {
   "shadows": "sklearn.svm.OneClassSVM"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.SvmTheta": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.svm_theta.SvmTheta.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "grakel.kernels.svm_theta.SvmTheta",
    "grakel.kernels.svm_theta._inner",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta.SvmTheta._calculate_svm_theta_levels_": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "enumerate",
    "grakel.tools.distribute_samples",
    "list",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta.SvmTheta.initialize": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "callable",
    "grakel.kernels.svm_theta.SvmTheta",
    "int",
    "len",
    "sklearn.utils.check_random_state",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta.SvmTheta.pairwise_operation": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta.SvmTheta.parse_input": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.svm_theta._calculate_svm_theta_",
    "grakel.kernels.svm_theta.collections",
    "grakel.kernels.svm_theta.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta._calculate_svm_theta_": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "abs",
    "float",
    "grakel.kernels.svm_theta.min_weight",
    "grakel.kernels.svm_theta.positive_eigenvalue_limit",
    "numpy.fill_diagonal",
    "numpy.put",
    "numpy.zeros",
    "scipy.linalg.eigvalsh",
    "sklearn.svm.OneClassSVM"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta._inner": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.inner"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.svm_theta.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.distribute_samples": {
  "data": {
   "shadows": "grakel.tools.distribute_samples"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.eigvalsh": {
  "data": {
   "shadows": "scipy.linalg.eigvalsh"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.min_weight": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "grakel.kernels.svm_theta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.svm_theta.positive_eigenvalue_limit": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "grakel.kernels.svm_theta.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.vertex_histogram.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.VertexHistogram": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.vertex_histogram.VertexHistogram.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "grakel.kernels.vertex_histogram.VertexHistogram",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.vertex_histogram.VertexHistogram._calculate_kernel_matrix": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "grakel.kernels.vertex_histogram.VertexHistogram._initialized": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.vertex_histogram.VertexHistogram.diagonal": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.einsum",
    "numpy.squeeze",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.vertex_histogram.VertexHistogram.parse_input": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "MemoryError",
    "TypeError",
    "ValueError",
    "bool",
    "collections.Counter",
    "collections.Iterable",
    "dict",
    "enumerate",
    "float",
    "grakel.graph.Graph",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.zeros",
    "scipy.sparse.csr_matrix",
    "six.iteritems",
    "six.itervalues",
    "str",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.vertex_histogram.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.einsum": {
  "data": {
   "shadows": "numpy.einsum"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.squeeze": {
  "data": {
   "shadows": "numpy.squeeze"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "grakel.kernels.vertex_histogram.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.weisfeiler_lehman.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.vertex_histogram.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "grakel.kernels.vertex_histogram.VertexHistogram",
    "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.diagonal": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "range",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.fit_transform": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diagonal",
    "numpy.divide",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.initialize": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "dict",
    "grakel.kernels.Kernel",
    "grakel.kernels.vertex_histogram.VertexHistogram",
    "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman",
    "int",
    "issubclass",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.parse_input": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "delattr",
    "dict",
    "enumerate",
    "generate_graphs",
    "grakel.graph.Graph",
    "grakel.kernels.weisfeiler_lehman.collections",
    "grakel.kernels.weisfeiler_lehman.joblib",
    "grakel.kernels.weisfeiler_lehman.warnings",
    "hasattr",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.sum",
    "range",
    "set",
    "six.itervalues",
    "sorted",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.parse_input.generate_graphs": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "dict",
    "list",
    "range",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.transform": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "generate_graphs",
    "grakel.graph.Graph",
    "grakel.kernels.weisfeiler_lehman.collections",
    "grakel.kernels.weisfeiler_lehman.joblib",
    "grakel.kernels.weisfeiler_lehman.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.divide",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt",
    "numpy.sum",
    "set",
    "six.itervalues",
    "sklearn.utils.validation.check_is_fitted",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.WeisfeilerLehman.transform.generate_graphs": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "range",
    "set",
    "six.iteritems",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.efit": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "object.fit"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.efit_transform": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "object.fit_transform"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.etransform": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "object.transform"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment": {
  "data": {},
  "type": "module"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.Kernel": {
  "data": {
   "shadows": "grakel.kernels.Kernel"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.NotFittedError": {
  "data": {
   "shadows": "sklearn.exceptions.NotFittedError"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "grakel.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment",
    "super"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment._insert_into_hierarchy": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment.diagonal": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.ix_",
    "numpy.min",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.exceptions.NotFittedError",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment.fit_transform": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diagonal",
    "numpy.divide",
    "numpy.ix_",
    "numpy.min",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment.initialize": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment",
    "int",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment.parse_input": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "delattr",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.weisfeiler_lehman_optimal_assignment.collections",
    "grakel.kernels.weisfeiler_lehman_optimal_assignment.warnings",
    "hasattr",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.zeros",
    "range",
    "scipy.sparse.lil_matrix",
    "set",
    "six.itervalues",
    "sorted",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.WeisfeilerLehmanOptimalAssignment.transform": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "grakel.graph.Graph",
    "grakel.kernels.weisfeiler_lehman_optimal_assignment.collections",
    "grakel.kernels.weisfeiler_lehman_optimal_assignment.warnings",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.divide",
    "numpy.min",
    "numpy.nan_to_num",
    "numpy.outer",
    "numpy.seterr",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.sparse.lil_matrix",
    "set",
    "six.iteritems",
    "six.itervalues",
    "sklearn.utils.validation.check_is_fitted",
    "sorted",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.efit": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "object.fit"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.efit_transform": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "object.fit_transform"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.etransform": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "object.transform"
   ]
  },
  "type": "function"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.kernels.weisfeiler_lehman_optimal_assignment.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.tests": {
  "data": {},
  "type": "module"
 },
 "grakel.tests.__main__": {
  "data": {
   "symbols_in_volume": [
    "UserWarning",
    "__name__",
    "grakel.tests.__main__.cwd",
    "grakel.tests.__main__.os",
    "grakel.tests.__main__.project_dir",
    "grakel.tests.__main__.python_executable_address",
    "grakel.tests.__main__.sys",
    "grakel.tests.__main__.test_dir",
    "grakel.tests.__main__.warnings",
    "print",
    "str",
    "subprocess.check_call"
   ]
  },
  "type": "module"
 },
 "grakel.tests.__main__.check_call": {
  "data": {
   "shadows": "subprocess.check_call"
  },
  "type": "import"
 },
 "grakel.tests.__main__.cwd": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "grakel.tests.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "grakel.tests.__main__.project_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "grakel.tests.__main__.python_executable_address": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "grakel.tests.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "grakel.tests.__main__.test_dir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "grakel.tests.__main__.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "float",
    "grakel.tests.test_Kernel.cvxopt",
    "grakel.tests.test_Kernel.test_core_framework",
    "grakel.tests.test_Kernel.test_edge_histogram",
    "grakel.tests.test_Kernel.test_graph_hopper",
    "grakel.tests.test_Kernel.test_graph_hopper_pd",
    "grakel.tests.test_Kernel.test_graphlet_sampling",
    "grakel.tests.test_Kernel.test_hadamard_code",
    "grakel.tests.test_Kernel.test_hadamard_code_pd",
    "grakel.tests.test_Kernel.test_lovasz_theta",
    "grakel.tests.test_Kernel.test_lovasz_theta_pd",
    "grakel.tests.test_Kernel.test_multiscale_laplacian",
    "grakel.tests.test_Kernel.test_multiscale_laplacian_pd",
    "grakel.tests.test_Kernel.test_neighborhood_hash",
    "grakel.tests.test_Kernel.test_neighborhood_hash_pd",
    "grakel.tests.test_Kernel.test_neighborhood_subgraph_pairwise_distance",
    "grakel.tests.test_Kernel.test_odd_sth",
    "grakel.tests.test_Kernel.test_propagation",
    "grakel.tests.test_Kernel.test_propagation_pd",
    "grakel.tests.test_Kernel.test_pyramid_match",
    "grakel.tests.test_Kernel.test_pyramid_match_no_labels",
    "grakel.tests.test_Kernel.test_random_walk",
    "grakel.tests.test_Kernel.test_random_walk_labels",
    "grakel.tests.test_Kernel.test_random_walk_labels_pd",
    "grakel.tests.test_Kernel.test_random_walk_pd",
    "grakel.tests.test_Kernel.test_shortest_path",
    "grakel.tests.test_Kernel.test_shortest_path_pd",
    "grakel.tests.test_Kernel.test_subgraph_matching",
    "grakel.tests.test_Kernel.test_subgraph_matching_pd",
    "grakel.tests.test_Kernel.test_svm_theta",
    "grakel.tests.test_Kernel.test_svm_theta_pd",
    "grakel.tests.test_Kernel.test_vertex_histogram",
    "grakel.tests.test_Kernel.test_weisfeiler_lehman",
    "grakel.tests.test_Kernel.test_weisfeiler_lehman_optimal_assignment",
    "grakel.tests.test_Kernel.test_weisfeiler_lehman_pd",
    "grakel.tests.test_Kernel.warnings",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "grakel.tests.test_Kernel.CoreFramework": {
  "data": {
   "shadows": "grakel.kernels.CoreFramework"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.EdgeHistogram": {
  "data": {
   "shadows": "grakel.kernels.EdgeHistogram"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.GraphHopper": {
  "data": {
   "shadows": "grakel.kernels.GraphHopper"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.GraphKernel": {
  "data": {
   "shadows": "grakel.GraphKernel"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.GraphletSampling": {
  "data": {
   "shadows": "grakel.kernels.GraphletSampling"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.HadamardCode": {
  "data": {
   "shadows": "grakel.kernels.HadamardCode"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.LovaszTheta": {
  "data": {
   "shadows": "grakel.kernels.LovaszTheta"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.MultiscaleLaplacian": {
  "data": {
   "shadows": "grakel.kernels.MultiscaleLaplacian"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.NeighborhoodHash": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodHash"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.NeighborhoodSubgraphPairwiseDistance": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodSubgraphPairwiseDistance"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.OddSth": {
  "data": {
   "shadows": "grakel.kernels.OddSth"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.Propagation": {
  "data": {
   "shadows": "grakel.kernels.Propagation"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.PropagationAttr": {
  "data": {
   "shadows": "grakel.kernels.PropagationAttr"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.PyramidMatch": {
  "data": {
   "shadows": "grakel.kernels.PyramidMatch"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.RandomWalk": {
  "data": {
   "shadows": "grakel.kernels.RandomWalk"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.RandomWalkLabeled": {
  "data": {
   "shadows": "grakel.kernels.RandomWalkLabeled"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.ShortestPath": {
  "data": {
   "shadows": "grakel.kernels.ShortestPath"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.ShortestPathAttr": {
  "data": {
   "shadows": "grakel.kernels.ShortestPathAttr"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.SubgraphMatching": {
  "data": {
   "shadows": "grakel.kernels.SubgraphMatching"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.SvmTheta": {
  "data": {
   "shadows": "grakel.kernels.SvmTheta"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.WeisfeilerLehmanOptimalAssignment": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehmanOptimalAssignment"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.cvxopt": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "grakel.tests.test_Kernel.default_eigvalue_precision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "grakel.tests.test_Kernel.generate_dataset": {
  "data": {
   "shadows": "grakel.datasets.generate_dataset"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.tests.test_Kernel.rs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "grakel.tests.test_Kernel.test_core_framework": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.CoreFramework",
    "grakel.kernels.VertexHistogram",
    "grakel.kernels.WeisfeilerLehman",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_edge_histogram": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.EdgeHistogram",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_graph_hopper": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.GraphHopper",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_graph_hopper_pd": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_graphlet_sampling": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.GraphletSampling",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_hadamard_code": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.HadamardCode",
    "grakel.kernels.VertexHistogram",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_hadamard_code_pd": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_lovasz_theta": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.LovaszTheta",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_lovasz_theta_pd": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_multiscale_laplacian": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.MultiscaleLaplacian",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_multiscale_laplacian_pd": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_neighborhood_hash": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.NeighborhoodHash",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_neighborhood_hash_pd": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_neighborhood_subgraph_pairwise_distance": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.NeighborhoodSubgraphPairwiseDistance",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_odd_sth": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.OddSth",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_propagation": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "Exception",
    "float",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.Propagation",
    "grakel.kernels.PropagationAttr",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_propagation_pd": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "Exception",
    "float",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_pyramid_match": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.PyramidMatch",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_pyramid_match_no_labels": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.PyramidMatch",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_random_walk": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.RandomWalk",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_random_walk_labels": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.RandomWalkLabeled",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_random_walk_labels_pd": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_random_walk_pd": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_shortest_path": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.ShortestPath",
    "grakel.kernels.ShortestPathAttr",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_shortest_path_pd": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_subgraph_matching": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.SubgraphMatching",
    "grakel.tests.test_Kernel.rs",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_subgraph_matching_pd": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_svm_theta": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.SvmTheta",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_svm_theta_pd": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_vertex_histogram": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.VertexHistogram",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_weisfeiler_lehman": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.VertexHistogram",
    "grakel.kernels.WeisfeilerLehman",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_weisfeiler_lehman_optimal_assignment": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.WeisfeilerLehmanOptimalAssignment",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.test_weisfeiler_lehman_pd": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Exception",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.tests.test_Kernel.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_Kernel.verbose": {
  "data": {
   "lineno": 930
  },
  "type": "constant"
 },
 "grakel.tests.test_Kernel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "float",
    "grakel.tests.test_common.cvxopt",
    "grakel.tests.test_common.test_core_framework",
    "grakel.tests.test_common.test_edge_histogram",
    "grakel.tests.test_common.test_graph_hopper",
    "grakel.tests.test_common.test_graphlet_sampling",
    "grakel.tests.test_common.test_hadamard_code",
    "grakel.tests.test_common.test_lovasz_theta",
    "grakel.tests.test_common.test_multiscale_laplacian",
    "grakel.tests.test_common.test_neighborhood_hash",
    "grakel.tests.test_common.test_neighborhood_subgraph_pairwise_distance",
    "grakel.tests.test_common.test_odd_sth",
    "grakel.tests.test_common.test_propagation",
    "grakel.tests.test_common.test_pyramid_match",
    "grakel.tests.test_common.test_pyramid_match_no_labels",
    "grakel.tests.test_common.test_random_walk",
    "grakel.tests.test_common.test_random_walk_labels",
    "grakel.tests.test_common.test_shortest_path",
    "grakel.tests.test_common.test_subgraph_matching",
    "grakel.tests.test_common.test_svm_theta",
    "grakel.tests.test_common.test_vertex_histogram",
    "grakel.tests.test_common.test_weisfeiler_lehman",
    "grakel.tests.test_common.test_weisfeiler_lehman_optimal_assignment",
    "grakel.tests.test_common.warnings",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "grakel.tests.test_common.CoreFramework": {
  "data": {
   "shadows": "grakel.kernels.CoreFramework"
  },
  "type": "import"
 },
 "grakel.tests.test_common.EdgeHistogram": {
  "data": {
   "shadows": "grakel.kernels.EdgeHistogram"
  },
  "type": "import"
 },
 "grakel.tests.test_common.GraphHopper": {
  "data": {
   "shadows": "grakel.kernels.GraphHopper"
  },
  "type": "import"
 },
 "grakel.tests.test_common.GraphKernel": {
  "data": {
   "shadows": "grakel.GraphKernel"
  },
  "type": "import"
 },
 "grakel.tests.test_common.GraphletSampling": {
  "data": {
   "shadows": "grakel.kernels.GraphletSampling"
  },
  "type": "import"
 },
 "grakel.tests.test_common.HadamardCode": {
  "data": {
   "shadows": "grakel.kernels.HadamardCode"
  },
  "type": "import"
 },
 "grakel.tests.test_common.LovaszTheta": {
  "data": {
   "shadows": "grakel.kernels.LovaszTheta"
  },
  "type": "import"
 },
 "grakel.tests.test_common.MultiscaleLaplacian": {
  "data": {
   "shadows": "grakel.kernels.MultiscaleLaplacian"
  },
  "type": "import"
 },
 "grakel.tests.test_common.NeighborhoodHash": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodHash"
  },
  "type": "import"
 },
 "grakel.tests.test_common.NeighborhoodSubgraphPairwiseDistance": {
  "data": {
   "shadows": "grakel.kernels.NeighborhoodSubgraphPairwiseDistance"
  },
  "type": "import"
 },
 "grakel.tests.test_common.OddSth": {
  "data": {
   "shadows": "grakel.kernels.OddSth"
  },
  "type": "import"
 },
 "grakel.tests.test_common.Propagation": {
  "data": {
   "shadows": "grakel.kernels.Propagation"
  },
  "type": "import"
 },
 "grakel.tests.test_common.PropagationAttr": {
  "data": {
   "shadows": "grakel.kernels.PropagationAttr"
  },
  "type": "import"
 },
 "grakel.tests.test_common.PyramidMatch": {
  "data": {
   "shadows": "grakel.kernels.PyramidMatch"
  },
  "type": "import"
 },
 "grakel.tests.test_common.RandomWalk": {
  "data": {
   "shadows": "grakel.kernels.RandomWalk"
  },
  "type": "import"
 },
 "grakel.tests.test_common.RandomWalkLabeled": {
  "data": {
   "shadows": "grakel.kernels.RandomWalkLabeled"
  },
  "type": "import"
 },
 "grakel.tests.test_common.ShortestPath": {
  "data": {
   "shadows": "grakel.kernels.ShortestPath"
  },
  "type": "import"
 },
 "grakel.tests.test_common.ShortestPathAttr": {
  "data": {
   "shadows": "grakel.kernels.ShortestPathAttr"
  },
  "type": "import"
 },
 "grakel.tests.test_common.SubgraphMatching": {
  "data": {
   "shadows": "grakel.kernels.SubgraphMatching"
  },
  "type": "import"
 },
 "grakel.tests.test_common.SvmTheta": {
  "data": {
   "shadows": "grakel.kernels.SvmTheta"
  },
  "type": "import"
 },
 "grakel.tests.test_common.VertexHistogram": {
  "data": {
   "shadows": "grakel.kernels.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.tests.test_common.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.tests.test_common.WeisfeilerLehmanOptimalAssignment": {
  "data": {
   "shadows": "grakel.kernels.WeisfeilerLehmanOptimalAssignment"
  },
  "type": "import"
 },
 "grakel.tests.test_common.cvxopt": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "grakel.tests.test_common.default_eigvalue_precision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "grakel.tests.test_common.generate_dataset": {
  "data": {
   "shadows": "grakel.datasets.generate_dataset"
  },
  "type": "import"
 },
 "grakel.tests.test_common.is_picklable": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "grakel.tests.test_common.pickle"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.tests.test_common.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "grakel.tests.test_common.rs": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "grakel.tests.test_common.test_core_framework": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "dict",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.CoreFramework",
    "grakel.kernels.VertexHistogram",
    "grakel.kernels.WeisfeilerLehman",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_edge_histogram": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.EdgeHistogram",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_graph_hopper": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.GraphHopper",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_graphlet_sampling": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dict",
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.GraphletSampling",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_hadamard_code": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.HadamardCode",
    "grakel.kernels.VertexHistogram",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_lovasz_theta": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.LovaszTheta",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_multiscale_laplacian": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.MultiscaleLaplacian",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_neighborhood_hash": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.NeighborhoodHash",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_neighborhood_subgraph_pairwise_distance": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.NeighborhoodSubgraphPairwiseDistance",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_odd_sth": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.OddSth",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_propagation": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "float",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.Propagation",
    "grakel.kernels.PropagationAttr",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_pyramid_match": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.PyramidMatch",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_pyramid_match_no_labels": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.PyramidMatch",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_random_walk": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.RandomWalk",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_random_walk_labels": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.RandomWalkLabeled",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_shortest_path": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.ShortestPath",
    "grakel.kernels.ShortestPathAttr",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_subgraph_matching": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.SubgraphMatching",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_svm_theta": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.SvmTheta",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_vertex_histogram": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "grakel.GraphKernel",
    "grakel.datasets.generate_dataset",
    "grakel.kernels.VertexHistogram",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_weisfeiler_lehman": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.VertexHistogram",
    "grakel.kernels.WeisfeilerLehman",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.test_weisfeiler_lehman_optimal_assignment": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "grakel.datasets.generate_dataset",
    "grakel.kernels.WeisfeilerLehmanOptimalAssignment",
    "grakel.tests.test_common.is_picklable",
    "grakel.tests.test_common.rs"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_common.verbose": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "grakel.tests.test_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.tests.test_graph": {
  "data": {
   "symbols_in_volume": [
    "UserWarning",
    "__name__",
    "bool",
    "grakel.tests.test_graph.argparse",
    "grakel.tests.test_graph.args",
    "grakel.tests.test_graph.parser",
    "grakel.tests.test_graph.test_graph_adjacency",
    "grakel.tests.test_graph.test_graph_edge_dictionary",
    "grakel.tests.test_graph.warnings"
   ]
  },
  "type": "module"
 },
 "grakel.tests.test_graph.Graph": {
  "data": {
   "shadows": "grakel.graph.Graph"
  },
  "type": "import"
 },
 "grakel.tests.test_graph.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "grakel.tests.test_graph.args": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "grakel.tests.test_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.tests.test_graph.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "grakel.tests.test_graph.parser": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "grakel.tests.test_graph.test_graph_adjacency": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "float",
    "grakel.graph.Graph",
    "grakel.tests.test_graph.verbose",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_graph.test_graph_edge_dictionary": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict",
    "float",
    "grakel.graph.Graph",
    "grakel.tests.test_graph.verbose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "print",
    "proper_dict",
    "set"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_graph.test_graph_edge_dictionary.proper_dict": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_graph.verbose": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "grakel.tests.test_graph.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "UserWarning",
    "__name__",
    "bool",
    "grakel.tests.test_utils.argparse",
    "grakel.tests.test_utils.args",
    "grakel.tests.test_utils.parser",
    "grakel.tests.test_utils.test_KM_Kfold",
    "grakel.tests.test_utils.test_csv",
    "grakel.tests.test_utils.test_networkx",
    "grakel.tests.test_utils.test_pandas",
    "grakel.tests.test_utils.warnings"
   ]
  },
  "type": "module"
 },
 "grakel.tests.test_utils.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.ShortestPath": {
  "data": {
   "shadows": "grakel.ShortestPath"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.VertexHistogram": {
  "data": {
   "shadows": "grakel.VertexHistogram"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.WeisfeilerLehman": {
  "data": {
   "shadows": "grakel.WeisfeilerLehman"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.args": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "grakel.tests.test_utils.cross_validate_Kfold_SVM": {
  "data": {
   "shadows": "grakel.cross_validate_Kfold_SVM"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.fetch_dataset": {
  "data": {
   "shadows": "grakel.datasets.fetch_dataset"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.graph_from_csv": {
  "data": {
   "shadows": "grakel.graph_from_csv"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.graph_from_networkx": {
  "data": {
   "shadows": "grakel.graph_from_networkx"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.graph_from_pandas": {
  "data": {
   "shadows": "grakel.graph_from_pandas"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.parser": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "grakel.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.read_data": {
  "data": {
   "shadows": "grakel.datasets.base.read_data"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.test_KM_Kfold": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "grakel.ShortestPath",
    "grakel.VertexHistogram",
    "grakel.WeisfeilerLehman",
    "grakel.cross_validate_Kfold_SVM",
    "len",
    "list",
    "load_mutag",
    "numpy.arange",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_utils.test_KM_Kfold.load_mutag": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Exception",
    "grakel.datasets.base.read_data",
    "grakel.datasets.fetch_dataset",
    "grakel.tests.test_utils.os",
    "grakel.tests.test_utils.verbose",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_utils.test_csv": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "all",
    "grakel.graph_from_csv",
    "grakel.tests.test_utils.os",
    "int",
    "list",
    "map",
    "open",
    "print",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_utils.test_networkx": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ImportError",
    "grakel.graph_from_networkx",
    "list",
    "networkx.DiGraph"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_utils.test_pandas": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ImportError",
    "grakel.graph_from_pandas",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "grakel.tests.test_utils.verbose": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "grakel.tests.test_utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "grakel.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "grakel.tools": {
  "data": {
   "symbols_in_volume": [
    "grakel.tools.operator"
   ]
  },
  "type": "module"
 },
 "grakel.tools.binomial": {
  "data": {
   "shadows": "scipy.special.binom"
  },
  "type": "import"
 },
 "grakel.tools.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "grakel.tools.distribute_samples": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "float",
    "int",
    "min",
    "numpy.array",
    "numpy.floor",
    "numpy.sum",
    "range",
    "scipy.special.binom"
   ]
  },
  "type": "function"
 },
 "grakel.tools.generators": {
  "data": {
   "shadows": "__future__.generators"
  },
  "type": "import"
 },
 "grakel.tools.inv_dict": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "frozenset",
    "grakel.tools.collections",
    "isinstance",
    "list",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.tools.iteritems": {
  "data": {
   "shadows": "future.utils.iteritems"
  },
  "type": "import"
 },
 "grakel.tools.matrix_to_dict": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "grakel.tools.ops",
    "list",
    "numpy.delete",
    "numpy.where",
    "opr",
    "range"
   ]
  },
  "type": "function"
 },
 "grakel.tools.nested_dict_add": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "grakel.tools.nested_dict_get": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "grakel.tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.tools.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "grakel.tools.ops": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "grakel.tools.priority_dict": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "grakel.tools.priority_dict.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "grakel.tools.priority_dict.__iter__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "iterfn"
   ]
  },
  "type": "function"
 },
 "grakel.tools.priority_dict.__iter__.iterfn": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "grakel.tools.priority_dict.__setitem__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict.__setitem__",
    "future.utils.iteritems",
    "len"
   ]
  },
  "type": "function"
 },
 "grakel.tools.priority_dict.setdefault": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "grakel.tools.priority_dict.smallest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "IndexError",
    "len"
   ]
  },
  "type": "function"
 },
 "grakel.utils": {
  "data": {},
  "type": "module"
 },
 "grakel.utils.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "grakel.utils.Bunch": {
  "data": {
   "shadows": "sklearn.utils.Bunch"
  },
  "type": "import"
 },
 "grakel.utils.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "grakel.utils.Graph": {
  "data": {
   "shadows": "grakel.Graph"
  },
  "type": "import"
 },
 "grakel.utils.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "grakel.utils.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "grakel.utils.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "grakel.utils.KMTransformer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "grakel.utils.KMTransformer.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "grakel.utils.KMTransformer.fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "grakel.utils.KMTransformer.fit_transform": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "grakel.utils.KMTransformer.initialize": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "grakel.graph.is_adjacency",
    "isinstance",
    "numpy.array",
    "sklearn.utils.Bunch"
   ]
  },
  "type": "function"
 },
 "grakel.utils.KMTransformer.transform": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "grakel.utils.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "grakel.utils.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.model_selection.ShuffleSplit"
  },
  "type": "import"
 },
 "grakel.utils.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "grakel.utils.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "grakel.utils.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "grakel.utils.cross_validate_Kfold_SVM": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "callable",
    "collections.Iterable",
    "fold_reduce",
    "grakel.graph.is_adjacency",
    "grakel.utils.KMTransformer",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.squeeze",
    "range",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.pipeline.make_pipeline",
    "sklearn.svm.SVC",
    "sklearn.utils.Bunch",
    "sklearn.utils.check_random_state",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "grakel.utils.graph_from_csv": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "collections.defaultdict",
    "dict",
    "edge_files_error",
    "float",
    "get_el",
    "grakel.Graph",
    "grakel.utils.os",
    "index_type",
    "len",
    "list",
    "node_files_error",
    "numpy.array",
    "open",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_csv.edge_files_error": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_csv.get_el": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "dict",
    "get_weight",
    "index_type",
    "str"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_csv.get_weight": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "grakel.utils.graph_from_csv.node_files_error": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "collections.Iterable",
    "dict",
    "edgel_init",
    "edgel_put",
    "get_weight",
    "grakel.Graph",
    "isinstance",
    "networkx.__version__",
    "nodel_init",
    "nodel_put",
    "str",
    "take_ne",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx.edgel_init": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx.edgel_put": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx.get_weight": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx.nodel_init": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx.nodel_put": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "grakel.utils.graph_from_networkx.take_ne": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "grakel.utils.graph_from_pandas": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.defaultdict",
    "dict",
    "get_weight",
    "grakel.Graph",
    "len",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "set_label",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "grakel.utils.graph_from_pandas.get_weight": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "grakel.utils.graph_from_pandas.set_label": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "grakel.utils.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "grakel.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "grakel.utils.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "grakel.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "grakel.utils.valid_matrix": {
  "data": {
   "shadows": "grakel.graph.is_adjacency"
  },
  "type": "import"
 }
}