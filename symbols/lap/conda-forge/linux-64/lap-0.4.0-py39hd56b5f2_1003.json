{
 "lap": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "lap.__LAP_SETUP__",
    "lap.sys"
   ]
  },
  "type": "module"
 },
 "lap.FP_1": {
  "data": {
   "shadows": "FP_1_"
  },
  "type": "import"
 },
 "lap.FP_2": {
  "data": {
   "shadows": "FP_2_"
  },
  "type": "import"
 },
 "lap.FP_DYNAMIC": {
  "data": {
   "shadows": "FP_DYNAMIC_"
  },
  "type": "import"
 },
 "lap.LARGE": {
  "data": {
   "shadows": "LARGE_"
  },
  "type": "import"
 },
 "lap.__LAP_SETUP__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "lap.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "lap.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "lap.lapmod": {
  "data": {},
  "type": "module"
 },
 "lap.lapmod.FP_DYNAMIC": {
  "data": {
   "shadows": "FP_DYNAMIC_"
  },
  "type": "import"
 },
 "lap.lapmod.LARGE": {
  "data": {
   "shadows": "LARGE_"
  },
  "type": "import"
 },
 "lap.lapmod._find": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.lapmod._pya": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "lap.lapmod.find_path"
   ]
  },
  "type": "function"
 },
 "lap.lapmod._pyarr": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "lap.lapmod.find_minima",
    "slice"
   ]
  },
  "type": "function"
 },
 "lap.lapmod._pycrrt": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "numpy.empty",
    "numpy.min",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "lap.lapmod._scan": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "lap.lapmod.binary_search",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.binary_search": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "bisect.bisect_left",
    "len"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.bisect_left": {
  "data": {
   "shadows": "bisect.bisect_left"
  },
  "type": "import"
 },
 "lap.lapmod.check_cost": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.find_minima": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.find_path": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "float",
    "int",
    "lap.lapmod._find",
    "lap.lapmod._scan",
    "numpy.arange",
    "numpy.empty",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.get_cost": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "enumerate",
    "lap.lapmod.binary_search",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.lapmod": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_lapmod",
    "lap.lapmod._pya",
    "lap.lapmod._pyarr",
    "lap.lapmod._pycrrt",
    "lap.lapmod.check_cost",
    "lap.lapmod.get_cost",
    "numpy.ascontiguousarray",
    "numpy.empty",
    "numpy.float64",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.lapmod.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lap.tests": {
  "data": {},
  "type": "module"
 },
 "lap.tests.test_arr_loop": {
  "data": {},
  "type": "module"
 },
 "lap.tests.test_arr_loop.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "lap.tests.test_arr_loop.lapjv": {
  "data": {
   "shadows": "lap.lapjv"
  },
  "type": "import"
 },
 "lap.tests.test_arr_loop.lapmod": {
  "data": {
   "shadows": "lap.lapmod"
  },
  "type": "import"
 },
 "lap.tests.test_arr_loop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lap.tests.test_arr_loop.prepare_sparse_cost": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.inf",
    "numpy.intp",
    "numpy.lexsort",
    "numpy.r_",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_arr_loop.test_lapjv_arr_loop": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "lap.lapjv",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_arr_loop.test_lapmod_arr_loop": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "lap.lapmod",
    "lap.tests.test_arr_loop.prepare_sparse_cost",
    "len",
    "numpy.all",
    "numpy.array",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv": {
  "data": {},
  "type": "module"
 },
 "lap.tests.test_lapjv.dense_100x100_int": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "get_dense_100x100_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.dense_100x100_int_hard": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "get_dense_100x100_int_hard",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.dense_1kx1k_int": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "get_dense_1kx1k_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.dense_1kx1k_int_hard": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "get_dense_1kx1k_int_hard",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.dense_8x8_int": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "get_dense_8x8_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.dense_eps": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "get_dense_eps",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.fixture": {
  "data": {
   "shadows": "pytest.fixture"
  },
  "type": "import"
 },
 "lap.tests.test_lapjv.lapjv": {
  "data": {
   "shadows": "lap.lapjv"
  },
  "type": "import"
 },
 "lap.tests.test_lapjv.mark": {
  "data": {
   "shadows": "pytest.mark"
  },
  "type": "import"
 },
 "lap.tests.test_lapjv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lap.tests.test_lapjv.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "lap.tests.test_lapjv.sparse_100x100_int": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "get_sparse_100x100_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.sparse_1kx1k_int": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "get_sparse_1kx1k_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.sparse_4kx4k_int": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "get_sparse_4kx4k_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_all_inf": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "len",
    "numpy.empty",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_dense_100x100_int": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.tests.test_lapjv.dense_100x100_int",
    "len"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_dense_100x100_int_hard": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.tests.test_lapjv.dense_100x100_int_hard",
    "len"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_dense_1kx1k_int": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.tests.test_lapjv.dense_1kx1k_int",
    "len",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_dense_1kx1k_int_hard": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.tests.test_lapjv.dense_1kx1k_int_hard",
    "len",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_eps": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.tests.test_lapjv.dense_eps",
    "len",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_inf_col": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "len",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_inf_row": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "len",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_inf_unique": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "lap.lapjv",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_infs_unsolvable": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "len",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_lapjv_cost_limit": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "get_dense_8x8_int",
    "lap.lapjv",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_lapjv_empty": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "lap.lapjv",
    "numpy.ndarray",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_lapjv_extension": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "get_dense_8x8_int",
    "lap.lapjv",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_lapjv_noextension": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "get_dense_8x8_int",
    "lap.lapjv",
    "numpy.all",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_lapjv_non_contigous": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "get_dense_8x8_int",
    "lap.lapjv",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_lapjv_non_square_fail": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "lap.lapjv",
    "numpy.zeros",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_sparse_100x100_int": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "get_platform_maxint",
    "lap.lapjv",
    "lap.tests.test_lapjv.sparse_100x100_int",
    "len"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_sparse_1kx1k_int": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "get_platform_maxint",
    "lap.lapjv",
    "lap.tests.test_lapjv.sparse_1kx1k_int",
    "len",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_sparse_4kx4k_int": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "get_platform_maxint",
    "lap.lapjv",
    "lap.tests.test_lapjv.sparse_4kx4k_int",
    "len",
    "pytest.mark.timeout"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_sparse_square": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.parametrize",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapjv.test_square": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "lap.lapjv",
    "len",
    "numpy.all",
    "numpy.array",
    "pytest.mark.parametrize",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod": {
  "data": {},
  "type": "module"
 },
 "lap.tests.test_lapmod.dense_100x100_int": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "get_dense_100x100_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.dense_100x100_int_hard": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "get_dense_100x100_int_hard",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.dense_1kx1k_int": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "get_dense_1kx1k_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.dense_1kx1k_int_hard": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "get_dense_1kx1k_int_hard",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.dense_8x8_int": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "get_dense_8x8_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.dense_eps": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "get_dense_eps",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.fixture": {
  "data": {
   "shadows": "pytest.fixture"
  },
  "type": "import"
 },
 "lap.tests.test_lapmod.lapjv": {
  "data": {
   "shadows": "lap.lapjv"
  },
  "type": "import"
 },
 "lap.tests.test_lapmod.lapmod": {
  "data": {
   "shadows": "lap.lapmod"
  },
  "type": "import"
 },
 "lap.tests.test_lapmod.mark": {
  "data": {
   "shadows": "pytest.mark"
  },
  "type": "import"
 },
 "lap.tests.test_lapmod.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lap.tests.test_lapmod.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "lap.tests.test_lapmod.sparse_100x100_int": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "get_sparse_100x100_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.sparse_1kx1k_int": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "get_sparse_1kx1k_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.sparse_4kx4k_int": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "get_sparse_4kx4k_int",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_all_inf": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "lap.lapmod",
    "numpy.empty",
    "numpy.inf",
    "pytest.raises",
    "sparse_from_dense",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_dense_100x100_int": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.lapmod",
    "lap.tests.test_lapmod.dense_100x100_int",
    "len",
    "sparse_from_dense"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_dense_100x100_int_hard": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.lapmod",
    "lap.tests.test_lapmod.dense_100x100_int_hard",
    "len",
    "sparse_from_dense"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_dense_1kx1k_int": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.lapmod",
    "lap.tests.test_lapmod.dense_1kx1k_int",
    "len",
    "pytest.mark.timeout",
    "sparse_from_dense"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_dense_1kx1k_int_hard": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.lapmod",
    "lap.tests.test_lapmod.dense_1kx1k_int_hard",
    "len",
    "pytest.mark.timeout",
    "sparse_from_dense"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_eps": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "lap.lapmod",
    "lap.tests.test_lapmod.dense_eps",
    "len",
    "pytest.mark.timeout",
    "sparse_from_dense"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_inf_col": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "lap.lapmod",
    "len",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.timeout",
    "pytest.raises",
    "sparse_from_dense",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_inf_row": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "lap.lapmod",
    "len",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.timeout",
    "pytest.raises",
    "sparse_from_dense",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_inf_unique": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "lap.lapmod",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.inf",
    "pytest.raises",
    "sparse_from_dense",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_infs_unsolvable": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "lap.lapmod",
    "len",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.timeout",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_sparse_100x100_int": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "lap.lapmod",
    "lap.tests.test_lapmod.sparse_100x100_int",
    "len",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_sparse_1kx1k_int": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "get_platform_maxint",
    "lap.lapjv",
    "lap.lapmod",
    "lap.tests.test_lapmod.sparse_1kx1k_int",
    "len",
    "pytest.mark.timeout",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_sparse_4kx4k_int": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "get_platform_maxint",
    "lap.lapjv",
    "lap.lapmod",
    "lap.tests.test_lapmod.sparse_4kx4k_int",
    "len",
    "pytest.mark.timeout",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_sparse_square": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "float",
    "lap.lapjv",
    "lap.lapmod",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.inf",
    "pytest.mark.parametrize",
    "range",
    "sparse_from_masked"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_lapmod.test_square": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "lap.lapjv",
    "lap.lapmod",
    "len",
    "numpy.all",
    "numpy.array",
    "pytest.mark.parametrize",
    "range",
    "sparse_from_dense"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "lap.tests.test_utils.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "lap.tests.test_utils.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "lap.tests.test_utils.get_cost_CS": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_100x100_int": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_dense_int"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_100x100_int_hard": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_dense_int"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_1kx1k_int": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_dense_int"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_1kx1k_int_hard": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_dense_int"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_4kx4k_int": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_dense_int"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_8x8_int": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_eps": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "gzip.GzipFile",
    "lap.tests.test_utils.os",
    "numpy.genfromtxt",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_dense_int": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "lap.tests.test_utils.make_hard",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_nnz_int": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.int32",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_platform_maxint": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "lap.tests.test_utils.struct"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_sparse_100x100_int": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_sparse_int",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_sparse_1kx1k_int": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_sparse_int",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_sparse_4kx4k_int": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "lap.tests.test_utils.get_sparse_int",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.get_sparse_int": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "float",
    "lap.tests.test_utils.make_hard",
    "max",
    "numpy.random.permutation",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.make_hard": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lap.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lap.tests.test_utils.scoreatpercentile": {
  "data": {
   "shadows": "scipy.stats.scoreatpercentile"
  },
  "type": "import"
 },
 "lap.tests.test_utils.sparse_from_dense": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.sparse_from_dense_CS": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.atleast_2d",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.sparse_from_masked": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.isinf",
    "numpy.logical_not",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.sparse_from_masked_CS": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.atleast_2d",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "lap.tests.test_utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 }
}