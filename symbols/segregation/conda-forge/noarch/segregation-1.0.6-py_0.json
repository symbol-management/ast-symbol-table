{
 "segregation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.decompose_segregation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.decompose_segregation.Decompose_Segregation": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.decompose_segregation.Decompose_Segregation.__init__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.decompose_segregation.Decompose_Segregation.plot": {
  "lineno": 130,
  "symbols_in_volume": [
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.step",
   "matplotlib.pyplot.subplots",
   "matplotlib.pyplot.suptitle",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.decompose_segregation._decompose_segregation": {
  "lineno": 11,
  "symbols_in_volume": [
   "segregation.util._generate_counterfactual"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.inference_wrappers.Compare_Segregation": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.inference_wrappers.Compare_Segregation.__init__": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.inference_wrappers.Compare_Segregation.plot": {
  "lineno": 681,
  "symbols_in_volume": [
   "matplotlib.pyplot.axvline",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.title",
   "seaborn.distplot",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers.Infer_Segregation": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.inference_wrappers.Infer_Segregation.__init__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.inference_wrappers.Infer_Segregation.plot": {
  "lineno": 275,
  "symbols_in_volume": [
   "matplotlib.pyplot.axvline",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.title",
   "seaborn.distplot",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers._compare_segregation": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.random.choice",
   "numpy.random.uniform",
   "numpy.sort",
   "numpy.where",
   "pandas.concat",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers._compare_segregation.compl_inverse_cdf_1": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers._compare_segregation.compl_inverse_cdf_2": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers._compare_segregation.inverse_cdf_1": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers._compare_segregation.inverse_cdf_2": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.inference_wrappers._infer_segregation": {
  "lineno": 16,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "numpy.array",
   "numpy.empty",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.random.binomial",
   "numpy.random.choice",
   "numpy.random.multinomial",
   "pandas.DataFrame.from_dict",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.non_spatial_indexes.Atkinson": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Atkinson.__init__": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Bias_Corrected_Dissim": {
  "lineno": 1436,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Bias_Corrected_Dissim.__init__": {
  "lineno": 1493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Con_Prof": {
  "lineno": 986,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Con_Prof.__init__": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Con_Prof.plot": {
  "lineno": 1057,
  "symbols_in_volume": [
   "matplotlib.pyplot.scatter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Correlation_R": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Correlation_R.__init__": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Density_Corrected_Dissim": {
  "lineno": 1589,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Density_Corrected_Dissim.__init__": {
  "lineno": 1645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Dissim": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Dissim.__init__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Entropy": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Entropy.__init__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Exposure": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Exposure.__init__": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Gini_Seg": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Gini_Seg.__init__": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Isolation": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Isolation.__init__": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Modified_Dissim": {
  "lineno": 1147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Modified_Dissim.__init__": {
  "lineno": 1204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes.Modified_Gini_Seg": {
  "lineno": 1289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.non_spatial_indexes.Modified_Gini_Seg.__init__": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.non_spatial_indexes._atkinson": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._bias_corrected_dissim": {
  "lineno": 1357,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.random.multinomial",
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._conprof": {
  "lineno": 912,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._conprof.calculate_vt": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._correlationr": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._density_corrected_dissim": {
  "lineno": 1502,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.multiply",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._density_corrected_dissim.return_optimal_theta": {
  "lineno": 1563,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._density_corrected_dissim.return_optimal_theta.fold_norm": {
  "lineno": 1565,
  "symbols_in_volume": [
   "scipy.stats.norm.pdf"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._dissim": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._entropy": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.nansum",
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._exposure": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._gini_seg": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.matmul",
   "numpy.newaxis",
   "numpy.newaxis.T",
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._isolation": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._modified_dissim": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "segregation.non_spatial_indexes._modified_gini_seg": {
  "lineno": 1213,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "segregation.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.plot.lorenz": {
  "lineno": 33,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots",
   "numpy.arange"
  ],
  "type": "function"
 },
 "segregation.plot.plot_cdf": {
  "lineno": 5,
  "symbols_in_volume": [
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.step"
  ],
  "type": "function"
 },
 "segregation.profile_wrappers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.profile_wrappers.Profile_Non_Spatial_Segregation": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.profile_wrappers.Profile_Non_Spatial_Segregation.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.profile_wrappers.Profile_Segregation": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.profile_wrappers.Profile_Segregation.__init__": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.profile_wrappers.Profile_Spatial_Segregation": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.profile_wrappers.Profile_Spatial_Segregation.__init__": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.profile_wrappers._profile_non_spatial_segregation": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.profile_wrappers._profile_segregation": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.profile_wrappers._profile_spatial_segregation": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.spatial_indexes.Absolute_Centralization": {
  "lineno": 1914,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Absolute_Centralization.__init__": {
  "lineno": 1979,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Absolute_Concentration": {
  "lineno": 1603,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Absolute_Concentration.__init__": {
  "lineno": 1668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Boundary_Spatial_Dissim": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Boundary_Spatial_Dissim.__init__": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Delta": {
  "lineno": 1453,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Delta.__init__": {
  "lineno": 1518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Perimeter_Area_Ratio_Spatial_Dissim": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Perimeter_Area_Ratio_Spatial_Dissim.__init__": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Relative_Centralization": {
  "lineno": 2067,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Relative_Centralization.__init__": {
  "lineno": 2132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Relative_Clustering": {
  "lineno": 1310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Relative_Clustering.__init__": {
  "lineno": 1380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Relative_Concentration": {
  "lineno": 1756,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Relative_Concentration.__init__": {
  "lineno": 1821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Dissim": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Spatial_Dissim.__init__": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Exposure": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Spatial_Exposure.__init__": {
  "lineno": 1058,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Information_Theory": {
  "lineno": 2247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Spatial_Information_Theory.__init__": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Isolation": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Spatial_Isolation.__init__": {
  "lineno": 886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Prox_Prof": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Spatial_Prox_Prof.__init__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Prox_Prof.plot": {
  "lineno": 209,
  "symbols_in_volume": [
   "matplotlib.pyplot.scatter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes.Spatial_Proximity": {
  "lineno": 1151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "segregation.spatial_indexes.Spatial_Proximity.__init__": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "segregation.spatial_indexes._absolute_centralization": {
  "lineno": 1831,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.cumsum",
   "numpy.nansum",
   "numpy.sqrt",
   "scipy.ndimage.interpolation.shift"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._absolute_concentration": {
  "lineno": 1527,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cumsum",
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._boundary_spatial_dissim": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.multiply",
   "numpy.where",
   "segregation.non_spatial_indexes._dissim",
   "segregation.util._return_length_weighted_w",
   "sklearn.metrics.pairwise.manhattan_distances"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._delta": {
  "lineno": 1389,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._perimeter_area_ratio_spatial_dissim": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.array",
   "numpy.multiply",
   "numpy.where",
   "segregation.non_spatial_indexes._dissim",
   "segregation.util._return_length_weighted_w",
   "sklearn.metrics.pairwise.manhattan_distances"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._relative_centralization": {
  "lineno": 1989,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.cumsum",
   "numpy.nansum",
   "numpy.sqrt",
   "scipy.ndimage.interpolation.shift"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._relative_clustering": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.fill_diagonal",
   "sklearn.metrics.pairwise.euclidean_distances"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._relative_concentration": {
  "lineno": 1677,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cumsum",
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_dissim": {
  "lineno": 222,
  "symbols_in_volume": [
   "libpysal.weights.Queen.from_dataframe",
   "libpysal.weights.W",
   "numpy.array",
   "numpy.multiply",
   "numpy.newaxis",
   "numpy.where",
   "segregation.non_spatial_indexes._dissim"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_exposure": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.fill_diagonal",
   "numpy.multiply",
   "numpy.nansum",
   "numpy.sum",
   "pandas.DataFrame",
   "sklearn.metrics.pairwise.euclidean_distances"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_information_theory": {
  "lineno": 2142,
  "symbols_in_volume": [
   "libpysal.weights.Queen.from_dataframe",
   "libpysal.weights.W",
   "math.log",
   "numpy.array",
   "numpy.fill_diagonal",
   "numpy.log",
   "numpy.matmul"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_isolation": {
  "lineno": 726,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.fill_diagonal",
   "numpy.multiply",
   "numpy.nansum",
   "numpy.sum",
   "pandas.DataFrame",
   "sklearn.metrics.pairwise.euclidean_distances"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_prox_profile": {
  "lineno": 41,
  "symbols_in_volume": [
   "libpysal.weights.Queen.from_dataframe",
   "numpy.array",
   "numpy.inf",
   "numpy.linspace",
   "numpy.nan_to_num",
   "scipy.sparse.csgraph.floyd_warshall",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_prox_profile.calculate_etat": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.spatial_indexes._spatial_proximity": {
  "lineno": 1067,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.fill_diagonal",
   "sklearn.metrics.pairwise.euclidean_distances"
  ],
  "type": "function"
 },
 "segregation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.tests.test_absolute_centralization": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_absolute_centralization.Absolute_Centralization_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_absolute_centralization.Absolute_Centralization_Tester.test_Absolute_Centralization": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Absolute_Centralization"
  ],
  "type": "function"
 },
 "segregation.tests.test_absolute_concentration": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_absolute_concentration.Absolute_Concentration_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_absolute_concentration.Absolute_Concentration_Tester.test_Absolute_Concentration": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Absolute_Concentration"
  ],
  "type": "function"
 },
 "segregation.tests.test_atkinson": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_atkinson.Atkinson_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_atkinson.Atkinson_Tester.test_Atkinson": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Atkinson"
  ],
  "type": "function"
 },
 "segregation.tests.test_bias_corrected_dissimilarity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.Bias_Corrected_Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.Bias_Corrected_Dissim_Tester.test_Bias_Corrected_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Bias_Corrected_Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.Boundary_Spatial_Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.Boundary_Spatial_Dissim_Tester.test_Boundary_Spatial_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Boundary_Spatial_Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_conprof": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_conprof.Con_Prof_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_conprof.Con_Prof_Tester.test_Con_Prof": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Con_Prof"
  ],
  "type": "function"
 },
 "segregation.tests.test_correlationr": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_correlationr.Correlation_R_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_correlationr.Correlation_R_Tester.test_Correlation_R": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Correlation_R"
  ],
  "type": "function"
 },
 "segregation.tests.test_delta": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_delta.Delta_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_delta.Delta_Tester.test_Delta": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Delta"
  ],
  "type": "function"
 },
 "segregation.tests.test_density_corrected_dissimilarity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_density_corrected_dissimilarity.Density_Corrected_Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_density_corrected_dissimilarity.Density_Corrected_Dissim_Tester.test_Density_Corrected_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Density_Corrected_Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_dissim": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_dissim.Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_dissim.Dissim_Tester.test_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_entropy": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_entropy.Entropy_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_entropy.Entropy_Tester.test_Entropy": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Entropy"
  ],
  "type": "function"
 },
 "segregation.tests.test_exposure": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_exposure.Exposure_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_exposure.Exposure_Tester.test_Exposure": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Exposure"
  ],
  "type": "function"
 },
 "segregation.tests.test_gini_seg": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_gini_seg.Gini_Seg_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_gini_seg.Gini_Seg_Tester.test_Gini_Seg": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Gini_Seg"
  ],
  "type": "function"
 },
 "segregation.tests.test_isolation": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_isolation.Isolation_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_isolation.Isolation_Tester.test_Isolation": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Isolation"
  ],
  "type": "function"
 },
 "segregation.tests.test_modified_dissimilarity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_modified_dissimilarity.Modified_Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_modified_dissimilarity.Modified_Dissim_Tester.test_Modified_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Modified_Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_modified_gini": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_modified_gini.Modified_Gini_Seg_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_modified_gini.Modified_Gini_Seg_Tester.test_Modified_Gini_Seg": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal",
   "segregation.non_spatial_indexes.Modified_Gini_Seg"
  ],
  "type": "function"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.Perimeter_Area_Ratio_Spatial_Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.Perimeter_Area_Ratio_Spatial_Dissim_Tester.test_Perimeter_Area_Ratio_Spatial_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Perimeter_Area_Ratio_Spatial_Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_relative_centralization": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_relative_centralization.Relative_Centralization_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_relative_centralization.Relative_Centralization_Tester.test_Relative_Centralization": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Relative_Centralization"
  ],
  "type": "function"
 },
 "segregation.tests.test_relative_clustering": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_relative_clustering.Relative_Clustering_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_relative_clustering.Relative_Clustering_Tester.test_Relative_Clustering": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Relative_Clustering"
  ],
  "type": "function"
 },
 "segregation.tests.test_relative_concentration": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_relative_concentration.Relative_Concentration_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_relative_concentration.Relative_Concentration_Tester.test_Relative_Concentration": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Relative_Concentration"
  ],
  "type": "function"
 },
 "segregation.tests.test_spatial_dissimilarity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_spatial_dissimilarity.Spatial_Dissim_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_spatial_dissimilarity.Spatial_Dissim_Tester.test_Spatial_Dissim": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Spatial_Dissim"
  ],
  "type": "function"
 },
 "segregation.tests.test_spatial_exposure": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_spatial_exposure.Spatial_Exposure_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_spatial_exposure.Spatial_Exposure_Tester.test_Spatial_Exposure": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Spatial_Exposure"
  ],
  "type": "function"
 },
 "segregation.tests.test_spatial_information_theory": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_spatial_information_theory.Spatial_Information_Theory_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_spatial_information_theory.Spatial_Information_Theory_Tester.test_Spatial_Information_Theory": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Spatial_Information_Theory"
  ],
  "type": "function"
 },
 "segregation.tests.test_spatial_isolation": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_spatial_isolation.Spatial_Isolation_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_spatial_isolation.Spatial_Isolation_Tester.test_Spatial_Isolation": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Spatial_Isolation"
  ],
  "type": "function"
 },
 "segregation.tests.test_spatial_prox_profile": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_spatial_prox_profile.Spatial_Prox_Prof_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_spatial_prox_profile.Spatial_Prox_Prof_Tester.test_Spatial_Prox_Prof": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Spatial_Prox_Prof"
  ],
  "type": "function"
 },
 "segregation.tests.test_spatial_proximity": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "segregation.tests.test_spatial_proximity.Spatial_Proximity_Tester": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "segregation.tests.test_spatial_proximity.Spatial_Proximity_Tester.test_Spatial_Proximity": {
  "lineno": 10,
  "symbols_in_volume": [
   "geopandas.read_file",
   "libpysal.examples.get_path",
   "numpy.testing.assert_almost_equal",
   "segregation.spatial_indexes.Spatial_Proximity"
  ],
  "type": "function"
 },
 "segregation.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "segregation.util._generate_counterfactual": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "segregation.util._return_length_weighted_w": {
  "lineno": 16,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.GeoSeries",
   "libpysal.weights.KNN.from_dataframe",
   "libpysal.weights.Rook.from_dataframe",
   "libpysal.weights.W.from_adjlist",
   "libpysal.weights.util.attach_islands",
   "pandas.DataFrame.from_records",
   "pandas.concat",
   "warnings.warn"
  ],
  "type": "function"
 }
}