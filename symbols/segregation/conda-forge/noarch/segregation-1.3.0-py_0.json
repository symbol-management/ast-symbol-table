{
 "*": {
  "data": {
   "imports": [
    "segregation.aspatial",
    "segregation.spatial"
   ]
  },
  "type": "star-import"
 },
 "segregation": {
  "data": {},
  "type": "module"
 },
 "segregation.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "segregation.aspatial": {
  "data": {},
  "type": "module"
 },
 "segregation.aspatial.aspatial_indexes": {
  "data": {
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes.BiasCorrectedDissim",
    "segregation.aspatial.aspatial_indexes.ConProf",
    "segregation.aspatial.aspatial_indexes.CorrelationR",
    "segregation.aspatial.aspatial_indexes.DensityCorrectedDissim",
    "segregation.aspatial.aspatial_indexes.GiniSeg",
    "segregation.aspatial.aspatial_indexes.ModifiedDissim",
    "segregation.aspatial.aspatial_indexes.ModifiedGiniSeg",
    "segregation.aspatial.aspatial_indexes.msg",
    "segregation.util.util.DeprecationHelper",
    "segregation.util.util._dep_message"
   ]
  },
  "type": "module"
 },
 "segregation.aspatial.aspatial_indexes.Atkinson": {
  "data": {
   "lineno": 954
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.Atkinson.__init__": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._atkinson",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.BiasCorrectedDissim": {
  "data": {
   "lineno": 1749
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.BiasCorrectedDissim.__init__": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._bias_corrected_dissim",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Bias_Corrected_Dissim": {
  "data": {
   "lineno": 2026
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.ConProf": {
  "data": {
   "lineno": 1251
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.ConProf.__init__": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._conprof",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.ConProf.plot": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.pyplot.scatter",
    "segregation.aspatial.aspatial_indexes.warnings"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Con_Prof": {
  "data": {
   "lineno": 2017
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.CorrelationR": {
  "data": {
   "lineno": 1098
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.CorrelationR.__init__": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._correlationr",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Correlation_R": {
  "data": {
   "lineno": 2014
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.DensityCorrectedDissim": {
  "data": {
   "lineno": 1918
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.DensityCorrectedDissim.__init__": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._density_corrected_dissim",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Density_Corrected_Dissim": {
  "data": {
   "lineno": 2029
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.DeprecationHelper": {
  "data": {
   "shadows": "segregation.util.util.DeprecationHelper"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.Dissim": {
  "data": {
   "lineno": 240
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.Dissim.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._dissim",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Entropy": {
  "data": {
   "lineno": 519
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.Entropy.__init__": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._entropy",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Exposure": {
  "data": {
   "lineno": 800
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.Exposure.__init__": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._exposure",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.GiniSeg": {
  "data": {
   "lineno": 380
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.GiniSeg.__init__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._gini_seg",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Gini_Seg": {
  "data": {
   "lineno": 2011
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.Isolation": {
  "data": {
   "lineno": 657
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.Isolation.__init__": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._isolation",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.MinMax": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.MinMax.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._min_max",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.ModifiedDissim": {
  "data": {
   "lineno": 1428
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.ModifiedDissim.__init__": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._modified_dissim",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.ModifiedGiniSeg": {
  "data": {
   "lineno": 1586
  },
  "type": "class"
 },
 "segregation.aspatial.aspatial_indexes.ModifiedGiniSeg.__init__": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes._modified_gini_seg",
    "segregation.util.util._nan_handle",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes.Modified_Dissim": {
  "data": {
   "lineno": 2020
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.Modified_Gini_Seg": {
  "data": {
   "lineno": 2023
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes._atkinson": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "any",
    "float",
    "isinstance",
    "numpy.array",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._bias_corrected_dissim": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.random.multinomial",
    "pandas.DataFrame.from_dict",
    "range",
    "segregation.aspatial.aspatial_indexes._dissim",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._conprof": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "int",
    "list",
    "map",
    "numpy.array",
    "numpy.linspace",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._conprof.calculate_vt": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._correlationr": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.nansum",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._density_corrected_dissim": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "any",
    "numpy.array",
    "numpy.multiply",
    "numpy.sqrt",
    "pandas.Series",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._density_corrected_dissim.return_optimal_theta": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._density_corrected_dissim.return_optimal_theta.fold_norm": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "scipy.stats.norm.pdf"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._dep_message": {
  "data": {
   "shadows": "segregation.util.util._dep_message"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes._dissim": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "any",
    "numpy.array",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._entropy": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.log",
    "numpy.nansum",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._exposure": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.nansum",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._gini_seg": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "any",
    "numpy.array",
    "numpy.matmul",
    "numpy.newaxis",
    "numpy.newaxis.T",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._isolation": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.nansum",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._min_max": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "geopandas.GeoDataFrame",
    "isinstance",
    "numpy.vstack",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._modified_dissim": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.random.binomial",
    "range",
    "segregation.aspatial.aspatial_indexes._dissim",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._modified_gini_seg": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.array",
    "numpy.empty",
    "numpy.random.binomial",
    "range",
    "segregation.aspatial.aspatial_indexes._gini_seg",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.aspatial_indexes._nan_handle": {
  "data": {
   "shadows": "segregation.util.util._nan_handle"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.msg": {
  "data": {
   "lineno": 2028
  },
  "type": "constant"
 },
 "segregation.aspatial.aspatial_indexes.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "segregation.aspatial.aspatial_indexes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "segregation.aspatial.multigroup_aspatial_indexes": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiDissim",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiDivergence",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiDiversity",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiGiniSeg",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiInformationTheory",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiNormalizedExposure",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiRelativeDiversity",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiSquaredCoefficientVariation",
    "segregation.aspatial.multigroup_aspatial_indexes.SimpsonsConcentration",
    "segregation.aspatial.multigroup_aspatial_indexes.SimpsonsInteraction",
    "segregation.aspatial.multigroup_aspatial_indexes.msg",
    "segregation.util.util.DeprecationHelper",
    "segregation.util.util._dep_message"
   ]
  },
  "type": "module"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.DeprecationHelper": {
  "data": {
   "shadows": "segregation.util.util.DeprecationHelper"
  },
  "type": "import"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiDissim": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiDissim.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_dissim"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiDivergence": {
  "data": {
   "lineno": 1105
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiDivergence.__init__": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_divergence"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiDiversity": {
  "data": {
   "lineno": 762
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiDiversity.__init__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_diversity"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiGiniSeg": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiGiniSeg.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_gini_seg"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiInformationTheory": {
  "data": {
   "lineno": 433
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiInformationTheory.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_information_theory"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiNormalizedExposure": {
  "data": {
   "lineno": 324
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiNormalizedExposure.__init__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_normalized_exposure"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiRelativeDiversity": {
  "data": {
   "lineno": 541
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiRelativeDiversity.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_relative_diversity"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiSquaredCoefficientVariation": {
  "data": {
   "lineno": 650
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.MultiSquaredCoefficientVariation.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._multi_squared_coefficient_of_variation"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Dissim": {
  "data": {
   "lineno": 1170
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Divergence": {
  "data": {
   "lineno": 1197
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Diversity": {
  "data": {
   "lineno": 1188
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Gini_Seg": {
  "data": {
   "lineno": 1173
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Information_Theory": {
  "data": {
   "lineno": 1179
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Normalized_Exposure": {
  "data": {
   "lineno": 1176
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Relative_Diversity": {
  "data": {
   "lineno": 1182
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Multi_Squared_Coefficient_of_Variation": {
  "data": {
   "lineno": 1185
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.SimpsonsConcentration": {
  "data": {
   "lineno": 879
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.SimpsonsConcentration.__init__": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._simpsons_concentration"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.SimpsonsInteraction": {
  "data": {
   "lineno": 992
  },
  "type": "class"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.SimpsonsInteraction.__init__": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes._simpsons_interaction"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Simpsons_Concentration": {
  "data": {
   "lineno": 1191
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.Simpsons_Interaction": {
  "data": {
   "lineno": 1194
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._dep_message": {
  "data": {
   "shadows": "segregation.util.util._dep_message"
  },
  "type": "import"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_dissim": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abs",
    "numpy.array",
    "numpy.multiply",
    "numpy.repeat",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_divergence": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.nansum",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_diversity": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_gini_seg": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.multiply",
    "numpy.outer",
    "range",
    "segregation.util.util._nan_handle",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_information_theory": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.nansum",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_normalized_exposure": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.array",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_relative_diversity": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.array",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._multi_squared_coefficient_of_variation": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.array",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._nan_handle": {
  "data": {
   "shadows": "segregation.util.util._nan_handle"
  },
  "type": "import"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._simpsons_concentration": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.array",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes._simpsons_interaction": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "numpy.array",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.msg": {
  "data": {
   "lineno": 1196
  },
  "type": "constant"
 },
 "segregation.aspatial.multigroup_aspatial_indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.compute_all": {
  "data": {},
  "type": "module"
 },
 "segregation.compute_all.compute_all": {
  "data": {},
  "type": "module"
 },
 "segregation.compute_all.compute_all.ComputeAllAspatialSegregation": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "segregation.compute_all.compute_all.ComputeAllAspatialSegregation.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "segregation.compute_all.compute_all._compute_all_aspatial_segregation"
   ]
  },
  "type": "function"
 },
 "segregation.compute_all.compute_all.ComputeAllSegregation": {
  "data": {
   "lineno": 291
  },
  "type": "class"
 },
 "segregation.compute_all.compute_all.ComputeAllSegregation.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "segregation.compute_all.compute_all._compute_all_segregation"
   ]
  },
  "type": "function"
 },
 "segregation.compute_all.compute_all.ComputeAllSpatialSegregation": {
  "data": {
   "lineno": 203
  },
  "type": "class"
 },
 "segregation.compute_all.compute_all.ComputeAllSpatialSegregation.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "segregation.compute_all.compute_all._compute_all_spatial_segregation"
   ]
  },
  "type": "function"
 },
 "segregation.compute_all.compute_all.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "segregation.compute_all.compute_all.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.compute_all.compute_all._compute_all_aspatial_segregation": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Atkinson",
    "BiasCorrectedDissim",
    "ConProf",
    "CorrelationR",
    "DensityCorrectedDissim",
    "Dissim",
    "Entropy",
    "Exposure",
    "GiniSeg",
    "Isolation",
    "MinMax",
    "ModifiedDissim",
    "ModifiedGiniSeg",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "segregation.compute_all.compute_all._compute_all_segregation": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.concat",
    "segregation.compute_all.compute_all.ComputeAllAspatialSegregation",
    "segregation.compute_all.compute_all.ComputeAllSpatialSegregation"
   ]
  },
  "type": "function"
 },
 "segregation.compute_all.compute_all._compute_all_spatial_segregation": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "AbsoluteCentralization",
    "AbsoluteClustering",
    "AbsoluteConcentration",
    "BoundarySpatialDissim",
    "Delta",
    "DistanceDecayExposure",
    "DistanceDecayIsolation",
    "PerimeterAreaRatioSpatialDissim",
    "RelativeCentralization",
    "RelativeClustering",
    "RelativeConcentration",
    "SpatialDissim",
    "SpatialMinMax",
    "SpatialProxProf",
    "SpatialProximity",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "segregation.compute_all.compute_all.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "segregation.decomposition": {
  "data": {},
  "type": "module"
 },
 "segregation.decomposition.decompose_segregation": {
  "data": {
   "symbols_in_volume": [
    "segregation.decomposition.decompose_segregation.DecomposeSegregation",
    "segregation.decomposition.decompose_segregation.msg",
    "segregation.util.util.DeprecationHelper",
    "segregation.util.util._dep_message"
   ]
  },
  "type": "module"
 },
 "segregation.decomposition.decompose_segregation.DecomposeSegregation": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "segregation.decomposition.decompose_segregation.DecomposeSegregation.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "segregation.decomposition.decompose_segregation._decompose_segregation"
   ]
  },
  "type": "function"
 },
 "segregation.decomposition.decompose_segregation.DecomposeSegregation.plot": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.step",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.suptitle",
    "round",
    "segregation.decomposition.decompose_segregation.warnings",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.decomposition.decompose_segregation.Decompose_Segregation": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "segregation.decomposition.decompose_segregation.DeprecationHelper": {
  "data": {
   "shadows": "segregation.util.util.DeprecationHelper"
  },
  "type": "import"
 },
 "segregation.decomposition.decompose_segregation.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "segregation.decomposition.decompose_segregation.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.decomposition.decompose_segregation._decompose_segregation": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "seg_func",
    "segregation.util.util._generate_counterfactual"
   ]
  },
  "type": "function"
 },
 "segregation.decomposition.decompose_segregation._dep_message": {
  "data": {
   "shadows": "segregation.util.util._dep_message"
  },
  "type": "import"
 },
 "segregation.decomposition.decompose_segregation._generate_counterfactual": {
  "data": {
   "shadows": "segregation.util.util._generate_counterfactual"
  },
  "type": "import"
 },
 "segregation.decomposition.decompose_segregation.msg": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "segregation.decomposition.decompose_segregation.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "segregation.decomposition.decompose_segregation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "segregation.inference": {
  "data": {},
  "type": "module"
 },
 "segregation.inference.inference_wrappers": {
  "data": {
   "symbols_in_volume": [
    "segregation.inference.inference_wrappers.SingleValueTest",
    "segregation.inference.inference_wrappers.TwoValueTest",
    "segregation.inference.inference_wrappers.msg",
    "segregation.util.util.DeprecationHelper",
    "segregation.util.util._dep_message"
   ]
  },
  "type": "module"
 },
 "segregation.inference.inference_wrappers.Compare_Segregation": {
  "data": {
   "lineno": 742
  },
  "type": "constant"
 },
 "segregation.inference.inference_wrappers.DeprecationHelper": {
  "data": {
   "shadows": "segregation.util.util.DeprecationHelper"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.Infer_Segregation": {
  "data": {
   "lineno": 739
  },
  "type": "constant"
 },
 "segregation.inference.inference_wrappers.SingleValueTest": {
  "data": {
   "lineno": 334
  },
  "type": "class"
 },
 "segregation.inference.inference_wrappers.SingleValueTest.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "segregation.inference.inference_wrappers._infer_segregation"
   ]
  },
  "type": "function"
 },
 "segregation.inference.inference_wrappers.SingleValueTest.plot": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.pyplot.axvline",
    "matplotlib.pyplot.title",
    "round",
    "seaborn.distplot",
    "segregation.inference.inference_wrappers.warnings"
   ]
  },
  "type": "function"
 },
 "segregation.inference.inference_wrappers.TwoValueTest": {
  "data": {
   "lineno": 645
  },
  "type": "class"
 },
 "segregation.inference.inference_wrappers.TwoValueTest.__init__": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "segregation.inference.inference_wrappers._compare_segregation"
   ]
  },
  "type": "function"
 },
 "segregation.inference.inference_wrappers.TwoValueTest.plot": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.pyplot.axvline",
    "matplotlib.pyplot.title",
    "round",
    "seaborn.distplot",
    "segregation.inference.inference_wrappers.warnings"
   ]
  },
  "type": "function"
 },
 "segregation.inference.inference_wrappers.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "segregation.inference.inference_wrappers.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.inference.inference_wrappers._compare_segregation": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "int",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.random.permutation",
    "numpy.random.uniform",
    "numpy.where",
    "pandas.concat",
    "range",
    "round",
    "segregation.inference.inference_wrappers.warnings",
    "segregation.util.util._generate_counterfactual",
    "str",
    "tqdm.auto.tqdm",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.inference.inference_wrappers._dep_message": {
  "data": {
   "shadows": "segregation.util.util._dep_message"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers._generate_counterfactual": {
  "data": {
   "shadows": "segregation.util.util._generate_counterfactual"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers._infer_segregation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "bool",
    "geopandas.GeoDataFrame",
    "len",
    "list",
    "map",
    "numpy.array",
    "numpy.empty",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.random.binomial",
    "numpy.random.choice",
    "numpy.random.multinomial",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "range",
    "segregation.inference.inference_wrappers.warnings",
    "str",
    "sum",
    "tqdm.auto.tqdm",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.inference.inference_wrappers.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.msg": {
  "data": {
   "lineno": 741
  },
  "type": "constant"
 },
 "segregation.inference.inference_wrappers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.tqdm": {
  "data": {
   "shadows": "tqdm.auto.tqdm"
  },
  "type": "import"
 },
 "segregation.inference.inference_wrappers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "segregation.local": {
  "data": {},
  "type": "module"
 },
 "segregation.local.local_indexes": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr",
    "segregation.local.local_indexes.LocalRelativeCentralization",
    "segregation.local.local_indexes.MultiLocalDiversity",
    "segregation.local.local_indexes.MultiLocalEntropy",
    "segregation.local.local_indexes.MultiLocalSimpsonConcentration",
    "segregation.local.local_indexes.MultiLocalSimpsonInteraction",
    "segregation.local.local_indexes.MultiLocationQuotient",
    "segregation.local.local_indexes.msg",
    "segregation.util.util.DeprecationHelper",
    "segregation.util.util._dep_message"
   ]
  },
  "type": "module"
 },
 "segregation.local.local_indexes.DeprecationHelper": {
  "data": {
   "shadows": "segregation.util.util.DeprecationHelper"
  },
  "type": "import"
 },
 "segregation.local.local_indexes.LocalRelativeCentralization": {
  "data": {
   "lineno": 654
  },
  "type": "class"
 },
 "segregation.local.local_indexes.LocalRelativeCentralization.__init__": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "segregation.local.local_indexes._local_relative_centralization"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.Local_Relative_Centralization": {
  "data": {
   "lineno": 741
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.MultiLocalDiversity": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "segregation.local.local_indexes.MultiLocalDiversity.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "segregation.local.local_indexes._multi_local_diversity"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.MultiLocalEntropy": {
  "data": {
   "lineno": 305
  },
  "type": "class"
 },
 "segregation.local.local_indexes.MultiLocalEntropy.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "segregation.local.local_indexes._multi_local_entropy"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.MultiLocalSimpsonConcentration": {
  "data": {
   "lineno": 526
  },
  "type": "class"
 },
 "segregation.local.local_indexes.MultiLocalSimpsonConcentration.__init__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "segregation.local.local_indexes._multi_local_simpson_concentration"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.MultiLocalSimpsonInteraction": {
  "data": {
   "lineno": 413
  },
  "type": "class"
 },
 "segregation.local.local_indexes.MultiLocalSimpsonInteraction.__init__": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "segregation.local.local_indexes._multi_local_simpson_interaction"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.MultiLocationQuotient": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "segregation.local.local_indexes.MultiLocationQuotient.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "segregation.local.local_indexes._multi_location_quotient"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.Multi_Local_Diversity": {
  "data": {
   "lineno": 729
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.Multi_Local_Entropy": {
  "data": {
   "lineno": 732
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.Multi_Local_Simpson_Concentration": {
  "data": {
   "lineno": 738
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.Multi_Local_Simpson_Interaction": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.Multi_Location_Quotient": {
  "data": {
   "lineno": 726
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.RelativeCentralization": {
  "data": {
   "shadows": "segregation.spatial.RelativeCentralization"
  },
  "type": "import"
 },
 "segregation.local.local_indexes.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "segregation.local.local_indexes._dep_message": {
  "data": {
   "shadows": "segregation.util.util._dep_message"
  },
  "type": "import"
 },
 "segregation.local.local_indexes._local_relative_centralization": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "len",
    "libpysal.cg.kdtree.KDTree",
    "libpysal.weights.KNN",
    "list",
    "numpy.array",
    "numpy.empty",
    "range",
    "segregation.spatial.RelativeCentralization",
    "zip"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes._multi_local_diversity": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes._multi_local_entropy": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.log",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes._multi_local_simpson_concentration": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes._multi_local_simpson_interaction": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes._multi_location_quotient": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "segregation.local.local_indexes.lps": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "segregation.local.local_indexes.msg": {
  "data": {
   "lineno": 740
  },
  "type": "constant"
 },
 "segregation.local.local_indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.network": {
  "data": {},
  "type": "module"
 },
 "segregation.network.network": {
  "data": {},
  "type": "module"
 },
 "segregation.network.network._HiddenPrints": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "segregation.network.network._HiddenPrints.__enter__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "open",
    "segregation.network.network.os",
    "segregation.network.network.sys"
   ]
  },
  "type": "function"
 },
 "segregation.network.network._HiddenPrints.__exit__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "segregation.network.network.sys"
   ]
  },
  "type": "function"
 },
 "segregation.network.network.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "segregation.network.network.calc_access": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "zip"
   ]
  },
  "type": "function"
 },
 "segregation.network.network.get_osm_network": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "pandana.Network",
    "print",
    "segregation.network.network._HiddenPrints",
    "segregation.util.project_gdf",
    "urbanaccess.osm.load.ua_network_from_bbox"
   ]
  },
  "type": "function"
 },
 "segregation.network.network.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.network.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "segregation.network.network.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "segregation.network.network.pdna": {
  "data": {
   "shadows": "pandana"
  },
  "type": "import"
 },
 "segregation.network.network.project_gdf": {
  "data": {
   "shadows": "segregation.util.project_gdf"
  },
  "type": "import"
 },
 "segregation.network.network.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "segregation.network.network.ua_network_from_bbox": {
  "data": {
   "shadows": "urbanaccess.osm.load.ua_network_from_bbox"
  },
  "type": "import"
 },
 "segregation.network.network.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "segregation.spatial": {
  "data": {},
  "type": "module"
 },
 "segregation.spatial.spatial_indexes": {
  "data": {
   "symbols_in_volume": [
    "numpy.seterr",
    "segregation.spatial.spatial_indexes.AbsoluteCentralization",
    "segregation.spatial.spatial_indexes.AbsoluteClustering",
    "segregation.spatial.spatial_indexes.AbsoluteConcentration",
    "segregation.spatial.spatial_indexes.BoundarySpatialDissim",
    "segregation.spatial.spatial_indexes.DistanceDecayExposure",
    "segregation.spatial.spatial_indexes.DistanceDecayIsolation",
    "segregation.spatial.spatial_indexes.PerimeterAreaRatioSpatialDissim",
    "segregation.spatial.spatial_indexes.RelativeCentralization",
    "segregation.spatial.spatial_indexes.RelativeClustering",
    "segregation.spatial.spatial_indexes.RelativeConcentration",
    "segregation.spatial.spatial_indexes.SpatialDissim",
    "segregation.spatial.spatial_indexes.SpatialProxProf",
    "segregation.spatial.spatial_indexes.SpatialProximity",
    "segregation.spatial.spatial_indexes.msg",
    "segregation.util.util.DeprecationHelper",
    "segregation.util.util._dep_message"
   ]
  },
  "type": "module"
 },
 "segregation.spatial.spatial_indexes.AbsoluteCentralization": {
  "data": {
   "lineno": 2880
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.AbsoluteCentralization.__init__": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._absolute_centralization",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.AbsoluteClustering": {
  "data": {
   "lineno": 1881
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.AbsoluteClustering.__init__": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._absolute_clustering",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.AbsoluteConcentration": {
  "data": {
   "lineno": 2450
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.AbsoluteConcentration.__init__": {
  "data": {
   "lineno": 2524,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._absolute_concentration",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.Absolute_Centralization": {
  "data": {
   "lineno": 3522
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Absolute_Clustering": {
  "data": {
   "lineno": 3510
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Absolute_Concentration": {
  "data": {
   "lineno": 3516
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.BoundarySpatialDissim": {
  "data": {
   "lineno": 683
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.BoundarySpatialDissim.__init__": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._boundary_spatial_dissim",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.Boundary_Spatial_Dissim": {
  "data": {
   "lineno": 3492
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Delta": {
  "data": {
   "lineno": 2277
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.Delta.__init__": {
  "data": {
   "lineno": 2351,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._delta",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.DeprecationHelper": {
  "data": {
   "shadows": "segregation.util.util.DeprecationHelper"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.DistanceDecayExposure": {
  "data": {
   "lineno": 1423
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.DistanceDecayExposure.__init__": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._distance_decay_exposure",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.DistanceDecayIsolation": {
  "data": {
   "lineno": 1190
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.DistanceDecayIsolation.__init__": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._distance_decay_isolation",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.Distance_Decay_Exposure": {
  "data": {
   "lineno": 3504
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Distance_Decay_Isolation": {
  "data": {
   "lineno": 3500
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Kernel": {
  "data": {
   "shadows": "libpysal.weights.Kernel"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.MinMax": {
  "data": {
   "shadows": "segregation.aspatial.aspatial_indexes.MinMax"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.MultiDivergence": {
  "data": {
   "shadows": "segregation.aspatial.multigroup_aspatial_indexes.MultiDivergence"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.MultiInformationTheory": {
  "data": {
   "shadows": "segregation.aspatial.multigroup_aspatial_indexes.MultiInformationTheory"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.PerimeterAreaRatioSpatialDissim": {
  "data": {
   "lineno": 872
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.PerimeterAreaRatioSpatialDissim.__init__": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._perimeter_area_ratio_spatial_dissim",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.Perimeter_Area_Ratio_Spatial_Dissim": {
  "data": {
   "lineno": 3496
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Queen": {
  "data": {
   "shadows": "libpysal.weights.Queen"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.RelativeCentralization": {
  "data": {
   "lineno": 3162
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.RelativeCentralization.__init__": {
  "data": {
   "lineno": 3260,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._relative_centralization",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.RelativeClustering": {
  "data": {
   "lineno": 2101
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.RelativeClustering.__init__": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._relative_clustering",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.RelativeConcentration": {
  "data": {
   "lineno": 2626
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.RelativeConcentration.__init__": {
  "data": {
   "lineno": 2700,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._relative_concentration",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.Relative_Centralization": {
  "data": {
   "lineno": 3526
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Relative_Clustering": {
  "data": {
   "lineno": 3513
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Relative_Concentration": {
  "data": {
   "lineno": 3519
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.SpatialDissim": {
  "data": {
   "lineno": 482
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.SpatialDissim.__init__": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._spatial_dissim",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.SpatialDivergence": {
  "data": {
   "lineno": 3339,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes.MultiDivergence"
   ]
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.SpatialDivergence.__init__": {
  "data": {
   "lineno": 3373,
   "symbols_in_volume": [
    "segregation.network.calc_access",
    "segregation.spatial.spatial_indexes._build_local_environment",
    "super"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.SpatialInformationTheory": {
  "data": {
   "lineno": 3278,
   "symbols_in_volume": [
    "segregation.aspatial.multigroup_aspatial_indexes.MultiInformationTheory"
   ]
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.SpatialInformationTheory.__init__": {
  "data": {
   "lineno": 3313,
   "symbols_in_volume": [
    "segregation.network.calc_access",
    "segregation.spatial.spatial_indexes._build_local_environment",
    "super"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.SpatialMinMax": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "segregation.aspatial.aspatial_indexes.MinMax"
   ]
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.SpatialMinMax.__init__": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "libpysal.weights.Kernel",
    "segregation.network.calc_access",
    "segregation.spatial.spatial_indexes._build_local_environment",
    "super"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.SpatialProxProf": {
  "data": {
   "lineno": 280
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.SpatialProxProf.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._spatial_prox_profile",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.SpatialProxProf.plot": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.pyplot.scatter",
    "segregation.spatial.spatial_indexes.warnings"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.SpatialProximity": {
  "data": {
   "lineno": 1655
  },
  "type": "class"
 },
 "segregation.spatial.spatial_indexes.SpatialProximity.__init__": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "segregation.spatial.spatial_indexes._spatial_proximity",
    "segregation.util.util._nan_handle"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.Spatial_Dissim": {
  "data": {
   "lineno": 3489
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Spatial_Prox_Prof": {
  "data": {
   "lineno": 3486
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.Spatial_Proximity": {
  "data": {
   "lineno": 3507
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes._absolute_centralization": {
  "data": {
   "lineno": 2711,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.NaN",
    "numpy.arcsin",
    "numpy.array",
    "numpy.average",
    "numpy.cos",
    "numpy.cumsum",
    "numpy.isnan",
    "numpy.median",
    "numpy.nansum",
    "numpy.ndarray",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "scipy.ndimage.interpolation.shift",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._absolute_clustering": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "len",
    "numpy.array",
    "numpy.exp",
    "numpy.fill_diagonal",
    "pandas.DataFrame",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._absolute_concentration": {
  "data": {
   "lineno": 2362,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "len",
    "numpy.array",
    "numpy.cumsum",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._boundary_spatial_dissim": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "numpy.multiply",
    "numpy.where",
    "segregation.aspatial.aspatial_indexes._dissim",
    "segregation.spatial.spatial_indexes._return_length_weighted_w",
    "sklearn.metrics.pairwise.manhattan_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._build_local_environment": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dict",
    "libpysal.weights.lag_spatial",
    "libpysal.weights.util.fill_diagonal",
    "pandas.DataFrame",
    "zip"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._delta": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "any",
    "numpy.array",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._dep_message": {
  "data": {
   "shadows": "segregation.util.util._dep_message"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes._dissim": {
  "data": {
   "shadows": "segregation.aspatial.aspatial_indexes._dissim"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes._distance_decay_exposure": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.exp",
    "numpy.fill_diagonal",
    "numpy.multiply",
    "numpy.nansum",
    "numpy.sum",
    "pandas.DataFrame",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._distance_decay_isolation": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.exp",
    "numpy.fill_diagonal",
    "numpy.multiply",
    "numpy.nansum",
    "numpy.sum",
    "pandas.DataFrame",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._nan_handle": {
  "data": {
   "shadows": "segregation.util.util._nan_handle"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes._perimeter_area_ratio_spatial_dissim": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "len",
    "list",
    "max",
    "numpy.add",
    "numpy.array",
    "numpy.multiply",
    "numpy.where",
    "segregation.aspatial.aspatial_indexes._dissim",
    "segregation.spatial.spatial_indexes._return_length_weighted_w",
    "sklearn.metrics.pairwise.manhattan_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._relative_centralization": {
  "data": {
   "lineno": 2992,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.NaN",
    "numpy.arcsin",
    "numpy.array",
    "numpy.average",
    "numpy.cos",
    "numpy.cumsum",
    "numpy.isnan",
    "numpy.median",
    "numpy.nansum",
    "numpy.ndarray",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "scipy.ndimage.interpolation.shift",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._relative_clustering": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.exp",
    "numpy.fill_diagonal",
    "numpy.isnan",
    "pandas.DataFrame",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._relative_concentration": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "len",
    "numpy.array",
    "numpy.cumsum",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._return_length_weighted_w": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "geopandas.GeoSeries",
    "len",
    "libpysal.weights.util.attach_islands",
    "pandas.DataFrame.from_records",
    "pandas.concat",
    "segregation.spatial.spatial_indexes.libpysal",
    "segregation.spatial.spatial_indexes.warnings"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._spatial_dissim": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "TypeError",
    "abs",
    "bool",
    "issubclass",
    "libpysal.weights.Queen.from_dataframe",
    "numpy.array",
    "numpy.multiply",
    "numpy.newaxis",
    "numpy.where",
    "segregation.aspatial.aspatial_indexes._dissim",
    "segregation.spatial.spatial_indexes.libpysal",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._spatial_prox_profile": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "int",
    "libpysal.weights.Queen.from_dataframe",
    "list",
    "map",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.nan_to_num",
    "scipy.sparse.csgraph.floyd_warshall",
    "scipy.sparse.csr_matrix",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._spatial_prox_profile.calculate_etat": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes._spatial_proximity": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.array",
    "numpy.exp",
    "numpy.fill_diagonal",
    "pandas.DataFrame",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.haversine_distances",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.attach_islands": {
  "data": {
   "shadows": "libpysal.weights.util.attach_islands"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.calc_access": {
  "data": {
   "shadows": "segregation.network.calc_access"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.compute_segregation_profile": {
  "data": {
   "lineno": 3399,
   "symbols_in_volume": [
    "float",
    "libpysal.weights.Kernel.from_dataframe",
    "max",
    "numpy.float",
    "segregation.aspatial.multigroup_aspatial_indexes.MultiInformationTheory",
    "segregation.network.calc_access",
    "segregation.spatial.spatial_indexes.SpatialInformationTheory"
   ]
  },
  "type": "function"
 },
 "segregation.spatial.spatial_indexes.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.euclidean_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.euclidean_distances"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.fill_diagonal": {
  "data": {
   "shadows": "libpysal.weights.util.fill_diagonal"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.floyd_warshall": {
  "data": {
   "shadows": "scipy.sparse.csgraph.floyd_warshall"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.haversine_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.haversine_distances"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.lag_spatial": {
  "data": {
   "shadows": "libpysal.weights.lag_spatial"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.manhattan_distances": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.manhattan_distances"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.msg": {
  "data": {
   "lineno": 3525
  },
  "type": "constant"
 },
 "segregation.spatial.spatial_indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.shift": {
  "data": {
   "shadows": "scipy.ndimage.interpolation.shift"
  },
  "type": "import"
 },
 "segregation.spatial.spatial_indexes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "segregation.tests": {
  "data": {},
  "type": "module"
 },
 "segregation.tests.test_absolute_centralization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_absolute_centralization.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_absolute_centralization.AbsoluteCentralization": {
  "data": {
   "shadows": "segregation.spatial.AbsoluteCentralization"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_centralization.Absolute_Centralization_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_absolute_centralization.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_absolute_centralization.Absolute_Centralization_Tester.test_Absolute_Centralization": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.AbsoluteCentralization"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_absolute_centralization.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_centralization.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_centralization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_centralization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_clustering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_absolute_clustering.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_absolute_clustering.AbsoluteClustering": {
  "data": {
   "shadows": "segregation.spatial.AbsoluteClustering"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_clustering.Absolute_Clustering_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_absolute_clustering.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_absolute_clustering.Absolute_Clustering_Tester.test_Absolute_Clustering": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.AbsoluteClustering"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_absolute_clustering.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_clustering.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_clustering.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_concentration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_absolute_concentration.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_absolute_concentration.AbsoluteConcentration": {
  "data": {
   "shadows": "segregation.spatial.AbsoluteConcentration"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_concentration.Absolute_Concentration_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_absolute_concentration.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_absolute_concentration.Absolute_Concentration_Tester.test_Absolute_Concentration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.AbsoluteConcentration"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_absolute_concentration.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_concentration.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_concentration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_absolute_concentration.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_atkinson": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_atkinson.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_atkinson.Atkinson": {
  "data": {
   "shadows": "segregation.aspatial.Atkinson"
  },
  "type": "import"
 },
 "segregation.tests.test_atkinson.Atkinson_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_atkinson.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_atkinson.Atkinson_Tester.test_Atkinson": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Atkinson"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_atkinson.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_atkinson.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_atkinson.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_atkinson.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_bias_corrected_dissimilarity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_bias_corrected_dissimilarity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.BiasCorrectedDissim": {
  "data": {
   "shadows": "segregation.aspatial.BiasCorrectedDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.Bias_Corrected_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_bias_corrected_dissimilarity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.Bias_Corrected_Dissim_Tester.test_Bias_Corrected_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.BiasCorrectedDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_bias_corrected_dissimilarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_boundary_spatial_dissimilarity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.BoundarySpatialDissim": {
  "data": {
   "shadows": "segregation.spatial.BoundarySpatialDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.Boundary_Spatial_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_boundary_spatial_dissimilarity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.Boundary_Spatial_Dissim_Tester.test_Boundary_Spatial_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.BoundarySpatialDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_boundary_spatial_dissimilarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_compute_all.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_compute_all.ComputeAllAspatialSegregation": {
  "data": {
   "shadows": "segregation.compute_all.ComputeAllAspatialSegregation"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all.ComputeAllSegregation": {
  "data": {
   "shadows": "segregation.compute_all.ComputeAllSegregation"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all.ComputeAllSpatialSegregation": {
  "data": {
   "shadows": "segregation.compute_all.ComputeAllSpatialSegregation"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all.ComputeAll_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_compute_all.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_compute_all.ComputeAll_Tester.test_ComputeAll": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "segregation.compute_all.ComputeAllAspatialSegregation",
    "segregation.compute_all.ComputeAllSegregation",
    "segregation.compute_all.ComputeAllSpatialSegregation"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_compute_all.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_compute_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_conprof": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_conprof.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_conprof.ConProf": {
  "data": {
   "shadows": "segregation.aspatial.ConProf"
  },
  "type": "import"
 },
 "segregation.tests.test_conprof.Con_Prof_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_conprof.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_conprof.Con_Prof_Tester.test_Con_Prof": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.ConProf"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_conprof.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_conprof.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_conprof.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_conprof.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_correlationr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_correlationr.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_correlationr.CorrelationR": {
  "data": {
   "shadows": "segregation.aspatial.CorrelationR"
  },
  "type": "import"
 },
 "segregation.tests.test_correlationr.Correlation_R_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_correlationr.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_correlationr.Correlation_R_Tester.test_Correlation_R": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.CorrelationR"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_correlationr.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_correlationr.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_correlationr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_correlationr.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_decomposition": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_decomposition.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_decomposition.DecomposeSegregation": {
  "data": {
   "shadows": "segregation.decomposition.DecomposeSegregation"
  },
  "type": "import"
 },
 "segregation.tests.test_decomposition.Decomposition_Tester": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "segregation.tests.test_decomposition.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_decomposition.Decomposition_Tester.test_Decomposition": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Dissim",
    "segregation.decomposition.DecomposeSegregation"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_decomposition.Dissim": {
  "data": {
   "shadows": "segregation.aspatial.Dissim"
  },
  "type": "import"
 },
 "segregation.tests.test_decomposition.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_decomposition.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_decomposition.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_decomposition.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_delta": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_delta.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_delta.Delta": {
  "data": {
   "shadows": "segregation.spatial.Delta"
  },
  "type": "import"
 },
 "segregation.tests.test_delta.Delta_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_delta.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_delta.Delta_Tester.test_Delta": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.Delta"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_delta.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_delta.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_delta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_delta.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_density_corrected_dissimilarity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_density_corrected_dissimilarity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_density_corrected_dissimilarity.DensityCorrectedDissim": {
  "data": {
   "shadows": "segregation.aspatial.DensityCorrectedDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_density_corrected_dissimilarity.Density_Corrected_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_density_corrected_dissimilarity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_density_corrected_dissimilarity.Density_Corrected_Dissim_Tester.test_Density_Corrected_Dissim": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.DensityCorrectedDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_density_corrected_dissimilarity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_density_corrected_dissimilarity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_density_corrected_dissimilarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_density_corrected_dissimilarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_dissim": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_dissim.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_dissim.Dissim": {
  "data": {
   "shadows": "segregation.aspatial.Dissim"
  },
  "type": "import"
 },
 "segregation.tests.test_dissim.Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_dissim.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_dissim.Dissim_Tester.test_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Dissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_dissim.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_dissim.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_dissim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_dissim.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_exposure": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_distance_decay_exposure.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_distance_decay_exposure.DistanceDecayExposure": {
  "data": {
   "shadows": "segregation.spatial.DistanceDecayExposure"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_exposure.Distance_Decay_Exposure_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_distance_decay_exposure.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_distance_decay_exposure.Distance_Decay_Exposure_Tester.test_Distance_Decay_Exposure": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.DistanceDecayExposure"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_distance_decay_exposure.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_exposure.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_exposure.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_exposure.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_isolation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_distance_decay_isolation.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_distance_decay_isolation.DistanceDecayIsolation": {
  "data": {
   "shadows": "segregation.spatial.DistanceDecayIsolation"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_isolation.Distance_Decay_Isolation_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_distance_decay_isolation.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_distance_decay_isolation.Distance_Decay_Isolation_Tester.test_Distance_Decay_Isolation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.DistanceDecayIsolation"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_distance_decay_isolation.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_isolation.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_isolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_distance_decay_isolation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_entropy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_entropy.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_entropy.Entropy": {
  "data": {
   "shadows": "segregation.aspatial.Entropy"
  },
  "type": "import"
 },
 "segregation.tests.test_entropy.Entropy_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_entropy.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_entropy.Entropy_Tester.test_Entropy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Entropy"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_entropy.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_entropy.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_entropy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_entropy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_exposure": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_exposure.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_exposure.Exposure": {
  "data": {
   "shadows": "segregation.aspatial.Exposure"
  },
  "type": "import"
 },
 "segregation.tests.test_exposure.Exposure_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_exposure.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_exposure.Exposure_Tester.test_Exposure": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Exposure"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_exposure.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_exposure.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_exposure.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_exposure.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_gini_seg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_gini_seg.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_gini_seg.GiniSeg": {
  "data": {
   "shadows": "segregation.aspatial.GiniSeg"
  },
  "type": "import"
 },
 "segregation.tests.test_gini_seg.Gini_Seg_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_gini_seg.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_gini_seg.Gini_Seg_Tester.test_Gini_Seg": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.GiniSeg"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_gini_seg.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_gini_seg.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_gini_seg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_gini_seg.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_inference": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_inference.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_inference.Dissim": {
  "data": {
   "shadows": "segregation.aspatial.Dissim"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.Inference_Tester": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "segregation.tests.test_inference.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_inference.Inference_Tester.test_Inference": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Dissim",
    "segregation.aspatial.MultiDissim",
    "segregation.inference.SingleValueTest",
    "segregation.inference.TwoValueTest"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_inference.MultiDissim": {
  "data": {
   "shadows": "segregation.aspatial.MultiDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.SingleValueTest": {
  "data": {
   "shadows": "segregation.inference.SingleValueTest"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.TwoValueTest": {
  "data": {
   "shadows": "segregation.inference.TwoValueTest"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_inference.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_isolation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_isolation.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_isolation.Isolation": {
  "data": {
   "shadows": "segregation.aspatial.Isolation"
  },
  "type": "import"
 },
 "segregation.tests.test_isolation.Isolation_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_isolation.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_isolation.Isolation_Tester.test_Isolation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.Isolation"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_isolation.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_isolation.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_isolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_isolation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_diversity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_local_multi_local_diversity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_local_multi_local_diversity.MultiLocalDiversity": {
  "data": {
   "shadows": "segregation.local.MultiLocalDiversity"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_diversity.Multi_Local_Diversity_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_local_multi_local_diversity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_local_multi_local_diversity.Multi_Local_Diversity_Tester.test_Multi_Local_Diversity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "segregation.local.MultiLocalDiversity"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_local_multi_local_diversity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_diversity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_diversity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_diversity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_entropy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_local_multi_local_entropy.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_local_multi_local_entropy.MultiLocalEntropy": {
  "data": {
   "shadows": "segregation.local.MultiLocalEntropy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_entropy.Multi_Local_Entropy_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_local_multi_local_entropy.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_local_multi_local_entropy.Multi_Local_Entropy_Tester.test_Multi_Local_Entropy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "segregation.local.MultiLocalEntropy"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_local_multi_local_entropy.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_entropy.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_entropy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_entropy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_local_multi_local_simpson_concentration.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.MultiLocalSimpsonConcentration": {
  "data": {
   "shadows": "segregation.local.MultiLocalSimpsonConcentration"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.Multi_Local_Simpson_Concentration_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_local_multi_local_simpson_concentration.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.Multi_Local_Simpson_Concentration_Tester.test_Multi_Local_Simpson_Concentration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "segregation.local.MultiLocalSimpsonConcentration"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_concentration.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_local_multi_local_simpson_interaction.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.MultiLocalSimpsonInteraction": {
  "data": {
   "shadows": "segregation.local.MultiLocalSimpsonInteraction"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.Multi_Local_Simpson_Interaction_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_local_multi_local_simpson_interaction.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.Multi_Local_Simpson_Interaction_Tester.test_Multi_Local_Simpson_Interaction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "segregation.local.MultiLocalSimpsonInteraction"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_local_simpson_interaction.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_location_quotient": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_local_multi_location_quotient.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_local_multi_location_quotient.MultiLocationQuotient": {
  "data": {
   "shadows": "segregation.local.MultiLocationQuotient"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_location_quotient.Multi_Location_Quotient_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_local_multi_location_quotient.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_local_multi_location_quotient.Multi_Location_Quotient_Tester.test_Multi_Location_Quotient": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "segregation.local.MultiLocationQuotient"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_local_multi_location_quotient.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_location_quotient.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_location_quotient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_multi_location_quotient.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_local_relative_centralization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_local_relative_centralization.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_local_relative_centralization.LocalRelativeCentralization": {
  "data": {
   "shadows": "segregation.local.LocalRelativeCentralization"
  },
  "type": "import"
 },
 "segregation.tests.test_local_relative_centralization.Local_Relative_Centralization_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_local_relative_centralization.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_local_relative_centralization.Local_Relative_Centralization_Tester.test_Local_Relative_Centralization": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "segregation.local.LocalRelativeCentralization"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_local_relative_centralization.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_local_relative_centralization.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_local_relative_centralization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_local_relative_centralization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_min_max_s": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_min_max_s.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_min_max_s.SpatialMinMax": {
  "data": {
   "shadows": "segregation.spatial.SpatialMinMax"
  },
  "type": "import"
 },
 "segregation.tests.test_min_max_s.SpatialMinMax_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_min_max_s.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_min_max_s.SpatialMinMax_Tester.test_SpatialMinMax": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.SpatialMinMax"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_min_max_s.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_min_max_s.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_min_max_s.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_min_max_s.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_dissimilarity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_modified_dissimilarity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_modified_dissimilarity.ModifiedDissim": {
  "data": {
   "shadows": "segregation.aspatial.ModifiedDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_dissimilarity.Modified_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_modified_dissimilarity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_modified_dissimilarity.Modified_Dissim_Tester.test_Modified_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.ModifiedDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_modified_dissimilarity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_dissimilarity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_dissimilarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_dissimilarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_gini": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_modified_gini.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_modified_gini.ModifiedGiniSeg": {
  "data": {
   "shadows": "segregation.aspatial.ModifiedGiniSeg"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_gini.Modified_Gini_Seg_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_modified_gini.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_modified_gini.Modified_Gini_Seg_Tester.test_Modified_Gini_Seg": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.ModifiedGiniSeg"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_modified_gini.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_gini.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_gini.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_modified_gini.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_dissim": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_dissim.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_dissim.MultiDissim": {
  "data": {
   "shadows": "segregation.aspatial.MultiDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_dissim.Multi_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_dissim.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_dissim.Multi_Dissim_Tester.test_Multi_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_dissim.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_dissim.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_dissim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_dissim.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_divergence": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_divergence.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_divergence.MultiDivergence": {
  "data": {
   "shadows": "segregation.aspatial.MultiDivergence"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_divergence.Multi_Divergence_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_divergence.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_divergence.Multi_Divergence_Tester.test_Multi_Divergence": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiDivergence"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_divergence.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_divergence.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_divergence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_divergence.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_diversity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_diversity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_diversity.MultiDiversity": {
  "data": {
   "shadows": "segregation.aspatial.MultiDiversity"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_diversity.Multi_Diversity_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_diversity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_diversity.Multi_Diversity_Tester.test_Multi_Diversity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiDiversity"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_diversity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_diversity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_diversity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_diversity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_gini_seg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_gini_seg.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_gini_seg.MultiGiniSeg": {
  "data": {
   "shadows": "segregation.aspatial.MultiGiniSeg"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_gini_seg.Multi_Gini_Seg_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_gini_seg.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_gini_seg.Multi_Gini_Seg_Tester.test_Multi_Gini_Seg": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiGiniSeg"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_gini_seg.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_gini_seg.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_gini_seg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_gini_seg.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_information_theory": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_information_theory.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_information_theory.MultiInformationTheory": {
  "data": {
   "shadows": "segregation.aspatial.MultiInformationTheory"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_information_theory.Multi_Information_Theory_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_information_theory.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_information_theory.Multi_Information_Theory_Tester.test_Multi_Information_Theory": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiInformationTheory"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_information_theory.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_information_theory.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_information_theory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_information_theory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_normalized_exposure": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_normalized_exposure.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_normalized_exposure.MultiNormalizedExposure": {
  "data": {
   "shadows": "segregation.aspatial.MultiNormalizedExposure"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_normalized_exposure.Multi_Normalized_Exposure_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_normalized_exposure.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_normalized_exposure.Multi_Normalized_Exposure_Tester.test_Multi_Multi_Normalized_Exposure": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiNormalizedExposure"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_normalized_exposure.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_normalized_exposure.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_normalized_exposure.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_normalized_exposure.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_relative_diversity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_relative_diversity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_relative_diversity.MultiRelativeDiversity": {
  "data": {
   "shadows": "segregation.aspatial.MultiRelativeDiversity"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_relative_diversity.Multi_Relative_Diversity_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_relative_diversity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_relative_diversity.Multi_Relative_Diversity_Tester.test_Multi_Relative_Diversity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiRelativeDiversity"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_relative_diversity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_relative_diversity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_relative_diversity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_relative_diversity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_concentration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_simpsons_concentration.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_simpsons_concentration.SimpsonsConcentration": {
  "data": {
   "shadows": "segregation.aspatial.SimpsonsConcentration"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_concentration.Simpsons_Concentration_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_simpsons_concentration.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_simpsons_concentration.Simpsons_Concentration_Tester.test_Simpsons_Concentration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.SimpsonsConcentration"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_simpsons_concentration.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_concentration.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_concentration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_concentration.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_interaction": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_simpsons_interaction.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_simpsons_interaction.SimpsonsInteraction": {
  "data": {
   "shadows": "segregation.aspatial.SimpsonsInteraction"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_interaction.Simpsons_Interaction_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_simpsons_interaction.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_simpsons_interaction.Simpsons_Interaction_Tester.test_Simpsons_Interaction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.SimpsonsInteraction"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_simpsons_interaction.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_interaction.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_interaction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_simpsons_interaction.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_multi_squared_coefficient_of_variation.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.MultiSquaredCoefficientVariation": {
  "data": {
   "shadows": "segregation.aspatial.MultiSquaredCoefficientVariation"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.Multi_Squared_Coefficient_of_Variation_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_multi_squared_coefficient_of_variation.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.Multi_Squared_Coefficient_of_Variation_Tester.test_Multi_Squared_Coefficient_of_Variation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.aspatial.MultiSquaredCoefficientVariation"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_multi_squared_coefficient_of_variation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_network": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_network.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_network.Network_Tester": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "segregation.tests.test_network.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_network.Network_Tester.test_calc_access": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "float",
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "segregation.network.calc_access",
    "segregation.network.get_osm_network"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_network.calc_access": {
  "data": {
   "shadows": "segregation.network.calc_access"
  },
  "type": "import"
 },
 "segregation.tests.test_network.get_osm_network": {
  "data": {
   "shadows": "segregation.network.get_osm_network"
  },
  "type": "import"
 },
 "segregation.tests.test_network.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_network.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_network.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.PerimeterAreaRatioSpatialDissim": {
  "data": {
   "shadows": "segregation.spatial.PerimeterAreaRatioSpatialDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.Perimeter_Area_Ratio_Spatial_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.Perimeter_Area_Ratio_Spatial_Dissim_Tester.test_Perimeter_Area_Ratio_Spatial_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.PerimeterAreaRatioSpatialDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_perimeter_area_ratio_spatial_dissimilarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_centralization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_relative_centralization.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_relative_centralization.RelativeCentralization": {
  "data": {
   "shadows": "segregation.spatial.RelativeCentralization"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_centralization.Relative_Centralization_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_relative_centralization.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_relative_centralization.Relative_Centralization_Tester.test_Relative_Centralization": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.RelativeCentralization"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_relative_centralization.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_centralization.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_centralization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_centralization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_clustering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_relative_clustering.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_relative_clustering.RelativeClustering": {
  "data": {
   "shadows": "segregation.spatial.RelativeClustering"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_clustering.Relative_Clustering_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_relative_clustering.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_relative_clustering.Relative_Clustering_Tester.test_Relative_Clustering": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.RelativeClustering"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_relative_clustering.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_clustering.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_clustering.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_concentration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_relative_concentration.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_relative_concentration.RelativeConcentration": {
  "data": {
   "shadows": "segregation.spatial.RelativeConcentration"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_concentration.Relative_Concentration_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_relative_concentration.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_relative_concentration.Relative_Concentration_Tester.test_Relative_Concentration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.RelativeConcentration"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_relative_concentration.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_concentration.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_concentration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_relative_concentration.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_dissimilarity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_spatial_dissimilarity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_spatial_dissimilarity.SpatialDissim": {
  "data": {
   "shadows": "segregation.spatial.SpatialDissim"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_dissimilarity.Spatial_Dissim_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_spatial_dissimilarity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_spatial_dissimilarity.Spatial_Dissim_Tester.test_Spatial_Dissim": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.SpatialDissim"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_spatial_dissimilarity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_dissimilarity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_dissimilarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_dissimilarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_prox_profile": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_spatial_prox_profile.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_spatial_prox_profile.SpatialProxProf": {
  "data": {
   "shadows": "segregation.spatial.SpatialProxProf"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_prox_profile.Spatial_Prox_Prof_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_spatial_prox_profile.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_spatial_prox_profile.Spatial_Prox_Prof_Tester.test_Spatial_Prox_Prof": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.SpatialProxProf"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_spatial_prox_profile.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_prox_profile.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_prox_profile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_prox_profile.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_proximity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "segregation.tests.test_spatial_proximity.unittest"
   ]
  },
  "type": "module"
 },
 "segregation.tests.test_spatial_proximity.SpatialProximity": {
  "data": {
   "shadows": "segregation.spatial.SpatialProximity"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_proximity.Spatial_Proximity_Tester": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "segregation.tests.test_spatial_proximity.unittest"
   ]
  },
  "type": "class"
 },
 "segregation.tests.test_spatial_proximity.Spatial_Proximity_Tester.test_Spatial_Proximity": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "geopandas.read_file",
    "libpysal.examples.load_example",
    "numpy.testing.assert_almost_equal",
    "segregation.spatial.SpatialProximity"
   ]
  },
  "type": "function"
 },
 "segregation.tests.test_spatial_proximity.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_proximity.load_example": {
  "data": {
   "shadows": "libpysal.examples.load_example"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_proximity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.tests.test_spatial_proximity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "segregation.util": {
  "data": {},
  "type": "module"
 },
 "segregation.util.plot": {
  "data": {},
  "type": "module"
 },
 "segregation.util.plot.lorenz": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "segregation.util.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.util.plot.plot_cdf": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.step"
   ]
  },
  "type": "function"
 },
 "segregation.util.plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "segregation.util.util": {
  "data": {},
  "type": "module"
 },
 "segregation.util.util.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "segregation.util.util.DeprecationHelper": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "segregation.util.util.DeprecationHelper.__call__": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "segregation.util.util.DeprecationHelper.__getattr__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "segregation.util.util.DeprecationHelper.__init__": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "segregation.util.util.DeprecationHelper._warn": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "segregation.util.util.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "segregation.util.util._dep_message": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "segregation.util.util._generate_counterfactual": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "numpy.where",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.util.util._nan_handle": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "segregation.util.util.warnings",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "segregation.util.util.is_crs_utm": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pyproj.CRS.from_user_input"
   ]
  },
  "type": "function"
 },
 "segregation.util.util.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "segregation.util.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "segregation.util.util.project_gdf": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "int",
    "len",
    "segregation.util.util.is_crs_utm",
    "segregation.util.util.math"
   ]
  },
  "type": "function"
 },
 "segregation.util.util.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "segregation.util.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}