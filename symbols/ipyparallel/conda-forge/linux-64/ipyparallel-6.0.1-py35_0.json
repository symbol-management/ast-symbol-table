{
 "ipyparallel": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.IPEngineApp": {
  "data": {
   "shadows": "ipyparallel.apps.ipengineapp.IPEngineApp"
  },
  "type": "import"
 },
 "ipyparallel.IPKernelApp": {
  "data": {
   "shadows": "ipykernel.kernelapp.IPKernelApp"
  },
  "type": "import"
 },
 "ipyparallel.MultipleInstanceError": {
  "data": {
   "shadows": "traitlets.config.configurable.MultipleInstanceError"
  },
  "type": "import"
 },
 "ipyparallel._jupyter_nbextension_paths": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ipyparallel._jupyter_server_extension_paths": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ipyparallel._version": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel._version.version_info",
    "map",
    "str"
   ]
  },
  "type": "module"
 },
 "ipyparallel._version.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "ipyparallel._version.version_info": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "ipyparallel.apps": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.apps.baseapp": {
  "data": {
   "symbols_in_volume": [
    "IPython.core.application.base_aliases",
    "IPython.core.application.base_aliases.update",
    "IPython.core.application.base_flags",
    "IPython.core.application.base_flags.update"
   ]
  },
  "type": "module"
 },
 "ipyparallel.apps.baseapp.BaseIPythonApplication": {
  "data": {
   "shadows": "IPython.core.application.BaseIPythonApplication"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "IPython.core.application.BaseIPythonApplication",
    "IPython.core.application.base_aliases",
    "IPython.core.application.base_flags",
    "aliases",
    "ipyparallel.apps.baseapp.ParallelCrashHandler",
    "ipython_genutils.py3compat.getcwd",
    "traitlets.Bool",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication._cluster_id_changed": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication._config_files_default": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication._log_format_default": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication._log_level_default": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.logging"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication._loop_default": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "zmq.eventloop.ioloop.IOLoop.instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication._work_dir_changed": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "IPython.utils.path.expand_path",
    "ipython_genutils.py3compat.unicode_type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.check_pid": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Exception",
    "IPython.utils.process.check_pid"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.get_pid_from_file": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "int",
    "ipyparallel.apps.baseapp.PIDFileError",
    "ipyparallel.apps.baseapp.os",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.initialize": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.BaseParallelApplication",
    "super",
    "traitlets.config.application.catch_config_error"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.reinit_logging": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ipyparallel.apps.baseapp.logging",
    "ipyparallel.apps.baseapp.os",
    "ipyparallel.apps.baseapp.re",
    "open",
    "str",
    "traitlets.config.application.LevelFormatter"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.remove_pid_file": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.to_work_dir": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.os",
    "ipyparallel.apps.baseapp.sys",
    "ipython_genutils.py3compat.getcwd",
    "ipython_genutils.py3compat.unicode_type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.BaseParallelApplication.write_pid_file": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.PIDFileError",
    "ipyparallel.apps.baseapp.os",
    "open",
    "repr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.CrashHandler": {
  "data": {
   "shadows": "IPython.core.crashhandler.CrashHandler"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.IOLoop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop.IOLoop"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.LevelFormatter": {
  "data": {
   "shadows": "traitlets.config.application.LevelFormatter"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.PIDFileError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.baseapp.ParallelCrashHandler": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "IPython.core.crashhandler.CrashHandler"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.baseapp.ParallelCrashHandler.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "IPython.core.release.author_email",
    "IPython.core.release.authors",
    "ipyparallel.apps.baseapp.ParallelCrashHandler",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.baseapp.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.base_aliases": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ipyparallel.apps.baseapp.base_flags": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "ipyparallel.apps.baseapp.base_ip_aliases": {
  "data": {
   "shadows": "IPython.core.application.base_aliases"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.base_ip_flags": {
  "data": {
   "shadows": "IPython.core.application.base_flags"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.catch_config_error": {
  "data": {
   "shadows": "traitlets.config.application.catch_config_error"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.check_pid": {
  "data": {
   "shadows": "IPython.utils.process.check_pid"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.expand_path": {
  "data": {
   "shadows": "IPython.utils.path.expand_path"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.py3compat": {
  "data": {
   "shadows": "ipython_genutils.py3compat"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.release": {
  "data": {
   "shadows": "IPython.core.release"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.apps.baseapp.unicode_type": {
  "data": {
   "shadows": "ipython_genutils.py3compat.unicode_type"
  },
  "type": "import"
 },
 "ipyparallel.apps.daemonize": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.apps.daemonize.daemonize": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "OSError",
    "ipyparallel.apps.daemonize.errno",
    "ipyparallel.apps.daemonize.os",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.daemonize.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ipyparallel.apps.daemonize.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "ipyparallel.apps.ipclusterapp.IPClusterApp",
    "ipyparallel.apps.ipclusterapp.engine_aliases",
    "ipyparallel.apps.ipclusterapp.engine_flags",
    "ipyparallel.apps.ipclusterapp.launch_new_instance",
    "ipyparallel.apps.ipclusterapp.start_aliases",
    "ipyparallel.apps.ipclusterapp.stop_aliases"
   ]
  },
  "type": "module"
 },
 "ipyparallel.apps.ipclusterapp.ALREADY_STARTED": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.ALREADY_STOPPED": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.BaseIPythonApplication": {
  "data": {
   "shadows": "IPython.core.application.BaseIPythonApplication"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.CFloat": {
  "data": {
   "shadows": "traitlets.CFloat"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.CalledProcessError": {
  "data": {
   "shadows": "subprocess.CalledProcessError"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.DottedObjectName": {
  "data": {
   "shadows": "traitlets.DottedObjectName"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterApp": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "IPython.core.application.BaseIPythonApplication",
    "aliases",
    "ipyparallel.apps.ipclusterapp.IPClusterNBExtension",
    "ipyparallel.apps.ipclusterapp._description",
    "ipyparallel.apps.ipclusterapp._main_examples",
    "ipyparallel.apps.ipclusterapp.base",
    "ipyparallel.apps.ipclusterapp.engines_help",
    "ipyparallel.apps.ipclusterapp.start_help",
    "ipyparallel.apps.ipclusterapp.stop_help",
    "traitlets.Dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterApp.start": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "IPython.utils.sysinfo.num_cpus",
    "aliases",
    "ipyparallel.apps.ipclusterapp._engines_examples",
    "ipyparallel.apps.ipclusterapp.engine_aliases",
    "ipyparallel.apps.ipclusterapp.engine_flags",
    "ipyparallel.apps.ipclusterapp.engines_help",
    "ipyparallel.apps.ipclusterapp.logging",
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.Dict",
    "traitlets.DottedObjectName",
    "traitlets.Integer",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines._classes_default": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir",
    "ipyparallel.apps.launcher.all_launchers"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines._daemonize_changed": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines._engine_launcher_changed": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.string_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.build_launcher": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "ipyparallel.apps.ipclusterapp.find_launcher_class",
    "ipyparallel.apps.launcher",
    "klass"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.engines_started_ok": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.engines_stopped": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.engines_stopped_early": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.init_launchers": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.init_signal": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ipyparallel.apps.ipclusterapp.signal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.initialize": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ipyparallel.apps.ipclusterapp.IPClusterEngines",
    "super",
    "traitlets.config.application.catch_config_error"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.sigint_handler": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.start": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "daemonize",
    "ipyparallel.apps.ipclusterapp.errno",
    "ipyparallel.apps.ipclusterapp.os",
    "ipyparallel.apps.ipclusterapp.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.start_engines": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.start_logging": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ipyparallel.apps.ipclusterapp.os",
    "ipyparallel.apps.ipclusterapp.re"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.stop_engines": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterEngines.stop_launchers": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterNBExtension": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "IPython.core.application.BaseIPythonApplication",
    "traitlets.Bool",
    "traitlets.Dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterNBExtension.start": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "ipyparallel.nbextension.install.install_extensions",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "aliases",
    "ipyparallel.apps.ipclusterapp.IPClusterEngines",
    "ipyparallel.apps.ipclusterapp._start_examples",
    "ipyparallel.apps.ipclusterapp.logging",
    "ipyparallel.apps.ipclusterapp.start_aliases",
    "ipyparallel.apps.ipclusterapp.start_help",
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.CFloat",
    "traitlets.Dict",
    "traitlets.DottedObjectName",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart._classes_default": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir",
    "ipyparallel.apps.ipclusterapp.IPClusterEngines",
    "ipyparallel.apps.launcher.all_launchers"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart._controller_launcher_changed": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.string_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.engines_stopped": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.init_launchers": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.start": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "daemonize",
    "ipyparallel.apps.ipclusterapp.ALREADY_STARTED",
    "ipyparallel.apps.ipclusterapp.errno",
    "ipyparallel.apps.ipclusterapp.os",
    "ipyparallel.apps.ipclusterapp.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.start.start": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.start_controller": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.stop_controller": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStart.stop_launchers": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ipyparallel.apps.ipclusterapp.IPClusterStart",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStop": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "aliases",
    "ipyparallel.apps.ipclusterapp._stop_examples",
    "ipyparallel.apps.ipclusterapp.signal",
    "ipyparallel.apps.ipclusterapp.stop_aliases",
    "ipyparallel.apps.ipclusterapp.stop_help",
    "traitlets.Dict",
    "traitlets.Integer"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipclusterapp.IPClusterStop.start": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OSError",
    "ipyparallel.apps.ipclusterapp.ALREADY_STOPPED",
    "ipyparallel.apps.ipclusterapp.os",
    "str",
    "subprocess.CalledProcessError",
    "subprocess.PIPE",
    "subprocess.check_call"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.NO_CLUSTER": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.ProfileDir": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDir"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp._description": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp._engines_examples": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp._main_examples": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp._start_examples": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp._stop_examples": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.base": {
  "data": {
   "lineno": 612
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.catch_config_error": {
  "data": {
   "shadows": "traitlets.config.application.catch_config_error"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.check_call": {
  "data": {
   "shadows": "subprocess.check_call"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.engine_aliases": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.engine_flags": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.engines_help": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.find_launcher_class": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ipython_genutils.importstring.import_item"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipclusterapp.import_item": {
  "data": {
   "shadows": "ipython_genutils.importstring.import_item"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.install_extensions": {
  "data": {
   "shadows": "ipyparallel.nbextension.install.install_extensions"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.launch_new_instance": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.launcher": {
  "data": {
   "shadows": "ipyparallel.apps.launcher"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.num_cpus": {
  "data": {
   "shadows": "IPython.utils.sysinfo.num_cpus"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.start_aliases": {
  "data": {
   "lineno": 419
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.start_help": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.stop_aliases": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.stop_help": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipclusterapp.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipclusterapp.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dict",
    "ipyparallel.apps.baseapp.base_aliases",
    "ipyparallel.apps.baseapp.base_flags",
    "ipyparallel.apps.ipcontrollerapp.aliases",
    "ipyparallel.apps.ipcontrollerapp.flags",
    "ipyparallel.apps.ipcontrollerapp.launch_new_instance",
    "ipyparallel.apps.ipcontrollerapp.real_dbs",
    "ipyparallel.controller.mongodb.MongoDB",
    "ipyparallel.controller.sqlitedb.SQLiteDB",
    "jupyter_client.session.session_aliases",
    "jupyter_client.session.session_flags"
   ]
  },
  "type": "module"
 },
 "ipyparallel.apps.ipcontrollerapp.BaseParallelApplication": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.BaseParallelApplication"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.DictDB": {
  "data": {
   "shadows": "ipyparallel.controller.dictdb.DictDB"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.HeartMonitor": {
  "data": {
   "shadows": "ipyparallel.controller.heartmonitor.HeartMonitor"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.HubFactory": {
  "data": {
   "shadows": "ipyparallel.controller.hub.HubFactory"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir",
    "ipyparallel.apps.baseapp.BaseParallelApplication",
    "ipyparallel.apps.ipcontrollerapp._description",
    "ipyparallel.apps.ipcontrollerapp._examples",
    "ipyparallel.apps.ipcontrollerapp.aliases",
    "ipyparallel.apps.ipcontrollerapp.flags",
    "ipyparallel.apps.ipcontrollerapp.real_dbs",
    "ipyparallel.controller.dictdb.DictDB",
    "ipyparallel.controller.heartmonitor.HeartMonitor",
    "ipyparallel.controller.hub.HubFactory",
    "ipyparallel.controller.scheduler.TaskScheduler",
    "jupyter_client.session.Session",
    "traitlets.Bool",
    "traitlets.Dict",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp._cluster_id_changed": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ipyparallel.apps.ipcontrollerapp.IPControllerApp",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp._use_threads_changed": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.cleanup_connection_files": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "Exception",
    "ipyparallel.apps.ipcontrollerapp.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.do_import_statements": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "exec",
    "globals",
    "locals"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.forward_logging": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ipyparallel.apps.ipcontrollerapp.zmq",
    "zmq.log.handlers.PUBHandler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.handle_signal": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.init_hub": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "Exception",
    "ipyparallel.apps.ipcontrollerapp.os",
    "ipyparallel.controller.hub.HubFactory",
    "traitlets.TraitError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.init_schedulers": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "ipyparallel.apps.ipcontrollerapp.zmq",
    "ipyparallel.controller.scheduler.TaskScheduler.scheme_name.default_value",
    "ipyparallel.controller.scheduler.launch_scheduler",
    "ipyparallel.util.disambiguate_url",
    "ipython_genutils.importstring.import_item",
    "mq",
    "multiprocessing.Process",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.init_signal": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "signal.SIGABRT",
    "signal.SIGINT",
    "signal.SIGTERM",
    "signal.signal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.initialize": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.catch_config_error",
    "ipyparallel.apps.ipcontrollerapp.IPControllerApp",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.load_config_from_json": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ipyparallel.apps.ipcontrollerapp.json",
    "ipyparallel.apps.ipcontrollerapp.os",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.load_secondary_config": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "AssertionError",
    "IOError",
    "repr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.save_connection_dict": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ipyparallel.apps.ipcontrollerapp.json",
    "ipyparallel.apps.ipcontrollerapp.os",
    "ipyparallel.apps.ipcontrollerapp.stat",
    "jupyter_client.localinterfaces.localhost",
    "jupyter_client.localinterfaces.public_ips",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.start": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.IPControllerApp.terminate_children": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "OSError",
    "isinstance",
    "multiprocessing.Process",
    "zmq.devices.ProcessMonitoredQueue"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.MongoDB": {
  "data": {
   "shadows": "ipyparallel.controller.mongodb.MongoDB"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.PUBHandler": {
  "data": {
   "shadows": "zmq.log.handlers.PUBHandler"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.ProcessMonitoredQueue": {
  "data": {
   "shadows": "zmq.devices.ProcessMonitoredQueue"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.ProfileDir": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDir"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.SIGABRT": {
  "data": {
   "shadows": "signal.SIGABRT"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.SIGINT": {
  "data": {
   "shadows": "signal.SIGINT"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.SIGTERM": {
  "data": {
   "shadows": "signal.SIGTERM"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.SQLiteDB": {
  "data": {
   "shadows": "ipyparallel.controller.sqlitedb.SQLiteDB"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.Session": {
  "data": {
   "shadows": "jupyter_client.session.Session"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.TaskScheduler": {
  "data": {
   "shadows": "ipyparallel.controller.scheduler.TaskScheduler"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.TraitError": {
  "data": {
   "shadows": "traitlets.TraitError"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp._description": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipcontrollerapp._examples": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipcontrollerapp.aliases": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipcontrollerapp.base_aliases": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.base_aliases"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.base_flags": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.base_flags"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.catch_config_error": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.catch_config_error"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.disambiguate_url": {
  "data": {
   "shadows": "ipyparallel.util.disambiguate_url"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.flags": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipcontrollerapp.import_item": {
  "data": {
   "shadows": "ipython_genutils.importstring.import_item"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.launch_new_instance": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ipyparallel.apps.ipcontrollerapp.IPControllerApp",
    "ipyparallel.apps.ipcontrollerapp.multiprocessing",
    "ipyparallel.apps.ipcontrollerapp.sys"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipcontrollerapp.launch_scheduler": {
  "data": {
   "shadows": "ipyparallel.controller.scheduler.launch_scheduler"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.public_ips": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.public_ips"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.real_dbs": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipcontrollerapp.session_aliases": {
  "data": {
   "shadows": "jupyter_client.session.session_aliases"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.session_flags": {
  "data": {
   "shadows": "jupyter_client.session.session_flags"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.set_hwm": {
  "data": {
   "shadows": "ipyparallel.util.set_hwm"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.signal": {
  "data": {
   "shadows": "signal.signal"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.split_url": {
  "data": {
   "shadows": "ipyparallel.util.split_url"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipcontrollerapp.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "ipyparallel.apps.baseapp.base_aliases",
    "ipyparallel.apps.baseapp.base_flags",
    "ipyparallel.apps.ipengineapp.IPEngineApp",
    "ipyparallel.apps.ipengineapp.aliases",
    "ipyparallel.apps.ipengineapp.flags",
    "ipyparallel.apps.ipengineapp.launch_new_instance",
    "jupyter_client.session.session_aliases",
    "jupyter_client.session.session_flags"
   ]
  },
  "type": "module"
 },
 "ipyparallel.apps.ipengineapp.BaseParallelApplication": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.BaseParallelApplication"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Configurable": {
  "data": {
   "shadows": "traitlets.config.configurable.Configurable"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.EngineFactory": {
  "data": {
   "shadows": "ipyparallel.engine.engine.EngineFactory"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.EnginePUBHandler": {
  "data": {
   "shadows": "ipyparallel.engine.log.EnginePUBHandler"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Float": {
  "data": {
   "shadows": "traitlets.Float"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir",
    "ipykernel.ipkernel.IPythonKernel",
    "ipykernel.kernelapp.IPKernelApp",
    "ipykernel.zmqshell.ZMQInteractiveShell",
    "ipyparallel.apps.baseapp.BaseParallelApplication",
    "ipyparallel.apps.ipengineapp.MPI",
    "ipyparallel.apps.ipengineapp._description",
    "ipyparallel.apps.ipengineapp._examples",
    "ipyparallel.apps.ipengineapp.aliases",
    "ipyparallel.apps.ipengineapp.flags",
    "ipyparallel.engine.engine.EngineFactory",
    "jupyter_client.session.Session",
    "traitlets.Dict",
    "traitlets.Float",
    "traitlets.Instance",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp._cluster_id_changed": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.bind_kernel": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "hasattr",
    "ipykernel.kernelapp.IPKernelApp",
    "ipykernel.kernelapp.IPKernelApp._instance",
    "ipyparallel.apps.ipengineapp.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.find_url_file": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ipyparallel.apps.ipengineapp.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.forward_logging": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ipyparallel.apps.ipengineapp.zmq",
    "ipyparallel.engine.log.EnginePUBHandler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.init_engine": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ipyparallel.apps.ipengineapp.os",
    "ipyparallel.apps.ipengineapp.sys",
    "ipyparallel.apps.ipengineapp.time",
    "ipyparallel.engine.engine.EngineFactory",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.init_mpi": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "exec",
    "globals",
    "ipyparallel.apps.ipengineapp.MPI"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.initialize": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.catch_config_error",
    "ipyparallel.apps.ipengineapp.IPEngineApp",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.kernel": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.load_connector_file": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "ipyparallel.apps.ipengineapp.json",
    "ipyparallel.apps.ipengineapp.time",
    "ipyparallel.util.disambiguate_ip_address",
    "ipython_genutils.py3compat.cast_bytes",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPEngineApp.start": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.IPKernelApp": {
  "data": {
   "shadows": "ipykernel.kernelapp.IPKernelApp"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Kernel": {
  "data": {
   "shadows": "ipykernel.ipkernel.IPythonKernel"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.MPI": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ipyparallel.apps.ipengineapp.mpi4py_init",
    "ipyparallel.apps.ipengineapp.pytrilinos_init",
    "traitlets.Dict",
    "traitlets.Unicode",
    "traitlets.config.configurable.Configurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.ipengineapp.MPI._use_changed": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "ipyparallel.apps.ipengineapp.ProfileDir": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDir"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Session": {
  "data": {
   "shadows": "jupyter_client.session.Session"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.ZMQInteractiveShell": {
  "data": {
   "shadows": "ipykernel.zmqshell.ZMQInteractiveShell"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp._description": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp._examples": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp.aliases": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp.base_aliases": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.base_aliases"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.base_flags": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.base_flags"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.cast_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_bytes"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.catch_config_error": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.catch_config_error"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.disambiguate_ip_address": {
  "data": {
   "shadows": "ipyparallel.util.disambiguate_ip_address"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.flags": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp.iostream": {
  "data": {
   "shadows": "ipykernel.iostream"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.launch_new_instance": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp.mpi4py_init": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.pytrilinos_init": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "ipyparallel.apps.ipengineapp.session_aliases": {
  "data": {
   "shadows": "jupyter_client.session.session_aliases"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.session_flags": {
  "data": {
   "shadows": "jupyter_client.session.session_flags"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.apps.ipengineapp.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "ipyparallel.apps.baseapp.base_aliases",
    "ipyparallel.apps.iploggerapp.IPLoggerApp",
    "ipyparallel.apps.iploggerapp.aliases",
    "ipyparallel.apps.iploggerapp.launch_new_instance"
   ]
  },
  "type": "module"
 },
 "ipyparallel.apps.iploggerapp.BaseParallelApplication": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.BaseParallelApplication"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.IPLoggerApp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir",
    "ipyparallel.apps.baseapp.BaseParallelApplication",
    "ipyparallel.apps.iploggerapp._description",
    "ipyparallel.apps.iploggerapp.aliases",
    "ipyparallel.apps.logwatcher.LogWatcher",
    "traitlets.Dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.iploggerapp.IPLoggerApp.init_watcher": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ipyparallel.apps.logwatcher.LogWatcher"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.iploggerapp.IPLoggerApp.initialize": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ipyparallel.apps.baseapp.catch_config_error",
    "ipyparallel.apps.iploggerapp.IPLoggerApp",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.iploggerapp.IPLoggerApp.start": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.iploggerapp.LogWatcher": {
  "data": {
   "shadows": "ipyparallel.apps.logwatcher.LogWatcher"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.ProfileDir": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDir"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp._description": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ipyparallel.apps.iploggerapp.aliases": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "ipyparallel.apps.iploggerapp.base_aliases": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.base_aliases"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.catch_config_error": {
  "data": {
   "shadows": "ipyparallel.apps.baseapp.catch_config_error"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.launch_new_instance": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "ipyparallel.apps.iploggerapp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.apps.iploggerapp.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ipyparallel.apps.launcher.HTCondorControllerLauncher",
    "ipyparallel.apps.launcher.HTCondorEngineSetLauncher",
    "ipyparallel.apps.launcher.HTCondorLauncher",
    "ipyparallel.apps.launcher.LSFControllerLauncher",
    "ipyparallel.apps.launcher.LSFEngineSetLauncher",
    "ipyparallel.apps.launcher.LSFLauncher",
    "ipyparallel.apps.launcher.LocalControllerLauncher",
    "ipyparallel.apps.launcher.LocalEngineLauncher",
    "ipyparallel.apps.launcher.LocalEngineSetLauncher",
    "ipyparallel.apps.launcher.MPIControllerLauncher",
    "ipyparallel.apps.launcher.MPIEngineSetLauncher",
    "ipyparallel.apps.launcher.MPILauncher",
    "ipyparallel.apps.launcher.PBSControllerLauncher",
    "ipyparallel.apps.launcher.PBSEngineSetLauncher",
    "ipyparallel.apps.launcher.PBSLauncher",
    "ipyparallel.apps.launcher.SGEControllerLauncher",
    "ipyparallel.apps.launcher.SGEEngineSetLauncher",
    "ipyparallel.apps.launcher.SGELauncher",
    "ipyparallel.apps.launcher.SSHControllerLauncher",
    "ipyparallel.apps.launcher.SSHEngineLauncher",
    "ipyparallel.apps.launcher.SSHEngineSetLauncher",
    "ipyparallel.apps.launcher.SSHLauncher",
    "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher",
    "ipyparallel.apps.launcher.SlurmControllerLauncher",
    "ipyparallel.apps.launcher.SlurmEngineSetLauncher",
    "ipyparallel.apps.launcher.SlurmLauncher",
    "ipyparallel.apps.launcher.WINDOWS",
    "ipyparallel.apps.launcher.WindowsHPCControllerLauncher",
    "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher",
    "ipyparallel.apps.launcher.WindowsHPCLauncher",
    "ipyparallel.apps.launcher.htcondor_launchers",
    "ipyparallel.apps.launcher.local_launchers",
    "ipyparallel.apps.launcher.lsf_launchers",
    "ipyparallel.apps.launcher.mpi_launchers",
    "ipyparallel.apps.launcher.os",
    "ipyparallel.apps.launcher.pbs_launchers",
    "ipyparallel.apps.launcher.sge_launchers",
    "ipyparallel.apps.launcher.slurm_launchers",
    "ipyparallel.apps.launcher.ssh_launchers",
    "ipyparallel.apps.launcher.sys",
    "ipyparallel.apps.launcher.winhpc_launchers",
    "signal.SIGKILL",
    "signal.SIGTERM"
   ]
  },
  "type": "module"
 },
 "ipyparallel.apps.launcher.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.Application": {
  "data": {
   "shadows": "traitlets.config.application.Application"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.BaseLauncher": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "traitlets.Any",
    "traitlets.Instance",
    "traitlets.Unicode",
    "traitlets.config.configurable.LoggingConfigurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.BaseLauncher.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BaseLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher._loop_default": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "zmq.eventloop.ioloop.IOLoop.instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.arg_str": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.args": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.find_args": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.notify_start": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.notify_stop": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "d",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.on_stop": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.running": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.signal": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.start": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BaseLauncher.stop": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchClusterAppMixin": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ClusterAppMixin"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.BatchClusterAppMixin._cluster_id_default": {
  "data": {
   "lineno": 1019
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchClusterAppMixin._profile_dir_changed": {
  "data": {
   "lineno": 1012
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchClusterAppMixin._profile_dir_default": {
  "data": {
   "lineno": 1016
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "IPython.utils.text.EvalFormatter",
    "ipyparallel.apps.launcher.BaseLauncher",
    "traitlets.CRegExp",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher.__init__": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchSystemLauncher",
    "ipyparallel.apps.launcher.os",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher._context_default": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher._insert_job_array_in_script": {
  "data": {
   "lineno": 1137
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher._insert_options_in_script": {
  "data": {
   "lineno": 1129
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher._queue_changed": {
  "data": {
   "lineno": 1057
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher.find_args": {
  "data": {
   "lineno": 1088
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher.parse_job_id": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LauncherError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher.start": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "ipython_genutils.encoding.DEFAULT_ENCODING",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher.stop": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.apps.launcher.os",
    "ipython_genutils.encoding.DEFAULT_ENCODING",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.BatchSystemLauncher.write_batch_script": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "f",
    "f.read",
    "f.write",
    "ipyparallel.apps.launcher.os",
    "ipyparallel.apps.launcher.stat",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.CFloat": {
  "data": {
   "shadows": "traitlets.CFloat"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.CRegExp": {
  "data": {
   "shadows": "traitlets.CRegExp"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.ClusterAppMixin": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "traitlets.HasTraits",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.ClusterAppMixin.cluster_args": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.ControllerMixin": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ClusterAppMixin",
    "ipyparallel.apps.launcher.ipcontroller_cmd_argv",
    "ipyparallel.apps.launcher.logging",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.DEFAULT_ENCODING": {
  "data": {
   "shadows": "ipython_genutils.encoding.DEFAULT_ENCODING"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.DeprecatedMPILauncher": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.DeprecatedMPILauncher.warn": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.EngineMixin": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ClusterAppMixin",
    "ipyparallel.apps.launcher.ipengine_cmd_argv",
    "ipyparallel.apps.launcher.logging",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.EvalFormatter": {
  "data": {
   "shadows": "IPython.utils.text.EvalFormatter"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.FindCmdError": {
  "data": {
   "shadows": "IPython.utils.process.FindCmdError"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.HTCondorControllerLauncher": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.HTCondorLauncher",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.HTCondorControllerLauncher.start": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.HTCondorControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.HTCondorEngineSetLauncher": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.HTCondorLauncher",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.HTCondorLauncher": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchSystemLauncher",
    "traitlets.CRegExp",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.HTCondorLauncher._insert_job_array_in_script": {
  "data": {
   "lineno": 1458
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.HTCondorLauncher._insert_options_in_script": {
  "data": {
   "lineno": 1467
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.HasTraits": {
  "data": {
   "shadows": "traitlets.HasTraits"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.IPClusterLauncher": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalProcessLauncher",
    "ipyparallel.apps.launcher.ipcluster_cmd_argv",
    "ipyparallel.apps.launcher.logging",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.IPClusterLauncher.find_args": {
  "data": {
   "lineno": 1522
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.IPClusterLauncher.start": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.IPClusterLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.LSFControllerLauncher": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.LSFLauncher",
    "ipyparallel.apps.launcher.ipcontroller_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LSFControllerLauncher.start": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LSFControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LSFEngineSetLauncher": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.LSFLauncher",
    "ipyparallel.apps.launcher.ipengine_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LSFLauncher": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchSystemLauncher",
    "traitlets.CRegExp",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LSFLauncher.start": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "ipython_genutils.encoding.DEFAULT_ENCODING",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LauncherError": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.LocalControllerLauncher": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ControllerMixin",
    "ipyparallel.apps.launcher.LocalProcessLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LocalControllerLauncher.find_args": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalControllerLauncher.start": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineLauncher": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.EngineMixin",
    "ipyparallel.apps.launcher.LocalProcessLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LocalEngineLauncher.find_args": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalEngineLauncher",
    "traitlets.CFloat",
    "traitlets.Dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalEngineSetLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher._notice_engine_stopped": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher.find_args": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher.interrupt_then_kill": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "d",
    "ipython_genutils.py3compat.itervalues"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher.signal": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "d",
    "ipython_genutils.py3compat.itervalues"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher.start": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "d",
    "ipyparallel.apps.launcher.copy",
    "ipyparallel.apps.launcher.time",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalEngineSetLauncher.stop": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BaseLauncher",
    "traitlets.Integer",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalProcessLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.find_args": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.handle_stderr": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WINDOWS"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.handle_stdout": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WINDOWS"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.interrupt_then_kill": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "signal.CTRL_C_EVENT",
    "signal.SIGKILL"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.poll": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.signal": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WINDOWS",
    "signal.CTRL_C_EVENT",
    "str",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.start": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "forward_read_events",
    "ipyparallel.apps.launcher.ProcessStateError",
    "ipyparallel.apps.launcher.WINDOWS",
    "ipyparallel.apps.launcher.os",
    "subprocess.PIPE",
    "subprocess.Popen",
    "zmq.eventloop.ioloop.PeriodicCallback"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LocalProcessLauncher.stop": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.LoggingConfigurable": {
  "data": {
   "shadows": "traitlets.config.configurable.LoggingConfigurable"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.MPIControllerLauncher": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ControllerMixin",
    "ipyparallel.apps.launcher.MPILauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.MPIControllerLauncher.program": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIControllerLauncher.program_args": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIControllerLauncher.start": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIEngineSetLauncher": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.EngineMixin",
    "ipyparallel.apps.launcher.MPILauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.MPIEngineSetLauncher.program": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIEngineSetLauncher.program_args": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIEngineSetLauncher.start": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIEngineSetLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIExecControllerLauncher": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.DeprecatedMPILauncher",
    "ipyparallel.apps.launcher.MPIControllerLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.MPIExecControllerLauncher.__init__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIExecControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIExecEngineSetLauncher": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.DeprecatedMPILauncher",
    "ipyparallel.apps.launcher.MPIEngineSetLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.MPIExecEngineSetLauncher.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIExecEngineSetLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPIExecLauncher": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.DeprecatedMPILauncher",
    "ipyparallel.apps.launcher.MPILauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.MPIExecLauncher.__init__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIExecLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPILauncher": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalProcessLauncher",
    "traitlets.Integer",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.MPILauncher.__init__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPILauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPILauncher.find_args": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.MPILauncher.start": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPILauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.PBSControllerLauncher": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.PBSLauncher",
    "ipyparallel.apps.launcher.ipcontroller_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.PBSControllerLauncher.start": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.PBSControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.PBSEngineSetLauncher": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.PBSLauncher",
    "ipyparallel.apps.launcher.ipengine_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.PBSLauncher": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchSystemLauncher",
    "traitlets.CRegExp",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.ProcessStateError": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LauncherError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SGEControllerLauncher": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.SGELauncher",
    "ipyparallel.apps.launcher.ipcontroller_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SGEControllerLauncher.start": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SGEControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SGEEngineSetLauncher": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.SGELauncher",
    "ipyparallel.apps.launcher.ipengine_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SGELauncher": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.PBSLauncher",
    "traitlets.CRegExp",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SIGINT": {
  "data": {
   "shadows": "signal.CTRL_C_EVENT"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.SIGKILL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.SIGTERM": {
  "data": {
   "shadows": "signal.SIGTERM"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.SSHClusterLauncher": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ClusterAppMixin",
    "ipyparallel.apps.launcher.SSHLauncher",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SSHClusterLauncher._cluster_id_changed": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHClusterLauncher._profile_dir_changed": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHClusterLauncher._remote_profile_dir_default": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHClusterLauncher._strip_home": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "IPython.utils.path.get_home_dir",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHClusterLauncher.cluster_args": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHControllerLauncher": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ControllerMixin",
    "ipyparallel.apps.launcher.SSHClusterLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SSHControllerLauncher._controller_cmd_default": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHControllerLauncher._to_fetch_default": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHControllerLauncher.program": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHControllerLauncher.program_args": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineLauncher": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.EngineMixin",
    "ipyparallel.apps.launcher.SSHClusterLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SSHEngineLauncher._engine_cmd_default": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineLauncher._to_send_default": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineLauncher.program": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineLauncher.program_args": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineSetLauncher": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalEngineSetLauncher",
    "ipyparallel.apps.launcher.SSHEngineLauncher",
    "traitlets.Dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SSHEngineSetLauncher._engine_cmd_default": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineSetLauncher.engine_count": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "dict",
    "ipython_genutils.py3compat.itervalues",
    "isinstance",
    "list",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHEngineSetLauncher.start": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ValueError",
    "d",
    "dict",
    "ipyparallel.apps.launcher.copy",
    "ipyparallel.apps.launcher.time",
    "ipython_genutils.py3compat.iteritems",
    "isinstance",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalProcessLauncher",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SSHLauncher._fetch_file": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "IPython.utils.path.ensure_dir_exists",
    "ipyparallel.apps.launcher.os",
    "ipyparallel.apps.launcher.time",
    "ipython_genutils.encoding.DEFAULT_ENCODING",
    "range",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher._hostname_changed": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher._send_file": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "ipyparallel.apps.launcher.time",
    "range",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher._user_changed": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher.fetch_files": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher.find_args": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.pipes",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher.send_files": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher.signal": {
  "data": {
   "lineno": 643
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHLauncher.start": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHClusterLauncher",
    "traitlets.Integer",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher._to_send_default": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher.program": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher.program_args": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher.start": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.SlurmControllerLauncher": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.SlurmLauncher",
    "ipyparallel.apps.launcher.ipcontroller_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SlurmControllerLauncher.start": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SlurmControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SlurmEngineSetLauncher": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchClusterAppMixin",
    "ipyparallel.apps.launcher.SlurmLauncher",
    "ipyparallel.apps.launcher.ipengine_cmd_argv",
    "ipyparallel.apps.launcher.pipes",
    "map",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SlurmLauncher": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BatchSystemLauncher",
    "traitlets.Any",
    "traitlets.CRegExp",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.SlurmLauncher._account_changed": {
  "data": {
   "lineno": 1244
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SlurmLauncher._insert_options_in_script": {
  "data": {
   "lineno": 1273
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SlurmLauncher._options_changed": {
  "data": {
   "lineno": 1253
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SlurmLauncher._qos_changed": {
  "data": {
   "lineno": 1247
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.SlurmLauncher._timelimit_changed": {
  "data": {
   "lineno": 1250
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.UnknownStatus": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LauncherError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.WINDOWS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.WindowsHPCControllerLauncher": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ClusterAppMixin",
    "ipyparallel.apps.launcher.WindowsHPCLauncher",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.WindowsHPCControllerLauncher.job_file": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCControllerLauncher.start": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WindowsHPCControllerLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCControllerLauncher.write_job_file": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "IPControllerJob",
    "IPControllerTask"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ClusterAppMixin",
    "ipyparallel.apps.launcher.WindowsHPCLauncher",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher.job_file": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher.start": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher.write_job_file": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "IPEngineSetJob",
    "IPEngineTask",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.BaseLauncher",
    "ipyparallel.apps.launcher.find_job_cmd",
    "traitlets.CRegExp",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.__init__": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WindowsHPCLauncher",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.find_args": {
  "data": {
   "lineno": 887
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.job_file": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.parse_job_id": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LauncherError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.start": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.os",
    "ipython_genutils.encoding.DEFAULT_ENCODING",
    "subprocess.STDOUT",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.stop": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.apps.launcher.os",
    "ipython_genutils.encoding.DEFAULT_ENCODING",
    "subprocess.STDOUT",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.WindowsHPCLauncher.write_job_file": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.all_launchers": {
  "data": {
   "lineno": 1581
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.check_output": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.ensure_dir_exists": {
  "data": {
   "shadows": "IPython.utils.path.ensure_dir_exists"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.find_cmd": {
  "data": {
   "shadows": "IPython.utils.process.find_cmd"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.find_job_cmd": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "IPython.utils.process.FindCmdError",
    "IPython.utils.process.find_cmd",
    "ImportError",
    "ipyparallel.apps.launcher.WINDOWS"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.launcher.get_home_dir": {
  "data": {
   "shadows": "IPython.utils.path.get_home_dir"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.htcondor_launchers": {
  "data": {
   "lineno": 1576
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.ipcluster_cmd_argv": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.ipcontroller_cmd_argv": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.ipengine_cmd_argv": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.itervalues": {
  "data": {
   "shadows": "ipython_genutils.py3compat.itervalues"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.local_launchers": {
  "data": {
   "lineno": 1534
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.lsf_launchers": {
  "data": {
   "lineno": 1571
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.mpi_launchers": {
  "data": {
   "lineno": 1539
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.pbs_launchers": {
  "data": {
   "lineno": 1556
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.pipes": {
  "data": {
   "shadows": "pipes"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.sge_launchers": {
  "data": {
   "lineno": 1566
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.slurm_launchers": {
  "data": {
   "lineno": 1561
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.ssh_launchers": {
  "data": {
   "lineno": 1544
  },
  "type": "constant"
 },
 "ipyparallel.apps.launcher.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.apps.launcher.winhpc_launchers": {
  "data": {
   "lineno": 1551
  },
  "type": "constant"
 },
 "ipyparallel.apps.logwatcher": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.apps.logwatcher.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.Int": {
  "data": {
   "shadows": "traitlets.Int"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.LogWatcher": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ipyparallel.apps.logwatcher.zmq",
    "traitlets.Instance",
    "traitlets.List",
    "traitlets.Unicode",
    "traitlets.config.configurable.LoggingConfigurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.logwatcher.LogWatcher.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ipyparallel.apps.logwatcher.LogWatcher",
    "ipyparallel.apps.logwatcher.zmq",
    "super",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher._context_default": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ipyparallel.apps.logwatcher.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher._extract_level": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "ipyparallel.apps.logwatcher.logging"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher._loop_default": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "zmq.eventloop.ioloop.IOLoop.instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher._url_default": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "jupyter_client.localinterfaces.localhost"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher.log_message": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher.start": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher.stop": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LogWatcher.subscribe": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ipyparallel.apps.logwatcher.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.logwatcher.LoggingConfigurable": {
  "data": {
   "shadows": "traitlets.config.configurable.LoggingConfigurable"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.apps.logwatcher.zmqstream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream"
  },
  "type": "import"
 },
 "ipyparallel.apps.win32support": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.apps.win32support.ForwarderThread": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.win32support.ForwarderThread.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "threading.Thread.__init__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.win32support.ForwarderThread.run": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.unicode_type",
    "isinstance",
    "send"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.win32support.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "ipyparallel.apps.win32support.__all__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "ipyparallel.apps.win32support.forward_read_events": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ipyparallel.apps.win32support.ForwarderThread",
    "ipyparallel.apps.win32support.uuid",
    "ipyparallel.apps.win32support.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.win32support.unicode_type": {
  "data": {
   "shadows": "ipython_genutils.py3compat.unicode_type"
  },
  "type": "import"
 },
 "ipyparallel.apps.win32support.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ipyparallel.apps.win32support.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.apps.winhpcjob.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.Configurable": {
  "data": {
   "shadows": "traitlets.config.configurable.Configurable"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.Enum": {
  "data": {
   "shadows": "traitlets.Enum"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.IPControllerJob": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.WinHPCJob",
    "ipyparallel.apps.winhpcjob.find_username",
    "traitlets.Bool",
    "traitlets.Enum",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.winhpcjob.IPControllerTask": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.WinHPCTask",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.winhpcjob.IPControllerTask.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.IPControllerTask",
    "ipyparallel.apps.winhpcjob.os",
    "ipyparallel.apps.winhpcjob.uuid",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.IPControllerTask.command_line": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.IPEngineSetJob": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.WinHPCJob",
    "ipyparallel.apps.winhpcjob.find_username",
    "traitlets.Bool",
    "traitlets.Enum",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.winhpcjob.IPEngineTask": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.WinHPCTask",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.winhpcjob.IPEngineTask.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.IPEngineTask",
    "ipyparallel.apps.winhpcjob.os",
    "ipyparallel.apps.winhpcjob.uuid",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.IPEngineTask.command_line": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.find_username",
    "traitlets.Bool",
    "traitlets.Enum",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Unicode",
    "traitlets.config.configurable.Configurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob._write_attr": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.apps.winhpcjob.as_str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob.add_task": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob.as_element": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob.owner": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob.tostring": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.indent",
    "ipyparallel.apps.winhpcjob.re",
    "xml.etree.ElementTree.tostring"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCJob.write": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCTask": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dict",
    "traitlets.Bool",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.Unicode",
    "traitlets.config.configurable.Configurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.apps.winhpcjob.WinHPCTask._write_attr": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.apps.winhpcjob.as_str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCTask.as_element": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "xml.etree.ElementTree.Element"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.WinHPCTask.get_env_vars": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.iteritems",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.as_str": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.find_username": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ipyparallel.apps.winhpcjob.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.indent": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.apps.winhpcjob.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.apps.winhpcjob.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ipyparallel.bind_kernel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "ipykernel.kernelapp.IPKernelApp",
    "ipykernel.kernelapp.IPKernelApp._instance",
    "ipykernel.kernelapp.IPKernelApp.initialized",
    "ipyparallel.apps.ipengineapp.IPEngineApp.initialized",
    "ipyparallel.apps.ipengineapp.IPEngineApp.instance",
    "isinstance",
    "traitlets.config.configurable.MultipleInstanceError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.client._joblib": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.client._joblib.AutoBatchingMixin": {
  "data": {
   "shadows": "joblib.parallel.AutoBatchingMixin"
  },
  "type": "import"
 },
 "ipyparallel.client._joblib.IPythonParallelBackend": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "joblib.parallel.AutoBatchingMixin",
    "joblib.parallel.ParallelBackendBase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client._joblib.IPythonParallelBackend.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ImportError",
    "ipyparallel.Client"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client._joblib.IPythonParallelBackend.apply_async": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client._joblib.IPythonParallelBackend.effective_n_jobs": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client._joblib.IPythonParallelBackend.terminate": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ipyparallel.client._joblib.ParallelBackendBase": {
  "data": {
   "shadows": "joblib.parallel.ParallelBackendBase"
  },
  "type": "import"
 },
 "ipyparallel.client._joblib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "ipyparallel.client._joblib.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "ipyparallel.client._joblib.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "ipyparallel.client._joblib.ipp": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "int",
    "object",
    "zmq.MessageTracker"
   ]
  },
  "type": "module"
 },
 "ipyparallel.client.asyncresult.AsyncHubResult": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult.AsyncResult"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.asyncresult.AsyncHubResult._init_futures": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncHubResult.wait": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "Exception",
    "ipyparallel.client.asyncresult.time",
    "ipyparallel.error.collect_exceptions",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult.AsyncResult"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult.__init__": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult.AsyncResult"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult.__iter__": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "it"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult._ordered_iter": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "ipyparallel.error.TimeoutError",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult._reconstruct_result": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult._unordered_iter": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "Queue.Queue",
    "ipyparallel.client.asyncresult._FOREVER",
    "ipyparallel.error.TimeoutError",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncMapResult._yield_child_results": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ipyparallel.error.collect_exceptions",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "concurrent.futures.Future"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__dict__": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__dir__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Metadata",
    "dir",
    "ipyparallel.client.asyncresult._metadata_keys"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__getattr__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ipyparallel.error.TimeoutError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__getitem__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "ipyparallel.error.collect_exceptions",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "f",
    "f.msg_id",
    "f.output.metadata",
    "id",
    "ipyparallel.client.asyncresult.AsyncResult",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "super",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__iter__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "TypeError",
    "ipyparallel.error.TimeoutError",
    "ipyparallel.error.collect_exceptions",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__len__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.__repr__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._check_ready": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ipyparallel.error.TimeoutError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._display_single_result": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "IPython.core.display.display",
    "NameError",
    "get_ipython",
    "ipyparallel.client.asyncresult.sys"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._display_stream": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "int",
    "ipyparallel.client.asyncresult.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._finalize_result": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._handle_sent": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "f.result",
    "zmq.MessageTracker"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._init_futures": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "KeyError",
    "MessageFuture",
    "concurrent.futures.Future",
    "f",
    "f.output",
    "f.tracker",
    "ipyparallel.client.asyncresult._default",
    "tornado.gen.multi_future"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._reconstruct_result": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._republish_displaypub": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "NameError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._resolve_output": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._resolve_result": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "Exception",
    "f",
    "f.result",
    "ipyparallel.error.collect_exceptions",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult._wait_for_child": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult._FOREVER",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.abort": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.display_outputs": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "IPython.core.display.display",
    "NameError",
    "ValueError",
    "dict",
    "get_ipython",
    "ipyparallel.client.asyncresult._raw_text",
    "ipyparallel.client.asyncresult.check_ready",
    "ipyparallel.client.asyncresult.sys",
    "len",
    "max",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.elapsed": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ipyparallel.util.compare_datetimes",
    "ipyparallel.util.utcnow",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.get": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ipyparallel.error.TimeoutError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.get_dict": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.metadata": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.progress": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "len",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.r": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.ready": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.result_dict": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.sent": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.serial_time": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult.check_ready",
    "ipyparallel.util.compare_datetimes",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.successful": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.timedelta": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "datetime.datetime",
    "end_key",
    "ipyparallel.util.compare_datetimes",
    "isinstance",
    "max",
    "min",
    "start_key"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.wait": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.wait_for_output": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.wait_for_send": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult.time",
    "ipyparallel.client.asyncresult.zmq",
    "ipyparallel.error.TimeoutError",
    "max"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.wait_interactive": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "IPython.core.display.clear_output",
    "ipyparallel.client.asyncresult.sys",
    "ipyparallel.client.asyncresult.time",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.AsyncResult.wall_time": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ipyparallel.client.asyncresult.check_ready",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.Future": {
  "data": {
   "shadows": "concurrent.futures.Future"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.MessageTracker": {
  "data": {
   "shadows": "zmq.MessageTracker"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.Queue": {
  "data": {
   "shadows": "Queue.Queue"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult._FOREVER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ipyparallel.client.asyncresult.__all__": {
  "data": {
   "lineno": 779
  },
  "type": "constant"
 },
 "ipyparallel.client.asyncresult._default": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ipyparallel.client.asyncresult._metadata_keys": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "ipyparallel.client.asyncresult._raw_text": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "IPython.core.display.display_pretty"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.check_ready": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "decorator.decorator",
    "f",
    "ipyparallel.error.TimeoutError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.asyncresult.clear_output": {
  "data": {
   "shadows": "IPython.core.display.clear_output"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.compare_datetimes": {
  "data": {
   "shadows": "ipyparallel.util.compare_datetimes"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.display": {
  "data": {
   "shadows": "IPython.core.display.display"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.display_pretty": {
  "data": {
   "shadows": "IPython.core.display.display_pretty"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.finished_tracker": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "ipyparallel.client.asyncresult.multi_future": {
  "data": {
   "shadows": "tornado.gen.multi_future"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.utcnow": {
  "data": {
   "shadows": "ipyparallel.util.utcnow"
  },
  "type": "import"
 },
 "ipyparallel.client.asyncresult.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.client.client": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.client.client.os"
   ]
  },
  "type": "module"
 },
 "ipyparallel.client.client.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "ipyparallel.client.client.BaseIPythonApplication": {
  "data": {
   "shadows": "IPython.core.application.BaseIPythonApplication"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Client": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.client.client.Metadata",
    "ipyparallel.util.ReverseDict",
    "set",
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.Dict",
    "traitlets.HasTraits",
    "traitlets.Instance",
    "traitlets.List",
    "traitlets.Set",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.client.Client.__del__": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.__getitem__": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "ipython_genutils.py3compat.xrange",
    "isinstance",
    "list",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "DeprecationWarning",
    "IOError",
    "IPython.utils.path.compress_user",
    "KeyError",
    "NameError",
    "RuntimeWarning",
    "ValueError",
    "bool",
    "dict",
    "f",
    "get_ipython",
    "getpass.getpass",
    "ipyparallel.client.client.Client",
    "ipyparallel.client.client.json",
    "ipyparallel.client.client.os",
    "ipyparallel.client.client.pjoin",
    "ipyparallel.client.client.time",
    "ipyparallel.client.client.warnings",
    "ipyparallel.client.client.zmq",
    "ipyparallel.util.disambiguate_ip_address",
    "ipyparallel.util.is_url",
    "ipython_genutils.py3compat.cast_bytes",
    "jupyter_client.localinterfaces.is_local_ip",
    "jupyter_client.localinterfaces.localhost",
    "jupyter_client.session.Session",
    "min",
    "open",
    "print",
    "super",
    "zmq.ssh.tunnel.try_passwordless_ssh",
    "zmq.ssh.tunnel.tunnel_connection"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.__iter__": {
  "data": {
   "lineno": 1003
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.__len__": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.__new__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "traitlets.HasTraits.__new__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._asyncresult_from_jobs": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "AsyncHubResult",
    "AsyncResult",
    "MessageFuture",
    "TypeError",
    "concurrent.futures.Future",
    "f",
    "f.output",
    "f.output.metadata",
    "f.output.set_result",
    "f.set_result",
    "int",
    "ipyparallel.client.client.types",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._await_futures": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "f",
    "f.add_done_callback",
    "threading.Event",
    "tornado.gen.multi_future"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._build_targets": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "int",
    "ipyparallel.error.NoEnginesRegistered",
    "ipython_genutils.py3compat.cast_bytes",
    "ipython_genutils.py3compat.string_types",
    "ipython_genutils.py3compat.xrange",
    "isinstance",
    "len",
    "list",
    "range",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._connect": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "Exception",
    "connect_socket",
    "dict",
    "ipyparallel.client.client.zmq",
    "ipyparallel.error.TimeoutError",
    "pprint.pprint"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._connect.connect_socket": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "zmq.ssh.tunnel.tunnel_connection"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._dispatch_iopub": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "ipyparallel.client.client.unpack_message",
    "ipyparallel.serialize.deserialize_object"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._dispatch_notification": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "KeyError",
    "handler",
    "ipyparallel.client.client.unpack_message"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._dispatch_reply": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "KeyError",
    "handler",
    "ipyparallel.client.client.unpack_message"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._dispatch_single_reply": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "ipyparallel.client.client.unpack_message"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._extract_metadata": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ipyparallel.util._parse_date",
    "ipyparallel.util.utcnow"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._futures_for_msgs": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._handle_apply_reply": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "ipyparallel.error.TaskAborted",
    "ipyparallel.serialize.deserialize_object",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._handle_execute_reply": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ipyparallel.client.client.ExecuteReply",
    "ipyparallel.error.TaskAborted",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._handle_stranded_msgs": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ipyparallel.error.EngineError",
    "ipyparallel.error.wrap_exception",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._io_main": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._make_io_loop": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "zmq.eventloop.ioloop.IOLoop"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._maybe_raise": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "ipyparallel.error.RemoteError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._msg_ids_from_jobs": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "AsyncResult",
    "TypeError",
    "int",
    "ipyparallel.client.client.types",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._msg_ids_from_target": {
  "data": {
   "lineno": 1747
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._profile_default": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "AttributeError",
    "IPython.core.application.BaseIPythonApplication.initialized",
    "IPython.core.application.BaseIPythonApplication.instance",
    "traitlets.config.configurable.MultipleInstanceError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._register_engine": {
  "data": {
   "lineno": 686
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._send": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "IOError",
    "MessageFuture",
    "ipyparallel.util.utcnow",
    "tornado.gen.multi_future"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._send._really_send": {
  "data": {
   "lineno": 971
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._send.cleanup": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._send_recv": {
  "data": {
   "lineno": 980
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._setup_profile_dir": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir.find_profile_dir",
    "IPython.core.profiledir.ProfileDir.find_profile_dir_by_name",
    "IPython.core.profiledir.ProfileDirError",
    "IPython.paths.get_ipython_dir"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._start_io_thread": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "threading.Thread",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._stop_io_thread": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "threading.current_thread"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._stop_scheduling_tasks": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ipyparallel.client.client.warnings"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._unregister_engine": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._unwrap_exception": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ipyparallel.error.unwrap_exception"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client._update_engines": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "int",
    "ipython_genutils.py3compat.iteritems",
    "len",
    "list",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.abort": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "AsyncResult",
    "TypeError",
    "dict",
    "f",
    "f.result",
    "f.wait",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "tornado.gen.multi_future"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.activate": {
  "data": {
   "lineno": 1022
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.become_dask": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.client.client.distributed",
    "ipyparallel.util.become_dask_worker"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.clear": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "tornado.gen.multi_future"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.close": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.db_query": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "ipyparallel.util._parse_date",
    "ipyparallel.util.extract_dates",
    "ipython_genutils.py3compat.string_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.direct_view": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "DirectView",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.executor": {
  "data": {
   "lineno": 1475
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.get_result": {
  "data": {
   "lineno": 1524
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.hub_history": {
  "data": {
   "lineno": 1941
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.ids": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.load_balanced_view": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "LoadBalancedView"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.purge_everything": {
  "data": {
   "lineno": 1931
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.purge_hub_results": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.purge_local_results": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.purge_results": {
  "data": {
   "lineno": 1906
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.queue_status": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "dict",
    "int",
    "ipyparallel.util.int_keys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.resubmit": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "AsyncHubResult",
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.result_status": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "ipyparallel.client.client.ExecuteReply",
    "ipyparallel.error.collect_exceptions",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.util._parse_date",
    "ipyparallel.util.extract_dates",
    "isinstance",
    "len",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.send_apply_request": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "callable",
    "dict",
    "f",
    "ipyparallel.Reference",
    "ipyparallel.serialize.pack_apply_message",
    "isinstance",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.send_execute_request": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "bool",
    "dict",
    "ipyparallel.util.utcnow",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.shutdown": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "f.result",
    "f.wait",
    "ipyparallel.error",
    "ipyparallel.error.NoEnginesRegistered"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.spin": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ipyparallel.client.client.warnings"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.spin_thread": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ipyparallel.client.client.warnings"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.stop_dask": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "ipyparallel.util.stop_distributed_worker"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.stop_spin_thread": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ipyparallel.client.client.warnings"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.wait": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "int",
    "ipyparallel.client.client._is_future",
    "ipyparallel.client.client.collections",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Client.wait_interactive": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "AsyncResult",
    "f",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "ipyparallel.client.client.ExecuteReply": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "IPython.utils.capture.RichOutput"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.client.ExecuteReply.__getattr__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply.__getitem__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply.__repr__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply._metadata": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply._repr_mime_": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply._repr_pretty_": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "IPython.utils.coloransi.TermColors.Normal",
    "IPython.utils.coloransi.TermColors.Red",
    "NameError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply.data": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply.display": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "IPython.display.publish_display_data"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.ExecuteReply.source": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Future": {
  "data": {
   "shadows": "concurrent.futures.Future"
  },
  "type": "import"
 },
 "ipyparallel.client.client.HasTraits": {
  "data": {
   "shadows": "traitlets.HasTraits"
  },
  "type": "import"
 },
 "ipyparallel.client.client.IOLoop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop.IOLoop"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.client.client.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Metadata": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.client.Metadata.__getattr__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Metadata.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "dict",
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Metadata.__setattr__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.Metadata.__setitem__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "KeyError",
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.MultipleInstanceError": {
  "data": {
   "shadows": "traitlets.config.configurable.MultipleInstanceError"
  },
  "type": "import"
 },
 "ipyparallel.client.client.NoEnginesRegistered": {
  "data": {
   "shadows": "ipyparallel.error.NoEnginesRegistered"
  },
  "type": "import"
 },
 "ipyparallel.client.client.ProfileDir": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDir"
  },
  "type": "import"
 },
 "ipyparallel.client.client.ProfileDirError": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDirError"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Reference": {
  "data": {
   "shadows": "ipyparallel.Reference"
  },
  "type": "import"
 },
 "ipyparallel.client.client.RichOutput": {
  "data": {
   "shadows": "IPython.utils.capture.RichOutput"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Session": {
  "data": {
   "shadows": "jupyter_client.session.Session"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Set": {
  "data": {
   "shadows": "traitlets.Set"
  },
  "type": "import"
 },
 "ipyparallel.client.client.TermColors": {
  "data": {
   "shadows": "IPython.utils.coloransi.TermColors"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "ipyparallel.client.client.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.client.client.ZMQStream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream.ZMQStream"
  },
  "type": "import"
 },
 "ipyparallel.client.client.__all__": {
  "data": {
   "lineno": 2011
  },
  "type": "constant"
 },
 "ipyparallel.client.client._is_future": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "f",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client._no_connection_file_msg": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "ipyparallel.client.client.cast_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_bytes"
  },
  "type": "import"
 },
 "ipyparallel.client.client.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ipyparallel.client.client.compress_user": {
  "data": {
   "shadows": "IPython.utils.path.compress_user"
  },
  "type": "import"
 },
 "ipyparallel.client.client.current_thread": {
  "data": {
   "shadows": "threading.current_thread"
  },
  "type": "import"
 },
 "ipyparallel.client.client.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.client.client.distributed": {
  "data": {
   "shadows": "distributed"
  },
  "type": "import"
 },
 "ipyparallel.client.client.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.client.client.get_ipython_dir": {
  "data": {
   "shadows": "IPython.paths.get_ipython_dir"
  },
  "type": "import"
 },
 "ipyparallel.client.client.getpass": {
  "data": {
   "shadows": "getpass.getpass"
  },
  "type": "import"
 },
 "ipyparallel.client.client.is_local_ip": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.is_local_ip"
  },
  "type": "import"
 },
 "ipyparallel.client.client.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.client.client.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ipyparallel.client.client.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.client.client.multi_future": {
  "data": {
   "shadows": "tornado.gen.multi_future"
  },
  "type": "import"
 },
 "ipyparallel.client.client.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.client.client.pjoin": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ipyparallel.client.client.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "ipyparallel.client.client.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.client.client.publish_display_data": {
  "data": {
   "shadows": "IPython.display.publish_display_data"
  },
  "type": "import"
 },
 "ipyparallel.client.client.serialize": {
  "data": {
   "shadows": "ipyparallel.serialize"
  },
  "type": "import"
 },
 "ipyparallel.client.client.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.client.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.client.client.tunnel": {
  "data": {
   "shadows": "zmq.ssh.tunnel"
  },
  "type": "import"
 },
 "ipyparallel.client.client.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ipyparallel.client.client.unpack_message": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "decorator.decorator",
    "f",
    "pprint.pprint"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.client.util": {
  "data": {
   "shadows": "ipyparallel.util"
  },
  "type": "import"
 },
 "ipyparallel.client.client.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ipyparallel.client.client.xrange": {
  "data": {
   "shadows": "ipython_genutils.py3compat.xrange"
  },
  "type": "import"
 },
 "ipyparallel.client.client.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.client.futures": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.client.futures.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "ipyparallel.client.futures.Future": {
  "data": {
   "shadows": "concurrent.futures.Future"
  },
  "type": "import"
 },
 "ipyparallel.client.futures.MessageFuture": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "concurrent.futures.Future"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.futures.MessageFuture.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "concurrent.futures.Future",
    "ipyparallel.client.futures.MessageFuture",
    "super",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.futures.MessageFuture.wait": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "ipyparallel.client.magics": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.client.magics.ParallelMagics",
    "ipython_genutils.text.dedent"
   ]
  },
  "type": "module"
 },
 "ipyparallel.client.magics.Magics": {
  "data": {
   "shadows": "IPython.core.magic.Magics"
  },
  "type": "import"
 },
 "ipyparallel.client.magics.NO_LAST_RESULT": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ipyparallel.client.magics.ParallelMagics": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "IPython.core.magic.Magics"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.magics.ParallelMagics.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.client.magics.ParallelMagics",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics._disable_autopx": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics._enable_autopx": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics._eval_target_str": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "eval"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.autopx": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.cell_px": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "IPython.core.magic_arguments.magic_arguments",
    "IPython.core.magic_arguments.parse_argstring",
    "ipyparallel.client.magics.exec_args",
    "ipyparallel.client.magics.output_args"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.parallel_execute": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.px": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.pxconfig": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "IPython.core.magic_arguments.magic_arguments",
    "IPython.core.magic_arguments.parse_argstring",
    "ipyparallel.client.magics.exec_args"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.pxrun_cell": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "MemoryError",
    "NameError",
    "OverflowError",
    "SyntaxError",
    "TypeError",
    "ValueError",
    "ipyparallel.client.magics.ast",
    "ipyparallel.client.magics.re"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.ParallelMagics.result": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "IPython.core.error.UsageError",
    "IPython.core.magic_arguments.magic_arguments",
    "IPython.core.magic_arguments.parse_argstring",
    "ipyparallel.client.magics.NO_LAST_RESULT",
    "ipyparallel.client.magics.output_args"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.UsageError": {
  "data": {
   "shadows": "IPython.core.error.UsageError"
  },
  "type": "import"
 },
 "ipyparallel.client.magics.__doc__": {
  "data": {
   "lineno": 431
  },
  "type": "constant"
 },
 "ipyparallel.client.magics.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "ipyparallel.client.magics.dedent": {
  "data": {
   "shadows": "ipython_genutils.text.dedent"
  },
  "type": "import"
 },
 "ipyparallel.client.magics.exec_args": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "IPython.core.magic_arguments.argument",
    "a",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.magic_arguments": {
  "data": {
   "shadows": "IPython.core.magic_arguments"
  },
  "type": "import"
 },
 "ipyparallel.client.magics.output_args": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IPython.core.magic_arguments.argument",
    "a",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.magics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.client.magics.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.client.map": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.client.map.Map",
    "ipyparallel.client.map.RoundRobinMap"
   ]
  },
  "type": "module"
 },
 "ipyparallel.client.map.Map": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.map.Map.concatenate": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ipyparallel.client.map.is_array",
    "ipyparallel.client.map.numpy",
    "isinstance",
    "itertools.chain.from_iterable",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.Map.getPartition": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "itertools.islice",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.Map.joinPartitions": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ipyparallel.client.map.RoundRobinMap": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ipyparallel.client.map.Map"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.map.RoundRobinMap.flatten_array": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "enumerate",
    "ipyparallel.client.map.numpy",
    "len",
    "list",
    "sum"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.RoundRobinMap.flatten_list": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.RoundRobinMap.getPartition": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.RoundRobinMap.joinPartitions": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ipyparallel.client.map.is_array",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "ipyparallel.client.map.dists": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "ipyparallel.client.map.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ipyparallel.client.map.is_array": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ipyparallel.client.map.numpy",
    "ipyparallel.client.map.sys",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "ipyparallel.client.map.mappable": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ipyparallel.client.map.is_array",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.map.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ipyparallel.client.map.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.client.remotefunction": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.client.remotefunction.Map": {
  "data": {
   "shadows": "map"
  },
  "type": "import"
 },
 "ipyparallel.client.remotefunction.ParallelFunction": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ipyparallel.client.remotefunction.RemoteFunction"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.remotefunction.ParallelFunction.__call__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "AsyncMapResult",
    "Exception",
    "KeyboardInterrupt",
    "TypeError",
    "UserWarning",
    "ValueError",
    "enumerate",
    "f",
    "int",
    "ipyparallel.client.remotefunction.getname",
    "ipyparallel.client.remotefunction.sync_view_results",
    "ipyparallel.client.remotefunction.sys",
    "ipyparallel.client.remotefunction.warnings",
    "isinstance",
    "len",
    "list",
    "map",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.ParallelFunction.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "f",
    "ipyparallel.client.remotefunction.ParallelFunction",
    "map.dists",
    "mapClass",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.ParallelFunction.map": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.RemoteFunction": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.remotefunction.RemoteFunction.__call__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.RemoteFunction.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception",
    "IPython.utils.signatures.signature",
    "f",
    "f.__doc__",
    "f.__signature__",
    "getattr",
    "ipyparallel.client.remotefunction.getname"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.__all__": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "ipyparallel.client.remotefunction.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.client.remotefunction.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ipyparallel.client.remotefunction.getname": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.parallel": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.parallel.parallel_function": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ipyparallel.client.remotefunction.ParallelFunction"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.remote": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.remote.remote_function": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ipyparallel.client.remotefunction.RemoteFunction"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.signature": {
  "data": {
   "shadows": "IPython.utils.signatures.signature"
  },
  "type": "import"
 },
 "ipyparallel.client.remotefunction.sync_view_results": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "decorator.decorator",
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.remotefunction.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.client.remotefunction.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ipyparallel.client.view": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.client.view.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "ipyparallel.client.view.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.client.view.CFloat": {
  "data": {
   "shadows": "traitlets.CFloat"
  },
  "type": "import"
 },
 "ipyparallel.client.view.Dependency": {
  "data": {
   "shadows": "ipyparallel.controller.dependency.Dependency"
  },
  "type": "import"
 },
 "ipyparallel.client.view.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.client.view.DirectView": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ipyparallel.client.view.View"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.view.DirectView.__getitem__": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.__init__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ipyparallel.client.view.DirectView",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.__setitem__": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView._really_apply": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "AsyncResult",
    "KeyboardInterrupt",
    "f",
    "getname",
    "int",
    "ipyparallel.client.view.save_ids",
    "ipyparallel.client.view.sync_results",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.activate": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "NameError",
    "get_ipython",
    "ipyparallel.client.magics.ParallelMagics",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.clear": {
  "data": {
   "lineno": 796
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.execute": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "AsyncResult",
    "KeyboardInterrupt",
    "int",
    "ipyparallel.client.view.save_ids",
    "ipyparallel.client.view.sync_results",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.gather": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "AsyncMapResult",
    "KeyboardInterrupt",
    "enumerate",
    "ipyparallel.client.view.save_ids",
    "ipyparallel.client.view.sync_results",
    "map.dists"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.get": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.importer": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.map": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ParallelFunction",
    "TypeError",
    "f",
    "ipyparallel.client.view.sync_results",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.pull": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "TypeError",
    "ipyparallel.util._pull",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.push": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "ipyparallel.util._push",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.run": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "f",
    "f.read",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.scatter": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "AsyncResult",
    "enumerate",
    "len",
    "map.dists"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.sync_imports": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ImportError",
    "contextlib.contextmanager",
    "ipython_genutils.py3compat.builtin_mod.__import__",
    "local_import",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.sync_imports.remote_import": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "__import__",
    "getattr",
    "globals",
    "ipyparallel.client.view.sys",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.sync_imports.view_import": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "NotImplementedError",
    "globals",
    "ipyparallel.client.view.imp",
    "ipython_genutils.py3compat.builtin_mod.__import__",
    "local_import",
    "locals",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.update": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.use_cloudpickle": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.use_dill": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "ipyparallel.client.view.DirectView.use_pickle": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "ipyparallel.client.view.Executor": {
  "data": {
   "shadows": "concurrent.futures.Executor"
  },
  "type": "import"
 },
 "ipyparallel.client.view.HasTraits": {
  "data": {
   "shadows": "traitlets.HasTraits"
  },
  "type": "import"
 },
 "ipyparallel.client.view.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.client.view.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.client.view.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.client.view.LoadBalancedView": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "ipyparallel.client.view.View",
    "traitlets.Any",
    "traitlets.CFloat",
    "traitlets.Integer",
    "traitlets.List"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.view.LoadBalancedView.__init__": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "ipyparallel.client.view.LoadBalancedView",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.LoadBalancedView._really_apply": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "AsyncResult",
    "KeyboardInterrupt",
    "RuntimeError",
    "RuntimeWarning",
    "TypeError",
    "dict",
    "f",
    "getname",
    "int",
    "ipyparallel.client.view.save_ids",
    "ipyparallel.client.view.sync_results",
    "ipyparallel.client.view.warnings",
    "ipyparallel.controller.dependency.dependent",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.LoadBalancedView._render_dependency": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "AsyncResult",
    "ipyparallel.controller.dependency.Dependency",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.LoadBalancedView._validate_dependency": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "AsyncResult",
    "dict",
    "ipyparallel.controller.dependency.Dependency",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.LoadBalancedView.map": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "ParallelFunction",
    "TypeError",
    "f",
    "ipyparallel.client.view.save_ids",
    "ipyparallel.client.view.sync_results",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.LoadBalancedView.register_joblib_backend": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "IPythonParallelBackend",
    "joblib.parallel.register_parallel_backend"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.LoadBalancedView.set_flags": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "ipyparallel.client.view.LoadBalancedView",
    "ipython_genutils.py3compat.PY3",
    "isinstance",
    "setattr",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.Map": {
  "data": {
   "shadows": "map"
  },
  "type": "import"
 },
 "ipyparallel.client.view.PY3": {
  "data": {
   "shadows": "ipython_genutils.py3compat.PY3"
  },
  "type": "import"
 },
 "ipyparallel.client.view.ParallelMagics": {
  "data": {
   "shadows": "ipyparallel.client.magics.ParallelMagics"
  },
  "type": "import"
 },
 "ipyparallel.client.view.Set": {
  "data": {
   "shadows": "traitlets.Set"
  },
  "type": "import"
 },
 "ipyparallel.client.view.View": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.Dict",
    "traitlets.HasTraits",
    "traitlets.Instance",
    "traitlets.List",
    "traitlets.Set"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.view.View.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ipyparallel.client.view.View",
    "ipyparallel.client.view.ViewExecutor",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.__len__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.__repr__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View._really_apply": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "NotImplementedError",
    "ipyparallel.client.view.save_ids",
    "ipyparallel.client.view.sync_results"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View._sync_results": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.abort": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.apply": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.apply_async": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.apply_sync": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.get_result": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.imap": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "f",
    "iter"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.map": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "NotImplementedError",
    "ipyparallel.client.view.sync_results"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.map_async": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.map_sync": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "TypeError",
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.parallel": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "parallel"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.purge_results": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.queue_status": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.remote": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "remote"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.set_flags": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "KeyError",
    "ipython_genutils.py3compat.iteritems",
    "setattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.shutdown": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.spin": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ipyparallel.client.view.sync_results"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.temp_flags": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.View.wait": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ipyparallel.client.view.sync_results"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.ViewExecutor": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "concurrent.futures.Executor"
   ]
  },
  "type": "class"
 },
 "ipyparallel.client.view.ViewExecutor.__init__": {
  "data": {
   "lineno": 1140
  },
  "type": "function"
 },
 "ipyparallel.client.view.ViewExecutor.map": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "ipyparallel.client.view.warnings"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.ViewExecutor.shutdown": {
  "data": {
   "lineno": 1155
  },
  "type": "function"
 },
 "ipyparallel.client.view.ViewExecutor.submit": {
  "data": {
   "lineno": 1143
  },
  "type": "function"
 },
 "ipyparallel.client.view.__all__": {
  "data": {
   "lineno": 1163
  },
  "type": "constant"
 },
 "ipyparallel.client.view.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "ipyparallel.client.view.builtin_mod": {
  "data": {
   "shadows": "ipython_genutils.py3compat.builtin_mod"
  },
  "type": "import"
 },
 "ipyparallel.client.view.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "ipyparallel.client.view.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.client.view.dependent": {
  "data": {
   "shadows": "ipyparallel.controller.dependency.dependent"
  },
  "type": "import"
 },
 "ipyparallel.client.view.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "ipyparallel.client.view.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.client.view.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.client.view.register_parallel_backend": {
  "data": {
   "shadows": "joblib.parallel.register_parallel_backend"
  },
  "type": "import"
 },
 "ipyparallel.client.view.save_ids": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "decorator.decorator",
    "f",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.client.view.sync_results": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "decorator.decorator",
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.client.view.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.client.view.util": {
  "data": {
   "shadows": "ipyparallel.util"
  },
  "type": "import"
 },
 "ipyparallel.client.view.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ipyparallel.cluster": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ipyparallel.apps.ipclusterapp.launch_new_instance"
   ]
  },
  "type": "module"
 },
 "ipyparallel.cluster.app": {
  "data": {
   "shadows": "ipyparallel.apps.ipclusterapp"
  },
  "type": "import"
 },
 "ipyparallel.controller": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.controller.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ipyparallel.controller.__main__.main"
   ]
  },
  "type": "module"
 },
 "ipyparallel.controller.__main__.app": {
  "data": {
   "shadows": "ipyparallel.apps.ipcontrollerapp"
  },
  "type": "import"
 },
 "ipyparallel.controller.__main__.main": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "ipyparallel.apps.ipcontrollerapp.launch_new_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.controller.dependency.AsyncResult": {
  "data": {
   "shadows": "ipyparallel.client.asyncresult.AsyncResult"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.Dependency": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "all",
    "set"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dependency.Dependency.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "ipyparallel.client.asyncresult.AsyncResult",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "set.__init__",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.Dependency.as_dict": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.Dependency.check": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.Dependency.unreachable": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.ModuleType": {
  "data": {
   "shadows": "types.ModuleType"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.UnmetDependency": {
  "data": {
   "shadows": "ipyparallel.error.UnmetDependency"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.__all__": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "ipyparallel.controller.dependency._require": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ImportError",
    "exec",
    "globals",
    "ipyparallel.error.UnmetDependency",
    "ipyparallel.serialize.uncan",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.can": {
  "data": {
   "shadows": "ipyparallel.serialize.can"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.depend": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dependency.depend.__call__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ipyparallel.controller.dependency.dependent"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.depend.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.dependent": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.PY3",
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dependency.dependent.__call__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.dependent.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "getattr",
    "ipython_genutils.py3compat.PY3"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.dependent.__name__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.dependent.check_dependency": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ipyparallel.error.UnmetDependency"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.interactive": {
  "data": {
   "shadows": "ipyparallel.util.interactive"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.py3compat": {
  "data": {
   "shadows": "ipython_genutils.py3compat"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.require": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "ipyparallel.controller.dependency._require",
    "ipyparallel.controller.dependency.depend",
    "ipyparallel.serialize.can",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "type",
    "types.ModuleType"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dependency.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.controller.dependency.uncan": {
  "data": {
   "shadows": "ipyparallel.serialize.uncan"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb": {
  "data": {
   "symbols_in_volume": [
    "all",
    "ipyparallel.controller.dictdb.copy",
    "memoryview"
   ]
  },
  "type": "module"
 },
 "ipyparallel.controller.dictdb.BaseDB": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "traitlets.Unicode",
    "traitlets.config.configurable.LoggingConfigurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dictdb.CompositeFilter": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dictdb.CompositeFilter.__call__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "test",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.CompositeFilter.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb._add_tz",
    "ipyparallel.controller.dictdb.filters",
    "ipython_genutils.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.DictDB": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb.BaseDB",
    "set",
    "traitlets.Dict",
    "traitlets.Float",
    "traitlets.Integer"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dictdb.DictDB._add_bytes": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._check_dates": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "ensure_timezone",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._cull_oldest": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._drop_bytes": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._extract_subdict": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._match": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "ipyparallel.controller.dictdb.CompositeFilter",
    "ipyparallel.controller.dictdb._add_tz",
    "ipython_genutils.py3compat.iteritems",
    "ipython_genutils.py3compat.itervalues",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._match_one": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.iteritems",
    "test"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB._maybe_cull": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.add_record": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.drop_matching_records": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.drop_record": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.find_records": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.get_history": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.get_record": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "KeyError",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.DictDB.update_record": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.Float": {
  "data": {
   "shadows": "traitlets.Float"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.LoggingConfigurable": {
  "data": {
   "shadows": "traitlets.config.configurable.LoggingConfigurable"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.NoDB": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb.BaseDB"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dictdb.NoDB.add_record": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoDB.drop_matching_records": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoDB.drop_record": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoDB.find_records": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb.NoData"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoDB.get_history": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb.NoData"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoDB.get_record": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb.NoData"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoDB.update_record": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.NoData": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.dictdb.NoData.__str__": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb._add_tz": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datetime.datetime",
    "ensure_timezone",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.dictdb.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.filters": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "ipyparallel.controller.dictdb.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.controller.dictdb.itervalues": {
  "data": {
   "shadows": "ipython_genutils.py3compat.itervalues"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.controller.heartmonitor.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.CFloat": {
  "data": {
   "shadows": "traitlets.CFloat"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.Heart": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "id",
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.heartmonitor.Heart.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ipyparallel.controller.heartmonitor.uuid",
    "ipyparallel.controller.heartmonitor.zmq",
    "zmq.devices.ThreadDevice",
    "zmq.devices.ThreadMonitoredQueue"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.Heart.start": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "traitlets.Bool",
    "traitlets.CFloat",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.Set",
    "traitlets.config.configurable.LoggingConfigurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ipyparallel.controller.heartmonitor.HeartMonitor",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor._check_missed": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor._loop_default": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "zmq.eventloop.ioloop.IOLoop.instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.add_heart_failure_handler": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.add_new_heart_handler": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.beat": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ipyparallel.controller.heartmonitor.time",
    "ipython_genutils.py3compat.str_to_bytes",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.handle_heart_failure": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Exception",
    "handler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.handle_new_heart": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "handler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.handle_pong": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ipyparallel.controller.heartmonitor.time",
    "ipyparallel.util.log_errors",
    "ipython_genutils.py3compat.str_to_bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.HeartMonitor.start": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ipyparallel.controller.heartmonitor.time",
    "zmq.eventloop.ioloop.PeriodicCallback"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.heartmonitor.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.LoggingConfigurable": {
  "data": {
   "shadows": "traitlets.config.configurable.LoggingConfigurable"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.Set": {
  "data": {
   "shadows": "traitlets.Set"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.ThreadDevice": {
  "data": {
   "shadows": "zmq.devices.ThreadDevice"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.ThreadMonitoredQueue": {
  "data": {
   "shadows": "zmq.devices.ThreadMonitoredQueue"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.log_errors": {
  "data": {
   "shadows": "ipyparallel.util.log_errors"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.str_to_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.str_to_bytes"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.controller.heartmonitor.zmqstream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.controller.hub.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.DottedObjectName": {
  "data": {
   "shadows": "traitlets.DottedObjectName"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.EngineConnector": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "id",
    "traitlets.Any",
    "traitlets.HasTraits",
    "traitlets.Integer",
    "traitlets.Set",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.hub.HasTraits": {
  "data": {
   "shadows": "traitlets.HasTraits"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Hub": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "HeartMonitor",
    "jupyter_client.session.SessionFactory",
    "object",
    "traitlets.Any",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.Set",
    "traitlets.Unicode",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.hub.Hub.__init__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ipyparallel.controller.hub.Hub",
    "ipyparallel.controller.hub._passer",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._cleanup_engine_state_file": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "IOError",
    "ipyparallel.controller.hub.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._extract_record": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.buffer_to_bytes_py2",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._handle_stranded_msgs": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "ipyparallel.error.EngineError",
    "ipyparallel.error.wrap_exception",
    "ipyparallel.util.ensure_timezone",
    "ipyparallel.util.utcnow"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._load_engine_state": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "int",
    "ipyparallel.controller.hub.EngineConnector",
    "ipyparallel.controller.hub.json",
    "ipyparallel.controller.hub.os",
    "ipython_genutils.py3compat.iteritems",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._next_id": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._purge_stalled_registration": {
  "data": {
   "lineno": 1061
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._save_engine_state": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "ipyparallel.controller.hub.json",
    "ipython_genutils.py3compat.iteritems",
    "open"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._shutdown": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "ipyparallel.controller.hub.sys",
    "ipyparallel.controller.hub.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub._validate_targets": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "ipython_genutils.py3compat.cast_bytes",
    "ipython_genutils.py3compat.unicode_type",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.become_dask": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "distributed.Scheduler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.check_load": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "bytes",
    "dict",
    "ipyparallel.error.wrap_exception",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.connection_request": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "dict",
    "ipython_genutils.py3compat.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.db_query": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "extract_dates",
    "ipyparallel.error.wrap_exception",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.dispatch_monitor_traffic": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "ValueError",
    "handler",
    "ipyparallel.util.log_errors"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.dispatch_query": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ValueError",
    "handler",
    "ipyparallel.error.wrap_exception",
    "ipyparallel.util.log_errors"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.finish_registration": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "ipython_genutils.py3compat.cast_bytes",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.get_history": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "ipyparallel.error.wrap_exception"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.get_results": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "dict",
    "ipyparallel.error.wrap_exception",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.handle_heart_failure": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.handle_new_heart": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.monitor_iopub_message": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "Exception",
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.purge_results": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "dict",
    "ipyparallel.error.wrap_exception"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.queue_status": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.error.wrap_exception",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.register_engine": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "ipyparallel.controller.hub.EngineConnector",
    "ipyparallel.error.wrap_exception",
    "ipython_genutils.py3compat.cast_bytes",
    "ipython_genutils.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.resubmit_task": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "RuntimeError",
    "dict",
    "finish",
    "ipyparallel.controller.hub.init_record",
    "ipyparallel.error.wrap_exception",
    "ipython_genutils.py3compat.iteritems",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.resubmit_task.finish": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.save_iopub_message": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ipyparallel.controller.hub.empty_record",
    "update_record"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.save_queue_request": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ipyparallel.controller.hub.init_record",
    "ipython_genutils.py3compat.iteritems",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.save_queue_result": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "Exception",
    "extract_dates",
    "ipyparallel.util.ensure_timezone",
    "ipyparallel.util.utcnow",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.save_task_destination": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "ipython_genutils.py3compat.cast_bytes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.save_task_request": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ipyparallel.controller.hub.init_record",
    "ipython_genutils.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.save_task_result": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "Exception",
    "extract_dates",
    "ipyparallel.util.ensure_timezone",
    "ipyparallel.util.utcnow",
    "ipython_genutils.py3compat.cast_bytes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.shutdown_request": {
  "data": {
   "lineno": 1132
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.stop_distributed": {
  "data": {
   "lineno": 1473
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Hub.unregister_engine": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ipyparallel.factory.RegistrationFactory",
    "traitlets.DottedObjectName",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.Tuple",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.hub.HubFactory.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ipyparallel.controller.hub.HubFactory",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._control_default": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._engine_ip_default": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "jupyter_client.localinterfaces.localhost"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._hb_default": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._iopub_default": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._ip_changed": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._mon_port_default": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._mux_default": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._notifier_port_default": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._registration_timeout_default": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._task_default": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._transport_changed": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory._update_monitor_url": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory.client_url": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory.construct": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory.engine_url": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory.init_hub": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "HeartMonitor",
    "ipyparallel.controller.hub.Hub",
    "ipyparallel.controller.hub._db_shortcuts",
    "ipyparallel.controller.hub.time",
    "ipyparallel.controller.hub.zmq",
    "ipyparallel.util.disambiguate_url",
    "ipyparallel.util.set_hwm",
    "ipython_genutils.importstring.import_item",
    "str",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.HubFactory.start": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.RegistrationFactory": {
  "data": {
   "shadows": "ipyparallel.factory.RegistrationFactory"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Scheduler": {
  "data": {
   "shadows": "distributed.Scheduler"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.SessionFactory": {
  "data": {
   "shadows": "jupyter_client.session.SessionFactory"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Set": {
  "data": {
   "shadows": "traitlets.Set"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Tuple": {
  "data": {
   "shadows": "traitlets.Tuple"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.ZMQStream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream.ZMQStream"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub._db_shortcuts": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "ipyparallel.controller.hub._passer": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ipyparallel.controller.hub._printer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.buffer_to_bytes_py2": {
  "data": {
   "shadows": "ipython_genutils.py3compat.buffer_to_bytes_py2"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.cast_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_bytes"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.empty_record": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.import_item": {
  "data": {
   "shadows": "ipython_genutils.importstring.import_item"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.init_record": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ipyparallel.util.ensure_timezone"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.hub.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.unicode_type": {
  "data": {
   "shadows": "ipython_genutils.py3compat.unicode_type"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.util": {
  "data": {
   "shadows": "ipyparallel.util"
  },
  "type": "import"
 },
 "ipyparallel.controller.hub.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.controller.mongodb": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "ipyparallel.controller.mongodb.Binary": {
  "data": {
   "shadows": "bson.Binary"
  },
  "type": "import"
 },
 "ipyparallel.controller.mongodb.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.controller.mongodb.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.controller.mongodb.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.controller.mongodb.MongoClient": {
  "data": {
   "shadows": "pymongo.Connection"
  },
  "type": "import"
 },
 "ipyparallel.controller.mongodb.MongoDB": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pymongo.Connection",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.mongodb.MongoDB.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ipyparallel.controller.mongodb.MongoDB",
    "pymongo.Connection",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB._binary_buffers": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bson.Binary",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.add_record": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.drop_matching_records": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.drop_record": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.find_records": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.get_history": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.get_record": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.MongoDB.update_record": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ipyparallel.controller.mongodb.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler": {
  "data": {
   "symbols_in_volume": [
    "Dependency",
    "ImportError"
   ]
  },
  "type": "module"
 },
 "ipyparallel.controller.scheduler.Application": {
  "data": {
   "shadows": "traitlets.config.application.Application"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.CBytes": {
  "data": {
   "shadows": "traitlets.CBytes"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Config": {
  "data": {
   "shadows": "traitlets.config.loader.Config"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Enum": {
  "data": {
   "shadows": "traitlets.Enum"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Job": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.scheduler.Job.__cmp__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "cmp"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.Job.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ipyparallel.controller.scheduler.time",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.Job.__lt__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.Job.dependents": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.MET": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "ipyparallel.controller.scheduler.SessionFactory": {
  "data": {
   "shadows": "ipyparallel.factory.SessionFactory"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.Set": {
  "data": {
   "shadows": "traitlets.Set"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.TaskScheduler": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "collections.deque",
    "ipyparallel.factory.SessionFactory",
    "traitlets.CBytes",
    "traitlets.Dict",
    "traitlets.Enum",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Set",
    "types.FunctionType",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.scheduler.TaskScheduler._ident_default": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler._queue_default": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler._register_engine": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler._scheme_default": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ipyparallel.controller.scheduler.leastload"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler._scheme_name_changed": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "globals"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler._unregister_engine": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.add_job": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.available_engines": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.dispatch_notification": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "handler",
    "ipyparallel.util.log_errors",
    "ipython_genutils.py3compat.cast_bytes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.dispatch_query_reply": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "ipython_genutils.py3compat.cast_bytes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.dispatch_result": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "ipyparallel.util.log_errors"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.dispatch_submission": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Dependency",
    "Exception",
    "float",
    "ipyparallel.controller.scheduler.Job",
    "ipyparallel.controller.scheduler.MET",
    "ipyparallel.error.InvalidDependency",
    "ipyparallel.util.log_errors",
    "ipython_genutils.py3compat.cast_bytes",
    "map",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.fail_unreachable": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ipyparallel.error.ImpossibleDependency",
    "ipyparallel.error.wrap_exception",
    "why"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.finish_job": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.handle_result": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.handle_stranded_tasks": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.controller.scheduler.zmq",
    "ipyparallel.error.EngineError",
    "ipyparallel.error.wrap_exception",
    "ipyparallel.util.utcnow",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.handle_unmet_dependency": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.job_timeout": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ipyparallel.controller.scheduler.time",
    "ipyparallel.error.TaskTimeout"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.maybe_run": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "filter",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.maybe_run.can_run": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.resume_receiving": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.save_unmet": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ipyparallel.controller.scheduler.time",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.start": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.stop_receiving": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.submit_task": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.controller.scheduler.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.TaskScheduler.update_graph": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "any",
    "collections.deque",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.cast_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_bytes"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.connect_logger": {
  "data": {
   "shadows": "ipyparallel.util.connect_logger"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.launch_scheduler": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "ZMQStream",
    "ipyparallel.controller.scheduler.TaskScheduler",
    "ipyparallel.controller.scheduler.logging",
    "ipyparallel.controller.scheduler.zmq",
    "ipyparallel.util.connect_logger",
    "ipyparallel.util.local_logger",
    "ipyparallel.util.set_hwm",
    "traitlets.config.application.Application.instance",
    "traitlets.config.loader.Config",
    "zmq.eventloop.ioloop.IOLoop",
    "zmq.eventloop.ioloop.IOLoop.instance",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.leastload": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.local_logger": {
  "data": {
   "shadows": "ipyparallel.util.local_logger"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.logged": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "decorator.decorator",
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.lru": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.numpy": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "ipyparallel.controller.scheduler.plainrandom": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "random.randint"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.randint": {
  "data": {
   "shadows": "random.randint"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.random": {
  "data": {
   "shadows": "random.random"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.twobin": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "min",
    "random.randint"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.util": {
  "data": {
   "shadows": "ipyparallel.util"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.weighted": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ipyparallel.controller.scheduler.numpy",
    "random.random"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.scheduler.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.controller.scheduler.zmqstream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "memoryview"
   ]
  },
  "type": "module"
 },
 "ipyparallel.controller.sqlitedb.BaseIPythonApplication": {
  "data": {
   "shadows": "IPython.core.application.BaseIPythonApplication"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ipyparallel.controller.sqlitedb.sqlite3",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.List",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "IPython.core.application.BaseIPythonApplication.initialized",
    "IPython.core.application.BaseIPythonApplication.instance",
    "ImportError",
    "ipyparallel.controller.sqlitedb.SQLiteDB",
    "ipyparallel.controller.sqlitedb.sqlite3",
    "super",
    "zmq.eventloop.ioloop.IOLoop.instance",
    "zmq.eventloop.ioloop.PeriodicCallback"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB._check_table": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB._defaults": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB._dict_to_list": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB._init_db": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "ipyparallel.controller.sqlitedb._adapt_bufs",
    "ipyparallel.controller.sqlitedb._adapt_dict",
    "ipyparallel.controller.sqlitedb._adapt_timestamp",
    "ipyparallel.controller.sqlitedb._convert_bufs",
    "ipyparallel.controller.sqlitedb._convert_dict",
    "ipyparallel.controller.sqlitedb._convert_timestamp",
    "ipyparallel.controller.sqlitedb.os",
    "ipyparallel.controller.sqlitedb.sqlite3",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB._list_to_dict": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB._render_expression": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "any",
    "dict",
    "ipyparallel.controller.sqlitedb.null_operators",
    "ipyparallel.controller.sqlitedb.operators",
    "ipython_genutils.py3compat.iteritems",
    "isinstance",
    "len",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.add_record": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.drop_matching_records": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.drop_record": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.find_records": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.get_history": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.get_record": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.SQLiteDB.update_record": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.__all__": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "ipyparallel.controller.sqlitedb._adapt_bufs": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bytes",
    "cPickle.dumps",
    "ipyparallel.controller.sqlitedb.buffer",
    "ipyparallel.controller.sqlitedb.sqlite3",
    "ipython_genutils.py3compat.buffer_to_bytes",
    "isinstance",
    "list",
    "map",
    "memoryview"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb._adapt_dict": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ipyparallel.controller.sqlitedb.json",
    "jupyter_client.jsonutil.date_default"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb._adapt_timestamp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ensure_timezone"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb._convert_bufs": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bytes",
    "cPickle.loads"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb._convert_dict": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bytes",
    "extract_dates",
    "ipyparallel.controller.sqlitedb.json",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb._convert_timestamp": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "ensure_timezone"
   ]
  },
  "type": "function"
 },
 "ipyparallel.controller.sqlitedb.buffer": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "ipyparallel.controller.sqlitedb.buffer_to_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.buffer_to_bytes"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.date_default": {
  "data": {
   "shadows": "jupyter_client.jsonutil.date_default"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.dateutil_parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.null_operators": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "ipyparallel.controller.sqlitedb.operators": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "ipyparallel.controller.sqlitedb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ipyparallel.controller.sqlitedb.sqlite3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ipyparallel.controller.sqlitedb.squash_dates": {
  "data": {
   "shadows": "jupyter_client.jsonutil.squash_dates"
  },
  "type": "import"
 },
 "ipyparallel.datapub": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.engine": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.engine.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ipyparallel.engine.__main__.main"
   ]
  },
  "type": "module"
 },
 "ipyparallel.engine.__main__.app": {
  "data": {
   "shadows": "ipyparallel.apps.ipengineapp"
  },
  "type": "import"
 },
 "ipyparallel.engine.__main__.main": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "ipyparallel.apps.ipengineapp.launch_new_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.datapub": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.engine.datapub.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.CBytes": {
  "data": {
   "shadows": "traitlets.CBytes"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.Configurable": {
  "data": {
   "shadows": "traitlets.config.Configurable"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.Session": {
  "data": {
   "shadows": "jupyter_client.session.Session"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.ZMQDataPublisher": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "jupyter_client.session.Session",
    "traitlets.Any",
    "traitlets.CBytes",
    "traitlets.Dict",
    "traitlets.Instance",
    "traitlets.config.Configurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.engine.datapub.ZMQDataPublisher.publish_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "ipykernel.jsonutil.json_clean",
    "ipyparallel.serialize.serialize_object",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.datapub.ZMQDataPublisher.set_parent": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "jupyter_client.session.extract_header"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.datapub.ZMQInteractiveShell": {
  "data": {
   "shadows": "ipykernel.zmqshell.ZMQInteractiveShell"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.extract_header": {
  "data": {
   "shadows": "jupyter_client.session.extract_header"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.json_clean": {
  "data": {
   "shadows": "ipykernel.jsonutil.json_clean"
  },
  "type": "import"
 },
 "ipyparallel.engine.datapub.publish_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ipykernel.zmqshell.ZMQInteractiveShell.instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.datapub.serialize_object": {
  "data": {
   "shadows": "ipyparallel.serialize.serialize_object"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.engine.engine.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.CBytes": {
  "data": {
   "shadows": "traitlets.CBytes"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.EngineFactory": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "id",
    "ipyparallel.engine.engine.sys",
    "ipyparallel.factory.RegistrationFactory",
    "traitlets.Bool",
    "traitlets.CBytes",
    "traitlets.Dict",
    "traitlets.Float",
    "traitlets.Instance",
    "traitlets.Integer",
    "traitlets.Type",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.engine.engine.EngineFactory.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ipyparallel.engine.engine.EngineFactory",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory._hb_monitor": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.engine.engine.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory._ident_changed": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.cast_bytes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory._report_ping": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ipyparallel.engine.engine.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.abort": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.engine.engine.sys",
    "ipyparallel.engine.engine.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.complete_registration": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "connect",
    "int",
    "ipykernel.iostream.IOPubThread",
    "ipykernel.kernelapp.IPKernelApp",
    "ipyparallel.controller.heartmonitor.Heart",
    "ipyparallel.engine.engine.sys",
    "ipyparallel.engine.engine.zmq",
    "ipython_genutils.py3compat.cast_bytes",
    "jupyter_client.localinterfaces.localhost",
    "maybe_tunnel",
    "url",
    "zmq.eventloop.ioloop.PeriodicCallback",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.complete_registration.url": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.init_connector": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bool",
    "getpass.getpass"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.init_connector.connect": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ipyparallel.util.disambiguate_url"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.init_connector.maybe_tunnel": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ipyparallel.util.disambiguate_url",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.register": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "connect",
    "dict",
    "ipyparallel.engine.engine.zmq",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.start": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.start._start": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.EngineFactory.tunnel_mod": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property",
    "zmq.ssh.tunnel"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.engine.Float": {
  "data": {
   "shadows": "traitlets.Float"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Heart": {
  "data": {
   "shadows": "ipyparallel.controller.heartmonitor.Heart"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.IOPubThread": {
  "data": {
   "shadows": "ipykernel.iostream.IOPubThread"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.IPKernelApp": {
  "data": {
   "shadows": "ipykernel.kernelapp.IPKernelApp"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Kernel": {
  "data": {
   "shadows": "IPythonParallelKernel"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.RegistrationFactory": {
  "data": {
   "shadows": "ipyparallel.factory.RegistrationFactory"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Type": {
  "data": {
   "shadows": "traitlets.Type"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.cast_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_bytes"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.disambiguate_url": {
  "data": {
   "shadows": "ipyparallel.util.disambiguate_url"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.getpass": {
  "data": {
   "shadows": "getpass.getpass"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.tunnel": {
  "data": {
   "shadows": "zmq.ssh.tunnel"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.engine.engine.zmqstream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.engine.kernel.IPythonKernel": {
  "data": {
   "shadows": "ipykernel.ipkernel.IPythonKernel"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "getattr",
    "ipykernel.ipkernel.IPythonKernel",
    "traitlets.Integer",
    "traitlets.Type"
   ]
  },
  "type": "class"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ipyparallel.engine.kernel.IPythonParallelKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel._topic": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.cast_bytes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.abort_request": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "dict",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.apply_request": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ipyparallel.engine.kernel.sys"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.clear_request": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.do_apply": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "BaseException",
    "dict",
    "exec",
    "getattr",
    "hasattr",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.serialize.unpack_apply_message",
    "ipython_genutils.py3compat.safe_unicode",
    "ipython_genutils.py3compat.unicode_type",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.execute_request": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ipykernel.jsonutil.json_clean",
    "ipyparallel.engine.kernel.sys",
    "ipython_genutils.py3compat.cast_unicode_py2"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.finish_metadata": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.IPythonParallelKernel.init_metadata": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ipyparallel.util.utcnow"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.kernel.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.Type": {
  "data": {
   "shadows": "traitlets.Type"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.cast_bytes": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_bytes"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.cast_unicode_py2": {
  "data": {
   "shadows": "ipython_genutils.py3compat.cast_unicode_py2"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.json_clean": {
  "data": {
   "shadows": "ipykernel.jsonutil.json_clean"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.safe_unicode": {
  "data": {
   "shadows": "ipython_genutils.py3compat.safe_unicode"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.serialize_object": {
  "data": {
   "shadows": "ipyparallel.serialize.serialize_object"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.unicode_type": {
  "data": {
   "shadows": "ipython_genutils.py3compat.unicode_type"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.unpack_apply_message": {
  "data": {
   "shadows": "ipyparallel.serialize.unpack_apply_message"
  },
  "type": "import"
 },
 "ipyparallel.engine.kernel.utcnow": {
  "data": {
   "shadows": "ipyparallel.util.utcnow"
  },
  "type": "import"
 },
 "ipyparallel.engine.log": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.engine.log.DEBUG": {
  "data": {
   "shadows": "logging.DEBUG"
  },
  "type": "import"
 },
 "ipyparallel.engine.log.ERROR": {
  "data": {
   "shadows": "logging.ERROR"
  },
  "type": "import"
 },
 "ipyparallel.engine.log.EnginePUBHandler": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "zmq.log.handlers.PUBHandler"
   ]
  },
  "type": "class"
 },
 "ipyparallel.engine.log.EnginePUBHandler.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "zmq.log.handlers.PUBHandler.__init__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.log.EnginePUBHandler.root_topic": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "getattr",
    "int",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.engine.log.FATAL": {
  "data": {
   "shadows": "logging.FATAL"
  },
  "type": "import"
 },
 "ipyparallel.engine.log.INFO": {
  "data": {
   "shadows": "logging.INFO"
  },
  "type": "import"
 },
 "ipyparallel.engine.log.PUBHandler": {
  "data": {
   "shadows": "zmq.log.handlers.PUBHandler"
  },
  "type": "import"
 },
 "ipyparallel.engine.log.WARN": {
  "data": {
   "shadows": "logging.WARN"
  },
  "type": "import"
 },
 "ipyparallel.error": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.error.CompositeError": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ipyparallel.error.RemoteError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.CompositeError.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError.__repr__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError.__str__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError._get_engine_str": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError._get_traceback": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError.print_traceback": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError.raise_exception": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "IndexError",
    "ipyparallel.error.RemoteError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.CompositeError.render_traceback": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "IndexError",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.DependencyTimeout": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ipyparallel.error.ImpossibleDependency"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.EngineError": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.IPythonError": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.ImpossibleDependency": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ipyparallel.error.UnmetDependency"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.InvalidDependency": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ipyparallel.error.ImpossibleDependency"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.KernelError": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ipyparallel.error.IPythonError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.NoEnginesRegistered": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.RemoteError": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError",
    "ipyparallel.error.traceback"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.RemoteError.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ipyparallel.error.traceback"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.RemoteError.__repr__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ipyparallel.error.RemoteError.__str__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "ipyparallel.error.RemoteError._render_traceback_": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "ipyparallel.error.RemoteError.print_traceback": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.RemoteError.render_traceback": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "ipyparallel.error.TaskAborted": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.TaskRejectError": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.TaskTimeout": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.TimeoutError": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.UnmetDependency": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ipyparallel.error.KernelError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.error.__docformat__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "ipyparallel.error.__test__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ipyparallel.error.collect_exceptions": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.error.CompositeError",
    "ipyparallel.error.RemoteError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.error.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.error.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "ipyparallel.error.unicode_type": {
  "data": {
   "shadows": "ipython_genutils.py3compat.unicode_type"
  },
  "type": "import"
 },
 "ipyparallel.error.unwrap_exception": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ipyparallel.error.RemoteError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.error.wrap_exception": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ipyparallel.error.sys",
    "ipyparallel.error.traceback",
    "ipython_genutils.py3compat.unicode_type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.factory": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.factory.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "ipyparallel.factory.RegistrationFactory": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "jupyter_client.session.SessionFactory",
    "traitlets.Integer",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "ipyparallel.factory.RegistrationFactory.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ipyparallel.factory.RegistrationFactory",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.factory.RegistrationFactory._ip_default": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "jupyter_client.localinterfaces.localhost"
   ]
  },
  "type": "function"
 },
 "ipyparallel.factory.RegistrationFactory._propagate_url": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.factory.RegistrationFactory._rebuild_url": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "ipyparallel.factory.RegistrationFactory._regport_default": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ipyparallel.util.select_random_ports"
   ]
  },
  "type": "function"
 },
 "ipyparallel.factory.SessionFactory": {
  "data": {
   "shadows": "jupyter_client.session.SessionFactory"
  },
  "type": "import"
 },
 "ipyparallel.factory.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "ipyparallel.factory.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.factory.select_random_ports": {
  "data": {
   "shadows": "ipyparallel.util.select_random_ports"
  },
  "type": "import"
 },
 "ipyparallel.joblib": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.joblib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "ipyparallel.joblib.register": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "joblib.parallel.register_parallel_backend"
   ]
  },
  "type": "function"
 },
 "ipyparallel.joblib.register_parallel_backend": {
  "data": {
   "shadows": "joblib.parallel.register_parallel_backend"
  },
  "type": "import"
 },
 "ipyparallel.logger": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ipyparallel.apps.iploggerapp.launch_new_instance"
   ]
  },
  "type": "module"
 },
 "ipyparallel.logger.app": {
  "data": {
   "shadows": "ipyparallel.apps.iploggerapp"
  },
  "type": "import"
 },
 "ipyparallel.nbextension": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.nbextension.clustermanager": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "traitlets.Dict",
    "traitlets.Float",
    "traitlets.Instance",
    "traitlets.config.configurable.LoggingConfigurable"
   ]
  },
  "type": "class"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager._loop_default": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "zmq.eventloop.ioloop.IOLoop.instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.build_launchers": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DummyIPClusterStart"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.build_launchers.DummyIPClusterStart": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ipyparallel.apps.ipclusterapp.IPClusterStart"
   ]
  },
  "type": "class"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.build_launchers.DummyIPClusterStart.init_signal": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.build_launchers.DummyIPClusterStart.reinit_logging": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.check_profile": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tornado.web.HTTPError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.get_profile_dir": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IPython.core.profiledir.ProfileDir.find_profile_dir_by_name"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.list_profiles": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ImportError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.profile_info": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.start_cluster": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tornado.web.HTTPError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.start_cluster.clean_data": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.start_cluster.controller_stopped": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "clean_data"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.start_cluster.engines_stopped": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "clean_data"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.start_cluster.start": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.stop_all_clusters": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.stop_cluster": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tornado.web.HTTPError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.ClusterManager.update_profiles": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "IPython.core.profileapp.list_profiles_in",
    "IPython.paths.get_ipython_dir",
    "ImportError",
    "ipyparallel.nbextension.clustermanager.os",
    "ipython_genutils.py3compat.getcwd",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.clustermanager.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.Float": {
  "data": {
   "shadows": "traitlets.Float"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.IOLoop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop.IOLoop"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.IPClusterStart": {
  "data": {
   "shadows": "ipyparallel.apps.ipclusterapp.IPClusterStart"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.LoggingConfigurable": {
  "data": {
   "shadows": "traitlets.config.configurable.LoggingConfigurable"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.ProfileDir": {
  "data": {
   "shadows": "IPython.core.profiledir.ProfileDir"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.get_ipython_dir": {
  "data": {
   "shadows": "IPython.paths.get_ipython_dir"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.list_profiles_in": {
  "data": {
   "shadows": "IPython.core.profileapp.list_profiles_in"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.py3compat": {
  "data": {
   "shadows": "ipython_genutils.py3compat"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.clustermanager.web": {
  "data": {
   "shadows": "tornado.web"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.nbextension.handlers.ClusterActionHandler",
    "ipyparallel.nbextension.handlers.ClusterProfileHandler",
    "ipyparallel.nbextension.handlers.MainClusterHandler",
    "ipyparallel.nbextension.handlers._cluster_action_regex",
    "ipyparallel.nbextension.handlers._profile_regex",
    "ipyparallel.nbextension.handlers.os"
   ]
  },
  "type": "module"
 },
 "ipyparallel.nbextension.handlers.ClusterActionHandler": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ipyparallel.nbextension.handlers.ClusterHandler"
   ]
  },
  "type": "class"
 },
 "ipyparallel.nbextension.handlers.ClusterActionHandler.post": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "ipyparallel.nbextension.handlers.json",
    "tornado.web.authenticated"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.handlers.ClusterHandler": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "notebook.base.handlers.IPythonHandler"
   ]
  },
  "type": "class"
 },
 "ipyparallel.nbextension.handlers.ClusterHandler.cluster_manager": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.handlers.ClusterProfileHandler": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ipyparallel.nbextension.handlers.ClusterHandler"
   ]
  },
  "type": "class"
 },
 "ipyparallel.nbextension.handlers.ClusterProfileHandler.get": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ipyparallel.nbextension.handlers.json",
    "tornado.web.authenticated"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.handlers.IPythonHandler": {
  "data": {
   "shadows": "notebook.base.handlers.IPythonHandler"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.MainClusterHandler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ipyparallel.nbextension.handlers.ClusterHandler"
   ]
  },
  "type": "class"
 },
 "ipyparallel.nbextension.handlers.MainClusterHandler.get": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ipyparallel.nbextension.handlers.json",
    "tornado.web.authenticated"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.handlers.V": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers._cluster_action_regex": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ipyparallel.nbextension.handlers._profile_regex": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "ipyparallel.nbextension.handlers.default_handlers": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "ipyparallel.nbextension.handlers.install_nbextension": {
  "data": {
   "shadows": "notebook.nbextensions.install_nbextension"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.load_jupyter_server_extension": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ClusterManager",
    "distutils.version.LooseVersion",
    "ipyparallel.nbextension.handlers.default_handlers",
    "ipyparallel.nbextension.handlers.notebook",
    "ipyparallel.nbextension.handlers.static",
    "ipyparallel.nbextension.handlers.sys",
    "notebook.nbextensions.install_nbextension",
    "notebook.utils.url_path_join"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.handlers.notebook": {
  "data": {
   "shadows": "notebook"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.static": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ipyparallel.nbextension.handlers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.ujoin": {
  "data": {
   "shadows": "notebook.utils.url_path_join"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.handlers.web": {
  "data": {
   "shadows": "tornado.web"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.nbextension.install.install_extensions"
   ]
  },
  "type": "module"
 },
 "ipyparallel.nbextension.install.BaseJSONConfigManager": {
  "data": {
   "shadows": "traitlets.config.manager.BaseJSONConfigManager"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.FrontendConfigManager": {
  "data": {
   "shadows": "notebook.services.config.ConfigManager"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.V": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install._install_extension_nb41": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "jupyter_core.paths.jupyter_config_dir",
    "notebook.services.config.ConfigManager",
    "traitlets.config.manager.BaseJSONConfigManager"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.install.disable_nbextension": {
  "data": {
   "shadows": "notebook.nbextensions.disable_nbextension"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.enable_nbextension": {
  "data": {
   "shadows": "notebook.nbextensions.enable_nbextension"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.install_extensions": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "ipyparallel.nbextension.install._install_extension_nb41",
    "ipyparallel.nbextension.install.notebook",
    "notebook.nbextensions.disable_nbextension",
    "notebook.nbextensions.enable_nbextension",
    "notebook.nbextensions.install_nbextension_python",
    "notebook.serverextensions.toggle_serverextension_python"
   ]
  },
  "type": "function"
 },
 "ipyparallel.nbextension.install.install_nbextension_python": {
  "data": {
   "shadows": "notebook.nbextensions.install_nbextension_python"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.install_server_extension": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "ipyparallel.nbextension.install.jupyter_config_dir": {
  "data": {
   "shadows": "jupyter_core.paths.jupyter_config_dir"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.notebook": {
  "data": {
   "shadows": "notebook"
  },
  "type": "import"
 },
 "ipyparallel.nbextension.install.toggle_serverextension_python": {
  "data": {
   "shadows": "notebook.serverextensions.toggle_serverextension_python"
  },
  "type": "import"
 },
 "ipyparallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.register_joblib_backend": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "register"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.serialize.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ipyparallel.serialize.codeutil": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "copy_reg.pickle",
    "ipyparallel.serialize.codeutil.reduce_code",
    "ipyparallel.serialize.codeutil.types"
   ]
  },
  "type": "module"
 },
 "ipyparallel.serialize.codeutil.code_ctor": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ipyparallel.serialize.codeutil.types"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.codeutil.copyreg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "ipyparallel.serialize.codeutil.reduce_code": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ipyparallel.serialize.codeutil.code_ctor",
    "ipyparallel.serialize.codeutil.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.codeutil.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.serialize.codeutil.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ipyparallel.serialize.serialize.cPickle",
    "ipyparallel.serialize.serialize.pickle",
    "ipython_genutils.py3compat.PY3",
    "memoryview"
   ]
  },
  "type": "module"
 },
 "ipyparallel.serialize.serialize.MAX_BYTES": {
  "data": {
   "shadows": "jupyter_client.session.MAX_BYTES"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize.MAX_ITEMS": {
  "data": {
   "shadows": "jupyter_client.session.MAX_ITEMS"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize.PICKLE_PROTOCOL": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ipyparallel.serialize.serialize.PY3": {
  "data": {
   "shadows": "ipython_genutils.py3compat.PY3"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize._extract_buffers": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bytes",
    "enumerate",
    "ipyparallel.serialize.serialize._nbytes",
    "ipyparallel.serialize.serialize.buffer",
    "isinstance",
    "jupyter_client.session.MAX_BYTES",
    "memoryview"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.serialize._nbytes": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.PY3",
    "isinstance",
    "len",
    "memoryview"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.serialize._restore_buffers": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "enumerate",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.serialize._stdlib_pickle": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ipyparallel.serialize.serialize.buffer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ipyparallel.serialize.serialize.buffer_to_bytes_py2": {
  "data": {
   "shadows": "ipython_genutils.py3compat.buffer_to_bytes_py2"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize.cPickle": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "ipyparallel.serialize.serialize.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize.deserialize_object": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.serialize.serialize._restore_buffers",
    "ipyparallel.serialize.serialize.pickle",
    "ipython_genutils.py3compat.buffer_to_bytes_py2",
    "istype",
    "jupyter_client.session.MAX_ITEMS",
    "len",
    "list",
    "sorted",
    "uncan",
    "uncan_sequence"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.serialize.pack_apply_message": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "can",
    "dict",
    "ipyparallel.serialize.serialize.PICKLE_PROTOCOL",
    "ipyparallel.serialize.serialize.pickle",
    "ipyparallel.serialize.serialize.serialize_object",
    "itertools.chain.from_iterable",
    "jupyter_client.session.MAX_BYTES",
    "jupyter_client.session.MAX_ITEMS",
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.serialize.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ipyparallel.serialize.serialize.serialize_object": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "can",
    "can_sequence",
    "dict",
    "ipyparallel.serialize.serialize.PICKLE_PROTOCOL",
    "ipyparallel.serialize.serialize._extract_buffers",
    "ipyparallel.serialize.serialize.pickle",
    "istype",
    "jupyter_client.session.MAX_BYTES",
    "jupyter_client.session.MAX_ITEMS",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.serialize.serialize.unpack_apply_message": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ipyparallel.serialize.serialize.deserialize_object",
    "ipyparallel.serialize.serialize.pickle",
    "ipython_genutils.py3compat.buffer_to_bytes_py2",
    "len",
    "list",
    "range",
    "tuple",
    "uncan"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.tests.os",
    "open"
   ]
  },
  "type": "module"
 },
 "ipyparallel.tests.Client": {
  "data": {
   "shadows": "ipyparallel.Client"
  },
  "type": "import"
 },
 "ipyparallel.tests.LocalProcessLauncher": {
  "data": {
   "shadows": "ipyparallel.apps.launcher.LocalProcessLauncher"
  },
  "type": "import"
 },
 "ipyparallel.tests.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "ipyparallel.tests.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "ipyparallel.tests.ProcessStateError": {
  "data": {
   "shadows": "ipyparallel.apps.launcher.ProcessStateError"
  },
  "type": "import"
 },
 "ipyparallel.tests.SIGKILL": {
  "data": {
   "shadows": "ipyparallel.apps.launcher.SIGKILL"
  },
  "type": "import"
 },
 "ipyparallel.tests.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "ipyparallel.tests.TestProcessLauncher": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalProcessLauncher"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.TestProcessLauncher.start": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.ProcessStateError",
    "ipyparallel.tests.nose",
    "ipyparallel.tests.os",
    "subprocess.Popen",
    "subprocess.STDOUT"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.add_engines": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "ipyparallel.Client",
    "ipyparallel.apps.launcher.ipengine_cmd_argv",
    "ipyparallel.tests.TestProcessLauncher",
    "ipyparallel.tests.launchers",
    "ipyparallel.tests.time",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.blackhole": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "ipyparallel.tests.clienttest": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.clienttest.BaseZMQTestCase": {
  "data": {
   "shadows": "zmq.tests.BaseZMQTestCase"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.Client": {
  "data": {
   "shadows": "ipyparallel.Client"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "zmq.tests.BaseZMQTestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase._wait_for": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "f",
    "ipyparallel.tests.clienttest.time",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.add_engines": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.assertRaisesRemote": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "f",
    "ipyparallel.error.CompositeError",
    "ipyparallel.error.RemoteError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.client_wait": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ipyparallel.Client.wait"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.connect_client": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "dir",
    "filter",
    "getattr",
    "ipyparallel.Client",
    "ipyparallel.tests.clienttest.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.minimum_engines": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.setUp": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "zmq.tests.BaseZMQTestCase.setUp"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.tearDown": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "filter",
    "ipyparallel.tests.launchers",
    "ipyparallel.tests.launchers.remove",
    "zmq.tests.BaseZMQTestCase.tearDown"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ClusterTestCase.wait_on_engines": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ipyparallel.tests.clienttest.time",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.HTML": {
  "data": {
   "shadows": "IPython.core.display.HTML"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.Math": {
  "data": {
   "shadows": "IPython.core.display.Math"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.crash": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "exec",
    "ipyparallel.tests.clienttest.ctypes",
    "ipyparallel.tests.clienttest.sys",
    "ipyparallel.tests.clienttest.types"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.display": {
  "data": {
   "shadows": "IPython.core.display.display"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.generate_output": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "IPython.core.display.HTML",
    "IPython.core.display.Math",
    "IPython.core.display.display",
    "ipyparallel.tests.clienttest.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.launchers": {
  "data": {
   "shadows": "ipyparallel.tests.launchers"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.raiser": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "eclass"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.segfault": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ipyparallel.tests.clienttest.ctypes"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.skip_without": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.skip_without.skip_without_names": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "decorator.decorator",
    "f",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ipyparallel.tests.clienttest.wait": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ipyparallel.tests.clienttest.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.clienttest.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.tests.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.tests.get_ipython_dir": {
  "data": {
   "shadows": "IPython.paths.get_ipython_dir"
  },
  "type": "import"
 },
 "ipyparallel.tests.ipcontroller_cmd_argv": {
  "data": {
   "shadows": "ipyparallel.apps.launcher.ipcontroller_cmd_argv"
  },
  "type": "import"
 },
 "ipyparallel.tests.ipengine_cmd_argv": {
  "data": {
   "shadows": "ipyparallel.apps.launcher.ipengine_cmd_argv"
  },
  "type": "import"
 },
 "ipyparallel.tests.launchers": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "ipyparallel.tests.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "ipyparallel.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "ipyparallel.tests.setup": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "IPython.paths.get_ipython_dir",
    "RuntimeError",
    "ipyparallel.apps.launcher.ipcontroller_cmd_argv",
    "ipyparallel.error.RemoteError",
    "ipyparallel.tests.TestProcessLauncher",
    "ipyparallel.tests.add_engines",
    "ipyparallel.tests.launchers",
    "ipyparallel.tests.os",
    "ipyparallel.tests.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.setup.RemoteErrorWithTB": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ipyparallel.error.RemoteError"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.setup.RemoteErrorWithTB.__str__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.teardown": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "ipyparallel.apps.launcher.SIGKILL",
    "ipyparallel.tests.blackhole",
    "ipyparallel.tests.launchers",
    "ipyparallel.tests.time",
    "print"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps": {
  "data": {
   "symbols_in_volume": [
    "ipyparallel.tests.test_apps.sys"
   ]
  },
  "type": "module"
 },
 "ipyparallel.tests.test_apps.IPythonKernel": {
  "data": {
   "shadows": "ipykernel.ipkernel.IPythonKernel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps._get_output": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bytes",
    "ipyparallel.tests.test_apps.sys",
    "isinstance",
    "subprocess.check_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_apps.bind_kernel": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ipykernel.kernelapp.IPKernelApp",
    "ipykernel.kernelapp.IPKernelApp._bind_socket",
    "ipyparallel.apps.ipengineapp",
    "ipyparallel.tests.test_apps.types",
    "unittest.mock.MagicMock",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_apps.check_output": {
  "data": {
   "shadows": "subprocess.check_output"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.create_autospec": {
  "data": {
   "shadows": "unittest.mock.create_autospec"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.ioloop": {
  "data": {
   "shadows": "zmq.eventloop.ioloop"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.iostream": {
  "data": {
   "shadows": "ipykernel.iostream"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.ipengineapp": {
  "data": {
   "shadows": "ipyparallel.apps.ipengineapp"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.ipyparallel": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.kernelapp": {
  "data": {
   "shadows": "ipykernel.kernelapp"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.nt": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.test_bind_kernel": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "MockIPEngineApp",
    "ipykernel.iostream.IOPubThread",
    "ipykernel.ipkernel.IPythonKernel",
    "ipyparallel.tests.test_apps.bind_kernel",
    "ipyparallel.tests.test_apps.zmq",
    "isinstance",
    "unittest.mock.MagicMock",
    "unittest.mock.create_autospec",
    "zmq.eventloop.ioloop.IOLoop",
    "zmq.eventloop.zmqstream.ZMQStream"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_apps.test_bind_kernel.MockIPEngineApp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ipyparallel.apps.ipengineapp.EngineFactory",
    "ipyparallel.apps.ipengineapp.IPEngineApp",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_apps.test_bind_kernel.TestIOPubThread": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ipykernel.iostream.IOPubThread"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_apps.test_version": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ipyparallel.tests.test_apps._get_output",
    "ipyparallel.tests.test_apps.ipyparallel",
    "ipyparallel.tests.test_apps.sys"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_apps.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_apps.zmqstream": {
  "data": {
   "shadows": "zmq.eventloop.zmqstream"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_abort": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ipyparallel.error.TaskAborted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_await_data": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.time",
    "len",
    "nose.tools.assert_in",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_dir": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_display_empty_streams_engine": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_display_empty_streams_single": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_display_empty_streams_type": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_elapsed_multi": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_elapsed_single": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_get_after_done": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_get_after_error": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_get_before_done": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ipyparallel.error.TimeoutError",
    "ipyparallel.tests.test_asyncresult.wait"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_get_dict": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_get_dict_bad": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_get_dict_single": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.echo",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_getattr": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "ipyparallel.tests.test_asyncresult.wait",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_getitem": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "KeyError",
    "ipyparallel.tests.test_asyncresult.wait",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_hubresult_timestamps": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ipyparallel.Client",
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_iter_amr": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.wait"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_iter_error": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_iter_multi_result_ar": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.wait"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_len": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_not_single_result": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "save_build",
    "single_engine"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_not_single_result.single_engine": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "save_build"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_owner_pop": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_serial_time_multi": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.error.TimeoutError",
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_serial_time_single": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.error.TimeoutError",
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_single_result": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "ipyparallel.tests.test_asyncresult.wait",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_single_result_view": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_wait_for_send": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "ipyparallel.error.TimeoutError",
    "ipyparallel.tests.test_asyncresult.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_wall_time_multi": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.error.TimeoutError",
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.AsyncResultTest.test_wall_time_single": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.error.TimeoutError",
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.Client": {
  "data": {
   "shadows": "ipyparallel.Client"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.TimeoutError": {
  "data": {
   "shadows": "ipyparallel.error.TimeoutError"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.capture_output": {
  "data": {
   "shadows": "IPython.utils.io.capture_output"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.echo": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.nt": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.setup": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_asyncresult.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_asyncresult.wait": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ipyparallel.tests.test_asyncresult.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_canning.can": {
  "data": {
   "shadows": "ipyparallel.serialize.canning.can"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_canning.dumps": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ipyparallel.serialize.canning.can",
    "ipyparallel.tests.test_canning.pickle"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.interactive": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.loads": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ipyparallel.serialize.canning.uncan",
    "ipyparallel.tests.test_canning.pickle"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.nt": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_canning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_canning.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_canning.test_closure": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bar",
    "foo",
    "ipyparallel.tests.test_canning.dumps",
    "ipyparallel.tests.test_canning.loads",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_closure.foo": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ipyparallel.tests.test_canning.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_generator_closure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bar",
    "foo",
    "ipyparallel.tests.test_canning.dumps",
    "ipyparallel.tests.test_canning.loads",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_generator_closure.foo": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ipyparallel.tests.test_canning.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_nested_closure": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bar",
    "foo",
    "ipyparallel.tests.test_canning.dumps",
    "ipyparallel.tests.test_canning.loads",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_nested_closure.foo": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "g",
    "ipyparallel.tests.test_canning.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_nested_closure.foo.g": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_no_closure": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bar",
    "foo",
    "ipyparallel.tests.test_canning.dumps",
    "ipyparallel.tests.test_canning.loads",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_no_closure.foo": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ipyparallel.tests.test_canning.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.test_uncan_bytes_buffer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ipyparallel.serialize.canning.can",
    "ipyparallel.serialize.canning.uncan",
    "memoryview",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_canning.uncan": {
  "data": {
   "shadows": "ipyparallel.serialize.canning.uncan"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_client.AsyncHubResult": {
  "data": {
   "shadows": "ipyparallel.AsyncHubResult"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.DirectView": {
  "data": {
   "shadows": "ipyparallel.DirectView"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.Future": {
  "data": {
   "shadows": "concurrent.futures.Future"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.Reference": {
  "data": {
   "shadows": "ipyparallel.Reference"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.TestClient": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "ipyparallel.tests.test_client.TestClient._wait_for_idle": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "any",
    "ipyparallel.tests.test_client.time",
    "len",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_activate": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "IPython.get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_await_future": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "threading.Thread",
    "tornado.concurrent.Future"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_await_future.finish_later": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_become_dask": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "NameError",
    "ipyparallel.Reference",
    "range",
    "repr",
    "skip_without",
    "sum"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_clear": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NameError",
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_db_query_default_keys": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_db_query_dt": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_db_query_get_result": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ipyparallel.client.client.Client"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_db_query_in": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_db_query_keys": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_db_query_msg_id": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_dview_targets": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_get_execute_result": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ipyparallel.AsyncHubResult",
    "ipyparallel.client.client.Client",
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_get_result": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ipyparallel.AsyncHubResult",
    "ipyparallel.client.client.Client",
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_hub_history": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datetime.datetime",
    "ipyparallel.tests.test_client.time",
    "ipyparallel.util.utc"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_ids": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_ids_list": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_iter": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_lazy_all_targets": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "double",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_lazy_all_targets.double": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_lbview_targets": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_all_hub_results": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_all_local_results": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_all_local_results_outstanding": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "RuntimeError",
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_all_results": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_everything": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_hub_results": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ipyparallel.client.client.Client",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_local_results": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_purge_local_results_outstanding": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "RuntimeError",
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_queue_status": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit.f": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ipyparallel.tests.test_client.random"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_aborted": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ipyparallel.error.TaskAborted",
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_aborted.f": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ipyparallel.tests.test_client.random"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_badkey": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_chain": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_header": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ipyparallel.tests.test_client.time",
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_header.f": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ipyparallel.tests.test_client.random"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_resubmit_inflight": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ipyparallel.tests.test_client.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_result_status": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_shutdown": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "IndexError",
    "ipyparallel.tests.test_client.os",
    "ipyparallel.tests.test_client.time",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_targets": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "build"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_view_indexing": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "ipyparallel.DirectView",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.TestClient.test_wait_interactive": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.TornadoFuture": {
  "data": {
   "shadows": "tornado.concurrent.Future"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.clientmod": {
  "data": {
   "shadows": "ipyparallel.client.client"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.setup": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_client.utc": {
  "data": {
   "shadows": "ipyparallel.util.utc"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_db.DictDB": {
  "data": {
   "shadows": "ipyparallel.controller.dictdb.DictDB"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.SQLiteDB": {
  "data": {
   "shadows": "ipyparallel.controller.sqlitedb.SQLiteDB"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.Session": {
  "data": {
   "shadows": "jupyter_client.session.Session"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.TaskDBTest": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "ipyparallel.tests.test_db.TaskDBTest._round_to_millisecond": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datetime.timedelta",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.create_db": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.load_records": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.controller.hub.init_record",
    "ipyparallel.tests.test_db.os",
    "ipyparallel.tests.test_db.time",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "jupyter_client.session.Session"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_add_record": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_datetime": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "ipyparallel.util.utcnow",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_drop_matching": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_drop_record": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_find_records_dt": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_find_records_in": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_find_records_keys": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_find_records_msg_id": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_get_history": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datetime.datetime",
    "ipyparallel.util.utc"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_null": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_pop_safe_find": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_pop_safe_find_keys": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_pop_safe_get": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TaskDBTest.test_update_record": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ipyparallel.util.utcnow"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.TestDictBackend": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ipyparallel.tests.test_db.TaskDBTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_db.TestDictBackend.create_db": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ipyparallel.controller.dictdb.DictDB"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestDictBackend.test_cull_count": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestDictBackend.test_cull_size": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestDictBackend.test_cull_size_drop": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestDictBackend.test_cull_size_update": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.tests.test_db.os",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestSQLiteBackend": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ipyparallel.tests.test_db.TaskDBTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_db.TestSQLiteBackend.create_db": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "IPython.testing.decorators.skip_without",
    "ipyparallel.controller.sqlitedb.SQLiteDB",
    "ipyparallel.tests.test_db.logging",
    "ipyparallel.tests.test_db.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.TestSQLiteBackend.tearDown": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.dec": {
  "data": {
   "shadows": "IPython.testing.decorators"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.init_record": {
  "data": {
   "shadows": "ipyparallel.controller.hub.init_record"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.setup": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ipyparallel.tests.test_db.tempfile"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.teardown": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ipyparallel.tests.test_db.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_db.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.utc": {
  "data": {
   "shadows": "ipyparallel.util.utc"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_db.util": {
  "data": {
   "shadows": "ipyparallel.util"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency": {
  "data": {
   "symbols_in_volume": [
    "list",
    "map",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "ipyparallel.tests.test_dependency.DependencyTest": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.assertMet": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.assertReachable": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.assertUnmet": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.assertUnreachable": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.cancan": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ipyparallel.serialize.can",
    "ipyparallel.serialize.uncan"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "map",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_failure_only": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ipyparallel.Dependency",
    "ipyparallel.tests.test_dependency.completed",
    "ipyparallel.tests.test_dependency.mixed"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_function": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NameError",
    "ipyparallel.tests.test_dependency.func"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_function.bar": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ipyparallel.interactive",
    "ipyparallel.tests.test_dependency.func"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_function.bar2": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ipyparallel.interactive",
    "ipyparallel.require",
    "ipyparallel.tests.test_dependency.func"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_imports": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "encode"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_imports.encode": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ipyparallel.require",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_object": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ipyparallel.tests.test_dependency.func"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_require_object.bar": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "foo",
    "ipyparallel.interactive",
    "ipyparallel.require",
    "ipyparallel.tests.test_dependency.func"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.DependencyTest.test_success_only": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ipyparallel.Dependency",
    "ipyparallel.tests.test_dependency.completed",
    "ipyparallel.tests.test_dependency.mixed"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency.can": {
  "data": {
   "shadows": "ipyparallel.serialize.can"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency.completed": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_dependency.failed": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_dependency.func": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ipyparallel.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.interactive": {
  "data": {
   "shadows": "ipyparallel.util.interactive"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency.ipp": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency.mixed": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_dependency.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency.setup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_dependency.uncan": {
  "data": {
   "shadows": "ipyparallel.serialize.uncan"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_dependency.wait": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ipyparallel.require"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest.resolve": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tornado.ioloop.IOLoop"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest.test_client_executor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ipyparallel.client.view.LoadBalancedView",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest.test_executor_context": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ipyparallel.tests.test_executor.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest.test_executor_map": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "enumerate",
    "ipyparallel.tests.test_executor.types",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest.test_executor_submit": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.AsyncResultTest.test_view_executor": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.IOLoop": {
  "data": {
   "shadows": "tornado.ioloop.IOLoop"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_executor.LoadBalancedView": {
  "data": {
   "shadows": "ipyparallel.client.view.LoadBalancedView"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_executor.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_executor.echo": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.setup": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_executor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_executor.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_executor.wait": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ipyparallel.tests.test_executor.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_joblib": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "ipyparallel.tests.test_joblib.IPythonParallelBackend": {
  "data": {
   "shadows": "ipyparallel.client._joblib.IPythonParallelBackend"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.TestJobLib": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "ipyparallel.tests.test_joblib.TestJobLib.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "add_engines",
    "ipyparallel.tests.test_joblib.TestJobLib",
    "ipyparallel.tests.test_joblib.have_joblib",
    "nose.SkipTest",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_joblib.TestJobLib.test_default_backend": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ipyparallel.register_joblib_backend",
    "joblib.Parallel",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_joblib.TestJobLib.test_joblib_backend": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ipyparallel.tests.test_joblib.neg",
    "joblib.Parallel",
    "joblib.delayed",
    "p",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_joblib.TestJobLib.test_register_backend": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "joblib.Parallel"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_joblib.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.have_joblib": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_joblib.ipp": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.joblib": {
  "data": {
   "shadows": "joblib"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_joblib.neg": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_launcher.BatchTest": {
  "data": {
   "lineno": 85
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.BatchTest.test_batch_template": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.batch_file",
    "ipyparallel.apps.launcher.batch_file_name",
    "ipyparallel.apps.launcher.write_batch_script",
    "ipyparallel.tests.test_launcher.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.Config": {
  "data": {
   "shadows": "traitlets.config.Config"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.ControllerLauncherTest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ipyparallel.tests.test_launcher.LauncherTest"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.EngineSetLauncherTest": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ipyparallel.tests.test_launcher.LauncherTest"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.LauncherTest": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.build_launcher": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.tests.test_launcher.logging"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.config": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property",
    "traitlets.config.Config"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ipyparallel.tests.test_launcher.tempfile"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.tearDown": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ipyparallel.tests.test_launcher.shutil"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.test_args": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.args",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.test_cluster_id_arg": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.cluster_args",
    "ipyparallel.apps.launcher.cluster_args.index",
    "ipyparallel.apps.launcher.cluster_id"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.LauncherTest.test_profile_dir_arg": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.cluster_args"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.SSHTest": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.SSHTest.test_cluster_id_arg": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.SSHTest.test_remote_profile_dir": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.remote_profile_dir",
    "traitlets.config.Config"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.SSHTest.test_remote_profile_dir_default": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.remote_profile_dir"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.TestHTCondorControllerLauncher": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.HTCondorControllerLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestHTCondorEngineSetLauncher": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.HTCondorEngineSetLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestLSFControllerLauncher": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LSFControllerLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestLSFEngineSetLauncher": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LSFEngineSetLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestLocalControllerLauncher": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalControllerLauncher",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestLocalEngineSetLauncher": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.LocalEngineSetLauncher",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestMPIControllerLauncher": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIControllerLauncher",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestMPIEngineSetLauncher": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.MPIEngineSetLauncher",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestPBSControllerLauncher": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.PBSControllerLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestPBSEngineSetLauncher": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.PBSEngineSetLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSGEControllerLauncher": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SGEControllerLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSGEEngineSetLauncher": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SGEEngineSetLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSSHControllerLauncher": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHControllerLauncher",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "ipyparallel.tests.test_launcher.SSHTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSSHEngineLauncher": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHEngineLauncher",
    "ipyparallel.tests.test_launcher.LauncherTest",
    "ipyparallel.tests.test_launcher.SSHTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSSHEngineSetLauncher": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHEngineSetLauncher",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSSHEngineSetLauncher.test_cluster_id_arg": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.TestSSHProxyEngineSetLauncher": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SSHProxyEngineSetLauncher",
    "ipyparallel.tests.test_launcher.LauncherTest",
    "ipyparallel.tests.test_launcher.SSHTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSlurmControllerLauncher": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SlurmControllerLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestSlurmEngineSetLauncher": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.SlurmEngineSetLauncher",
    "ipyparallel.tests.test_launcher.BatchTest",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestWinHPCControllerLauncher": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WindowsHPCControllerLauncher",
    "ipyparallel.tests.test_launcher.ControllerLauncherTest",
    "ipyparallel.tests.test_launcher.WinHPCTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.TestWinHPCEngineSetLauncher": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher.WindowsHPCEngineSetLauncher",
    "ipyparallel.tests.test_launcher.EngineSetLauncherTest",
    "ipyparallel.tests.test_launcher.WinHPCTest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.WinHPCTest": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "ipyparallel.tests.test_launcher.WinHPCTest.test_batch_template": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ipyparallel.apps.launcher",
    "ipyparallel.apps.launcher.job_file",
    "ipyparallel.apps.launcher.job_file_name",
    "ipyparallel.apps.launcher.write_job_file",
    "ipyparallel.tests.test_launcher.os"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_launcher.dec": {
  "data": {
   "shadows": "IPython.testing.decorators"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.launcher": {
  "data": {
   "shadows": "ipyparallel.apps.launcher"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_launcher.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_lbview.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.setUp": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_abort": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ipyparallel.error.TaskAborted",
    "ipyparallel.tests.test_lbview.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_after": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ipyparallel.tests.test_lbview.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_follow": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_impossible_dependency": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ipyparallel.error.ImpossibleDependency"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_invalid_dependency": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ipyparallel.error.InvalidDependency"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map.f": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_generator": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "iter",
    "list",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_generator.f": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_iterable": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "iter",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_ordered": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ipyparallel.AsyncMapResult",
    "isinstance",
    "list",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_ordered.f": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_ordered.slow_f": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ipyparallel.tests.test_lbview.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_short_first": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "list",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_short_first.f": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_short_last": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "list",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_short_last.f": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_unordered": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ipyparallel.AsyncMapResult",
    "isinstance",
    "list",
    "map",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_unordered.f": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_map_unordered.slow_f": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ipyparallel.tests.test_lbview.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_retries": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "AssertionError",
    "ipyparallel.error.TaskTimeout",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_retries.fail": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_short_timeout": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_short_timeout.fail": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ipyparallel.tests.test_lbview.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.TestLoadBalancedView.test_z_crash_task": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ipyparallel.error.EngineError",
    "ipyparallel.tests.test_lbview.time",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.pmod": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_lbview.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_lbview.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_magics.AsyncResult": {
  "data": {
   "shadows": "ipyparallel.AsyncResult"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics._check_generated_stderr": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ipyparallel.tests.test_magics.re",
    "isinstance",
    "len",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_autopx_blocking": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "ZeroDivisionError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_autopx_nonblocking": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "ZeroDivisionError",
    "get_ipython",
    "ipyparallel.tests.test_magics.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_cellpx_block": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython",
    "ipyparallel.RemoteError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_cellpx_block_args": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_cellpx_groupby_engine": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython",
    "ipyparallel.tests.test_magics.re",
    "isinstance",
    "len",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_cellpx_groupby_order": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython",
    "ipyparallel.tests.test_magics.re",
    "isinstance",
    "len",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_cellpx_groupby_type": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython",
    "ipyparallel.tests.test_magics.re",
    "isinstance",
    "len",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_cellpx_targets": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython",
    "ipyparallel.RemoteError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_px_blocking": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "ZeroDivisionError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_px_nonblocking": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "ZeroDivisionError",
    "get_ipython",
    "ipyparallel.AsyncResult"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_px_pylab": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "IPython.testing.decorators.skipif_not_matplotlib",
    "IPython.utils.io.capture_output",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_pxconfig": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.TestParallelMagics.test_result": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "dict",
    "get_ipython",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics.capture_output": {
  "data": {
   "shadows": "IPython.utils.io.capture_output"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics.dec": {
  "data": {
   "shadows": "IPython.testing.decorators"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics.pmod": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_magics.setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_magics.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_mongodb": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_mongodb.Connection": {
  "data": {
   "shadows": "pymongo.Connection"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_mongodb.MongoDB": {
  "data": {
   "shadows": "ipyparallel.controller.mongodb.MongoDB"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_mongodb.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_mongodb.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_mongodb.TestMongoBackend": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_mongodb.TestMongoBackend.create_db": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "ipyparallel.controller.mongodb.MongoDB",
    "ipyparallel.tests.test_mongodb.c",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_mongodb.c": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_mongodb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_mongodb.setup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "int",
    "ipyparallel.tests.test_mongodb.c",
    "ipyparallel.tests.test_mongodb.os",
    "nose.SkipTest",
    "pymongo.Connection"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_mongodb.teardown": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ipyparallel.tests.test_mongodb.c"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction": {
  "data": {},
  "type": "module"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions.test_parallel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "foo",
    "foo.__doc__",
    "foo.__name__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions.test_parallel.foo": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ipyparallel.parallel"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions.test_parallel_map": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "foo.map"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions.test_parallel_map.foo": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ipyparallel.parallel"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions.test_remote": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "foo"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction.TestRemoteFunctions.test_remote.foo": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ipyparallel.remote"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_remotefunction.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_remotefunction.ipp": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_remotefunction.setup": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "ipyparallel.tests.test_serialize.CannedArray": {
  "data": {
   "shadows": "ipyparallel.serialize.canning.CannedArray"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.CannedClass": {
  "data": {
   "shadows": "ipyparallel.serialize.canning.CannedClass"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.DTYPES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_serialize.SHAPES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_serialize.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_equal"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.dec": {
  "data": {
   "shadows": "IPython.testing.decorators"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.deserialize_object": {
  "data": {
   "shadows": "ipyparallel.serialize.deserialize_object"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.interactive": {
  "data": {
   "shadows": "ipyparallel.interactive"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.new_array": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ipyparallel.tests.test_serialize.numpy"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.nt": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.point": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_serialize.roundtrip": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "nose.tools.assert_equals"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.serialize_object": {
  "data": {
   "shadows": "ipyparallel.serialize.serialize_object"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_serialize.test_class": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.serialize.canning.CannedClass",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.pickle",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_class.C": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ipyparallel.interactive",
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_serialize.test_class_inheritance": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.serialize.canning.CannedClass",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.pickle",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_class_inheritance.C": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ipyparallel.interactive",
    "object"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_serialize.test_class_inheritance.D": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ipyparallel.interactive"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_serialize.test_class_oldstyle": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.serialize.canning.CannedClass",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.pickle",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_class_oldstyle.C": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ipyparallel.interactive"
   ]
  },
  "type": "class"
 },
 "ipyparallel.tests.test_serialize.test_list": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.pickle",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_namedtuple": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "globals",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.pickle",
    "ipyparallel.tests.test_serialize.point",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_numpy": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "IPython.testing.decorators.skip_without",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.DTYPES",
    "ipyparallel.tests.test_serialize.SHAPES",
    "ipyparallel.tests.test_serialize.new_array",
    "memoryview",
    "nose.tools.assert_equal",
    "numpy.testing.utils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_numpy_in_dict": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "IPython.testing.decorators.skip_without",
    "dict",
    "ipyparallel.serialize.canning.CannedArray",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.DTYPES",
    "ipyparallel.tests.test_serialize.SHAPES",
    "ipyparallel.tests.test_serialize.new_array",
    "ipyparallel.tests.test_serialize.pickle",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance",
    "numpy.testing.utils.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_numpy_in_seq": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "IPython.testing.decorators.skip_without",
    "ipyparallel.serialize.canning.CannedArray",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.DTYPES",
    "ipyparallel.tests.test_serialize.SHAPES",
    "ipyparallel.tests.test_serialize.new_array",
    "ipyparallel.tests.test_serialize.pickle",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance",
    "numpy.testing.utils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_pickle_threshold": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "IPython.testing.decorators.skip_without",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.numpy",
    "len",
    "nose.tools.assert_equal",
    "numpy.testing.utils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_recarray": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "IPython.testing.decorators.skip_without",
    "float",
    "int",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.SHAPES",
    "ipyparallel.tests.test_serialize.new_array",
    "nose.tools.assert_equal",
    "numpy.testing.utils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_roundtrip_buffered": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "len",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_roundtrip_memoryview": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "len",
    "memoryview",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_roundtrip_nested": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.tests.test_serialize.roundtrip",
    "nose.tools.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_roundtrip_simple": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.tests.test_serialize.roundtrip",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_serialize.test_tuple": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ipyparallel.serialize.deserialize_object",
    "ipyparallel.serialize.serialize_object",
    "ipyparallel.tests.test_serialize.pickle",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_instance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "ipyparallel.tests.test_view.AsyncHubResult": {
  "data": {
   "shadows": "ipyparallel.AsyncHubResult"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.AsyncMapResult": {
  "data": {
   "shadows": "ipyparallel.AsyncMapResult"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.AsyncResult": {
  "data": {
   "shadows": "ipyparallel.AsyncResult"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.TestView": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "ipyparallel.tests.test_view.TestView.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.TestView",
    "ipyparallel.tests.test_view.platform",
    "ipyparallel.tests.test_view.time",
    "super"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_abort": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ipyparallel.error.TaskAborted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_abort_all": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ipyparallel.error.TaskAborted",
    "ipyparallel.tests.test_view.time",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_displaypub": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.unicode_type",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_displaypub.publish": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "display",
    "ipyparallel.util.interactive",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_namedtuple": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.point"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_namedtuple.echoxy": {
  "data": {
   "lineno": 812
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_numpy": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.numpy",
    "numpy.testing.utils.assert_array_equal",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_numpy_object_dtype": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "dict",
    "int",
    "ipyparallel.tests.test_view.numpy",
    "numpy.testing.utils.assert_array_equal",
    "object",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_reference": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "id",
    "ipyparallel.Reference"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_tracked": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "echo",
    "ipyparallel.tests.test_view.zmq",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_apply_tracked.echo": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_can_dict_arg": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.Reference",
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_can_dict_kwarg": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.Reference",
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_can_list_arg": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "ipyparallel.Reference",
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_can_list_kwarg": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "ipyparallel.Reference",
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_compositeerror_render_exception": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython",
    "ipyparallel.error.CompositeError.tb_limit",
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_compositeerror_truncate": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "ipyparallel.error.CompositeError",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_data_pub": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_data_pub_single": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_eval_reference": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "echo",
    "ipyparallel.Reference",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "execute",
    "ipyparallel.AsyncResult",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_displaypub": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "ipython_genutils.py3compat.unicode_type",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_magic": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_raises": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_reply": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_reply_rich": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.tests.test_view.base64"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_reply_stdout": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_result": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_execute_silent": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_func_default_func": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_func_default_func.bar": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_func_default_func.foo": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_get_result": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ipyparallel.AsyncHubResult",
    "ipyparallel.Client",
    "ipyparallel.tests.test_view.time"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_importer": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "IPython.testing.decorators.known_failure_py3"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_importer.findall": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "globals",
    "ipyparallel.tests.test_view.re",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_len": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_magic_pylab": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "IPython.testing.decorators.skipif_not_matplotlib",
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "f",
    "list",
    "map",
    "r",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map.f": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map_empty_sequence": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map_iterable": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "iter",
    "list",
    "r",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map_numpy": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.numpy",
    "numpy.testing.utils.assert_array_equal",
    "r",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map_ref": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "ipyparallel.Reference",
    "len",
    "r",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_map_reference": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "ipyparallel.Reference",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_nested_getitem_setitem": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "ipyparallel.Reference",
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_function_defaults": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_function_defaults.echo": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_function_globals": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_function_globals.geta": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_numpy_nocopy": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "IPython.testing.decorators.known_failure_py3",
    "dict",
    "ipyparallel.Reference",
    "ipyparallel.tests.test_view.numpy",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_numpy_nocopy.check_writeable": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_pull": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.AsyncResult",
    "isinstance",
    "len",
    "list",
    "pull",
    "push",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_pull_function": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "execute",
    "pull",
    "push",
    "r",
    "testf"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_pull_function.testf": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_pull_recarray": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "float",
    "int",
    "ipyparallel.tests.test_view.numpy",
    "ipyparallel.util.interactive",
    "numpy.testing.utils.assert_array_equal",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_pull_timeseries": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.tests.test_view.pandas",
    "list",
    "range",
    "skip_without",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_push_tracked": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_reference_nameerror": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "NameError",
    "echo",
    "ipyparallel.Reference",
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_remote_reference": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ipyparallel.Reference"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_remoteerror_render_exception": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_return_namedtuple": {
  "data": {
   "lineno": 802
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_return_namedtuple.namedtuplify": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.point"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_run_newline": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "f",
    "ipyparallel.Reference",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_scatter_gather": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "NameError",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_scatter_gather_lazy": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_scatter_gather_nonblocking": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_scatter_gather_numpy": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.numpy",
    "numpy.testing.utils.assert_array_equal",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_scatter_gather_numpy_nonblocking": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ipyparallel.AsyncMapResult",
    "ipyparallel.AsyncResult",
    "ipyparallel.tests.test_view.numpy",
    "isinstance",
    "numpy.testing.utils.assert_array_equal",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_scatter_tracked": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.zmq",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_single_engine_map": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "list",
    "r",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_sync_imports": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_sync_imports.find_ipython": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "globals",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_sync_imports_quiet": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "IPython.utils.io.capture_output"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_sync_imports_quiet.find_ipython": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "globals",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_temp_flags": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_unicode_apply_arg": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ipyparallel.error.RemoteError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_unicode_apply_arg.check_unicode": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "bytes",
    "ipyparallel.util.interactive",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_unicode_apply_result": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "r"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_unicode_execute": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.sys"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_use_cloudpickle": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "ipyparallel.tests.test_view.sys",
    "len",
    "skip_without"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_use_cloudpickle.get_a": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.TestView.test_z_crash_mux": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ipyparallel.error.EngineError",
    "ipyparallel.tests.test_view.time",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.add_engines": {
  "data": {
   "shadows": "ipyparallel.tests.add_engines"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.utils.assert_array_equal"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.capture_output": {
  "data": {
   "shadows": "IPython.utils.io.capture_output"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.dec": {
  "data": {
   "shadows": "IPython.testing.decorators"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.error": {
  "data": {
   "shadows": "ipyparallel.error"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.interactive": {
  "data": {
   "shadows": "ipyparallel.util.interactive"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.pmod": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.point": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ipyparallel.tests.test_view.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.setup": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ipyparallel.tests.add_engines"
   ]
  },
  "type": "function"
 },
 "ipyparallel.tests.test_view.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.unicode_type": {
  "data": {
   "shadows": "ipython_genutils.py3compat.unicode_type"
  },
  "type": "import"
 },
 "ipyparallel.tests.test_view.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.tests.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "ipyparallel.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datetime.datetime.timezone.utc",
    "dateutil.tz.tzutc",
    "ipyparallel.util._patch_jupyter_client_dates",
    "ipyparallel.util.re",
    "set",
    "signal.SIGKILL"
   ]
  },
  "type": "module"
 },
 "ipyparallel.util.EnginePUBHandler": {
  "data": {
   "shadows": "ipyparallel.engine.log.EnginePUBHandler"
  },
  "type": "import"
 },
 "ipyparallel.util.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "ipyparallel.util.IOLoop": {
  "data": {
   "shadows": "tornado.ioloop.IOLoop"
  },
  "type": "import"
 },
 "ipyparallel.util.ISO8601": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "ipyparallel.util.ISO8601_PAT": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "ipyparallel.util.Namespace": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.util.Namespace.__getattr__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.Namespace.__setattr__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.Nanny": {
  "data": {
   "shadows": "distributed.Nanny"
  },
  "type": "import"
 },
 "ipyparallel.util.ReverseDict": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "ipyparallel.util.ReverseDict.__getitem__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "KeyError",
    "dict.__getitem__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.ReverseDict.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "dict.__init__",
    "ipython_genutils.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.ReverseDict.__setitem__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "KeyError",
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.ReverseDict.get": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.ReverseDict.pop": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict.pop"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.SIGABRT": {
  "data": {
   "shadows": "signal.SIGABRT"
  },
  "type": "import"
 },
 "ipyparallel.util.SIGINT": {
  "data": {
   "shadows": "signal.SIGINT"
  },
  "type": "import"
 },
 "ipyparallel.util.SIGKILL": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "ipyparallel.util.SIGTERM": {
  "data": {
   "shadows": "signal.SIGTERM"
  },
  "type": "import"
 },
 "ipyparallel.util.V": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "ipyparallel.util.Worker": {
  "data": {
   "shadows": "distributed.Worker"
  },
  "type": "import"
 },
 "ipyparallel.util._ensure_tzinfo": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dateutil.tz.tzlocal",
    "ipyparallel.util.warnings"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util._execute": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "exec",
    "globals",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util._parse_date": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "ipyparallel.util.ISO8601_PAT",
    "ipyparallel.util._ensure_tzinfo"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util._patch_jupyter_client_dates": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "hasattr",
    "ipyparallel.util.extract_dates",
    "ipyparallel.util.jupyter_client",
    "jupyter_client.session",
    "jupyter_client.session._save_extract_dates",
    "jupyter_client.session.extract_dates"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util._pull": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "eval",
    "globals",
    "ipyparallel.util.interactive",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util._push": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "exec",
    "globals",
    "ipyparallel.util.interactive"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util._random_ports": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "ipyparallel.util.become_dask_worker": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "IPython.get_ipython",
    "distributed.Nanny",
    "distributed.Worker",
    "getattr"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.compare_datetimes": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.connect_engine_logger": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "any",
    "ipyparallel.engine.log.EnginePUBHandler",
    "ipyparallel.util.integer_loglevel",
    "ipyparallel.util.logging",
    "ipyparallel.util.zmq",
    "isinstance",
    "zmq.log.handlers.PUBHandler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.connect_logger": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "any",
    "ipyparallel.util.integer_loglevel",
    "ipyparallel.util.logging",
    "ipyparallel.util.zmq",
    "isinstance",
    "zmq.log.handlers.PUBHandler"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ipyparallel.util.datetime.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "ipyparallel.util.dateutil_parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "ipyparallel.util.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "ipyparallel.util.disambiguate_ip_address": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ipyparallel.util.warnings",
    "jupyter_client.localinterfaces.is_public_ip",
    "jupyter_client.localinterfaces.localhost",
    "jupyter_client.localinterfaces.public_ips"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.disambiguate_url": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AssertionError",
    "ipyparallel.util.disambiguate_ip_address",
    "ipyparallel.util.split_url"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.ensure_timezone": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.extract_dates": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.util._parse_date",
    "ipython_genutils.py3compat.iteritems",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.generate_exec_key": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "f",
    "f.write",
    "ipyparallel.util.os",
    "ipyparallel.util.stat",
    "ipyparallel.util.uuid",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "ipyparallel.util.get_logger": {
  "data": {
   "shadows": "traitlets.log.get_logger"
  },
  "type": "import"
 },
 "ipyparallel.util.handlers": {
  "data": {
   "shadows": "zmq.log.handlers"
  },
  "type": "import"
 },
 "ipyparallel.util.int_keys": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "float",
    "int",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.integer_loglevel": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "int",
    "ipyparallel.util.logging",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.interactive": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "__import__",
    "f",
    "f.__code__",
    "f.__defaults__",
    "f.__module__",
    "f.__name__",
    "isinstance",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.is_public_ip": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.is_public_ip"
  },
  "type": "import"
 },
 "ipyparallel.util.is_url": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "ipyparallel.util.iteritems": {
  "data": {
   "shadows": "ipython_genutils.py3compat.iteritems"
  },
  "type": "import"
 },
 "ipyparallel.util.itervalues": {
  "data": {
   "shadows": "ipython_genutils.py3compat.itervalues"
  },
  "type": "import"
 },
 "ipyparallel.util.jupyter_client": {
  "data": {
   "shadows": "jupyter_client"
  },
  "type": "import"
 },
 "ipyparallel.util.local_logger": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "any",
    "ipyparallel.util.integer_loglevel",
    "ipyparallel.util.logging",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.localhost": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.localhost"
  },
  "type": "import"
 },
 "ipyparallel.util.log_errors": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception",
    "decorator.decorator",
    "f"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ipyparallel.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ipyparallel.util.public_ips": {
  "data": {
   "shadows": "jupyter_client.localinterfaces.public_ips"
  },
  "type": "import"
 },
 "ipyparallel.util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "ipyparallel.util.select_random_ports": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "enumerate",
    "ipyparallel.util._random_ports",
    "ipyparallel.util.socket",
    "range"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.session": {
  "data": {
   "shadows": "jupyter_client.session"
  },
  "type": "import"
 },
 "ipyparallel.util.set_hwm": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "getattr",
    "ipyparallel.util.zmq"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.signal": {
  "data": {
   "shadows": "signal.signal"
  },
  "type": "import"
 },
 "ipyparallel.util.signal_children": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "signal.SIGABRT",
    "signal.SIGINT",
    "signal.SIGTERM",
    "signal.signal"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.signal_children.terminate_children": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ipyparallel.util.sys",
    "signal.SIGINT",
    "traitlets.log.get_logger"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "ipyparallel.util.split_url": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "ipyparallel.util.stop_distributed_worker": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "IPython.get_ipython",
    "getattr",
    "tornado.ioloop.IOLoop.current"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "ipyparallel.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ipyparallel.util.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "ipyparallel.util.tzutc": {
  "data": {
   "shadows": "dateutil.tz.tzutc"
  },
  "type": "import"
 },
 "ipyparallel.util.utc": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ipyparallel.util.utcnow": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "ipyparallel.util.utc"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "ipyparallel.util.validate_url": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "int",
    "ipyparallel.util.re",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.validate_url_container": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict",
    "ipyparallel.util.validate_url",
    "ipython_genutils.py3compat.itervalues",
    "ipython_genutils.py3compat.string_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ipyparallel.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ipyparallel.util.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "ipyparallel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ipyparallel.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 }
}