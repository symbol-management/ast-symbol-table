{
 "opentelemetry.sdk.error_handler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.error_handler.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "opentelemetry.sdk.error_handler.DefaultErrorHandler": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "opentelemetry.sdk.error_handler.ErrorHandler"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.error_handler.DefaultErrorHandler._handle": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Exception",
    "opentelemetry.sdk.error_handler.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.ErrorHandler": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.error_handler.ErrorHandler._handle": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler.__enter__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler.__exit__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "error_handler_class",
    "error_handler_class.__name__",
    "issubclass",
    "opentelemetry.sdk.error_handler.DefaultErrorHandler",
    "opentelemetry.sdk.error_handler.logger",
    "pkg_resources.iter_entry_points"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler.__new__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "opentelemetry.sdk.error_handler.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "opentelemetry.sdk.error_handler.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "opentelemetry.sdk.error_handler.logger": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "opentelemetry.sdk.metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "opentelemetry.sdk.metrics.Counter",
    "opentelemetry.sdk.metrics.UpDownCounter",
    "opentelemetry.sdk.metrics.ValueRecorder",
    "opentelemetry.sdk.metrics.logging",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.metrics.Aggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.threading",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument._validate_update": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.decrease_ref_count": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.increase_ref_count": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.ref_count": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.release": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.update": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundCounter": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "opentelemetry.metrics.BoundCounter",
    "opentelemetry.sdk.metrics.BaseBoundInstrument"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BoundCounter._validate_update": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundCounter.add": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundUpDownCounter": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "opentelemetry.metrics.BoundUpDownCounter",
    "opentelemetry.sdk.metrics.BaseBoundInstrument"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BoundUpDownCounter.add": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundValueRecorder": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "opentelemetry.metrics.BoundValueRecorder",
    "opentelemetry.sdk.metrics.BaseBoundInstrument"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BoundValueRecorder.record": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.ConsoleMetricsExporter": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.Counter": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "opentelemetry.metrics.Counter",
    "opentelemetry.sdk.metrics.BoundCounter",
    "opentelemetry.sdk.metrics.Metric"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Counter.add": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.InstrumentationInfo": {
  "data": {
   "shadows": "opentelemetry.sdk.util.instrumentation.InstrumentationInfo"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.Meter": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "opentelemetry.metrics.Meter"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Meter.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.processor.Processor",
    "opentelemetry.sdk.metrics.threading",
    "opentelemetry.sdk.metrics.view.ViewManager",
    "set"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter._collect_metrics": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.Record"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter._collect_observers": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.Record"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.collect": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.create_counter": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.Counter",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.Counter",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.create_updowncounter": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.UpDownCounter",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.UpDownCounter",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.create_valuerecorder": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ValueRecorder",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.ValueRecorder",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.record_batch": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "opentelemetry.metrics.Metric",
    "opentelemetry.metrics.ValueT",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.register_sumobserver": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ObserverCallbackT",
    "opentelemetry.metrics.SumObserver",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.SumObserver",
    "str",
    "typing.Sequence",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.register_updownsumobserver": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ObserverCallbackT",
    "opentelemetry.metrics.UpDownSumObserver",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.UpDownSumObserver",
    "str",
    "typing.Sequence",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.register_valueobserver": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ObserverCallbackT",
    "opentelemetry.metrics.ValueObserver",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.ValueObserver",
    "str",
    "typing.Sequence",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.register_view": {
  "data": {
   "lineno": 524
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.unregister_observer": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "opentelemetry.metrics.Observer"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Meter.unregister_view": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "opentelemetry.metrics.MeterProvider"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.MeterProvider.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.sdk.metrics.atexit",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources.Resource.create",
    "set"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider.get_meter": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.Meter",
    "opentelemetry.sdk.metrics.logger",
    "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider.shutdown": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.atexit"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider.start_pipeline": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "float",
    "opentelemetry.metrics.Meter",
    "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter",
    "opentelemetry.sdk.metrics.export.MetricsExporter",
    "opentelemetry.sdk.metrics.export.controller.PushController"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Metric": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "opentelemetry.metrics.Metric",
    "opentelemetry.sdk.metrics.BaseBoundInstrument"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Metric.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.threading",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Metric.__repr__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Metric.bind": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.BaseBoundInstrument",
    "opentelemetry.sdk.util.get_dict_as_key",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MetricT": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "opentelemetry.sdk.metrics.MetricsExporter": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.MetricsExporter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.Observer": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "opentelemetry.metrics.Observer"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Observer.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ObserverCallbackT",
    "opentelemetry.metrics.ValueT",
    "str",
    "typing.Sequence",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer.__repr__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer._validate_observe": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.logger",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer.observe": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.view.get_default_aggregator",
    "opentelemetry.sdk.util.get_dict_as_key",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer.run": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "opentelemetry.sdk.metrics.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Processor": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.processor.Processor"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.PushController": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.controller.PushController"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.Record": {
  "data": {
   "lineno": 328
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Record.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "opentelemetry.metrics.InstrumentT",
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Resource": {
  "data": {
   "shadows": "opentelemetry.sdk.resources.Resource"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.SumObserver": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "opentelemetry.metrics.SumObserver",
    "opentelemetry.sdk.metrics.Observer"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.SumObserver._validate_observe": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.metrics.ValueT",
    "opentelemetry.sdk.metrics.logger",
    "str",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.UpDownCounter": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "opentelemetry.metrics.UpDownCounter",
    "opentelemetry.sdk.metrics.BoundUpDownCounter",
    "opentelemetry.sdk.metrics.Metric"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.UpDownCounter.add": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.UpDownSumObserver": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "opentelemetry.metrics.UpDownSumObserver",
    "opentelemetry.sdk.metrics.Observer"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.ValueObserver": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueObserver",
    "opentelemetry.sdk.metrics.Observer"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.ValueRecorder": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueRecorder",
    "opentelemetry.sdk.metrics.BoundValueRecorder",
    "opentelemetry.sdk.metrics.Metric"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.ValueRecorder.record": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.ViewData": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.view.ViewData"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.ViewManager": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.view.ViewManager"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.Aggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.MetricsExporter"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter.export": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.MetricRecord",
    "opentelemetry.sdk.metrics.export.MetricsExportResult",
    "print",
    "type",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.MetricRecord": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.MetricRecord.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "opentelemetry.metrics.InstrumentT",
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
    "opentelemetry.sdk.resources.Resource",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.MetricsExportResult": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.MetricsExporter": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.MetricsExporter.export": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.MetricRecord",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.MetricsExporter.shutdown": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.Resource": {
  "data": {
   "shadows": "opentelemetry.sdk.resources.Resource"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "opentelemetry.sdk.metrics.export.aggregate.logging"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.abc"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator._verify_type": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "opentelemetry.sdk.metrics.export.aggregate.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.merge": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "max",
    "opentelemetry.sdk.metrics.export.aggregate.abc"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.take_checkpoint": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.abc"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.update": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.abc",
    "opentelemetry.util.time_ns"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "all",
    "collections.OrderedDict",
    "len",
    "math.inf",
    "opentelemetry.sdk.metrics.export.aggregate.logger",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.merge": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.take_checkpoint": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.update": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.merge": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.take_checkpoint": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.update": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_TYPE",
    "collections.namedtuple",
    "math.inf",
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.merge": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "max",
    "min",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.take_checkpoint": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.update": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "max",
    "min",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.merge": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.take_checkpoint": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.update": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_TYPE",
    "collections.namedtuple",
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.merge": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "max",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.take_checkpoint": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.update": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate.inf": {
  "data": {
   "shadows": "math.inf"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "opentelemetry.sdk.metrics.export.aggregate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.aggregate.time_ns": {
  "data": {
   "shadows": "opentelemetry.util.time_ns"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.controller": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.controller.Meter": {
  "data": {
   "shadows": "opentelemetry.metrics.Meter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.controller.MetricsExporter": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.MetricsExporter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.controller.threading"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float",
    "opentelemetry.metrics.Meter",
    "opentelemetry.sdk.metrics.export.MetricsExporter",
    "opentelemetry.sdk.metrics.export.controller.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.run": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.shutdown": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.tick": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "opentelemetry.context.attach",
    "opentelemetry.context.detach",
    "opentelemetry.context.set_value"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.attach": {
  "data": {
   "shadows": "opentelemetry.context.attach"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.controller.detach": {
  "data": {
   "shadows": "opentelemetry.context.detach"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.controller.set_value": {
  "data": {
   "shadows": "opentelemetry.context.set_value"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.controller.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.MetricsExporter"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.clear": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.export": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.MetricRecord",
    "opentelemetry.sdk.metrics.export.MetricsExportResult",
    "opentelemetry.sdk.metrics.export.MetricsExportResult.FAILURE",
    "opentelemetry.sdk.metrics.export.MetricsExportResult.SUCCESS",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.get_exported_metrics": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.shutdown": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.MetricRecord": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.MetricRecord"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.MetricsExportResult": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.MetricsExportResult"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.MetricsExporter": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.MetricsExporter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.metrics_api": {
  "data": {
   "shadows": "opentelemetry.metrics"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.processor": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.processor.MetricRecord": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.MetricRecord"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.sdk.resources.Resource"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.checkpoint_set": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.MetricRecord",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.finished_collection": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.process": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "opentelemetry.sdk.util.get_dict_as_key"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Resource": {
  "data": {
   "shadows": "opentelemetry.sdk.resources.Resource"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.processor.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.export.processor.get_dict_as_key": {
  "data": {
   "shadows": "opentelemetry.sdk.util.get_dict_as_key"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.get_default_aggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.view.get_default_aggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.get_dict_as_key": {
  "data": {
   "shadows": "opentelemetry.sdk.util.get_dict_as_key"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "opentelemetry.sdk.metrics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.metrics_api": {
  "data": {
   "shadows": "opentelemetry.metrics"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "opentelemetry.sdk.metrics.view.logging"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.metrics.view.Aggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.Aggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.Counter": {
  "data": {
   "shadows": "opentelemetry.metrics.Counter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.InstrumentT": {
  "data": {
   "shadows": "opentelemetry.metrics.InstrumentT"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.LastValueAggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.MinMaxSumCountAggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.SumAggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.SumAggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.SumObserver": {
  "data": {
   "shadows": "opentelemetry.metrics.SumObserver"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.UpDownCounter": {
  "data": {
   "shadows": "opentelemetry.metrics.UpDownCounter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.UpDownSumObserver": {
  "data": {
   "shadows": "opentelemetry.metrics.UpDownSumObserver"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.ValueObserver": {
  "data": {
   "shadows": "opentelemetry.metrics.ValueObserver"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.ValueObserverAggregator": {
  "data": {
   "shadows": "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.ValueRecorder": {
  "data": {
   "shadows": "opentelemetry.metrics.ValueRecorder"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.ValueT": {
  "data": {
   "shadows": "opentelemetry.metrics.ValueT"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.View": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.View.__eq__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.View.__hash__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.View.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dict",
    "opentelemetry.metrics.InstrumentT",
    "opentelemetry.sdk.metrics.view.ViewConfig",
    "set",
    "sorted",
    "str",
    "type",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.View.get_view_data": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.view.ViewConfig",
    "opentelemetry.sdk.metrics.view.ViewData",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewConfig": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.ViewData": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.ViewData.__eq__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewData.__hash__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewData.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewData.record": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "opentelemetry.metrics.ValueT"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "collections.defaultdict",
    "opentelemetry.sdk.metrics.view.threading",
    "set"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.get_view_datas": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "get_default_aggregator",
    "opentelemetry.sdk.metrics.view.View",
    "set"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.register_view": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.view.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.unregister_view": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "opentelemetry.sdk.metrics.view.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.get_default_aggregator": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "issubclass",
    "opentelemetry.metrics.Counter",
    "opentelemetry.metrics.InstrumentT",
    "opentelemetry.metrics.SumObserver",
    "opentelemetry.metrics.UpDownCounter",
    "opentelemetry.metrics.UpDownSumObserver",
    "opentelemetry.metrics.ValueObserver",
    "opentelemetry.metrics.ValueRecorder",
    "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
    "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator",
    "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator",
    "opentelemetry.sdk.metrics.export.aggregate.SumAggregator",
    "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator",
    "opentelemetry.sdk.metrics.view.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "opentelemetry.sdk.metrics.view.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "opentelemetry.sdk.metrics.view.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "float",
    "int",
    "opentelemetry.sdk.resources.LabelValue",
    "opentelemetry.sdk.resources.OPENTELEMETRY_SDK_VERSION",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources.TELEMETRY_SDK_LANGUAGE",
    "opentelemetry.sdk.resources.TELEMETRY_SDK_NAME",
    "opentelemetry.sdk.resources.TELEMETRY_SDK_VERSION",
    "opentelemetry.sdk.resources.logging",
    "opentelemetry.sdk.resources.pkg_resources",
    "opentelemetry.sdk.resources.typing",
    "str"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.resources.Attributes": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.LabelValue": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.OPENTELEMETRY_SDK_VERSION": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.OTELResourceDetector": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.ResourceDetector"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.resources.OTELResourceDetector.detect": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.OTEL_RESOURCE_ATTRIBUTES",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources.os"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.OTEL_RESOURCE_ATTRIBUTES": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.Resource": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "opentelemetry.sdk.resources.Resource.__eq__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "object",
    "opentelemetry.sdk.resources.Resource"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.__hash__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "hash",
    "json.dumps"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.Attributes"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.attributes": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.Attributes",
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.create": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "OTELResourceDetector",
    "opentelemetry.sdk.resources.Attributes",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources.typing",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.create_empty": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.merge": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.Resource"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.ResourceDetector": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.abc"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.resources.ResourceDetector.__init__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.ResourceDetector.detect": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "NotImplementedError",
    "opentelemetry.sdk.resources.abc"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.TELEMETRY_SDK_LANGUAGE": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.TELEMETRY_SDK_NAME": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.TELEMETRY_SDK_VERSION": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources._DEFAULT_RESOURCE": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources._EMPTY_RESOURCE": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources.dumps": {
  "data": {
   "shadows": "json.dumps"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources.get_aggregated_resources": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "opentelemetry.sdk.resources.OTELResourceDetector",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources._EMPTY_RESOURCE",
    "opentelemetry.sdk.resources.logger",
    "opentelemetry.sdk.resources.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.resources.logger": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "opentelemetry.sdk.resources.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "opentelemetry.sdk.resources.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "float",
    "int",
    "opentelemetry.sdk.trace.logging",
    "str"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.trace.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.BoundedDict": {
  "data": {
   "shadows": "opentelemetry.sdk.util.BoundedDict"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.BoundedList": {
  "data": {
   "shadows": "opentelemetry.sdk.util.BoundedList"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "opentelemetry.sdk.trace.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor._submit_and_await": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "func",
    "opentelemetry.sdk.trace.SpanProcessor",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.add_span_processor": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.force_flush": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.on_end": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.on_start": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "opentelemetry.context.Context",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.shutdown": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.EXCEPTION_STATUS_FIELD": {
  "data": {
   "shadows": "opentelemetry.trace.status.EXCEPTION_STATUS_FIELD"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Event": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.EventBase"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.Event.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "int",
    "opentelemetry.util.types.Attributes",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Event.attributes": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "opentelemetry.util.types.Attributes",
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.abc"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.EventBase.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "int",
    "opentelemetry.util.time_ns",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase.attributes": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.abc",
    "opentelemetry.util.types.Attributes",
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase.name": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase.timestamp": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.InstrumentationInfo": {
  "data": {
   "shadows": "opentelemetry.sdk.util.instrumentation.InstrumentationInfo"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.MAX_NUM_ATTRIBUTES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.MAX_NUM_EVENTS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.MAX_NUM_LINKS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.MappingProxyType": {
  "data": {
   "shadows": "types.MappingProxyType"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.MutableSequence": {
  "data": {
   "shadows": "typing.MutableSequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Resource": {
  "data": {
   "shadows": "opentelemetry.sdk.resources.Resource"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.SPAN_KEY": {
  "data": {
   "shadows": "opentelemetry.trace.propagation.SPAN_KEY"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Span": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "opentelemetry.trace.Span"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.Span.__exit__": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "BaseException",
    "opentelemetry.trace.status.Status",
    "opentelemetry.trace.status.StatusCode.ERROR",
    "opentelemetry.trace.status.StatusCode.UNSET",
    "super",
    "types.TracebackType",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "bool",
    "events",
    "opentelemetry.context",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources.Resource.create",
    "opentelemetry.sdk.trace.Event",
    "opentelemetry.sdk.trace.MAX_NUM_ATTRIBUTES",
    "opentelemetry.sdk.trace.MAX_NUM_LINKS",
    "opentelemetry.sdk.trace.SpanProcessor",
    "opentelemetry.sdk.trace._create_immutable_attributes",
    "opentelemetry.sdk.trace._filter_attribute_values",
    "opentelemetry.sdk.trace.sampling.Sampler",
    "opentelemetry.sdk.trace.threading",
    "opentelemetry.sdk.util.BoundedDict.from_map",
    "opentelemetry.sdk.util.BoundedList.from_seq",
    "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
    "opentelemetry.trace.Link",
    "opentelemetry.trace.SpanContext",
    "opentelemetry.trace.SpanKind",
    "opentelemetry.trace.SpanKind.INTERNAL",
    "opentelemetry.trace.status.Status",
    "opentelemetry.trace.status.StatusCode.UNSET",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.__new__": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "TypeError",
    "opentelemetry.sdk.trace.Span",
    "super"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.__repr__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._add_event": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.EventBase",
    "opentelemetry.sdk.trace._check_span_ended"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_attributes": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "isinstance",
    "opentelemetry.sdk.util.BoundedDict",
    "staticmethod",
    "types.MappingProxyType"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_context": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "opentelemetry.context.span_id",
    "opentelemetry.context.trace_id",
    "opentelemetry.context.trace_state",
    "opentelemetry.trace.format_span_id",
    "opentelemetry.trace.format_trace_id",
    "repr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_events": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "events",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.util.ns_to_iso_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_links": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "opentelemetry.sdk.trace.Span",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._new_attributes": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.MAX_NUM_ATTRIBUTES",
    "opentelemetry.sdk.util.BoundedDict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._new_events": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.MAX_NUM_EVENTS",
    "opentelemetry.sdk.util.BoundedList",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._new_links": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.MAX_NUM_LINKS",
    "opentelemetry.sdk.util.BoundedList",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.add_event": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "int",
    "opentelemetry.sdk.trace.Event",
    "opentelemetry.sdk.trace._create_immutable_attributes",
    "opentelemetry.sdk.trace._filter_attribute_values",
    "opentelemetry.util.time_ns",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.end": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "opentelemetry.sdk.trace.logger",
    "opentelemetry.util.time_ns",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.end_time": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.get_span_context": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.is_recording": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.record_exception": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "Exception",
    "opentelemetry.sdk.trace.traceback",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.set_attribute": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "opentelemetry.sdk.trace._is_valid_attribute_value",
    "opentelemetry.sdk.trace.logger",
    "opentelemetry.util.types.AttributeValue",
    "str",
    "tuple",
    "typing.MutableSequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.set_status": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace._check_span_ended",
    "opentelemetry.trace.Status"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.start": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "int",
    "opentelemetry.context.Context",
    "opentelemetry.sdk.trace.logger",
    "opentelemetry.util.time_ns",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.start_time": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.to_json": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.json",
    "opentelemetry.sdk.util.ns_to_iso_str",
    "opentelemetry.trace.SpanContext",
    "opentelemetry.trace.format_span_id",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.update_name": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace._check_span_ended",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanContext": {
  "data": {
   "shadows": "opentelemetry.trace.SpanContext"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.SpanProcessor": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.SpanProcessor.force_flush": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor.on_end": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor.on_start": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "opentelemetry.context.Context",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor.shutdown": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Status": {
  "data": {
   "shadows": "opentelemetry.trace.status.Status"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.StatusCode": {
  "data": {
   "shadows": "opentelemetry.trace.status.StatusCode"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.add_span_processor": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.force_flush": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "int",
    "opentelemetry.util.time_ns"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.on_end": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.on_start": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "opentelemetry.context.Context",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.shutdown": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Tracer": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "opentelemetry.trace.Tracer"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.Tracer.__init__": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor",
    "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor",
    "opentelemetry.sdk.trace.sampling.Sampler",
    "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
    "opentelemetry.trace.IdsGenerator",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer.start_as_current_span": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.context",
    "opentelemetry.context.Context",
    "opentelemetry.trace.Link",
    "opentelemetry.trace.Span",
    "opentelemetry.trace.SpanKind",
    "opentelemetry.trace.SpanKind.INTERNAL",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Iterator",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer.start_span": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "int",
    "isinstance",
    "opentelemetry.context",
    "opentelemetry.context.Context",
    "opentelemetry.sdk.trace._Span",
    "opentelemetry.trace.DefaultSpan",
    "opentelemetry.trace.Link",
    "opentelemetry.trace.Span",
    "opentelemetry.trace.SpanContext",
    "opentelemetry.trace.SpanKind",
    "opentelemetry.trace.SpanKind.INTERNAL",
    "opentelemetry.trace.TraceFlags",
    "opentelemetry.trace.TraceFlags.DEFAULT",
    "opentelemetry.trace.TraceFlags.SAMPLED",
    "opentelemetry.trace.get_current_span",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer.use_span": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "contextlib.contextmanager",
    "getattr",
    "isinstance",
    "opentelemetry.context.attach",
    "opentelemetry.context.detach",
    "opentelemetry.context.set_value",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.trace.Span",
    "opentelemetry.trace.propagation.SPAN_KEY",
    "opentelemetry.trace.status.EXCEPTION_STATUS_FIELD",
    "opentelemetry.trace.status.Status",
    "opentelemetry.trace.status.StatusCode.ERROR",
    "opentelemetry.trace.status.StatusCode.UNSET",
    "type",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "opentelemetry.trace.TracerProvider"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.TracerProvider.__init__": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "bool",
    "opentelemetry.sdk.resources.Resource",
    "opentelemetry.sdk.resources.Resource.create",
    "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor",
    "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor",
    "opentelemetry.sdk.trace.atexit",
    "opentelemetry.sdk.trace.sampling.DEFAULT_ON",
    "opentelemetry.sdk.trace.sampling.Sampler",
    "opentelemetry.trace.IdsGenerator",
    "opentelemetry.trace.RandomIdsGenerator",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.add_span_processor": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.force_flush": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.get_tracer": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.Tracer",
    "opentelemetry.sdk.trace.logger",
    "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.shutdown": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.atexit"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.VALID_ATTR_VALUE_TYPES": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace._Span": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.Span"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace._check_span_ended": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace._check_span_ended.wrapper": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "opentelemetry.sdk.trace.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace._create_immutable_attributes": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "types.MappingProxyType"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace._filter_attribute_values": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "opentelemetry.sdk.trace._is_valid_attribute_value",
    "opentelemetry.util.types.Attributes",
    "tuple",
    "typing.MutableSequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace._is_valid_attribute_value": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "opentelemetry.sdk.trace.VALID_ATTR_VALUE_TYPES",
    "opentelemetry.sdk.trace.logger",
    "opentelemetry.util.types.AttributeValue",
    "type",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.context_api": {
  "data": {
   "shadows": "opentelemetry.context"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "opentelemetry.sdk.trace.export.logging"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "opentelemetry.configuration.Configuration",
    "opentelemetry.sdk.trace.export.SpanExporter",
    "opentelemetry.sdk.trace.export.collections",
    "opentelemetry.sdk.trace.export.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._drain_queue": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._export": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export._FlushRequest",
    "opentelemetry.sdk.trace.export.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._export_batch": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "Exception",
    "int",
    "opentelemetry.context.attach",
    "opentelemetry.context.detach",
    "opentelemetry.context.set_value",
    "opentelemetry.sdk.trace.export.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._get_and_unset_flush_request": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "len",
    "opentelemetry.sdk.trace.export._FlushRequest",
    "opentelemetry.sdk.trace.export.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._get_or_create_flush_request": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export._FlushRequest"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._notify_flush_request_finished": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export._FlushRequest",
    "opentelemetry.sdk.trace.export.typing",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.force_flush": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "bool",
    "int",
    "opentelemetry.sdk.trace.export.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.on_end": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.on_start": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "opentelemetry.context.Context",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.shutdown": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.worker": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "opentelemetry.util.time_ns"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.Configuration": {
  "data": {
   "shadows": "opentelemetry.configuration.Configuration"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.ConsoleSpanExporter": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export.SpanExporter"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.ConsoleSpanExporter.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.os",
    "opentelemetry.sdk.trace.export.sys",
    "opentelemetry.sdk.trace.export.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.ConsoleSpanExporter.export": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.SpanExportResult",
    "opentelemetry.sdk.trace.export.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.Context": {
  "data": {
   "shadows": "opentelemetry.context.Context"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.SpanProcessor"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export.SpanExporter"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.force_flush": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.on_end": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "opentelemetry.context.attach",
    "opentelemetry.context.detach",
    "opentelemetry.context.set_value",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.logger"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.on_start": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "opentelemetry.context.Context",
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.shutdown": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.Span": {
  "data": {
   "shadows": "opentelemetry.sdk.trace.Span"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.SpanExportResult": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.SpanExporter": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.SpanExporter.export": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SpanExporter.shutdown": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SpanProcessor": {
  "data": {
   "shadows": "opentelemetry.sdk.trace.SpanProcessor"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export._FlushRequest": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export._FlushRequest.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.attach": {
  "data": {
   "shadows": "opentelemetry.context.attach"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.detach": {
  "data": {
   "shadows": "opentelemetry.context.detach"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export.SpanExporter"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.export.in_memory_span_exporter.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.clear": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.export": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.Span",
    "opentelemetry.sdk.trace.export.SpanExportResult",
    "opentelemetry.sdk.trace.export.SpanExportResult.FAILURE",
    "opentelemetry.sdk.trace.export.SpanExportResult.SUCCESS",
    "opentelemetry.sdk.trace.export.in_memory_span_exporter.typing"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.get_finished_spans": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.shutdown": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.Span": {
  "data": {
   "shadows": "opentelemetry.sdk.trace.Span"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.SpanExportResult": {
  "data": {
   "shadows": "opentelemetry.sdk.trace.export.SpanExportResult"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.SpanExporter": {
  "data": {
   "shadows": "opentelemetry.sdk.trace.export.SpanExporter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.set_value": {
  "data": {
   "shadows": "opentelemetry.context.set_value"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.time_ns": {
  "data": {
   "shadows": "opentelemetry.util.time_ns"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.export.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.trace.propagation.b3_format": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.B3Format": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "opentelemetry.trace.propagation.textmap.TextMapPropagator",
    "re.compile",
    "set"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.B3Format.extract": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_extract_first_element",
    "format_span_id",
    "format_trace_id",
    "int",
    "len",
    "opentelemetry.context.Context",
    "opentelemetry.sdk.trace.propagation.b3_format.typing",
    "opentelemetry.trace.DefaultSpan",
    "opentelemetry.trace.INVALID_SPAN",
    "opentelemetry.trace.INVALID_SPAN_ID",
    "opentelemetry.trace.INVALID_TRACE_ID",
    "opentelemetry.trace.SpanContext",
    "opentelemetry.trace.TraceFlags",
    "opentelemetry.trace.TraceFlags.SAMPLED",
    "opentelemetry.trace.TraceState",
    "opentelemetry.trace.get_tracer_provider",
    "opentelemetry.trace.propagation.textmap.Getter",
    "opentelemetry.trace.propagation.textmap.TextMapPropagatorT",
    "opentelemetry.trace.set_span_in_context"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.B3Format.inject": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "format_span_id",
    "format_trace_id",
    "getattr",
    "opentelemetry.context.Context",
    "opentelemetry.sdk.trace.propagation.b3_format.typing",
    "opentelemetry.trace.INVALID_SPAN_CONTEXT",
    "opentelemetry.trace.TraceFlags.SAMPLED",
    "opentelemetry.trace.get_current_span",
    "opentelemetry.trace.propagation.textmap.Setter",
    "opentelemetry.trace.propagation.textmap.TextMapPropagatorT",
    "set_in_carrier"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.Context": {
  "data": {
   "shadows": "opentelemetry.context.Context"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.Getter": {
  "data": {
   "shadows": "opentelemetry.trace.propagation.textmap.Getter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.Setter": {
  "data": {
   "shadows": "opentelemetry.trace.propagation.textmap.Setter"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.TextMapPropagator": {
  "data": {
   "shadows": "opentelemetry.trace.propagation.textmap.TextMapPropagator"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.TextMapPropagatorT": {
  "data": {
   "shadows": "opentelemetry.trace.propagation.textmap.TextMapPropagatorT"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format._extract_first_element": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "iter",
    "next",
    "opentelemetry.sdk.trace.propagation.b3_format.typing",
    "opentelemetry.trace.propagation.textmap.TextMapPropagatorT"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.format_span_id": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "format",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.format_trace_id": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "format",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.re_compile": {
  "data": {
   "shadows": "re.compile"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.trace": {
  "data": {
   "shadows": "opentelemetry.trace"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.propagation.b3_format.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling": {
  "data": {
   "shadows": "opentelemetry.sdk.trace.sampling"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.ALWAYS_OFF": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.sampling.ALWAYS_ON": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.sampling.Attributes": {
  "data": {
   "shadows": "opentelemetry.util.types.Attributes"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.Context": {
  "data": {
   "shadows": "opentelemetry.context.Context"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.DEFAULT_OFF": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.sampling.DEFAULT_ON": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "opentelemetry.sdk.trace.sampling.Decision": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.enum"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.Decision.is_recording": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Decision"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Decision.is_sampled": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Decision"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Link": {
  "data": {
   "shadows": "opentelemetry.trace.Link"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.MappingProxyType": {
  "data": {
   "shadows": "types.MappingProxyType"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Sampler"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Sampler"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased.get_description": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased.should_sample": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "int",
    "opentelemetry.sdk.trace.sampling.Decision",
    "opentelemetry.sdk.trace.sampling.SamplingResult",
    "opentelemetry.trace.get_current_span",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Sampler": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.abc"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.Sampler.get_description": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.abc",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Sampler.should_sample": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "opentelemetry.sdk.trace.sampling.abc",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.SamplingResult": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.SamplingResult.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Decision",
    "opentelemetry.util.types.Attributes",
    "types.MappingProxyType"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.SamplingResult.__repr__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Sampler"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler.__init__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler.get_description": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Decision",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler.should_sample": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "opentelemetry.sdk.trace.sampling.Decision",
    "opentelemetry.sdk.trace.sampling.SamplingResult",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "opentelemetry.sdk.trace.sampling.Sampler"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.bound": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.get_bound_for_rate": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.get_description": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.rate": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.should_sample": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "int",
    "opentelemetry.sdk.trace.sampling.Decision",
    "opentelemetry.sdk.trace.sampling.SamplingResult",
    "opentelemetry.util.types.Attributes",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.sampling.get_current_span": {
  "data": {
   "shadows": "opentelemetry.trace.get_current_span"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.time_ns": {
  "data": {
   "shadows": "opentelemetry.util.time_ns"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.trace_api": {
  "data": {
   "shadows": "opentelemetry.trace"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.types": {
  "data": {
   "shadows": "opentelemetry.util.types"
  },
  "type": "import"
 },
 "opentelemetry.sdk.trace.util": {
  "data": {
   "shadows": "opentelemetry.sdk.util"
  },
  "type": "import"
 },
 "opentelemetry.sdk.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "opentelemetry.sdk.util.BoundedDict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.util.BoundedDict.__delitem__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__getitem__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "int",
    "isinstance",
    "opentelemetry.sdk.util.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__iter__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__len__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__repr__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__setitem__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "iter",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.from_map": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "collections.OrderedDict",
    "len"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "collections.Sequence"
   ]
  },
  "type": "class"
 },
 "opentelemetry.sdk.util.BoundedList.__getitem__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "collections.deque",
    "opentelemetry.sdk.util.threading"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__iter__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "collections.deque",
    "iter"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__len__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__repr__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.append": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.extend": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.from_seq": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "collections.deque",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "opentelemetry.sdk.util.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "opentelemetry.sdk.util.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "opentelemetry.sdk.util.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "opentelemetry.sdk.util.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "opentelemetry.sdk.util.get_dict_as_key": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__eq__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__hash__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__lt__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplemented",
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__repr__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.name": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.version": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.ns_to_iso_str": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "opentelemetry.sdk.util.datetime"
   ]
  },
  "type": "function"
 },
 "opentelemetry.sdk.util.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opentelemetry.sdk.version": {
  "data": {},
  "type": "module"
 },
 "opentelemetry.sdk.version.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 }
}