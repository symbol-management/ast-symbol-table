{
 "opentelemetry.sdk.error_handler": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.error_handler.DefaultErrorHandler": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.error_handler.DefaultErrorHandler._handle": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.ErrorHandler": {
  "lineno": 70,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.error_handler.ErrorHandler._handle": {
  "lineno": 71,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler.__enter__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler.__exit__": {
  "lineno": 113,
  "symbols_in_volume": [
   "pkg_resources.iter_entry_points"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.error_handler.GlobalErrorHandler.__new__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.Accumulation": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Accumulation.__init__": {
  "lineno": 333,
  "symbols_in_volume": [
   "opentelemetry.metrics.InstrumentT",
   "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator": {
  "lineno": 344,
  "symbols_in_volume": [
   "opentelemetry.metrics.Meter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Accumulator.__init__": {
  "lineno": 352,
  "symbols_in_volume": [
   "opentelemetry.sdk.metrics.export.processor.Processor",
   "opentelemetry.sdk.metrics.view.ViewManager",
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator._register_instrument": {
  "lineno": 363,
  "symbols_in_volume": [
   "opentelemetry.metrics.Metric",
   "opentelemetry.metrics.Observer",
   "typing.Union"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.collect": {
  "lineno": 376,
  "symbols_in_volume": [
   "opentelemetry.metrics.Metric",
   "opentelemetry.metrics.Observer"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.create_counter": {
  "lineno": 429,
  "symbols_in_volume": [
   "opentelemetry.metrics.Counter",
   "opentelemetry.metrics.ValueT",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.create_updowncounter": {
  "lineno": 444,
  "symbols_in_volume": [
   "opentelemetry.metrics.UpDownCounter",
   "opentelemetry.metrics.ValueT",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.create_valuerecorder": {
  "lineno": 459,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueRecorder",
   "opentelemetry.metrics.ValueT",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.record_batch": {
  "lineno": 418,
  "symbols_in_volume": [
   "opentelemetry.metrics.Metric",
   "opentelemetry.metrics.ValueT",
   "typing.Dict",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.register_sumobserver": {
  "lineno": 474,
  "symbols_in_volume": [
   "opentelemetry.metrics.ObserverCallbackT",
   "opentelemetry.metrics.SumObserver",
   "opentelemetry.metrics.ValueT",
   "typing.Sequence",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.register_updownsumobserver": {
  "lineno": 497,
  "symbols_in_volume": [
   "opentelemetry.metrics.ObserverCallbackT",
   "opentelemetry.metrics.UpDownSumObserver",
   "opentelemetry.metrics.ValueT",
   "typing.Sequence",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.register_valueobserver": {
  "lineno": 520,
  "symbols_in_volume": [
   "opentelemetry.metrics.ObserverCallbackT",
   "opentelemetry.metrics.ValueObserver",
   "opentelemetry.metrics.ValueT",
   "typing.Sequence",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.register_view": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.unregister_observer": {
  "lineno": 543,
  "symbols_in_volume": [
   "opentelemetry.metrics.Observer"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Accumulator.unregister_view": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "threading.Lock",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument._validate_update": {
  "lineno": 61,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.decrease_ref_count": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.increase_ref_count": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.ref_count": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.release": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BaseBoundInstrument.update": {
  "lineno": 72,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundCounter": {
  "lineno": 94,
  "symbols_in_volume": [
   "opentelemetry.metrics.BoundCounter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BoundCounter._validate_update": {
  "lineno": 100,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundCounter.add": {
  "lineno": 95,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundUpDownCounter": {
  "lineno": 113,
  "symbols_in_volume": [
   "opentelemetry.metrics.BoundUpDownCounter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BoundUpDownCounter.add": {
  "lineno": 114,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.BoundValueRecorder": {
  "lineno": 120,
  "symbols_in_volume": [
   "opentelemetry.metrics.BoundValueRecorder"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.BoundValueRecorder.record": {
  "lineno": 121,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Counter": {
  "lineno": 179,
  "symbols_in_volume": [
   "opentelemetry.metrics.Counter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Counter.add": {
  "lineno": 185,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "typing.Dict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider": {
  "lineno": 555,
  "symbols_in_volume": [
   "opentelemetry.metrics.MeterProvider"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.MeterProvider.__init__": {
  "lineno": 565,
  "symbols_in_volume": [
   "atexit.register",
   "opentelemetry.sdk.resources.Resource",
   "opentelemetry.sdk.resources.Resource.create"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider.get_meter": {
  "lineno": 579,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.instrumentation.InstrumentationInfo"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider.shutdown": {
  "lineno": 614,
  "symbols_in_volume": [
   "atexit.unregister"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.MeterProvider.start_pipeline": {
  "lineno": 595,
  "symbols_in_volume": [
   "opentelemetry.metrics.Meter",
   "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter",
   "opentelemetry.sdk.metrics.export.MetricsExporter",
   "opentelemetry.sdk.metrics.export.controller.PushController"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Metric": {
  "lineno": 127,
  "symbols_in_volume": [
   "opentelemetry.metrics.Metric"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Metric.__init__": {
  "lineno": 142,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "threading.Lock",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Metric.__repr__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Metric.bind": {
  "lineno": 160,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.get_dict_as_key",
   "typing.Dict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer": {
  "lineno": 228,
  "symbols_in_volume": [
   "opentelemetry.metrics.Observer"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.Observer.__init__": {
  "lineno": 237,
  "symbols_in_volume": [
   "opentelemetry.metrics.ObserverCallbackT",
   "opentelemetry.metrics.ValueT",
   "typing.Sequence",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer.__repr__": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer._validate_observe": {
  "lineno": 273,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer.observe": {
  "lineno": 259,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "opentelemetry.sdk.metrics.view.get_default_aggregator",
   "opentelemetry.sdk.util.get_dict_as_key",
   "typing.Dict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.Observer.run": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.SumObserver": {
  "lineno": 303,
  "symbols_in_volume": [
   "opentelemetry.metrics.SumObserver"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.SumObserver._validate_observe": {
  "lineno": 306,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.UpDownCounter": {
  "lineno": 194,
  "symbols_in_volume": [
   "opentelemetry.metrics.UpDownCounter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.UpDownCounter.add": {
  "lineno": 200,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "typing.Dict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.UpDownSumObserver": {
  "lineno": 322,
  "symbols_in_volume": [
   "opentelemetry.metrics.UpDownSumObserver"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.ValueObserver": {
  "lineno": 326,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueObserver"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.ValueRecorder": {
  "lineno": 209,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueRecorder"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.ValueRecorder.record": {
  "lineno": 214,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT",
   "typing.Dict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.ConsoleMetricsExporter.export": {
  "lineno": 78,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.ExportRecord": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.ExportRecord.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "opentelemetry.metrics.InstrumentT",
   "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
   "opentelemetry.sdk.resources.Resource",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.MetricsExportResult": {
  "lineno": 23,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.MetricsExporter": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.MetricsExporter.export": {
  "lineno": 49,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.MetricsExporter.shutdown": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator": {
  "lineno": 26,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "opentelemetry.util.time_ns",
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator._verify_type": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.merge": {
  "lineno": 57,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.take_checkpoint": {
  "lineno": 52,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.Aggregator.update": {
  "lineno": 44,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "opentelemetry.util.time_ns"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.__init__": {
  "lineno": 147,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "math.inf"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.merge": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.take_checkpoint": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.HistogramAggregator.update": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.__init__": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.merge": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.take_checkpoint": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator.update": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator": {
  "lineno": 105,
  "symbols_in_volume": [
   "collections.namedtuple",
   "math.inf"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.__init__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.merge": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.take_checkpoint": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator.update": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.merge": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.take_checkpoint": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.SumAggregator.update": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator": {
  "lineno": 225,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.__init__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.merge": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.take_checkpoint": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator.update": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController": {
  "lineno": 22,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.__init__": {
  "lineno": 36,
  "symbols_in_volume": [
   "opentelemetry.metrics.Meter",
   "opentelemetry.sdk.metrics.export.MetricsExporter",
   "threading.Event"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.run": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.shutdown": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.controller.PushController.tick": {
  "lineno": 55,
  "symbols_in_volume": [
   "opentelemetry.context.attach",
   "opentelemetry.context.detach",
   "opentelemetry.context.set_value"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter": {
  "lineno": 25,
  "symbols_in_volume": [
   "opentelemetry.sdk.metrics.export.MetricsExporter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.clear": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.export": {
  "lineno": 43,
  "symbols_in_volume": [
   "opentelemetry.sdk.metrics.export.ExportRecord",
   "opentelemetry.sdk.metrics.export.MetricsExportResult",
   "opentelemetry.sdk.metrics.export.MetricsExportResult.FAILURE",
   "opentelemetry.sdk.metrics.export.MetricsExportResult.SUCCESS",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.get_exported_metrics": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.in_memory_metrics_exporter.InMemoryMetricsExporter.shutdown": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "opentelemetry.sdk.resources.Resource"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.checkpoint_set": {
  "lineno": 39,
  "symbols_in_volume": [
   "opentelemetry.sdk.metrics.export.ExportRecord",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.finished_collection": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.export.processor.Processor.process": {
  "lineno": 64,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.get_dict_as_key"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.metrics.view.View": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.View.__eq__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.View.__hash__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.View.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "opentelemetry.metrics.InstrumentT",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.View.get_view_data": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewConfig": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.ViewData": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.ViewData.__eq__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewData.__hash__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewData.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewData.record": {
  "lineno": 46,
  "symbols_in_volume": [
   "opentelemetry.metrics.ValueT"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.__init__": {
  "lineno": 134,
  "symbols_in_volume": [
   "collections.defaultdict",
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.get_view_datas": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.register_view": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.ViewManager.unregister_view": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.metrics.view.get_default_aggregator": {
  "lineno": 170,
  "symbols_in_volume": [
   "opentelemetry.metrics.Counter",
   "opentelemetry.metrics.InstrumentT",
   "opentelemetry.metrics.SumObserver",
   "opentelemetry.metrics.UpDownCounter",
   "opentelemetry.metrics.UpDownSumObserver",
   "opentelemetry.metrics.ValueObserver",
   "opentelemetry.metrics.ValueRecorder",
   "opentelemetry.sdk.metrics.export.aggregate.Aggregator",
   "opentelemetry.sdk.metrics.export.aggregate.LastValueAggregator",
   "opentelemetry.sdk.metrics.export.aggregate.MinMaxSumCountAggregator",
   "opentelemetry.sdk.metrics.export.aggregate.SumAggregator",
   "opentelemetry.sdk.metrics.export.aggregate.ValueObserverAggregator"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.resources": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pkg_resources.get_distribution",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.resources.OTELResourceDetector": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.resources.OTELResourceDetector.detect": {
  "lineno": 162,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.resources.Resource.__eq__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.__hash__": {
  "lineno": 137,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.__init__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.attributes": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.create": {
  "lineno": 108,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.create_empty": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.resources.Resource.merge": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.resources.ResourceDetector": {
  "lineno": 151,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.resources.ResourceDetector.__init__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.resources.ResourceDetector.detect": {
  "lineno": 155,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.resources.get_aggregated_resources": {
  "lineno": 175,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "opentelemetry.configuration.Configuration",
   "opentelemetry.sdk.trace.sampling._get_from_env_or_default"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.__init__": {
  "lineno": 194,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor._submit_and_await": {
  "lineno": 208,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.add_span_processor": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.force_flush": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.on_end": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.on_start": {
  "lineno": 221,
  "symbols_in_volume": [
   "opentelemetry.context.Context",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ConcurrentMultiSpanProcessor.shutdown": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Event": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.Event.__init__": {
  "lineno": 299,
  "symbols_in_volume": [
   "opentelemetry.util.types.Attributes",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Event.attributes": {
  "lineno": 308,
  "symbols_in_volume": [
   "opentelemetry.util.types.Attributes"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase": {
  "lineno": 267,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.EventBase.__init__": {
  "lineno": 268,
  "symbols_in_volume": [
   "opentelemetry.util.time_ns",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase.attributes": {
  "lineno": 283,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "opentelemetry.util.types.Attributes"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase.name": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.EventBase.timestamp": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span": {
  "lineno": 394,
  "symbols_in_volume": [
   "opentelemetry.trace.Span"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.Span.__exit__": {
  "lineno": 667,
  "symbols_in_volume": [
   "opentelemetry.trace.status.Status",
   "opentelemetry.trace.status.StatusCode.ERROR",
   "opentelemetry.trace.status.StatusCode.UNSET",
   "types.TracebackType",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.__init__": {
  "lineno": 421,
  "symbols_in_volume": [
   "opentelemetry.context",
   "opentelemetry.sdk.resources.Resource",
   "opentelemetry.sdk.resources.Resource.create",
   "opentelemetry.sdk.trace.sampling.Sampler",
   "opentelemetry.sdk.util.BoundedDict.from_map",
   "opentelemetry.sdk.util.BoundedList.from_seq",
   "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
   "opentelemetry.trace.Link",
   "opentelemetry.trace.SpanContext",
   "opentelemetry.trace.SpanKind",
   "opentelemetry.trace.SpanKind.INTERNAL",
   "opentelemetry.trace.status.Status",
   "opentelemetry.trace.status.StatusCode.UNSET",
   "opentelemetry.util.types.Attributes",
   "threading.Lock",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.__new__": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.__repr__": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._add_event": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_attributes": {
  "lineno": 513,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.BoundedDict",
   "types.MappingProxyType"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_context": {
  "lineno": 505,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "opentelemetry.context.span_id",
   "opentelemetry.context.trace_id",
   "opentelemetry.context.trace_state",
   "opentelemetry.trace.format_span_id",
   "opentelemetry.trace.format_trace_id"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_events": {
  "lineno": 521,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "opentelemetry.sdk.util.ns_to_iso_str"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._format_links": {
  "lineno": 532,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._new_attributes": {
  "lineno": 493,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.BoundedDict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._new_events": {
  "lineno": 497,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.BoundedList"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span._new_links": {
  "lineno": 501,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.BoundedList"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.add_event": {
  "lineno": 613,
  "symbols_in_volume": [
   "opentelemetry.util.time_ns",
   "opentelemetry.util.types.Attributes",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.end": {
  "lineno": 644,
  "symbols_in_volume": [
   "opentelemetry.util.time_ns",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.end_time": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.get_span_context": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.is_recording": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.record_exception": {
  "lineno": 696,
  "symbols_in_volume": [
   "opentelemetry.util.types.Attributes",
   "traceback.format_exc",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.set_attribute": {
  "lineno": 585,
  "symbols_in_volume": [
   "opentelemetry.util.types.AttributeValue",
   "typing.MutableSequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.set_status": {
  "lineno": 663,
  "symbols_in_volume": [
   "opentelemetry.trace.Status"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.start": {
  "lineno": 629,
  "symbols_in_volume": [
   "opentelemetry.context.Context",
   "opentelemetry.util.time_ns",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.start_time": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.to_json": {
  "lineno": 542,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.dumps",
   "opentelemetry.sdk.util.ns_to_iso_str",
   "opentelemetry.trace.SpanContext",
   "opentelemetry.trace.format_span_id"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Span.update_name": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.SpanProcessor.force_flush": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor.on_end": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor.on_start": {
  "lineno": 76,
  "symbols_in_volume": [
   "opentelemetry.context.Context",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SpanProcessor.shutdown": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.__init__": {
  "lineno": 126,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.add_span_processor": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.force_flush": {
  "lineno": 155,
  "symbols_in_volume": [
   "opentelemetry.util.time_ns"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.on_end": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.on_start": {
  "lineno": 137,
  "symbols_in_volume": [
   "opentelemetry.context.Context",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.SynchronousMultiSpanProcessor.shutdown": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer": {
  "lineno": 731,
  "symbols_in_volume": [
   "opentelemetry.trace.Tracer"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.Tracer.__init__": {
  "lineno": 735,
  "symbols_in_volume": [
   "opentelemetry.sdk.resources.Resource",
   "opentelemetry.sdk.trace.ids_generator.IdsGenerator",
   "opentelemetry.sdk.trace.sampling.Sampler",
   "opentelemetry.sdk.util.instrumentation.InstrumentationInfo",
   "typing.Union"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer.start_as_current_span": {
  "lineno": 751,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "opentelemetry.context",
   "opentelemetry.context.Context",
   "opentelemetry.trace.Link",
   "opentelemetry.trace.Span",
   "opentelemetry.trace.SpanKind",
   "opentelemetry.trace.SpanKind.INTERNAL",
   "opentelemetry.util.types.Attributes",
   "typing.Iterator",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer.start_span": {
  "lineno": 776,
  "symbols_in_volume": [
   "opentelemetry.context",
   "opentelemetry.context.Context",
   "opentelemetry.trace.DefaultSpan",
   "opentelemetry.trace.Link",
   "opentelemetry.trace.Span",
   "opentelemetry.trace.SpanContext",
   "opentelemetry.trace.SpanKind",
   "opentelemetry.trace.SpanKind.INTERNAL",
   "opentelemetry.trace.TraceFlags",
   "opentelemetry.trace.TraceFlags.DEFAULT",
   "opentelemetry.trace.TraceFlags.SAMPLED",
   "opentelemetry.trace.get_current_span",
   "opentelemetry.util.types.Attributes",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.Tracer.use_span": {
  "lineno": 854,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "opentelemetry.context.attach",
   "opentelemetry.context.detach",
   "opentelemetry.context.set_value",
   "opentelemetry.trace.Span",
   "opentelemetry.trace.propagation.SPAN_KEY",
   "opentelemetry.trace.status.Status",
   "opentelemetry.trace.status.StatusCode.ERROR",
   "opentelemetry.trace.status.StatusCode.UNSET",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider": {
  "lineno": 893,
  "symbols_in_volume": [
   "opentelemetry.trace.TracerProvider"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.TracerProvider.__init__": {
  "lineno": 894,
  "symbols_in_volume": [
   "atexit.register",
   "opentelemetry.sdk.resources.Resource",
   "opentelemetry.sdk.resources.Resource.create",
   "opentelemetry.sdk.trace.ids_generator.IdsGenerator",
   "opentelemetry.sdk.trace.ids_generator.RandomIdsGenerator",
   "opentelemetry.sdk.trace.sampling.Sampler",
   "typing.Union"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.add_span_processor": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.force_flush": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.get_tracer": {
  "lineno": 917,
  "symbols_in_volume": [
   "opentelemetry.sdk.util.instrumentation.InstrumentationInfo"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.TracerProvider.shutdown": {
  "lineno": 945,
  "symbols_in_volume": [
   "atexit.unregister"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace._Span": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace._check_span_ended": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace._check_span_ended.wrapper": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace._create_immutable_attributes": {
  "lineno": 375,
  "symbols_in_volume": [
   "types.MappingProxyType"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace._filter_attribute_values": {
  "lineno": 365,
  "symbols_in_volume": [
   "opentelemetry.util.types.Attributes",
   "typing.MutableSequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace._is_valid_attribute_value": {
  "lineno": 313,
  "symbols_in_volume": [
   "opentelemetry.util.types.AttributeValue",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor": {
  "lineno": 109,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.SpanProcessor"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.__init__": {
  "lineno": 116,
  "symbols_in_volume": [
   "collections.deque",
   "opentelemetry.configuration.Configuration",
   "threading.Condition",
   "threading.Lock",
   "threading.Thread"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._drain_queue": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._export": {
  "lineno": 282,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._export_batch": {
  "lineno": 303,
  "symbols_in_volume": [
   "opentelemetry.context.attach",
   "opentelemetry.context.detach",
   "opentelemetry.context.set_value"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._get_and_unset_flush_request": {
  "lineno": 247,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._get_or_create_flush_request": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor._notify_flush_request_finished": {
  "lineno": 257,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.force_flush": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.on_end": {
  "lineno": 184,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.Span"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.on_start": {
  "lineno": 179,
  "symbols_in_volume": [
   "opentelemetry.context.Context",
   "opentelemetry.sdk.trace.Span",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.shutdown": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.BatchExportSpanProcessor.worker": {
  "lineno": 201,
  "symbols_in_volume": [
   "opentelemetry.util.time_ns"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.ConsoleSpanExporter": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.ConsoleSpanExporter.__init__": {
  "lineno": 373,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.Span",
   "os.linesep",
   "sys.stdout",
   "typing.Callable",
   "typing.IO",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.ConsoleSpanExporter.export": {
  "lineno": 384,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.Span",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor": {
  "lineno": 65,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.SpanProcessor"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.force_flush": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.on_end": {
  "lineno": 80,
  "symbols_in_volume": [
   "opentelemetry.context.attach",
   "opentelemetry.context.detach",
   "opentelemetry.context.set_value",
   "opentelemetry.sdk.trace.Span"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.on_start": {
  "lineno": 75,
  "symbols_in_volume": [
   "opentelemetry.context.Context",
   "opentelemetry.sdk.trace.Span",
   "typing.Optional"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SimpleExportSpanProcessor.shutdown": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SpanExportResult": {
  "lineno": 33,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.SpanExporter": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.SpanExporter.export": {
  "lineno": 48,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.Span",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.SpanExporter.shutdown": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export._FlushRequest": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export._FlushRequest.__init__": {
  "lineno": 104,
  "symbols_in_volume": [
   "threading.Event"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter": {
  "lineno": 22,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.export.SpanExporter"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.clear": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.export": {
  "lineno": 45,
  "symbols_in_volume": [
   "opentelemetry.sdk.trace.Span",
   "opentelemetry.sdk.trace.export.SpanExportResult",
   "opentelemetry.sdk.trace.export.SpanExportResult.FAILURE",
   "opentelemetry.sdk.trace.export.SpanExportResult.SUCCESS",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.get_finished_spans": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.export.in_memory_span_exporter.InMemorySpanExporter.shutdown": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ids_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.trace.ids_generator.IdsGenerator": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.ids_generator.IdsGenerator.generate_span_id": {
  "lineno": 20,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ids_generator.IdsGenerator.generate_trace_id": {
  "lineno": 28,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ids_generator.RandomIdsGenerator": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.ids_generator.RandomIdsGenerator.generate_span_id": {
  "lineno": 48,
  "symbols_in_volume": [
   "random.getrandbits"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.ids_generator.RandomIdsGenerator.generate_trace_id": {
  "lineno": 51,
  "symbols_in_volume": [
   "random.getrandbits"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "opentelemetry.sdk.trace.sampling.Decision": {
  "lineno": 114,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.Decision.is_recording": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Decision.is_sampled": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased.__init__": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased.get_description": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.ParentBased.should_sample": {
  "lineno": 290,
  "symbols_in_volume": [
   "opentelemetry.trace.get_current_span",
   "opentelemetry.util.types.Attributes",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.ParentBasedTraceIdRatio": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.ParentBasedTraceIdRatio.__init__": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Sampler": {
  "lineno": 159,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.Sampler.get_description": {
  "lineno": 172,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.Sampler.should_sample": {
  "lineno": 160,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "opentelemetry.util.types.Attributes",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.SamplingResult": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.SamplingResult.__init__": {
  "lineno": 145,
  "symbols_in_volume": [
   "types.MappingProxyType"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.SamplingResult.__repr__": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler.__init__": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler.get_description": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.StaticSampler.should_sample": {
  "lineno": 183,
  "symbols_in_volume": [
   "opentelemetry.util.types.Attributes",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.__init__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.bound": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.get_bound_for_rate": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.get_description": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.rate": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling.TraceIdRatioBased.should_sample": {
  "lineno": 240,
  "symbols_in_volume": [
   "opentelemetry.util.types.Attributes",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.trace.sampling._get_from_env_or_default": {
  "lineno": 367,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.util.BoundedDict": {
  "lineno": 92,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.util.BoundedDict.__delitem__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__getitem__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__init__": {
  "lineno": 99,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__iter__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__len__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__repr__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.__setitem__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedDict.from_map": {
  "lineno": 140,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList": {
  "lineno": 41,
  "symbols_in_volume": [
   "collections.abc.Sequence"
  ],
  "type": "class"
 },
 "opentelemetry.sdk.util.BoundedList.__getitem__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__init__": {
  "lineno": 48,
  "symbols_in_volume": [
   "collections.deque",
   "threading.Lock"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__iter__": {
  "lineno": 64,
  "symbols_in_volume": [
   "collections.deque"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__len__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.__repr__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.append": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.extend": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.BoundedList.from_seq": {
  "lineno": 81,
  "symbols_in_volume": [
   "collections.deque"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.util.get_dict_as_key": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__eq__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__hash__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__lt__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.__repr__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.name": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.instrumentation.InstrumentationInfo.version": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opentelemetry.sdk.util.ns_to_iso_str": {
  "lineno": 21,
  "symbols_in_volume": [
   "datetime.datetime.utcfromtimestamp"
  ],
  "type": "function"
 },
 "opentelemetry.sdk.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}