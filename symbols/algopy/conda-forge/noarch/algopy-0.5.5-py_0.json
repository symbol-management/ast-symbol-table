{
 "*": {
  "data": {
   "imports": [
    "algopy.utpm",
    "numpy.testing"
   ]
  },
  "type": "star-import"
 },
 "algopy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NumpyVersion",
    "algopy._min_numpy_version",
    "algopy._min_scipy_version",
    "algopy._preferred_numpy_version",
    "algopy.numpy",
    "algopy.os",
    "algopy.scipy",
    "algopy.warnings",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "algopy.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "algopy.__install_path__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "algopy.__version__": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "algopy._min_numpy_version": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "algopy._min_scipy_version": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "algopy._npversion": {
  "data": {},
  "type": "module"
 },
 "algopy._npversion.NumpyVersion": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "algopy._npversion.NumpyVersion.__eq__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__ge__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__gt__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "algopy._npversion.re",
    "bool",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__le__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__lt__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__ne__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion.__repr": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion._compare": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "algopy._npversion.NumpyVersion",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion._compare_pre_release": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "algopy._npversion.NumpyVersion._compare_version": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "algopy._npversion.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "algopy._npversion.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "algopy._preferred_numpy_version": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "algopy._six": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "OverflowError",
    "algopy._six.BytesIO",
    "algopy._six.PY3",
    "algopy._six.StringIO",
    "algopy._six.X",
    "algopy._six.__builtin__",
    "algopy._six._add_doc",
    "algopy._six._func_code",
    "algopy._six._func_defaults",
    "algopy._six._meth_func",
    "algopy._six._meth_self",
    "algopy._six.advance_iterator",
    "algopy._six.b",
    "algopy._six.builtins",
    "algopy._six.exec_",
    "algopy._six.functools",
    "algopy._six.get_unbound_function",
    "algopy._six.io",
    "algopy._six.itertools",
    "algopy._six.operator",
    "algopy._six.reraise",
    "algopy._six.sys",
    "algopy._six.types",
    "algopy._six.u",
    "bytes",
    "chr",
    "getattr",
    "int",
    "len",
    "next",
    "object",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "algopy._six.BytesIO": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "algopy._six.Iterator": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "algopy._six.Iterator.next": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "algopy._six.MAXSIZE": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "algopy._six.PY3": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "algopy._six.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "algopy._six.X": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "algopy._six.X.__len__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "algopy._six.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "algopy._six.__builtin__": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "algopy._six.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "algopy._six._add_doc": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "algopy._six._func_code": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "algopy._six._func_defaults": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "algopy._six._import_module": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "__import__",
    "algopy._six.sys"
   ]
  },
  "type": "function"
 },
 "algopy._six._iteritems": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "algopy._six._iterkeys": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "algopy._six._itervalues": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "algopy._six._meth_func": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "algopy._six._meth_self": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "algopy._six.advance_iterator": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "algopy._six.b": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "algopy._six.binary_type": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "algopy._six.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "algopy._six.callable": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "algopy._six.class_types": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "algopy._six.exec_": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "algopy._six.sys",
    "exec"
   ]
  },
  "type": "function"
 },
 "algopy._six.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "algopy._six.get_function_code": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "algopy._six.get_function_defaults": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "algopy._six.get_method_function": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "algopy._six.get_method_self": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "algopy._six.get_unbound_function": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "algopy._six.int2byte": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "algopy._six.integer_types": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "algopy._six.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "algopy._six.iteritems": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "algopy._six._iteritems",
    "getattr",
    "iter"
   ]
  },
  "type": "function"
 },
 "algopy._six.iterkeys": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "algopy._six._iterkeys",
    "getattr",
    "iter"
   ]
  },
  "type": "function"
 },
 "algopy._six.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "algopy._six.itervalues": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "algopy._six._itervalues",
    "getattr",
    "iter"
   ]
  },
  "type": "function"
 },
 "algopy._six.next": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "algopy._six.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "algopy._six.print_": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "TypeError",
    "algopy._six.sys",
    "enumerate",
    "isinstance",
    "str",
    "unicode",
    "write"
   ]
  },
  "type": "function"
 },
 "algopy._six.print_.write": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy._six.reduce": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "algopy._six.reraise": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "algopy._six.string_types": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "algopy._six.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "algopy._six.text_type": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "algopy._six.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "algopy._six.u": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "algopy._six.with_metaclass": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "meta",
    "object"
   ]
  },
  "type": "function"
 },
 "algopy._six.xrange": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "algopy._six.zip": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "algopy.base_type": {
  "data": {},
  "type": "module"
 },
 "algopy.base_type.Ring": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "object"
   ]
  },
  "type": "class"
 },
 "algopy.base_type.Ring.__add__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "algopy.base_type.Ring.__mul__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "algopy.base_type.Ring.__radd__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "algopy.base_type.Ring.__rmul__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "algopy.base_type.Ring.__str__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.base_type.Ring.__sub__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "algopy.base_type.Ring.__truediv__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "algopy.base_type.Ring.totype": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.base_type.numpy",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.base_type.Ring.zeros_like": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "algopy.base_type.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.compound": {
  "data": {},
  "type": "module"
 },
 "algopy.compound.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.compound.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.compound.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.compound.zeros": {
  "data": {
   "shadows": "algopy.zeros"
  },
  "type": "import"
 },
 "algopy.exact_interpolation": {
  "data": {},
  "type": "module"
 },
 "algopy.exact_interpolation.convert_multi_indices_to_pos": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.factorial": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.gamma": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "algopy.exact_interpolation.increment",
    "algopy.exact_interpolation.multi_index_abs",
    "algopy.exact_interpolation.multi_index_factorial",
    "algopy.exact_interpolation.numpy",
    "alpha",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.gamma.alpha": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "algopy.exact_interpolation.multi_index_abs",
    "algopy.exact_interpolation.multi_index_binomial"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.generate_Gamma_and_rays": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "algopy.exact_interpolation.gamma",
    "algopy.exact_interpolation.generate_multi_indices",
    "algopy.exact_interpolation.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.generate_multi_indices": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "int",
    "rec"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.generate_multi_indices.rec": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "range",
    "rec"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.generate_permutations": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.increment": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.multi_index_abs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.multi_index_binomial": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "len",
    "mybinomial",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.multi_index_binomial.mybinomial": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.multi_index_factorial": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "scipy.factorial"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.multi_index_pow": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "algopy.exact_interpolation.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.exact_interpolation.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.fft": {
  "data": {},
  "type": "module"
 },
 "algopy.fft.fft": {
  "data": {},
  "type": "module"
 },
 "algopy.fft.fft.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.fft.fft.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.fft.fft.fft": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.Function",
    "algopy.Function.fft",
    "algopy.UTPM",
    "algopy.UTPM.fft",
    "algopy.fft.fft.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.fft.fft.ifft": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.Function",
    "algopy.Function.ifft",
    "algopy.UTPM",
    "algopy.UTPM.ifft",
    "algopy.fft.fft.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.fft.fft.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.fft.fft.numpy.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "algopy.fft.fft.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "algopy.fft.fft.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "algopy.globalfuncs": {
  "data": {
   "symbols_in_volume": [
    "algopy.globalfuncs.dot",
    "algopy.globalfuncs.function_template",
    "algopy.globalfuncs.imag",
    "algopy.globalfuncs.numpy",
    "algopy.globalfuncs.numpy_function_names",
    "algopy.globalfuncs.ones",
    "algopy.globalfuncs.ones_like",
    "algopy.globalfuncs.outer",
    "algopy.globalfuncs.real",
    "algopy.globalfuncs.string",
    "algopy.globalfuncs.sum",
    "algopy.globalfuncs.symvec",
    "algopy.globalfuncs.vecsym",
    "algopy.globalfuncs.zeros",
    "algopy.globalfuncs.zeros_like",
    "exec"
   ]
  },
  "type": "module"
 },
 "algopy.globalfuncs.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.globalfuncs.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.globalfuncs.coeff_op": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "algopy.globalfuncs.dot": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.Function.dot",
    "algopy.UTPM",
    "algopy.UTPM.dot",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.extract_UTPM_jacobian": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.UTPM.extract_UTPM_jacobian",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.function_template": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "algopy.globalfuncs.imag": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.init_UTPM_jacobian": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.UTPM.init_UTPM_jacobian",
    "algopy.UTPM.init_jacobian",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.logdet": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.globalfuncs.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.globalfuncs.numpy_function_names": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "algopy.globalfuncs.ones": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "float",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.ones_like": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "algopy.globalfuncs.ones"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.outer": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.Function.outer",
    "algopy.UTPM",
    "algopy.UTPM.outer",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.prod": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.real": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "algopy.globalfuncs.sum": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.symvec": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.Function",
    "algopy.Function.symvec",
    "algopy.UTPM",
    "algopy.UTPM.symvec",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.vecsym": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.Function",
    "algopy.Function.vecsym",
    "algopy.UTPM",
    "algopy.UTPM.vecsym",
    "algopy.globalfuncs.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.zeros": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.globalfuncs.numpy",
    "float",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.globalfuncs.zeros_like": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "algopy.globalfuncs.zeros"
   ]
  },
  "type": "function"
 },
 "algopy.linalg": {
  "data": {},
  "type": "module"
 },
 "algopy.linalg.compound": {
  "data": {},
  "type": "module"
 },
 "algopy.linalg.compound._expm_pade13": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "algopy.globalfuncs.dot"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound._expm_pade3": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "algopy.globalfuncs.dot"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound._expm_pade5": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "algopy.globalfuncs.dot"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound._expm_pade7": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "algopy.globalfuncs.dot"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound._expm_pade9": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "algopy.globalfuncs.dot"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.linalg.compound.dot": {
  "data": {
   "shadows": "algopy.globalfuncs.dot"
  },
  "type": "import"
 },
 "algopy.linalg.compound.eigh": {
  "data": {
   "shadows": "algopy.linalg.linalg.eigh"
  },
  "type": "import"
 },
 "algopy.linalg.compound.expm": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "expm_pade"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound.expm_higham_2005": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_expm_pade13",
    "_expm_pade3",
    "_expm_pade5",
    "_expm_pade7",
    "_expm_pade9",
    "algopy.globalfuncs.dot",
    "algopy.linalg.compound.numpy",
    "algopy.linalg.linalg.solve",
    "int",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound.expm_pade": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "algopy.linalg.compound.numpy",
    "algopy.linalg.linalg.solve",
    "pade"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.compound.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.linalg.compound.qr_full": {
  "data": {
   "shadows": "algopy.linalg.linalg.qr_full"
  },
  "type": "import"
 },
 "algopy.linalg.compound.solve": {
  "data": {
   "shadows": "algopy.linalg.linalg.solve"
  },
  "type": "import"
 },
 "algopy.linalg.compound.zeros": {
  "data": {
   "shadows": "algopy.globalfuncs.zeros"
  },
  "type": "import"
 },
 "algopy.linalg.linalg": {
  "data": {
   "symbols_in_volume": [
    "algopy.linalg.linalg.function_template",
    "algopy.linalg.linalg.numpy_linalg_function_names",
    "algopy.linalg.linalg.scipy_linalg_function_names",
    "algopy.linalg.linalg.string",
    "exec"
   ]
  },
  "type": "module"
 },
 "algopy.linalg.linalg.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.linalg.linalg.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.linalg.linalg.eigh1": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.Function",
    "algopy.Function.eigh1",
    "algopy.UTPM",
    "algopy.UTPM.eigh1",
    "algopy.linalg.linalg.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.linalg.function_template": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "algopy.linalg.linalg.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.linalg.linalg.numpy.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "algopy.linalg.linalg.numpy_linalg_function_names": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "algopy.linalg.linalg.qr_full": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.Function",
    "algopy.Function.qr_full",
    "algopy.UTPM",
    "algopy.UTPM.qr_full",
    "algopy.linalg.linalg.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.linalg.linalg.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "algopy.linalg.linalg.scipy_linalg_function_names": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "algopy.linalg.linalg.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "algopy.nthderiv": {
  "data": {},
  "type": "module"
 },
 "algopy.nthderiv.nthderiv": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "algopy.nthderiv.nthderiv.DOM_ABS_LT_1",
    "algopy.nthderiv.nthderiv.DOM_ALL",
    "algopy.nthderiv.nthderiv.DOM_GT_1",
    "algopy.nthderiv.nthderiv.DOM_GT_NEG_1",
    "algopy.nthderiv.nthderiv.DOM_NONE",
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.__all__",
    "algopy.nthderiv.nthderiv.mpmath",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.complex128",
    "numpy.float64",
    "numpy.pi",
    "numpy.reciprocal",
    "numpy.sqrt",
    "numpy.vectorize"
   ]
  },
  "type": "module"
 },
 "algopy.nthderiv.nthderiv.DOM_ABS_LT_1": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.less"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.DOM_ALL": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.DOM_GT_1": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.greater"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.DOM_GT_NEG_1": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.greater"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.DOM_NONE": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.DOM_POS": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.greater"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv._domain_constants": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv._mpmath_hyp1f1": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv._mpmath_hyp2f0": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv._mpmath_polylog_complex": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv._mpmath_polylog_real": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv.absolute": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.absolute",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.arccos": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_ABS_LT_1",
    "algopy.nthderiv.nthderiv.arcsin",
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.arccos",
    "numpy.negative"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.arccosh": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_GT_1",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "algopy.nthderiv.nthderiv.np_real",
    "algopy.nthderiv.nthderiv.np_recip_sqrt",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.arccosh",
    "numpy.square",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.arcsin": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_ABS_LT_1",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "algopy.nthderiv.nthderiv.np_real",
    "algopy.nthderiv.nthderiv.np_recip_sqrt",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.arcsin",
    "numpy.square",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.arcsinh": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "algopy.nthderiv.nthderiv.np_recip_sqrt",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.arcsinh",
    "numpy.multiply",
    "numpy.square",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.arctan": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "algopy.nthderiv.nthderiv.np_real",
    "numpy.arctan",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.arctanh": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_ABS_LT_1",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "numpy.add",
    "numpy.arctanh",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "algopy.nthderiv.nthderiv.base_mpmath_hyp1f1": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv._mpmath_hyp1f1",
    "algopy.nthderiv.nthderiv.np_real"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.base_mpmath_hyp2f0": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv._mpmath_hyp2f0",
    "algopy.nthderiv.nthderiv.np_real"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.basecase": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "algopy.nthderiv.nthderiv.DOM_ALL",
    "algopy.nthderiv.nthderiv._domain_constants"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.basecase.wrap": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "fn_zeroth_deriv.__doc__",
    "fn_zeroth_deriv.__name__"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.basecase.wrap.wrapped_f": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "fn_zeroth_deriv"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.ceil": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.clip": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_clip_reordered_args",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "float",
    "numpy.array",
    "numpy.greater_equal",
    "numpy.less_equal",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.cos": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.cos",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.cosh": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_real",
    "numpy.cosh",
    "numpy.pi",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.erf": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "algopy.nthderiv.nthderiv.np_recip_sqrt_pi",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.exp",
    "numpy.exp2",
    "numpy.multiply",
    "numpy.square",
    "numpy.zeros_like",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.erfi": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "algopy.nthderiv.nthderiv.np_erfi",
    "algopy.nthderiv.nthderiv.np_recip_sqrt_pi",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.exp",
    "numpy.exp2",
    "numpy.multiply",
    "numpy.square",
    "numpy.zeros_like",
    "pow",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.exp": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.exp2": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.exp2",
    "numpy.log",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.expm1": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.exp",
    "numpy.expm1"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.fix": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "algopy.nthderiv.nthderiv.np_fix"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.floor": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "algopy.nthderiv.nthderiv.gammaln": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_polygamma",
    "algopy.nthderiv.nthderiv.scipy"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp0f1": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.hyp_pfq",
    "algopy.nthderiv.nthderiv.np_hyp0f1"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp1f1": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.hyp_pfq",
    "algopy.nthderiv.nthderiv.scipy"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp1f2": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.hyp_pfq",
    "algopy.nthderiv.nthderiv.np_hyp1f2"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp2f0": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_NONE",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.hyp_pfq",
    "algopy.nthderiv.nthderiv.np_hyp2f0"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp2f1": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.hyp_pfq",
    "algopy.nthderiv.nthderiv.scipy"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp3f0": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_NONE",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.hyp_pfq",
    "algopy.nthderiv.nthderiv.np_hyp3f0"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyp_pfq": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_hyp_pfq",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.errstate",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.hyperu": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.scipy",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.log": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "numpy.log",
    "numpy.power",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.log10": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.log",
    "numpy.log",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.log1p": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_GT_NEG_1",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "numpy.log1p",
    "numpy.power",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.log2": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.log",
    "numpy.log",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.nthderiv.nthderiv.mpmath": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv.mpmath_hyp1f1": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.base_mpmath_hyp1f1",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.mpmath_hyp2f0": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_NONE",
    "algopy.nthderiv.nthderiv.base_mpmath_hyp2f0",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.negative": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.negative"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.nthderiv.nthderiv.np_clip_reordered_args": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_cot": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.reciprocal",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_coth": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.reciprocal",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_csc": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.reciprocal",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_csch": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.reciprocal",
    "numpy.sinh"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_erfi": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.np_recip_sqrt_pi",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.multiply",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_filled_like": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_fix": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.fix"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_hyp0f1": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.np_real",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.errstate",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_hyp1f2": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_hyp2f0": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_hyp3f0": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.scipy"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_hyp_pfq": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "algopy.nthderiv.nthderiv.np_hyp0f1",
    "algopy.nthderiv.nthderiv.np_hyp1f2",
    "algopy.nthderiv.nthderiv.np_hyp2f0",
    "algopy.nthderiv.nthderiv.np_hyp3f0",
    "algopy.nthderiv.nthderiv.scipy",
    "fn",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_polygamma": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_real": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_recip_sqrt": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_recip_sqrt_pi": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv.np_sec": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.np_sech": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.cosh",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.numpy.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "algopy.nthderiv.nthderiv.polygamma": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_polygamma"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.psi": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_polygamma",
    "algopy.nthderiv.nthderiv.scipy"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.reciprocal": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.math",
    "numpy.power",
    "numpy.reciprocal",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.rint": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.rint"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.scipy": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "algopy.nthderiv.nthderiv.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "algopy.nthderiv.nthderiv.sign": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.sin": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.sinh": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_real",
    "numpy.pi",
    "numpy.sinh",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.sqrt": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.DOM_POS",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.power",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.square": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.multiply",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.tan": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv._mpmath_polylog_complex",
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_real",
    "algopy.nthderiv.nthderiv.scipy",
    "numpy.tan",
    "pow"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.tanh": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv._mpmath_polylog_real",
    "algopy.nthderiv.nthderiv.basecase",
    "numpy.exp",
    "numpy.exp2",
    "numpy.multiply",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.trunc": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "algopy.nthderiv.nthderiv.basecase",
    "algopy.nthderiv.nthderiv.np_filled_like",
    "numpy.trunc"
   ]
  },
  "type": "function"
 },
 "algopy.nthderiv.nthderiv.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "algopy.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "algopy.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "algopy.special": {
  "data": {},
  "type": "module"
 },
 "algopy.special.compound": {
  "data": {},
  "type": "module"
 },
 "algopy.special.special": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "algopy.special.special.dawsn",
    "algopy.special.special.erf",
    "algopy.special.special.erfi",
    "algopy.special.special.expit",
    "algopy.special.special.gammaln",
    "algopy.special.special.hyp0f1",
    "algopy.special.special.hyp1f1",
    "algopy.special.special.hyperu",
    "algopy.special.special.logit",
    "algopy.special.special.polygamma",
    "algopy.special.special.psi",
    "algopy.special.special.scipy"
   ]
  },
  "type": "module"
 },
 "algopy.special.special.algopy.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.special.special.botched_clip": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "algopy.special.special.numpy",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.dawsn": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "algopy.special.special.scipy",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.dpm_hyp1f1": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.dpm_hyp2f0": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.erf": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.erfi": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.expit": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "algopy.special.special.scipy",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.gammaln": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.hyp0f1": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.hyp1f1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.hyp2f0": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.hyperu": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.logit": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "algopy.special.special.scipy",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.special.special.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.special.special.polygamma": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.psi": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "algopy.special.special.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "algopy.special.special.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "algopy.test": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "algopy.tests": {
  "data": {},
  "type": "module"
 },
 "algopy.tests.test_compound": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "algopy.tests.test_compound.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_compound.CGraph": {
  "data": {
   "shadows": "algopy.CGraph"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.Test_NumpyScipyLinalgFunctions": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "algopy.tests.test_compound.Test_NumpyScipyLinalgFunctions.test_expm": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "algopy.CGraph",
    "algopy.Function",
    "algopy.UTPM.extract_jacobian",
    "algopy.UTPM.init_jacobian",
    "algopy.tests.test_compound.numpy",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_compound.Test_NumpyScipyLinalgFunctions.test_expm.f": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "algopy.linalg.compound.expm",
    "algopy.sum"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_compound.Test_NumpyScipyLinalgFunctions.test_utpm_logdet_trace_expm": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "algopy.UTPM",
    "algopy.UTPM.dot",
    "algopy.UTPM.logdet",
    "algopy.UTPM.trace",
    "algopy.linalg.compound.expm",
    "algopy.tests.test_compound.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_compound.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.diag": {
  "data": {
   "shadows": "algopy.diag"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.dot": {
  "data": {
   "shadows": "algopy.dot"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.expm": {
  "data": {
   "shadows": "algopy.linalg.compound.expm"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.qr": {
  "data": {
   "shadows": "algopy.qr"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.sum": {
  "data": {
   "shadows": "algopy.sum"
  },
  "type": "import"
 },
 "algopy.tests.test_compound.zeros": {
  "data": {
   "shadows": "algopy.zeros"
  },
  "type": "import"
 },
 "algopy.tests.test_exact_interpolation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "algopy.tests.test_exact_interpolation.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_convert_multi_indices_to_pos": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.numpy",
    "convert_multi_indices_to_pos",
    "generate_multi_indices",
    "int"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_generate_multi_indices": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.numpy",
    "assert_array_equal",
    "generate_multi_indices"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_generate_permutations": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.numpy",
    "generate_permutations",
    "int"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_increment": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.numpy",
    "assert_array_almost_equal",
    "increment",
    "int"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_interpolation": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "algopy.UTPM",
    "algopy.tests.test_exact_interpolation.numpy",
    "assert_array_almost_equal",
    "enumerate",
    "f",
    "generate_Gamma_and_rays"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_interpolation.f": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestExactInterpolation.test_multi_index_binomial": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.numpy",
    "assert_array_almost_equal",
    "float",
    "int",
    "multi_index_binomial"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestForwardDrivers": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "algopy.tests.test_exact_interpolation.TestForwardDrivers.test_hessian": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.algopy",
    "algopy.tests.test_exact_interpolation.numpy",
    "assert_array_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.TestForwardDrivers.test_tensor_for_hessian_computation": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "algopy.tests.test_exact_interpolation.algopy",
    "algopy.tests.test_exact_interpolation.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_exact_interpolation.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_exact_interpolation.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.tests.test_exact_interpolation.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_examples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "algopy.tests.test_examples.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_examples.Test_Broadcasting": {
  "data": {
   "lineno": 291
  },
  "type": "class"
 },
 "algopy.tests.test_examples.Test_Broadcasting.test_broadcasting1": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "UTPM.init_jacobian",
    "algopy.dot",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "diag"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_Broadcasting.test_broadcasting_add": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_Broadcasting.test_broadcasting_div": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_Broadcasting.test_broadcasting_mul": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_Broadcasting.test_broadcasting_sub": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.eval_f": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "algopy.tests.test_examples.numpy",
    "diag",
    "dot",
    "expm",
    "float",
    "log",
    "sum",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.eval_f_eigh": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "algopy.tests.test_examples.numpy",
    "diag",
    "dot",
    "eigh",
    "exp",
    "float",
    "log",
    "sqrt",
    "sum",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.eval_grad_f": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.eval_grad_f_eigh": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.eval_hess_f": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.eval_hess_f_eigh": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.test_expm_implementations": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "algopy.tests.test_examples.numpy",
    "diag",
    "expm",
    "expm_higham_2005",
    "expm_pade",
    "sum",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.test_ml_with_expm_gradient_forward": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.test_ml_with_expm_gradient_reverse": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.test_ml_with_expm_hessian_forward": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_MaximimLikelihoodExample.transform_params": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "exp",
    "sum",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_OdoeExample": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "algopy.tests.test_examples.Test_OdoeExample.test_objective_function": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "CGraph",
    "Cfcn",
    "Function",
    "Function.trace",
    "UTPM",
    "UTPM.dot",
    "UTPM.pb_trace",
    "UTPM.shift",
    "UTPM.trace",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "assert_array_equal",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_OdoeExample.test_objective_function.Cfcn": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "algopy.dot",
    "algopy.inv",
    "algopy.zeros",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities.test_example_w": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "exp"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities.test_example_w_stable": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "hyp1f1"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities.test_example_x": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities.test_example_y": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "sin"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities.test_example_z": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "sin"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.Test_RemovableSingularities.test_example_z_stable": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "UTPM",
    "algopy.tests.test_examples.numpy",
    "assert_array_almost_equal",
    "hyp0f1"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_examples.dot": {
  "data": {
   "shadows": "algopy.dot"
  },
  "type": "import"
 },
 "algopy.tests.test_examples.inv": {
  "data": {
   "shadows": "algopy.inv"
  },
  "type": "import"
 },
 "algopy.tests.test_examples.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_examples.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "algopy.tests.test_examples.zeros": {
  "data": {
   "shadows": "algopy.zeros"
  },
  "type": "import"
 },
 "algopy.tests.test_globalfuncs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "algopy.tests.test_globalfuncs.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_globalfuncs.CGraph": {
  "data": {
   "shadows": "algopy.CGraph"
  },
  "type": "import"
 },
 "algopy.tests.test_globalfuncs.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.tests.test_globalfuncs.Test_deferring": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_binary_function_numpy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "dot"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_binary_function_utpm": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "assert_array_almost_equal",
    "dot"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_dot_numpy": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "dot"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_dot_utpm": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "assert_array_almost_equal",
    "dot"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_global_zeros_like_numpy": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "zeros_like"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_inv_numpy": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "inv"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_inv_utpm": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.inv",
    "assert_array_almost_equal",
    "inv"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_ones_like_numpy": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "ones_like"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_ones_like_utpm": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "ones_like"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_trace_numpy": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "trace"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_trace_utpm": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.trace",
    "assert_array_almost_equal",
    "trace"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_unary_function_numpy": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "trace"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_unary_function_utpm": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "trace"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_zeros_like_utpm": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "zeros_like"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_zeros_numpy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "assert_array_almost_equal",
    "float",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_zeros_utpm": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_deferring.test_zeros_utpm_with_mpmath_instances_as_dtype": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "algopy.tests.test_globalfuncs.mpmath",
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "assert_equal",
    "isinstance",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_global_functions": {
  "data": {
   "lineno": 142
  },
  "type": "class"
 },
 "algopy.tests.test_globalfuncs.Test_global_functions.test_tracer_on_mixed_utpm_ndarray_mul": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "algopy.CGraph",
    "algopy.Function",
    "algopy.tests.test_globalfuncs.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "f",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.Test_global_functions.test_tracer_on_mixed_utpm_ndarray_mul.f": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_globalfuncs.UTPM": {
  "data": {
   "shadows": "algopy.utpm.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_globalfuncs.mpmath": {
  "data": {
   "shadows": "mpmath"
  },
  "type": "import"
 },
 "algopy.tests.test_globalfuncs.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "algopy.tests.test_linalg.numpy",
    "run_module_suite",
    "scipy.linalg.expm_frechet"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_linalg.CGraph": {
  "data": {
   "shadows": "algopy.CGraph"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_expm": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "algopy.CGraph",
    "algopy.Function",
    "algopy.UTPM.extract_jacobian",
    "algopy.UTPM.init_jacobian",
    "algopy.tests.test_linalg.numpy",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_expm.f": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "algopy.sum",
    "expm"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_expm_jacobian": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "algopy.UTPM.extract_jacobian",
    "algopy.UTPM.init_jacobian",
    "algopy.tests.test_linalg.numpy",
    "assert_allclose",
    "expm",
    "numpy.testing.decorators.skipif",
    "range",
    "scipy.linalg.expm_frechet"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_expm_jacobian_vector_product": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "algopy.UTPM.extract_jac_vec",
    "algopy.UTPM.init_jac_vec",
    "algopy.tests.test_linalg.numpy",
    "assert_allclose",
    "expm",
    "numpy.testing.decorators.skipif",
    "scipy.linalg.expm_frechet"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_reverse_mode_eig": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "algopy.tests.test_linalg.numpy",
    "assert_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_reverse_mode_eig.f": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_reverse_mode_svd": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "algopy.tests.test_linalg.numpy",
    "assert_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_reverse_mode_svd.f": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_reverse_mode_svd2": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "algopy.tests.test_linalg.numpy",
    "assert_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_reverse_mode_svd2.f": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.Test_NumpyScipyLinalgFunctions.test_svd": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "algopy.UTPM",
    "algopy.diag",
    "algopy.tests.test_linalg.numpy",
    "assert_array_almost_equal",
    "dot",
    "svd",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_linalg.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg.diag": {
  "data": {
   "shadows": "algopy.diag"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg.expm_frechet": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "algopy.tests.test_linalg.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg.skipif": {
  "data": {
   "shadows": "numpy.testing.decorators.skipif"
  },
  "type": "import"
 },
 "algopy.tests.test_linalg.sum": {
  "data": {
   "shadows": "algopy.sum"
  },
  "type": "import"
 },
 "algopy.tests.test_npversion": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_npversion.NumpyVersion": {
  "data": {
   "shadows": "algopy._npversion.NumpyVersion"
  },
  "type": "import"
 },
 "algopy.tests.test_npversion.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "algopy.tests.test_npversion.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "algopy.tests.test_npversion.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "algopy.tests.test_npversion.test_alpha_beta_rc": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "algopy._npversion.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_npversion.test_dev_a_b_rc_mixed": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "algopy._npversion.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_npversion.test_dev_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "algopy._npversion.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_npversion.test_main_versions": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "algopy._npversion.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_npversion.test_raises": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "algopy._npversion.NumpyVersion",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_npversion.test_version_1_point_10": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "algopy._npversion.NumpyVersion",
    "numpy.testing.assert_"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "algopy.tests.test_nthderiv.g_simple_xs",
    "algopy.tests.test_nthderiv.warnings",
    "numpy.array",
    "numpy.random.seed",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_nthderiv.TestAuto": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.tests.test_nthderiv.TestAuto._test_numdifftools_helper": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "algopy.tests.test_nthderiv.assert_allclose_or_small",
    "algopy.tests.test_nthderiv.functools",
    "algopy.tests.test_nthderiv.numdifftools",
    "f",
    "f.extras",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestAuto._test_syntax_helper": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "f",
    "numpy.empty_like",
    "numpy.shape",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestAuto.test_numdifftools": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "algopy.tests.test_nthderiv.g_simple_xs",
    "algopy.tests.test_nthderiv.gen_named_functions",
    "algopy.tests.test_nthderiv.numdifftools",
    "algopy.tests.test_nthderiv.warnings",
    "f",
    "f.domain",
    "numpy.ComplexWarning",
    "numpy.errstate",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestAuto.test_syntax": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "algopy.tests.test_nthderiv.g_complicated_xs",
    "algopy.tests.test_nthderiv.gen_named_functions",
    "algopy.tests.test_nthderiv.warnings",
    "f",
    "f.domain",
    "numpy.ComplexWarning",
    "numpy.all",
    "numpy.errstate"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestExtras": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.tests.test_nthderiv.TestExtras.test_clip_n0": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "algopy.nthderiv.clip",
    "numpy.clip",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestExtras.test_clip_n1": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "algopy.nthderiv.clip",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestExtras.test_clip_n2": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "algopy.nthderiv.clip",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log1p_n0": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "algopy.nthderiv.log1p",
    "numpy.log1p",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log1p_n1": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "algopy.nthderiv.log1p",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log1p_n2": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "algopy.nthderiv.log1p",
    "numpy.square",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log1p_n3": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "algopy.nthderiv.log1p",
    "numpy.power",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log_n0": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "algopy.nthderiv.log",
    "numpy.log",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log_n1": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "algopy.nthderiv.log",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log_n2": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "algopy.nthderiv.log",
    "numpy.square",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestLog.test_log_n3": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "algopy.nthderiv.log",
    "numpy.power",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_arccosh_n0": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "algopy.nthderiv.arccosh",
    "numpy.arccosh",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_arccosh_n1": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "algopy.nthderiv.arccosh",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_arctan_n0": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "algopy.nthderiv.arctan",
    "numpy.arctan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_arctan_n1": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "algopy.nthderiv.arctan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_cos": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "algopy.nthderiv.cos",
    "numpy.cos",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_cosh": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "algopy.nthderiv.cosh",
    "numpy.cosh",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_reciprocal": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "algopy.nthderiv.reciprocal",
    "numpy.reciprocal",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_sqrt_n0": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "algopy.nthderiv.sqrt",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_sqrt_n1": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "algopy.nthderiv.sqrt",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.TestMisc.test_tan": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "algopy.nthderiv.tan",
    "algopy.tests.test_nthderiv.mpmath",
    "numpy.tan",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "algopy.tests.test_nthderiv.assert_allclose_or_small": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.amax",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "algopy.tests.test_nthderiv.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "algopy.tests.test_nthderiv.g_complicated_xs": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "algopy.tests.test_nthderiv.g_simple_xs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "algopy.tests.test_nthderiv.gen_named_functions": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "algopy.nthderiv.__dict__.items",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_nthderiv.mpmath": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "algopy.tests.test_nthderiv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_nthderiv.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.tests.test_nthderiv.numdifftools": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "algopy.tests.test_nthderiv.numpy.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "algopy.tests.test_nthderiv.sympy": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "algopy.tests.test_nthderiv.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "algopy.tests.test_operators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "algopy.tests.test_operators.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_operators.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.tests.test_operators.Test_NumpyOperators": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "algopy.tests.test_operators.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_operators.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_special": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "algopy.tests.test_special.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_special.Function": {
  "data": {
   "shadows": "algopy.Function"
  },
  "type": "import"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_dawsn": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "dawsn"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_dpm_hyp1f1": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.mpmath",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "dpm_hyp1f1"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_dpm_hyp2f0": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.mpmath",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "dpm_hyp2f0"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_erf": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "erf"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_erfi": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "erfi"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_expit": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "expit"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_gammaln": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "gammaln"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_hyp0f1": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "hyp0f1"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_hyp1f1": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "hyp1f1"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_hyp2f0": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "hyp2f0"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_logit": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "logit"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_polygamma": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "polygamma"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.Test_ScipySpecialFunctions.test_psi": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "algopy.Function",
    "algopy.UTPM",
    "algopy.tests.test_special.numpy",
    "assert_almost_equal",
    "psi"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_special.UTPM": {
  "data": {
   "shadows": "algopy.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_special.mpmath": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "algopy.tests.test_special.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "algopy.tests.test_utils.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tests.test_utils.TestUtils": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "algopy.tests.test_utils.TestUtils.test_piv2det": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "piv2det"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_utils.TestUtils.test_piv2mat": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "algopy.tests.test_utils.numpy",
    "assert_array_almost_equal",
    "float",
    "piv2mat"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_utils.TestUtils.test_utpm2base_and_dirs": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "algopy.tests.test_utils.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "utpm2base_and_dirs"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_utils.TestUtils.test_utpm2dirs": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "algopy.tests.test_utils.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "utpm2dirs"
   ]
  },
  "type": "function"
 },
 "algopy.tests.test_utils.UTPM": {
  "data": {
   "shadows": "algopy.utpm.UTPM"
  },
  "type": "import"
 },
 "algopy.tests.test_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tests.test_utils.numpy.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "algopy.tracer": {
  "data": {},
  "type": "module"
 },
 "algopy.tracer.tests": {
  "data": {},
  "type": "module"
 },
 "algopy.tracer.tests.environment": {
  "data": {},
  "type": "module"
 },
 "algopy.tracer.tests.environment.Settings": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "algopy.tracer.tests.environment.os"
   ]
  },
  "type": "class"
 },
 "algopy.tracer.tests.environment.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_future_division": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tracer.tests.test_future_division.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_future_division.Test_future_division": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_future_division.Test_future_division.test_function": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_future_division.algopy",
    "algopy.tracer.tests.test_future_division.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_future_division.Test_future_division.test_utpm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_future_division.algopy",
    "algopy.tracer.tests.test_future_division.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_future_division.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_future_division.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_future_division.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_output": {
  "data": {},
  "type": "module"
 },
 "algopy.tracer.tests.test_tracer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "algopy.tracer.tests.test_tracer.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_T": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_absolute": {
  "data": {
   "lineno": 1957,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_absolute.f": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_botched_clip": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_botched_clip.f": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_broadcasting1": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_broadcasting2": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_broadcasting3": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_broadcasting4": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_broadcasting5": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.dot",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_buffered_operations": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "dzfcn",
    "zfcn"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_buffered_operations.dzfcn": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.numpy",
    "object"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_buffered_operations.zfcn": {
  "data": {
   "lineno": 1334
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_compare_det_and_logdet": {
  "data": {
   "lineno": 2174,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_almost_equal",
    "f",
    "g"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_compare_det_and_logdet.f": {
  "data": {
   "lineno": 2176,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_compare_det_and_logdet.g": {
  "data": {
   "lineno": 2179,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_complex1": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_complex1.f": {
  "data": {
   "lineno": 1221
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_complex2": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_complex2.f": {
  "data": {
   "lineno": 1251
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_complex3": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_complex3.f": {
  "data": {
   "lineno": 1282
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dawsn": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dawsn.f": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dot": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.dot",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dpm_hyp1f1": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.mpmath",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dpm_hyp1f1.f": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dpm_hyp2f0": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.mpmath",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_dpm_hyp2f0.f": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_eigh1_pullback": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.eigh1",
    "algopy.dot",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.diag",
    "algopy.utpm.UTPM.pb_eigh1",
    "assert_almost_equal",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_erf": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_erf.f": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_erfi": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_erfi.f": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_exp": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_exp.f": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_expit": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_expit.f": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_expm1": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_expm1.f": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_gammaln": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_gammaln.f": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_gradient": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyp0f1": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyp0f1.f": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyp1f1": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyp1f1.f": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyp2f0": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyp2f0.f": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyperu": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_hyperu.f": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_log1p": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_log1p.f": {
  "data": {
   "lineno": 1930,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_logdet": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_logdet.f": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_logit": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_logit.f": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_lu": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_lu.f": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_more_complicated_ODOE_objective_function": {
  "data": {
   "lineno": 2215,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.dot",
    "Function.inv",
    "Function.trace",
    "Function.transpose",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "algopy.utpm.UTPM.shift",
    "algopy.utpm.UTPM.trace",
    "assert_array_almost_equal",
    "assert_array_equal",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_negative": {
  "data": {
   "lineno": 2053,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_negative.f": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_outer": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_part_of_ODOE_objective_function": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.dot",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_polygamma": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_polygamma.f": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_psi": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_psi.f": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback2": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback3": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.qr",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback4": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.qr",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback5": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.inv",
    "Function.qr",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_diag": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.diag",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.diag",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_gradient": {
  "data": {
   "lineno": 2286,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.dot",
    "algopy.qr",
    "algopy.trace",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_gradient2": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.inv",
    "algopy.trace",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_inv": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.inv",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_reshape": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_solve": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.solve",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "assert_almost_equal",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_solve_inv_comparison": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.inv",
    "algopy.solve",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pullback_symvec_vecsym": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.symvec",
    "Function.vecsym",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pushforward": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_pushforward_of_qr": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.qr",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_reciprocal": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_reciprocal.f": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_reverse_of_chained_dot": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.dot",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_reverse_on_basic_element_wise_functions": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_reverse_on_getitem_setitem": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_almost_equal",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_sign": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_sign.f": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_simple_getitem": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_simple_getitem2": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_simple_getitem_setitem": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_simple_repeated_buffered_operation": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_square": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_square.f": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_tangent_gradient": {
  "data": {
   "lineno": 2387,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_transpose": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.transpose",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_UTPM.test_very_simple_ODOE_objective_function": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.dot",
    "Function.inv",
    "Function.trace",
    "Function.transpose",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.dot",
    "algopy.utpm.UTPM.shift",
    "algopy.utpm.UTPM.trace",
    "assert_array_almost_equal",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_numpy_operations": {
  "data": {
   "lineno": 314
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_numpy_operations.test_forward": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_numpy_operations.test_gradient": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "CGraph",
    "Function"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_numpy_operations.test_pushforward": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.pushforward",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGgraph_on_numpy_operations.test_set_item": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_CGraph_Plotting": {
  "data": {
   "lineno": 2560
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_CGraph_Plotting.test_simple": {
  "data": {
   "lineno": 2561,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "Function.dot",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_fft": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_almost_equal",
    "eval_f2"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_fft.eval_f2": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_getitem": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_init": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_neg": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_pow": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_prod": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_prod.f": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_pullback_add": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Function",
    "Function.pullback",
    "Function.pushforward",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.add",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_pushforward_add": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Function",
    "Function.pushforward",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "algopy.utpm.UTPM.add",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_setitem": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_sqrt_in_norm_computation": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "eval_f1",
    "eval_f2"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_sqrt_in_norm_computation.eval_f1": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_sqrt_in_norm_computation.eval_f2": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_UTPM.test_sum": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "CGraph",
    "Function",
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_add": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Function",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_div": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Function",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_function_constructor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Function",
    "foo"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_function_constructor.foo": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_init": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Function",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_mul": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Function",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_pushforward_add": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Function",
    "Function.pushforward",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_pushforward_qr": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Function",
    "Function.pushforward",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Function_on_numpy_types.test_sub": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Function",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Mixed_Function_Operations": {
  "data": {
   "lineno": 281
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_Mixed_Function_Operations.test_function_setitem_with_scalar": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Function",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_Mixed_Function_Operations.test_scalar": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Function",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers": {
  "data": {
   "lineno": 2402
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess": {
  "data": {
   "lineno": 2480,
   "symbols_in_volume": [
    "Model",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_array_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model": {
  "data": {
   "lineno": 2481
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model.eval_g": {
  "data": {
   "lineno": 2482,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model.eval_jac_g_forward": {
  "data": {
   "lineno": 2488,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model.eval_jac_g_reverse": {
  "data": {
   "lineno": 2506
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model.eval_vec_hess_g_forward": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model.eval_vec_hess_g_reverse": {
  "data": {
   "lineno": 2509
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_jacobian_vec_hess.Model.trace_eval_g": {
  "data": {
   "lineno": 2497,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_most_drivers": {
  "data": {
   "lineno": 2404,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "algopy.utpm.UTPM.extract_jac_vec",
    "algopy.utpm.UTPM.extract_jacobian",
    "algopy.utpm.UTPM.init_jac_vec",
    "algopy.utpm.UTPM.init_jacobian",
    "assert_array_almost_equal",
    "f",
    "float",
    "g"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_most_drivers.f": {
  "data": {
   "lineno": 2405
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_most_drivers.g": {
  "data": {
   "lineno": 2408,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_taylor_series_of_jacobian": {
  "data": {
   "lineno": 2523,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy",
    "algopy.tracer.tests.test_tracer.numpy",
    "assert_almost_equal",
    "eval_J",
    "eval_g"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_taylor_series_of_jacobian.eval_J": {
  "data": {
   "lineno": 2531,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.Test_UserFriendlyDrivers.test_taylor_series_of_jacobian.eval_g": {
  "data": {
   "lineno": 2525,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer.UTPM": {
  "data": {
   "shadows": "algopy.utpm.UTPM"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.dot": {
  "data": {
   "shadows": "algopy.dot"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.eigh": {
  "data": {
   "shadows": "algopy.eigh"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.inv": {
  "data": {
   "shadows": "algopy.inv"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.mpmath": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "algopy.tracer.tests.test_tracer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.qr": {
  "data": {
   "shadows": "algopy.qr"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.solve": {
  "data": {
   "shadows": "algopy.solve"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer.trace": {
  "data": {
   "shadows": "algopy.trace"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer_complex": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "module"
 },
 "algopy.tracer.tests.test_tracer_complex.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer_complex.cgraph": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "algopy.tracer.tests.test_tracer_complex.cgraph.__enter__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeError",
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.cgraph.__exit__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.cgraph.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.makeMat": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate1": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate1.f": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate10": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate10.f": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate2.f": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate3": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate3.f": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate4": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate4.f": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate5": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate5.f": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate6": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate6.f": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate7": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate7.f": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate8": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate8.f": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate9": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "algopy.tracer.tests.test_tracer_complex.algopy",
    "algopy.tracer.tests.test_tracer_complex.cgraph",
    "algopy.tracer.tests.test_tracer_complex.makeMat",
    "f",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tests.test_tracer_complex.test_conjugate9.f": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "algopy.tracer.tracer": {
  "data": {},
  "type": "module"
 },
 "algopy.tracer.tracer.CGraph": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "algopy.tracer.tracer.CGraph.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.__str__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "algopy.tracer.tracer.is_set",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.append": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.function": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.gradient": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "Exception",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.hess_vec": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.hessian": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.jac_vec": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.jacobian": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy",
    "isinstance",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.plot": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "algopy.tracer.tracer.PlotError",
    "algopy.tracer.tracer.numpy",
    "algopy.tracer.tracer.os",
    "algopy.tracer.tracer.yapgvb",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.pullback": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.traceback",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.pushforward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Exception",
    "algopy.tracer.tracer.traceback",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.trace_off": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.trace_on": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.vec_hess": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.vec_hess_vec": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.CGraph.vec_jac": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "algopy.base_type.Ring",
    "algopy.tracer.tracer.NotSet",
    "property"
   ]
  },
  "type": "class"
 },
 "algopy.tracer.tracer.Function.Id": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__add__": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__ge__": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__getitem__": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__gt__": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__init__": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__le__": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__lt__": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__mul__": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__neg__": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__pow__": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__radd__": {
  "data": {
   "lineno": 1057
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__repr__": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__rmul__": {
  "data": {
   "lineno": 1063
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__rpow__": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__rsub__": {
  "data": {
   "lineno": 1060
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__rtruediv__": {
  "data": {
   "lineno": 1066
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__setitem__": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__str__": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__sub__": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.__truediv__": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.operator"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function._get_val": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.absolute": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.botched_clip": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.cholesky": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.coeff_op": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.conjugate": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.cos": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.create": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "ValueError",
    "algopy.tracer.tracer.Function",
    "classmethod",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.dawsn": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.det": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.diag": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.dot": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod",
    "cls.totype"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.dpm_hyp1f1": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.dpm_hyp2f0": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.dtype": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.eig": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.eigh": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.eigh1": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.erf": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.erfi": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.exp": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.expit": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.expm1": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.extract_UTPM_jacobian": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.fft": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.gammaln": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.get_ID": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.get_flat": {
  "data": {
   "lineno": 1243
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.get_ndim": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "algopy.tracer.tracer.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.get_shape": {
  "data": {
   "lineno": 1231
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.get_size": {
  "data": {
   "lineno": 1239
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.hyp0f1": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.hyp1f1": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.hyp2f0": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.hyperu": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.ifft": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.imag": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.init_UTPM_jacobian": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.inv": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.log": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.log1p": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.logdet": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.logit": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.lu": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.negative": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.ones": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.outer": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod",
    "cls.totype"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.polygamma": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.prod": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.psi": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.pullback": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.is_set",
    "algopy.tracer.tracer.numpy",
    "classmethod",
    "eval",
    "f",
    "isinstance",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.pushforward": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "func",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.qr": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.qr_full": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.real": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.reciprocal": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.reshape": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.sign": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.sin": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.solve": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.sqrt": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.square": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.sum": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.svd": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.symvec": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.tan": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.tile": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.totype": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.trace": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.transpose": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.tril": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.triu": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.vecsym": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.xbar_from_x": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "algopy.tracer.tracer.algopy",
    "algopy.tracer.tracer.numpy",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.Function.zeros": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "algopy.tracer.tracer.Function",
    "algopy.tracer.tracer.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.NotSet": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "algopy.tracer.tracer.NotSet.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "algopy.tracer.tracer.NotSet.__str__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "algopy.tracer.tracer.PlotError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "algopy.tracer.tracer.Ring": {
  "data": {
   "shadows": "algopy.base_type.Ring"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.is_set": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "algopy.tracer.tracer.NotSet",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.tracer.tracer.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "algopy.tracer.tracer.yapgvb": {
  "data": {
   "shadows": "yapgvb"
  },
  "type": "import"
 },
 "algopy.utils": {
  "data": {},
  "type": "module"
 },
 "algopy.utils.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.utils.base_and_dirs2utpm": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "algopy.utils.algopy",
    "algopy.utils.numpy",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utils.ndarray2utpm": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "algopy.utils.numpy",
    "enumerate",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utils.numpy.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "algopy.utils.piv2det": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "algopy.utils.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utils.piv2mat": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "algopy.utils.numpy",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utils.symvec": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.utils.utpm2base_and_dirs": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "algopy.utils.numpy",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utils.utpm2dirs": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "algopy.utils.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utils.vecsym": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "algopy.utils.numpy",
    "int",
    "range",
    "zeros"
   ]
  },
  "type": "function"
 },
 "algopy.utpm": {
  "data": {},
  "type": "module"
 },
 "algopy.utpm.algorithms": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn": {
  "data": {
   "lineno": 262
  },
  "type": "class"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn.__zeros__": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn.__zeros_like__": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._absolute": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._amul": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._arccos": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._arcsin": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._arctan": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._argmax": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._botched_clip": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._broadcast_arrays": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._cholesky": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dawsn": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._diag": {
  "data": {
   "lineno": 2367,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._diag_pullback": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dot": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dot_non_UTPM_x": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dot_non_UTPM_y": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dot_pullback": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dpm_hyp1f1": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "algopy.nthderiv.mpmath_hyp1f1",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._dpm_hyp2f0": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "algopy.nthderiv.mpmath_hyp2f0",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._eigh": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "ValueError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "len",
    "lift_Q",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._eigh.lift_Q": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._eigh1": {
  "data": {
   "lineno": 2015,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "algopy.utpm.algorithms.numpy",
    "algopy.utpm.algorithms.truncated_triple_dot",
    "classmethod",
    "find_repeated_values",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._eigh1.find_repeated_values": {
  "data": {
   "lineno": 2030,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._eigh1_pullback": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._eigh_pullback": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._erf": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "algopy.nthderiv.erf",
    "algopy.utpm.algorithms._black_f_white_fprime",
    "algopy.utpm.algorithms.math",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._erfi": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "algopy.nthderiv.erfi",
    "algopy.utpm.algorithms._black_f_white_fprime",
    "algopy.utpm.algorithms.math",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._exp": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "algopy.utpm.algorithms.pytpcore",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._expit": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "algopy.utpm.algorithms._black_f_white_fprime",
    "algopy.utpm.algorithms._plus_const",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._expm1": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "algopy.nthderiv.expm1",
    "algopy.utpm.algorithms._black_f_white_fprime",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._floordiv": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "Ellipsis",
    "NotImplementedError",
    "abs",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._gammaln": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.nthderiv.gammaln",
    "algopy.utpm.algorithms._eval_slow_generic",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._hyp0f1": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "algopy.nthderiv.hyp0f1",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._hyp1f1": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "algopy.nthderiv.hyp1f1",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._hyp2f0": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "algopy.nthderiv.hyp2f0",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._hyperu": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "algopy.nthderiv.hyperu",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._inv": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._inv_pullback": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._iouter": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._itruediv": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._log": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._log1p": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "algopy.utpm.algorithms._black_f_white_fprime",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._logit": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "algopy.utpm.algorithms._black_f_white_fprime",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._max": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._maximum": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._minimum": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._mul": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "algopy.utpm.algorithms.pytpcore",
    "all",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._mul_non_UTPM_x": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._ndim": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._negative": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._outer": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._outer_non_utpm_x": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._outer_non_utpm_y": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._outer_pullback": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_absolute": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_botched_clip": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_cholesky": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_dawsn": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms._plus_const",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_dpm_hyp1f1": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_dpm_hyp2f0": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_erf": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.math",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_erfi": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.math",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_exp": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_expit": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms._plus_const",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_expm1": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_gammaln": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_hyp0f1": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_hyp1f1": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_hyp2f0": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "float"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_hyperu": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_log": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_log1p": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_logit": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_negative": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_polygamma": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_pow_real": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_psi": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_reciprocal": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_reshape": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_sign": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_sincos": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_sqrt": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_square": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pb_tansec": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._polygamma": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "algopy.nthderiv.polygamma",
    "algopy.utpm.algorithms._eval_slow_generic",
    "algopy.utpm.algorithms.functools",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._pow_real": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "int",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._psi": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.nthderiv.psi",
    "algopy.utpm.algorithms._eval_slow_generic",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._qr": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "min"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._qr_full": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._qr_full_pullback": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._qr_pullback": {
  "data": {
   "lineno": 2235,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "min"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._qr_rectangular": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "abs",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "min",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._qr_rectangular_pullback": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "NotImplementedError",
    "abs",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._reciprocal": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "algopy.utpm.algorithms.pytpcore",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._reshape": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._shape": {
  "data": {
   "lineno": 1622,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._sign": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._sincos": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._sinhcosh": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._solve": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._solve_non_UTPM_A": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._solve_non_UTPM_x": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._solve_non_UTPM_x_pullback": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._solve_pullback": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._sqrt": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._square": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._tanhsech2": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._tansec2": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._transpose": {
  "data": {
   "lineno": 2357,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn._truediv": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.algorithms.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn.build_PL": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.RawAlgorithmsMixIn.build_PU": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms._black_f_white_fprime": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "algopy.nthderiv.np_filled_like",
    "f",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms._eval_slow_generic": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "algopy.nthderiv.np_filled_like",
    "algopy.utpm.algorithms.math",
    "algopy.utpm.algorithms.numpy",
    "f",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms._plus_const": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.algopy.exact_interpolation": {
  "data": {
   "shadows": "algopy.exact_interpolation"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.as_strided": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.as_strided"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.broadcast_arrays": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.broadcast_arrays"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.broadcast_arrays_shape": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "algopy.utpm.algorithms.numpy",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.pytpcore": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "algopy.utpm.algorithms.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "algopy.utpm.algorithms.truncated_triple_dot": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "algopy.utpm.algorithms.numpy",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.algorithms.vdot": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "algopy.utpm.algorithms.numpy",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests": {
  "data": {},
  "type": "module"
 },
 "algopy.utpm.tests.test_algorithms": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.tests.test_algorithms.Test_Helper_Functions": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_algorithms.Test_Helper_Functions.test_broadcast_arrays_shape": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "assert_array_equal",
    "broadcast_arrays_shape"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_Helper_Functions.test_triple_truncated_dot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_array_almost_equal",
    "truncated_triple_dot"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_Helper_Functions.test_vdot": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_array_almost_equal",
    "float",
    "range",
    "vdot"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing": {
  "data": {
   "lineno": 319
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_absolute_aliasing": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "UTPM._absolute",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_div_aliasing": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "UTPM._truediv",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_exp_aliasing": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "UTPM._exp",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_log_aliasing": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "UTPM._log",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_mul_aliasing": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "UTPM._mul",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_negative_aliasing": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "UTPM._negative",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_reciprocal_aliasing": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "UTPM._reciprocal",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_sign_aliasing": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "UTPM._sign",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_sqrt_aliasing": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "UTPM._sqrt",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_aliasing.test_square_aliasing": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "UTPM._square",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_pushforward_class_functions": {
  "data": {
   "lineno": 278
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_algorithms.Test_pushforward_class_functions.test__div": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "UTPM",
    "UTPM._truediv",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_pushforward_class_functions.test__itruediv": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "UTPM",
    "UTPM._itruediv",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_pushforward_class_functions.test__transpose": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "UTPM._transpose",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions.test_dawsn": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dawsn",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions.test_exp": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.exp",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions.test_expm1": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.expm1",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions.test_log": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.log",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions.test_log1p": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.log1p",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms.Test_taylor_polynomials_of_ode_solutions.test_power": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.algorithms._plus_const",
    "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions",
    "algopy.utpm.tests.test_algorithms.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_algorithms._plus_const": {
  "data": {
   "shadows": "algopy.utpm.algorithms._plus_const"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_algorithms._taylor_polynomials_of_ode_solutions": {
  "data": {
   "shadows": "algopy.utpm.algorithms._taylor_polynomials_of_ode_solutions"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_algorithms.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.tests.test_special_function_identities.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_abs_sign": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "UTPM.sign",
    "abs",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_abs_tanh": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "UTPM.tanh",
    "abs",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_absolute_abs_cos": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "UTPM.absolute",
    "abs",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_arccos": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "UTPM.arccos",
    "UTPM.cos",
    "algopy.utpm.tests.test_special_function_identities.sample_unit_radius",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_arcsin": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "UTPM.arcsin",
    "UTPM.sin",
    "algopy.utpm.tests.test_special_function_identities.sample_unit_radius",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_arctan": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "UTPM.arctan",
    "UTPM.tan",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_unit_radius",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_cos_squared_plus_sin_squared": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "UTPM.cos",
    "UTPM.sin",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_cosh_squared_minus_sinh_squared": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "UTPM.cosh",
    "UTPM.sinh",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_exp_log_v1": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.log",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_exp_log_v2": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.log",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_expm1_exp": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.expm1",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_expm1_log1p": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "UTPM.expm1",
    "UTPM.log1p",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_log1p_log": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "UTPM.log",
    "UTPM.log1p",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_maximum_cos": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "UTPM.absolute",
    "UTPM.cos",
    "UTPM.maximum",
    "abs",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_minimum_cos": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "UTPM.absolute",
    "UTPM.cos",
    "UTPM.minimum",
    "UTPM.negative",
    "abs",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_negative_sin_cos": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "UTPM.cos",
    "UTPM.negative",
    "UTPM.sin",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_pow_mul": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_reciprocal_div": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "UTPM.reciprocal",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_sign_tanh": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "UTPM.sign",
    "UTPM.tanh",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_sqrt_mul": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "UTPM.sqrt",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_sqrt_square": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "UTPM.sqrt",
    "UTPM.square",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_square_mul_v1": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "UTPM.square",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_square_mul_v2": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "UTPM.square",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_tan_sin_cos": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "UTPM.cos",
    "UTPM.sin",
    "UTPM.tan",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_PlainIdentities.test_tanh_sinh_cosh": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "UTPM.cosh",
    "UTPM.sinh",
    "UTPM.tanh",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_dawsn_erfi": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "UTPM.dawsn",
    "UTPM.erfi",
    "UTPM.exp",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_dpm_hyp1f1_exp_v1": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "UTPM.dpm_hyp1f1",
    "UTPM.exp",
    "algopy.utpm.tests.test_special_function_identities.mpmath",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_dpm_hyp1f1_exp_v2": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "UTPM.dpm_hyp1f1",
    "UTPM.exp",
    "algopy.utpm.tests.test_special_function_identities.mpmath",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_dpm_hyp1f1_expm1_exp": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "UTPM.dpm_hyp1f1",
    "UTPM.exp",
    "UTPM.expm1",
    "algopy.utpm.tests.test_special_function_identities.mpmath",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_dpm_hyp2f0_hyp1f1_neg_x": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dpm_hyp1f1",
    "UTPM.dpm_hyp2f0",
    "algopy.utpm.tests.test_special_function_identities.mpmath",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_dpm_hyp2f0_hyp1f1_pos_x": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dpm_hyp1f1",
    "UTPM.dpm_hyp2f0",
    "algopy.utpm.tests.test_special_function_identities.mpmath",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_expit_exp": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.expit",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_expit_logit": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "UTPM.expit",
    "UTPM.logit",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_gammaln_log": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "UTPM.gammaln",
    "UTPM.log",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp0f1_cos": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "UTPM.cos",
    "UTPM.hyp0f1",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp0f1_cosh": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "UTPM.cosh",
    "UTPM.hyp0f1",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp0f1_engineer_sinc": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "UTPM.hyp0f1",
    "UTPM.sin",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp1f1_erf": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "UTPM.erf",
    "UTPM.hyp1f1",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp1f1_erfi": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "UTPM.erfi",
    "UTPM.hyp1f1",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp1f1_exp_v1": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.hyp1f1",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp1f1_exp_v2": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.hyp1f1",
    "algopy.utpm.tests.test_special_function_identities.sample_randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyp1f1_expm1_exp": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "UTPM.exp",
    "UTPM.expm1",
    "UTPM.hyp1f1",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_hyperu_rational": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "UTPM.hyperu",
    "algopy.utpm.tests.test_special_function_identities.sample_nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_logit_log": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "UTPM.log",
    "UTPM.logit",
    "algopy.utpm.tests.test_special_function_identities.sample_unit",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_polygamma_polygamma": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "UTPM.polygamma",
    "algopy.utpm.tests.test_special_function_identities.math",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_psi_psi_v1": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "UTPM.psi",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.Test_SpecialIdentities.test_psi_psi_v2": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "UTPM.psi",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "algopy.utpm.tests.test_special_function_identities.sample_positive",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.algopy.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.mpmath": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "algopy.utpm.tests.test_special_function_identities.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.sample_nonzero": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "UTPM",
    "ValueError",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.sample_positive": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "UTPM",
    "ValueError",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.sample_randn": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "UTPM",
    "ValueError",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.sample_unit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "UTPM",
    "ValueError",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.sample_unit_radius": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "UTPM",
    "ValueError",
    "algopy.utpm.tests.test_special_function_identities.numpy",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_special_function_identities.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_special_function_identities.skipif": {
  "data": {
   "shadows": "numpy.testing.decorators.skipif"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "algopy.utpm.tests.test_utpm.numpy",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.tests.test_utpm.TestFFT": {
  "data": {
   "lineno": 2657
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.TestFFT.test_fft": {
  "data": {
   "lineno": 2659,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.fft",
    "UTPM.init_jacobian",
    "UTPM.pb_fft",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.TestFFT.test_fft_ifft": {
  "data": {
   "lineno": 2682,
   "symbols_in_volume": [
    "UTPM.extract_jacobian",
    "UTPM.fft",
    "UTPM.ifft",
    "UTPM.init_jacobian",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.TestFFT.test_ifft": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.ifft",
    "UTPM.init_jacobian",
    "UTPM.pb_ifft",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.TestFunctionOfJacobian": {
  "data": {
   "lineno": 2637
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.TestFunctionOfJacobian.test_FtoJT": {
  "data": {
   "lineno": 2638,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.TestFunctionOfJacobian.test_JTtoF": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Cholesky_Decomposition": {
  "data": {
   "lineno": 1652
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_Cholesky_Decomposition.test_pushforward": {
  "data": {
   "lineno": 1653,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.cholesky",
    "UTPM.dot",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigen_Value_Decomposition": {
  "data": {
   "lineno": 2603
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigen_Value_Decomposition.test_pb_eig": {
  "data": {
   "lineno": 2605,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition": {
  "data": {
   "lineno": 2069
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition.test_eigh1_pushforward": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.eigh1",
    "UTPM.pb_eigh1",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition.test_pullback": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "UTPM",
    "UTPM._diag",
    "UTPM.dot",
    "UTPM.eigh",
    "UTPM.pb_eigh",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition.test_pullback_repeated_eigenvalues": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "UTPM",
    "UTPM._diag",
    "UTPM.dot",
    "UTPM.eigh",
    "UTPM.pb_eigh",
    "UTPM.qr",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition.test_pushforward": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.eigh",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition.test_pushforward_repeated_eigenvalues": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.eigh",
    "UTPM.qr",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Eigenvalue_Decomposition.test_pushforward_repeated_eigenvalues_higher_order_multiple_direction": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.eigh",
    "UTPM.qr",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_LU_Decomposition": {
  "data": {
   "lineno": 1663
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_LU_Decomposition.test_pullback": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_LU_Decomposition.test_pushforward": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Pullbacks": {
  "data": {
   "lineno": 1490
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_Pullbacks.test_dot_pullback": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.pb_dot",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Pullbacks.test_inv_pullback": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.inv",
    "UTPM.pb_inv",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Pullbacks.test_inv_trace_pullback": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.inv",
    "UTPM.pb_inv",
    "UTPM.pb_trace",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Pullbacks.test_pullback_solve_for_inversion": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.inv",
    "UTPM.pb_inv",
    "UTPM.pb_solve",
    "UTPM.solve",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Pullbacks.test_solve_pullback": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.pb_solve",
    "UTPM.solve",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_UTPM_in_a_stupid_way": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.inv",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_abs": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "UTPM",
    "abs",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_absolute_pullback": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.absolute",
    "UTPM.pb_absolute",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_arccos": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.arccos",
    "UTPM.cos",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_arcsin": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.arcsin",
    "UTPM.sin",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_arctan": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.arctan",
    "UTPM.tan",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_argmax": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.argmax",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_equal",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_array_operations": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_as_utpm": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.as_utpm",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_botched_clip": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.botched_clip",
    "UTPM.sign",
    "UTPM.sin",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_botched_clip_pullback": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.botched_clip",
    "UTPM.pb_botched_clip",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_broadcasting_mul_and_div": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_mul",
    "UTPM.pb_truediv",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_broadcasting_setitem": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_broadcasting_sub": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_clone": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_constructor_stores_reference_of_tc_and_does_not_copy": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dawsn": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dawsn",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dawsn_pullback": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dawsn",
    "UTPM.pb_dawsn",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_det": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.cos",
    "UTPM.det",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.log",
    "UTPM.sin",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_det_2x2": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.det",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_det_3x3": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.det",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose",
    "f",
    "g"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_diag": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_diag_pullback": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.pb_diag",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dot_non_UTPM": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dot_output_shapes": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dpm_hyp1f1": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dpm_hyp1f1",
    "algopy.utpm.tests.test_utpm.mpmath",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dpm_hyp1f1_pullback": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dpm_hyp1f1",
    "UTPM.pb_dpm_hyp1f1",
    "algopy.utpm.tests.test_utpm.mpmath",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dpm_hyp2f0": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dpm_hyp2f0",
    "algopy.utpm.tests.test_utpm.mpmath",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_dpm_hyp2f0_pullback": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dpm_hyp2f0",
    "UTPM.pb_dpm_hyp2f0",
    "algopy.utpm.tests.test_utpm.mpmath",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_erf_pullback": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.erf",
    "UTPM.pb_erf",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_erfi_pullback": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.erfi",
    "UTPM.pb_erfi",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_exp_minus_one_near_zero": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.exp",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_less"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_expit_pullback": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.expit",
    "UTPM.pb_expit",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_expm1_near_zero": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.expm1",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_less"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_gammaln_pullback": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.gammaln",
    "UTPM.pb_gammaln",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_getitem_of_2D_array": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_getitem_single_element_of_matrix": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_getitem_single_element_of_vector": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_getitem_slice": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyp0f1": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyp0f1",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyp0f1_pullback": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyp0f1",
    "UTPM.pb_hyp0f1",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyp1f1": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyp1f1",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyp1f1_pullback": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyp1f1",
    "UTPM.pb_hyp1f1",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyp2f0": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyp2f0",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyp2f0_pullback": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyp2f0",
    "UTPM.pb_hyp2f0",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyperu": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyperu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_hyperu_pullback": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.hyperu",
    "UTPM.pb_hyperu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_inv": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.inv",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_iouter": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.iouter",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_logdet": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_logit_pullback": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.logit",
    "UTPM.pb_logit",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_max": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.max",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_mul": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_negative_pullback": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.negative",
    "UTPM.pb_negative",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_operations_on_scalar_UTPM": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_outer": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "UTPM.dot",
    "UTPM.init_jacobian",
    "UTPM.outer",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_outer2": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.outer",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_outer3": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.outer",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_outer4": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.outer",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pb_logdet": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pb_prod": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pb_sum": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_sum",
    "UTPM.sum",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_polygamma": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.polygamma",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_polygamma_pullback": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_polygamma",
    "UTPM.polygamma",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow_negative_int_exponentials": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow_pullback": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb___pow__",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow_pullback2": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb___pow__",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow_pullback_zero": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb___pow__",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow_zero": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_pow_zero_coeff": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_prod": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.prod",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_psi_pullback": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_psi",
    "UTPM.psi",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_reciprocal_pullback": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_reciprocal",
    "UTPM.reciprocal",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_reshape": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.reshape",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_rpow": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "assert_almost_equal",
    "f",
    "g"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_rpow.f": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_rpow.g": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_scalar_operations": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_setitem": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_setitem_iadd_scalar": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_setitem_slice": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_setitem_with_scalar": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_shape": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_shift": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.shift",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_sincos": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.cos",
    "UTPM.sin",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_sinhcosh": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.cosh",
    "UTPM.sinh",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_solve": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.solve",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_solve_non_UTPM_x": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.inv",
    "UTPM.solve",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_square_pullback": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_square",
    "UTPM.square",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_sum": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_sum_neg_axis": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.sum",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_symvec_vecsym": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.symvec",
    "UTPM.vecsym",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_symvec_vecsym_pullback": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_symvec",
    "UTPM.pb_vecsym",
    "UTPM.symvec",
    "UTPM.vecsym",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_tanh": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.cosh",
    "UTPM.sinh",
    "UTPM.tanh",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_tansec": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.cos",
    "UTPM.sin",
    "UTPM.tan",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_trace": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Push_Forward.test_transpose": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition": {
  "data": {
   "lineno": 1685
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_UTPM_and_array": {
  "data": {
   "lineno": 1974,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_UTPM_and_scalar": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pullback": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_qr",
    "UTPM.qr",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pullback_more_cols_than_rows": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_qr",
    "UTPM.qr",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pullback_rectangular_A": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.pb_qr",
    "UTPM.qr",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pullback_rectangular_A_qr_full": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.pb_dot",
    "UTPM.pb_qr_full",
    "UTPM.qr_full",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pullback_singular_matrix": {
  "data": {
   "lineno": 1950,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.pb_dot",
    "UTPM.pb_qr",
    "UTPM.pb_trace",
    "UTPM.qr",
    "UTPM.trace",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pushforward": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pushforward_more_cols_than_rows": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pushforward_rectangular_A": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal",
    "assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_pushforward_rectangular_A_qr_full": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr_full",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_singular_matrix1": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_singular_matrix2": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_QR_Decomposition.test_singular_matrix3": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.triu",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition": {
  "data": {
   "lineno": 2231
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_pb_svd": {
  "data": {
   "lineno": 2495,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.pb_svd",
    "UTPM.qr",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_pb_svd2": {
  "data": {
   "lineno": 2547,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm.numpy",
    "assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd1": {
  "data": {
   "lineno": 2249,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd2": {
  "data": {
   "lineno": 2282,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd3": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd4": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd5": {
  "data": {
   "lineno": 2416,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.qr",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal",
    "min"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.Test_Singular_Value_Decomposition.test_svd_example2": {
  "data": {
   "lineno": 2461,
   "symbols_in_volume": [
    "UTPM",
    "UTPM.diag",
    "UTPM.dot",
    "UTPM.svd",
    "algopy.utpm.tests.test_utpm.numpy",
    "algopy.zeros",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm.algopy.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm.mpmath": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "algopy.utpm.tests.test_utpm.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm.zeros": {
  "data": {
   "shadows": "algopy.zeros"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_complex": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_add": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm_complex.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_composite_function1": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm_complex.numpy",
    "assert_almost_equal",
    "eval_g1",
    "eval_g2",
    "eval_gf",
    "eval_gr"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_composite_function1.eval_g1": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_composite_function1.eval_g2": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_composite_function1.eval_gf": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "UTPM.extract_jacobian",
    "UTPM.init_jacobian",
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_composite_function1.eval_gr": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_composite_function1.f": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_div": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm_complex.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_mul": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm_complex.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_sub": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm_complex.numpy",
    "assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.Test_Forward_Complex.test_transpose": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "UTPM",
    "algopy.utpm.tests.test_utpm_complex.numpy",
    "assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_complex.algopy.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_complex.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_complex.mpmath": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "algopy.utpm.tests.test_utpm_complex.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_complex.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_complex.zeros": {
  "data": {
   "shadows": "algopy.zeros"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.tests.test_utpm_convenience.algopy": {
  "data": {
   "shadows": "algopy"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience.has_scipy": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "algopy.utpm.tests.test_utpm_convenience.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience.rosen": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm_convenience.algopy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_convenience.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience.skipif": {
  "data": {
   "shadows": "numpy.testing.decorators.skipif"
  },
  "type": "import"
 },
 "algopy.utpm.tests.test_utpm_convenience.test_rosen_hess": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm_convenience.algopy",
    "algopy.utpm.tests.test_utpm_convenience.has_scipy",
    "algopy.utpm.tests.test_utpm_convenience.rosen",
    "numpy.array",
    "numpy.size",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_convenience.test_rosen_hess_vec": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm_convenience.algopy",
    "algopy.utpm.tests.test_utpm_convenience.has_scipy",
    "algopy.utpm.tests.test_utpm_convenience.rosen",
    "numpy.array",
    "numpy.size",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_convenience.test_rosen_jac": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm_convenience.algopy",
    "algopy.utpm.tests.test_utpm_convenience.has_scipy",
    "algopy.utpm.tests.test_utpm_convenience.rosen",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.tests.test_utpm_convenience.test_scipy_rosen_hess_prod": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "algopy.utpm.tests.test_utpm_convenience.has_scipy",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.testing.decorators.skipif"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm": {
  "data": {
   "symbols_in_volume": [
    "NumpyVersion",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "module"
 },
 "algopy.utpm.utpm.UTP": {
  "data": {
   "lineno": 3303,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM"
   ]
  },
  "type": "class"
 },
 "algopy.utpm.utpm.UTP.__init__": {
  "data": {
   "lineno": 3363,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTP.__str__": {
  "data": {
   "lineno": 3384,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTP.coeff": {
  "data": {
   "lineno": 3377,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "algopy.utpm.utpm.UTPM.FtoJT": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.JTtoF": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__abs__": {
  "data": {
   "lineno": 1352
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__add__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__eq__": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__floordiv__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__ge__": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__getitem__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Ellipsis",
    "int",
    "isinstance",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__gt__": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__iadd__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__imul__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__isub__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__itruediv__": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__le__": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__len__": {
  "data": {
   "lineno": 1575
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__lt__": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__mul__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__neg__": {
  "data": {
   "lineno": 1367
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__pow__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__radd__": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__repr__": {
  "data": {
   "lineno": 1652
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__rmul__": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__rpow__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__rsub__": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__rtruediv__": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__setitem__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Ellipsis",
    "algopy.utpm.utpm.UTPM",
    "int",
    "isinstance",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__str__": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__sub__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.__truediv__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "isinstance",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.abs": {
  "data": {
   "lineno": 1336
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.absolute": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "classmethod",
    "cls._absolute"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.add": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.arccos": {
  "data": {
   "lineno": 1287
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.arcsin": {
  "data": {
   "lineno": 1280
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.arctan": {
  "data": {
   "lineno": 1294
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.argmax": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls._argmax"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.as_utpm": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "int",
    "isinstance",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.botched_clip": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.broadcast": {
  "data": {
   "lineno": 2512,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls._broadcast_arrays",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.cholesky": {
  "data": {
   "lineno": 2082,
   "symbols_in_volume": [
    "classmethod",
    "cls._cholesky"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.clone": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.coeff_op": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.combine_blocks": {
  "data": {
   "lineno": 3134,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "int",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.conj": {
  "data": {
   "lineno": 1595
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.conjugate": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.copy": {
  "data": {
   "lineno": 1557
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.cos": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.cosh": {
  "data": {
   "lineno": 1316
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.dawsn": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "classmethod",
    "cls._dawsn"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.det": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "classmethod",
    "cls.diag",
    "cls.lu2",
    "cls.piv2det",
    "cls.prod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.diag": {
  "data": {
   "lineno": 3008,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._diag"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.div": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.dot": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "cls._dot",
    "cls._dot_non_UTPM_x",
    "cls._dot_non_UTPM_y",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.dpm_hyp1f1": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.dpm_hyp2f0": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.dtype": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.eig": {
  "data": {
   "lineno": 2791,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.eigh": {
  "data": {
   "lineno": 2715,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.eigh1": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.erf": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "classmethod",
    "cls._erf"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.erfi": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "classmethod",
    "cls._erfi"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.exp": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.expit": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "classmethod",
    "cls._expit"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.expm1": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.extract_hess_vec": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.extract_hessian": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "algopy.utpm.utpm.mpmath",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.extract_jac_vec": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.extract_jacobian": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.as_utpm",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.extract_tensor": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "algopy.exact_interpolation.convert_multi_indices_to_pos",
    "algopy.exact_interpolation.generate_Gamma_and_rays",
    "algopy.exact_interpolation.generate_multi_indices",
    "algopy.exact_interpolation.generate_permutations",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.fabs": {
  "data": {
   "lineno": 1364
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.fft": {
  "data": {
   "lineno": 3232,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "complex",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.gammaln": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.get_flat": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.get_ndim": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.get_owndata": {
  "data": {
   "lineno": 1601
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.get_shape": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.get_size": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.get_transpose": {
  "data": {
   "lineno": 1581
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.hyp0f1": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.hyp1f1": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.hyp2f0": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.hyperu": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.ifft": {
  "data": {
   "lineno": 3267,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "complex",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.imag": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.init_hess_vec": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.init_hessian": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.init_jac_vec": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.init_jacobian": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.init_tensor": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.exact_interpolation.generate_Gamma_and_rays",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.inv": {
  "data": {
   "lineno": 2014,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "cls._inv"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.iouter": {
  "data": {
   "lineno": 3122,
   "symbols_in_volume": [
    "classmethod",
    "cls._iouter"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.log": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.log1p": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.logdet": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "classmethod",
    "cls.abs",
    "cls.diag",
    "cls.log",
    "cls.lu2",
    "cls.piv2det",
    "cls.prod",
    "cls.sign",
    "cls.sum"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.logit": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "classmethod",
    "cls._logit"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.lu": {
  "data": {
   "lineno": 2146,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.lu2": {
  "data": {
   "lineno": 2201,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "float",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.lu_factor": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.max": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "cls._max"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.maximum": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.minimum": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.mul": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.multiply": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.neg": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.negative": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "classmethod",
    "cls._negative"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.ones_like": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.outer": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "cls._outer",
    "cls._outer_non_utpm_x",
    "cls._outer_non_utpm_y",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_Id": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___add__": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "classmethod",
    "cls.pb_add"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___getitem__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___iadd__": {
  "data": {
   "lineno": 2350,
   "symbols_in_volume": [
    "classmethod",
    "cls.pb___add__"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___mul__": {
  "data": {
   "lineno": 2303,
   "symbols_in_volume": [
    "classmethod",
    "cls.pb_mul"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___neg__": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "classmethod",
    "cls.pb_neg"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___pow__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___setitem__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___sub__": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "classmethod",
    "cls.pb_sub"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb___truediv__": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "classmethod",
    "cls.pb_truediv"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_absolute": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_absolute"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_add": {
  "data": {
   "lineno": 2311,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.operator",
    "algopy.utpm.utpm.workaround_strides_function",
    "classmethod",
    "cls.broadcast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_botched_clip": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_cholesky": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_cholesky"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_coeff_op": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_conjugate": {
  "data": {
   "lineno": 2647,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls.conjugate"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_cos": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_dawsn": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_dawsn"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_det": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "classmethod",
    "cls.diag",
    "cls.lu2",
    "cls.pb_diag",
    "cls.pb_lu2",
    "cls.pb_prod",
    "cls.piv2det",
    "cls.prod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_diag": {
  "data": {
   "lineno": 3013,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._diag_pullback"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_dot": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls._dot_pullback",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_dpm_hyp1f1": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_dpm_hyp2f0": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_eig": {
  "data": {
   "lineno": 2845,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_eigh": {
  "data": {
   "lineno": 2764,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_eigh1": {
  "data": {
   "lineno": 2777,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_erf": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_erf"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_erfi": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_erfi"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_exp": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_expit": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_expit"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_expm1": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_fft": {
  "data": {
   "lineno": 3249,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "complex",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_gammaln": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_getitem": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_hyp0f1": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_hyp1f1": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_hyp2f0": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_hyperu": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_ifft": {
  "data": {
   "lineno": 3284,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "complex",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_imag": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_inv": {
  "data": {
   "lineno": 2582,
   "symbols_in_volume": [
    "classmethod",
    "cls._inv_pullback"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_log": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_log1p": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_logdet": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "classmethod",
    "cls.abs",
    "cls.diag",
    "cls.log",
    "cls.lu2",
    "cls.pb_diag",
    "cls.pb_log",
    "cls.pb_lu2",
    "cls.pb_sum",
    "cls.piv2det",
    "cls.prod",
    "cls.sign",
    "cls.sum"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_logit": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_logit"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_lu": {
  "data": {
   "lineno": 2183,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls.dot",
    "cls.solve",
    "cls.tril",
    "cls.triu"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_lu2": {
  "data": {
   "lineno": 2239,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls.dot",
    "cls.piv2mat",
    "cls.solve",
    "cls.tril",
    "cls.triu"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_mul": {
  "data": {
   "lineno": 2392,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.operator",
    "algopy.utpm.utpm.workaround_strides_function",
    "classmethod",
    "cls.broadcast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_neg": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_negative": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_negative"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_outer": {
  "data": {
   "lineno": 2000,
   "symbols_in_volume": [
    "classmethod",
    "cls._outer_pullback"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_polygamma": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_pow": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_prod": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_psi": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_qr": {
  "data": {
   "lineno": 2673,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_qr_full": {
  "data": {
   "lineno": 2701,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_real": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_reciprocal": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_reshape": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_reshape"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_setitem": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_sign": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_sign"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_sin": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_sincos": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_sincos"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_solve": {
  "data": {
   "lineno": 2595,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls._solve_pullback",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_sqrt": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_square": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "classmethod",
    "cls._pb_square"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_sub": {
  "data": {
   "lineno": 2369,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.operator",
    "algopy.utpm.utpm.workaround_strides_function",
    "classmethod",
    "cls.broadcast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_sum": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_svd": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_symvec": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_tan": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_tile": {
  "data": {
   "lineno": 3192,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_trace": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_transpose": {
  "data": {
   "lineno": 2638,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls.transpose"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_truediv": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.operator",
    "algopy.utpm.utpm.workaround_strides_function",
    "classmethod",
    "cls.broadcast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_vecsym": {
  "data": {
   "lineno": 3098,
   "symbols_in_volume": [
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.pb_zeros": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.piv2det": {
  "data": {
   "lineno": 2268,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.piv2mat": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.polygamma": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.prod": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.psi": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.qr": {
  "data": {
   "lineno": 2658,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "min"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.qr_full": {
  "data": {
   "lineno": 2686,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.real": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.reciprocal": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.reshape": {
  "data": {
   "lineno": 3127,
   "symbols_in_volume": [
    "NotImplementedError",
    "cls",
    "cls._reshape"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.set_transpose": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.set_zero": {
  "data": {
   "lineno": 1606
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.shift": {
  "data": {
   "lineno": 1629
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sign": {
  "data": {
   "lineno": 1330
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sin": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sincos": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sinh": {
  "data": {
   "lineno": 1309
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sinhcosh": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.solve": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "cls._solve_non_UTPM_A",
    "cls._solve_non_UTPM_x",
    "isinstance",
    "len",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sqrt": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.square": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "classmethod",
    "cls._square"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sub": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.sum": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.svd": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "abs",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "cls.__zeros__",
    "cls.dot",
    "cls.eigh",
    "cls.qr_full",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.symvec": {
  "data": {
   "lineno": 3026,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.tan": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.tanh": {
  "data": {
   "lineno": 1323
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.tansec2": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.tile": {
  "data": {
   "lineno": 3173,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.trace": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.transpose": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "algopy.utpm.utpm.UTPM"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.tril": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.triu": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.vecsym": {
  "data": {
   "lineno": 3074,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "cls",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.zeros": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "NotImplementedError",
    "algopy.utpm.utpm.numpy",
    "classmethod",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.UTPM.zeros_like": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "algopy.utpm.utpm.numpy"
   ]
  },
  "type": "function"
 },
 "algopy.utpm.utpm.algopy.utils": {
  "data": {
   "shadows": "algopy.utils"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.exint": {
  "data": {
   "shadows": "algopy.exact_interpolation"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.mpmath": {
  "data": {
   "shadows": "mpmath"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.nthderiv": {
  "data": {
   "shadows": "algopy.nthderiv"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.numpy.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "algopy.utpm.utpm.workaround_strides_function": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "fun"
   ]
  },
  "type": "function"
 },
 "algopy.version": {
  "data": {
   "symbols_in_volume": [
    "algopy.version.release",
    "algopy.version.version"
   ]
  },
  "type": "module"
 },
 "algopy.version.release": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "algopy.version.short_version": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "algopy.version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "algopy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}