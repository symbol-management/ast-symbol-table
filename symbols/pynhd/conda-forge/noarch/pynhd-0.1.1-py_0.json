{
 "pynhd": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution"
   ]
  },
  "type": "module"
 },
 "pynhd.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "pynhd.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pynhd.exceptions": {
  "data": {},
  "type": "module"
 },
 "pynhd.exceptions.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pynhd.exceptions.InvalidInputType": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pynhd.exceptions.InvalidInputType.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pynhd.exceptions.InvalidInputType.__str__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pynhd.exceptions.InvalidInputValue": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pynhd.exceptions.InvalidInputValue.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Generator",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pynhd.exceptions.InvalidInputValue.__str__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pynhd.exceptions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pynhd.exceptions.MissingItems": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pynhd.exceptions.MissingItems.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pynhd.exceptions.MissingItems.__str__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pynhd.exceptions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pynhd.exceptions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pynhd.exceptions.ZeroMatched": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pynhd.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "pynhd.pynhd": {
  "data": {},
  "type": "module"
 },
 "pynhd.pynhd.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pynhd.pynhd.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pynhd.pynhd.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pynhd.pynhd.NAType": {
  "data": {
   "shadows": "pandas._libs.missing.NAType"
  },
  "type": "import"
 },
 "pynhd.pynhd.NLDI": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "pynhd.pynhd.NLDI.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pygeoogc.RetrySession",
    "pygeoogc.ServiceURL",
    "pygeoogc.utils.traverse_json"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.NLDI._get_url": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pygeoutils.json2geodf"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.NLDI.getfeature_byid": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "InvalidInputValue",
    "bool",
    "geopandas.GeoDataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.NLDI.navigate_byid": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "InvalidInputValue",
    "bool",
    "geopandas.GeoDataFrame",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pynhd.pynhd.Response": {
  "data": {
   "shadows": "requests.Response"
  },
  "type": "import"
 },
 "pynhd.pynhd.RetrySession": {
  "data": {
   "shadows": "pygeoogc.RetrySession"
  },
  "type": "import"
 },
 "pynhd.pynhd.ServiceURL": {
  "data": {
   "shadows": "pygeoogc.ServiceURL"
  },
  "type": "import"
 },
 "pynhd.pynhd.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pynhd.pynhd.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pynhd.pynhd.WFS": {
  "data": {
   "shadows": "pygeoogc.WFS"
  },
  "type": "import"
 },
 "pynhd.pynhd.WaterData": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pygeoogc.WFS"
   ]
  },
  "type": "class"
 },
 "pynhd.pynhd.WaterData.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pygeoogc.ServiceURL",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.WaterData.bybox": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "geopandas.GeoDataFrame",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.WaterData.byid": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.WaterData.to_geodf": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "pygeoutils.json2geodf",
    "requests.Response"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd._add_tocomid": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "pandas.concat",
    "tocomid"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd._add_tocomid.tocomid": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "pynhd.pynhd._add_tocomid.tocomid.toid": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "IndexError",
    "pandas.NA"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd._remove_tinynetworks": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "any",
    "float",
    "geopandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.geoutils": {
  "data": {
   "shadows": "pygeoutils"
  },
  "type": "import"
 },
 "pynhd.pynhd.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "pynhd.pynhd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pynhd.pynhd.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pynhd.pynhd.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pynhd.pynhd.ogc": {
  "data": {
   "shadows": "pygeoogc"
  },
  "type": "import"
 },
 "pynhd.pynhd.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pynhd.pynhd.prepare_nhdplus": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ZeroMatched",
    "all",
    "any",
    "bool",
    "float",
    "geopandas.GeoDataFrame",
    "pandas.NA",
    "print",
    "pynhd.pynhd._add_tocomid",
    "pynhd.pynhd._remove_tinynetworks"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.topoogical_sort": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "list",
    "networkx.DiGraph",
    "networkx.from_pandas_edgelist",
    "networkx.topological_sort",
    "pandas.DataFrame",
    "pandas.NA",
    "pandas._libs.missing.NAType",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pynhd.pynhd.vector_accumulation": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.sum",
    "numpy.zeros_like",
    "pandas.DataFrame",
    "pandas.Series",
    "pynhd.pynhd.numbers",
    "pynhd.pynhd.topoogical_sort",
    "str",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pynhd.utils": {
  "data": {},
  "type": "module"
 },
 "pynhd.utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pynhd.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pynhd.utils.check_requirements": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "InvalidInputType",
    "MissingItems",
    "isinstance",
    "str",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 }
}