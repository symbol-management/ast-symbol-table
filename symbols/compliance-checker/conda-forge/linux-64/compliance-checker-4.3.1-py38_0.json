{
 "compliance_checker": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "get_versions"
   ]
  },
  "type": "module"
 },
 "compliance_checker.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.MemoizedDataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "netCDF4.Dataset"
   ]
  },
  "type": "class"
 },
 "compliance_checker.MemoizedDataset.get_variables_by_attributes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "compliance_checker.MemoizedDataset",
    "functools32.lru_cache",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "compliance_checker._version": {
  "data": {},
  "type": "module"
 },
 "compliance_checker._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "compliance_checker._version.json",
    "compliance_checker._version.version_json"
   ]
  },
  "type": "function"
 },
 "compliance_checker._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "compliance_checker._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "compliance_checker.acdd": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.acdd.ACDD1_1Check": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDDNCCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.acdd.ACDD1_1Check.__init__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDD1_1Check",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDD1_3Check": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDDNCCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.acdd.ACDD1_3Check.__init__": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDD1_3Check",
    "compliance_checker.util.kvp_convert",
    "functools.partial",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDD1_3Check.__init__._check_attr_is_iso_date": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "compliance_checker.base.ratable_result",
    "compliance_checker.util.datetime_is_iso",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDD1_3Check.check_id_has_no_blanks": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDD1_3Check.check_metadata_link": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.Result",
    "getattr",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDD1_3Check.check_var_coverage_content_type": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "compliance_checker.cfutil.get_geophysical_variables",
    "getattr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.acdd.ACDDBaseCheck.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck._check_scalar_vertical_extents": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "len",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck._check_total_z_extents": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "float",
    "hasattr",
    "len",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_acknowledgment": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_high": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_lat_extents": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cf.util._possibleyunits",
    "float",
    "hasattr",
    "len",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nanmax",
    "numpy.nanmin",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_lon_extents": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cf.util._possiblexunits",
    "float",
    "hasattr",
    "len",
    "numpy.isclose",
    "numpy.isnan",
    "numpy.nanmax",
    "numpy.nanmin",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_recommended": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_suggested": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_time_extents": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "abs",
    "compliance_checker.acdd.pendulum",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cfutil.get_time_variable",
    "compliance_checker.util.dateparse",
    "datetime.timedelta",
    "hasattr",
    "netCDF4.num2date"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_var_long_name": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_var_standard_name": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_var_units": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "getattr",
    "hasattr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_vertical_extents": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cfutil.get_z_variable",
    "hasattr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.get_applicable_variables": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.get_lat_variable",
    "compliance_checker.cfutil.get_lon_variable",
    "compliance_checker.cfutil.get_time_variable",
    "compliance_checker.cfutil.get_z_variable"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.verify_convention_version": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "AttributeError",
    "compliance_checker.base.ratable_result",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.verify_geospatial_bounds": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "AttributeError",
    "compliance_checker.base.ratable_result",
    "getattr",
    "pygeoif.from_wkt",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.acdd.ACDDNCCheck": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDDBaseCheck",
    "compliance_checker.base.BaseNCCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.acdd.BaseCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseCheck"
  },
  "type": "import"
 },
 "compliance_checker.acdd.BaseNCCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseNCCheck"
  },
  "type": "import"
 },
 "compliance_checker.acdd.Result": {
  "data": {
   "shadows": "compliance_checker.base.Result"
  },
  "type": "import"
 },
 "compliance_checker.acdd._possiblexunits": {
  "data": {
   "shadows": "compliance_checker.cf.util._possiblexunits"
  },
  "type": "import"
 },
 "compliance_checker.acdd._possibleyunits": {
  "data": {
   "shadows": "compliance_checker.cf.util._possibleyunits"
  },
  "type": "import"
 },
 "compliance_checker.acdd.cfutil": {
  "data": {
   "shadows": "compliance_checker.cfutil"
  },
  "type": "import"
 },
 "compliance_checker.acdd.check_has": {
  "data": {
   "shadows": "compliance_checker.base.check_has"
  },
  "type": "import"
 },
 "compliance_checker.acdd.dateparse": {
  "data": {
   "shadows": "compliance_checker.util.dateparse"
  },
  "type": "import"
 },
 "compliance_checker.acdd.datetime_is_iso": {
  "data": {
   "shadows": "compliance_checker.util.datetime_is_iso"
  },
  "type": "import"
 },
 "compliance_checker.acdd.from_wkt": {
  "data": {
   "shadows": "pygeoif.from_wkt"
  },
  "type": "import"
 },
 "compliance_checker.acdd.kvp_convert": {
  "data": {
   "shadows": "compliance_checker.util.kvp_convert"
  },
  "type": "import"
 },
 "compliance_checker.acdd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compliance_checker.acdd.num2date": {
  "data": {
   "shadows": "netCDF4.num2date"
  },
  "type": "import"
 },
 "compliance_checker.acdd.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "compliance_checker.acdd.pendulum": {
  "data": {
   "shadows": "pendulum"
  },
  "type": "import"
 },
 "compliance_checker.acdd.ratable_result": {
  "data": {
   "shadows": "compliance_checker.base.ratable_result"
  },
  "type": "import"
 },
 "compliance_checker.acdd.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "compliance_checker.acdd.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "compliance_checker.base": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.base.BaseCheck": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "compliance_checker.__version__",
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.BaseCheck.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.BaseCheck.get_test_ctx": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "compliance_checker.base.TestCtx"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.BaseCheck.setup": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "compliance_checker.base.BaseNCCheck": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "compliance_checker.MemoizedDataset",
    "netCDF4.Dataset",
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.BaseNCCheck.std_check": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.BaseNCCheck.std_check_in": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.BaseSOSDSCheck": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object",
    "owslib.swe.sensor.sml.SensorML"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.BaseSOSGCCheck": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "object",
    "owslib.swe.observation.sos100.SensorObservationService_1_0_0"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.base.GenericFile": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.GenericFile.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "compliance_checker.base.GenericFile.filepath": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "compliance_checker.base.MemoizedDataset": {
  "data": {
   "shadows": "compliance_checker.MemoizedDataset"
  },
  "type": "import"
 },
 "compliance_checker.base.Namespaces": {
  "data": {
   "shadows": "owslib.namespaces.Namespaces"
  },
  "type": "import"
 },
 "compliance_checker.base.Result": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.Result.__eq__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "compliance_checker.base.Result.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bool",
    "compliance_checker.base.BaseCheck",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.Result.__repr__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "compliance_checker.base.pprint",
    "compliance_checker.base.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.Result.serialize": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "compliance_checker.base.SensorML": {
  "data": {
   "shadows": "owslib.swe.sensor.sml.SensorML"
  },
  "type": "import"
 },
 "compliance_checker.base.SensorObservationService_1_0_0": {
  "data": {
   "shadows": "owslib.swe.observation.sos100.SensorObservationService_1_0_0"
  },
  "type": "import"
 },
 "compliance_checker.base.TestCtx": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.base.TestCtx.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.TestCtx.assert_true": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "compliance_checker.base.TestCtx.to_result": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.__version__": {
  "data": {
   "shadows": "compliance_checker.__version__"
  },
  "type": "import"
 },
 "compliance_checker.base.attr_check": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "compliance_checker.base.Result",
    "compliance_checker.base.std_check",
    "compliance_checker.base.std_check_in",
    "compliance_checker.base.xpath_check",
    "getattr",
    "hasattr",
    "lxml.etree.XPath",
    "other",
    "res",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.check_has": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.check_has._inner": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.check_has._inner._dec": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "compliance_checker.base.attr_check",
    "compliance_checker.util.kvp_convert",
    "func"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "compliance_checker.base.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "compliance_checker.base.fix_return_value": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "compliance_checker.base.Result",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.get_namespaces": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "owslib.namespaces.Namespaces"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.kvp_convert": {
  "data": {
   "shadows": "compliance_checker.util.kvp_convert"
  },
  "type": "import"
 },
 "compliance_checker.base.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "compliance_checker.base.ratable_result": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.score_group": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "compliance_checker.base.warnings"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.score_group._inner": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.score_group._inner._dec": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "compliance_checker.base.fix_return_value",
    "func",
    "func.__name__",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.score_group._inner._dec.dogroup": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "compliance_checker.base.Result",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.std_check": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.std_check_in": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.base.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "compliance_checker.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "compliance_checker.base.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "compliance_checker.base.xpath_check": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "len",
    "xpath"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.cf.CF1_6Check": {
  "data": {
   "shadows": "compliance_checker.cf.cf.CF1_6Check"
  },
  "type": "import"
 },
 "compliance_checker.cf.CF1_7Check": {
  "data": {
   "shadows": "compliance_checker.cf.cf.CF1_7Check"
  },
  "type": "import"
 },
 "compliance_checker.cf.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_d": {
  "data": {
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6",
    "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_7",
    "compliance_checker.cf.appendix_d.ocean_computed_standard_names"
   ]
  },
  "type": "module"
 },
 "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_7": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_d.no_missing_terms": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "any",
    "has_all_terms",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.appendix_d.no_missing_terms.has_all_terms": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.appendix_d.ocean_computed_standard_names": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_e": {
  "data": {
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_e.cell_methods16"
   ]
  },
  "type": "module"
 },
 "compliance_checker.cf.appendix_e.cell_methods16": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_e.cell_methods17": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f": {
  "data": {
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_f.grid_mapping_attr_types16",
    "compliance_checker.cf.appendix_f.grid_mapping_attr_types17",
    "compliance_checker.cf.appendix_f.grid_mapping_dict16",
    "compliance_checker.cf.appendix_f.grid_mapping_dict17"
   ]
  },
  "type": "module"
 },
 "compliance_checker.cf.appendix_f.ellipsoid_names17": {
  "data": {
   "lineno": 784
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f.grid_mapping_attr_types16": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f.grid_mapping_attr_types17": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f.grid_mapping_dict16": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f.grid_mapping_dict17": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f.horizontal_datum_names17": {
  "data": {
   "lineno": 292
  },
  "type": "constant"
 },
 "compliance_checker.cf.appendix_f.prime_meridian_names17": {
  "data": {
   "lineno": 766
  },
  "type": "constant"
 },
 "compliance_checker.cf.cf": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "__name__",
    "compliance_checker.cf.cf.logging",
    "str"
   ]
  },
  "type": "module"
 },
 "compliance_checker.cf.cf.BaseCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseCheck"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.BaseNCCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseNCCheck"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.CF1_6Check": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.CFNCCheck",
    "compliance_checker.cf.cf.appendix_a_base"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.cf.CF1_6Check.__init__": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_e.cell_methods16",
    "compliance_checker.cf.appendix_f.grid_mapping_attr_types16",
    "compliance_checker.cf.appendix_f.grid_mapping_dict16",
    "compliance_checker.cf.cf.CF1_6Check",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_axis": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_cell_methods_paren_info": {
  "data": {
   "lineno": 3329,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.regex",
    "enumerate",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_dimensionless_vertical_coordinate_1_6": {
  "data": {
   "lineno": 2323,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.TestCtx",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_flag_masks": {
  "data": {
   "lineno": 1921,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "getattr",
    "isinstance",
    "len",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_flag_meanings": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cf.cf.regex",
    "getattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_flag_values": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_grid_mapping_attr_condition": {
  "data": {
   "lineno": 2810,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_hint_bounds": {
  "data": {
   "lineno": 3846,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.Result",
    "compliance_checker.cfutil.get_cell_boundary_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_valid_cf_units": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cfutil.is_dimensionless_standard_name",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_valid_standard_units": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.util.units_convertible",
    "compliance_checker.cfutil.VALID_LAT_UNITS",
    "compliance_checker.cfutil.VALID_LON_UNITS",
    "compliance_checker.cfutil.is_dimensionless_standard_name",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._check_valid_udunits": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.util.units_known",
    "compliance_checker.cfutil.is_dimensionless_standard_name",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_latitude_of_projection_origin": {
  "data": {
   "lineno": 2850
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_longitude_of_central_meridian": {
  "data": {
   "lineno": 2880
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_longitude_of_prime_meridian": {
  "data": {
   "lineno": 2895
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_longitude_of_projection_origin": {
  "data": {
   "lineno": 2865
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_scale_factor_at_central_meridian": {
  "data": {
   "lineno": 2910
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_scale_factor_at_projection_origin": {
  "data": {
   "lineno": 2925
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_standard_parallel": {
  "data": {
   "lineno": 2940
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check._evaluate_straight_vertical_longitude_from_pole": {
  "data": {
   "lineno": 2955
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_all_features_are_same_type": {
  "data": {
   "lineno": 3683,
   "symbols_in_volume": [
    "collections.defaultdict",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cfutil.guess_feature_type",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_ancillary_variables": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_aux_coordinates": {
  "data": {
   "lineno": 2534,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "getattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_calendar": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_cell_boundaries": {
  "data": {
   "lineno": 3078,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cfutil.get_cell_boundary_map",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_cell_measures": {
  "data": {
   "lineno": 3170,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cf.cf.regex",
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_cell_methods": {
  "data": {
   "lineno": 3244,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.regex",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_cf_role": {
  "data": {
   "lineno": 3747,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_child_attr_data_types": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_climatological_statistics": {
  "data": {
   "lineno": 3400,
   "symbols_in_volume": [
    "any",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cf.cf.regex",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_compression_gathering": {
  "data": {
   "lineno": 3612,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_convention_globals": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "getattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_convention_possibly_var_attrs": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "getattr",
    "isinstance",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_coordinate_types": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "compliance_checker.cfutil.is_compression_coordinate",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_data_types": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "all",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "len",
    "numpy.character",
    "numpy.double",
    "numpy.dtype",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_dimension_names": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "collections.defaultdict",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_dimension_order": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cfutil.get_cell_boundary_variables",
    "compliance_checker.cfutil.get_climatology_variable",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_dimensional_vertical_coordinate": {
  "data": {
   "lineno": 2267,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cf.util.units_convertible",
    "compliance_checker.cfutil.get_z_variables",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_dimensionless_vertical_coordinates": {
  "data": {
   "lineno": 2352,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6",
    "compliance_checker.cfutil.get_z_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_duplicate_axis": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cfutil.get_axis_map",
    "hasattr",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_feature_type": {
  "data": {
   "lineno": 3723,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_fill_value_outside_valid_range": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "hasattr",
    "isinstance",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_flags": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "all",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cfutil.get_flag_variables",
    "getattr",
    "list",
    "map",
    "zip"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_geographic_region": {
  "data": {
   "lineno": 2975,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "numpy.ma.isMA",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_grid_coordinates": {
  "data": {
   "lineno": 2660,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cfutil.get_axis_map",
    "compliance_checker.cfutil.get_true_latitude_variables",
    "compliance_checker.cfutil.get_true_longitude_variables",
    "compliance_checker.cfutil.guess_feature_type",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_hints": {
  "data": {
   "lineno": 3832
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_latitude": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "cf_units.Unit",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cfutil.VALID_LAT_UNITS",
    "compliance_checker.cfutil.VALID_LON_UNITS",
    "compliance_checker.cfutil.get_grid_mapping_variables",
    "compliance_checker.cfutil.get_latitude_variables",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_longitude": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "cf_units.Unit",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cfutil.VALID_LAT_UNITS",
    "compliance_checker.cfutil.VALID_LON_UNITS",
    "compliance_checker.cfutil.get_grid_mapping_variables",
    "compliance_checker.cfutil.get_longitude_variables",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_multi_dimensional_coords": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_names_unique": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "collections.defaultdict",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_naming_conventions": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.regex"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_packed_data": {
  "data": {
   "lineno": 3523,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "float",
    "getattr",
    "hasattr",
    "isinstance",
    "numpy.floating",
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_reduced_horizontal_grid": {
  "data": {
   "lineno": 2746,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cfutil.get_axis_map",
    "compliance_checker.cfutil.get_latitude_variables",
    "compliance_checker.cfutil.get_longitude_variables",
    "getattr",
    "isinstance",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_standard_name": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cfutil.get_axis_variables",
    "compliance_checker.cfutil.get_flag_variables",
    "compliance_checker.cfutil.is_compression_coordinate",
    "getattr",
    "hasattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_time_coordinate": {
  "data": {
   "lineno": 2392,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "compliance_checker.cf.util.units_temporal",
    "compliance_checker.cfutil.get_time_variables",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_units": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cfutil.is_compression_coordinate",
    "getattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_6Check.check_variable_features": {
  "data": {
   "lineno": 3773,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cfutil.guess_feature_type",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check": {
  "data": {
   "lineno": 3869,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.CF1_6Check",
    "compliance_checker.cf.cf.appendix_a_base"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.cf.CF1_7Check.__init__": {
  "data": {
   "lineno": 3886,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_e.cell_methods17",
    "compliance_checker.cf.appendix_f.grid_mapping_attr_types17",
    "compliance_checker.cf.appendix_f.grid_mapping_dict17",
    "compliance_checker.cf.cf.CF1_7Check",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._check_dimensionless_vertical_coordinate_1_7": {
  "data": {
   "lineno": 4523,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._check_gmattr_existence_condition_ell_pmerid_hdatum": {
  "data": {
   "lineno": 4208,
   "symbols_in_volume": [
    "any",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._check_gmattr_existence_condition_geoid_name_geoptl_datum_name": {
  "data": {
   "lineno": 4190
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._check_grid_mapping_attr_condition": {
  "data": {
   "lineno": 4152,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.CF1_7Check",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_geographic_crs_name": {
  "data": {
   "lineno": 4268,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_geoid_name": {
  "data": {
   "lineno": 4291,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_geopotential_datum_name": {
  "data": {
   "lineno": 4313,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_horizontal_datum_name": {
  "data": {
   "lineno": 4335,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_f.horizontal_datum_names17"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_prime_meridian_name": {
  "data": {
   "lineno": 4351,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_f.prime_meridian_names17"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_projected_crs_name": {
  "data": {
   "lineno": 4366,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_reference_ellipsoid_name": {
  "data": {
   "lineno": 4388,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_f.ellipsoid_names17"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._evaluate_towgs84": {
  "data": {
   "lineno": 4403,
   "symbols_in_volume": [
    "getattr",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._exec_query_str_with_params": {
  "data": {
   "lineno": 4255
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._get_projdb_conn": {
  "data": {
   "lineno": 4244,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.os",
    "compliance_checker.cf.cf.pyproj",
    "compliance_checker.cf.cf.sqlite3"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check._process_v_datum_str": {
  "data": {
   "lineno": 4511,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check.check_actual_range": {
  "data": {
   "lineno": 3893,
   "symbols_in_volume": [
    "TypeError",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check.check_cell_boundaries": {
  "data": {
   "lineno": 3982,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cfutil.get_cell_boundary_map",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check.check_cell_measures": {
  "data": {
   "lineno": 4057,
   "symbols_in_volume": [
    "AttributeError",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cf.cf.regex",
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check.check_dimensionless_vertical_coordinates": {
  "data": {
   "lineno": 4551,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_7",
    "compliance_checker.cfutil.get_z_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CF1_7Check.check_grid_mapping": {
  "data": {
   "lineno": 4434,
   "symbols_in_volume": [
    "__doc__",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.cf.cf.CF1_7Check",
    "compliance_checker.cf.cf.os",
    "compliance_checker.cf.cf.pyproj",
    "compliance_checker.cf.cf.sqlite3",
    "compliance_checker.cfutil.get_grid_mapping_variables",
    "getattr",
    "isinstance",
    "iter",
    "len",
    "next",
    "sorted",
    "str",
    "super",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.cf.CFBaseCheck.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "collections.defaultdict",
    "compliance_checker.cf.cf.CFBaseCheck",
    "compliance_checker.cf.util.StandardNameTable",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._check_attr_type": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.cf.basestring",
    "getattr",
    "isinstance",
    "numpy.issubdtype",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._check_dimensionless_vertical_coordinates": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_z_variables",
    "version_specific_check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._check_formula_terms": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "compliance_checker.cf.appendix_d.no_missing_terms",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cf.cf.regex",
    "getattr",
    "isinstance",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._check_grid_mapping_attr_condition": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._dims_in_order": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.regex"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_ancillary_vars": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_aux_coord_vars": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_auxiliary_coordinate_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_boundary_vars": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_cell_boundary_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_cf_standard_name_table": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "IndexError",
    "compliance_checker.cf.cf.os",
    "compliance_checker.cf.cf.sys",
    "compliance_checker.cf.util.StandardNameTable",
    "compliance_checker.cf.util.create_cached_data_dir",
    "compliance_checker.cf.util.download_cf_standard_name_table",
    "getattr",
    "len",
    "print",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_clim_vars": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_climatology_variable"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_coord_vars": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_coordinate_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_geophysical_vars": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_metadata_vars": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._get_coord_axis_map": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_latitude_variables",
    "compliance_checker.cfutil.get_longitude_variables",
    "compliance_checker.cfutil.get_time_variables",
    "compliance_checker.cfutil.get_z_variables",
    "compliance_checker.cfutil.is_compression_coordinate",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._get_coord_vars": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._get_dimension_order": {
  "data": {
   "lineno": 777
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._get_instance_dimensions": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._get_pretty_dimension_order": {
  "data": {
   "lineno": 814
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._handle_dtype_check": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "ValueError",
    "compliance_checker.cf.cf.basestring",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._is_station_var": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._parent_var_attr_type_check": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.basestring",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._split_standard_name": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_appendix_a": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_conventions_version": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.cf.cf.regex",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_grid_mapping": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.cf.cf.basestring",
    "compliance_checker.cf.cf.regex",
    "compliance_checker.cfutil.get_grid_mapping_variables",
    "getattr",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.setup": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.CFNCCheck": {
  "data": {
   "lineno": 4601,
   "symbols_in_volume": [
    "compliance_checker.base.BaseNCCheck",
    "compliance_checker.cf.cf.CFBaseCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.cf.CFNCCheck.beliefs": {
  "data": {
   "lineno": 4603,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.Result": {
  "data": {
   "shadows": "compliance_checker.base.Result"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.TestCtx": {
  "data": {
   "shadows": "compliance_checker.base.TestCtx"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.appendix_a_base": {
  "data": {
   "lineno": 1048
  },
  "type": "constant"
 },
 "compliance_checker.cf.cf.basestring": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "compliance_checker.cf.cf.cell_methods16": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_e.cell_methods16"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.cell_methods17": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_e.cell_methods17"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.cfutil": {
  "data": {
   "shadows": "compliance_checker.cfutil"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.dimless_vertical_coordinates_1_6": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.dimless_vertical_coordinates_1_7": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_7"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.ellipsoid_names17": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.ellipsoid_names17"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.grid_mapping_attr_types16": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.grid_mapping_attr_types16"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.grid_mapping_attr_types17": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.grid_mapping_attr_types17"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.grid_mapping_dict16": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.grid_mapping_dict16"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.grid_mapping_dict17": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.grid_mapping_dict17"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.horizontal_datum_names17": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.horizontal_datum_names17"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.is_likely_dsg": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.is_likely_dsg._dec": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "compliance_checker.cf.cf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.no_missing_terms": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_d.no_missing_terms"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.prime_meridian_names17": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_f.prime_meridian_names17"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.print_exc": {
  "data": {
   "shadows": "traceback.print_exc"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.print_exceptions": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.print_exceptions.wrapper": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "f",
    "functools.wraps",
    "traceback.print_exc"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.cf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.util": {
  "data": {
   "shadows": "compliance_checker.cf.util"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "compliance_checker.cf.cf.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "compliance_checker.cf.dimless_vertical_coordinates_1_6": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6"
  },
  "type": "import"
 },
 "compliance_checker.cf.dimless_vertical_coordinates_1_7": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_7"
  },
  "type": "import"
 },
 "compliance_checker.cf.util": {
  "data": {
   "shadows": "compliance_checker.cf.cf.util"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.Dimension": {
  "data": {
   "shadows": "netCDF4.Dimension"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.DotDict": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.util.DotDict.__dir__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.__getattr__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "AttributeError",
    "compliance_checker.cf.util.DotDict",
    "compliance_checker.cf.util.dis",
    "compliance_checker.cf.util.sys"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.__setattr__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AttributeError",
    "compliance_checker.cf.util.DotDict",
    "dict",
    "dir",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.copy": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.fromkeys": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.cf.util.DotDict",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.get_safe": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "compliance_checker.cf.util.get_safe"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.util.NCGraph.__getattr__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TypeError",
    "compliance_checker.cf.util.DotDict",
    "isinstance",
    "netCDF4.Dimension",
    "netCDF4.Variable",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_coordinate": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "compliance_checker.cf.util.NCGraph"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_dimension": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "compliance_checker.cf.util.NCGraph"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_grid_mapping": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "compliance_checker.cf.util.NCGraph"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_references": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.util.StandardNameTable.NameEntry": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.cf.util.StandardNameTable.NameEntry.__init__": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.NameEntry._get": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__contains__": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__getitem__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "compliance_checker.cf.util.io",
    "compliance_checker.cf.util.os",
    "lxml.etree.XMLParser",
    "lxml.etree.fromstring",
    "pkgutil.get_data"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__iter__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "compliance_checker.cf.util.itertools",
    "iter"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__len__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.get": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.Variable": {
  "data": {
   "shadows": "netCDF4.Variable"
  },
  "type": "import"
 },
 "compliance_checker.cf.util._possibleaxis": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possibleaxisunits": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possiblet": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possibletunits": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possiblex": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possiblexunits": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possibley": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possibleyunits": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "compliance_checker.cf.util._possiblez": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "compliance_checker.cf.util.create_cached_data_dir": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "compliance_checker.cf.util.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.dis": {
  "data": {
   "shadows": "dis"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.download_cf_standard_name_table": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "compliance_checker.cf.util.requests",
    "compliance_checker.cf.util.sys",
    "open",
    "pkg_resources.resource_filename",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.find_coord_vars": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "compliance_checker.cf.util.get_data": {
  "data": {
   "shadows": "pkgutil.get_data"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.get_safe": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Exception",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.is_time_variable": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "compliance_checker.cf.util.units_convertible",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.is_vertical_coordinate": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "compliance_checker.cf.util._possiblez",
    "compliance_checker.cf.util.units_convertible",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.map_axes": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.cf.util.units_convertible": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.units_known": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit"
   ]
  },
  "type": "function"
 },
 "compliance_checker.cf.util.units_temporal": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "cf_units.Unit"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.ioos.BaseCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseCheck"
  },
  "type": "import"
 },
 "compliance_checker.ioos.BaseNCCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseNCCheck"
  },
  "type": "import"
 },
 "compliance_checker.ioos.BaseSOSDSCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseSOSDSCheck"
  },
  "type": "import"
 },
 "compliance_checker.ioos.BaseSOSGCCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseSOSGCCheck"
  },
  "type": "import"
 },
 "compliance_checker.ioos.CF1_6Check": {
  "data": {
   "shadows": "compliance_checker.cf.cf.CF1_6Check"
  },
  "type": "import"
 },
 "compliance_checker.ioos.IOOS0_1Check": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "compliance_checker.ioos.IOOSNCCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOS0_1Check.check_altitude_units": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS0_1Check.check_global_attributes": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.BaseCheck.MEDIUM"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS0_1Check.check_variable_attributes": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS0_1Check.check_variable_names": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS0_1Check.check_variable_units": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "compliance_checker.ioos.IOOSNCCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOS1_1Check.__init__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_geophysical_vars_fill_value": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.cfutil.get_geophysical_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_geophysical_vars_standard_name": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_high": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_platform_variable_attributes": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_platform_variables": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "all",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_recommended": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOS1_1Check.check_units": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "compliance_checker.cf.cf.CF1_6Check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSBaseCheck": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOSBaseCheck._has_attr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSBaseCheck._has_var_attr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSBaseSOSCheck": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOSNCCheck": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "compliance_checker.base.BaseNCCheck",
    "compliance_checker.ioos.IOOSBaseCheck"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_station_location_lat": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_station_location_lon": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_time_period": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "compliance_checker.base.BaseSOSDSCheck",
    "compliance_checker.ioos.IOOSBaseSOSCheck",
    "owslib.namespaces.Namespaces"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck.check_high": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.check_has",
    "lxml.etree.XPath"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck.check_recommended": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.check_has",
    "lxml.etree.XPath"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck.check_suggested": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "compliance_checker.base.BaseSOSGCCheck",
    "compliance_checker.ioos.IOOSBaseSOSCheck",
    "owslib.namespaces.Namespaces"
   ]
  },
  "type": "class"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck.check_high": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck.check_recommended": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.check_has",
    "lxml.etree.XPath"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck.check_suggested": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.check_has"
   ]
  },
  "type": "function"
 },
 "compliance_checker.ioos.Namespaces": {
  "data": {
   "shadows": "owslib.namespaces.Namespaces"
  },
  "type": "import"
 },
 "compliance_checker.ioos.Result": {
  "data": {
   "shadows": "compliance_checker.base.Result"
  },
  "type": "import"
 },
 "compliance_checker.ioos.XPath": {
  "data": {
   "shadows": "lxml.etree.XPath"
  },
  "type": "import"
 },
 "compliance_checker.ioos.check_has": {
  "data": {
   "shadows": "compliance_checker.base.check_has"
  },
  "type": "import"
 },
 "compliance_checker.ioos.get_geophysical_variables": {
  "data": {
   "shadows": "compliance_checker.cfutil.get_geophysical_variables"
  },
  "type": "import"
 },
 "compliance_checker.ioos.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "compliance_checker.lru_cache": {
  "data": {
   "shadows": "functools32.lru_cache"
  },
  "type": "import"
 },
 "compliance_checker.protocols": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.protocols.cdl": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.protocols.cdl.is_cdl": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "compliance_checker.protocols.cdl.os",
    "open"
   ]
  },
  "type": "function"
 },
 "compliance_checker.protocols.cdl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.protocols.netcdf": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.protocols.netcdf.is_classic_netcdf": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "compliance_checker.protocols.netcdf.is_hdf5": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "compliance_checker.protocols.netcdf.is_netcdf": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "compliance_checker.protocols.netcdf.is_classic_netcdf",
    "compliance_checker.protocols.netcdf.is_hdf5",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "compliance_checker.protocols.opendap": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.protocols.opendap.is_opendap": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "compliance_checker.protocols.opendap.requests"
   ]
  },
  "type": "function"
 },
 "compliance_checker.protocols.opendap.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "compliance_checker.runner": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.runner.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.suite.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.runner.ComplianceChecker": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.runner.ComplianceChecker.check_errors": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.runner.sys",
    "compliance_checker.runner.traceback",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.html_output": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.runner.io",
    "compliance_checker.runner.six",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.json_output": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "compliance_checker.runner.io",
    "compliance_checker.runner.json",
    "compliance_checker.runner.six",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.run_checker": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "classmethod",
    "collections.OrderedDict",
    "compliance_checker.runner.io",
    "compliance_checker.runner.os",
    "compliance_checker.runner.six",
    "compliance_checker.runner.stdout_redirector",
    "compliance_checker.suite.CheckSuite",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.stdout_output": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.runner.six"
   ]
  },
  "type": "function"
 },
 "compliance_checker.runner.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "compliance_checker.runner.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "compliance_checker.runner.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "compliance_checker.runner.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "compliance_checker.runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.runner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "compliance_checker.runner.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "compliance_checker.runner.stdout_redirector": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "compliance_checker.runner.sys",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "compliance_checker.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.runner.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "compliance_checker.suite": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "compliance_checker.suite.codecs",
    "compliance_checker.suite.sys"
   ]
  },
  "type": "module"
 },
 "compliance_checker.suite.BaseCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseCheck"
  },
  "type": "import"
 },
 "compliance_checker.suite.CFBaseCheck": {
  "data": {
   "shadows": "compliance_checker.cf.cf.CFBaseCheck"
  },
  "type": "import"
 },
 "compliance_checker.suite.CheckSuite": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.suite.CheckSuite.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._get_check_url": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._get_check_versioned_name": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._get_checks": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.suite.inspect"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._get_generator_plugins": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "pkg_resources.working_set.iter_entry_points"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._get_valid_checkers": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "a",
    "a.__subclasses__",
    "len",
    "list",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "compliance_checker.base.Result",
    "compliance_checker.suite.itertools",
    "len",
    "list",
    "map",
    "max",
    "sorted",
    "sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw.group_func": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw.trim_groups": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "compliance_checker.base.Result",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._load_checkers": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Exception",
    "ValueError",
    "classmethod",
    "compliance_checker.suite.itertools",
    "compliance_checker.suite.sys",
    "compliance_checker.suite.warnings",
    "distutils.version.StrictVersion",
    "getattr",
    "hasattr",
    "max",
    "operator.itemgetter",
    "print",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._print_checker": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "collections.defaultdict",
    "compliance_checker.suite.extract_docstring_summary",
    "compliance_checker.suite.six",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._print_suites": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "getattr",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._process_skip_checks": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "KeyError",
    "classmethod",
    "collections.defaultdict",
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.suite.warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._run_check": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "check_method",
    "check_method.__func__.__name__",
    "check_method.__self__",
    "compliance_checker.base.fix_return_value",
    "dict",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._translate_value": {
  "data": {
   "lineno": 823
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.add_plugin_args": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.build_structure": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "named_function"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.build_structure.named_function": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "named_function"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.checker_html_output": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "jinja2.Environment",
    "jinja2.PackageLoader"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.dict_output": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.generate_dataset": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "compliance_checker.suite.subprocess",
    "compliance_checker.suite.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.get_points": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.html_output": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_all_available_checkers": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "classmethod",
    "pkg_resources.working_set.iter_entry_points"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_dataset": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_generated_checkers": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_local_dataset": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "ValueError",
    "compliance_checker.MemoizedDataset",
    "compliance_checker.base.GenericFile",
    "compliance_checker.protocols.cdl.is_cdl",
    "compliance_checker.protocols.netcdf.is_netcdf",
    "compliance_checker.suite.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_remote_dataset": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ValueError",
    "compliance_checker.protocols.opendap.is_opendap",
    "compliance_checker.suite.requests",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.passtree": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.process_doc": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ValueError",
    "lxml.etree.fromstring",
    "owslib.sos.SensorObservationService",
    "owslib.swe.sensor.sml.SensorML"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.reasoning_routine": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "compliance_checker.suite.itertools",
    "len",
    "print",
    "process_table",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.reasoning_routine.process_table": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.run": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "Exception",
    "checker_class",
    "collections.defaultdict",
    "compliance_checker.suite.CheckSuite",
    "compliance_checker.suite.sys",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.scores": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.serialize": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "compliance_checker.base.Result",
    "datetime.datetime",
    "dict",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.standard_output": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "compliance_checker.suite.os",
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.standard_output_generation": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.suite.ET": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "compliance_checker.suite.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "compliance_checker.suite.GenericFile": {
  "data": {
   "shadows": "compliance_checker.base.GenericFile"
  },
  "type": "import"
 },
 "compliance_checker.suite.MemoizedDataset": {
  "data": {
   "shadows": "compliance_checker.MemoizedDataset"
  },
  "type": "import"
 },
 "compliance_checker.suite.PackageLoader": {
  "data": {
   "shadows": "jinja2.PackageLoader"
  },
  "type": "import"
 },
 "compliance_checker.suite.Result": {
  "data": {
   "shadows": "compliance_checker.base.Result"
  },
  "type": "import"
 },
 "compliance_checker.suite.SensorML": {
  "data": {
   "shadows": "owslib.swe.sensor.sml.SensorML"
  },
  "type": "import"
 },
 "compliance_checker.suite.SensorObservationService": {
  "data": {
   "shadows": "owslib.sos.SensorObservationService"
  },
  "type": "import"
 },
 "compliance_checker.suite.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "compliance_checker.suite.cdl": {
  "data": {
   "shadows": "compliance_checker.protocols.cdl"
  },
  "type": "import"
 },
 "compliance_checker.suite.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "compliance_checker.suite.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "compliance_checker.suite.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "compliance_checker.suite.extract_docstring_summary": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "compliance_checker.suite.re",
    "compliance_checker.suite.textwrap"
   ]
  },
  "type": "function"
 },
 "compliance_checker.suite.fix_return_value": {
  "data": {
   "shadows": "compliance_checker.base.fix_return_value"
  },
  "type": "import"
 },
 "compliance_checker.suite.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "compliance_checker.suite.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "compliance_checker.suite.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "compliance_checker.suite.netcdf": {
  "data": {
   "shadows": "compliance_checker.protocols.netcdf"
  },
  "type": "import"
 },
 "compliance_checker.suite.opendap": {
  "data": {
   "shadows": "compliance_checker.protocols.opendap"
  },
  "type": "import"
 },
 "compliance_checker.suite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.suite.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "compliance_checker.suite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "compliance_checker.suite.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "compliance_checker.suite.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "compliance_checker.suite.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "compliance_checker.suite.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.suite.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "compliance_checker.suite.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "compliance_checker.suite.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "compliance_checker.suite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "compliance_checker.suite.working_set": {
  "data": {
   "shadows": "pkg_resources.working_set"
  },
  "type": "import"
 },
 "compliance_checker.tests": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.BaseTestCase": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "compliance_checker.tests.unittest"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.BaseTestCase.__repr__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "compliance_checker.tests.BaseTestCase.assert_result_is_bad": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.BaseTestCase.assert_result_is_good": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.BaseTestCase.load_dataset": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "netCDF4.Dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.BaseTestCase.shortDescription": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "compliance_checker.tests.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.helpers": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.helpers.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.helpers.MockNetCDF": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "netCDF4.Dataset"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.helpers.MockNetCDF.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockNetCDF",
    "compliance_checker.tests.helpers.tempfile",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.helpers.MockTimeSeries": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockNetCDF"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.helpers.MockTimeSeries.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "super"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.helpers.MockVariable": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.helpers.MockVariable.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.helpers.MockVariable.ncattrs": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "vars"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.helpers.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "compliance_checker.tests.resources": {
  "data": {
   "symbols_in_volume": [
    "compliance_checker.tests.resources.get_filename"
   ]
  },
  "type": "module"
 },
 "compliance_checker.tests.resources.STATIC_FILES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "compliance_checker.tests.resources.generate_dataset": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.subprocess"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.resources.get_filename": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.generate_dataset",
    "compliance_checker.tests.resources.os",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.resources.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "compliance_checker.tests.resources.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_acdd.ACDD1_1Check": {
  "data": {
   "shadows": "compliance_checker.acdd.ACDD1_1Check"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.ACDD1_3Check": {
  "data": {
   "shadows": "compliance_checker.acdd.ACDD1_3Check"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.BaseTestCase": {
  "data": {
   "shadows": "compliance_checker.tests.BaseTestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.MockTimeSeries": {
  "data": {
   "shadows": "compliance_checker.tests.helpers.MockTimeSeries"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.MockVariable": {
  "data": {
   "shadows": "compliance_checker.tests.helpers.MockVariable"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.STATIC_FILES": {
  "data": {
   "shadows": "compliance_checker.tests.resources.STATIC_FILES"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1.setUp": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDD1_1Check",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_acdd.to_singleton_var"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1.test_acknowldegement_check": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "compliance_checker.tests.test_acdd.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1.test_cc_meta": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1.test_highly_recommended": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.test_acdd.check_varset_nonintersect",
    "compliance_checker.tests.test_acdd.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1.test_recommended": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.test_acdd.check_varset_nonintersect",
    "compliance_checker.tests.test_acdd.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_1.test_suggested": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.test_acdd.check_varset_nonintersect",
    "compliance_checker.tests.test_acdd.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.setUp": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "compliance_checker.acdd.ACDD1_3Check",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_acdd.to_singleton_var"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_cc_meta": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_check_geospatial_vertical_max": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.linspace",
    "numpy.ma.masked_all"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_check_lat_extents": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_check_lon_extents": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_geospatial_bounds": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "compliance_checker.tests.test_acdd.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_highly_recommended": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "compliance_checker.tests.test_acdd.check_varset_nonintersect"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_recommended": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.test_acdd.check_varset_nonintersect"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_suggested": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.test_acdd.check_varset_nonintersect"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_time_extents": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "compliance_checker.tests.test_acdd.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_variables": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "compliance_checker.tests.test_acdd.os",
    "len",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.TestACDD1_3.test_vertical_extents": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.check_varset_nonintersect": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_acdd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_acdd.to_singleton_var": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_base.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_base.TestBase": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_base.TestBase.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck",
    "compliance_checker.tests.test_base.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestBase.tearDown": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestBase.test_attr_fn": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.base.attr_check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestBase.test_attr_fn.verify_dummy": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AttributeError",
    "compliance_checker.base.ratable_result"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestBase.test_attr_in_valid_choices": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.base.attr_check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestBase.test_attr_presence": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "compliance_checker.base.attr_check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestBase.test_get_test_ctx": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_base.TestGenericFile": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_base.TestGenericFile.test_create_GenericFile_failure": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "compliance_checker.base.GenericFile"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.TestGenericFile.test_create_GenericFile_success": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "compliance_checker.base.GenericFile"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_base.base": {
  "data": {
   "shadows": "compliance_checker.base"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_base.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_cf.BaseTestCase": {
  "data": {
   "shadows": "compliance_checker.tests.BaseTestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.CF1_6Check": {
  "data": {
   "shadows": "compliance_checker.cf.CF1_6Check"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.CF1_7Check": {
  "data": {
   "shadows": "compliance_checker.cf.CF1_7Check"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.suite.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.MockTimeSeries": {
  "data": {
   "shadows": "compliance_checker.tests.helpers.MockTimeSeries"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.MockVariable": {
  "data": {
   "shadows": "compliance_checker.tests.helpers.MockVariable"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.STATIC_FILES": {
  "data": {
   "shadows": "compliance_checker.tests.resources.STATIC_FILES"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.StandardNameTable": {
  "data": {
   "shadows": "compliance_checker.cf.util.StandardNameTable"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.TestCF1_6": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.load_dataset": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "netCDF4.Dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.new_nc_file": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IOError",
    "compliance_checker.tests.test_cf.os",
    "netCDF4.Dataset",
    "tempfile.gettempdir"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.setUp": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "compliance_checker.cf.CF1_6Check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_64bit": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "compliance_checker.cf.CF1_6Check",
    "compliance_checker.suite.CheckSuite",
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_appendix_a": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_appendix_d": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_d.no_missing_terms",
    "compliance_checker.cf.dimless_vertical_coordinates_1_6"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_bad_standard_name_table": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "IOError",
    "UserWarning",
    "compliance_checker.cf.util.StandardNameTable",
    "compliance_checker.tests.helpers.MockTimeSeries",
    "compliance_checker.tests.test_cf.pytest",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_cell_bounds": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_cell_measures": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_all_features_are_same_type": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_ancillary_variables": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_attr_type": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_aux_coordinates": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_bad_units": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "all",
    "any",
    "compliance_checker.tests.resources.STATIC_FILES",
    "itertools.chain",
    "list"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_calendar": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_cell_methods": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.helpers.MockTimeSeries",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "itertools.chain",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_child_attr_data_types": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.array",
    "numpy.float",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_convention_globals": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_convention_possibly_var_attrs": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_conventions_are_cf_16": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_data_types": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_dimension_names": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_dimension_order": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_duplicates": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_fill_value_outside_valid_range": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_flag_masks": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_flags": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_geographic_region": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_grid_coordinates": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_grid_mapping": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_grid_mapping_attr_condition": {
  "data": {
   "lineno": 971
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_multi_dimensional_coords": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_names_unique": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_packed_data": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_reduced_horizontal_grid": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_standard_name": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_time_coordinate": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_two_dimensional": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_check_units": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_climatology_cell_methods": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_compress_packed": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_dimensionless_standard_names": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "compliance_checker.cfutil.is_dimensionless_standard_name"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_dimensionless_vertical": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_download_standard_name_table": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "compliance_checker.cf.util.StandardNameTable",
    "compliance_checker.cf.util.create_cached_data_dir",
    "compliance_checker.cf.util.download_cf_standard_name_table",
    "compliance_checker.tests.test_cf.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_featureType_is_case_insensitive": {
  "data": {
   "lineno": 1060
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_is_time_variable": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "compliance_checker.cf.util.is_time_variable",
    "compliance_checker.tests.helpers.MockVariable"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_is_vertical_coordinate": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "compliance_checker.cf.util.is_vertical_coordinate",
    "compliance_checker.tests.helpers.MockVariable",
    "mock_variable"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_latitude": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_longitude": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_naming_conventions": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_temporal_unit_conversion": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "compliance_checker.cf.util.units_convertible"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_units_temporal": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "compliance_checker.cf.util.units_temporal"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_variable_feature_check": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_6.test_vertical_dimension": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.setUp": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "compliance_checker.cf.CF1_7Check"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_appendix_d": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "compliance_checker.cf.appendix_d.no_missing_terms",
    "compliance_checker.cf.dimless_vertical_coordinates_1_7"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_cell_measures": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_actual_range": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_attr_type": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.float64",
    "numpy.int",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_cell_boundaries": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_conventions_are_cf_1_7": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_dimensionless_vertical_coordinate_1_7": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "compliance_checker.cf.dimless_vertical_coordinates_1_7",
    "compliance_checker.tests.helpers.MockTimeSeries",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_gmattr_existence_condition_ell_pmerid_hdatum": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_gmattr_existence_condition_geoid_name_geoptl_datum_name": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_grid_mapping_attr_condition": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_grid_mapping_coordinates": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.copy"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_grid_mapping_crs_wkt": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "any",
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.copy",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_check_grid_mapping_vert_datum_geoid_name": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.copy",
    "compliance_checker.tests.test_cf.get_results"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_dimensionless_vertical": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.helpers.MockVariable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf.get_results",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF1_7.test_process_vdatum": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "compliance_checker.tests.test_cf.sqlite3"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.cfutil": {
  "data": {
   "shadows": "compliance_checker.cfutil"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.create_cached_data_dir": {
  "data": {
   "shadows": "compliance_checker.cf.util.create_cached_data_dir"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.dimless_vertical_coordinates_1_6": {
  "data": {
   "shadows": "compliance_checker.cf.dimless_vertical_coordinates_1_6"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.dimless_vertical_coordinates_1_7": {
  "data": {
   "shadows": "compliance_checker.cf.dimless_vertical_coordinates_1_7"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.download_cf_standard_name_table": {
  "data": {
   "shadows": "compliance_checker.cf.util.download_cf_standard_name_table"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.get_results": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf.gettempdir": {
  "data": {
   "shadows": "tempfile.gettempdir"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.is_time_variable": {
  "data": {
   "shadows": "compliance_checker.cf.util.is_time_variable"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.is_vertical_coordinate": {
  "data": {
   "shadows": "compliance_checker.cf.util.is_vertical_coordinate"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.no_missing_terms": {
  "data": {
   "shadows": "compliance_checker.cf.appendix_d.no_missing_terms"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.sub": {
  "data": {
   "shadows": "operator.sub"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.units_convertible": {
  "data": {
   "shadows": "compliance_checker.cf.util.units_convertible"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf.units_temporal": {
  "data": {
   "shadows": "compliance_checker.cf.util.units_temporal"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_cf_integration.BaseTestCase": {
  "data": {
   "shadows": "compliance_checker.tests.BaseTestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.suite.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.STATIC_FILES": {
  "data": {
   "shadows": "compliance_checker.tests.resources.STATIC_FILES"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.get_results": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.load_dataset": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "netCDF4.Dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.new_nc_file": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "IOError",
    "compliance_checker.tests.test_cf_integration.os",
    "netCDF4.Dataset",
    "tempfile.gettempdir"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "compliance_checker.cf.util.StandardNameTable",
    "compliance_checker.suite.CheckSuite"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_3mf07": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_bad_cf_roles": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_fvcom": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "AssertionError",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_glcfs": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_kibesillah": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_l01_met": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_ncei_templates": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_ocos": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cf_integration.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_ooi_glider": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_pr_inundation": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_sldmb_43093_agg": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_sp041": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "compliance_checker.tests.resources.STATIC_FILES",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_swan": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_usgs_dem_saipan": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.TestCFIntegration.test_ww3": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cf_integration.gettempdir": {
  "data": {
   "shadows": "tempfile.gettempdir"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cf_integration.util": {
  "data": {
   "shadows": "compliance_checker.cf.util"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_cli.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.runner.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.ComplianceChecker": {
  "data": {
   "shadows": "compliance_checker.runner.ComplianceChecker"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.Namespace": {
  "data": {
   "shadows": "argparse.Namespace"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.STATIC_FILES": {
  "data": {
   "shadows": "compliance_checker.tests.resources.STATIC_FILES"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.TestCLI": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_cli.TestCLI.__repr__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.setUp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "compliance_checker.runner.CheckSuite.checkers.clear",
    "compliance_checker.runner.CheckSuite.load_all_available_checkers",
    "compliance_checker.tests.test_cli.tempfile"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.shortDescription": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.tearDown": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "compliance_checker.tests.test_cli.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_list_checks": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "DeprecationWarning",
    "argparse.Namespace",
    "compliance_checker.runner.CheckSuite",
    "compliance_checker.runner.CheckSuite._load_checkers",
    "compliance_checker.runner.CheckSuite.checkers.clear",
    "compliance_checker.tests.test_cli.io",
    "compliance_checker.tests.test_cli.pytest",
    "compliance_checker.tests.test_cli.sys"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_list_checks.checker_1": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "argparse.Namespace"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_list_checks.checker_2": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "argparse.Namespace"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_multi_checker_return_value": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_multiple_json_output": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.json",
    "compliance_checker.tests.test_cli.os",
    "open"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_multiple_json_output_stdout": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.io",
    "compliance_checker.tests.test_cli.json",
    "compliance_checker.tests.test_cli.sys"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_single_json_output": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.json",
    "compliance_checker.tests.test_cli.os",
    "open"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_single_json_output_stdout": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.io",
    "compliance_checker.tests.test_cli.json",
    "compliance_checker.tests.test_cli.sys"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_text_output": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_unicode_acdd_html": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCLI.test_unicode_cf_html": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.resources.STATIC_FILES",
    "compliance_checker.tests.test_cli.os"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_cli.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_cli.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_feature_detection": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_feature_detection.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_feature_detection.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_2d_regular_grid": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_2d_regular_grid",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_2d_static_grid": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_2d_static_grid",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_3d_regular_grid": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_3d_regular_grid",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_3d_static_grid": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_3d_static_grid",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_auxiliary_coordinates": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_auxiliary_coordinate_variables",
    "compliance_checker.cfutil.get_coordinate_variables",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_boundaries": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_cell_boundary_map",
    "compliance_checker.cfutil.get_cell_boundary_variables",
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_climatology": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_climatology_variable",
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_global_feature_detection": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_axis_map",
    "compliance_checker.cfutil.guess_feature_type",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_grid_mapping": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_axis_variables",
    "compliance_checker.cfutil.get_coordinate_variables",
    "compliance_checker.cfutil.get_grid_mapping_variables",
    "compliance_checker.cfutil.get_lat_variable",
    "compliance_checker.cfutil.get_lon_variable",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset",
    "set"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_multi_timeseries_incomplete": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_multi_timeseries_incomplete",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_multi_timeseries_orthogonal": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_multi_timeseries_orthogonal",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_point": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_point",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_profile_incomplete": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_profile_incomplete",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_profile_orthogonal": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_profile_orthogonal",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_reduced_grid": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "compliance_checker.cfutil.guess_feature_type",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_rotated_pole_grid": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_latitude_variables",
    "compliance_checker.cfutil.is_mapped_grid",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries_profile_incomplete": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries_profile_incomplete",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries_profile_multi_ortho_time": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries_profile_multi_ortho_time",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries_profile_multi_station": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries_profile_multi_station",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries_profile_ortho_depth": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries_profile_ortho_depth",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries_profile_single_ortho_time": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries_profile_single_ortho_time",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_timeseries_profile_single_station": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_timeseries_profile_single_station",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_trajectory": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_cf_trajectory",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_trajectory_profile_incomplete": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_trajectory_profile_incomplete",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_trajectory_profile_orthogonal": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_trajectory_profile_orthogonal",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_trajectory_single": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_geophysical_variables",
    "compliance_checker.cfutil.is_single_trajectory",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.TestFeatureDetection.test_vertical_coords": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "compliance_checker.cfutil.get_z_variables",
    "compliance_checker.tests.resources.STATIC_FILES",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_feature_detection.resources": {
  "data": {
   "shadows": "compliance_checker.tests.resources"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_feature_detection.util": {
  "data": {
   "shadows": "compliance_checker.cfutil"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_profile": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_ioos_profile.BaseTestCase": {
  "data": {
   "shadows": "compliance_checker.tests.BaseTestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_profile.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_profile.IOOS0_1Check": {
  "data": {
   "shadows": "compliance_checker.ioos.IOOS0_1Check"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_profile.IOOS1_1Check": {
  "data": {
   "shadows": "compliance_checker.ioos.IOOS1_1Check"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_profile.STATIC_FILES": {
  "data": {
   "shadows": "compliance_checker.tests.resources.STATIC_FILES"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "compliance_checker.ioos.IOOS0_1Check",
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1.test_altitude_units": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1.test_cc_meta": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1.test_global_attributes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset",
    "setattr"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1.test_variable_attributes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS0_1.test_variable_units": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "compliance_checker.tests.BaseTestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.setUp": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "compliance_checker.ioos.IOOS1_1Check",
    "compliance_checker.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_bad_geophysical_vars_fill_value": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_bad_geophysical_vars_standard_name": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_bad_platform_variables": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_bad_units": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_profile.os",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_cc_meta": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_good_geophysical_vars_fill_value": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_good_geophysical_vars_standard_name": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_good_platform_variables": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_good_units": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_recomended_attributes": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.TestIOOS1_1.test_required_attributes": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_profile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_sos": {
  "data": {
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_sos.httpretty",
    "compliance_checker.tests.test_ioos_sos.sys"
   ]
  },
  "type": "module"
 },
 "compliance_checker.tests.test_ioos_sos.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.suite.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_sos.ComplianceChecker": {
  "data": {
   "shadows": "compliance_checker.runner.ComplianceChecker"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_sos.TestIOOSSOSDescribeSensor": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_sos.unittest"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_ioos_sos.TestIOOSSOSDescribeSensor.setUp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite",
    "compliance_checker.tests.test_ioos_sos.os",
    "open"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_sos.TestIOOSSOSDescribeSensor.test_retrieve_describesensor": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.test_ioos_sos.httpretty"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_sos.TestIOOSSOSGetCapabilities": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "compliance_checker.tests.test_ioos_sos.unittest"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_ioos_sos.TestIOOSSOSGetCapabilities.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite",
    "compliance_checker.tests.test_ioos_sos.os",
    "open"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_sos.TestIOOSSOSGetCapabilities.test_retrieve_getcaps": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "compliance_checker.runner.ComplianceChecker.run_checker",
    "compliance_checker.tests.test_ioos_sos.httpretty"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_ioos_sos.httpretty": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "compliance_checker.tests.test_ioos_sos.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_sos.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_ioos_sos.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_protocols": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_protocols.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.suite.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_protocols.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_protocols.TestProtocols": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "compliance_checker.tests.test_protocols.pytest",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_protocols.TestProtocols.test_erddap": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_protocols.TestProtocols.test_hyrax": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_protocols.TestProtocols.test_sos": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_protocols.TestProtocols.test_thredds": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_protocols.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite": {
  "data": {
   "symbols_in_volume": [
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "compliance_checker.tests.test_suite.BaseCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseCheck"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.CheckSuite": {
  "data": {
   "shadows": "compliance_checker.suite.CheckSuite"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.GenericFile": {
  "data": {
   "shadows": "compliance_checker.base.GenericFile"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.Result": {
  "data": {
   "shadows": "compliance_checker.base.Result"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.TestSuite": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.unittest"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_suite.TestSuite.__repr__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "compliance_checker.suite.CheckSuite"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.shortDescription": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_cdl_file": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.os",
    "compliance_checker.tests.test_suite.static_files"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_group_func": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.static_files"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_load_local_dataset_GenericFile": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "compliance_checker.base.GenericFile",
    "compliance_checker.tests.test_suite.static_files",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_score_grouping": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.Result",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_skip_check_level": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.static_files",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_skip_checks": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "all",
    "compliance_checker.tests.test_suite.static_files"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_standard_output_score_header": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.static_files"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_suite": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.static_files"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_unicode_formatting": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "compliance_checker.tests.test_suite.static_files"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_suite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_suite.static_files": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "compliance_checker.tests.test_suite.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_util": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.tests.test_util.TestUtils": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "compliance_checker.tests.test_util.unittest"
   ]
  },
  "type": "class"
 },
 "compliance_checker.tests.test_util.TestUtils.test_datetime_is_iso": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "compliance_checker.util.datetime_is_iso"
   ]
  },
  "type": "function"
 },
 "compliance_checker.tests.test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compliance_checker.tests.test_util.util": {
  "data": {
   "shadows": "compliance_checker.util"
  },
  "type": "import"
 },
 "compliance_checker.tests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compliance_checker.util": {
  "data": {},
  "type": "module"
 },
 "compliance_checker.util.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "compliance_checker.util.dateparse": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "compliance_checker.util.pendulum"
   ]
  },
  "type": "function"
 },
 "compliance_checker.util.datetime_is_iso": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "compliance_checker.util.isodate",
    "len"
   ]
  },
  "type": "function"
 },
 "compliance_checker.util.isodate": {
  "data": {
   "shadows": "isodate"
  },
  "type": "import"
 },
 "compliance_checker.util.isstring": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NameError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "compliance_checker.util.kvp_convert": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compliance_checker.util.pendulum": {
  "data": {
   "shadows": "pendulum"
  },
  "type": "import"
 }
}