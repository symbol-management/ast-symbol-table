{
 "compliance_checker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.acdd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.acdd.ACDDBaseCheck": {
  "lineno": 11,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck"
  ],
  "type": "class"
 },
 "compliance_checker.acdd.ACDDBaseCheck._get_msg": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck._get_vars": {
  "lineno": 94,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_high": {
  "lineno": 22,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_lat_extents": {
  "lineno": 177,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util._possibleyunits",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_lon_extents": {
  "lineno": 240,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util._possiblexunits",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_recommended": {
  "lineno": 32,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_suggested": {
  "lineno": 69,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_time_extents": {
  "lineno": 341,
  "symbols_in_volume": [
   "cf_units.Unit",
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.is_time_variable",
   "dateutil.parser.parse",
   "numpy.isclose",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_var_long_name": {
  "lineno": 114,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.base.score_group"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_var_standard_name": {
  "lineno": 132,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.base.score_group"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_var_units": {
  "lineno": 150,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.base.score_group"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDBaseCheck.check_vertical_extents": {
  "lineno": 303,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.is_vertical_coordinate",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.nanmax",
   "numpy.nanmin"
  ],
  "type": "function"
 },
 "compliance_checker.acdd.ACDDNCCheck": {
  "lineno": 381,
  "symbols_in_volume": [
   "compliance_checker.base.BaseNCCheck"
  ],
  "type": "class"
 },
 "compliance_checker.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.base.BaseCheck": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.base.BaseCheck.setup": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.BaseNCCheck": {
  "lineno": 39,
  "symbols_in_volume": [
   "netCDF4.Dataset"
  ],
  "type": "class"
 },
 "compliance_checker.base.BaseNCCheck.std_check": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.BaseNCCheck.std_check_in": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.BaseSOSDSCheck": {
  "lineno": 75,
  "symbols_in_volume": [
   "owslib.swe.sensor.sml.SensorML"
  ],
  "type": "class"
 },
 "compliance_checker.base.BaseSOSDSCheck.load_datapair": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.BaseSOSGCCheck": {
  "lineno": 64,
  "symbols_in_volume": [
   "owslib.swe.observation.sos100.SensorObservationService_1_0_0"
  ],
  "type": "class"
 },
 "compliance_checker.base.BaseSOSGCCheck.load_datapair": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.Result": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.base.Result.__init__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.Result.__repr__": {
  "lineno": 108,
  "symbols_in_volume": [
   "pprint.pformat"
  ],
  "type": "function"
 },
 "compliance_checker.base.Result.serialize": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.check_has": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.check_has._inner": {
  "lineno": 162,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "compliance_checker.base.check_has._inner._dec": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.fix_return_value": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.get_namespaces": {
  "lineno": 16,
  "symbols_in_volume": [
   "owslib.namespaces.Namespaces"
  ],
  "type": "function"
 },
 "compliance_checker.base.score_group": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.score_group._inner": {
  "lineno": 209,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "compliance_checker.base.score_group._inner._dec": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.score_group._inner._dec.dogroup": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.std_check": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.base.std_check_in": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.cf.appendix_d": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.cf.appendix_f": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.cf.cf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.cf.cf.CFBaseCheck": {
  "lineno": 108,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck"
  ],
  "type": "class"
 },
 "compliance_checker.cf.cf.CFBaseCheck.__init__": {
  "lineno": 123,
  "symbols_in_volume": [
   "collections.defaultdict",
   "compliance_checker.cf.util.StandardNameTable"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._coord_has_units": {
  "lineno": 997,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_ancillary_vars": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_boundary_vars": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_clim_vars": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_container_variables": {
  "lineno": 2864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_coord_vars": {
  "lineno": 145,
  "symbols_in_volume": [
   "compliance_checker.cf.util.find_coord_vars"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_data_vars": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._find_metadata_vars": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._get_coord_vars": {
  "lineno": 1374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck._is_station_var": {
  "lineno": 1369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.beliefs": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_all_features_are_same_type": {
  "lineno": 2448,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_alternative_coordinates": {
  "lineno": 1905,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_ancillary_data": {
  "lineno": 707,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_calendar": {
  "lineno": 1287,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.is_time_variable"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_cell_boundaries": {
  "lineno": 1935,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_cell_measures": {
  "lineno": 1988,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_cell_methods": {
  "lineno": 2030,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "re.compile",
   "re.finditer",
   "re.search"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_compression": {
  "lineno": 2407,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_contiguous_ragged_array": {
  "lineno": 2584,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_convention_globals": {
  "lineno": 489,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.base.score_group"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_convention_possibly_var_attrs": {
  "lineno": 503,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.base.score_group"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_conventions_are_cf_16": {
  "lineno": 470,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "re.split"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_coordinate_axis_attr": {
  "lineno": 899,
  "symbols_in_volume": [
   "collections.defaultdict",
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.map_axes"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_coordinate_vars_for_all_coordinate_types": {
  "lineno": 973,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_coordinates_and_metadata": {
  "lineno": 2668,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "numpy.ravel"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_data_types": {
  "lineno": 325,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "numpy.character",
   "numpy.double",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_dimension_names": {
  "lineno": 376,
  "symbols_in_volume": [
   "collections.defaultdict",
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_dimension_order": {
  "lineno": 394,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_dimensional_vertical_coordinate": {
  "lineno": 1112,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.is_vertical_coordinate",
   "compliance_checker.cf.util.units_convertible"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_dimensionless_vertical_coordinate": {
  "lineno": 1168,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.appendix_d.dimless_vertical_coordinates",
   "re.match"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_feature_type": {
  "lineno": 2646,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_fill_value_outside_valid_range": {
  "lineno": 441,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_flags": {
  "lineno": 748,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "numpy.array",
   "numpy.issubdtype",
   "numpy.ndarray",
   "re.compile"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_geographic_region": {
  "lineno": 1806,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_horz_crs_grid_mappings_projections": {
  "lineno": 1673,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_incomplete_multidim_array": {
  "lineno": 2555,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_independent_axis_dimensions": {
  "lineno": 1425,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util._possibleaxis",
   "compliance_checker.cf.util._possibleaxisunits"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_indexed_ragged_array": {
  "lineno": 2615,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_latitude": {
  "lineno": 1021,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_longitude": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_missing_data": {
  "lineno": 2769,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "numpy.where"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_names_unique": {
  "lineno": 362,
  "symbols_in_volume": [
   "collections.defaultdict",
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_naming_conventions": {
  "lineno": 347,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "re.compile"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_orthogonal_multidim_array": {
  "lineno": 2528,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_packed_data": {
  "lineno": 2325,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "numpy.float",
   "numpy.float128",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_reduced_horizontal_grid": {
  "lineno": 1586,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_scalar_coordinate_system": {
  "lineno": 1762,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_standard_name": {
  "lineno": 658,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_time_coordinate": {
  "lineno": 1232,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.is_time_variable",
   "compliance_checker.cf.util.units_temporal"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_two_dimensional": {
  "lineno": 1472,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.NCGraph"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_units": {
  "lineno": 530,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.units_convertible",
   "compliance_checker.cf.util.units_known"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.check_vertical_coordinate": {
  "lineno": 1061,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result",
   "compliance_checker.cf.util.is_vertical_coordinate",
   "compliance_checker.cf.util.units_convertible"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFBaseCheck.setup": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.CFNCCheck": {
  "lineno": 2882,
  "symbols_in_volume": [
   "compliance_checker.base.BaseNCCheck"
  ],
  "type": "class"
 },
 "compliance_checker.cf.cf.CFNCCheck.beliefs": {
  "lineno": 2884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.guess_coord_type": {
  "lineno": 50,
  "symbols_in_volume": [
   "compliance_checker.cf.util.units_convertible",
   "compliance_checker.cf.util.units_known"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.guess_dim_type": {
  "lineno": 31,
  "symbols_in_volume": [
   "compliance_checker.cf.util._possiblet",
   "compliance_checker.cf.util._possiblex",
   "compliance_checker.cf.util._possibley",
   "compliance_checker.cf.util._possiblez"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.is_likely_dsg": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.is_likely_dsg._dec": {
  "lineno": 97,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "compliance_checker.cf.cf.is_variable": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.print_exceptions": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.cf.print_exceptions.wrapper": {
  "lineno": 19,
  "symbols_in_volume": [
   "functools.wraps",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.cf.util.DotDict": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.cf.util.DotDict.__dir__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.__getattr__": {
  "lineno": 117,
  "symbols_in_volume": [
   "dis.opmap",
   "sys._getframe"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.__setattr__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.copy": {
  "lineno": 138,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.fromkeys": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.DotDict.get_safe": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.cf.util.NCGraph.__getattr__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.__init__": {
  "lineno": 174,
  "symbols_in_volume": [
   "netCDF4.Dimension",
   "netCDF4.Variable"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_coordinate": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_dimension": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_grid_mapping": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.NCGraph.get_references": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.cf.util.StandardNameTable.NameEntry": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.cf.util.StandardNameTable.NameEntry.__init__": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.NameEntry._get": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__contains__": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__getitem__": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__init__": {
  "lineno": 258,
  "symbols_in_volume": [
   "lxml.etree.XMLParser",
   "lxml.etree.fromstring",
   "pkgutil.get_data"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__iter__": {
  "lineno": 293,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.StandardNameTable.__len__": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.find_coord_vars": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.get_safe": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.is_time_variable": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.is_vertical_coordinate": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.cf.util.map_axes": {
  "lineno": 324,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.units_convertible": {
  "lineno": 305,
  "symbols_in_volume": [
   "cf_units.Unit"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.units_known": {
  "lineno": 297,
  "symbols_in_volume": [
   "cf_units.Unit"
  ],
  "type": "function"
 },
 "compliance_checker.cf.util.units_temporal": {
  "lineno": 316,
  "symbols_in_volume": [
   "cf_units.Unit"
  ],
  "type": "function"
 },
 "compliance_checker.ioos": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.ioos.IOOSBaseCheck": {
  "lineno": 4,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck"
  ],
  "type": "class"
 },
 "compliance_checker.ioos.IOOSBaseCheck._has_attr": {
  "lineno": 8,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck": {
  "lineno": 22,
  "symbols_in_volume": [
   "compliance_checker.base.BaseNCCheck"
  ],
  "type": "class"
 },
 "compliance_checker.ioos.IOOSNCCheck._has_var_attr": {
  "lineno": 24,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_altitude_units": {
  "lineno": 153,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_global_attributes": {
  "lineno": 42,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.BaseCheck.MEDIUM"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_station_location_lat": {
  "lineno": 87,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_station_location_lon": {
  "lineno": 105,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_time_period": {
  "lineno": 69,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_variable_attributes": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_variable_names": {
  "lineno": 123,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSNCCheck.check_variable_units": {
  "lineno": 138,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck": {
  "lineno": 199,
  "symbols_in_volume": [
   "compliance_checker.base.BaseSOSDSCheck"
  ],
  "type": "class"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck.check_high": {
  "lineno": 201,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck.check_recommended": {
  "lineno": 221,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSDSCheck.check_suggested": {
  "lineno": 236,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck": {
  "lineno": 169,
  "symbols_in_volume": [
   "compliance_checker.base.BaseSOSGCCheck"
  ],
  "type": "class"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck.check_high": {
  "lineno": 171,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.HIGH",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck.check_recommended": {
  "lineno": 177,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.MEDIUM",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.ioos.IOOSSOSGCCheck.check_suggested": {
  "lineno": 192,
  "symbols_in_volume": [
   "compliance_checker.base.BaseCheck.LOW",
   "compliance_checker.base.check_has"
  ],
  "type": "function"
 },
 "compliance_checker.runner": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.runner.ComplianceChecker": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.runner.ComplianceChecker.check_errors": {
  "lineno": 125,
  "symbols_in_volume": [
   "sys.stderr",
   "traceback.print_tb"
  ],
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.html_output": {
  "lineno": 79,
  "symbols_in_volume": [
   "io.StringIO",
   "io.open"
  ],
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.json_output": {
  "lineno": 102,
  "symbols_in_volume": [
   "io.StringIO",
   "io.open"
  ],
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.run_checker": {
  "lineno": 18,
  "symbols_in_volume": [
   "compliance_checker.suite.CheckSuite"
  ],
  "type": "function"
 },
 "compliance_checker.runner.ComplianceChecker.stdout_output": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.suite.CheckSuite": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.suite.CheckSuite._get_checks": {
  "lineno": 43,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._get_valid_checkers": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw": {
  "lineno": 509,
  "symbols_in_volume": [
   "compliance_checker.base.Result",
   "itertools.groupby"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw.build_group": {
  "lineno": 516,
  "symbols_in_volume": [
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw.group_func": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._group_raw.trim_groups": {
  "lineno": 527,
  "symbols_in_volume": [
   "compliance_checker.base.Result"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._run_check": {
  "lineno": 53,
  "symbols_in_volume": [
   "compliance_checker.base.fix_return_value"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite._translate_value": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.build_structure": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.build_structure.named_function": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.get_points": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.html_output": {
  "lineno": 246,
  "symbols_in_volume": [
   "jinja2.Environment",
   "jinja2.PackageLoader"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.json_output": {
  "lineno": 213,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_all_available_checkers": {
  "lineno": 28,
  "symbols_in_volume": [
   "pkg_resources.working_set.iter_entry_points",
   "sys.stderr"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_dataset": {
  "lineno": 445,
  "symbols_in_volume": [
   "lxml.etree.fromstring",
   "netCDF4.Dataset",
   "owslib.sos.SensorObservationService",
   "owslib.swe.sensor.sml.SensorML",
   "requests.get",
   "requests.head",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.load_dataset.is_binary_string": {
  "lineno": 469,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.non_verbose_output_generation": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.passtree": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.print_routine": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.print_routine.weight_func": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.reasoning_routine": {
  "lineno": 420,
  "symbols_in_volume": [
   "textwrap.TextWrapper"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.reasoning_routine.weight_func": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.run": {
  "lineno": 88,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.scores": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.serialize": {
  "lineno": 230,
  "symbols_in_volume": [
   "compliance_checker.base.Result",
   "datetime.datetime"
  ],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.standard_output": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.suite.CheckSuite.verbose_output_generation": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.tests.test_acdd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compliance_checker.tests.test_acdd.test_acdd": {
  "lineno": 9,
  "symbols_in_volume": [
   "netCDF4.Dataset",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "compliance_checker.tests.test_cf.MockVariable": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compliance_checker.tests.test_cf.TestCF": {
  "lineno": 52,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compliance_checker.tests.test_cf.TestCF.__repr__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.get_results": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.load_dataset": {
  "lineno": 92,
  "symbols_in_volume": [
   "netCDF4.Dataset"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.new_nc_file": {
  "lineno": 80,
  "symbols_in_volume": [
   "netCDF4.Dataset",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.setUp": {
  "lineno": 70,
  "symbols_in_volume": [
   "compliance_checker.cf.CFBaseCheck"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.shortDescription": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_64bit": {
  "lineno": 781,
  "symbols_in_volume": [
   "compliance_checker.cf.CFBaseCheck",
   "compliance_checker.suite.CheckSuite"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_appendix_d": {
  "lineno": 450,
  "symbols_in_volume": [
   "compliance_checker.cf.dimless_vertical_coordinates"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_appendix_d.verify": {
  "lineno": 470,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_all_features_are_same_type": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_alternative_coordinates": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_bad_units": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_calendar": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_compression": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_contiguous_ragged_array": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_convention_globals": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_convention_possibly_var_attrs": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_conventions_are_cf_16": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_coordinate_axis_attr": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_coordinates_and_metadata": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_data_types": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_dimension_names": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_dimension_order": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_feature_type": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_fill_value_outside_valid_range": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_flags": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_geographic_region": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_horz_crs_grid_mappings_projections": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_incomplete_multidim_array": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_independent_axis_dimensions": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_indexed_ragged_array": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_missing_data": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_names_unique": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_orthogonal_multidim_array": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_packed_data": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_reduced_horizontal_grid": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_scalar_coordinate_system": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_standard_name": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_time_coordinate": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_two_dimensional": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_check_units": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_coordinate_types": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_dimensionless_vertical": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_is_time_variable": {
  "lineno": 519,
  "symbols_in_volume": [
   "compliance_checker.cf.util.is_time_variable"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_is_vertical_coordinate": {
  "lineno": 382,
  "symbols_in_volume": [
   "compliance_checker.cf.util.is_vertical_coordinate"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_latitude": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_longitude": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_naming_conventions": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_self_referencing": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_temporal_unit_conversion": {
  "lineno": 801,
  "symbols_in_volume": [
   "compliance_checker.cf.util.units_convertible"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_time_units": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_units_temporal": {
  "lineno": 805,
  "symbols_in_volume": [
   "compliance_checker.cf.util.units_temporal"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_vertical_coordinate": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.TestCF.test_vertical_dimension": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_cf.breakpoint": {
  "lineno": 811,
  "symbols_in_volume": [
   "IPython.config.loader.Config",
   "IPython.frontend.terminal.embed.InteractiveShellEmbed",
   "growl.growl",
   "mock.patch",
   "traceback.extract_stack"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_suite": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.resource_filename"
  ],
  "type": "module"
 },
 "compliance_checker.tests.test_suite.TestSuite": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compliance_checker.tests.test_suite.TestSuite.__repr__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.shortDescription": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_group_func": {
  "lineno": 53,
  "symbols_in_volume": [
   "compliance_checker.suite.CheckSuite"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_suite": {
  "lineno": 31,
  "symbols_in_volume": [
   "compliance_checker.suite.CheckSuite"
  ],
  "type": "function"
 },
 "compliance_checker.tests.test_suite.TestSuite.test_unicode_formatting": {
  "lineno": 40,
  "symbols_in_volume": [
   "compliance_checker.suite.CheckSuite"
  ],
  "type": "function"
 }
}