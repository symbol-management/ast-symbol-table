{
 "compaction": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "compaction.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "compaction.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "compaction._version": {
  "data": {},
  "type": "module"
 },
 "compaction._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "compaction._version.json",
    "compaction._version.version_json"
   ]
  },
  "type": "function"
 },
 "compaction._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "compaction._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "compaction.cli": {
  "data": {
   "symbols_in_volume": [
    "compaction.cli.click",
    "functools.partial",
    "get_versions"
   ]
  },
  "type": "module"
 },
 "compaction.cli.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "compaction.cli.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "compaction.cli.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "compaction.cli.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "compaction.cli._compact": {
  "data": {
   "shadows": "compact"
  },
  "type": "import"
 },
 "compaction.cli._contents_of_input_file": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "as_csv",
    "compaction.cli.load_config",
    "compaction.cli.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "compaction.cli._contents_of_input_file.as_csv": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "io.StringIO",
    "numpy.savetxt"
   ]
  },
  "type": "function"
 },
 "compaction.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "compaction.cli.compact": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "compaction.cli.click"
   ]
  },
  "type": "function"
 },
 "compaction.cli.err": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "compaction.cli.load_config": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "compaction.cli.yaml",
    "typing.Optional",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "compaction.cli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compaction.cli.out": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "compaction.cli.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "compaction.cli.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "compaction.cli.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "compaction.cli.run": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "compaction.cli.__version__",
    "compaction.cli.click",
    "compaction.cli.compact",
    "compaction.cli.load_config",
    "compaction.cli.out",
    "compaction.cli.pathlib",
    "compaction.cli.run_compaction",
    "compaction.cli.sys",
    "compaction.cli.yaml",
    "open",
    "str",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "compaction.cli.run_compaction": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "compaction.cli.out",
    "compaction.cli.pandas",
    "compaction.cli.sys",
    "float",
    "numpy.empty_like",
    "print",
    "typing.Optional",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "compaction.cli.setup": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "compaction.cli._contents_of_input_file",
    "compaction.cli.click",
    "compaction.cli.compact",
    "compaction.cli.err",
    "compaction.cli.pathlib",
    "compaction.cli.sys",
    "len",
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "compaction.cli.show": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "compaction.cli._contents_of_input_file",
    "compaction.cli.click",
    "compaction.cli.compact",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "compaction.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compaction.cli.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "compaction.compaction": {
  "data": {},
  "type": "module"
 },
 "compaction.compaction.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "compaction.compaction.compact": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.divide",
    "numpy.exp",
    "numpy.minimum",
    "numpy.ndarray",
    "scipy.constants.g",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "compaction.compaction.g": {
  "data": {
   "shadows": "scipy.constants.g"
  },
  "type": "import"
 },
 "compaction.compaction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compaction.landlab": {
  "data": {},
  "type": "module"
 },
 "compaction.landlab.Compact": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "landlab.Component"
   ]
  },
  "type": "class"
 },
 "compaction.landlab.Compact.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "compaction.landlab.Compact",
    "float",
    "scipy.constants.g",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.c": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.calculate": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "compaction.landlab.Compact.excess_pressure": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.gravity": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.params": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.porosity_max": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.porosity_min": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.rho_grain": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.rho_void": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Compact.run_one_step": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "compact"
   ]
  },
  "type": "function"
 },
 "compaction.landlab.Component": {
  "data": {
   "shadows": "landlab.Component"
  },
  "type": "import"
 },
 "compaction.landlab.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "compaction.landlab.g": {
  "data": {
   "shadows": "scipy.constants.g"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_cli": {
  "data": {},
  "type": "module"
 },
 "tests.test_cli.CliRunner": {
  "data": {
   "shadows": "click.testing.CliRunner"
  },
  "type": "import"
 },
 "tests.test_cli.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "tests.test_cli.cli": {
  "data": {
   "shadows": "compaction.cli"
  },
  "type": "import"
 },
 "tests.test_cli.compact": {
  "data": {
   "shadows": "compaction.compact"
  },
  "type": "import"
 },
 "tests.test_cli.filecmp": {
  "data": {
   "shadows": "filecmp"
  },
  "type": "import"
 },
 "tests.test_cli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_cli.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_cli.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_cli.test_command_line_interface": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.compact"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_constant_porosity": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.run",
    "compaction.compact",
    "float",
    "numpy.testing.assert_array_almost_equal",
    "str",
    "tests.test_cli.pandas"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_dry_run": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.run",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_run_from_stdin": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.run",
    "open",
    "str",
    "tests.test_cli.filecmp"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_run_to_stdout": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.run",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_setup": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.setup"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_setup_with_existing_files": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.setup",
    "len",
    "open",
    "tests.test_cli.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_show": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.run",
    "compaction.cli.show",
    "open"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_show_config": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.show",
    "dict",
    "isinstance",
    "tests.test_cli.yaml"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_show_porosity": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.show",
    "float",
    "numpy.all",
    "open",
    "tests.test_cli.pandas"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_verbose": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "compaction.cli.run",
    "dict",
    "isinstance",
    "str",
    "tests.test_cli.os",
    "tests.test_cli.yaml"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "tests.test_compaction": {
  "data": {},
  "type": "module"
 },
 "tests.test_compaction.StringIO": {
  "data": {
   "shadows": "six.StringIO"
  },
  "type": "import"
 },
 "tests.test_compaction.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "tests.test_compaction.compact": {
  "data": {
   "shadows": "compaction.compact"
  },
  "type": "import"
 },
 "tests.test_compaction.load_config": {
  "data": {
   "shadows": "compaction.cli.load_config"
  },
  "type": "import"
 },
 "tests.test_compaction.mark": {
  "data": {
   "shadows": "pytest.mark"
  },
  "type": "import"
 },
 "tests.test_compaction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_compaction.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_compaction.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "tests.test_compaction.run_compaction": {
  "data": {
   "shadows": "compaction.cli.run_compaction"
  },
  "type": "import"
 },
 "tests.test_compaction.test_all_void": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.empty_like",
    "numpy.full",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_bad_return_dz": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "compaction.compact",
    "int",
    "numpy.empty",
    "numpy.full",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_decreasing_porosity": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.diff",
    "numpy.full",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_equilibrium_compaction": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.full",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_grid_size": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "benchmark",
    "compaction.compact",
    "numpy.all",
    "numpy.diff",
    "numpy.full",
    "pytest.approx",
    "pytest.mark.benchmark",
    "pytest.mark.parametrize"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_grid_size_with_dz": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "benchmark",
    "compaction.compact",
    "numpy.all",
    "numpy.diff",
    "numpy.empty_like",
    "numpy.full",
    "pytest.approx",
    "pytest.mark.benchmark",
    "pytest.mark.parametrize"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_increasing_compactability": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_increasing_load": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_load_config_defaults": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "compaction.cli.load_config"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_load_config_from_file": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "compaction.cli.load_config",
    "dict",
    "six.StringIO",
    "tests.test_compaction.yaml"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_no_decompaction": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.full",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_run": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "compaction.cli.run_compaction",
    "compaction.compact",
    "float",
    "numpy.all",
    "numpy.full",
    "pytest.approx",
    "six.StringIO",
    "tests.test_compaction.pandas"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_spatially_distributed": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.diff",
    "numpy.full",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_to_analytical": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "compaction.compact",
    "len",
    "numpy.abs",
    "numpy.cumsum",
    "numpy.exp",
    "numpy.full",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_void_is_air": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.test_zero_compaction": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "compaction.compact",
    "numpy.all",
    "numpy.full",
    "pytest.approx"
   ]
  },
  "type": "function"
 },
 "tests.test_compaction.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "tests.test_component": {
  "data": {},
  "type": "module"
 },
 "tests.test_component.Compact": {
  "data": {
   "shadows": "compaction.landlab.Compact"
  },
  "type": "import"
 },
 "tests.test_component.RasterModelGrid": {
  "data": {
   "shadows": "landlab.RasterModelGrid"
  },
  "type": "import"
 },
 "tests.test_component.approx": {
  "data": {
   "shadows": "pytest.approx"
  },
  "type": "import"
 },
 "tests.test_component.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "tests.test_component.compaction": {
  "data": {
   "shadows": "compaction"
  },
  "type": "import"
 },
 "tests.test_component.fixture": {
  "data": {
   "shadows": "pytest.fixture"
  },
  "type": "import"
 },
 "tests.test_component.grid": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "landlab.RasterModelGrid",
    "pytest.fixture"
   ]
  },
  "type": "function"
 },
 "tests.test_component.mark": {
  "data": {
   "shadows": "pytest.mark"
  },
  "type": "import"
 },
 "tests.test_component.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_component.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "tests.test_component.test_grid_size": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "benchmark",
    "compaction.landlab.Compact",
    "landlab.RasterModelGrid",
    "numpy.all",
    "pytest.approx",
    "pytest.mark.benchmark",
    "pytest.mark.parametrize",
    "range",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 },
 "tests.test_component.test_init_with_bad_param": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "compaction.landlab.Compact",
    "pytest.mark.parametrize",
    "pytest.raises",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 },
 "tests.test_component.test_init_with_layers_added": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "compaction.landlab.Compact",
    "numpy.all",
    "pytest.approx",
    "range",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 },
 "tests.test_component.test_init_without_layers_added": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "compaction.landlab.Compact",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 },
 "tests.test_component.test_layers_compact_evenly": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "compaction.landlab.Compact",
    "pytest.approx",
    "range",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 },
 "tests.test_component.test_matches_module": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "compaction.landlab.Compact",
    "numpy.full",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "tests.test_component.compaction",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 },
 "tests.test_component.test_property_getter_setter": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "compaction.landlab.Compact",
    "dict",
    "getattr",
    "property",
    "pytest.approx",
    "pytest.mark.parametrize",
    "setattr",
    "tests.test_component.grid"
   ]
  },
  "type": "function"
 }
}