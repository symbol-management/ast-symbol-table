{
 "compaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compaction._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compaction._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "compaction.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "click.secho",
   "functools.partial"
  ],
  "type": "module"
 },
 "compaction.cli._contents_of_input_file": {
  "lineno": 48,
  "symbols_in_volume": [
   "yaml.dump"
  ],
  "type": "function"
 },
 "compaction.cli._contents_of_input_file.as_csv": {
  "lineno": 51,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "compaction.cli.compact": {
  "lineno": 86,
  "symbols_in_volume": [
   "click.group",
   "click.version_option"
  ],
  "type": "function"
 },
 "compaction.cli.load_config": {
  "lineno": 22,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.TextIO",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "compaction.cli.run": {
  "lineno": 105,
  "symbols_in_volume": [
   "click.File",
   "click.Path",
   "click.argument",
   "click.option",
   "click.version_option",
   "pathlib.Path",
   "sys.exit",
   "typing.TextIO",
   "yaml.dump"
  ],
  "type": "function"
 },
 "compaction.cli.run_compaction": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.empty_like",
   "pandas.DataFrame.from_dict",
   "pandas.read_csv",
   "sys.stdin",
   "sys.stdout",
   "typing.Optional",
   "typing.TextIO"
  ],
  "type": "function"
 },
 "compaction.cli.setup": {
  "lineno": 163,
  "symbols_in_volume": [
   "click.Path",
   "click.argument",
   "pathlib.Path",
   "sys.exit"
  ],
  "type": "function"
 },
 "compaction.cli.show": {
  "lineno": 154,
  "symbols_in_volume": [
   "click.Choice",
   "click.argument"
  ],
  "type": "function"
 },
 "compaction.compaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compaction.compaction.compact": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.cumsum",
   "numpy.divide",
   "numpy.exp",
   "numpy.minimum",
   "numpy.ndarray",
   "scipy.constants.g",
   "typing.Optional"
  ],
  "type": "function"
 },
 "compaction.landlab": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compaction.landlab.Compact": {
  "lineno": 10,
  "symbols_in_volume": [
   "landlab.Component"
  ],
  "type": "class"
 },
 "compaction.landlab.Compact.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "scipy.constants.g",
   "typing.Dict"
  ],
  "type": "function"
 },
 "compaction.landlab.Compact.c": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.calculate": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.excess_pressure": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.gravity": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.params": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.porosity_max": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.porosity_min": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.rho_grain": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.rho_void": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compaction.landlab.Compact.run_one_step": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_cli.test_command_line_interface": {
  "lineno": 15,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.compact"
  ],
  "type": "function"
 },
 "tests.test_cli.test_constant_porosity": {
  "lineno": 66,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.run",
   "compaction.compact",
   "numpy.testing.assert_array_almost_equal",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "tests.test_cli.test_dry_run": {
  "lineno": 30,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.run"
  ],
  "type": "function"
 },
 "tests.test_cli.test_run_from_stdin": {
  "lineno": 91,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.run",
   "filecmp.cmp"
  ],
  "type": "function"
 },
 "tests.test_cli.test_run_to_stdout": {
  "lineno": 119,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.run"
  ],
  "type": "function"
 },
 "tests.test_cli.test_setup": {
  "lineno": 149,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.setup"
  ],
  "type": "function"
 },
 "tests.test_cli.test_setup_with_existing_files": {
  "lineno": 159,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.setup",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_cli.test_show": {
  "lineno": 177,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.run",
   "compaction.cli.show"
  ],
  "type": "function"
 },
 "tests.test_cli.test_show_config": {
  "lineno": 197,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.show",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "tests.test_cli.test_show_porosity": {
  "lineno": 207,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.show",
   "numpy.all",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "tests.test_cli.test_verbose": {
  "lineno": 47,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "compaction.cli.run",
   "os.linesep.join",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "tests.test_compaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_compaction.test_all_void": {
  "lineno": 179,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.empty_like",
   "numpy.full",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_bad_return_dz": {
  "lineno": 87,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.empty",
   "numpy.full",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_decreasing_porosity": {
  "lineno": 100,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.diff",
   "numpy.full",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_equilibrium_compaction": {
  "lineno": 111,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.full",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_grid_size": {
  "lineno": 54,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.diff",
   "numpy.full",
   "pytest.approx",
   "pytest.mark.benchmark",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_grid_size_with_dz": {
  "lineno": 68,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.diff",
   "numpy.empty_like",
   "numpy.full",
   "pytest.approx",
   "pytest.mark.benchmark",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_increasing_compactability": {
  "lineno": 159,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.full"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_increasing_load": {
  "lineno": 137,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.full"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_load_config_defaults": {
  "lineno": 190,
  "symbols_in_volume": [
   "compaction.cli.load_config"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_load_config_from_file": {
  "lineno": 203,
  "symbols_in_volume": [
   "compaction.cli.load_config",
   "six.StringIO",
   "yaml.dump"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_no_decompaction": {
  "lineno": 124,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.full",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_run": {
  "lineno": 220,
  "symbols_in_volume": [
   "compaction.cli.run_compaction",
   "compaction.compact",
   "numpy.all",
   "numpy.full",
   "pandas.DataFrame.from_dict",
   "pandas.read_csv",
   "pytest.approx",
   "six.StringIO"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_spatially_distributed": {
  "lineno": 43,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.diff",
   "numpy.full",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_to_analytical": {
  "lineno": 12,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.abs",
   "numpy.cumsum",
   "numpy.exp",
   "numpy.full",
   "numpy.max"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_void_is_air": {
  "lineno": 169,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.full"
  ],
  "type": "function"
 },
 "tests.test_compaction.test_zero_compaction": {
  "lineno": 150,
  "symbols_in_volume": [
   "compaction.compact",
   "numpy.all",
   "numpy.full",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_component": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_component.grid": {
  "lineno": 11,
  "symbols_in_volume": [
   "landlab.RasterModelGrid",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_component.test_grid_size": {
  "lineno": 36,
  "symbols_in_volume": [
   "compaction.landlab.Compact",
   "landlab.RasterModelGrid",
   "numpy.all",
   "pytest.approx",
   "pytest.mark.benchmark",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_component.test_init_with_bad_param": {
  "lineno": 75,
  "symbols_in_volume": [
   "compaction.landlab.Compact",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_component.test_init_with_layers_added": {
  "lineno": 53,
  "symbols_in_volume": [
   "compaction.landlab.Compact",
   "numpy.all",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_component.test_init_without_layers_added": {
  "lineno": 29,
  "symbols_in_volume": [
   "compaction.landlab.Compact"
  ],
  "type": "function"
 },
 "tests.test_component.test_layers_compact_evenly": {
  "lineno": 66,
  "symbols_in_volume": [
   "compaction.landlab.Compact",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_component.test_matches_module": {
  "lineno": 16,
  "symbols_in_volume": [
   "compaction.compact",
   "compaction.landlab.Compact",
   "numpy.full",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_component.test_property_getter_setter": {
  "lineno": 97,
  "symbols_in_volume": [
   "compaction.landlab.Compact",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 }
}