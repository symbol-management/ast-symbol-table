{
 "promise": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "get_version",
    "promise.VERSION",
    "promise.__SETUP__"
   ]
  },
  "type": "module"
 },
 "promise.VERSION": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "promise.__SETUP__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "promise.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "promise.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "promise.async_": {
  "data": {},
  "type": "module"
 },
 "promise.async_.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.async_.Async": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "threading.local"
   ]
  },
  "type": "class"
 },
 "promise.async_.Async.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "promise.async_.Async._async_invoke": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "promise.async_.Async._async_invoke_later": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "promise.async_.Async._async_settle_promise": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "promise.async_.Async.disable_trampoline": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "promise.async_.Async.drain_queue": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "fn",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.async_.Async.drain_queue_until_resolved": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "fn",
    "fn._settle_promises",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.async_.Async.drain_queues": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "promise.async_.Async.enable_trampoline": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "promise.async_.Async.have_items_queued": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "promise.async_.Async.invoke": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "promise.async_.Async.invoke_later": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "promise.async_.Async.queue_tick": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "promise.async_.Async.reset": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "promise.async_.Async.settle_promises": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "promise.async_.Async.throw_later": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "promise.async_.Async.throw_later.fn": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "promise.async_.Async.wait": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "promise.async_.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.async_.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.async_.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.async_.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "promise.async_.local": {
  "data": {
   "shadows": "threading.local"
  },
  "type": "import"
 },
 "promise.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "SyntaxError"
   ]
  },
  "type": "module"
 },
 "promise.compat.Future": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "promise.compat.Future.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.Future.set_exception": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.Future.set_result": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.ensure_future": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.iscoroutine": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "promise.compat.iterate_promise": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.dataloader": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "collections.namedtuple",
    "threading.local"
   ]
  },
  "type": "module"
 },
 "promise.dataloader.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.dataloader.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.dataloader.DataLoader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "threading.local"
   ]
  },
  "type": "class"
 },
 "promise.dataloader.DataLoader.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "callable"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.clear": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.clear_all": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.do_resolve_reject": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "functools.partial",
    "len",
    "promise.dataloader.Loader",
    "promise.dataloader.dispatch_queue",
    "promise.dataloader.enqueue_post_promise_job"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.load": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Promise",
    "TypeError",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.load_many": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "Promise.all",
    "TypeError",
    "collections.Iterable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.prime": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "Promise.reject",
    "Promise.resolve",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "promise.dataloader.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "promise.dataloader.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "promise.dataloader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "promise.dataloader.Loader": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "promise.dataloader.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.dataloader.Sized": {
  "data": {
   "shadows": "typing.Sized"
  },
  "type": "import"
 },
 "promise.dataloader.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "promise.dataloader.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.dataloader.cache": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "promise.dataloader.dispatch_queue": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "promise.dataloader.dispatch_queue_batch",
    "promise.dataloader.get_chunks"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.dispatch_queue_batch": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Exception",
    "Promise",
    "TypeError",
    "functools.partial",
    "isinstance",
    "promise.dataloader.failed_dispatch"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.dispatch_queue_batch.batch_promise_resolved": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "collections.Iterable",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.enqueue_post_promise_job": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Promise.resolve",
    "get_default_scheduler",
    "hasattr",
    "promise.dataloader.cache"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.enqueue_post_promise_job.on_promise_resolve": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "promise.dataloader.failed_dispatch": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "promise.dataloader.get_chunks": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.local": {
  "data": {
   "shadows": "threading.local"
  },
  "type": "import"
 },
 "promise.dataloader.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "promise.dataloader.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "promise.iterate_promise": {
  "data": {},
  "type": "module"
 },
 "promise.iterate_promise.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "promise.iterate_promise.iterate_promise": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "promise.promise_list": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "promise.promise_list.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.promise_list.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "promise.promise_list.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "promise.promise_list.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "promise.promise_list.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.promise_list.PromiseList": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.promise_list.PromiseList.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList.__len__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._init": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "collections.Iterable",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._init_promise": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._iterate": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "len"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._promise_fulfilled": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._promise_rejected": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._reject": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._resolve": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList.is_resolved": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "promise.promise_list.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "promise.promise_list.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.promise_list.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "promise.pyutils": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.asyncio": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.asyncio.AsyncioScheduler": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "asyncio.get_event_loop"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.call": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.wait": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "asyncio.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.Event": {
  "data": {
   "shadows": "asyncio.Event"
  },
  "type": "import"
 },
 "promise.schedulers.asyncio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "promise.schedulers.asyncio.get_event_loop": {
  "data": {
   "shadows": "asyncio.get_event_loop"
  },
  "type": "import"
 },
 "promise.schedulers.gevent": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.gevent.Event": {
  "data": {
   "shadows": "gevent.event.Event"
  },
  "type": "import"
 },
 "promise.schedulers.gevent.GeventScheduler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.gevent.GeventScheduler.call": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "promise.schedulers.gevent.gevent"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.gevent.GeventScheduler.wait": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "gevent.event.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.gevent.GeventScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "promise.schedulers.gevent.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "promise.schedulers.gevent.gevent": {
  "data": {
   "shadows": "gevent"
  },
  "type": "import"
 },
 "promise.schedulers.immediate": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.immediate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.schedulers.immediate.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.schedulers.immediate.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "promise.schedulers.immediate.ImmediateScheduler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.immediate.ImmediateScheduler.call": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.immediate.ImmediateScheduler.wait": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.immediate.ImmediateScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "promise.schedulers.immediate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.schedulers.thread": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.thread.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "promise.schedulers.thread.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "promise.schedulers.thread.ThreadScheduler": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.thread.ThreadScheduler.call": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.thread.ThreadScheduler.wait": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.thread.ThreadScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "promise.utils": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "int",
    "promise.utils.PY3",
    "promise.utils.sys",
    "promise.utils.types",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "promise.utils.PY2": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "promise.utils.PY3": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "promise.utils.binary_type": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "promise.utils.class_types": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "promise.utils.deprecated": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.utils.deprecated.__call__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "promise.utils.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "promise.utils.deprecated.__call__.new_func": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cls_or_func",
    "promise.utils.functools",
    "promise.utils.warn"
   ]
  },
  "type": "function"
 },
 "promise.utils.deprecated.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "promise.utils.inspect"
   ]
  },
  "type": "function"
 },
 "promise.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "promise.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "promise.utils.integer_types": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "promise.utils.string_types": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "promise.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "promise.utils.text_type": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "promise.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "promise.utils.warn": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DeprecationWarning",
    "promise.utils.warnings"
   ]
  },
  "type": "function"
 },
 "promise.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}