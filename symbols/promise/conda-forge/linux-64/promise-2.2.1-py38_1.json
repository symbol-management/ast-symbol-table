{
 "promise": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "get_version",
    "promise.VERSION",
    "promise.__SETUP__"
   ]
  },
  "type": "module"
 },
 "promise.VERSION": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "promise.__SETUP__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "promise.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "promise.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "promise.async_": {
  "data": {},
  "type": "module"
 },
 "promise.async_.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.async_.Async": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.async_.Async.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "promise.async_.Async._async_invoke": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "promise.async_.Async._async_invoke_later": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "promise.async_.Async._async_settle_promise": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "promise.async_.Async.disable_trampoline": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "promise.async_.Async.drain_queue": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "fn",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.async_.Async.drain_queue_until_resolved": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "fn",
    "fn._settle_promises",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.async_.Async.drain_queues": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "promise.async_.Async.enable_trampoline": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "promise.async_.Async.have_items_queued": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "promise.async_.Async.invoke": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "promise.async_.Async.invoke_later": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "promise.async_.Async.queue_tick": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "promise.async_.Async.reset": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "promise.async_.Async.settle_promises": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "promise.async_.Async.throw_later": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "promise.async_.Async.throw_later.fn": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "promise.async_.Async.wait": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "promise.async_.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.async_.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.async_.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.async_.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "promise.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "SyntaxError"
   ]
  },
  "type": "module"
 },
 "promise.compat.Future": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "promise.compat.Future.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.Future.set_exception": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.Future.set_result": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.ensure_future": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.compat.iscoroutine": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "promise.compat.iterate_promise": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "promise.dataloader": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "promise.dataloader.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.dataloader.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.dataloader.DataLoader": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.dataloader.DataLoader.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "callable"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.clear": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.clear_all": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.do_resolve_reject": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dispatch_queue",
    "enqueue_post_promise_job",
    "functools.partial",
    "len",
    "promise.dataloader.Loader"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.get_cache_key": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.load": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Promise",
    "TypeError",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.load_many": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "Promise.all",
    "TypeError",
    "collections.Iterable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.DataLoader.prime": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "Promise.reject",
    "Promise.resolve",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "promise.dataloader.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "promise.dataloader.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "promise.dataloader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "promise.dataloader.Loader": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "promise.dataloader.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.dataloader.Sized": {
  "data": {
   "shadows": "typing.Sized"
  },
  "type": "import"
 },
 "promise.dataloader.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "promise.dataloader.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.dataloader.dispatch_queue": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "dispatch_queue_batch",
    "len",
    "promise.dataloader.get_chunks"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.dispatch_queue_batch": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "Exception",
    "Promise",
    "TypeError",
    "failed_dispatch",
    "functools.partial",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.dispatch_queue_batch.batch_promise_resolved": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "collections.Iterable",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.enqueue_post_promise_job": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Promise.resolve",
    "get_default_scheduler",
    "promise.dataloader.resolved_promise"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.enqueue_post_promise_job.on_promise_resolve": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "promise.dataloader.failed_dispatch": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "promise.dataloader.get_chunks": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "promise.dataloader.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "promise.dataloader.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "promise.dataloader.resolved_promise": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "promise.iterate_promise": {
  "data": {},
  "type": "module"
 },
 "promise.iterate_promise.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "promise.iterate_promise.iterate_promise": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "promise.promise": {
  "data": {
   "symbols_in_volume": [
    "Async",
    "ImmediateScheduler",
    "bool",
    "complex",
    "dict",
    "float",
    "list",
    "promise.promise.Promise",
    "set",
    "sys.version_info",
    "tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "promise.promise.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.promise.BASE_TYPES": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "promise.promise.CALLBACK_FULFILL_OFFSET": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "promise.promise.CALLBACK_PROMISE_OFFSET": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "promise.promise.CALLBACK_REJECT_OFFSET": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "promise.promise.CALLBACK_SIZE": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "promise.promise.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.promise.DEFAULT_TIMEOUT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "promise.promise.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "promise.promise.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "promise.promise.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "promise.promise.IS_PYTHON2": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "promise.promise.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "promise.promise.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "promise.promise.MAX_LENGTH": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "promise.promise.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.promise.Promise": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "promise.promise.STATE_PENDING",
    "promise.promise.T",
    "property",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "promise.promise.Promise.__init__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "promise.promise.Promise.__iter__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "iterate_promise"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.__repr__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "hex",
    "id",
    "promise.promise.STATE_FULFILLED",
    "promise.promise.STATE_PENDING",
    "promise.promise.STATE_REJECTED",
    "repr"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._add_callbacks": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "callable",
    "promise.promise.CALLBACK_FULFILL_OFFSET",
    "promise.promise.CALLBACK_PROMISE_OFFSET",
    "promise.promise.CALLBACK_REJECT_OFFSET",
    "promise.promise.CALLBACK_SIZE",
    "promise.promise.MAX_LENGTH"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._clear_callback_data_index_at": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "promise.promise.CALLBACK_FULFILL_OFFSET",
    "promise.promise.CALLBACK_PROMISE_OFFSET",
    "promise.promise.CALLBACK_REJECT_OFFSET",
    "promise.promise.CALLBACK_SIZE"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._deprecated_reject": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._deprecated_resolve": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "deprecated"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._ensure_possible_rejection_handled": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "promise.promise.Promise._followee": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "isinstance",
    "promise.promise.Promise"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._fulfill": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "promise.promise.STATE_FULFILLED",
    "promise.promise.async_instance",
    "promise.promise.make_self_resolution_error"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._fulfill_promises": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "handler",
    "range"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._fulfillment_handler_at": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "promise.promise.CALLBACK_FULFILL_OFFSET",
    "promise.promise.CALLBACK_SIZE"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._migrate_callback0": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "promise.promise.Promise._migrate_callback_at": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "promise.promise.Promise._promise_at": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "promise.promise.CALLBACK_PROMISE_OFFSET",
    "promise.promise.CALLBACK_SIZE"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._reject": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "promise.promise.STATE_REJECTED",
    "promise.promise.async_instance"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._reject_callback": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Exception",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._reject_promises": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "handler",
    "range"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._rejection_handler_at": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "promise.promise.CALLBACK_REJECT_OFFSET",
    "promise.promise.CALLBACK_SIZE"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._resolve_callback": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "promise.promise.STATE_FULFILLED",
    "promise.promise.STATE_PENDING",
    "promise.promise.STATE_REJECTED",
    "promise.promise.make_self_resolution_error",
    "range"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._resolve_from_executor": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "Exception",
    "executor",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._resolve_from_executor.reject": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "promise.promise.Promise._resolve_from_executor.resolve": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "promise.promise.Promise._set_followee": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "isinstance",
    "promise.promise.Promise"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._settle_promise": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "callable",
    "handler",
    "isinstance",
    "promise.promise.STATE_FULFILLED"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._settle_promise0": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "handler"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._settle_promise_from_handler": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "handler",
    "promise.promise.try_catch"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._settle_promises": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "promise.promise.STATE_REJECTED"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._settled_value": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "promise.promise.STATE_FULFILLED",
    "promise.promise.STATE_REJECTED",
    "six.reraise",
    "type"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._target": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "promise.promise.Promise._target_settled_value": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "promise.promise.Promise._then": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "functools.partial",
    "handler",
    "promise.promise.STATE_FULFILLED",
    "promise.promise.STATE_PENDING",
    "promise.promise.STATE_REJECTED",
    "promise.promise.async_instance"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._try_convert_to_promise": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "ensure_future",
    "executor",
    "is_future_like",
    "iscoroutine",
    "issubclass",
    "promise.promise.Promise"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._try_convert_to_promise.executor": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "_process_future_result"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise._wait": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "promise.promise.Promise.all": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "PromiseList",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.catch": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "promise.promise.Promise.done": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "promise.promise.Promise.done_all": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "dict",
    "handler",
    "handler.get",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.for_dict": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "classmethod",
    "cls.all",
    "cls.resolve",
    "dict_type",
    "type"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.for_dict.handle_success": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "dict_type",
    "zip"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.future": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Future",
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.get": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "promise.promise.DEFAULT_TIMEOUT"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.is_fulfilled": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "promise.promise.STATE_FULFILLED",
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.is_pending": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "promise.promise.STATE_PENDING",
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.is_rejected": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "promise.promise.STATE_REJECTED",
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.is_thenable": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "classmethod",
    "is_future_like",
    "iscoroutine",
    "issubclass",
    "promise.promise.BASE_TYPES",
    "promise.promise.Promise"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.promisify": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "cls.resolve",
    "warn"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.promisify.wrapper": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "cls",
    "executor",
    "f",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.promisify.wrapper.executor": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "f",
    "resolve"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.reject": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.resolve": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._try_convert_to_promise",
    "cls.is_thenable",
    "promise.promise.STATE_FULFILLED"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.safe": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "classmethod",
    "cls._safe_resolved_promise",
    "promise.promise.Promise"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.safe.wrapper": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "cls._safe_resolved_promise.then",
    "fn",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.scheduler": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "promise.promise.default_scheduler",
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.then": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "promise.promise.Promise.then_all": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "dict",
    "handler",
    "handler.get",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "promise.promise.Promise.wait": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "classmethod",
    "promise.promise.async_instance"
   ]
  },
  "type": "function"
 },
 "promise.promise.RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "promise.promise.S": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "promise.promise.STATE_FULFILLED": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "promise.promise.STATE_PENDING": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "promise.promise.STATE_REJECTED": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "promise.promise.T": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "promise.promise.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "promise.promise.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "promise.promise.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "promise.promise.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "promise.promise.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.promise._process_future_result": {
  "data": {
   "lineno": 837
  },
  "type": "function"
 },
 "promise.promise._process_future_result.handle_future_result": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "Exception",
    "reject",
    "resolve",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "promise.promise._type_done_callbacks": {
  "data": {
   "lineno": 820
  },
  "type": "constant"
 },
 "promise.promise.async_instance": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "promise.promise.default_scheduler": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "promise.promise.exc_info": {
  "data": {
   "shadows": "sys.exc_info"
  },
  "type": "import"
 },
 "promise.promise.get_default_scheduler": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "promise.promise.default_scheduler"
   ]
  },
  "type": "function"
 },
 "promise.promise.is_future_like": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "promise.promise._type_done_callbacks"
   ]
  },
  "type": "function"
 },
 "promise.promise.is_thenable": {
  "data": {
   "lineno": 834
  },
  "type": "constant"
 },
 "promise.promise.make_self_resolution_error": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "promise.promise.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "promise.promise.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "promise.promise.promise_for_dict": {
  "data": {
   "lineno": 833
  },
  "type": "constant"
 },
 "promise.promise.promisify": {
  "data": {
   "lineno": 832
  },
  "type": "constant"
 },
 "promise.promise.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "promise.promise.set_default_scheduler": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "promise.promise.default_scheduler"
   ]
  },
  "type": "function"
 },
 "promise.promise.try_catch": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "handler",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "promise.promise.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "promise.promise.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "promise.promise_list": {
  "data": {},
  "type": "module"
 },
 "promise.promise_list.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.promise_list.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "promise.promise_list.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "promise.promise_list.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "promise.promise_list.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.promise_list.PromiseList": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.promise_list.PromiseList.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList.__len__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._init": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "collections.Iterable",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._init_promise": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._iterate": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "len"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._promise_fulfilled": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._promise_rejected": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._reject": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList._resolve": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.PromiseList.is_resolved": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "promise.promise_list.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "promise.promise_list.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "promise.promise_list.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "promise.promise_list.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "promise.pyutils": {
  "data": {},
  "type": "module"
 },
 "promise.pyutils.version": {
  "data": {},
  "type": "module"
 },
 "promise.pyutils.version.VERSION": {
  "data": {
   "shadows": "promise.VERSION"
  },
  "type": "import"
 },
 "promise.pyutils.version.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "promise.pyutils.version.get_complete_version": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "promise.VERSION"
   ]
  },
  "type": "function"
 },
 "promise.pyutils.version.get_docs_version": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "promise.pyutils.version.get_complete_version"
   ]
  },
  "type": "function"
 },
 "promise.pyutils.version.get_git_changeset": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "int",
    "promise.pyutils.version.datetime",
    "promise.pyutils.version.os",
    "promise.pyutils.version.subprocess"
   ]
  },
  "type": "function"
 },
 "promise.pyutils.version.get_main_version": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "get_complete_version",
    "str"
   ]
  },
  "type": "function"
 },
 "promise.pyutils.version.get_version": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "get_complete_version",
    "get_git_changeset",
    "get_main_version",
    "str"
   ]
  },
  "type": "function"
 },
 "promise.pyutils.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "promise.pyutils.version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "promise.pyutils.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "promise.schedulers": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.asyncio": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.asyncio.AsyncioScheduler": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "asyncio.get_event_loop"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.call": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.wait": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "asyncio.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.AsyncioScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "promise.schedulers.asyncio.Event": {
  "data": {
   "shadows": "asyncio.Event"
  },
  "type": "import"
 },
 "promise.schedulers.asyncio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "promise.schedulers.asyncio.get_event_loop": {
  "data": {
   "shadows": "asyncio.get_event_loop"
  },
  "type": "import"
 },
 "promise.schedulers.gevent": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.gevent.Event": {
  "data": {
   "shadows": "gevent.event.Event"
  },
  "type": "import"
 },
 "promise.schedulers.gevent.GeventScheduler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.gevent.GeventScheduler.call": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "promise.schedulers.gevent.gevent"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.gevent.GeventScheduler.wait": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "gevent.event.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.gevent.GeventScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "promise.schedulers.gevent.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "promise.schedulers.gevent.gevent": {
  "data": {
   "shadows": "gevent"
  },
  "type": "import"
 },
 "promise.schedulers.immediate": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.immediate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "promise.schedulers.immediate.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "promise.schedulers.immediate.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "promise.schedulers.immediate.ImmediateScheduler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.immediate.ImmediateScheduler.call": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.immediate.ImmediateScheduler.wait": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.immediate.ImmediateScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "promise.schedulers.immediate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "promise.schedulers.thread": {
  "data": {},
  "type": "module"
 },
 "promise.schedulers.thread.Event": {
  "data": {
   "shadows": "threading.Event"
  },
  "type": "import"
 },
 "promise.schedulers.thread.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "promise.schedulers.thread.ThreadScheduler": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.schedulers.thread.ThreadScheduler.call": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.thread.ThreadScheduler.wait": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "threading.Event"
   ]
  },
  "type": "function"
 },
 "promise.schedulers.thread.ThreadScheduler.wait.on_resolve_or_reject": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "promise.utils": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "int",
    "promise.utils.PY3",
    "promise.utils.sys",
    "promise.utils.types",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "promise.utils.PY2": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "promise.utils.PY3": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "promise.utils.binary_type": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "promise.utils.class_types": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "promise.utils.deprecated": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "promise.utils.deprecated.__call__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "promise.utils.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "promise.utils.deprecated.__call__.new_func": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cls_or_func",
    "promise.utils.functools",
    "promise.utils.warn"
   ]
  },
  "type": "function"
 },
 "promise.utils.deprecated.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "promise.utils.inspect"
   ]
  },
  "type": "function"
 },
 "promise.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "promise.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "promise.utils.integer_types": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "promise.utils.string_types": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "promise.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "promise.utils.text_type": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "promise.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "promise.utils.warn": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DeprecationWarning",
    "promise.utils.warnings"
   ]
  },
  "type": "function"
 },
 "promise.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}