{
 "eth_keys": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info.major",
   "warnings.resetwarnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "module"
 },
 "eth_keys.backends": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.base.BaseECCBackend": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.backends.base.BaseECCBackend.compress_public_key_bytes": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.decompress_public_key_bytes": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_recover": {
  "lineno": 29,
  "symbols_in_volume": [
   "eth_keys.datatypes.PublicKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_sign": {
  "lineno": 13,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_sign_non_recoverable": {
  "lineno": 18,
  "symbols_in_volume": [
   "eth_keys.datatypes.NonRecoverableSignature",
   "eth_keys.datatypes.PrivateKey"
  ],
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_verify": {
  "lineno": 23,
  "symbols_in_volume": [
   "eth_keys.datatypes.BaseSignature",
   "eth_keys.datatypes.PublicKey"
  ],
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.private_key_to_public_key": {
  "lineno": 34,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.PublicKey"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "coincurve.ecdsa",
   "coincurve.keys"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.compress_public_key_bytes": {
  "lineno": 119,
  "symbols_in_volume": [
   "eth_keys.validation.validate_uncompressed_public_key_bytes",
   "eth_utils.big_endian_to_int"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.decompress_public_key_bytes": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_recover": {
  "lineno": 91,
  "symbols_in_volume": [
   "eth_keys.datatypes.PublicKey",
   "eth_keys.datatypes.Signature",
   "eth_keys.exceptions.BadSignature"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_sign": {
  "lineno": 52,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_sign_non_recoverable": {
  "lineno": 63,
  "symbols_in_volume": [
   "eth_keys.datatypes.NonRecoverableSignature",
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.utils.der.two_int_sequence_decoder"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_verify": {
  "lineno": 77,
  "symbols_in_volume": [
   "eth_keys.datatypes.BaseSignature",
   "eth_keys.datatypes.PublicKey",
   "eth_keys.utils.der.two_int_sequence_encoder",
   "eth_keys.utils.numeric.coerce_low_s"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.private_key_to_public_key": {
  "lineno": 108,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.PublicKey"
  ],
  "type": "function"
 },
 "eth_keys.backends.coincurve.is_coincurve_available": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.get_backend": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.get_backend_class": {
  "lineno": 25,
  "symbols_in_volume": [
   "eth_keys.utils.module_loading.import_string",
   "os.environ.get",
   "typing.Type"
  ],
  "type": "function"
 },
 "eth_keys.backends.get_default_backend_class": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.native": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.native.ecdsa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.native.ecdsa.compress_public_key": {
  "lineno": 63,
  "symbols_in_volume": [
   "eth_keys.utils.padding.pad32",
   "eth_utils.int_to_big_endian"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.decode_public_key": {
  "lineno": 38,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.decompress_public_key": {
  "lineno": 72,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_A",
   "eth_keys.constants.SECPK1_B",
   "eth_keys.constants.SECPK1_P",
   "eth_utils.big_endian_to_int"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.deterministic_generate_k": {
  "lineno": 92,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int",
   "hashlib.sha256",
   "hmac.new",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.ecdsa_raw_recover": {
  "lineno": 140,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_A",
   "eth_keys.constants.SECPK1_B",
   "eth_keys.constants.SECPK1_Gx",
   "eth_keys.constants.SECPK1_Gy",
   "eth_keys.constants.SECPK1_N",
   "eth_keys.constants.SECPK1_P",
   "eth_keys.exceptions.BadSignature",
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.ecdsa_raw_sign": {
  "lineno": 108,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_G",
   "eth_keys.constants.SECPK1_N",
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.ecdsa_raw_verify": {
  "lineno": 122,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_G",
   "eth_keys.constants.SECPK1_N",
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.encode_raw_public_key": {
  "lineno": 44,
  "symbols_in_volume": [
   "eth_keys.utils.padding.pad32",
   "eth_utils.int_to_big_endian",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.private_key_to_public_key": {
  "lineno": 52,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_G",
   "eth_keys.constants.SECPK1_N",
   "eth_utils.big_endian_to_int"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.native.jacobian.fast_add": {
  "lineno": 90,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.fast_multiply": {
  "lineno": 85,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.from_jacobian": {
  "lineno": 64,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_P",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.inv": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.jacobian_add": {
  "lineno": 39,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_P",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.jacobian_double": {
  "lineno": 27,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_A",
   "eth_keys.constants.SECPK1_P",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.jacobian_multiply": {
  "lineno": 69,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_N",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.to_jacobian": {
  "lineno": 22,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.main": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.backends.native.main.NativeECCBackend": {
  "lineno": 24,
  "symbols_in_volume": [
   "eth_keys.backends.base.BaseECCBackend"
  ],
  "type": "class"
 },
 "eth_keys.backends.native.main.NativeECCBackend.compress_public_key_bytes": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.decompress_public_key_bytes": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_recover": {
  "lineno": 45,
  "symbols_in_volume": [
   "eth_keys.datatypes.PublicKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_sign": {
  "lineno": 25,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_sign_non_recoverable": {
  "lineno": 32,
  "symbols_in_volume": [
   "eth_keys.datatypes.NonRecoverableSignature",
   "eth_keys.datatypes.PrivateKey"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_verify": {
  "lineno": 39,
  "symbols_in_volume": [
   "eth_keys.datatypes.BaseSignature",
   "eth_keys.datatypes.PublicKey"
  ],
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.private_key_to_public_key": {
  "lineno": 52,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.PublicKey"
  ],
  "type": "function"
 },
 "eth_keys.constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.datatypes": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.abc.ByteString",
   "collections.abc.Sequence",
   "sys.version_info",
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "eth_keys.datatypes.BaseKey": {
  "lineno": 116,
  "symbols_in_volume": [
   "collections.abc.Hashable"
  ],
  "type": "class"
 },
 "eth_keys.datatypes.BaseKey.__eq__": {
  "lineno": 145,
  "symbols_in_volume": [
   "eth_utils.is_bytes",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__getitem__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__hash__": {
  "lineno": 127,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int",
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__hex__": {
  "lineno": 159,
  "symbols_in_volume": [
   "codecs.encode",
   "sys.version_info"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__index__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__int__": {
  "lineno": 133,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__len__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__repr__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__str__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.to_bytes": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.to_hex": {
  "lineno": 119,
  "symbols_in_volume": [
   "codecs.decode",
   "codecs.encode"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature": {
  "lineno": 275,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "eth_keys.datatypes.BaseSignature.__bytes__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__eq__": {
  "lineno": 323,
  "symbols_in_volume": [
   "eth_utils.is_bytes",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__getitem__": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__hash__": {
  "lineno": 314,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int",
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__hex__": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__index__": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__init__": {
  "lineno": 279,
  "symbols_in_volume": [
   "eth_keys.exceptions.BadSignature",
   "eth_keys.validation.validate_signature_r_or_s",
   "eth_utils.ValidationError",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__int__": {
  "lineno": 345,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__len__": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__repr__": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__str__": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.r": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.rs": {
  "lineno": 300,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.s": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.to_bytes": {
  "lineno": 304,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.to_hex": {
  "lineno": 311,
  "symbols_in_volume": [
   "eth_utils.encode_hex"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.verify_msg": {
  "lineno": 348,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.verify_msg_hash": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.LazyBackend": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.datatypes.LazyBackend.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "eth_keys.backends.base.BaseECCBackend",
   "eth_utils.is_string"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.LazyBackend.backend": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.LazyBackend.get_backend": {
  "lineno": 110,
  "symbols_in_volume": [
   "eth_keys.backends.get_backend",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.NonRecoverableSignature": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.datatypes.NonRecoverableSignature.__init__": {
  "lineno": 431,
  "symbols_in_volume": [
   "eth_keys.validation.validate_non_recoverable_signature_bytes",
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.NonRecoverableSignature.to_bytes": {
  "lineno": 449,
  "symbols_in_volume": [
   "eth_keys.utils.padding.pad32",
   "eth_utils.int_to_big_endian"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.datatypes.PrivateKey.__init__": {
  "lineno": 249,
  "symbols_in_volume": [
   "eth_keys.validation.validate_private_key_bytes"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg": {
  "lineno": 260,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg_hash": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg_hash_non_recoverable": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg_non_recoverable": {
  "lineno": 267,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.datatypes.PublicKey.__init__": {
  "lineno": 167,
  "symbols_in_volume": [
   "eth_keys.validation.validate_uncompressed_public_key_bytes"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.from_compressed_bytes": {
  "lineno": 176,
  "symbols_in_volume": [
   "eth_keys.validation.validate_compressed_public_key_bytes"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.from_private": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.recover_from_msg": {
  "lineno": 198,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.recover_from_msg_hash": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_address": {
  "lineno": 239,
  "symbols_in_volume": [
   "eth_keys.utils.address.public_key_bytes_to_address",
   "eth_utils.to_normalized_address"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_canonical_address": {
  "lineno": 242,
  "symbols_in_volume": [
   "eth_keys.utils.address.public_key_bytes_to_address"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_checksum_address": {
  "lineno": 236,
  "symbols_in_volume": [
   "eth_keys.utils.address.public_key_bytes_to_address",
   "eth_typing.ChecksumAddress",
   "eth_utils.to_checksum_address"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_compressed_bytes": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.verify_msg": {
  "lineno": 217,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.verify_msg_hash": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.Signature": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.datatypes.Signature.__init__": {
  "lineno": 363,
  "symbols_in_volume": [
   "eth_keys.exceptions.BadSignature",
   "eth_keys.validation.validate_recoverable_signature_bytes",
   "eth_utils.ValidationError",
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.r": {
  "lineno": 398,
  "symbols_in_volume": [
   "eth_keys.validation.validate_signature_r_or_s"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.recover_public_key_from_msg": {
  "lineno": 418,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.recover_public_key_from_msg_hash": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.s": {
  "lineno": 403,
  "symbols_in_volume": [
   "eth_keys.validation.validate_signature_r_or_s"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.to_bytes": {
  "lineno": 412,
  "symbols_in_volume": [
   "eth_keys.utils.numeric.int_to_byte",
   "eth_keys.utils.padding.pad32",
   "eth_utils.int_to_big_endian"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.to_non_recoverable_signature": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.v": {
  "lineno": 393,
  "symbols_in_volume": [
   "eth_keys.validation.validate_signature_v"
  ],
  "type": "function"
 },
 "eth_keys.datatypes.Signature.vrs": {
  "lineno": 408,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.exceptions.BadSignature": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "eth_keys.main": {
  "lineno": null,
  "symbols_in_volume": [
   "eth_keys.datatypes.NonRecoverableSignature",
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.PublicKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "module"
 },
 "eth_keys.main.KeyAPI": {
  "lineno": 31,
  "symbols_in_volume": [
   "eth_keys.datatypes.LazyBackend",
   "eth_keys.datatypes.NonRecoverableSignature",
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.PublicKey",
   "eth_keys.datatypes.Signature"
  ],
  "type": "class"
 },
 "eth_keys.main.KeyAPI.ecdsa_recover": {
  "lineno": 90,
  "symbols_in_volume": [
   "eth_keys.datatypes.Signature",
   "eth_keys.validation.validate_message_hash",
   "eth_utils.ValidationError"
  ],
  "type": "function"
 },
 "eth_keys.main.KeyAPI.ecdsa_sign": {
  "lineno": 43,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.Signature",
   "eth_keys.validation.validate_message_hash",
   "eth_utils.ValidationError"
  ],
  "type": "function"
 },
 "eth_keys.main.KeyAPI.ecdsa_sign_non_recoverable": {
  "lineno": 59,
  "symbols_in_volume": [
   "eth_keys.datatypes.NonRecoverableSignature",
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.validation.validate_message_hash",
   "eth_utils.ValidationError"
  ],
  "type": "function"
 },
 "eth_keys.main.KeyAPI.ecdsa_verify": {
  "lineno": 75,
  "symbols_in_volume": [
   "eth_keys.datatypes.BaseSignature",
   "eth_keys.datatypes.PublicKey",
   "eth_keys.validation.validate_message_hash",
   "eth_utils.ValidationError"
  ],
  "type": "function"
 },
 "eth_keys.main.KeyAPI.private_key_to_public_key": {
  "lineno": 106,
  "symbols_in_volume": [
   "eth_keys.datatypes.PrivateKey",
   "eth_keys.datatypes.PublicKey",
   "eth_utils.ValidationError"
  ],
  "type": "function"
 },
 "eth_keys.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.utils.address": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.utils.address.public_key_bytes_to_address": {
  "lineno": 6,
  "symbols_in_volume": [
   "eth_utils.keccak"
  ],
  "type": "function"
 },
 "eth_keys.utils.der": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.utils.der._decode_int": {
  "lineno": 106,
  "symbols_in_volume": [
   "eth_utils.big_endian_to_int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.utils.der._encode_int": {
  "lineno": 88,
  "symbols_in_volume": [
   "eth_utils.apply_to_return_value",
   "eth_utils.int_to_big_endian",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "eth_keys.utils.der.two_int_sequence_decoder": {
  "lineno": 56,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.utils.der.two_int_sequence_encoder": {
  "lineno": 25,
  "symbols_in_volume": [
   "eth_utils.apply_to_return_value",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "eth_keys.utils.module_loading": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.utils.module_loading.import_string": {
  "lineno": 6,
  "symbols_in_volume": [
   "importlib.import_module",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.utils.module_loading.split_at_longest_importable_path": {
  "lineno": 28,
  "symbols_in_volume": [
   "importlib.import_module",
   "operator.attrgetter",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "eth_keys.utils.numeric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.utils.numeric.coerce_low_s": {
  "lineno": 10,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_N"
  ],
  "type": "function"
 },
 "eth_keys.utils.numeric.int_to_byte": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.utils.padding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "eth_keys.utils.padding.pad32": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.validation": {
  "lineno": null,
  "symbols_in_volume": [
   "eth_keys.constants.SECPK1_N"
  ],
  "type": "module"
 },
 "eth_keys.validation.validate_bytes": {
  "lineno": 21,
  "symbols_in_volume": [
   "eth_utils.ValidationError",
   "eth_utils.is_bytes",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_bytes_length": {
  "lineno": 51,
  "symbols_in_volume": [
   "eth_utils.ValidationError"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_compressed_public_key_bytes": {
  "lineno": 74,
  "symbols_in_volume": [
   "eth_utils.ValidationError",
   "eth_utils.encode_hex",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_gte": {
  "lineno": 26,
  "symbols_in_volume": [
   "eth_utils.ValidationError",
   "eth_utils.toolz.curry",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_integer": {
  "lineno": 16,
  "symbols_in_volume": [
   "eth_utils.ValidationError",
   "eth_utils.is_integer",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_lte": {
  "lineno": 37,
  "symbols_in_volume": [
   "eth_utils.ValidationError",
   "eth_utils.toolz.curry",
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_message_hash": {
  "lineno": 64,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_non_recoverable_signature_bytes": {
  "lineno": 97,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_private_key_bytes": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_recoverable_signature_bytes": {
  "lineno": 92,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "eth_keys.validation.validate_signature_r_or_s": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.validation.validate_signature_v": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "eth_keys.validation.validate_uncompressed_public_key_bytes": {
  "lineno": 69,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 }
}