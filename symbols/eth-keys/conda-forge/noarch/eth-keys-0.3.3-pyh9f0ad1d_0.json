{
 "eth_keys": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "eth_keys.sys",
    "eth_keys.warnings"
   ]
  },
  "type": "module"
 },
 "eth_keys.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "eth_keys.backends": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "eth_keys.backends.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "eth_keys.backends.base": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "eth_keys.backends.base.BaseECCBackend": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "eth_keys.backends.base.BaseECCBackend.compress_public_key_bytes": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.decompress_public_key_bytes": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_recover": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.datatypes.Signature"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_sign": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.Signature"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_sign_non_recoverable": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes",
    "eth_keys.datatypes.NonRecoverableSignature",
    "eth_keys.datatypes.PrivateKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.ecdsa_verify": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "bytes",
    "eth_keys.datatypes.BaseSignature",
    "eth_keys.datatypes.PublicKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseECCBackend.private_key_to_public_key": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.PublicKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.base.BaseSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.BaseSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.base.NonRecoverableSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.NonRecoverableSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.base.PrivateKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PrivateKey"
  },
  "type": "import"
 },
 "eth_keys.backends.base.PublicKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PublicKey"
  },
  "type": "import"
 },
 "eth_keys.backends.base.Signature": {
  "data": {
   "shadows": "eth_keys.datatypes.Signature"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.coincurve.BadSignature": {
  "data": {
   "shadows": "eth_keys.exceptions.BadSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.BaseSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.BaseSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ImportError",
    "eth_keys.backends.coincurve.CoinCurveECCBackend",
    "eth_keys.backends.coincurve.coincurve",
    "super"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.compress_public_key_bytes": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.validation.validate_uncompressed_public_key_bytes",
    "eth_utils.big_endian_to_int"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.decompress_public_key_bytes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_recover": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "bytes",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.datatypes.Signature",
    "eth_keys.exceptions.BadSignature",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_sign": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.Signature"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_sign_non_recoverable": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.NonRecoverableSignature",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.utils.der.two_int_sequence_decoder"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.ecdsa_verify": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "eth_keys.datatypes.BaseSignature",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.utils.der.two_int_sequence_encoder",
    "eth_keys.utils.numeric.coerce_low_s"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.CoinCurveECCBackend.private_key_to_public_key": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.PublicKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.NonRecoverableSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.NonRecoverableSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.PrivateKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PrivateKey"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.PublicKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PublicKey"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.Signature": {
  "data": {
   "shadows": "eth_keys.datatypes.Signature"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.big_endian_to_int": {
  "data": {
   "shadows": "eth_utils.big_endian_to_int"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.coerce_low_s": {
  "data": {
   "shadows": "eth_keys.utils.numeric.coerce_low_s"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.coincurve": {
  "data": {
   "shadows": "coincurve"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.der": {
  "data": {
   "shadows": "eth_keys.utils.der"
  },
  "type": "import"
 },
 "eth_keys.backends.coincurve.is_coincurve_available": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "bool"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.coincurve.validate_uncompressed_public_key_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_uncompressed_public_key_bytes"
  },
  "type": "import"
 },
 "eth_keys.backends.get_backend": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "backend_class",
    "eth_keys.backends.get_backend_class",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.get_backend_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "eth_keys.backends.get_default_backend_class",
    "eth_keys.backends.os",
    "eth_keys.utils.module_loading.import_string",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.get_default_backend_class": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "is_coincurve_available",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.import_string": {
  "data": {
   "shadows": "eth_keys.utils.module_loading.import_string"
  },
  "type": "import"
 },
 "eth_keys.backends.native": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.native.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.native.ecdsa.A": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_A"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.B": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_B"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.BadSignature": {
  "data": {
   "shadows": "eth_keys.exceptions.BadSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.G": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_G"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.Gx": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_Gx"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.Gy": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_Gy"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.N": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_N"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.P": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_P"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.big_endian_to_int": {
  "data": {
   "shadows": "eth_utils.big_endian_to_int"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.compress_public_key": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.backends.native.ecdsa.decode_public_key",
    "eth_keys.utils.padding.pad32",
    "eth_utils.int_to_big_endian"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.decode_public_key": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bytes",
    "eth_utils.big_endian_to_int",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.decompress_public_key": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "eth_keys.backends.native.ecdsa.encode_raw_public_key",
    "eth_keys.constants.SECPK1_A",
    "eth_keys.constants.SECPK1_B",
    "eth_keys.constants.SECPK1_P",
    "eth_utils.big_endian_to_int",
    "len",
    "pow"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.deterministic_generate_k": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.backends.native.ecdsa.hashlib",
    "eth_keys.backends.native.ecdsa.hmac",
    "eth_utils.big_endian_to_int",
    "int",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.ecdsa_raw_recover": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.backends.native.ecdsa.encode_raw_public_key",
    "eth_keys.constants.SECPK1_A",
    "eth_keys.constants.SECPK1_B",
    "eth_keys.constants.SECPK1_Gx",
    "eth_keys.constants.SECPK1_Gy",
    "eth_keys.constants.SECPK1_N",
    "eth_keys.constants.SECPK1_P",
    "eth_keys.exceptions.BadSignature",
    "eth_utils.big_endian_to_int",
    "from_jacobian",
    "int",
    "inv",
    "jacobian_add",
    "jacobian_multiply",
    "pow",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.ecdsa_raw_sign": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.backends.native.ecdsa.deterministic_generate_k",
    "eth_keys.constants.SECPK1_G",
    "eth_keys.constants.SECPK1_N",
    "eth_utils.big_endian_to_int",
    "fast_multiply",
    "int",
    "inv",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.ecdsa_raw_verify": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "eth_keys.backends.native.ecdsa.decode_public_key",
    "eth_keys.constants.SECPK1_G",
    "eth_keys.constants.SECPK1_N",
    "eth_utils.big_endian_to_int",
    "fast_add",
    "fast_multiply",
    "int",
    "inv",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.encode_raw_public_key": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.utils.padding.pad32",
    "eth_utils.int_to_big_endian",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.ecdsa.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.hmac": {
  "data": {
   "shadows": "hmac"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.int_to_big_endian": {
  "data": {
   "shadows": "eth_utils.int_to_big_endian"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.pad32": {
  "data": {
   "shadows": "eth_keys.utils.padding.pad32"
  },
  "type": "import"
 },
 "eth_keys.backends.native.ecdsa.private_key_to_public_key": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "eth_keys.backends.native.ecdsa.encode_raw_public_key",
    "eth_keys.constants.SECPK1_G",
    "eth_keys.constants.SECPK1_N",
    "eth_utils.big_endian_to_int",
    "fast_multiply"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.native.jacobian.A": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_A"
  },
  "type": "import"
 },
 "eth_keys.backends.native.jacobian.N": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_N"
  },
  "type": "import"
 },
 "eth_keys.backends.native.jacobian.P": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_P"
  },
  "type": "import"
 },
 "eth_keys.backends.native.jacobian.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "eth_keys.backends.native.jacobian.fast_add": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "eth_keys.backends.native.jacobian.from_jacobian",
    "eth_keys.backends.native.jacobian.jacobian_add",
    "eth_keys.backends.native.jacobian.to_jacobian",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.fast_multiply": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "eth_keys.backends.native.jacobian.from_jacobian",
    "eth_keys.backends.native.jacobian.jacobian_multiply",
    "eth_keys.backends.native.jacobian.to_jacobian",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.from_jacobian": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "eth_keys.backends.native.jacobian.inv",
    "eth_keys.constants.SECPK1_P",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.inv": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.jacobian_add": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "eth_keys.backends.native.jacobian.jacobian_double",
    "eth_keys.constants.SECPK1_P",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.jacobian_double": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "eth_keys.constants.SECPK1_A",
    "eth_keys.constants.SECPK1_P",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.jacobian_multiply": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "eth_keys.backends.native.jacobian.jacobian_add",
    "eth_keys.backends.native.jacobian.jacobian_double",
    "eth_keys.constants.SECPK1_N",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.jacobian.to_jacobian": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main": {
  "data": {},
  "type": "module"
 },
 "eth_keys.backends.native.main.BaseECCBackend": {
  "data": {
   "shadows": "eth_keys.backends.base.BaseECCBackend"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.BaseSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.BaseSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.NativeECCBackend": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "eth_keys.backends.base.BaseECCBackend"
   ]
  },
  "type": "class"
 },
 "eth_keys.backends.native.main.NativeECCBackend.compress_public_key_bytes": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bytes",
    "compress_public_key"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.decompress_public_key_bytes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bytes",
    "decompress_public_key"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_recover": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bytes",
    "ecdsa_raw_recover",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.datatypes.Signature"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_sign": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bytes",
    "ecdsa_raw_sign",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.Signature"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_sign_non_recoverable": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bytes",
    "ecdsa_raw_sign",
    "eth_keys.datatypes.NonRecoverableSignature",
    "eth_keys.datatypes.PrivateKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.ecdsa_verify": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "ecdsa_raw_verify",
    "eth_keys.datatypes.BaseSignature",
    "eth_keys.datatypes.PublicKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NativeECCBackend.private_key_to_public_key": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.PublicKey",
    "private_key_to_public_key"
   ]
  },
  "type": "function"
 },
 "eth_keys.backends.native.main.NonRecoverableSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.NonRecoverableSignature"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.PrivateKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PrivateKey"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.PublicKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PublicKey"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.Signature": {
  "data": {
   "shadows": "eth_keys.datatypes.Signature"
  },
  "type": "import"
 },
 "eth_keys.backends.native.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "eth_keys.backends.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "eth_keys.constants": {
  "data": {
   "symbols_in_volume": [
    "eth_keys.constants.SECPK1_Gx",
    "eth_keys.constants.SECPK1_Gy"
   ]
  },
  "type": "module"
 },
 "eth_keys.constants.SECPK1_A": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "eth_keys.constants.SECPK1_B": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "eth_keys.constants.SECPK1_G": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "eth_keys.constants.SECPK1_Gx": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "eth_keys.constants.SECPK1_Gy": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "eth_keys.constants.SECPK1_N": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "eth_keys.constants.SECPK1_P": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "eth_keys.constants.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "eth_keys.datatypes": {
  "data": {
   "symbols_in_volume": [
    "eth_keys.datatypes.collections",
    "eth_keys.datatypes.sys",
    "type",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "eth_keys.datatypes.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "eth_keys.datatypes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "eth_keys.datatypes.BadSignature": {
  "data": {
   "shadows": "eth_keys.exceptions.BadSignature"
  },
  "type": "import"
 },
 "eth_keys.datatypes.BaseECCBackend": {
  "data": {
   "shadows": "eth_keys.backends.base.BaseECCBackend"
  },
  "type": "import"
 },
 "eth_keys.datatypes.BaseKey": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "eth_keys.datatypes.ByteString",
    "eth_keys.datatypes.collections"
   ]
  },
  "type": "class"
 },
 "eth_keys.datatypes.BaseKey.__eq__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bool",
    "eth_utils.is_bytes",
    "hasattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__getitem__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__hash__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "eth_utils.big_endian_to_int",
    "eth_utils.keccak",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__hex__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "eth_keys.datatypes.codecs",
    "eth_keys.datatypes.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__index__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__int__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "eth_utils.big_endian_to_int",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__len__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__repr__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.__str__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.to_bytes": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseKey.to_hex": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "eth_keys.datatypes.codecs",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "abc.ABC",
    "eth_keys.datatypes.ByteString",
    "eth_keys.datatypes.LazyBackend"
   ]
  },
  "type": "class"
 },
 "eth_keys.datatypes.BaseSignature.__bytes__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__eq__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "bool",
    "eth_utils.is_bytes",
    "hasattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__getitem__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__hash__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "eth_utils.big_endian_to_int",
    "eth_utils.keccak",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__hex__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__index__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "backend",
    "eth_keys.exceptions.BadSignature",
    "eth_keys.validation.validate_signature_r_or_s",
    "eth_utils.ValidationError",
    "int",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__int__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "eth_utils.big_endian_to_int",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__len__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "bytes",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__repr__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.__str__": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.r": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.rs": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.s": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.to_bytes": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.to_hex": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "eth_utils.encode_hex",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.verify_msg": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "eth_keys.datatypes.PublicKey",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.BaseSignature.verify_msg_hash": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "eth_keys.datatypes.PublicKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.ByteString": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "eth_keys.datatypes.ChecksumAddress": {
  "data": {
   "shadows": "eth_typing.ChecksumAddress"
  },
  "type": "import"
 },
 "eth_keys.datatypes.LazyBackend": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "eth_keys.datatypes.LazyBackend.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "backend",
    "eth_keys.backends.base.BaseECCBackend",
    "eth_utils.is_string",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.LazyBackend.backend": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "backend.setter"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.LazyBackend.get_backend": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "classmethod",
    "eth_keys.backends.get_backend",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.NonRecoverableSignature": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "eth_keys.datatypes.BaseSignature"
   ]
  },
  "type": "class"
 },
 "eth_keys.datatypes.NonRecoverableSignature.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "backend",
    "bytes",
    "eth_keys.validation.validate_non_recoverable_signature_bytes",
    "eth_utils.big_endian_to_int",
    "int",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.NonRecoverableSignature.to_bytes": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "eth_keys.utils.padding.pad32",
    "eth_utils.int_to_big_endian"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "eth_keys.datatypes.BaseKey",
    "eth_keys.datatypes.LazyBackend"
   ]
  },
  "type": "class"
 },
 "eth_keys.datatypes.PrivateKey.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "backend",
    "bytes",
    "eth_keys.validation.validate_private_key_bytes",
    "super"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "bytes",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg_hash": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg_hash_non_recoverable": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PrivateKey.sign_msg_non_recoverable": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bytes",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "eth_keys.datatypes.BaseKey",
    "eth_keys.datatypes.LazyBackend"
   ]
  },
  "type": "class"
 },
 "eth_keys.datatypes.PublicKey.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "backend",
    "bytes",
    "eth_keys.validation.validate_uncompressed_public_key_bytes",
    "super"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.from_compressed_bytes": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "backend",
    "backend.decompress_public_key_bytes",
    "bytes",
    "classmethod",
    "cls",
    "eth_keys.validation.validate_compressed_public_key_bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.from_private": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "backend",
    "backend.private_key_to_public_key",
    "classmethod",
    "cls.get_backend"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.recover_from_msg": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "backend",
    "bytes",
    "classmethod",
    "cls.recover_from_msg_hash",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.recover_from_msg_hash": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "backend",
    "backend.ecdsa_recover",
    "bytes",
    "classmethod",
    "cls.get_backend"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_address": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "eth_keys.utils.address.public_key_bytes_to_address",
    "eth_utils.to_normalized_address",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_canonical_address": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.utils.address.public_key_bytes_to_address"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_checksum_address": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "eth_keys.utils.address.public_key_bytes_to_address",
    "eth_typing.ChecksumAddress",
    "eth_utils.to_checksum_address"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.to_compressed_bytes": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.verify_msg": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.PublicKey.verify_msg_hash": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "eth_keys.datatypes.BaseSignature"
   ]
  },
  "type": "class"
 },
 "eth_keys.datatypes.Signature.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError",
    "backend",
    "bool",
    "bytes",
    "eth_keys.exceptions.BadSignature",
    "eth_keys.validation.validate_recoverable_signature_bytes",
    "eth_utils.ValidationError",
    "eth_utils.big_endian_to_int",
    "int",
    "ord",
    "str",
    "super",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.r": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "eth_keys.datatypes.BaseSignature",
    "eth_keys.validation.validate_signature_r_or_s",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.recover_public_key_from_msg": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.PublicKey",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.recover_public_key_from_msg_hash": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.PublicKey"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.s": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "eth_keys.datatypes.BaseSignature",
    "eth_keys.validation.validate_signature_r_or_s",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.to_bytes": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.utils.numeric.int_to_byte",
    "eth_keys.utils.padding.pad32",
    "eth_utils.int_to_big_endian"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.to_non_recoverable_signature": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "eth_keys.datatypes.NonRecoverableSignature"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.v": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "eth_keys.validation.validate_signature_v",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.Signature.vrs": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.datatypes.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "eth_keys.datatypes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "eth_keys.datatypes.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "eth_keys.datatypes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "eth_keys.datatypes.ValidationError": {
  "data": {
   "shadows": "eth_utils.ValidationError"
  },
  "type": "import"
 },
 "eth_keys.datatypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "eth_keys.datatypes.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "eth_keys.datatypes.big_endian_to_int": {
  "data": {
   "shadows": "eth_utils.big_endian_to_int"
  },
  "type": "import"
 },
 "eth_keys.datatypes.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "eth_keys.datatypes.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "eth_keys.datatypes.encode_hex": {
  "data": {
   "shadows": "eth_utils.encode_hex"
  },
  "type": "import"
 },
 "eth_keys.datatypes.get_backend": {
  "data": {
   "shadows": "eth_keys.backends.get_backend"
  },
  "type": "import"
 },
 "eth_keys.datatypes.int_to_big_endian": {
  "data": {
   "shadows": "eth_utils.int_to_big_endian"
  },
  "type": "import"
 },
 "eth_keys.datatypes.int_to_byte": {
  "data": {
   "shadows": "eth_keys.utils.numeric.int_to_byte"
  },
  "type": "import"
 },
 "eth_keys.datatypes.is_bytes": {
  "data": {
   "shadows": "eth_utils.is_bytes"
  },
  "type": "import"
 },
 "eth_keys.datatypes.is_string": {
  "data": {
   "shadows": "eth_utils.is_string"
  },
  "type": "import"
 },
 "eth_keys.datatypes.keccak": {
  "data": {
   "shadows": "eth_utils.keccak"
  },
  "type": "import"
 },
 "eth_keys.datatypes.pad32": {
  "data": {
   "shadows": "eth_keys.utils.padding.pad32"
  },
  "type": "import"
 },
 "eth_keys.datatypes.public_key_bytes_to_address": {
  "data": {
   "shadows": "eth_keys.utils.address.public_key_bytes_to_address"
  },
  "type": "import"
 },
 "eth_keys.datatypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "eth_keys.datatypes.to_checksum_address": {
  "data": {
   "shadows": "eth_utils.to_checksum_address"
  },
  "type": "import"
 },
 "eth_keys.datatypes.to_normalized_address": {
  "data": {
   "shadows": "eth_utils.to_normalized_address"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_compressed_public_key_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_compressed_public_key_bytes"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_non_recoverable_signature_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_non_recoverable_signature_bytes"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_private_key_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_private_key_bytes"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_recoverable_signature_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_recoverable_signature_bytes"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_signature_r_or_s": {
  "data": {
   "shadows": "eth_keys.validation.validate_signature_r_or_s"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_signature_v": {
  "data": {
   "shadows": "eth_keys.validation.validate_signature_v"
  },
  "type": "import"
 },
 "eth_keys.datatypes.validate_uncompressed_public_key_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_uncompressed_public_key_bytes"
  },
  "type": "import"
 },
 "eth_keys.exceptions": {
  "data": {},
  "type": "module"
 },
 "eth_keys.exceptions.BadSignature": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "eth_keys.exceptions.ValidationError": {
  "data": {
   "shadows": "eth_utils.ValidationError"
  },
  "type": "import"
 },
 "eth_keys.keys": {
  "data": {
   "shadows": "lazy_key_api"
  },
  "type": "import"
 },
 "eth_keys.main": {
  "data": {
   "symbols_in_volume": [
    "eth_keys.datatypes.NonRecoverableSignature",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.datatypes.Signature",
    "eth_keys.main.KeyAPI"
   ]
  },
  "type": "module"
 },
 "eth_keys.main.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "eth_keys.main.BaseSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.BaseSignature"
  },
  "type": "import"
 },
 "eth_keys.main.KeyAPI": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "eth_keys.datatypes.LazyBackend",
    "eth_keys.datatypes.NonRecoverableSignature",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.datatypes.Signature"
   ]
  },
  "type": "class"
 },
 "eth_keys.main.KeyAPI.ecdsa_recover": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.Signature",
    "eth_keys.main._PublicKey",
    "eth_keys.main._Signature",
    "eth_keys.validation.validate_message_hash",
    "eth_utils.ValidationError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "eth_keys.main.KeyAPI.ecdsa_sign": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.Signature",
    "eth_keys.main._PrivateKey",
    "eth_keys.main._Signature",
    "eth_keys.validation.validate_message_hash",
    "eth_utils.ValidationError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "eth_keys.main.KeyAPI.ecdsa_sign_non_recoverable": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.datatypes.NonRecoverableSignature",
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.main._NonRecoverableSignature",
    "eth_keys.main._PrivateKey",
    "eth_keys.validation.validate_message_hash",
    "eth_utils.ValidationError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "eth_keys.main.KeyAPI.ecdsa_verify": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "eth_keys.datatypes.BaseSignature",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.main._PublicKey",
    "eth_keys.validation.validate_message_hash",
    "eth_utils.ValidationError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "eth_keys.main.KeyAPI.private_key_to_public_key": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "eth_keys.datatypes.PrivateKey",
    "eth_keys.datatypes.PublicKey",
    "eth_keys.main._PrivateKey",
    "eth_keys.main._PublicKey",
    "eth_utils.ValidationError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "eth_keys.main.LazyBackend": {
  "data": {
   "shadows": "eth_keys.datatypes.LazyBackend"
  },
  "type": "import"
 },
 "eth_keys.main.NonRecoverableSignature": {
  "data": {
   "shadows": "eth_keys.datatypes.NonRecoverableSignature"
  },
  "type": "import"
 },
 "eth_keys.main.PrivateKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PrivateKey"
  },
  "type": "import"
 },
 "eth_keys.main.PublicKey": {
  "data": {
   "shadows": "eth_keys.datatypes.PublicKey"
  },
  "type": "import"
 },
 "eth_keys.main.Signature": {
  "data": {
   "shadows": "eth_keys.datatypes.Signature"
  },
  "type": "import"
 },
 "eth_keys.main.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "eth_keys.main.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "eth_keys.main.ValidationError": {
  "data": {
   "shadows": "eth_utils.ValidationError"
  },
  "type": "import"
 },
 "eth_keys.main._NonRecoverableSignature": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "eth_keys.main._PrivateKey": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "eth_keys.main._PublicKey": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "eth_keys.main._Signature": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "eth_keys.main.is_string": {
  "data": {
   "shadows": "eth_utils.is_string"
  },
  "type": "import"
 },
 "eth_keys.main.lazy_key_api": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "eth_keys.main.validate_compressed_public_key_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_compressed_public_key_bytes"
  },
  "type": "import"
 },
 "eth_keys.main.validate_message_hash": {
  "data": {
   "shadows": "eth_keys.validation.validate_message_hash"
  },
  "type": "import"
 },
 "eth_keys.main.validate_uncompressed_public_key_bytes": {
  "data": {
   "shadows": "eth_keys.validation.validate_uncompressed_public_key_bytes"
  },
  "type": "import"
 },
 "eth_keys.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "eth_keys.utils": {
  "data": {},
  "type": "module"
 },
 "eth_keys.utils.address": {
  "data": {},
  "type": "module"
 },
 "eth_keys.utils.address.keccak": {
  "data": {
   "shadows": "eth_utils.keccak"
  },
  "type": "import"
 },
 "eth_keys.utils.address.public_key_bytes_to_address": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "bytes",
    "eth_utils.keccak"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.der": {
  "data": {},
  "type": "module"
 },
 "eth_keys.utils.der.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "eth_keys.utils.der.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "eth_keys.utils.der._decode_int": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "eth_utils.big_endian_to_int",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.der._encode_int": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bytes",
    "eth_utils.apply_to_return_value",
    "eth_utils.int_to_big_endian",
    "int",
    "len",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.der.apply_to_return_value": {
  "data": {
   "shadows": "eth_utils.apply_to_return_value"
  },
  "type": "import"
 },
 "eth_keys.utils.der.big_endian_to_int": {
  "data": {
   "shadows": "eth_utils.big_endian_to_int"
  },
  "type": "import"
 },
 "eth_keys.utils.der.int_to_big_endian": {
  "data": {
   "shadows": "eth_utils.int_to_big_endian"
  },
  "type": "import"
 },
 "eth_keys.utils.der.two_int_sequence_decoder": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "eth_keys.utils.der._decode_int",
    "int",
    "len",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.der.two_int_sequence_encoder": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bytes",
    "eth_keys.utils.der._encode_int",
    "eth_utils.apply_to_return_value",
    "int",
    "len",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.module_loading": {
  "data": {},
  "type": "module"
 },
 "eth_keys.utils.module_loading.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "eth_keys.utils.module_loading.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "eth_keys.utils.module_loading.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "eth_keys.utils.module_loading.import_string": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "getattr",
    "importlib.import_module",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.module_loading.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "eth_keys.utils.module_loading.split_at_longest_importable_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "eth_keys.utils.module_loading.operator",
    "importlib.import_module",
    "len",
    "range",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.numeric": {
  "data": {},
  "type": "module"
 },
 "eth_keys.utils.numeric.SECPK1_N": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_N"
  },
  "type": "import"
 },
 "eth_keys.utils.numeric.coerce_low_s": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "eth_keys.constants.SECPK1_N",
    "int",
    "min"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.numeric.int_to_byte": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "bytes",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.utils.padding": {
  "data": {},
  "type": "module"
 },
 "eth_keys.utils.padding.pad32": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation": {
  "data": {
   "symbols_in_volume": [
    "eth_keys.constants.SECPK1_N",
    "eth_keys.validation.validate_lte"
   ]
  },
  "type": "module"
 },
 "eth_keys.validation.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "eth_keys.validation.SECPK1_N": {
  "data": {
   "shadows": "eth_keys.constants.SECPK1_N"
  },
  "type": "import"
 },
 "eth_keys.validation.ValidationError": {
  "data": {
   "shadows": "eth_utils.ValidationError"
  },
  "type": "import"
 },
 "eth_keys.validation.curry": {
  "data": {
   "shadows": "eth_utils.toolz.curry"
  },
  "type": "import"
 },
 "eth_keys.validation.encode_hex": {
  "data": {
   "shadows": "eth_utils.encode_hex"
  },
  "type": "import"
 },
 "eth_keys.validation.is_bytes": {
  "data": {
   "shadows": "eth_utils.is_bytes"
  },
  "type": "import"
 },
 "eth_keys.validation.is_integer": {
  "data": {
   "shadows": "eth_utils.is_integer"
  },
  "type": "import"
 },
 "eth_keys.validation.validate_bytes": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "eth_utils.ValidationError",
    "eth_utils.is_bytes",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_bytes_length": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bytes",
    "eth_utils.ValidationError",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_compressed_public_key_bytes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "eth_keys.validation.validate_bytes",
    "eth_keys.validation.validate_bytes_length",
    "eth_utils.ValidationError",
    "eth_utils.encode_hex",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_gte": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "eth_keys.validation.validate_integer",
    "eth_utils.ValidationError",
    "eth_utils.toolz.curry",
    "int",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_integer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "eth_utils.ValidationError",
    "eth_utils.is_integer",
    "isinstance",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_lt_secpk1n": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "eth_keys.validation.validate_lte": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "eth_keys.validation.validate_integer",
    "eth_utils.ValidationError",
    "eth_utils.toolz.curry",
    "int",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_message_hash": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "eth_keys.validation.validate_bytes",
    "eth_keys.validation.validate_bytes_length",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_non_recoverable_signature_bytes": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "eth_keys.validation.validate_bytes",
    "eth_keys.validation.validate_bytes_length",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_private_key_bytes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "eth_keys.validation.validate_bytes",
    "eth_keys.validation.validate_bytes_length",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_recoverable_signature_bytes": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "eth_keys.validation.validate_bytes",
    "eth_keys.validation.validate_bytes_length",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_signature_r_or_s": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "eth_keys.validation.validate_gte",
    "eth_keys.validation.validate_integer",
    "eth_keys.validation.validate_lt_secpk1n",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_signature_v": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "eth_keys.validation.validate_gte",
    "eth_keys.validation.validate_integer",
    "eth_keys.validation.validate_lte",
    "int"
   ]
  },
  "type": "function"
 },
 "eth_keys.validation.validate_uncompressed_public_key_bytes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "eth_keys.validation.validate_bytes",
    "eth_keys.validation.validate_bytes_length",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "eth_keys.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}