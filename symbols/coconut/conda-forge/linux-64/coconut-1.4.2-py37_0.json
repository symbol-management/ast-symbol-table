{
 "coconut": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.__coconut__": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.compiler.Compiler"
  ],
  "type": "module"
 },
 "coconut.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.main.main",
   "sys.path.insert"
  ],
  "type": "module"
 },
 "coconut._pyparsing": {
  "lineno": null,
  "symbols_in_volume": [
   "cPyparsing.__version__",
   "coconut.constants.PURE_PYTHON",
   "coconut.constants.default_whitespace_chars",
   "coconut.constants.get_next_version",
   "coconut.constants.min_versions",
   "coconut.constants.packrat_cache",
   "coconut.constants.pure_python_env_var",
   "coconut.constants.varchars",
   "coconut.constants.ver_str_to_tuple",
   "coconut.constants.ver_tuple_to_str",
   "functools.partial",
   "os.environ.get",
   "pyparsing",
   "pyparsing.__version__",
   "traceback.print_exc",
   "warnings.warn"
  ],
  "type": "module"
 },
 "coconut._pyparsing.fast_repr": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut._pyparsing.fast_str": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.command.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "argparse.REMAINDER",
   "coconut.constants.default_histfile",
   "coconut.constants.default_recursion_limit",
   "coconut.constants.default_style",
   "coconut.constants.documentation_url",
   "coconut.constants.histfile_env_var",
   "coconut.constants.main_sig",
   "coconut.constants.style_env_var",
   "coconut.constants.version_long"
  ],
  "type": "module"
 },
 "coconut.command.command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.command.command.Command": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.command.command.Command.__init__": {
  "lineno": 93,
  "symbols_in_volume": [
   "coconut.command.util.Prompt"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.check_runner": {
  "lineno": 582,
  "symbols_in_volume": [
   "coconut.command.util.Runner",
   "os.getcwd",
   "sys.path",
   "sys.path.append"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.cmd": {
  "lineno": 117,
  "symbols_in_volume": [
   "coconut.command.cli.arguments.parse_args"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.compile": {
  "lineno": 361,
  "symbols_in_volume": [
   "coconut.command.util.openfile",
   "coconut.command.util.readfile",
   "coconut.command.util.showpath",
   "coconut.constants.fixpath",
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.logger.show_tabulated",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.compile.callback": {
  "lineno": 389,
  "symbols_in_volume": [
   "coconut.command.util.openfile",
   "coconut.command.util.showpath",
   "coconut.command.util.writefile",
   "coconut.terminal.logger.show_tabulated"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.compile_file": {
  "lineno": 336,
  "symbols_in_volume": [
   "coconut.command.util.showpath",
   "coconut.constants.comp_ext",
   "coconut.constants.fixpath",
   "coconut.exceptions.CoconutException",
   "os.path.basename",
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.compile_folder": {
  "lineno": 313,
  "symbols_in_volume": [
   "coconut.command.util.is_special_dir",
   "coconut.constants.code_exts",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.show_tabulated",
   "coconut.terminal.logger.verbose",
   "os.path.isfile",
   "os.path.join",
   "os.path.relpath",
   "os.path.splitext",
   "os.walk"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.compile_path": {
  "lineno": 301,
  "symbols_in_volume": [
   "coconut.constants.fixpath",
   "coconut.exceptions.CoconutException",
   "os.path.isdir",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.create_package": {
  "lineno": 433,
  "symbols_in_volume": [
   "coconut.command.util.openfile",
   "coconut.command.util.writefile",
   "os.path.join"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.execute": {
  "lineno": 566,
  "symbols_in_volume": [
   "coconut.command.util.rem_encoding"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.execute_file": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.command.Command.exit_on_error": {
  "lineno": 137,
  "symbols_in_volume": [
   "coconut.command.util.kill_children",
   "coconut.terminal.logger.show",
   "sys.exit"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.exit_runner": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.command.Command.get_input": {
  "lineno": 501,
  "symbols_in_volume": [
   "coconut.constants.exit_chars",
   "coconut.terminal.printerr"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.get_package_level": {
  "lineno": 411,
  "symbols_in_volume": [
   "coconut.constants.code_exts",
   "coconut.terminal.logger.warn",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.handle_input": {
  "lineno": 544,
  "symbols_in_volume": [
   "coconut.compiler.util.should_indent",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.display_exc"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.handling_exceptions": {
  "lineno": 282,
  "symbols_in_volume": [
   "coconut.command.util.handling_broken_process_pool",
   "coconut.constants.report_this_text",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.display_exc",
   "coconut.terminal.printerr",
   "contextlib.contextmanager",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.has_hash_of": {
  "lineno": 491,
  "symbols_in_volume": [
   "coconut.command.util.openfile",
   "coconut.command.util.readfile",
   "coconut.compiler.header.gethash",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.mypy": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.command.Command.register_error": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.command.Command.run_mypy": {
  "lineno": 615,
  "symbols_in_volume": [
   "coconut.command.mypy.mypy_run",
   "coconut.command.util.set_mypy_path",
   "coconut.terminal.printerr"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.running_jobs": {
  "lineno": 475,
  "symbols_in_volume": [
   "concurrent.futures.ProcessPoolExecutor",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.set_jobs": {
  "lineno": 457,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.set_mypy_args": {
  "lineno": 594,
  "symbols_in_volume": [
   "coconut.compiler.util.get_target_info_len2",
   "coconut.constants.verbose_mypy_args",
   "coconut.terminal.logger.log",
   "coconut.terminal.logger.verbose"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.setup": {
  "lineno": 130,
  "symbols_in_volume": [
   "coconut.compiler.Compiler"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.start": {
  "lineno": 97,
  "symbols_in_volume": [
   "coconut.command.cli.arguments",
   "coconut.command.util.canparse",
   "coconut.constants.coconut_run_args",
   "coconut.constants.coconut_run_verbose_args",
   "sys.argv"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.start_jupyter": {
  "lineno": 631,
  "symbols_in_volume": [
   "coconut.command.util.run_cmd",
   "coconut.constants.icoconut_kernel_dirs",
   "coconut.constants.icoconut_kernel_names",
   "coconut.terminal.logger.show_sig",
   "coconut.terminal.logger.verbose",
   "coconut.terminal.logger.warn",
   "functools.partial",
   "subprocess.CalledProcessError"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.start_prompt": {
  "lineno": 524,
  "symbols_in_volume": [
   "coconut.terminal.logger.show",
   "coconut.terminal.printerr"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.start_running": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.command.Command.submit_comp_job": {
  "lineno": 439,
  "symbols_in_volume": [
   "coconut.command.util.multiprocess_wrapper",
   "coconut.command.util.showpath",
   "coconut.terminal.logger.in_path"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.submit_comp_job.callback_wrapper": {
  "lineno": 449,
  "symbols_in_volume": [
   "coconut.terminal.logger.in_path"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.use_args": {
  "lineno": 147,
  "symbols_in_volume": [
   "coconut._pyparsing.PYPARSING_INFO",
   "coconut.command.util.launch_documentation",
   "coconut.command.util.launch_tutorial",
   "coconut.command.util.set_recursion_limit",
   "coconut.command.util.stdin_readable",
   "coconut.constants.fixpath",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.log",
   "coconut.terminal.logger.quiet",
   "coconut.terminal.logger.tracing",
   "coconut.terminal.logger.verbose",
   "coconut.terminal.logger.warn",
   "os.path.isdir",
   "os.path.isfile",
   "sys.argv",
   "sys.argv.extend",
   "sys.stdin.read"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.using_jobs": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.command.Command.watch": {
  "lineno": 679,
  "symbols_in_volume": [
   "coconut.command.util.showpath",
   "coconut.command.watch.Observer",
   "coconut.command.watch.RecompilationWatcher",
   "coconut.constants.fixpath",
   "coconut.constants.watch_interval",
   "coconut.terminal.logger.show",
   "coconut.terminal.logger.show_sig",
   "coconut.terminal.logger.show_tabulated",
   "time.sleep"
  ],
  "type": "function"
 },
 "coconut.command.command.Command.watch.recompile": {
  "lineno": 688,
  "symbols_in_volume": [
   "coconut.constants.code_exts",
   "coconut.constants.fixpath",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "os.path.relpath",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "coconut.command.mypy": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "module"
 },
 "coconut.command.mypy.mypy_run": {
  "lineno": 40,
  "symbols_in_volume": [
   "coconut.terminal.logger.log_cmd",
   "mypy.api.run",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "coconut.command.util": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.constants.PY34",
   "coconut.terminal.complain",
   "prompt_toolkit"
  ],
  "type": "module"
 },
 "coconut.command.util.Prompt": {
  "lineno": 375,
  "symbols_in_volume": [
   "coconut.constants.prompt_history_search",
   "coconut.constants.prompt_multiline",
   "coconut.constants.prompt_vi_mode",
   "coconut.constants.prompt_wrap_lines"
  ],
  "type": "class"
 },
 "coconut.command.util.Prompt.__init__": {
  "lineno": 383,
  "symbols_in_volume": [
   "coconut.constants.default_histfile",
   "coconut.constants.default_style",
   "coconut.constants.histfile_env_var",
   "coconut.constants.style_env_var",
   "os.environ.get",
   "prompt_toolkit"
  ],
  "type": "function"
 },
 "coconut.command.util.Prompt.input": {
  "lineno": 410,
  "symbols_in_volume": [
   "coconut.constants.main_prompt",
   "coconut.constants.more_prompt",
   "coconut.exceptions.internal_assert",
   "coconut.terminal.logger.display_exc",
   "coconut.terminal.logger.show_sig",
   "prompt_toolkit",
   "sys.stdout.flush"
  ],
  "type": "function"
 },
 "coconut.command.util.Prompt.prompt": {
  "lineno": 429,
  "symbols_in_volume": [
   "coconut.highlighter.CoconutLexer",
   "functools.partial",
   "prompt_toolkit.PromptSession",
   "prompt_toolkit.layout.lexers.PygmentsLexer",
   "prompt_toolkit.prompt",
   "prompt_toolkit.styles.style_from_pygments",
   "pygments.styles.get_style_by_name"
  ],
  "type": "function"
 },
 "coconut.command.util.Prompt.set_history_file": {
  "lineno": 403,
  "symbols_in_volume": [
   "coconut.constants.fixpath",
   "prompt_toolkit.history.FileHistory",
   "prompt_toolkit.history.InMemoryHistory"
  ],
  "type": "function"
 },
 "coconut.command.util.Prompt.set_style": {
  "lineno": 389,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException",
   "prompt_toolkit",
   "pygments.styles.get_all_styles",
   "sys.exit"
  ],
  "type": "function"
 },
 "coconut.command.util.Runner": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.command.util.Runner.__init__": {
  "lineno": 453,
  "symbols_in_volume": [
   "sys.exit"
  ],
  "type": "function"
 },
 "coconut.command.util.Runner.build_vars": {
  "lineno": 465,
  "symbols_in_volume": [
   "coconut.constants.fixpath",
   "coconut.constants.reserved_vars",
   "imp.reload"
  ],
  "type": "function"
 },
 "coconut.command.util.Runner.fix_pickle": {
  "lineno": 485,
  "symbols_in_volume": [
   "coconut.__coconut__"
  ],
  "type": "function"
 },
 "coconut.command.util.Runner.handling_errors": {
  "lineno": 492,
  "symbols_in_volume": [
   "coconut.constants.num_added_tb_layers",
   "contextlib.contextmanager",
   "sys.exc_info",
   "traceback.print_exception"
  ],
  "type": "function"
 },
 "coconut.command.util.Runner.run": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.Runner.run_file": {
  "lineno": 540,
  "symbols_in_volume": [
   "coconut.constants.fixpath"
  ],
  "type": "function"
 },
 "coconut.command.util.Runner.store": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.Runner.update_vars": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.Runner.was_run_code": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util._raise_ValueError": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.call_output": {
  "lineno": 245,
  "symbols_in_volume": [
   "coconut.exceptions.get_encoding",
   "coconut.terminal.logger.log_prefix",
   "subprocess.PIPE",
   "subprocess.Popen",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "coconut.command.util.canparse": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.exec_func": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.handling_broken_process_pool": {
  "lineno": 191,
  "symbols_in_volume": [
   "concurrent.futures.process.BrokenProcessPool",
   "contextlib.contextmanager",
   "sys.version_info"
  ],
  "type": "function"
 },
 "coconut.command.util.interpret": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.is_special_dir": {
  "lineno": 153,
  "symbols_in_volume": [
   "os.curdir",
   "os.pardir"
  ],
  "type": "function"
 },
 "coconut.command.util.kill_children": {
  "lineno": 204,
  "symbols_in_volume": [
   "coconut.terminal.logger.warn",
   "psutil.NoSuchProcess",
   "psutil.Process"
  ],
  "type": "function"
 },
 "coconut.command.util.launch_documentation": {
  "lineno": 136,
  "symbols_in_volume": [
   "coconut.constants.documentation_url",
   "webbrowser.open"
  ],
  "type": "function"
 },
 "coconut.command.util.launch_tutorial": {
  "lineno": 130,
  "symbols_in_volume": [
   "coconut.constants.tutorial_url",
   "webbrowser.open"
  ],
  "type": "function"
 },
 "coconut.command.util.multiprocess_wrapper": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.command.util.multiprocess_wrapper.__call__": {
  "lineno": 567,
  "symbols_in_volume": [
   "coconut.terminal.logger.copy_from",
   "sys.setrecursionlimit"
  ],
  "type": "function"
 },
 "coconut.command.util.multiprocess_wrapper.__init__": {
  "lineno": 561,
  "symbols_in_volume": [
   "coconut.terminal.logger",
   "copy.copy",
   "sys.getrecursionlimit"
  ],
  "type": "function"
 },
 "coconut.command.util.openfile": {
  "lineno": 112,
  "symbols_in_volume": [
   "coconut.constants.default_encoding"
  ],
  "type": "function"
 },
 "coconut.command.util.readfile": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.rem_encoding": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.util.run_cmd": {
  "lineno": 269,
  "symbols_in_volume": [
   "coconut.constants.oserror_retcode",
   "coconut.exceptions.internal_assert",
   "coconut.terminal.logger.log_cmd",
   "coconut.terminal.logger.log_exc",
   "shutil",
   "shutil.which",
   "subprocess.CalledProcessError",
   "subprocess.call",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "coconut.command.util.run_file": {
  "lineno": 234,
  "symbols_in_volume": [
   "imp.find_module",
   "imp.load_module",
   "runpy.run_path"
  ],
  "type": "function"
 },
 "coconut.command.util.set_mypy_path": {
  "lineno": 317,
  "symbols_in_volume": [
   "coconut.constants.base_stub_dir",
   "coconut.constants.installed_stub_dir",
   "coconut.constants.mypy_path_env_var",
   "coconut.terminal.logger.log",
   "os.environ",
   "os.environ.get",
   "os.pathsep"
  ],
  "type": "function"
 },
 "coconut.command.util.set_recursion_limit": {
  "lineno": 346,
  "symbols_in_volume": [
   "coconut.constants.minimum_recursion_limit",
   "coconut.exceptions.CoconutException",
   "sys.setrecursionlimit"
  ],
  "type": "function"
 },
 "coconut.command.util.showpath": {
  "lineno": 142,
  "symbols_in_volume": [
   "coconut.terminal.logger.verbose",
   "os.curdir",
   "os.path.abspath",
   "os.path.relpath",
   "os.sep"
  ],
  "type": "function"
 },
 "coconut.command.util.splitname": {
  "lineno": 225,
  "symbols_in_volume": [
   "os.extsep",
   "os.path.split"
  ],
  "type": "function"
 },
 "coconut.command.util.stdin_readable": {
  "lineno": 332,
  "symbols_in_volume": [
   "coconut.constants.WINDOWS",
   "coconut.terminal.logger.log_exc",
   "select.select",
   "sys.stdin",
   "sys.stdin.isatty"
  ],
  "type": "function"
 },
 "coconut.command.util.symlink": {
  "lineno": 300,
  "symbols_in_volume": [
   "coconut.constants.PY32",
   "coconut.constants.WINDOWS",
   "coconut.terminal.logger.log_exc",
   "os.path.exists",
   "os.path.islink",
   "os.symlink",
   "shutil.copytree",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "coconut.command.util.writefile": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.watch": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "module"
 },
 "coconut.command.watch.RecompilationWatcher": {
  "lineno": 39,
  "symbols_in_volume": [
   "watchdog.events.FileSystemEventHandler"
  ],
  "type": "class"
 },
 "coconut.command.watch.RecompilationWatcher.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.watch.RecompilationWatcher.keep_watching": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.command.watch.RecompilationWatcher.on_modified": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.compiler.compiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.compiler.compiler.Compiler": {
  "lineno": 386,
  "symbols_in_volume": [
   "coconut.compiler.grammar.Grammar",
   "coconut.compiler.util.compile_regex"
  ],
  "type": "class"
 },
 "coconut.compiler.compiler.Compiler.__copy__": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.__init__": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.__reduce__": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.add_ref": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.adjust": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.apply_procs": {
  "lineno": 684,
  "symbols_in_volume": [
   "coconut.terminal.logger.log_tag"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.assemble_data": {
  "lineno": 1536,
  "symbols_in_volume": [
   "coconut.compiler.util.handle_indentation",
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.async_comp_check": {
  "lineno": 2304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.async_stmt_check": {
  "lineno": 2300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.augassign_handle": {
  "lineno": 1279,
  "symbols_in_volume": [
   "coconut.compiler.grammar.lazy_list_handle",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.await_item_handle": {
  "lineno": 2047,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutTargetError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.bind": {
  "lineno": 506,
  "symbols_in_volume": [
   "coconut.compiler.util.attach",
   "coconut.terminal.trace",
   "functools.partial"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.case_stmt_handle": {
  "lineno": 2127,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.match_to_var",
   "coconut.constants.openindent",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.check_py": {
  "lineno": 2256,
  "symbols_in_volume": [
   "coconut.constants.get_target_info",
   "coconut.exceptions.CoconutTargetError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.check_strict": {
  "lineno": 2236,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutStyleError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.classlist_handle": {
  "lineno": 1321,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.CoconutStyleError",
   "coconut.exceptions.CoconutTargetError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.comment_handle": {
  "lineno": 1271,
  "symbols_in_volume": [
   "coconut._pyparsing.lineno",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.complain_on_err": {
  "lineno": 1778,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseBaseException",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.complain",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.complex_raise_stmt_handle": {
  "lineno": 1603,
  "symbols_in_volume": [
   "coconut.constants.raise_from_var",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.copy_skips": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.data_handle": {
  "lineno": 1393,
  "symbols_in_volume": [
   "coconut.compiler.util.handle_indentation",
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.decoratable_funcdef_stmt_handle": {
  "lineno": 1913,
  "symbols_in_volume": [
   "coconut.compiler.util.parse",
   "coconut.compiler.util.split_leading_comment",
   "coconut.compiler.util.split_leading_trailing_indent",
   "coconut.compiler.util.split_trailing_indent",
   "coconut.constants.closeindent",
   "coconut.constants.match_to_args_var",
   "coconut.constants.match_to_kwargs_var",
   "coconut.constants.openindent",
   "coconut.constants.tre_mock_var",
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.CoconutTargetError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.destructuring_stmt_handle": {
  "lineno": 1650,
  "symbols_in_volume": [
   "coconut.compiler.grammar.match_handle",
   "coconut.constants.match_check_var",
   "coconut.constants.match_to_var",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.dict_comp_handle": {
  "lineno": 1615,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.ellipsis_handle": {
  "lineno": 2120,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.endline_handle": {
  "lineno": 1258,
  "symbols_in_volume": [
   "coconut._pyparsing.lineno",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.endline_repl": {
  "lineno": 1107,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut._pyparsing.line.endswith",
   "coconut._pyparsing.line.lstrip",
   "coconut._pyparsing.line.rsplit",
   "coconut._pyparsing.line.rstrip",
   "coconut.constants.lnwrapper",
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.endline_semicolon_check": {
  "lineno": 2248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.eval_now": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.exec_stmt_handle": {
  "lineno": 1735,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.f_string_handle": {
  "lineno": 2150,
  "symbols_in_volume": [
   "coconut.compiler.util.interleaved_join",
   "coconut.compiler.util.paren_change",
   "coconut.constants.format_var",
   "coconut.constants.strwrapper",
   "coconut.constants.unwrapper",
   "coconut.exceptions.CoconutSyntaxError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.genhash": {
  "lineno": 443,
  "symbols_in_volume": [
   "coconut.constants.checksum",
   "coconut.constants.default_encoding",
   "coconut.constants.hash_sep.join",
   "coconut.terminal.logger.log"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.get_ref": {
  "lineno": 640,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.get_temp_var": {
  "lineno": 500,
  "symbols_in_volume": [
   "coconut.constants.reserved_prefix"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.getheader": {
  "lineno": 704,
  "symbols_in_volume": [
   "coconut.compiler.header.getheader"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.header_proc": {
  "lineno": 1223,
  "symbols_in_volume": [
   "coconut.compiler.header.minify"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.import_handle": {
  "lineno": 1582,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.CoconutSyntaxError",
   "coconut.exceptions.CoconutSyntaxWarning",
   "coconut.terminal.logger.warn_err"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.ind_proc": {
  "lineno": 955,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut._pyparsing.line.lstrip",
   "coconut._pyparsing.line.rstrip",
   "coconut.compiler.util.addskip",
   "coconut.compiler.util.paren_change",
   "coconut.compiler.util.rem_comment",
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.exceptions.CoconutStyleError",
   "coconut.exceptions.CoconutSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.inner_environment": {
  "lineno": 479,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.inner_parse_eval": {
  "lineno": 738,
  "symbols_in_volume": [
   "coconut.compiler.util.parse"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.lambdef_check": {
  "lineno": 2244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.leading_whitespace": {
  "lineno": 941,
  "symbols_in_volume": [
   "coconut.constants.legal_indent_chars"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.ln_comment": {
  "lineno": 1073,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.make_err": {
  "lineno": 614,
  "symbols_in_volume": [
   "coconut._pyparsing.col",
   "coconut._pyparsing.line",
   "coconut._pyparsing.lineno"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.make_parse_err": {
  "lineno": 727,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutParseError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.make_syntax_err": {
  "lineno": 722,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.match_data_handle": {
  "lineno": 1343,
  "symbols_in_volume": [
   "coconut.compiler.matching.Matcher",
   "coconut.compiler.util.handle_indentation",
   "coconut.constants.function_match_error_var",
   "coconut.constants.match_check_var",
   "coconut.constants.match_to_args_var",
   "coconut.constants.match_to_kwargs_var",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.matrix_at_check": {
  "lineno": 2296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.name_check": {
  "lineno": 2264,
  "symbols_in_volume": [
   "coconut.constants.reserved_prefix",
   "coconut.exceptions.CoconutSyntaxError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.name_match_funcdef_handle": {
  "lineno": 1658,
  "symbols_in_volume": [
   "coconut.compiler.matching.Matcher",
   "coconut.constants.closeindent",
   "coconut.constants.function_match_error_var",
   "coconut.constants.match_check_var",
   "coconut.constants.match_to_args_var",
   "coconut.constants.match_to_kwargs_var",
   "coconut.constants.openindent",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.namedexpr_check": {
  "lineno": 2308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.nonlocal_check": {
  "lineno": 2276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.op_match_funcdef_handle": {
  "lineno": 1690,
  "symbols_in_volume": [
   "coconut.compiler.grammar.get_infix_items",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse": {
  "lineno": 747,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseBaseException",
   "coconut.compiler.util.parse",
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.CoconutException",
   "coconut.exceptions.internal_assert",
   "coconut.terminal.logger.gather_parsing_stats",
   "coconut.terminal.logger.warn",
   "sys.getrecursionlimit"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_any": {
  "lineno": 2354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_block": {
  "lineno": 2342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_eval": {
  "lineno": 2350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_exec": {
  "lineno": 2329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_file": {
  "lineno": 2321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_package": {
  "lineno": 2333,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_single": {
  "lineno": 2317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_sys": {
  "lineno": 2346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.passthrough_proc": {
  "lineno": 893,
  "symbols_in_volume": [
   "coconut._pyparsing.lineno",
   "coconut.compiler.util.addskip",
   "coconut.compiler.util.append_it",
   "coconut.compiler.util.paren_change",
   "coconut.exceptions.CoconutSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.passthrough_repl": {
  "lineno": 1134,
  "symbols_in_volume": [
   "coconut._pyparsing.nums",
   "coconut.compiler.util.append_it",
   "coconut.constants.unwrapper",
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.pattern_error": {
  "lineno": 1625,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut.compiler.util.handle_indentation",
   "coconut.constants.match_err_var",
   "coconut.constants.match_val_repr_var",
   "coconut.constants.max_match_val_repr_len",
   "coconut.exceptions.clean"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.polish": {
  "lineno": 1231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.post": {
  "lineno": 699,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.pre": {
  "lineno": 693,
  "symbols_in_volume": [
   "coconut.terminal.logger.log_tag"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.prepare": {
  "lineno": 777,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutStyleError"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.reformat": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.reind_proc": {
  "lineno": 1049,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut._pyparsing.line.rstrip",
   "coconut._pyparsing.line.strip",
   "coconut.compiler.util.ind_change",
   "coconut.compiler.util.split_comment",
   "coconut.compiler.util.split_leading_indent",
   "coconut.compiler.util.split_trailing_indent",
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.repl_proc": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.reset": {
  "lineno": 465,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_docstring": {
  "lineno": 1240,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_letter_literal_handle": {
  "lineno": 1713,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_literal_handle": {
  "lineno": 1705,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_skips": {
  "lineno": 573,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.setup": {
  "lineno": 411,
  "symbols_in_volume": [
   "coconut.compiler.header.minify",
   "coconut.constants.pseudo_targets",
   "coconut.constants.specific_targets",
   "coconut.constants.targets",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.log_vars"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.slash_sep_check": {
  "lineno": 2292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.split_docstring": {
  "lineno": 1788,
  "symbols_in_volume": [
   "coconut.compiler.util.match_in",
   "coconut.compiler.util.rem_comment",
   "coconut.compiler.util.split_leading_trailing_indent"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.star_assign_item_check": {
  "lineno": 2280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.star_expr_check": {
  "lineno": 2284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.star_sep_check": {
  "lineno": 2288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.stmt_lambda_name": {
  "lineno": 1746,
  "symbols_in_volume": [
   "coconut.constants.stmt_lambda_var"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.stmt_lambda_proc": {
  "lineno": 1028,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut.compiler.util.compile_regex",
   "coconut.compiler.util.split_leading_indent"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.stmt_lambdef_handle": {
  "lineno": 1752,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.str_proc": {
  "lineno": 791,
  "symbols_in_volume": [
   "coconut._pyparsing.lineno",
   "coconut.compiler.util.addskip",
   "coconut.compiler.util.count_end",
   "coconut.constants.holds",
   "coconut.exceptions.CoconutSyntaxError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.str_repl": {
  "lineno": 1168,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut._pyparsing.nums",
   "coconut.compiler.util.append_it",
   "coconut.constants.strwrapper",
   "coconut.constants.unwrapper",
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.strict_err_or_warn": {
  "lineno": 623,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutStyleError",
   "coconut.exceptions.CoconutSyntaxWarning",
   "coconut.terminal.logger.warn_err"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.tabideal": {
  "lineno": 1044,
  "symbols_in_volume": [
   "coconut.constants.tabideal"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.target_info": {
  "lineno": 717,
  "symbols_in_volume": [
   "coconut.constants.get_target_info"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.transform_returns": {
  "lineno": 1839,
  "symbols_in_volume": [
   "coconut._pyparsing.line",
   "coconut.compiler.util.ind_change",
   "coconut.compiler.util.split_comment",
   "coconut.compiler.util.split_leading_trailing_indent",
   "coconut.compiler.util.transform",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.tre_return": {
  "lineno": 1800,
  "symbols_in_volume": [
   "coconut.compiler.util.attach",
   "coconut.compiler.util.keyword"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.tre_return.tre_return_handle": {
  "lineno": 1802,
  "symbols_in_volume": [
   "coconut.compiler.util.ignore_transform",
   "coconut.compiler.util.match_in",
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.constants.tre_check_var",
   "coconut.constants.tre_mock_var",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.typed_assign_stmt_handle": {
  "lineno": 2092,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.typedef_handle": {
  "lineno": 2072,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.u_string_check": {
  "lineno": 2252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.unsafe_typedef_handle": {
  "lineno": 2064,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.warm_up": {
  "lineno": 2358,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.with_stmt_handle": {
  "lineno": 2107,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_comment": {
  "lineno": 674,
  "symbols_in_volume": [
   "coconut.constants.unwrapper"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_line_number": {
  "lineno": 680,
  "symbols_in_volume": [
   "coconut.constants.lnwrapper"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_passthrough": {
  "lineno": 661,
  "symbols_in_volume": [
   "coconut.constants.unwrapper"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_str": {
  "lineno": 649,
  "symbols_in_volume": [
   "coconut.constants.strwrapper",
   "coconut.constants.unwrapper"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_str_of": {
  "lineno": 655,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_typedef": {
  "lineno": 2068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.yield_from_handle": {
  "lineno": 1246,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.constants.yield_from_var",
   "coconut.constants.yield_item_var",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.import_stmt": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.imported_names": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.compiler.match_case_tokens": {
  "lineno": 364,
  "symbols_in_volume": [
   "coconut.compiler.matching.Matcher",
   "coconut.constants.match_to_var",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.set_to_tuple": {
  "lineno": 132,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.single_import": {
  "lineno": 152,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.import_as_var",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.special_starred_import_handle": {
  "lineno": 257,
  "symbols_in_volume": [
   "coconut.compiler.util.handle_indentation"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.split_args_list": {
  "lineno": 304,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.compiler.universal_import": {
  "lineno": 193,
  "symbols_in_volume": [
   "coconut.compiler.util.get_target_info_len2",
   "coconut.constants.closeindent",
   "coconut.constants.get_target_info",
   "coconut.constants.openindent",
   "coconut.constants.py3_to_py2_stdlib"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.compiler.grammar.Grammar": {
  "lineno": 705,
  "symbols_in_volume": [
   "coconut._pyparsing.CaselessLiteral",
   "coconut._pyparsing.FollowedBy",
   "coconut._pyparsing.Forward",
   "coconut._pyparsing.Group",
   "coconut._pyparsing.Literal",
   "coconut._pyparsing.OneOrMore",
   "coconut._pyparsing.Optional",
   "coconut._pyparsing.Regex",
   "coconut._pyparsing.StringEnd",
   "coconut._pyparsing.StringStart",
   "coconut._pyparsing.Word",
   "coconut._pyparsing.ZeroOrMore",
   "coconut._pyparsing.hexnums",
   "coconut._pyparsing.nestedExpr",
   "coconut._pyparsing.nums",
   "coconut._pyparsing.originalTextFor",
   "coconut.compiler.util.UseCombine",
   "coconut.compiler.util.addspace",
   "coconut.compiler.util.attach",
   "coconut.compiler.util.condense",
   "coconut.compiler.util.disable_inside",
   "coconut.compiler.util.disable_outside",
   "coconut.compiler.util.exprlist",
   "coconut.compiler.util.final",
   "coconut.compiler.util.fixto",
   "coconut.compiler.util.itemlist",
   "coconut.compiler.util.keyword",
   "coconut.compiler.util.longest",
   "coconut.compiler.util.maybeparens",
   "coconut.compiler.util.tokenlist",
   "coconut.constants.closeindent",
   "coconut.constants.const_vars",
   "coconut.constants.keywords",
   "coconut.constants.openindent",
   "coconut.constants.reserved_vars",
   "coconut.constants.strwrapper",
   "coconut.constants.unwrapper",
   "coconut.terminal.trace",
   "functools.reduce",
   "re.DOTALL",
   "re.U"
  ],
  "type": "class"
 },
 "coconut.compiler.grammar.add_paren_handle": {
  "lineno": 211,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.attrgetter_atom_handle": {
  "lineno": 409,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutDeferredSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.attrgetter_atom_split": {
  "lineno": 126,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.chain_handle": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.grammar.class_suite_handle": {
  "lineno": 599,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.comp_pipe_handle": {
  "lineno": 364,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.compose_item_handle": {
  "lineno": 618,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.decorator_handle": {
  "lineno": 512,
  "symbols_in_volume": [
   "coconut.constants.decorator_var",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.except_handle": {
  "lineno": 555,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.function_call_handle": {
  "lineno": 217,
  "symbols_in_volume": [
   "coconut.compiler.util.join_args"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.get_infix_items": {
  "lineno": 171,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.impl_call_item_handle": {
  "lineno": 629,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.implicit_return_handle": {
  "lineno": 500,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.infix_error": {
  "lineno": 166,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.infix_handle": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.grammar.invalid_return_stmt_handle": {
  "lineno": 495,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutDeferredSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.item_handle": {
  "lineno": 222,
  "symbols_in_volume": [
   "coconut.compiler.util.join_args",
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.itemgetter_handle": {
  "lineno": 587,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.join_match_funcdef": {
  "lineno": 668,
  "symbols_in_volume": [
   "coconut.compiler.util.collapse_indents",
   "coconut.compiler.util.split_leading_indent",
   "coconut.compiler.util.split_trailing_indent",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.lambdef_handle": {
  "lineno": 469,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.lazy_list_handle": {
  "lineno": 422,
  "symbols_in_volume": [
   "coconut.constants.func_var"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.make_suite_handle": {
  "lineno": 489,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.match_handle": {
  "lineno": 528,
  "symbols_in_volume": [
   "coconut.compiler.matching.Matcher",
   "coconut.constants.match_check_var",
   "coconut.constants.match_to_var",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.math_funcdef_handle": {
  "lineno": 506,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.namelist_handle": {
  "lineno": 605,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.none_coalesce_handle": {
  "lineno": 389,
  "symbols_in_volume": [
   "coconut.constants.none_coalesce_var"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.op_funcdef_handle": {
  "lineno": 450,
  "symbols_in_volume": [
   "coconut.constants.unwrapper"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.pipe_handle": {
  "lineno": 296,
  "symbols_in_volume": [
   "coconut.compiler.util.join_args",
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.pipe_info": {
  "lineno": 186,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.pipe_item_split": {
  "lineno": 141,
  "symbols_in_volume": [
   "coconut.compiler.util.join_args",
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.set_grammar_names": {
  "lineno": 1843,
  "symbols_in_volume": [
   "coconut._pyparsing.ParserElement"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.split_func_handle": {
  "lineno": 649,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.split_function_call": {
  "lineno": 100,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutDeferredSyntaxError",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.subscriptgroup_handle": {
  "lineno": 573,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.tco_return_handle": {
  "lineno": 640,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.typedef_callable_handle": {
  "lineno": 479,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.grammar.where_stmt_handle": {
  "lineno": 691,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.header": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.compiler.header.comment": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.compiler.header.comment.__getattr__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.header.get_template": {
  "lineno": 73,
  "symbols_in_volume": [
   "coconut.constants.template_ext"
  ],
  "type": "function"
 },
 "coconut.compiler.header.gethash": {
  "lineno": 40,
  "symbols_in_volume": [
   "coconut.constants.hash_prefix"
  ],
  "type": "function"
 },
 "coconut.compiler.header.getheader": {
  "lineno": 250,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.header.minify": {
  "lineno": 49,
  "symbols_in_volume": [
   "coconut.constants.tabideal",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.header.one_num_ver": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.header.process_header_args": {
  "lineno": 103,
  "symbols_in_volume": [
   "coconut.constants.default_encoding",
   "coconut.constants.get_target_info",
   "coconut.constants.hash_prefix",
   "coconut.root._indent"
  ],
  "type": "function"
 },
 "coconut.compiler.header.section": {
  "lineno": 84,
  "symbols_in_volume": [
   "coconut.constants.justify_len"
  ],
  "type": "function"
 },
 "coconut.compiler.matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.compiler.matching.Matcher": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.compiler.matching.Matcher.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.add_check": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.add_def": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.add_guard": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.assign_to_series": {
  "lineno": 393,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.build": {
  "lineno": 657,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.check_len_in": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.decrement": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.down_a_level": {
  "lineno": 208,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.duplicate": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.get_checks": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.get_defs": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.get_temp_var": {
  "lineno": 226,
  "symbols_in_volume": [
   "coconut.constants.match_temp_var"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.increment": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.insert_check": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.insert_def": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match": {
  "lineno": 627,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_all_in": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_and": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_const": {
  "lineno": 548,
  "symbols_in_volume": [
   "coconut.constants.const_vars"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_data": {
  "lineno": 574,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_dict": {
  "lineno": 367,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_function": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_in_args_kwargs": {
  "lineno": 261,
  "symbols_in_volume": [
   "coconut.constants.function_match_error_var"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_in_kwargs": {
  "lineno": 348,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutDeferredSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_iterator": {
  "lineno": 422,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_msequence": {
  "lineno": 495,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_mstring": {
  "lineno": 524,
  "symbols_in_volume": [
   "coconut.constants.wildcard",
   "coconut.exceptions.CoconutDeferredSyntaxError"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_or": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_paren": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_rsequence": {
  "lineno": 481,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_rstring": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_sequence": {
  "lineno": 402,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_set": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_star": {
  "lineno": 449,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_string": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_trailer": {
  "lineno": 597,
  "symbols_in_volume": [
   "coconut.constants.wildcard",
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_var": {
  "lineno": 556,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.only_self": {
  "lineno": 217,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.out": {
  "lineno": 634,
  "symbols_in_volume": [
   "coconut.compiler.util.paren_join",
   "coconut.constants.closeindent",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.register_name": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.set_checks": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.set_defs": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.set_position": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.matching.get_match_names": {
  "lineno": 44,
  "symbols_in_volume": [
   "coconut.constants.wildcard"
  ],
  "type": "function"
 },
 "coconut.compiler.util": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut._pyparsing.CharsNotIn",
   "coconut._pyparsing.Combine",
   "coconut._pyparsing.SkipTo",
   "coconut.constants.default_whitespace_chars",
   "coconut.constants.use_computation_graph"
  ],
  "type": "module"
 },
 "coconut.compiler.util.CombineNode": {
  "lineno": 195,
  "symbols_in_volume": [
   "coconut._pyparsing.Combine"
  ],
  "type": "class"
 },
 "coconut.compiler.util.CombineNode._combine": {
  "lineno": 199,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.util.CombineNode.postParse": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.ComputationNode": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.compiler.util.ComputationNode.__new__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.ComputationNode.__repr__": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.ComputationNode.evaluate": {
  "lineno": 169,
  "symbols_in_volume": [
   "coconut._pyparsing._trim_arity",
   "coconut.exceptions.CoconutException",
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert",
   "coconut.terminal.logger.log_trace",
   "coconut.terminal.logger.tracing",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "coconut.compiler.util.ComputationNode.name": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.ComputationNode.original": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.Wrap": {
  "lineno": 542,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseElementEnhance"
  ],
  "type": "class"
 },
 "coconut.compiler.util.Wrap.__init__": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.Wrap.parseImpl": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.add_action": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.addskip": {
  "lineno": 349,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.util.addspace": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.all_matches": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.append_it": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.attach": {
  "lineno": 221,
  "symbols_in_volume": [
   "coconut.constants.use_computation_graph",
   "functools.partial"
  ],
  "type": "function"
 },
 "coconut.compiler.util.collapse_indents": {
  "lineno": 492,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.util.compile_regex": {
  "lineno": 384,
  "symbols_in_volume": [
   "re.U",
   "re.compile"
  ],
  "type": "function"
 },
 "coconut.compiler.util.condense": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.count_end": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.disable_inside": {
  "lineno": 557,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.util.disable_inside.manage_elem": {
  "lineno": 577,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseException",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.compiler.util.disable_inside.manage_item": {
  "lineno": 567,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.compiler.util.disable_outside": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.evaluate_tokens": {
  "lineno": 93,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseResults",
   "coconut._pyparsing._ParseResultsWithOffset",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.util.exprlist": {
  "lineno": 426,
  "symbols_in_volume": [
   "coconut._pyparsing.ZeroOrMore"
  ],
  "type": "function"
 },
 "coconut.compiler.util.final": {
  "lineno": 241,
  "symbols_in_volume": [
   "coconut.constants.use_computation_graph"
  ],
  "type": "function"
 },
 "coconut.compiler.util.find_new_value": {
  "lineno": 66,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseResults",
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.complain"
  ],
  "type": "function"
 },
 "coconut.compiler.util.fixto": {
  "lineno": 394,
  "symbols_in_volume": [
   "coconut._pyparsing.replaceWith"
  ],
  "type": "function"
 },
 "coconut.compiler.util.get_target_info_len2": {
  "lineno": 306,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "sys.version_info"
  ],
  "type": "function"
 },
 "coconut.compiler.util.get_vers_for_target": {
  "lineno": 288,
  "symbols_in_volume": [
   "coconut.constants.get_target_info",
   "coconut.constants.py2_vers",
   "coconut.constants.py3_vers",
   "coconut.exceptions.CoconutInternalException"
  ],
  "type": "function"
 },
 "coconut.compiler.util.handle_indentation": {
  "lineno": 611,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "coconut.constants.tabideal",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.util.ind_change": {
  "lineno": 379,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.util.interleaved_join": {
  "lineno": 597,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.util.itemlist": {
  "lineno": 421,
  "symbols_in_volume": [
   "coconut._pyparsing.Optional",
   "coconut._pyparsing.ZeroOrMore"
  ],
  "type": "function"
 },
 "coconut.compiler.util.join_args": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.keyword": {
  "lineno": 389,
  "symbols_in_volume": [
   "coconut._pyparsing.Regex",
   "re.U"
  ],
  "type": "function"
 },
 "coconut.compiler.util.longest": {
  "lineno": 340,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.util.match_in": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.maybeparens": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.paren_change": {
  "lineno": 368,
  "symbols_in_volume": [
   "coconut.constants.closes",
   "coconut.constants.opens"
  ],
  "type": "function"
 },
 "coconut.compiler.util.paren_join": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.parse": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.rem_comment": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.should_indent": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.split_comment": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.split_leading_comment": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.split_leading_indent": {
  "lineno": 457,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.util.split_leading_trailing_indent": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.compiler.util.split_trailing_indent": {
  "lineno": 471,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent"
  ],
  "type": "function"
 },
 "coconut.compiler.util.tokenlist": {
  "lineno": 414,
  "symbols_in_volume": [
   "coconut._pyparsing.Optional",
   "coconut._pyparsing.ZeroOrMore"
  ],
  "type": "function"
 },
 "coconut.compiler.util.transform": {
  "lineno": 507,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.compiler.util.unpack": {
  "lineno": 248,
  "symbols_in_volume": [
   "coconut._pyparsing.ParseResults",
   "coconut.constants.use_computation_graph",
   "coconut.terminal.logger.log_tag"
  ],
  "type": "function"
 },
 "coconut.constants": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "os.name",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.expanduser",
   "os.path.join",
   "platform.python_implementation",
   "string.ascii_letters",
   "string.digits",
   "sys.getrecursionlimit",
   "sys.setrecursionlimit",
   "sys.version.split",
   "sys.version_info"
  ],
  "type": "module"
 },
 "coconut.constants.checksum": {
  "lineno": 65,
  "symbols_in_volume": [
   "zlib.crc32"
  ],
  "type": "function"
 },
 "coconut.constants.fixpath": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.normpath",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "coconut.constants.get_next_version": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.constants.get_target_info": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.constants.ver_str_to_tuple": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.constants.ver_tuple_to_str": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.convenience": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.command.Command",
   "coconut.constants.version_long",
   "coconut.constants.version_tag"
  ],
  "type": "module"
 },
 "coconut.convenience.CoconutImporter": {
  "lineno": 115,
  "symbols_in_volume": [
   "coconut.constants.code_exts"
  ],
  "type": "class"
 },
 "coconut.convenience.CoconutImporter.find_module": {
  "lineno": 124,
  "symbols_in_volume": [
   "sys.path"
  ],
  "type": "function"
 },
 "coconut.convenience.CoconutImporter.run_compiler": {
  "lineno": 119,
  "symbols_in_volume": [
   "coconut.constants.coconut_import_hook_args"
  ],
  "type": "function"
 },
 "coconut.convenience.auto_compilation": {
  "lineno": 151,
  "symbols_in_volume": [
   "sys.meta_path",
   "sys.meta_path.insert",
   "sys.meta_path.remove"
  ],
  "type": "function"
 },
 "coconut.convenience.cmd": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.convenience.coconut_eval": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.convenience.parse": {
  "lineno": 87,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "function"
 },
 "coconut.convenience.version": {
  "lineno": 57,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "function"
 },
 "coconut.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.exceptions.CoconutDeferredSyntaxError": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutDeferredSyntaxError.__init__": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutDeferredSyntaxError.message": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutException": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutException.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutException.__reduce__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutException.__repr__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutException.__str__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutException.message": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutException.syntax_err": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutInternalException": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutInternalException.message": {
  "lineno": 192,
  "symbols_in_volume": [
   "coconut.constants.report_this_text"
  ],
  "type": "function"
 },
 "coconut.exceptions.CoconutParseError": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutParseError.__init__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutStyleError": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutStyleError.message": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxError": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutSyntaxError.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxError.message": {
  "lineno": 121,
  "symbols_in_volume": [
   "coconut._pyparsing.lineno",
   "coconut.constants.taberrfmt"
  ],
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxError.syntax_err": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxWarning": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutTargetError": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.CoconutTargetError.__init__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutTargetError.message": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.CoconutWarning": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.exceptions.clean": {
  "lineno": 46,
  "symbols_in_volume": [
   "coconut.constants.closeindent",
   "coconut.constants.openindent",
   "sys.stdout"
  ],
  "type": "function"
 },
 "coconut.exceptions.displayable": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.exceptions.get_encoding": {
  "lineno": 39,
  "symbols_in_volume": [
   "coconut.constants.default_encoding"
  ],
  "type": "function"
 },
 "coconut.exceptions.internal_assert": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.highlighter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.highlighter.CoconutLexer": {
  "lineno": 74,
  "symbols_in_volume": [
   "coconut.constants.coconut_specific_builtins",
   "coconut.constants.code_exts",
   "coconut.constants.magic_methods",
   "coconut.constants.new_operators",
   "coconut.constants.reserved_vars",
   "pygments.lexer.bygroups",
   "pygments.lexer.words",
   "pygments.lexers.Python3Lexer",
   "pygments.lexers.Python3Lexer.tokens.copy",
   "pygments.token.Keyword",
   "pygments.token.Name.Builtin",
   "pygments.token.Name.Exception",
   "pygments.token.Name.Function.Magic",
   "pygments.token.Number.Integer",
   "pygments.token.Operator",
   "pygments.token.Text"
  ],
  "type": "class"
 },
 "coconut.highlighter.CoconutLexer.__init__": {
  "lineno": 106,
  "symbols_in_volume": [
   "coconut.constants.default_encoding",
   "coconut.constants.tabideal",
   "pygments.lexers.Python3Lexer.__init__"
  ],
  "type": "function"
 },
 "coconut.highlighter.CoconutLexer.analyse_text": {
  "lineno": 111,
  "symbols_in_volume": [
   "coconut.constants.shebang_regex",
   "pygments.util.shebang_matches"
  ],
  "type": "function"
 },
 "coconut.highlighter.CoconutPythonConsoleLexer": {
  "lineno": 62,
  "symbols_in_volume": [
   "pygments.lexers.PythonConsoleLexer"
  ],
  "type": "class"
 },
 "coconut.highlighter.CoconutPythonConsoleLexer.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "coconut.constants.default_encoding",
   "coconut.constants.tabideal",
   "pygments.lexers.PythonConsoleLexer.__init__"
  ],
  "type": "function"
 },
 "coconut.highlighter.CoconutPythonLexer": {
  "lineno": 50,
  "symbols_in_volume": [
   "coconut.constants.template_ext",
   "pygments.lexers.Python3Lexer"
  ],
  "type": "class"
 },
 "coconut.highlighter.CoconutPythonLexer.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "coconut.constants.default_encoding",
   "coconut.constants.tabideal",
   "pygments.lexers.Python3Lexer.__init__"
  ],
  "type": "function"
 },
 "coconut.highlighter.lenient_add_filter": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.icoconut.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.path.insert"
  ],
  "type": "module"
 },
 "coconut.icoconut.__main__.main": {
  "lineno": 35,
  "symbols_in_volume": [
   "coconut.icoconut.CoconutKernel",
   "ipykernel.kernelapp.IPKernelApp.launch_instance"
  ],
  "type": "function"
 },
 "coconut.icoconut.root": {
  "lineno": null,
  "symbols_in_volume": [
   "IPython.core.interactiveshell.InteractiveShellABC.register",
   "asyncio",
   "coconut.command.util.Runner",
   "coconut.compiler.Compiler",
   "coconut.constants.conda_build_env_var",
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.warn",
   "os.environ.get"
  ],
  "type": "module"
 },
 "coconut.icoconut.root.CoconutCompiler": {
  "lineno": 118,
  "symbols_in_volume": [
   "IPython.core.compilerop.CachingCompiler"
  ],
  "type": "class"
 },
 "coconut.icoconut.root.CoconutCompiler.__call__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutCompiler.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutCompiler.ast_parse": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutCompiler.cache": {
  "lineno": 133,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException",
   "coconut.terminal.logger.display_exc"
  ],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutKernel": {
  "lineno": 208,
  "symbols_in_volume": [
   "coconut.constants.code_exts",
   "coconut.constants.documentation_url",
   "coconut.constants.mimetype",
   "coconut.constants.py_syntax_version",
   "coconut.constants.tutorial_url",
   "coconut.constants.version_banner",
   "ipykernel.ipkernel.IPythonKernel"
  ],
  "type": "class"
 },
 "coconut.icoconut.root.CoconutKernel.do_complete": {
  "lineno": 239,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutInternalException",
   "coconut.terminal.logger.warn_err",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell": {
  "lineno": 170,
  "symbols_in_volume": [
   "asyncio",
   "ipykernel.zmqshell.ZMQInteractiveShell"
  ],
  "type": "class"
 },
 "coconut.icoconut.root.CoconutShell.init_instance_attrs": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.init_user_ns": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.run_cell": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.run_cell_async": {
  "lineno": 191,
  "symbols_in_volume": [
   "asyncio.coroutine"
  ],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.user_expressions": {
  "lineno": 196,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutSplitter": {
  "lineno": 151,
  "symbols_in_volume": [
   "IPython.core.inputsplitter.IPythonInputSplitter"
  ],
  "type": "class"
 },
 "coconut.icoconut.root.CoconutSplitter.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.icoconut.root.CoconutSplitter._coconut_compile": {
  "lineno": 159,
  "symbols_in_volume": [
   "coconut.compiler.util.should_indent"
  ],
  "type": "function"
 },
 "coconut.icoconut.root.memoized_parse_block": {
  "lineno": 83,
  "symbols_in_volume": [
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.icoconut.root.syntaxerr_memoized_parse_block": {
  "lineno": 101,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutException"
  ],
  "type": "function"
 },
 "coconut.load_ipython_extension": {
  "lineno": 42,
  "symbols_in_volume": [
   "coconut.__coconut__"
  ],
  "type": "function"
 },
 "coconut.load_ipython_extension.magic": {
  "lineno": 57,
  "symbols_in_volume": [
   "coconut.convenience.CoconutException",
   "coconut.convenience.cmd",
   "coconut.convenience.parse",
   "coconut.terminal.logger.display_exc"
  ],
  "type": "function"
 },
 "coconut.main": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.main.add_coconut_to_path": {
  "lineno": 24,
  "symbols_in_volume": [
   "sys.path.insert"
  ],
  "type": "function"
 },
 "coconut.main.main": {
  "lineno": 42,
  "symbols_in_volume": [
   "coconut.command.Command"
  ],
  "type": "function"
 },
 "coconut.main.main_run": {
  "lineno": 47,
  "symbols_in_volume": [
   "coconut.command.Command"
  ],
  "type": "function"
 },
 "coconut.requirements": {
  "lineno": null,
  "symbols_in_volume": [
   "coconut.constants.IPY",
   "coconut.constants.PURE_PYTHON",
   "coconut.constants.PY34",
   "coconut.constants.PYPY",
   "coconut.constants.WINDOWS",
   "platform.python_implementation",
   "setuptools.__version__.split"
  ],
  "type": "module"
 },
 "coconut.requirements.all_versions": {
  "lineno": 186,
  "symbols_in_volume": [
   "requests.get"
  ],
  "type": "function"
 },
 "coconut.requirements.everything_in": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.requirements.get_base_req": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.requirements.get_reqs": {
  "lineno": 62,
  "symbols_in_volume": [
   "coconut.constants.PY34",
   "coconut.constants.all_reqs",
   "coconut.constants.get_next_version",
   "coconut.constants.min_versions",
   "coconut.constants.ver_tuple_to_str",
   "coconut.constants.version_strictly"
  ],
  "type": "function"
 },
 "coconut.requirements.newer": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.requirements.print_new_versions": {
  "lineno": 208,
  "symbols_in_volume": [
   "coconut.constants.all_reqs",
   "coconut.constants.min_versions",
   "coconut.constants.pinned_reqs",
   "coconut.constants.ver_str_to_tuple",
   "coconut.constants.ver_tuple_to_str"
  ],
  "type": "function"
 },
 "coconut.requirements.unique_wrt": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.requirements.uniqueify": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.requirements.uniqueify_all": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.root": {
  "lineno": null,
  "symbols_in_volume": [
   "__builtin__.pickle",
   "pickle",
   "sys.version_info"
  ],
  "type": "module"
 },
 "coconut.root._indent": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.stubs.coconut": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.stubs.coconut.command": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.terminal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "coconut.terminal.Logger": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "coconut.terminal.Logger.__init__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger._trace_exc_action": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger._trace_success_action": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.copy_from": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.display": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.display_exc": {
  "lineno": 187,
  "symbols_in_volume": [
   "coconut.constants.taberrfmt"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.gather_parsing_stats": {
  "lineno": 268,
  "symbols_in_volume": [
   "coconut._pyparsing.ParserElement.packrat_cache_stats",
   "coconut.constants.packrat_cache",
   "contextlib.contextmanager",
   "time.clock"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.get_error": {
  "lineno": 155,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.in_path": {
  "lineno": 166,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.log": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.log_cmd": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.log_exc": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.log_prefix": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.log_sig": {
  "lineno": 143,
  "symbols_in_volume": [
   "coconut.constants.main_sig"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.log_tag": {
  "lineno": 214,
  "symbols_in_volume": [
   "coconut.exceptions.displayable"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.log_trace": {
  "lineno": 225,
  "symbols_in_volume": [
   "coconut._pyparsing.col",
   "coconut._pyparsing.lineno",
   "coconut.exceptions.displayable"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.log_vars": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.patch_logging": {
  "lineno": 284,
  "symbols_in_volume": [
   "logging",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.patch_logging.getLogger": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.pylog": {
  "lineno": 294,
  "symbols_in_volume": [
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.show": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.show_error": {
  "lineno": 128,
  "symbols_in_volume": [
   "coconut.constants.main_sig"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.show_sig": {
  "lineno": 123,
  "symbols_in_volume": [
   "coconut.constants.main_sig"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.show_tabulated": {
  "lineno": 209,
  "symbols_in_volume": [
   "coconut.constants.info_tabulation",
   "coconut.exceptions.internal_assert"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.trace": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.Logger.warn": {
  "lineno": 175,
  "symbols_in_volume": [
   "coconut.exceptions.CoconutWarning"
  ],
  "type": "function"
 },
 "coconut.terminal.Logger.warn_err": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.complain": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "coconut.terminal.format_error": {
  "lineno": 56,
  "symbols_in_volume": [
   "traceback.format_exception",
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "coconut.terminal.printerr": {
  "lineno": 51,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 }
}