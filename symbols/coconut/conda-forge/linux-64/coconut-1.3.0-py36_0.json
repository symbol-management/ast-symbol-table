{
 "*": {
  "data": {
   "imports": [
    "coconut.command.command"
   ]
  },
  "type": "star-import"
 },
 "coconut": {
  "data": {},
  "type": "module"
 },
 "coconut.CoconutException": {
  "data": {
   "shadows": "coconut.convenience.CoconutException"
  },
  "type": "import"
 },
 "coconut.__author__": {
  "data": {
   "shadows": "coconut.constants.author"
  },
  "type": "import"
 },
 "coconut.__coconut__": {
  "data": {
   "shadows": "coconut.__coconut__"
  },
  "type": "import"
 },
 "coconut.__coconut__.__coconut_compiler__": {
  "data": {
   "shadows": "coconut.compiler.Compiler"
  },
  "type": "import"
 },
 "coconut.__coconut__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.__coconut__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.__coconut__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.__coconut__.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "coconut.__main__.sys",
    "coconut.main.main"
   ]
  },
  "type": "module"
 },
 "coconut.__main__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.__main__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.__main__.main": {
  "data": {
   "shadows": "coconut.main.main"
  },
  "type": "import"
 },
 "coconut.__main__.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "coconut.__main__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.__main__.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.__version__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "coconut.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.cmd": {
  "data": {
   "shadows": "coconut.convenience.cmd"
  },
  "type": "import"
 },
 "coconut.command": {
  "data": {},
  "type": "module"
 },
 "coconut.command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.command.cli": {
  "data": {
   "symbols_in_volume": [
    "coconut.command.cli.argparse",
    "coconut.command.cli.arguments",
    "coconut.constants.default_recursion_limit",
    "coconut.constants.default_style",
    "coconut.constants.documentation_url",
    "coconut.constants.main_sig",
    "coconut.constants.style_env_var",
    "coconut.constants.version_long",
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "coconut.command.cli.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.command.cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "coconut.command.cli.arguments": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "coconut.command.cli.default_recursion_limit": {
  "data": {
   "shadows": "coconut.constants.default_recursion_limit"
  },
  "type": "import"
 },
 "coconut.command.cli.default_style": {
  "data": {
   "shadows": "coconut.constants.default_style"
  },
  "type": "import"
 },
 "coconut.command.cli.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.command.cli.documentation_url": {
  "data": {
   "shadows": "coconut.constants.documentation_url"
  },
  "type": "import"
 },
 "coconut.command.cli.main_sig": {
  "data": {
   "shadows": "coconut.constants.main_sig"
  },
  "type": "import"
 },
 "coconut.command.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.command.cli.style_env_var": {
  "data": {
   "shadows": "coconut.constants.style_env_var"
  },
  "type": "import"
 },
 "coconut.command.cli.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.command.cli.version_long": {
  "data": {
   "shadows": "coconut.constants.version_long"
  },
  "type": "import"
 },
 "coconut.command.command": {
  "data": {},
  "type": "module"
 },
 "coconut.command.command.CalledProcessError": {
  "data": {
   "shadows": "subprocess.CalledProcessError"
  },
  "type": "import"
 },
 "coconut.command.command.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.command.command.CoconutInternalException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutInternalException"
  },
  "type": "import"
 },
 "coconut.command.command.Command": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.command.command.Command.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "coconut.command.util.Prompt"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.check_runner": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.command.sys",
    "coconut.command.util.Runner"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.cmd": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "coconut.command.cli.arguments.parse_args"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.compile": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.util.openfile",
    "coconut.command.util.readfile",
    "coconut.command.util.showpath",
    "coconut.exceptions.CoconutInternalException",
    "coconut.terminal.logger.show_tabulated",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.compile.callback": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "coconut.command.util.openfile",
    "coconut.command.util.showpath",
    "coconut.command.util.writefile",
    "coconut.terminal.logger.show_tabulated",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.compile_file": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.util.showpath",
    "coconut.constants.comp_ext",
    "coconut.constants.fixpath",
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.compile_folder": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.util.is_special_dir",
    "coconut.constants.code_exts",
    "coconut.terminal.logger.show_tabulated",
    "coconut.terminal.logger.verbose"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.compile_path": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.constants.fixpath",
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.create_package": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.util.openfile",
    "coconut.command.util.writefile",
    "coconut.constants.fixpath"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.execute": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "coconut.command.util.rem_encoding",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.execute_file": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "coconut.command.command.Command.exit_on_error": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "coconut.command.command.sys",
    "coconut.command.util.kill_children",
    "coconut.terminal.logger.show_error"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.exit_runner": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "coconut.command.command.Command.get_input": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "EOFError",
    "KeyboardInterrupt",
    "coconut.constants.exit_chars",
    "coconut.terminal.printerr",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.handle_input": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "coconut.compiler.util.should_indent",
    "coconut.exceptions.CoconutException",
    "coconut.terminal.logger.display_exc"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.handling_exceptions": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "BaseException",
    "KeyboardInterrupt",
    "SystemExit",
    "coconut.command.command.traceback",
    "coconut.command.util.handling_broken_process_pool",
    "coconut.constants.report_this_text",
    "coconut.exceptions.CoconutException",
    "coconut.terminal.logger.display_exc",
    "coconut.terminal.printerr",
    "contextlib.contextmanager",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.has_hash_of": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.util.openfile",
    "coconut.command.util.readfile",
    "coconut.compiler.header.gethash"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.mypy": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.register_error": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.run_mypy": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "coconut.command.mypy.mypy_run",
    "coconut.command.util.set_mypy_path",
    "coconut.constants.stub_dir",
    "coconut.terminal.printerr",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.running_jobs": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "concurrent.futures.ProcessPoolExecutor",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.set_jobs": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "coconut.exceptions.CoconutException",
    "int"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.set_mypy_args": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "coconut.constants.verbose_mypy_args",
    "coconut.terminal.logger.log",
    "coconut.terminal.logger.verbose",
    "coconut.terminal.logger.warn",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.setup": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "coconut.compiler.Compiler"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.start": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "coconut.command.command.sys",
    "coconut.constants.coconut_run_args",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.start_jupyter": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "any",
    "coconut.command.command.functools",
    "coconut.command.util.run_cmd",
    "coconut.constants.icoconut_kernel_dirs",
    "coconut.constants.icoconut_kernel_names",
    "coconut.exceptions.CoconutException",
    "coconut.terminal.logger.show_sig",
    "coconut.terminal.logger.verbose",
    "coconut.terminal.logger.warn",
    "install_func",
    "subprocess.CalledProcessError"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.start_prompt": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "coconut.terminal.logger.show",
    "coconut.terminal.printerr"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.start_running": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "coconut.command.command.Command.submit_comp_job": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "callback",
    "coconut.command.util.multiprocess_wrapper",
    "coconut.command.util.showpath",
    "coconut.terminal.logger.in_path",
    "getattr"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.submit_comp_job.callback_wrapper": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "callback",
    "coconut.terminal.logger.in_path"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.use_args": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.command.command.sys",
    "coconut.command.util.launch_documentation",
    "coconut.command.util.launch_tutorial",
    "coconut.command.util.set_recursion_limit",
    "coconut.command.util.stdin_readable",
    "coconut.exceptions.CoconutException",
    "coconut.pyparsing.PYPARSING",
    "coconut.terminal.logger.log",
    "coconut.terminal.logger.quiet",
    "coconut.terminal.logger.tracing",
    "coconut.terminal.logger.verbose",
    "coconut.terminal.logger.warn"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.watch": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "coconut.command.command.time",
    "coconut.command.util.showpath",
    "coconut.command.watch.Observer",
    "coconut.command.watch.RecompilationWatcher",
    "coconut.constants.fixpath",
    "coconut.constants.watch_interval",
    "coconut.terminal.logger.show",
    "coconut.terminal.logger.show_sig",
    "coconut.terminal.logger.show_tabulated"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Command.watch.recompile": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "coconut.command.command.os",
    "coconut.constants.code_exts"
   ]
  },
  "type": "function"
 },
 "coconut.command.command.Compiler": {
  "data": {
   "shadows": "coconut.compiler.Compiler"
  },
  "type": "import"
 },
 "coconut.command.command.Observer": {
  "data": {
   "shadows": "coconut.command.watch.Observer"
  },
  "type": "import"
 },
 "coconut.command.command.PYPARSING": {
  "data": {
   "shadows": "coconut.pyparsing.PYPARSING"
  },
  "type": "import"
 },
 "coconut.command.command.ProcessPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ProcessPoolExecutor"
  },
  "type": "import"
 },
 "coconut.command.command.Prompt": {
  "data": {
   "shadows": "coconut.command.util.Prompt"
  },
  "type": "import"
 },
 "coconut.command.command.RecompilationWatcher": {
  "data": {
   "shadows": "coconut.command.watch.RecompilationWatcher"
  },
  "type": "import"
 },
 "coconut.command.command.Runner": {
  "data": {
   "shadows": "coconut.command.util.Runner"
  },
  "type": "import"
 },
 "coconut.command.command.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.command.command.arguments": {
  "data": {
   "shadows": "coconut.command.cli.arguments"
  },
  "type": "import"
 },
 "coconut.command.command.coconut_run_args": {
  "data": {
   "shadows": "coconut.constants.coconut_run_args"
  },
  "type": "import"
 },
 "coconut.command.command.code_exts": {
  "data": {
   "shadows": "coconut.constants.code_exts"
  },
  "type": "import"
 },
 "coconut.command.command.comp_ext": {
  "data": {
   "shadows": "coconut.constants.comp_ext"
  },
  "type": "import"
 },
 "coconut.command.command.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "coconut.command.command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.command.command.exit_chars": {
  "data": {
   "shadows": "coconut.constants.exit_chars"
  },
  "type": "import"
 },
 "coconut.command.command.fixpath": {
  "data": {
   "shadows": "coconut.constants.fixpath"
  },
  "type": "import"
 },
 "coconut.command.command.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "coconut.command.command.gethash": {
  "data": {
   "shadows": "coconut.compiler.header.gethash"
  },
  "type": "import"
 },
 "coconut.command.command.handling_broken_process_pool": {
  "data": {
   "shadows": "coconut.command.util.handling_broken_process_pool"
  },
  "type": "import"
 },
 "coconut.command.command.icoconut_kernel_dirs": {
  "data": {
   "shadows": "coconut.constants.icoconut_kernel_dirs"
  },
  "type": "import"
 },
 "coconut.command.command.icoconut_kernel_names": {
  "data": {
   "shadows": "coconut.constants.icoconut_kernel_names"
  },
  "type": "import"
 },
 "coconut.command.command.is_special_dir": {
  "data": {
   "shadows": "coconut.command.util.is_special_dir"
  },
  "type": "import"
 },
 "coconut.command.command.kill_children": {
  "data": {
   "shadows": "coconut.command.util.kill_children"
  },
  "type": "import"
 },
 "coconut.command.command.launch_documentation": {
  "data": {
   "shadows": "coconut.command.util.launch_documentation"
  },
  "type": "import"
 },
 "coconut.command.command.launch_tutorial": {
  "data": {
   "shadows": "coconut.command.util.launch_tutorial"
  },
  "type": "import"
 },
 "coconut.command.command.logger": {
  "data": {
   "shadows": "coconut.terminal.logger"
  },
  "type": "import"
 },
 "coconut.command.command.multiprocess_wrapper": {
  "data": {
   "shadows": "coconut.command.util.multiprocess_wrapper"
  },
  "type": "import"
 },
 "coconut.command.command.mypy_run": {
  "data": {
   "shadows": "coconut.command.mypy.mypy_run"
  },
  "type": "import"
 },
 "coconut.command.command.openfile": {
  "data": {
   "shadows": "coconut.command.util.openfile"
  },
  "type": "import"
 },
 "coconut.command.command.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "coconut.command.command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.command.command.printerr": {
  "data": {
   "shadows": "coconut.terminal.printerr"
  },
  "type": "import"
 },
 "coconut.command.command.readfile": {
  "data": {
   "shadows": "coconut.command.util.readfile"
  },
  "type": "import"
 },
 "coconut.command.command.rem_encoding": {
  "data": {
   "shadows": "coconut.command.util.rem_encoding"
  },
  "type": "import"
 },
 "coconut.command.command.report_this_text": {
  "data": {
   "shadows": "coconut.constants.report_this_text"
  },
  "type": "import"
 },
 "coconut.command.command.run_cmd": {
  "data": {
   "shadows": "coconut.command.util.run_cmd"
  },
  "type": "import"
 },
 "coconut.command.command.set_mypy_path": {
  "data": {
   "shadows": "coconut.command.util.set_mypy_path"
  },
  "type": "import"
 },
 "coconut.command.command.set_recursion_limit": {
  "data": {
   "shadows": "coconut.command.util.set_recursion_limit"
  },
  "type": "import"
 },
 "coconut.command.command.should_indent": {
  "data": {
   "shadows": "coconut.compiler.util.should_indent"
  },
  "type": "import"
 },
 "coconut.command.command.showpath": {
  "data": {
   "shadows": "coconut.command.util.showpath"
  },
  "type": "import"
 },
 "coconut.command.command.stdin_readable": {
  "data": {
   "shadows": "coconut.command.util.stdin_readable"
  },
  "type": "import"
 },
 "coconut.command.command.stub_dir": {
  "data": {
   "shadows": "coconut.constants.stub_dir"
  },
  "type": "import"
 },
 "coconut.command.command.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.command.command.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "coconut.command.command.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "coconut.command.command.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.command.command.verbose_mypy_args": {
  "data": {
   "shadows": "coconut.constants.verbose_mypy_args"
  },
  "type": "import"
 },
 "coconut.command.command.watch_interval": {
  "data": {
   "shadows": "coconut.constants.watch_interval"
  },
  "type": "import"
 },
 "coconut.command.command.writefile": {
  "data": {
   "shadows": "coconut.command.util.writefile"
  },
  "type": "import"
 },
 "coconut.command.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.command.mypy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "module"
 },
 "coconut.command.mypy.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.command.mypy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.command.mypy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.command.mypy.mypy_run": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "BaseException",
    "coconut.command.mypy.traceback",
    "mypy.api.run"
   ]
  },
  "type": "function"
 },
 "coconut.command.mypy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.command.mypy.run": {
  "data": {
   "shadows": "mypy.api.run"
  },
  "type": "import"
 },
 "coconut.command.mypy.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "coconut.command.mypy.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.command.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.command.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.command.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "coconut.command.util.BrokenProcessPool": {
  "data": {
   "shadows": "concurrent.futures.process.BrokenProcessPool"
  },
  "type": "import"
 },
 "coconut.command.util.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.command.util.CoconutLexer": {
  "data": {
   "shadows": "coconut.highlighter.CoconutLexer"
  },
  "type": "import"
 },
 "coconut.command.util.Prompt": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "coconut.constants.default_mouse_support",
    "coconut.constants.default_multiline",
    "coconut.constants.default_vi_mode",
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.command.util.Prompt.__init__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "coconut.command.util.os",
    "coconut.command.util.prompt_toolkit",
    "coconut.constants.default_style",
    "coconut.constants.style_env_var"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Prompt.input": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "AssertionError",
    "EOFError",
    "Exception",
    "coconut.command.util.prompt_toolkit",
    "coconut.command.util.sys",
    "coconut.constants.main_prompt",
    "coconut.constants.more_prompt",
    "coconut.exceptions.internal_assert",
    "coconut.terminal.logger.display_exc",
    "coconut.terminal.logger.show_sig",
    "input"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Prompt.prompt_kwargs": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "coconut.command.util.prompt_toolkit",
    "coconut.command.util.pygments",
    "coconut.highlighter.CoconutLexer"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Prompt.set_style": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "coconut.command.util.prompt_toolkit",
    "coconut.command.util.pygments",
    "coconut.command.util.sys",
    "coconut.exceptions.CoconutException",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.command.util.Runner.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "coconut.command.util.sys"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner.build_vars": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "coconut.constants.fixpath",
    "coconut.constants.reserved_vars",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner.fix_pickle": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "coconut.__coconut__",
    "dir",
    "getattr"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner.handling_errors": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "BaseException",
    "SystemExit",
    "coconut.command.util.sys",
    "coconut.command.util.traceback",
    "coconut.constants.num_added_tb_layers",
    "contextlib.contextmanager",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner.run": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "coconut.command.util.exec_func",
    "coconut.command.util.interpret",
    "eval",
    "run_func"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner.run_file": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "coconut.command.util.run_file",
    "coconut.command.util.splitname",
    "coconut.constants.fixpath"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.Runner.store": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "coconut.command.util.Runner.update_vars": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "coconut.command.util.Runner.was_run_code": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "coconut.command.util.WINDOWS": {
  "data": {
   "shadows": "coconut.constants.WINDOWS"
  },
  "type": "import"
 },
 "coconut.command.util.__coconut__": {
  "data": {
   "shadows": "coconut.__coconut__"
  },
  "type": "import"
 },
 "coconut.command.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.command.util.call_output": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "coconut.command.util.subprocess",
    "coconut.command.util.sys",
    "coconut.exceptions.get_encoding"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "coconut.command.util.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "coconut.command.util.default_encoding": {
  "data": {
   "shadows": "coconut.constants.default_encoding"
  },
  "type": "import"
 },
 "coconut.command.util.default_mouse_support": {
  "data": {
   "shadows": "coconut.constants.default_mouse_support"
  },
  "type": "import"
 },
 "coconut.command.util.default_multiline": {
  "data": {
   "shadows": "coconut.constants.default_multiline"
  },
  "type": "import"
 },
 "coconut.command.util.default_style": {
  "data": {
   "shadows": "coconut.constants.default_style"
  },
  "type": "import"
 },
 "coconut.command.util.default_vi_mode": {
  "data": {
   "shadows": "coconut.constants.default_vi_mode"
  },
  "type": "import"
 },
 "coconut.command.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.command.util.documentation_url": {
  "data": {
   "shadows": "coconut.constants.documentation_url"
  },
  "type": "import"
 },
 "coconut.command.util.exec_func": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "exec"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.fixpath": {
  "data": {
   "shadows": "coconut.constants.fixpath"
  },
  "type": "import"
 },
 "coconut.command.util.get_encoding": {
  "data": {
   "shadows": "coconut.exceptions.get_encoding"
  },
  "type": "import"
 },
 "coconut.command.util.handling_broken_process_pool": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "coconut.command.util.sys",
    "concurrent.futures.process.BrokenProcessPool",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "coconut.command.util.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.command.util.interpret": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "SyntaxError",
    "ascii",
    "coconut.command.util.exec_func",
    "eval",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.is_special_dir": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "coconut.command.util.os"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.kill_children": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ImportError",
    "coconut.command.util.psutil",
    "coconut.terminal.logger.warn"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.launch_documentation": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "coconut.command.util.webbrowser",
    "coconut.constants.documentation_url"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.launch_tutorial": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "coconut.command.util.webbrowser",
    "coconut.constants.tutorial_url"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.logger": {
  "data": {
   "shadows": "coconut.terminal.logger"
  },
  "type": "import"
 },
 "coconut.command.util.main_prompt": {
  "data": {
   "shadows": "coconut.constants.main_prompt"
  },
  "type": "import"
 },
 "coconut.command.util.minimum_recursion_limit": {
  "data": {
   "shadows": "coconut.constants.minimum_recursion_limit"
  },
  "type": "import"
 },
 "coconut.command.util.more_prompt": {
  "data": {
   "shadows": "coconut.constants.more_prompt"
  },
  "type": "import"
 },
 "coconut.command.util.multiprocess_wrapper": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.command.util.multiprocess_wrapper.__call__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "coconut.command.util.sys",
    "coconut.terminal.logger.copy_from",
    "getattr"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.multiprocess_wrapper.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "coconut.command.util.sys",
    "coconut.terminal.logger",
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.mypy_path_env_var": {
  "data": {
   "shadows": "coconut.constants.mypy_path_env_var"
  },
  "type": "import"
 },
 "coconut.command.util.num_added_tb_layers": {
  "data": {
   "shadows": "coconut.constants.num_added_tb_layers"
  },
  "type": "import"
 },
 "coconut.command.util.openfile": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "coconut.constants.default_encoding",
    "open"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "coconut.command.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.command.util.prompt_toolkit": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "coconut.command.util.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "coconut.command.util.pygments": {
  "data": {
   "shadows": "pygments"
  },
  "type": "import"
 },
 "coconut.command.util.readfile": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.readline": {
  "data": {
   "shadows": "readline"
  },
  "type": "import"
 },
 "coconut.command.util.rem_encoding": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.reserved_vars": {
  "data": {
   "shadows": "coconut.constants.reserved_vars"
  },
  "type": "import"
 },
 "coconut.command.util.run_cmd": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ImportError",
    "coconut.command.util.call_output",
    "coconut.command.util.subprocess",
    "coconut.exceptions.internal_assert",
    "coconut.terminal.logger.log_cmd",
    "isinstance",
    "list",
    "shutil.which"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.run_file": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "coconut.command.util.imp",
    "coconut.command.util.runpy",
    "coconut.command.util.splitname",
    "vars"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.runpy": {
  "data": {
   "shadows": "runpy"
  },
  "type": "import"
 },
 "coconut.command.util.select": {
  "data": {
   "shadows": "select.select"
  },
  "type": "import"
 },
 "coconut.command.util.set_mypy_path": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "coconut.command.util.os",
    "coconut.constants.mypy_path_env_var",
    "coconut.terminal.logger.log"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.set_recursion_limit": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "coconut.command.util.sys",
    "coconut.constants.minimum_recursion_limit",
    "coconut.exceptions.CoconutException",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.showpath": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "coconut.command.util.os",
    "coconut.terminal.logger.verbose",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.splitname": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "coconut.command.util.os"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.stdin_readable": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "coconut.command.util.sys",
    "coconut.constants.WINDOWS",
    "coconut.terminal.logger.log_exc",
    "select.select"
   ]
  },
  "type": "function"
 },
 "coconut.command.util.style_env_var": {
  "data": {
   "shadows": "coconut.constants.style_env_var"
  },
  "type": "import"
 },
 "coconut.command.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "coconut.command.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.command.util.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "coconut.command.util.tutorial_url": {
  "data": {
   "shadows": "coconut.constants.tutorial_url"
  },
  "type": "import"
 },
 "coconut.command.util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.command.util.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "coconut.command.util.which": {
  "data": {
   "shadows": "shutil.which"
  },
  "type": "import"
 },
 "coconut.command.util.writefile": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "coconut.command.watch": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "module"
 },
 "coconut.command.watch.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.command.watch.FileSystemEventHandler": {
  "data": {
   "shadows": "watchdog.events.FileSystemEventHandler"
  },
  "type": "import"
 },
 "coconut.command.watch.Observer": {
  "data": {
   "shadows": "watchdog.observers.Observer"
  },
  "type": "import"
 },
 "coconut.command.watch.RecompilationWatcher": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "watchdog.events.FileSystemEventHandler"
   ]
  },
  "type": "class"
 },
 "coconut.command.watch.RecompilationWatcher.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "coconut.command.watch.RecompilationWatcher",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.command.watch.RecompilationWatcher.keep_watching": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "coconut.command.watch.RecompilationWatcher.on_modified": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "coconut.command.watch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.command.watch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.command.watch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.command.watch.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.compiler": {
  "data": {},
  "type": "module"
 },
 "coconut.compiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.compiler.compiler": {
  "data": {},
  "type": "module"
 },
 "coconut.compiler.compiler.CoconutDeferredSyntaxError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutDeferredSyntaxError"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutInternalException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutInternalException"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutParseError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutParseError"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutStyleError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutStyleError"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutSyntaxError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutSyntaxError"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutSyntaxWarning": {
  "data": {
   "shadows": "coconut.exceptions.CoconutSyntaxWarning"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.CoconutTargetError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutTargetError"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.Compiler": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "coconut.compiler.grammar.Grammar"
   ]
  },
  "type": "class"
 },
 "coconut.compiler.compiler.Compiler.__init__": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.__reduce__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "coconut.compiler.compiler.Compiler"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.add_ref": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.adjust": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.apply_procs": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "coconut.terminal.logger.log_tag",
    "get_proc",
    "proc",
    "proc.__name__"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.async_comp_check": {
  "data": {
   "lineno": 1733
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.async_keyword_check": {
  "data": {
   "lineno": 1729
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.augassign_handle": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "coconut.compiler.grammar.lazy_list_handle",
    "coconut.constants.lazy_chain_var",
    "coconut.exceptions.internal_assert",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.await_keyword_check": {
  "data": {
   "lineno": 1737
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.bind": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "coconut.compiler.util.attach",
    "coconut.terminal.trace"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.check_py": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "coconut.constants.get_target_info",
    "coconut.exceptions.CoconutTargetError",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.check_strict": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutStyleError",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.classlist_handle": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.CoconutStyleError",
    "coconut.exceptions.CoconutTargetError",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.comment_handle": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "coconut.pyparsing.lineno",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.complain_on_err": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException",
    "coconut.pyparsing.ParseBaseException",
    "coconut.terminal.complain",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.complex_raise_stmt_handle": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "coconut.constants.raise_from_var",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.data_handle": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.decoratable_normal_funcdef_stmt_handle": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "coconut.compiler.util.ind_change",
    "coconut.compiler.util.match_in",
    "coconut.compiler.util.parse",
    "coconut.compiler.util.split_comment",
    "coconut.compiler.util.split_leading_indent",
    "coconut.compiler.util.split_trailing_indent",
    "coconut.compiler.util.transform",
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.constants.tre_mock_var",
    "coconut.constants.tre_store_var",
    "coconut.exceptions.CoconutInternalException",
    "coconut.pyparsing.Keyword",
    "coconut.pyparsing.line",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.destructuring_stmt_handle": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "coconut.compiler.grammar.match_handle",
    "coconut.constants.match_to_var",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.dict_comp_handle": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.endline_handle": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "coconut.pyparsing.lineno",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.endline_repl": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "coconut.constants.lnwrapper",
    "coconut.exceptions.CoconutInternalException",
    "coconut.pyparsing.line",
    "coconut.pyparsing.line.endswith",
    "coconut.pyparsing.line.lstrip",
    "coconut.pyparsing.line.rsplit",
    "coconut.pyparsing.line.rstrip",
    "coconut.terminal.complain"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.endline_semicolon_check": {
  "data": {
   "lineno": 1687
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.eval_now": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "bytes",
    "eval",
    "int",
    "isinstance",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.exec_stmt_handle": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.f_string_check": {
  "data": {
   "lineno": 1741
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.genhash": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "coconut.constants.checksum",
    "coconut.constants.default_encoding",
    "coconut.constants.hash_sep.join",
    "hex",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.get_ref": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "int"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.getheader": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "coconut.compiler.header.getheader"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.header_proc": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "coconut.compiler.header.minify"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.import_handle": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "coconut.compiler.compiler.universal_import",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.ind_proc": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "coconut.compiler.util.addskip",
    "coconut.compiler.util.paren_change",
    "coconut.compiler.util.rem_comment",
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.CoconutStyleError",
    "coconut.exceptions.CoconutSyntaxError",
    "coconut.pyparsing.line",
    "coconut.pyparsing.line.lstrip",
    "coconut.pyparsing.line.rstrip",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.lambdef_check": {
  "data": {
   "lineno": 1683
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.leading_whitespace": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "coconut.constants.tabworth",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.ln_comment": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.make_err": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "coconut.pyparsing.col",
    "coconut.pyparsing.line",
    "coconut.pyparsing.lineno",
    "errtype"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.make_parse_err": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutParseError"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.make_syntax_err": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutSyntaxError"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.matrix_at_check": {
  "data": {
   "lineno": 1725
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.name_check": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "coconut.constants.reserved_prefix",
    "coconut.exceptions.CoconutSyntaxError",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.name_match_funcdef_handle": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "coconut.compiler.compiler.split_args_list",
    "coconut.compiler.matching.Matcher",
    "coconut.constants.closeindent",
    "coconut.constants.match_check_var",
    "coconut.constants.match_to_args_var",
    "coconut.constants.match_to_kwargs_var",
    "coconut.constants.openindent",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.nonlocal_check": {
  "data": {
   "lineno": 1713
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.op_match_funcdef_handle": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "coconut.compiler.grammar.get_infix_items",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "RuntimeError",
    "coconut.compiler.compiler.sys",
    "coconut.compiler.util.parse",
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.CoconutException",
    "coconut.pyparsing.ParseBaseException",
    "coconut.terminal.logger.gather_parsing_stats",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_block": {
  "data": {
   "lineno": 1774
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_debug": {
  "data": {
   "lineno": 1786
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_eval": {
  "data": {
   "lineno": 1782
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_exec": {
  "data": {
   "lineno": 1762
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_file": {
  "data": {
   "lineno": 1754
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_package": {
  "data": {
   "lineno": 1766
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_single": {
  "data": {
   "lineno": 1750
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.parse_sys": {
  "data": {
   "lineno": 1778
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.passthrough_proc": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "coconut.compiler.util.addskip",
    "coconut.compiler.util.paren_change",
    "coconut.exceptions.CoconutSyntaxError",
    "coconut.pyparsing.lineno",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.passthrough_repl": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "coconut.constants.unwrapper",
    "coconut.exceptions.CoconutInternalException",
    "coconut.pyparsing.nums",
    "coconut.terminal.complain",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.pattern_error": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "ascii",
    "coconut.constants.closeindent",
    "coconut.constants.match_check_var",
    "coconut.constants.match_err_var",
    "coconut.constants.openindent",
    "coconut.exceptions.clean",
    "coconut.pyparsing.line"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.polish": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.post": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.pre": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "coconut.terminal.logger.log_tag",
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.prepare": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutStyleError",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.reformat": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.reind_proc": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "coconut.compiler.util.ind_change",
    "coconut.compiler.util.split_comment",
    "coconut.compiler.util.split_leading_indent",
    "coconut.compiler.util.split_trailing_indent",
    "coconut.exceptions.CoconutInternalException",
    "coconut.pyparsing.line",
    "coconut.pyparsing.line.strip",
    "coconut.terminal.complain"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.repl_proc": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.reset": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_docstring": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_letter_literal_handle": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "coconut.compiler.compiler.set_to_tuple",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.set_literal_handle": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "coconut.compiler.compiler.set_to_tuple",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.setup": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ascii",
    "coconut.compiler.header.minify",
    "coconut.constants.pseudo_targets",
    "coconut.constants.specific_targets",
    "coconut.constants.targets",
    "coconut.exceptions.CoconutException",
    "coconut.terminal.logger.log_vars",
    "locals",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.star_assign_item_check": {
  "data": {
   "lineno": 1717
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.star_expr_check": {
  "data": {
   "lineno": 1721
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.stmt_lambda_name": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "coconut.constants.stmt_lambda_var",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.stmt_lambda_proc": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "coconut.compiler.util.match_in",
    "coconut.compiler.util.split_leading_indent",
    "coconut.pyparsing.Keyword",
    "coconut.pyparsing.line",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.stmt_lambdef_handle": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.CoconutInternalException",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.str_proc": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "coconut.compiler.util.addskip",
    "coconut.compiler.util.count_end",
    "coconut.constants.holds",
    "coconut.exceptions.CoconutSyntaxError",
    "coconut.pyparsing.lineno",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.str_repl": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "coconut.constants.strwrapper",
    "coconut.constants.unwrapper",
    "coconut.exceptions.CoconutInternalException",
    "coconut.pyparsing.line",
    "coconut.pyparsing.nums",
    "coconut.terminal.complain",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.strict_err_or_warn": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutStyleError",
    "coconut.exceptions.CoconutSyntaxWarning",
    "coconut.terminal.logger.warn_err"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.tabideal": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "coconut.constants.tabideal",
    "property"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.target_info": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "coconut.constants.get_target_info",
    "property"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.target_info_len2": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "coconut.compiler.util.get_target_info_len2",
    "property"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.tre_return": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "coconut.compiler.util.attach",
    "coconut.pyparsing.Keyword"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.tre_return.tre_return_handle": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "coconut.compiler.util.ignore_transform",
    "coconut.compiler.util.match_in",
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.constants.tre_mock_var",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.typed_assign_stmt_handle": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.typedef_handle": {
  "data": {
   "lineno": 1622,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.u_string_check": {
  "data": {
   "lineno": 1691
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.unsafe_typedef_handle": {
  "data": {
   "lineno": 1613
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.warm_up": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.with_stmt_handle": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_comment": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "coconut.constants.unwrapper"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_line_number": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "coconut.constants.lnwrapper"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_passthrough": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "coconut.constants.unwrapper"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_str": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "coconut.constants.strwrapper",
    "coconut.constants.unwrapper"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_str_of": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ascii",
    "coconut.exceptions.internal_assert"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.wrap_typedef": {
  "data": {
   "lineno": 1617
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Compiler.yield_from_handle": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.constants.yield_from_var",
    "coconut.constants.yield_item_var",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.Grammar": {
  "data": {
   "shadows": "coconut.compiler.grammar.Grammar"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.Keyword": {
  "data": {
   "shadows": "coconut.pyparsing.Keyword"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.Matcher": {
  "data": {
   "shadows": "coconut.compiler.matching.Matcher"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.ParseBaseException": {
  "data": {
   "shadows": "coconut.pyparsing.ParseBaseException"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.addskip": {
  "data": {
   "shadows": "coconut.compiler.util.addskip"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.attach": {
  "data": {
   "shadows": "coconut.compiler.util.attach"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.checksum": {
  "data": {
   "shadows": "coconut.constants.checksum"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.clean": {
  "data": {
   "shadows": "coconut.exceptions.clean"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.closeindent": {
  "data": {
   "shadows": "coconut.constants.closeindent"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.col": {
  "data": {
   "shadows": "coconut.pyparsing.col"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.complain": {
  "data": {
   "shadows": "coconut.terminal.complain"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.count_end": {
  "data": {
   "shadows": "coconut.compiler.util.count_end"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.default_encoding": {
  "data": {
   "shadows": "coconut.constants.default_encoding"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.get_infix_items": {
  "data": {
   "shadows": "coconut.compiler.grammar.get_infix_items"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.get_target_info": {
  "data": {
   "shadows": "coconut.constants.get_target_info"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.get_target_info_len2": {
  "data": {
   "shadows": "coconut.compiler.util.get_target_info_len2"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.getheader": {
  "data": {
   "shadows": "coconut.compiler.header.getheader"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.getline": {
  "data": {
   "shadows": "coconut.pyparsing.line"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.hash_sep": {
  "data": {
   "shadows": "coconut.constants.hash_sep"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.holds": {
  "data": {
   "shadows": "coconut.constants.holds"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.ignore_transform": {
  "data": {
   "shadows": "coconut.compiler.util.ignore_transform"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.import_as_var": {
  "data": {
   "shadows": "coconut.constants.import_as_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.import_stmt": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "coconut.compiler.compiler.ind_change": {
  "data": {
   "shadows": "coconut.compiler.util.ind_change"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.lazy_chain_var": {
  "data": {
   "shadows": "coconut.constants.lazy_chain_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.lazy_list_handle": {
  "data": {
   "shadows": "coconut.compiler.grammar.lazy_list_handle"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.lineno": {
  "data": {
   "shadows": "coconut.pyparsing.lineno"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.lnwrapper": {
  "data": {
   "shadows": "coconut.constants.lnwrapper"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.logger": {
  "data": {
   "shadows": "coconut.terminal.logger"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_check_var": {
  "data": {
   "shadows": "coconut.constants.match_check_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_err_var": {
  "data": {
   "shadows": "coconut.constants.match_err_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_handle": {
  "data": {
   "shadows": "coconut.compiler.grammar.match_handle"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_in": {
  "data": {
   "shadows": "coconut.compiler.util.match_in"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_to_args_var": {
  "data": {
   "shadows": "coconut.constants.match_to_args_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_to_kwargs_var": {
  "data": {
   "shadows": "coconut.constants.match_to_kwargs_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.match_to_var": {
  "data": {
   "shadows": "coconut.constants.match_to_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.minify": {
  "data": {
   "shadows": "coconut.compiler.header.minify"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.nums": {
  "data": {
   "shadows": "coconut.pyparsing.nums"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.openindent": {
  "data": {
   "shadows": "coconut.constants.openindent"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.paren_change": {
  "data": {
   "shadows": "coconut.compiler.util.paren_change"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.parse": {
  "data": {
   "shadows": "coconut.compiler.util.parse"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.pseudo_targets": {
  "data": {
   "shadows": "coconut.constants.pseudo_targets"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.py3_to_py2_stdlib": {
  "data": {
   "shadows": "coconut.constants.py3_to_py2_stdlib"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.raise_from_var": {
  "data": {
   "shadows": "coconut.constants.raise_from_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.rem_comment": {
  "data": {
   "shadows": "coconut.compiler.util.rem_comment"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.reserved_prefix": {
  "data": {
   "shadows": "coconut.constants.reserved_prefix"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.set_to_tuple": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.single_import": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "coconut.compiler.compiler.import_stmt",
    "coconut.constants.closeindent",
    "coconut.constants.import_as_var",
    "coconut.constants.openindent",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.specific_targets": {
  "data": {
   "shadows": "coconut.constants.specific_targets"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.split_args_list": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.split_comment": {
  "data": {
   "shadows": "coconut.compiler.util.split_comment"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.split_leading_indent": {
  "data": {
   "shadows": "coconut.compiler.util.split_leading_indent"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.split_trailing_indent": {
  "data": {
   "shadows": "coconut.compiler.util.split_trailing_indent"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.stmt_lambda_var": {
  "data": {
   "shadows": "coconut.constants.stmt_lambda_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.strwrapper": {
  "data": {
   "shadows": "coconut.constants.strwrapper"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.tabideal": {
  "data": {
   "shadows": "coconut.constants.tabideal"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.tabworth": {
  "data": {
   "shadows": "coconut.constants.tabworth"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.targets": {
  "data": {
   "shadows": "coconut.constants.targets"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.trace": {
  "data": {
   "shadows": "coconut.terminal.trace"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.transform": {
  "data": {
   "shadows": "coconut.compiler.util.transform"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.tre_mock_var": {
  "data": {
   "shadows": "coconut.constants.tre_mock_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.tre_store_var": {
  "data": {
   "shadows": "coconut.constants.tre_store_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.universal_import": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "coconut.compiler.compiler.single_import",
    "coconut.compiler.util.get_target_info_len2",
    "coconut.constants.closeindent",
    "coconut.constants.get_target_info",
    "coconut.constants.openindent",
    "coconut.constants.py3_to_py2_stdlib",
    "len",
    "range",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.compiler.unwrapper": {
  "data": {
   "shadows": "coconut.constants.unwrapper"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.yield_from_var": {
  "data": {
   "shadows": "coconut.constants.yield_from_var"
  },
  "type": "import"
 },
 "coconut.compiler.compiler.yield_item_var": {
  "data": {
   "shadows": "coconut.constants.yield_item_var"
  },
  "type": "import"
 },
 "coconut.compiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.compiler.grammar": {
  "data": {
   "symbols_in_volume": [
    "coconut.compiler.grammar.set_grammar_names"
   ]
  },
  "type": "module"
 },
 "coconut.compiler.grammar.CaselessLiteral": {
  "data": {
   "shadows": "coconut.pyparsing.CaselessLiteral"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.CoconutDeferredSyntaxError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutDeferredSyntaxError"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.CoconutInternalException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutInternalException"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Combine": {
  "data": {
   "shadows": "coconut.pyparsing.Combine"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.FollowedBy": {
  "data": {
   "shadows": "coconut.pyparsing.FollowedBy"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Forward": {
  "data": {
   "shadows": "coconut.pyparsing.Forward"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Grammar": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "attrgetter_atom_tokens",
    "coconut.compiler.grammar.add_paren_handle",
    "coconut.compiler.grammar.attrgetter_atom_handle",
    "coconut.compiler.grammar.case_handle",
    "coconut.compiler.grammar.chain_handle",
    "coconut.compiler.grammar.class_suite_handle",
    "coconut.compiler.grammar.comp_pipe_handle",
    "coconut.compiler.grammar.compose_item_handle",
    "coconut.compiler.grammar.decorator_handle",
    "coconut.compiler.grammar.else_handle",
    "coconut.compiler.grammar.except_handle",
    "coconut.compiler.grammar.function_call_handle",
    "coconut.compiler.grammar.infix_handle",
    "coconut.compiler.grammar.insert_docstring_handle",
    "coconut.compiler.grammar.item_handle",
    "coconut.compiler.grammar.itemgetter_handle",
    "coconut.compiler.grammar.lambdef_handle",
    "coconut.compiler.grammar.lazy_list_handle",
    "coconut.compiler.grammar.make_suite_handle",
    "coconut.compiler.grammar.match_handle",
    "coconut.compiler.grammar.math_funcdef_handle",
    "coconut.compiler.grammar.math_funcdef_suite_handle",
    "coconut.compiler.grammar.namelist_handle",
    "coconut.compiler.grammar.none_coalesce_handle",
    "coconut.compiler.grammar.op_funcdef_handle",
    "coconut.compiler.grammar.pipe_handle",
    "coconut.compiler.grammar.re",
    "coconut.compiler.grammar.split_func_name_args_params_handle",
    "coconut.compiler.grammar.subscriptgroup_handle",
    "coconut.compiler.grammar.tco_return_handle",
    "coconut.compiler.grammar.typedef_callable_handle",
    "coconut.compiler.util.addspace",
    "coconut.compiler.util.attach",
    "coconut.compiler.util.condense",
    "coconut.compiler.util.disable_inside",
    "coconut.compiler.util.disable_outside",
    "coconut.compiler.util.exprlist",
    "coconut.compiler.util.fixto",
    "coconut.compiler.util.itemlist",
    "coconut.compiler.util.longest",
    "coconut.compiler.util.maybeparens",
    "coconut.compiler.util.tokenlist",
    "coconut.constants.closeindent",
    "coconut.constants.const_vars",
    "coconut.constants.keywords",
    "coconut.constants.openindent",
    "coconut.constants.reserved_vars",
    "coconut.constants.strwrapper",
    "coconut.constants.unwrapper",
    "coconut.pyparsing.CaselessLiteral",
    "coconut.pyparsing.Combine",
    "coconut.pyparsing.FollowedBy",
    "coconut.pyparsing.Forward",
    "coconut.pyparsing.Group",
    "coconut.pyparsing.Keyword",
    "coconut.pyparsing.Literal",
    "coconut.pyparsing.OneOrMore",
    "coconut.pyparsing.Optional",
    "coconut.pyparsing.Regex",
    "coconut.pyparsing.StringEnd",
    "coconut.pyparsing.StringStart",
    "coconut.pyparsing.Word",
    "coconut.pyparsing.ZeroOrMore",
    "coconut.pyparsing.hexnums",
    "coconut.pyparsing.nestedExpr",
    "coconut.pyparsing.nums",
    "coconut.pyparsing.originalTextFor",
    "coconut.terminal.trace",
    "comp_pipe_expr",
    "function_call",
    "functools.reduce",
    "itemgetter_atom_tokens",
    "lambdef",
    "match_const",
    "matchlist_and",
    "matchlist_or",
    "matchlist_trailer",
    "name",
    "newline",
    "newline.suppress",
    "object",
    "partial_atom_tokens",
    "simple_stmt",
    "test",
    "testlist",
    "testlist_has_comma"
   ]
  },
  "type": "class"
 },
 "coconut.compiler.grammar.Group": {
  "data": {
   "shadows": "coconut.pyparsing.Group"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Keyword": {
  "data": {
   "shadows": "coconut.pyparsing.Keyword"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Literal": {
  "data": {
   "shadows": "coconut.pyparsing.Literal"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Matcher": {
  "data": {
   "shadows": "coconut.compiler.matching.Matcher"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.OneOrMore": {
  "data": {
   "shadows": "coconut.pyparsing.OneOrMore"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Optional": {
  "data": {
   "shadows": "coconut.pyparsing.Optional"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.ParserElement": {
  "data": {
   "shadows": "coconut.pyparsing.ParserElement"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Regex": {
  "data": {
   "shadows": "coconut.pyparsing.Regex"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.StringEnd": {
  "data": {
   "shadows": "coconut.pyparsing.StringEnd"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.StringStart": {
  "data": {
   "shadows": "coconut.pyparsing.StringStart"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.Word": {
  "data": {
   "shadows": "coconut.pyparsing.Word"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.ZeroOrMore": {
  "data": {
   "shadows": "coconut.pyparsing.ZeroOrMore"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.add_paren_handle": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.addspace": {
  "data": {
   "shadows": "coconut.compiler.util.addspace"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.attach": {
  "data": {
   "shadows": "coconut.compiler.util.attach"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.attrgetter_atom_handle": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "coconut.compiler.grammar.attrgetter_atom_split",
    "coconut.exceptions.CoconutDeferredSyntaxError"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.attrgetter_atom_split": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.case_handle": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "coconut.compiler.grammar.case_to_match",
    "coconut.compiler.grammar.match_handle",
    "coconut.constants.closeindent",
    "coconut.constants.match_check_var",
    "coconut.constants.match_to_var",
    "coconut.constants.openindent",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.case_to_match": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.chain_handle": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "coconut.compiler.grammar.lazy_list_handle",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.class_suite_handle": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.closeindent": {
  "data": {
   "shadows": "coconut.constants.closeindent"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.comp_pipe_handle": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "coconut.compiler.grammar.comp_pipe_info",
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.internal_assert",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.comp_pipe_info": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.compose_item_handle": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.condense": {
  "data": {
   "shadows": "coconut.compiler.util.condense"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.const_vars": {
  "data": {
   "shadows": "coconut.constants.const_vars"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.decorator_handle": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "coconut.constants.decorator_var",
    "coconut.exceptions.CoconutInternalException",
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.decorator_var": {
  "data": {
   "shadows": "coconut.constants.decorator_var"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.disable_inside": {
  "data": {
   "shadows": "coconut.compiler.util.disable_inside"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.disable_outside": {
  "data": {
   "shadows": "coconut.compiler.util.disable_outside"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.else_handle": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.except_handle": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.exprlist": {
  "data": {
   "shadows": "coconut.compiler.util.exprlist"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.fixto": {
  "data": {
   "shadows": "coconut.compiler.util.fixto"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.function_call_handle": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "coconut.compiler.grammar.split_function_call",
    "coconut.compiler.util.join_args"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.get_infix_items": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "callback",
    "coconut.compiler.grammar.infix_error",
    "coconut.exceptions.internal_assert",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.hexnums": {
  "data": {
   "shadows": "coconut.pyparsing.hexnums"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.infix_error": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.infix_handle": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "coconut.compiler.grammar.get_infix_items"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.insert_docstring_handle": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.item_handle": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "coconut.compiler.grammar.split_function_call",
    "coconut.compiler.util.join_args",
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.CoconutInternalException",
    "enumerate",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.itemgetter_handle": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.itemlist": {
  "data": {
   "shadows": "coconut.compiler.util.itemlist"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.join_args": {
  "data": {
   "shadows": "coconut.compiler.util.join_args"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.keywords": {
  "data": {
   "shadows": "coconut.constants.keywords"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.lambdef_handle": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.lazy_list_handle": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.longest": {
  "data": {
   "shadows": "coconut.compiler.util.longest"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.make_suite_handle": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.match_check_var": {
  "data": {
   "shadows": "coconut.constants.match_check_var"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.match_handle": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "KeyError",
    "coconut.compiler.matching.Matcher",
    "coconut.constants.closeindent",
    "coconut.constants.match_check_var",
    "coconut.constants.match_to_var",
    "coconut.constants.openindent",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.match_to_var": {
  "data": {
   "shadows": "coconut.constants.match_to_var"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.math_funcdef_handle": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.math_funcdef_suite_handle": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.maybeparens": {
  "data": {
   "shadows": "coconut.compiler.util.maybeparens"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.namelist_handle": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.nestedExpr": {
  "data": {
   "shadows": "coconut.pyparsing.nestedExpr"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.none_coalesce_handle": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "coconut.constants.none_coalesce_var",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.none_coalesce_var": {
  "data": {
   "shadows": "coconut.constants.none_coalesce_var"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.nums": {
  "data": {
   "shadows": "coconut.pyparsing.nums"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.op_funcdef_handle": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "coconut.compiler.grammar.get_infix_items",
    "coconut.constants.unwrapper"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.openindent": {
  "data": {
   "shadows": "coconut.constants.openindent"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.originalTextFor": {
  "data": {
   "shadows": "coconut.pyparsing.originalTextFor"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.pipe_handle": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "coconut.compiler.grammar.attrgetter_atom_handle",
    "coconut.compiler.grammar.itemgetter_handle",
    "coconut.compiler.grammar.pipe_item_split",
    "coconut.compiler.util.join_args",
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "isinstance",
    "len",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.pipe_item_split": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "coconut.compiler.grammar.attrgetter_atom_split",
    "coconut.compiler.grammar.split_function_call",
    "coconut.compiler.util.join_args",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.reserved_vars": {
  "data": {
   "shadows": "coconut.constants.reserved_vars"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.set_grammar_names": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "coconut.compiler.grammar.Grammar",
    "coconut.pyparsing.ParserElement",
    "isinstance",
    "setattr",
    "vars"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.split_func_name_args_params_handle": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.split_function_call": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutDeferredSyntaxError",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.strwrapper": {
  "data": {
   "shadows": "coconut.constants.strwrapper"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.subscriptgroup_handle": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.tco_return_handle": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.tokenlist": {
  "data": {
   "shadows": "coconut.compiler.util.tokenlist"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.trace": {
  "data": {
   "shadows": "coconut.terminal.trace"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.typedef_callable_handle": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.grammar.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.compiler.grammar.unwrapper": {
  "data": {
   "shadows": "coconut.constants.unwrapper"
  },
  "type": "import"
 },
 "coconut.compiler.header": {
  "data": {},
  "type": "module"
 },
 "coconut.compiler.header.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.compiler.header.allowed_headers": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "coconut.compiler.header.comment": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.compiler.header.comment.__getattr__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "coconut.compiler.header.default_encoding": {
  "data": {
   "shadows": "coconut.constants.default_encoding"
  },
  "type": "import"
 },
 "coconut.compiler.header.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.compiler.header.get_target_info": {
  "data": {
   "shadows": "coconut.constants.get_target_info"
  },
  "type": "import"
 },
 "coconut.compiler.header.get_template": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "coconut.compiler.header.template_dir",
    "coconut.constants.template_ext",
    "open"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.header.gethash": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "coconut.constants.hash_prefix",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.header.getheader": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "CoconutInternalException",
    "coconut.compiler.header.allowed_headers",
    "coconut.compiler.header.get_template",
    "coconut.compiler.header.process_header_args",
    "coconut.compiler.header.section",
    "coconut.exceptions.internal_assert"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.header.hash_prefix": {
  "data": {
   "shadows": "coconut.constants.hash_prefix"
  },
  "type": "import"
 },
 "coconut.compiler.header.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.compiler.header.justify_len": {
  "data": {
   "shadows": "coconut.constants.justify_len"
  },
  "type": "import"
 },
 "coconut.compiler.header.minify": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "coconut.constants.tabideal",
    "coconut.exceptions.internal_assert"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.header.one_num_ver": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "coconut.compiler.header.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "coconut.compiler.header.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.compiler.header.process_header_args": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "coconut.compiler.header.comment",
    "coconut.compiler.header.one_num_ver",
    "coconut.constants.default_encoding",
    "coconut.constants.get_target_info",
    "coconut.constants.hash_prefix",
    "dict"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.header.section": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "coconut.constants.justify_len",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.header.tabideal": {
  "data": {
   "shadows": "coconut.constants.tabideal"
  },
  "type": "import"
 },
 "coconut.compiler.header.template_dir": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "coconut.compiler.header.template_ext": {
  "data": {
   "shadows": "coconut.constants.template_ext"
  },
  "type": "import"
 },
 "coconut.compiler.header.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.compiler.matching": {
  "data": {},
  "type": "module"
 },
 "coconut.compiler.matching.CoconutDeferredSyntaxError": {
  "data": {
   "shadows": "coconut.exceptions.CoconutDeferredSyntaxError"
  },
  "type": "import"
 },
 "coconut.compiler.matching.CoconutInternalException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutInternalException"
  },
  "type": "import"
 },
 "coconut.compiler.matching.Matcher": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "coconut.compiler.matching.Matcher.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.add_check": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.add_def": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.add_guard": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.check_len_in": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.decrement": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.down_a_level": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.duplicate": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "coconut.compiler.matching.Matcher",
    "coconut.constants.match_check_var"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.get_checks": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.get_defs": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.get_temp_var": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "coconut.constants.match_temp_var",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.increment": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.insert_check": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.insert_def": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "get_handler"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_all_in": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_and": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_const": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "coconut.constants.const_vars"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_data": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_dict": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "coconut.constants.sentinel_var",
    "coconut.constants.wildcard",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_function": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_in_args_kwargs": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "coconut.compiler.matching.get_match_names",
    "enumerate",
    "isinstance",
    "len",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_in_kwargs": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "coconut.compiler.matching.get_match_names",
    "coconut.exceptions.CoconutDeferredSyntaxError"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_iterator": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_msequence": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "coconut.exceptions.CoconutInternalException",
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_mstring": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "coconut.exceptions.CoconutDeferredSyntaxError"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_or": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_paren": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_rsequence": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "coconut.exceptions.CoconutInternalException",
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_rstring": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_sequence": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "coconut.exceptions.CoconutInternalException",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_set": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_star": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "isinstance",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_string": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_trailer": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.match_var": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "coconut.constants.wildcard"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.only_self": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.out": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "coconut.compiler.util.paren_join",
    "coconut.constants.closeindent",
    "coconut.constants.match_check_var",
    "coconut.constants.openindent",
    "coconut.constants.sentinel_var"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.set_checks": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.set_defs": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "coconut.compiler.matching.Matcher.set_position": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.compiler.matching.closeindent": {
  "data": {
   "shadows": "coconut.constants.closeindent"
  },
  "type": "import"
 },
 "coconut.compiler.matching.const_vars": {
  "data": {
   "shadows": "coconut.constants.const_vars"
  },
  "type": "import"
 },
 "coconut.compiler.matching.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "coconut.compiler.matching.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.compiler.matching.get_match_names": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "coconut.constants.wildcard",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.matching.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.compiler.matching.match_check_var": {
  "data": {
   "shadows": "coconut.constants.match_check_var"
  },
  "type": "import"
 },
 "coconut.compiler.matching.match_temp_var": {
  "data": {
   "shadows": "coconut.constants.match_temp_var"
  },
  "type": "import"
 },
 "coconut.compiler.matching.openindent": {
  "data": {
   "shadows": "coconut.constants.openindent"
  },
  "type": "import"
 },
 "coconut.compiler.matching.paren_join": {
  "data": {
   "shadows": "coconut.compiler.util.paren_join"
  },
  "type": "import"
 },
 "coconut.compiler.matching.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.compiler.matching.sentinel_var": {
  "data": {
   "shadows": "coconut.constants.sentinel_var"
  },
  "type": "import"
 },
 "coconut.compiler.matching.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.compiler.matching.wildcard": {
  "data": {
   "shadows": "coconut.constants.wildcard"
  },
  "type": "import"
 },
 "coconut.compiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.compiler.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.compiler.util": {
  "data": {
   "symbols_in_volume": [
    "coconut.constants.default_whitespace_chars",
    "coconut.pyparsing.CharsNotIn",
    "coconut.pyparsing.SkipTo",
    "object"
   ]
  },
  "type": "module"
 },
 "coconut.compiler.util.CharsNotIn": {
  "data": {
   "shadows": "coconut.pyparsing.CharsNotIn"
  },
  "type": "import"
 },
 "coconut.compiler.util.CoconutInternalException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutInternalException"
  },
  "type": "import"
 },
 "coconut.compiler.util.Optional": {
  "data": {
   "shadows": "coconut.pyparsing.Optional"
  },
  "type": "import"
 },
 "coconut.compiler.util.ParseElementEnhance": {
  "data": {
   "shadows": "coconut.pyparsing.ParseElementEnhance"
  },
  "type": "import"
 },
 "coconut.compiler.util.ParseException": {
  "data": {
   "shadows": "coconut.pyparsing.ParseException"
  },
  "type": "import"
 },
 "coconut.compiler.util.SkipTo": {
  "data": {
   "shadows": "coconut.pyparsing.SkipTo"
  },
  "type": "import"
 },
 "coconut.compiler.util.Wrap": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "coconut.pyparsing.ParseElementEnhance"
   ]
  },
  "type": "class"
 },
 "coconut.compiler.util.Wrap.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "coconut.compiler.util.Wrap",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.Wrap.parseImpl": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "coconut.compiler.util.Wrap",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.ZeroOrMore": {
  "data": {
   "shadows": "coconut.pyparsing.ZeroOrMore"
  },
  "type": "import"
 },
 "coconut.compiler.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.compiler.util.addskip": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutInternalException",
    "coconut.terminal.complain",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.addspace": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "coconut.compiler.util.attach"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.attach": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "coconut.terminal.logger.wrap_handler"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.closeindent": {
  "data": {
   "shadows": "coconut.constants.closeindent"
  },
  "type": "import"
 },
 "coconut.compiler.util.closes": {
  "data": {
   "shadows": "coconut.constants.closes"
  },
  "type": "import"
 },
 "coconut.compiler.util.complain": {
  "data": {
   "shadows": "coconut.terminal.complain"
  },
  "type": "import"
 },
 "coconut.compiler.util.condense": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "coconut.compiler.util.attach"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "coconut.compiler.util.count_end": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.default_whitespace_chars": {
  "data": {
   "shadows": "coconut.constants.default_whitespace_chars"
  },
  "type": "import"
 },
 "coconut.compiler.util.disable_inside": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "coconut.compiler.util.Wrap",
    "coconut.exceptions.internal_assert",
    "set"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.disable_inside.manage_elem": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "coconut.pyparsing.ParseException",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.disable_inside.manage_item": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.disable_outside": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "coconut.compiler.util.disable_inside"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.compiler.util.exprlist": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "coconut.compiler.util.addspace",
    "coconut.pyparsing.ZeroOrMore"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.fixto": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "coconut.compiler.util.attach",
    "coconut.pyparsing.replaceWith"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.get_target_info": {
  "data": {
   "shadows": "coconut.constants.get_target_info"
  },
  "type": "import"
 },
 "coconut.compiler.util.get_target_info_len2": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "coconut.constants.get_target_info",
    "coconut.exceptions.CoconutInternalException",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.ignore_transform": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "coconut.compiler.util.ind_change": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.compiler.util.itemlist": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "coconut.compiler.util.addspace",
    "coconut.compiler.util.condense",
    "coconut.pyparsing.Optional",
    "coconut.pyparsing.ZeroOrMore"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.join_args": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "coconut.compiler.util.logger": {
  "data": {
   "shadows": "coconut.terminal.logger"
  },
  "type": "import"
 },
 "coconut.compiler.util.longest": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "coconut.compiler.util.skip_whitespace",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.match_in": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "coconut.compiler.util.matches": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.maybeparens": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "coconut.compiler.util.openindent": {
  "data": {
   "shadows": "coconut.constants.openindent"
  },
  "type": "import"
 },
 "coconut.compiler.util.opens": {
  "data": {
   "shadows": "coconut.constants.opens"
  },
  "type": "import"
 },
 "coconut.compiler.util.paren_change": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "coconut.constants.closes",
    "coconut.constants.opens"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.paren_join": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.parse": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "coconut.compiler.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.compiler.util.rem_comment": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "coconut.compiler.util.replaceWith": {
  "data": {
   "shadows": "coconut.pyparsing.replaceWith"
  },
  "type": "import"
 },
 "coconut.compiler.util.should_indent": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "coconut.compiler.util.paren_change",
    "coconut.compiler.util.rem_comment"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.skip_whitespace": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "coconut.compiler.util.split_comment": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "coconut.compiler.util.rem_comment",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.split_leading_indent": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.split_trailing_indent": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.tokenlist": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "coconut.pyparsing.Optional",
    "coconut.pyparsing.ZeroOrMore"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.transform": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "coconut.compiler.util.ignore_transform",
    "coconut.exceptions.CoconutInternalException",
    "coconut.exceptions.internal_assert",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "coconut.compiler.util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.constants": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "coconut.constants.PY33",
    "coconut.constants.PY34",
    "coconut.constants.WINDOWS",
    "coconut.constants._sys_target",
    "coconut.constants.base_dir",
    "coconut.constants.const_vars",
    "coconut.constants.default_recursion_limit",
    "coconut.constants.fixpath",
    "coconut.constants.get_target_info",
    "coconut.constants.icoconut_dir",
    "coconut.constants.icoconut_kernel_names",
    "coconut.constants.keywords",
    "coconut.constants.main_prompt",
    "coconut.constants.match_to_var",
    "coconut.constants.new_issue_url",
    "coconut.constants.os",
    "coconut.constants.packrat_cache_size",
    "coconut.constants.platform",
    "coconut.constants.pseudo_targets",
    "coconut.constants.reserved_prefix",
    "coconut.constants.reserved_vars",
    "coconut.constants.rtfd_url",
    "coconut.constants.setuptools",
    "coconut.constants.specific_targets",
    "coconut.constants.string",
    "coconut.constants.sys",
    "coconut.constants.version_tag",
    "coconut.constants.version_tuple",
    "int",
    "len",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "module"
 },
 "coconut.constants.IPY": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "coconut.constants.PY33": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "coconut.constants.PY34": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "coconut.constants.PYPY": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "coconut.constants.WINDOWS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "coconut.constants._sys_target": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "coconut.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.constants.all_keywords": {
  "data": {
   "lineno": 586
  },
  "type": "constant"
 },
 "coconut.constants.all_reqs": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "coconut.constants.author": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "coconut.constants.author_email": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "coconut.constants.base_dir": {
  "data": {
   "lineno": 465
  },
  "type": "constant"
 },
 "coconut.constants.checksum": {
  "data": {
   "shadows": "zlib.crc32"
  },
  "type": "import"
 },
 "coconut.constants.classifiers": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "coconut.constants.closeindent": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "coconut.constants.closes": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "coconut.constants.coconut_run_args": {
  "data": {
   "lineno": 486
  },
  "type": "constant"
 },
 "coconut.constants.coconut_specific_builtins": {
  "data": {
   "lineno": 507
  },
  "type": "constant"
 },
 "coconut.constants.code_exts": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "coconut.constants.comp_ext": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "coconut.constants.conda_build_env_var": {
  "data": {
   "lineno": 588
  },
  "type": "constant"
 },
 "coconut.constants.const_vars": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "coconut.constants.copyright": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "coconut.constants.decorator_var": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "coconut.constants.default_encoding": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "coconut.constants.default_mouse_support": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "coconut.constants.default_multiline": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "coconut.constants.default_recursion_limit": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "coconut.constants.default_style": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "coconut.constants.default_vi_mode": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "coconut.constants.default_whitespace_chars": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "coconut.constants.description": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "coconut.constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.constants.documentation_url": {
  "data": {
   "lineno": 460
  },
  "type": "constant"
 },
 "coconut.constants.exit_chars": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "coconut.constants.fixpath": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "coconut.constants.os"
   ]
  },
  "type": "function"
 },
 "coconut.constants.get_target_info": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "coconut.constants.hash_prefix": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "coconut.constants.hash_sep": {
  "data": {
   "lineno": 292
  },
  "type": "constant"
 },
 "coconut.constants.highlight_language": {
  "data": {
   "lineno": 613
  },
  "type": "constant"
 },
 "coconut.constants.holds": {
  "data": {
   "lineno": 318
  },
  "type": "constant"
 },
 "coconut.constants.icoconut_dir": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "coconut.constants.icoconut_kernel_dirs": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "coconut.constants.icoconut_kernel_names": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "coconut.constants.import_as_var": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "coconut.constants.info_tabulation": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "coconut.constants.justify_len": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "coconut.constants.keywords": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "coconut.constants.lazy_chain_var": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "coconut.constants.lnwrapper": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "coconut.constants.magic_methods": {
  "data": {
   "lineno": 503
  },
  "type": "constant"
 },
 "coconut.constants.main_prompt": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "coconut.constants.main_sig": {
  "data": {
   "lineno": 441
  },
  "type": "constant"
 },
 "coconut.constants.match_check_var": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "coconut.constants.match_err_var": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "coconut.constants.match_temp_var": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "coconut.constants.match_to_args_var": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "coconut.constants.match_to_kwargs_var": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "coconut.constants.match_to_var": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "coconut.constants.mimetype": {
  "data": {
   "lineno": 584
  },
  "type": "constant"
 },
 "coconut.constants.min_versions": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "coconut.constants.minimum_recursion_limit": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "coconut.constants.more_prompt": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "coconut.constants.mypy_path_env_var": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "coconut.constants.new_issue_url": {
  "data": {
   "lineno": 462
  },
  "type": "constant"
 },
 "coconut.constants.new_operators": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "coconut.constants.none_coalesce_var": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "coconut.constants.num_added_tb_layers": {
  "data": {
   "lineno": 488
  },
  "type": "constant"
 },
 "coconut.constants.openindent": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "coconut.constants.opens": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "coconut.constants.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "coconut.constants.package_name": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "coconut.constants.packrat_cache_size": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "coconut.constants.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "coconut.constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.constants.project": {
  "data": {
   "lineno": 610
  },
  "type": "constant"
 },
 "coconut.constants.pseudo_targets": {
  "data": {
   "lineno": 295
  },
  "type": "constant"
 },
 "coconut.constants.py3_to_py2_stdlib": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "coconut.constants.py_syntax_version": {
  "data": {
   "lineno": 583
  },
  "type": "constant"
 },
 "coconut.constants.raise_from_var": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "coconut.constants.report_this_text": {
  "data": {
   "lineno": 463
  },
  "type": "constant"
 },
 "coconut.constants.reserved_prefix": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "coconut.constants.reserved_vars": {
  "data": {
   "lineno": 387
  },
  "type": "constant"
 },
 "coconut.constants.rtfd_url": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "coconut.constants.script_names": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "coconut.constants.search_terms": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "coconut.constants.sentinel_var": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "coconut.constants.setuptools": {
  "data": {
   "shadows": "setuptools"
  },
  "type": "import"
 },
 "coconut.constants.shebang_regex": {
  "data": {
   "lineno": 501
  },
  "type": "constant"
 },
 "coconut.constants.specific_targets": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "coconut.constants.stmt_lambda_var": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "coconut.constants.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "coconut.constants.strwrapper": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "coconut.constants.stub_dir": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "coconut.constants.style_env_var": {
  "data": {
   "lineno": 452
  },
  "type": "constant"
 },
 "coconut.constants.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.constants.taberrfmt": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "coconut.constants.tabideal": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "coconut.constants.tabworth": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "coconut.constants.targets": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "coconut.constants.template_ext": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "coconut.constants.tre_mock_var": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "coconut.constants.tre_store_var": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "coconut.constants.tutorial_url": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "coconut.constants.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.constants.unwrapper": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "coconut.constants.use_packrat": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "coconut.constants.using_modern_setuptools": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "coconut.constants.varchars": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "coconut.constants.verbose_mypy_args": {
  "data": {
   "lineno": 490
  },
  "type": "constant"
 },
 "coconut.constants.version_banner": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "coconut.constants.version_long": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "coconut.constants.version_str_tag": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "coconut.constants.version_strictly": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "coconut.constants.version_tag": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "coconut.constants.version_tuple": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "coconut.constants.watch_interval": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "coconut.constants.website_url": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "coconut.constants.wildcard": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "coconut.constants.with_toc": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "coconut.constants.without_toc": {
  "data": {
   "lineno": 594
  },
  "type": "constant"
 },
 "coconut.constants.yield_from_var": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "coconut.constants.yield_item_var": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "coconut.convenience": {
  "data": {
   "symbols_in_volume": [
    "coconut.command.Command",
    "coconut.constants.version_long",
    "coconut.constants.version_tag",
    "coconut.convenience.CLI"
   ]
  },
  "type": "module"
 },
 "coconut.convenience.CLI": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "coconut.convenience.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.convenience.Command": {
  "data": {
   "shadows": "coconut.command.Command"
  },
  "type": "import"
 },
 "coconut.convenience.PARSERS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "coconut.convenience.VERSIONS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "coconut.convenience.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.convenience.cmd": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bytes",
    "coconut.convenience.CLI",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.convenience.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.convenience.parse": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ascii",
    "coconut.convenience.CLI",
    "coconut.convenience.PARSERS",
    "coconut.convenience.setup",
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "function"
 },
 "coconut.convenience.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.convenience.setup": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "coconut.convenience.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.convenience.version": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ascii",
    "coconut.convenience.VERSIONS",
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "function"
 },
 "coconut.convenience.version_long": {
  "data": {
   "shadows": "coconut.constants.version_long"
  },
  "type": "import"
 },
 "coconut.convenience.version_tag": {
  "data": {
   "shadows": "coconut.constants.version_tag"
  },
  "type": "import"
 },
 "coconut.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.exceptions": {
  "data": {},
  "type": "module"
 },
 "coconut.exceptions.CoconutDeferredSyntaxError": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutDeferredSyntaxError.__init__": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutDeferredSyntaxError.message": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutException": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutException.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutException.__reduce__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutException.__repr__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutException.__str__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutException.message": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ascii",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutException.syntax_err": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "SyntaxError",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutInternalException": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutInternalException.message": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "coconut.constants.report_this_text",
    "coconut.exceptions.CoconutInternalException",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutParseError": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutSyntaxError"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutParseError.__init__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutStyleError": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutSyntaxError"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutStyleError.message": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutStyleError",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxError": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutSyntaxError.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxError.message": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "coconut.constants.taberrfmt",
    "coconut.exceptions.clean",
    "coconut.pyparsing.lineno",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxError.syntax_err": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutSyntaxWarning": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutSyntaxError",
    "coconut.exceptions.CoconutWarning"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutTargetError": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutSyntaxError"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.CoconutTargetError.__init__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutTargetError.message": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutTargetError",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.CoconutWarning": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException"
   ]
  },
  "type": "class"
 },
 "coconut.exceptions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.exceptions.clean": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "coconut.constants.closeindent",
    "coconut.constants.openindent",
    "coconut.exceptions.get_encoding",
    "coconut.exceptions.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.closeindent": {
  "data": {
   "shadows": "coconut.constants.closeindent"
  },
  "type": "import"
 },
 "coconut.exceptions.debug_clean": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "coconut.exceptions.clean"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.default_encoding": {
  "data": {
   "shadows": "coconut.constants.default_encoding"
  },
  "type": "import"
 },
 "coconut.exceptions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.exceptions.get_encoding": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "coconut.constants.default_encoding",
    "getattr"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.internal_assert": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "callable",
    "coconut.exceptions.CoconutInternalException",
    "condition"
   ]
  },
  "type": "function"
 },
 "coconut.exceptions.lineno": {
  "data": {
   "shadows": "coconut.pyparsing.lineno"
  },
  "type": "import"
 },
 "coconut.exceptions.openindent": {
  "data": {
   "shadows": "coconut.constants.openindent"
  },
  "type": "import"
 },
 "coconut.exceptions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.exceptions.report_this_text": {
  "data": {
   "shadows": "coconut.constants.report_this_text"
  },
  "type": "import"
 },
 "coconut.exceptions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.exceptions.taberrfmt": {
  "data": {
   "shadows": "coconut.constants.taberrfmt"
  },
  "type": "import"
 },
 "coconut.exceptions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.highlighter": {
  "data": {},
  "type": "module"
 },
 "coconut.highlighter.CoconutLexer": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "aliases",
    "coconut.constants.coconut_specific_builtins",
    "coconut.constants.code_exts",
    "coconut.constants.magic_methods",
    "coconut.constants.new_operators",
    "coconut.constants.reserved_vars",
    "py_str",
    "pygments.lexer.bygroups",
    "pygments.lexer.words",
    "pygments.lexers.Python3Lexer",
    "pygments.lexers.Python3Lexer.tokens.copy",
    "pygments.token.Keyword",
    "pygments.token.Name.Builtin",
    "pygments.token.Name.Exception",
    "pygments.token.Name.Function.Magic",
    "pygments.token.Number.Integer",
    "pygments.token.Operator",
    "pygments.token.Text"
   ]
  },
  "type": "class"
 },
 "coconut.highlighter.CoconutLexer.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "coconut.constants.default_encoding",
    "coconut.constants.tabideal",
    "coconut.highlighter.lenient_add_filter",
    "pygments.lexers.Python3Lexer.__init__"
   ]
  },
  "type": "function"
 },
 "coconut.highlighter.CoconutLexer.analyse_text": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "coconut.constants.shebang_regex",
    "pygments.util.shebang_matches"
   ]
  },
  "type": "function"
 },
 "coconut.highlighter.CoconutPythonConsoleLexer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "aliases",
    "pygments.lexers.PythonConsoleLexer"
   ]
  },
  "type": "class"
 },
 "coconut.highlighter.CoconutPythonConsoleLexer.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "coconut.constants.default_encoding",
    "coconut.constants.tabideal",
    "coconut.highlighter.lenient_add_filter",
    "pygments.lexers.PythonConsoleLexer.__init__"
   ]
  },
  "type": "function"
 },
 "coconut.highlighter.CoconutPythonLexer": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "aliases",
    "coconut.constants.template_ext",
    "pygments.lexers.Python3Lexer"
   ]
  },
  "type": "class"
 },
 "coconut.highlighter.CoconutPythonLexer.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "coconut.constants.default_encoding",
    "coconut.constants.tabideal",
    "coconut.highlighter.lenient_add_filter",
    "pygments.lexers.Python3Lexer.__init__"
   ]
  },
  "type": "function"
 },
 "coconut.highlighter.Keyword": {
  "data": {
   "shadows": "pygments.token.Keyword"
  },
  "type": "import"
 },
 "coconut.highlighter.Name": {
  "data": {
   "shadows": "pygments.token.Name"
  },
  "type": "import"
 },
 "coconut.highlighter.Number": {
  "data": {
   "shadows": "pygments.token.Number"
  },
  "type": "import"
 },
 "coconut.highlighter.Operator": {
  "data": {
   "shadows": "pygments.token.Operator"
  },
  "type": "import"
 },
 "coconut.highlighter.Python3Lexer": {
  "data": {
   "shadows": "pygments.lexers.Python3Lexer"
  },
  "type": "import"
 },
 "coconut.highlighter.PythonConsoleLexer": {
  "data": {
   "shadows": "pygments.lexers.PythonConsoleLexer"
  },
  "type": "import"
 },
 "coconut.highlighter.Text": {
  "data": {
   "shadows": "pygments.token.Text"
  },
  "type": "import"
 },
 "coconut.highlighter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.highlighter.bygroups": {
  "data": {
   "shadows": "pygments.lexer.bygroups"
  },
  "type": "import"
 },
 "coconut.highlighter.coconut_specific_builtins": {
  "data": {
   "shadows": "coconut.constants.coconut_specific_builtins"
  },
  "type": "import"
 },
 "coconut.highlighter.code_exts": {
  "data": {
   "shadows": "coconut.constants.code_exts"
  },
  "type": "import"
 },
 "coconut.highlighter.default_encoding": {
  "data": {
   "shadows": "coconut.constants.default_encoding"
  },
  "type": "import"
 },
 "coconut.highlighter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.highlighter.lenient_add_filter": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "coconut.highlighter.magic_methods": {
  "data": {
   "shadows": "coconut.constants.magic_methods"
  },
  "type": "import"
 },
 "coconut.highlighter.new_operators": {
  "data": {
   "shadows": "coconut.constants.new_operators"
  },
  "type": "import"
 },
 "coconut.highlighter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.highlighter.reserved_vars": {
  "data": {
   "shadows": "coconut.constants.reserved_vars"
  },
  "type": "import"
 },
 "coconut.highlighter.shebang_matches": {
  "data": {
   "shadows": "pygments.util.shebang_matches"
  },
  "type": "import"
 },
 "coconut.highlighter.shebang_regex": {
  "data": {
   "shadows": "coconut.constants.shebang_regex"
  },
  "type": "import"
 },
 "coconut.highlighter.tabideal": {
  "data": {
   "shadows": "coconut.constants.tabideal"
  },
  "type": "import"
 },
 "coconut.highlighter.template_ext": {
  "data": {
   "shadows": "coconut.constants.template_ext"
  },
  "type": "import"
 },
 "coconut.highlighter.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.highlighter.words": {
  "data": {
   "shadows": "pygments.lexer.words"
  },
  "type": "import"
 },
 "coconut.icoconut": {
  "data": {},
  "type": "module"
 },
 "coconut.icoconut.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "coconut.icoconut.__main__.main",
    "coconut.icoconut.__main__.sys"
   ]
  },
  "type": "module"
 },
 "coconut.icoconut.__main__.CoconutKernel": {
  "data": {
   "shadows": "coconut.icoconut.CoconutKernel"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.IPKernelApp": {
  "data": {
   "shadows": "ipykernel.kernelapp.IPKernelApp"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.main": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "coconut.icoconut.CoconutKernel",
    "ipykernel.kernelapp.IPKernelApp.launch_instance"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.__main__.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.icoconut.__main__.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.icoconut.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.icoconut.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.icoconut.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.icoconut.root": {
  "data": {
   "symbols_in_volume": [
    "IPython.core.interactiveshell.InteractiveShellABC.register",
    "ImportError",
    "coconut.command.util.Runner",
    "coconut.compiler.Compiler",
    "coconut.constants.conda_build_env_var",
    "coconut.exceptions.CoconutException",
    "coconut.icoconut.root.COMPILER",
    "coconut.icoconut.root.CoconutShell",
    "coconut.icoconut.root.LOAD_MODULE",
    "coconut.icoconut.root.os",
    "coconut.terminal.logger.warn"
   ]
  },
  "type": "module"
 },
 "coconut.icoconut.root.COMPILER": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "coconut.icoconut.root.CachingCompiler": {
  "data": {
   "shadows": "IPython.core.compilerop.CachingCompiler"
  },
  "type": "import"
 },
 "coconut.icoconut.root.CoconutCompiler": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "IPython.core.compilerop.CachingCompiler",
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.icoconut.root.CoconutCompiler.ast_parse": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException",
    "coconut.icoconut.root.CoconutCompiler",
    "coconut.icoconut.root.memoized_parse_sys",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutCompiler.cache": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException",
    "coconut.icoconut.root.CoconutCompiler",
    "coconut.icoconut.root.memoized_parse_sys",
    "coconut.icoconut.root.traceback",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.icoconut.root.CoconutKernel": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "coconut.constants.code_exts",
    "coconut.constants.documentation_url",
    "coconut.constants.mimetype",
    "coconut.constants.py_syntax_version",
    "coconut.constants.tutorial_url",
    "coconut.constants.version_banner",
    "coconut.icoconut.root.CoconutShell",
    "ipykernel.ipkernel.IPythonKernel",
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.icoconut.root.CoconutShell": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "coconut.icoconut.root.CoconutSplitter",
    "ipykernel.zmqshell.ZMQInteractiveShell",
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.icoconut.root.CoconutShell.init_create_namespaces": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "coconut.icoconut.root.CoconutShell",
    "coconut.icoconut.root.RUNNER",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.init_instance_attrs": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "coconut.icoconut.root.CoconutCompiler",
    "coconut.icoconut.root.CoconutShell",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.run_cell": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "coconut.icoconut.root.CoconutShell",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutShell.user_expressions": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutException",
    "coconut.icoconut.root.COMPILER",
    "coconut.icoconut.root.CoconutShell",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutSplitter": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "IPython.core.inputsplitter.IPythonInputSplitter",
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.icoconut.root.CoconutSplitter.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "coconut.icoconut.root.CoconutSplitter",
    "super"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.CoconutSplitter._coconut_compile": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "coconut.compiler.util.should_indent"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.Compiler": {
  "data": {
   "shadows": "coconut.compiler.Compiler"
  },
  "type": "import"
 },
 "coconut.icoconut.root.IPythonInputSplitter": {
  "data": {
   "shadows": "IPython.core.inputsplitter.IPythonInputSplitter"
  },
  "type": "import"
 },
 "coconut.icoconut.root.IPythonKernel": {
  "data": {
   "shadows": "ipykernel.ipkernel.IPythonKernel"
  },
  "type": "import"
 },
 "coconut.icoconut.root.InteractiveShellABC": {
  "data": {
   "shadows": "IPython.core.interactiveshell.InteractiveShellABC"
  },
  "type": "import"
 },
 "coconut.icoconut.root.LOAD_MODULE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "coconut.icoconut.root.RUNNER": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "coconut.icoconut.root.Runner": {
  "data": {
   "shadows": "coconut.command.util.Runner"
  },
  "type": "import"
 },
 "coconut.icoconut.root.ZMQInteractiveShell": {
  "data": {
   "shadows": "ipykernel.zmqshell.ZMQInteractiveShell"
  },
  "type": "import"
 },
 "coconut.icoconut.root.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.icoconut.root.code_exts": {
  "data": {
   "shadows": "coconut.constants.code_exts"
  },
  "type": "import"
 },
 "coconut.icoconut.root.conda_build_env_var": {
  "data": {
   "shadows": "coconut.constants.conda_build_env_var"
  },
  "type": "import"
 },
 "coconut.icoconut.root.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.icoconut.root.documentation_url": {
  "data": {
   "shadows": "coconut.constants.documentation_url"
  },
  "type": "import"
 },
 "coconut.icoconut.root.logger": {
  "data": {
   "shadows": "coconut.terminal.logger"
  },
  "type": "import"
 },
 "coconut.icoconut.root.memoized_parse_block": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "coconut.icoconut.root.COMPILER",
    "coconut.icoconut.root.parse_block_memo",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.memoized_parse_sys": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "coconut.icoconut.root.COMPILER",
    "coconut.icoconut.root.memoized_parse_block"
   ]
  },
  "type": "function"
 },
 "coconut.icoconut.root.mimetype": {
  "data": {
   "shadows": "coconut.constants.mimetype"
  },
  "type": "import"
 },
 "coconut.icoconut.root.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "coconut.icoconut.root.parse_block_memo": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "coconut.icoconut.root.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.icoconut.root.py_syntax_version": {
  "data": {
   "shadows": "coconut.constants.py_syntax_version"
  },
  "type": "import"
 },
 "coconut.icoconut.root.should_indent": {
  "data": {
   "shadows": "coconut.compiler.util.should_indent"
  },
  "type": "import"
 },
 "coconut.icoconut.root.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "coconut.icoconut.root.tutorial_url": {
  "data": {
   "shadows": "coconut.constants.tutorial_url"
  },
  "type": "import"
 },
 "coconut.icoconut.root.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.icoconut.root.version_banner": {
  "data": {
   "shadows": "coconut.constants.version_banner"
  },
  "type": "import"
 },
 "coconut.icoconut.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.load_ipython_extension": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "coconut.__coconut__",
    "vars"
   ]
  },
  "type": "function"
 },
 "coconut.load_ipython_extension.magic": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "coconut.convenience.CoconutException",
    "coconut.convenience.cmd",
    "coconut.convenience.parse",
    "coconut.terminal.logger.display_exc"
   ]
  },
  "type": "function"
 },
 "coconut.logger": {
  "data": {
   "shadows": "coconut.terminal.logger"
  },
  "type": "import"
 },
 "coconut.main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "coconut.main.add_coconut_to_path",
    "coconut.main.main"
   ]
  },
  "type": "module"
 },
 "coconut.main.Command": {
  "data": {
   "shadows": "coconut.command.Command"
  },
  "type": "import"
 },
 "coconut.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.main.add_coconut_to_path": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "coconut.main.sys"
   ]
  },
  "type": "function"
 },
 "coconut.main.coconut": {
  "data": {
   "shadows": "coconut"
  },
  "type": "import"
 },
 "coconut.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.main.main": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "coconut.command.Command"
   ]
  },
  "type": "function"
 },
 "coconut.main.main_run": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "coconut.command.Command"
   ]
  },
  "type": "function"
 },
 "coconut.main.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "coconut.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.main.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.parse": {
  "data": {
   "shadows": "coconut.convenience.parse"
  },
  "type": "import"
 },
 "coconut.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.pyparsing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cPyparsing.__version__",
    "coconut.constants.default_whitespace_chars",
    "coconut.constants.min_versions",
    "coconut.constants.packrat_cache_size",
    "coconut.constants.use_packrat",
    "coconut.constants.varchars",
    "coconut.pyparsing.req_ver_str",
    "coconut.requirements.ver_str_to_tuple",
    "coconut.requirements.ver_tuple_to_str",
    "pyparsing.__version__"
   ]
  },
  "type": "module"
 },
 "coconut.pyparsing.PYPARSING": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "coconut.pyparsing.__version__": {
  "data": {
   "shadows": "pyparsing.__version__"
  },
  "type": "import"
 },
 "coconut.pyparsing._trim_arity": {
  "data": {
   "shadows": "pyparsing._trim_arity"
  },
  "type": "import"
 },
 "coconut.pyparsing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.pyparsing.default_whitespace_chars": {
  "data": {
   "shadows": "coconut.constants.default_whitespace_chars"
  },
  "type": "import"
 },
 "coconut.pyparsing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.pyparsing.min_versions": {
  "data": {
   "shadows": "coconut.constants.min_versions"
  },
  "type": "import"
 },
 "coconut.pyparsing.packrat_cache_size": {
  "data": {
   "shadows": "coconut.constants.packrat_cache_size"
  },
  "type": "import"
 },
 "coconut.pyparsing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.pyparsing.req_ver_str": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "coconut.pyparsing.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.pyparsing.use_packrat": {
  "data": {
   "shadows": "coconut.constants.use_packrat"
  },
  "type": "import"
 },
 "coconut.pyparsing.varchars": {
  "data": {
   "shadows": "coconut.constants.varchars"
  },
  "type": "import"
 },
 "coconut.pyparsing.ver_str_to_tuple": {
  "data": {
   "shadows": "coconut.requirements.ver_str_to_tuple"
  },
  "type": "import"
 },
 "coconut.pyparsing.ver_tuple_to_str": {
  "data": {
   "shadows": "coconut.requirements.ver_tuple_to_str"
  },
  "type": "import"
 },
 "coconut.requirements": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "coconut.constants.IPY",
    "coconut.constants.PY34",
    "coconut.constants.PYPY",
    "coconut.constants.WINDOWS",
    "coconut.constants.using_modern_setuptools",
    "coconut.requirements.add_version_reqs",
    "coconut.requirements.everything_in",
    "coconut.requirements.extras",
    "coconut.requirements.get_reqs",
    "coconut.requirements.print_new_versions",
    "coconut.requirements.requirements",
    "coconut.requirements.unique_wrt",
    "coconut.requirements.uniqueify"
   ]
  },
  "type": "module"
 },
 "coconut.requirements.IPY": {
  "data": {
   "shadows": "coconut.constants.IPY"
  },
  "type": "import"
 },
 "coconut.requirements.PY34": {
  "data": {
   "shadows": "coconut.constants.PY34"
  },
  "type": "import"
 },
 "coconut.requirements.PYPY": {
  "data": {
   "shadows": "coconut.constants.PYPY"
  },
  "type": "import"
 },
 "coconut.requirements.WINDOWS": {
  "data": {
   "shadows": "coconut.constants.WINDOWS"
  },
  "type": "import"
 },
 "coconut.requirements.add_version_reqs": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "coconut.requirements.extras",
    "coconut.requirements.get_reqs",
    "coconut.requirements.requirements"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.all_reqs": {
  "data": {
   "shadows": "coconut.constants.all_reqs"
  },
  "type": "import"
 },
 "coconut.requirements.all_versions": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "coconut.requirements.requests",
    "tuple"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.everything_in": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "coconut.requirements.uniqueify"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.extras": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "coconut.requirements.get_reqs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "coconut.constants.all_reqs",
    "coconut.constants.min_versions",
    "coconut.constants.version_strictly",
    "coconut.requirements.ver_tuple_to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.min_versions": {
  "data": {
   "shadows": "coconut.constants.min_versions"
  },
  "type": "import"
 },
 "coconut.requirements.newer": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.print_new_versions": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "coconut.constants.all_reqs",
    "coconut.constants.min_versions",
    "coconut.requirements.all_versions",
    "coconut.requirements.everything_in",
    "coconut.requirements.newer",
    "coconut.requirements.ver_str_to_tuple",
    "coconut.requirements.ver_tuple_to_str",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "coconut.requirements.requirements": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "coconut.requirements.unique_wrt": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.uniqueify": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.using_modern_setuptools": {
  "data": {
   "shadows": "coconut.constants.using_modern_setuptools"
  },
  "type": "import"
 },
 "coconut.requirements.ver_str_to_tuple": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.ver_tuple_to_str": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.requirements.version_strictly": {
  "data": {
   "shadows": "coconut.constants.version_strictly"
  },
  "type": "import"
 },
 "coconut.root": {
  "data": {
   "symbols_in_volume": [
    "__builtin__.pickle",
    "coconut.root.DEVELOP",
    "coconut.root.PY2",
    "coconut.root.PY26",
    "coconut.root.PY27_HEADER",
    "coconut.root.PY2_HEADER",
    "coconut.root.PY3_HEADER",
    "coconut.root.VERSION",
    "coconut.root.VERSION_NAME",
    "coconut.root.pickle",
    "exec",
    "int",
    "str",
    "sys.version_info"
   ]
  },
  "type": "module"
 },
 "coconut.root.DEVELOP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "coconut.root.PY2": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "coconut.root.PY26": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "coconut.root.PY27_HEADER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "coconut.root.PY2_HEADER": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "coconut.root.PY3_HEADER": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "coconut.root.PYCHECK_HEADER": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "coconut.root.VERSION": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "coconut.root.VERSION_NAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "coconut.root.VERSION_STR": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "coconut.root._coconut": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "coconut.root._coconut_sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.root.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.root.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.root.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "coconut.root.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.root.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.terminal": {
  "data": {
   "symbols_in_volume": [
    "coconut.terminal.Logger",
    "coconut.terminal.logger"
   ]
  },
  "type": "module"
 },
 "coconut.terminal.CoconutException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutException"
  },
  "type": "import"
 },
 "coconut.terminal.CoconutInternalException": {
  "data": {
   "shadows": "coconut.exceptions.CoconutInternalException"
  },
  "type": "import"
 },
 "coconut.terminal.CoconutWarning": {
  "data": {
   "shadows": "coconut.exceptions.CoconutWarning"
  },
  "type": "import"
 },
 "coconut.terminal.Logger": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "coconut.terminal.Logger.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "coconut.terminal.Logger._trace_exc_action": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "coconut.terminal.Logger._trace_start_action": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "coconut.terminal.Logger._trace_success_action": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "coconut.terminal.Logger.copy_from": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "coconut.terminal.Logger.display": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "coconut.terminal.printerr",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.display_exc": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "coconut.constants.taberrfmt",
    "coconut.terminal.printerr"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.gather_parsing_stats": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "coconut.constants.use_packrat",
    "coconut.pyparsing.ParserElement.packrat_cache_stats",
    "coconut.terminal.printerr",
    "coconut.terminal.time",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.get_error": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "coconut.terminal.format_error",
    "coconut.terminal.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.in_path": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "coconut.terminal.printerr"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log_cmd": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log_exc": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log_sig": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "coconut.constants.main_sig"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log_tag": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ascii",
    "coconut.exceptions.debug_clean",
    "coconut.terminal.printerr",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log_trace": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "Exception",
    "ascii",
    "coconut.pyparsing.col",
    "coconut.pyparsing.lineno",
    "coconut.terminal.printerr",
    "int",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.log_vars": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "coconut.terminal.printerr",
    "dict"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.patch_logging": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "coconut.terminal.logging",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.patch_logging.getLogger": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "coconut.terminal.Logger"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.pylog": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "coconut.terminal.printerr",
    "coconut.terminal.traceback"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.show": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "coconut.terminal.Logger.show_error": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "coconut.constants.main_sig"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.show_sig": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "coconut.constants.main_sig"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.show_tabulated": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "coconut.constants.info_tabulation",
    "coconut.exceptions.internal_assert",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.trace": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "coconut.terminal.Logger.warn": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "coconut.exceptions.CoconutWarning"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.warn_err": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.Logger.wrap_handler": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "coconut.terminal.Logger.wrap_handler.wrapped_handler": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "coconut.exceptions.CoconutException",
    "coconut.exceptions.CoconutInternalException",
    "coconut.pyparsing._trim_arity",
    "coconut.terminal.functools",
    "coconut.terminal.traceback"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.ParserElement": {
  "data": {
   "shadows": "coconut.pyparsing.ParserElement"
  },
  "type": "import"
 },
 "coconut.terminal._trim_arity": {
  "data": {
   "shadows": "coconut.pyparsing._trim_arity"
  },
  "type": "import"
 },
 "coconut.terminal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "coconut.terminal.col": {
  "data": {
   "shadows": "coconut.pyparsing.col"
  },
  "type": "import"
 },
 "coconut.terminal.complain": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "coconut.terminal.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "coconut.terminal.debug_clean": {
  "data": {
   "shadows": "coconut.exceptions.debug_clean"
  },
  "type": "import"
 },
 "coconut.terminal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "coconut.terminal.format_error": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "coconut.terminal.traceback",
    "len"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "coconut.terminal.info_tabulation": {
  "data": {
   "shadows": "coconut.constants.info_tabulation"
  },
  "type": "import"
 },
 "coconut.terminal.internal_assert": {
  "data": {
   "shadows": "coconut.exceptions.internal_assert"
  },
  "type": "import"
 },
 "coconut.terminal.lineno": {
  "data": {
   "shadows": "coconut.pyparsing.lineno"
  },
  "type": "import"
 },
 "coconut.terminal.logger": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "coconut.terminal.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "coconut.terminal.main_sig": {
  "data": {
   "shadows": "coconut.constants.main_sig"
  },
  "type": "import"
 },
 "coconut.terminal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "coconut.terminal.printerr": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "coconut.terminal.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "coconut.terminal.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "coconut.terminal.taberrfmt": {
  "data": {
   "shadows": "coconut.constants.taberrfmt"
  },
  "type": "import"
 },
 "coconut.terminal.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "coconut.terminal.trace": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "coconut.terminal.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "coconut.terminal.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "coconut.terminal.use_packrat": {
  "data": {
   "shadows": "coconut.constants.use_packrat"
  },
  "type": "import"
 },
 "coconut.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}