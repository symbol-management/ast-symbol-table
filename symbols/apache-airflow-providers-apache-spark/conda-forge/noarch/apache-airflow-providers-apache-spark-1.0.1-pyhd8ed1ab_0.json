{
 "airflow.providers.apache.spark": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.example_dags": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag": {
  "data": {
   "symbols_in_volume": [
    "airflow.models.DAG",
    "airflow.providers.apache.spark.example_dags.example_spark_dag.args",
    "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator",
    "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator",
    "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator",
    "airflow.utils.dates.days_ago"
   ]
  },
  "type": "module"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.DAG": {
  "data": {
   "shadows": "airflow.models.DAG"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.SparkJDBCOperator": {
  "data": {
   "shadows": "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.SparkSqlOperator": {
  "data": {
   "shadows": "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.SparkSubmitOperator": {
  "data": {
   "shadows": "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.args": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.days_ago": {
  "data": {
   "shadows": "airflow.utils.dates.days_ago"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.jdbc_to_spark_job": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.spark_to_jdbc_job": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.sql_job": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "airflow.providers.apache.spark.example_dags.example_spark_dag.submit_job": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "airflow.providers.apache.spark.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook._build_jdbc_application_arguments": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook._resolve_jdbc_connection": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook.get_conn": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook.submit_jdbc_job": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc.os"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.SparkSubmitHook": {
  "data": {
   "shadows": "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "airflow.providers.apache.spark.hooks.spark_jdbc_script._parse_arguments",
    "airflow.providers.apache.spark.hooks.spark_jdbc_script._run_spark",
    "str"
   ]
  },
  "type": "module"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.SparkSession": {
  "data": {
   "shadows": "pyspark.sql.SparkSession"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script._create_spark_session": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pyspark.sql.SparkSession",
    "pyspark.sql.SparkSession.builder.appName",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script._parse_arguments": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc_script.argparse",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script._run_spark": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc_script._create_spark_session",
    "airflow.providers.apache.spark.hooks.spark_jdbc_script.spark_read_from_jdbc",
    "airflow.providers.apache.spark.hooks.spark_jdbc_script.spark_write_to_jdbc",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.set_common_options": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.spark_read_from_jdbc": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc_script.set_common_options",
    "int",
    "pyspark.sql.SparkSession",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_jdbc_script.spark_write_to_jdbc": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc_script.set_common_options",
    "bool",
    "int",
    "pyspark.sql.SparkSession",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_sql": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook._prepare_command": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "isinstance",
    "list",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook.get_conn": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook.kill": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook.run_query": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.apache.spark.hooks.spark_sql.subprocess",
    "iter",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_sql.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.LoggingMixin": {
  "data": {
   "shadows": "airflow.utils.log.logging_mixin.LoggingMixin"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook",
    "airflow.utils.log.logging_mixin.LoggingMixin"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "RuntimeError",
    "airflow.configuration.conf",
    "airflow.kubernetes.kube_client",
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._build_spark_driver_kill_command": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.os",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._build_spark_submit_command": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._build_track_driver_status_command": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._get_spark_binary_path": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.os",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._mask_cmd": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.re",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._process_spark_status_log": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._process_spark_submit_log": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.re",
    "int",
    "typing.Any",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._resolve_connection": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._resolve_should_track_driver_status": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook._start_driver_status_tracking": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.apache.spark.hooks.spark_submit.subprocess",
    "airflow.providers.apache.spark.hooks.spark_submit.time",
    "iter",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook.get_conn": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook.get_ui_field_behaviour": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook.on_kill": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "airflow.configuration.conf.get",
    "airflow.kubernetes.kube_client.ApiException",
    "airflow.kubernetes.kube_client.get_kube_client",
    "airflow.providers.apache.spark.hooks.spark_submit.kubernetes",
    "airflow.providers.apache.spark.hooks.spark_submit.os",
    "airflow.providers.apache.spark.hooks.spark_submit.subprocess",
    "airflow.security.kerberos.renew_from_kt"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook.submit": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.apache.spark.hooks.spark_submit.os",
    "airflow.providers.apache.spark.hooks.spark_submit.subprocess",
    "iter",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.airflow_conf": {
  "data": {
   "shadows": "airflow.configuration.conf"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.kube_client": {
  "data": {
   "shadows": "airflow.kubernetes.kube_client"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.kubernetes": {
  "data": {
   "shadows": "kubernetes"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.renew_from_kt": {
  "data": {
   "shadows": "airflow.security.kerberos.renew_from_kt"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.hooks.spark_submit.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCHook": {
  "data": {
   "shadows": "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook",
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator._get_hook": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_jdbc.SparkJDBCHook"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator.execute": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkJDBCOperator.on_kill": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.SparkSubmitOperator": {
  "data": {
   "shadows": "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_jdbc.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_sql": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.operators.spark_sql.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_sql.BaseOperator": {
  "data": {
   "shadows": "airflow.models.BaseOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_sql.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_sql.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_sql.SparkSqlHook": {
  "data": {
   "shadows": "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "airflow.models.BaseOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook",
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator._get_hook": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_sql.SparkSqlHook"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator.execute": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_sql.SparkSqlOperator.on_kill": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_sql.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.apache.spark.operators.spark_submit.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.BaseOperator": {
  "data": {
   "shadows": "airflow.models.BaseOperator"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitHook": {
  "data": {
   "shadows": "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "airflow.models.BaseOperator",
    "airflow.settings.WEB_COLORS"
   ]
  },
  "type": "class"
 },
 "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook",
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator._get_hook": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "airflow.providers.apache.spark.hooks.spark_submit.SparkSubmitHook"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator.execute": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_submit.SparkSubmitOperator.on_kill": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "airflow.providers.apache.spark.operators.spark_submit.WEB_COLORS": {
  "data": {
   "shadows": "airflow.settings.WEB_COLORS"
  },
  "type": "import"
 },
 "airflow.providers.apache.spark.operators.spark_submit.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 }
}